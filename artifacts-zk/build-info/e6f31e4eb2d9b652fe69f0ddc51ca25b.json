{"id":"e6f31e4eb2d9b652fe69f0ddc51ca25b","_format":"hh-sol-build-info-1","solcVersion":"0.8.9","solcLongVersion":"0.8.9+commit.e5eed63a","input":{"language":"Solidity","sources":{"@openzeppelin/contracts/access/Ownable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (access/Ownable.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../utils/Context.sol\";\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * By default, the owner account will be the one that deploys the contract. This\n * can later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract Ownable is Context {\n    address private _owner;\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the deployer as the initial owner.\n     */\n    constructor() {\n        _transferOwnership(_msgSender());\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        _checkOwner();\n        _;\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if the sender is not the owner.\n     */\n    function _checkOwner() internal view virtual {\n        require(owner() == _msgSender(), \"Ownable: caller is not the owner\");\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby disabling any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        require(newOwner != address(0), \"Ownable: new owner is the zero address\");\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        address oldOwner = _owner;\n        _owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n}\n"},"@openzeppelin/contracts/token/ERC20/ERC20.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (token/ERC20/ERC20.sol)\n\npragma solidity ^0.8.0;\n\nimport \"./IERC20.sol\";\nimport \"./extensions/IERC20Metadata.sol\";\nimport \"../../utils/Context.sol\";\n\n/**\n * @dev Implementation of the {IERC20} interface.\n *\n * This implementation is agnostic to the way tokens are created. This means\n * that a supply mechanism has to be added in a derived contract using {_mint}.\n * For a generic mechanism see {ERC20PresetMinterPauser}.\n *\n * TIP: For a detailed writeup see our guide\n * https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n * to implement supply mechanisms].\n *\n * The default value of {decimals} is 18. To change this, you should override\n * this function so it returns a different value.\n *\n * We have followed general OpenZeppelin Contracts guidelines: functions revert\n * instead returning `false` on failure. This behavior is nonetheless\n * conventional and does not conflict with the expectations of ERC20\n * applications.\n *\n * Additionally, an {Approval} event is emitted on calls to {transferFrom}.\n * This allows applications to reconstruct the allowance for all accounts just\n * by listening to said events. Other implementations of the EIP may not emit\n * these events, as it isn't required by the specification.\n *\n * Finally, the non-standard {decreaseAllowance} and {increaseAllowance}\n * functions have been added to mitigate the well-known issues around setting\n * allowances. See {IERC20-approve}.\n */\ncontract ERC20 is Context, IERC20, IERC20Metadata {\n    mapping(address => uint256) private _balances;\n\n    mapping(address => mapping(address => uint256)) private _allowances;\n\n    uint256 private _totalSupply;\n\n    string private _name;\n    string private _symbol;\n\n    /**\n     * @dev Sets the values for {name} and {symbol}.\n     *\n     * All two of these values are immutable: they can only be set once during\n     * construction.\n     */\n    constructor(string memory name_, string memory symbol_) {\n        _name = name_;\n        _symbol = symbol_;\n    }\n\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() public view virtual override returns (string memory) {\n        return _name;\n    }\n\n    /**\n     * @dev Returns the symbol of the token, usually a shorter version of the\n     * name.\n     */\n    function symbol() public view virtual override returns (string memory) {\n        return _symbol;\n    }\n\n    /**\n     * @dev Returns the number of decimals used to get its user representation.\n     * For example, if `decimals` equals `2`, a balance of `505` tokens should\n     * be displayed to a user as `5.05` (`505 / 10 ** 2`).\n     *\n     * Tokens usually opt for a value of 18, imitating the relationship between\n     * Ether and Wei. This is the default value returned by this function, unless\n     * it's overridden.\n     *\n     * NOTE: This information is only used for _display_ purposes: it in\n     * no way affects any of the arithmetic of the contract, including\n     * {IERC20-balanceOf} and {IERC20-transfer}.\n     */\n    function decimals() public view virtual override returns (uint8) {\n        return 18;\n    }\n\n    /**\n     * @dev See {IERC20-totalSupply}.\n     */\n    function totalSupply() public view virtual override returns (uint256) {\n        return _totalSupply;\n    }\n\n    /**\n     * @dev See {IERC20-balanceOf}.\n     */\n    function balanceOf(address account) public view virtual override returns (uint256) {\n        return _balances[account];\n    }\n\n    /**\n     * @dev See {IERC20-transfer}.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - the caller must have a balance of at least `amount`.\n     */\n    function transfer(address to, uint256 amount) public virtual override returns (bool) {\n        address owner = _msgSender();\n        _transfer(owner, to, amount);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-allowance}.\n     */\n    function allowance(address owner, address spender) public view virtual override returns (uint256) {\n        return _allowances[owner][spender];\n    }\n\n    /**\n     * @dev See {IERC20-approve}.\n     *\n     * NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on\n     * `transferFrom`. This is semantically equivalent to an infinite approval.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     */\n    function approve(address spender, uint256 amount) public virtual override returns (bool) {\n        address owner = _msgSender();\n        _approve(owner, spender, amount);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-transferFrom}.\n     *\n     * Emits an {Approval} event indicating the updated allowance. This is not\n     * required by the EIP. See the note at the beginning of {ERC20}.\n     *\n     * NOTE: Does not update the allowance if the current allowance\n     * is the maximum `uint256`.\n     *\n     * Requirements:\n     *\n     * - `from` and `to` cannot be the zero address.\n     * - `from` must have a balance of at least `amount`.\n     * - the caller must have allowance for ``from``'s tokens of at least\n     * `amount`.\n     */\n    function transferFrom(address from, address to, uint256 amount) public virtual override returns (bool) {\n        address spender = _msgSender();\n        _spendAllowance(from, spender, amount);\n        _transfer(from, to, amount);\n        return true;\n    }\n\n    /**\n     * @dev Atomically increases the allowance granted to `spender` by the caller.\n     *\n     * This is an alternative to {approve} that can be used as a mitigation for\n     * problems described in {IERC20-approve}.\n     *\n     * Emits an {Approval} event indicating the updated allowance.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     */\n    function increaseAllowance(address spender, uint256 addedValue) public virtual returns (bool) {\n        address owner = _msgSender();\n        _approve(owner, spender, allowance(owner, spender) + addedValue);\n        return true;\n    }\n\n    /**\n     * @dev Atomically decreases the allowance granted to `spender` by the caller.\n     *\n     * This is an alternative to {approve} that can be used as a mitigation for\n     * problems described in {IERC20-approve}.\n     *\n     * Emits an {Approval} event indicating the updated allowance.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     * - `spender` must have allowance for the caller of at least\n     * `subtractedValue`.\n     */\n    function decreaseAllowance(address spender, uint256 subtractedValue) public virtual returns (bool) {\n        address owner = _msgSender();\n        uint256 currentAllowance = allowance(owner, spender);\n        require(currentAllowance >= subtractedValue, \"ERC20: decreased allowance below zero\");\n        unchecked {\n            _approve(owner, spender, currentAllowance - subtractedValue);\n        }\n\n        return true;\n    }\n\n    /**\n     * @dev Moves `amount` of tokens from `from` to `to`.\n     *\n     * This internal function is equivalent to {transfer}, and can be used to\n     * e.g. implement automatic token fees, slashing mechanisms, etc.\n     *\n     * Emits a {Transfer} event.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `from` must have a balance of at least `amount`.\n     */\n    function _transfer(address from, address to, uint256 amount) internal virtual {\n        require(from != address(0), \"ERC20: transfer from the zero address\");\n        require(to != address(0), \"ERC20: transfer to the zero address\");\n\n        _beforeTokenTransfer(from, to, amount);\n\n        uint256 fromBalance = _balances[from];\n        require(fromBalance >= amount, \"ERC20: transfer amount exceeds balance\");\n        unchecked {\n            _balances[from] = fromBalance - amount;\n            // Overflow not possible: the sum of all balances is capped by totalSupply, and the sum is preserved by\n            // decrementing then incrementing.\n            _balances[to] += amount;\n        }\n\n        emit Transfer(from, to, amount);\n\n        _afterTokenTransfer(from, to, amount);\n    }\n\n    /** @dev Creates `amount` tokens and assigns them to `account`, increasing\n     * the total supply.\n     *\n     * Emits a {Transfer} event with `from` set to the zero address.\n     *\n     * Requirements:\n     *\n     * - `account` cannot be the zero address.\n     */\n    function _mint(address account, uint256 amount) internal virtual {\n        require(account != address(0), \"ERC20: mint to the zero address\");\n\n        _beforeTokenTransfer(address(0), account, amount);\n\n        _totalSupply += amount;\n        unchecked {\n            // Overflow not possible: balance + amount is at most totalSupply + amount, which is checked above.\n            _balances[account] += amount;\n        }\n        emit Transfer(address(0), account, amount);\n\n        _afterTokenTransfer(address(0), account, amount);\n    }\n\n    /**\n     * @dev Destroys `amount` tokens from `account`, reducing the\n     * total supply.\n     *\n     * Emits a {Transfer} event with `to` set to the zero address.\n     *\n     * Requirements:\n     *\n     * - `account` cannot be the zero address.\n     * - `account` must have at least `amount` tokens.\n     */\n    function _burn(address account, uint256 amount) internal virtual {\n        require(account != address(0), \"ERC20: burn from the zero address\");\n\n        _beforeTokenTransfer(account, address(0), amount);\n\n        uint256 accountBalance = _balances[account];\n        require(accountBalance >= amount, \"ERC20: burn amount exceeds balance\");\n        unchecked {\n            _balances[account] = accountBalance - amount;\n            // Overflow not possible: amount <= accountBalance <= totalSupply.\n            _totalSupply -= amount;\n        }\n\n        emit Transfer(account, address(0), amount);\n\n        _afterTokenTransfer(account, address(0), amount);\n    }\n\n    /**\n     * @dev Sets `amount` as the allowance of `spender` over the `owner` s tokens.\n     *\n     * This internal function is equivalent to `approve`, and can be used to\n     * e.g. set automatic allowances for certain subsystems, etc.\n     *\n     * Emits an {Approval} event.\n     *\n     * Requirements:\n     *\n     * - `owner` cannot be the zero address.\n     * - `spender` cannot be the zero address.\n     */\n    function _approve(address owner, address spender, uint256 amount) internal virtual {\n        require(owner != address(0), \"ERC20: approve from the zero address\");\n        require(spender != address(0), \"ERC20: approve to the zero address\");\n\n        _allowances[owner][spender] = amount;\n        emit Approval(owner, spender, amount);\n    }\n\n    /**\n     * @dev Updates `owner` s allowance for `spender` based on spent `amount`.\n     *\n     * Does not update the allowance amount in case of infinite allowance.\n     * Revert if not enough allowance is available.\n     *\n     * Might emit an {Approval} event.\n     */\n    function _spendAllowance(address owner, address spender, uint256 amount) internal virtual {\n        uint256 currentAllowance = allowance(owner, spender);\n        if (currentAllowance != type(uint256).max) {\n            require(currentAllowance >= amount, \"ERC20: insufficient allowance\");\n            unchecked {\n                _approve(owner, spender, currentAllowance - amount);\n            }\n        }\n    }\n\n    /**\n     * @dev Hook that is called before any transfer of tokens. This includes\n     * minting and burning.\n     *\n     * Calling conditions:\n     *\n     * - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\n     * will be transferred to `to`.\n     * - when `from` is zero, `amount` tokens will be minted for `to`.\n     * - when `to` is zero, `amount` of ``from``'s tokens will be burned.\n     * - `from` and `to` are never both zero.\n     *\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\n     */\n    function _beforeTokenTransfer(address from, address to, uint256 amount) internal virtual {}\n\n    /**\n     * @dev Hook that is called after any transfer of tokens. This includes\n     * minting and burning.\n     *\n     * Calling conditions:\n     *\n     * - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\n     * has been transferred to `to`.\n     * - when `from` is zero, `amount` tokens have been minted for `to`.\n     * - when `to` is zero, `amount` of ``from``'s tokens have been burned.\n     * - `from` and `to` are never both zero.\n     *\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\n     */\n    function _afterTokenTransfer(address from, address to, uint256 amount) internal virtual {}\n}\n"},"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (token/ERC20/extensions/IERC20Metadata.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../IERC20.sol\";\n\n/**\n * @dev Interface for the optional metadata functions from the ERC20 standard.\n *\n * _Available since v4.1._\n */\ninterface IERC20Metadata is IERC20 {\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() external view returns (string memory);\n\n    /**\n     * @dev Returns the symbol of the token.\n     */\n    function symbol() external view returns (string memory);\n\n    /**\n     * @dev Returns the decimals places of the token.\n     */\n    function decimals() external view returns (uint8);\n}\n"},"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (token/ERC20/extensions/IERC20Permit.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Interface of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in\n * https://eips.ethereum.org/EIPS/eip-2612[EIP-2612].\n *\n * Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by\n * presenting a message signed by the account. By not relying on {IERC20-approve}, the token holder account doesn't\n * need to send a transaction, and thus is not required to hold Ether at all.\n */\ninterface IERC20Permit {\n    /**\n     * @dev Sets `value` as the allowance of `spender` over ``owner``'s tokens,\n     * given ``owner``'s signed approval.\n     *\n     * IMPORTANT: The same issues {IERC20-approve} has related to transaction\n     * ordering also apply here.\n     *\n     * Emits an {Approval} event.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     * - `deadline` must be a timestamp in the future.\n     * - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner`\n     * over the EIP712-formatted function arguments.\n     * - the signature must use ``owner``'s current nonce (see {nonces}).\n     *\n     * For more information on the signature format, see the\n     * https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP\n     * section].\n     */\n    function permit(\n        address owner,\n        address spender,\n        uint256 value,\n        uint256 deadline,\n        uint8 v,\n        bytes32 r,\n        bytes32 s\n    ) external;\n\n    /**\n     * @dev Returns the current nonce for `owner`. This value must be\n     * included whenever a signature is generated for {permit}.\n     *\n     * Every successful call to {permit} increases ``owner``'s nonce by one. This\n     * prevents a signature from being used multiple times.\n     */\n    function nonces(address owner) external view returns (uint256);\n\n    /**\n     * @dev Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}.\n     */\n    // solhint-disable-next-line func-name-mixedcase\n    function DOMAIN_SEPARATOR() external view returns (bytes32);\n}\n"},"@openzeppelin/contracts/token/ERC20/IERC20.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Interface of the ERC20 standard as defined in the EIP.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the amount of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the amount of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves `amount` tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Moves `amount` tokens from `from` to `to` using the\n     * allowance mechanism. `amount` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 amount) external returns (bool);\n}\n"},"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (token/ERC20/utils/SafeERC20.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../IERC20.sol\";\nimport \"../extensions/IERC20Permit.sol\";\nimport \"../../../utils/Address.sol\";\n\n/**\n * @title SafeERC20\n * @dev Wrappers around ERC20 operations that throw on failure (when the token\n * contract returns false). Tokens that return no value (and instead revert or\n * throw on failure) are also supported, non-reverting calls are assumed to be\n * successful.\n * To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,\n * which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\n */\nlibrary SafeERC20 {\n    using Address for address;\n\n    /**\n     * @dev Transfer `value` amount of `token` from the calling contract to `to`. If `token` returns no value,\n     * non-reverting calls are assumed to be successful.\n     */\n    function safeTransfer(IERC20 token, address to, uint256 value) internal {\n        _callOptionalReturn(token, abi.encodeWithSelector(token.transfer.selector, to, value));\n    }\n\n    /**\n     * @dev Transfer `value` amount of `token` from `from` to `to`, spending the approval given by `from` to the\n     * calling contract. If `token` returns no value, non-reverting calls are assumed to be successful.\n     */\n    function safeTransferFrom(IERC20 token, address from, address to, uint256 value) internal {\n        _callOptionalReturn(token, abi.encodeWithSelector(token.transferFrom.selector, from, to, value));\n    }\n\n    /**\n     * @dev Deprecated. This function has issues similar to the ones found in\n     * {IERC20-approve}, and its usage is discouraged.\n     *\n     * Whenever possible, use {safeIncreaseAllowance} and\n     * {safeDecreaseAllowance} instead.\n     */\n    function safeApprove(IERC20 token, address spender, uint256 value) internal {\n        // safeApprove should only be called when setting an initial allowance,\n        // or when resetting it to zero. To increase and decrease it, use\n        // 'safeIncreaseAllowance' and 'safeDecreaseAllowance'\n        require(\n            (value == 0) || (token.allowance(address(this), spender) == 0),\n            \"SafeERC20: approve from non-zero to non-zero allowance\"\n        );\n        _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, value));\n    }\n\n    /**\n     * @dev Increase the calling contract's allowance toward `spender` by `value`. If `token` returns no value,\n     * non-reverting calls are assumed to be successful.\n     */\n    function safeIncreaseAllowance(IERC20 token, address spender, uint256 value) internal {\n        uint256 oldAllowance = token.allowance(address(this), spender);\n        _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, oldAllowance + value));\n    }\n\n    /**\n     * @dev Decrease the calling contract's allowance toward `spender` by `value`. If `token` returns no value,\n     * non-reverting calls are assumed to be successful.\n     */\n    function safeDecreaseAllowance(IERC20 token, address spender, uint256 value) internal {\n        unchecked {\n            uint256 oldAllowance = token.allowance(address(this), spender);\n            require(oldAllowance >= value, \"SafeERC20: decreased allowance below zero\");\n            _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, oldAllowance - value));\n        }\n    }\n\n    /**\n     * @dev Set the calling contract's allowance toward `spender` to `value`. If `token` returns no value,\n     * non-reverting calls are assumed to be successful. Compatible with tokens that require the approval to be set to\n     * 0 before setting it to a non-zero value.\n     */\n    function forceApprove(IERC20 token, address spender, uint256 value) internal {\n        bytes memory approvalCall = abi.encodeWithSelector(token.approve.selector, spender, value);\n\n        if (!_callOptionalReturnBool(token, approvalCall)) {\n            _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, 0));\n            _callOptionalReturn(token, approvalCall);\n        }\n    }\n\n    /**\n     * @dev Use a ERC-2612 signature to set the `owner` approval toward `spender` on `token`.\n     * Revert on invalid signature.\n     */\n    function safePermit(\n        IERC20Permit token,\n        address owner,\n        address spender,\n        uint256 value,\n        uint256 deadline,\n        uint8 v,\n        bytes32 r,\n        bytes32 s\n    ) internal {\n        uint256 nonceBefore = token.nonces(owner);\n        token.permit(owner, spender, value, deadline, v, r, s);\n        uint256 nonceAfter = token.nonces(owner);\n        require(nonceAfter == nonceBefore + 1, \"SafeERC20: permit did not succeed\");\n    }\n\n    /**\n     * @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n     * on the return value: the return value is optional (but if data is returned, it must not be false).\n     * @param token The token targeted by the call.\n     * @param data The call data (encoded using abi.encode or one of its variants).\n     */\n    function _callOptionalReturn(IERC20 token, bytes memory data) private {\n        // We need to perform a low level call here, to bypass Solidity's return data size checking mechanism, since\n        // we're implementing it ourselves. We use {Address-functionCall} to perform this call, which verifies that\n        // the target address contains contract code and also asserts for success in the low-level call.\n\n        bytes memory returndata = address(token).functionCall(data, \"SafeERC20: low-level call failed\");\n        require(returndata.length == 0 || abi.decode(returndata, (bool)), \"SafeERC20: ERC20 operation did not succeed\");\n    }\n\n    /**\n     * @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n     * on the return value: the return value is optional (but if data is returned, it must not be false).\n     * @param token The token targeted by the call.\n     * @param data The call data (encoded using abi.encode or one of its variants).\n     *\n     * This is a variant of {_callOptionalReturn} that silents catches all reverts and returns a bool instead.\n     */\n    function _callOptionalReturnBool(IERC20 token, bytes memory data) private returns (bool) {\n        // We need to perform a low level call here, to bypass Solidity's return data size checking mechanism, since\n        // we're implementing it ourselves. We cannot use {Address-functionCall} here since this should return false\n        // and not revert is the subcall reverts.\n\n        (bool success, bytes memory returndata) = address(token).call(data);\n        return\n            success && (returndata.length == 0 || abi.decode(returndata, (bool))) && Address.isContract(address(token));\n    }\n}\n"},"@openzeppelin/contracts/utils/Address.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (utils/Address.sol)\n\npragma solidity ^0.8.1;\n\n/**\n * @dev Collection of functions related to the address type\n */\nlibrary Address {\n    /**\n     * @dev Returns true if `account` is a contract.\n     *\n     * [IMPORTANT]\n     * ====\n     * It is unsafe to assume that an address for which this function returns\n     * false is an externally-owned account (EOA) and not a contract.\n     *\n     * Among others, `isContract` will return false for the following\n     * types of addresses:\n     *\n     *  - an externally-owned account\n     *  - a contract in construction\n     *  - an address where a contract will be created\n     *  - an address where a contract lived, but was destroyed\n     *\n     * Furthermore, `isContract` will also return true if the target contract within\n     * the same transaction is already scheduled for destruction by `SELFDESTRUCT`,\n     * which only has an effect at the end of a transaction.\n     * ====\n     *\n     * [IMPORTANT]\n     * ====\n     * You shouldn't rely on `isContract` to protect against flash loan attacks!\n     *\n     * Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\n     * like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\n     * constructor.\n     * ====\n     */\n    function isContract(address account) internal view returns (bool) {\n        // This method relies on extcodesize/address.code.length, which returns 0\n        // for contracts in construction, since the code is only stored at the end\n        // of the constructor execution.\n\n        return account.code.length > 0;\n    }\n\n    /**\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n     * `recipient`, forwarding all available gas and reverting on errors.\n     *\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\n     * imposed by `transfer`, making them unable to receive funds via\n     * `transfer`. {sendValue} removes this limitation.\n     *\n     * https://consensys.net/diligence/blog/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n     *\n     * IMPORTANT: because control is transferred to `recipient`, care must be\n     * taken to not create reentrancy vulnerabilities. Consider using\n     * {ReentrancyGuard} or the\n     * https://solidity.readthedocs.io/en/v0.8.0/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\n     */\n    function sendValue(address payable recipient, uint256 amount) internal {\n        require(address(this).balance >= amount, \"Address: insufficient balance\");\n\n        (bool success, ) = recipient.call{value: amount}(\"\");\n        require(success, \"Address: unable to send value, recipient may have reverted\");\n    }\n\n    /**\n     * @dev Performs a Solidity function call using a low level `call`. A\n     * plain `call` is an unsafe replacement for a function call: use this\n     * function instead.\n     *\n     * If `target` reverts with a revert reason, it is bubbled up by this\n     * function (like regular Solidity function calls).\n     *\n     * Returns the raw returned data. To convert to the expected return value,\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n     *\n     * Requirements:\n     *\n     * - `target` must be a contract.\n     * - calling `target` with `data` must not revert.\n     *\n     * _Available since v3.1._\n     */\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, 0, \"Address: low-level call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\n     * `errorMessage` as a fallback revert reason when `target` reverts.\n     *\n     * _Available since v3.1._\n     */\n    function functionCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, 0, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but also transferring `value` wei to `target`.\n     *\n     * Requirements:\n     *\n     * - the calling contract must have an ETH balance of at least `value`.\n     * - the called Solidity function must be `payable`.\n     *\n     * _Available since v3.1._\n     */\n    function functionCallWithValue(address target, bytes memory data, uint256 value) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, value, \"Address: low-level call with value failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\n     *\n     * _Available since v3.1._\n     */\n    function functionCallWithValue(\n        address target,\n        bytes memory data,\n        uint256 value,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        require(address(this).balance >= value, \"Address: insufficient balance for call\");\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a static call.\n     *\n     * _Available since v3.3._\n     */\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\n        return functionStaticCall(target, data, \"Address: low-level static call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n     * but performing a static call.\n     *\n     * _Available since v3.3._\n     */\n    function functionStaticCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal view returns (bytes memory) {\n        (bool success, bytes memory returndata) = target.staticcall(data);\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a delegate call.\n     *\n     * _Available since v3.4._\n     */\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\n        return functionDelegateCall(target, data, \"Address: low-level delegate call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n     * but performing a delegate call.\n     *\n     * _Available since v3.4._\n     */\n    function functionDelegateCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        (bool success, bytes memory returndata) = target.delegatecall(data);\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Tool to verify that a low level call to smart-contract was successful, and revert (either by bubbling\n     * the revert reason or using the provided one) in case of unsuccessful call or if target was not a contract.\n     *\n     * _Available since v4.8._\n     */\n    function verifyCallResultFromTarget(\n        address target,\n        bool success,\n        bytes memory returndata,\n        string memory errorMessage\n    ) internal view returns (bytes memory) {\n        if (success) {\n            if (returndata.length == 0) {\n                // only check isContract if the call was successful and the return data is empty\n                // otherwise we already know that it was a contract\n                require(isContract(target), \"Address: call to non-contract\");\n            }\n            return returndata;\n        } else {\n            _revert(returndata, errorMessage);\n        }\n    }\n\n    /**\n     * @dev Tool to verify that a low level call was successful, and revert if it wasn't, either by bubbling the\n     * revert reason or using the provided one.\n     *\n     * _Available since v4.3._\n     */\n    function verifyCallResult(\n        bool success,\n        bytes memory returndata,\n        string memory errorMessage\n    ) internal pure returns (bytes memory) {\n        if (success) {\n            return returndata;\n        } else {\n            _revert(returndata, errorMessage);\n        }\n    }\n\n    function _revert(bytes memory returndata, string memory errorMessage) private pure {\n        // Look for revert reason and bubble it up if present\n        if (returndata.length > 0) {\n            // The easiest way to bubble the revert reason is using memory via assembly\n            /// @solidity memory-safe-assembly\n            assembly {\n                let returndata_size := mload(returndata)\n                revert(add(32, returndata), returndata_size)\n            }\n        } else {\n            revert(errorMessage);\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/Context.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n}\n"},"@openzeppelin/contracts/utils/math/SafeMath.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (utils/math/SafeMath.sol)\n\npragma solidity ^0.8.0;\n\n// CAUTION\n// This version of SafeMath should only be used with Solidity 0.8 or later,\n// because it relies on the compiler's built in overflow checks.\n\n/**\n * @dev Wrappers over Solidity's arithmetic operations.\n *\n * NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler\n * now has built in overflow checking.\n */\nlibrary SafeMath {\n    /**\n     * @dev Returns the addition of two unsigned integers, with an overflow flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryAdd(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            uint256 c = a + b;\n            if (c < a) return (false, 0);\n            return (true, c);\n        }\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, with an overflow flag.\n     *\n     * _Available since v3.4._\n     */\n    function trySub(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b > a) return (false, 0);\n            return (true, a - b);\n        }\n    }\n\n    /**\n     * @dev Returns the multiplication of two unsigned integers, with an overflow flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryMul(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            // Gas optimization: this is cheaper than requiring 'a' not being zero, but the\n            // benefit is lost if 'b' is also tested.\n            // See: https://github.com/OpenZeppelin/openzeppelin-contracts/pull/522\n            if (a == 0) return (true, 0);\n            uint256 c = a * b;\n            if (c / a != b) return (false, 0);\n            return (true, c);\n        }\n    }\n\n    /**\n     * @dev Returns the division of two unsigned integers, with a division by zero flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryDiv(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b == 0) return (false, 0);\n            return (true, a / b);\n        }\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryMod(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b == 0) return (false, 0);\n            return (true, a % b);\n        }\n    }\n\n    /**\n     * @dev Returns the addition of two unsigned integers, reverting on\n     * overflow.\n     *\n     * Counterpart to Solidity's `+` operator.\n     *\n     * Requirements:\n     *\n     * - Addition cannot overflow.\n     */\n    function add(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a + b;\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, reverting on\n     * overflow (when the result is negative).\n     *\n     * Counterpart to Solidity's `-` operator.\n     *\n     * Requirements:\n     *\n     * - Subtraction cannot overflow.\n     */\n    function sub(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a - b;\n    }\n\n    /**\n     * @dev Returns the multiplication of two unsigned integers, reverting on\n     * overflow.\n     *\n     * Counterpart to Solidity's `*` operator.\n     *\n     * Requirements:\n     *\n     * - Multiplication cannot overflow.\n     */\n    function mul(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a * b;\n    }\n\n    /**\n     * @dev Returns the integer division of two unsigned integers, reverting on\n     * division by zero. The result is rounded towards zero.\n     *\n     * Counterpart to Solidity's `/` operator.\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function div(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a / b;\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n     * reverting when dividing by zero.\n     *\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\n     * invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function mod(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a % b;\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, reverting with custom message on\n     * overflow (when the result is negative).\n     *\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\n     * message unnecessarily. For custom revert reasons use {trySub}.\n     *\n     * Counterpart to Solidity's `-` operator.\n     *\n     * Requirements:\n     *\n     * - Subtraction cannot overflow.\n     */\n    function sub(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\n        unchecked {\n            require(b <= a, errorMessage);\n            return a - b;\n        }\n    }\n\n    /**\n     * @dev Returns the integer division of two unsigned integers, reverting with custom message on\n     * division by zero. The result is rounded towards zero.\n     *\n     * Counterpart to Solidity's `/` operator. Note: this function uses a\n     * `revert` opcode (which leaves remaining gas untouched) while Solidity\n     * uses an invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function div(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\n        unchecked {\n            require(b > 0, errorMessage);\n            return a / b;\n        }\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n     * reverting with custom message when dividing by zero.\n     *\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\n     * message unnecessarily. For custom revert reasons use {tryMod}.\n     *\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\n     * invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function mod(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\n        unchecked {\n            require(b > 0, errorMessage);\n            return a % b;\n        }\n    }\n}\n"},"contracts/ERC20Token.sol":{"content":"// SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.9;\n\nimport \"@openzeppelin/contracts/token/ERC20/ERC20.sol\";\n\ncontract ERC20Token is ERC20 {\n    constructor(string memory name, string memory symbol) ERC20(name, symbol) {\n        // Mint some initial supply of the token (optional)\n        _mint(msg.sender, 1_000_000_000 * 10 ** 18);\n    }\n}\n"},"contracts/interfaces/ERC20Token.sol":{"content":""},"contracts/SobaToken.sol":{"content":"// SPDX-License-Identifier: UNLICENSED\npragma solidity ^0.8.9;\n\nimport \"@openzeppelin/contracts/token/ERC20/ERC20.sol\";\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\n\ncontract SobaToken is ERC20, Ownable {\n    constructor(string memory name, string memory symbol) ERC20(name, symbol) {\n        _mint(msg.sender, 1_000_000_000 * 10 ** 18);\n    }\n\n    function mint(address _to, uint256 _amount) public onlyOwner {\n        _mint(_to, _amount);\n    }\n\n    function decimals() public view virtual override returns (uint8) {\n        return 18;\n    }\n}\n"},"contracts/YieldFarm.sol":{"content":"// SPDX-License-Identifier: UNLICENSED\npragma solidity ^0.8.9;\n\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\nimport \"@openzeppelin/contracts/utils/math/SafeMath.sol\";\nimport \"@openzeppelin/contracts/token/ERC20/ERC20.sol\";\nimport \"@openzeppelin/contracts/token/ERC20/IERC20.sol\";\nimport \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\";\n\nimport \"./SobaToken.sol\";\n\ncontract YieldFarm is Ownable {\n    using SafeMath for uint256;\n    using SafeERC20 for IERC20;\n\n    // Farm's user info\n    struct UserInfo {\n        uint256 amount; // LP tokens user provided\n        uint256 rewardDebt; //\n        /**\n            whenever a user deposits or withdraw LP tokens in a pool\n            the pool\n\n            the pool's accCakePerShare and lastRewardBlock gets updated\n            User receives the pending reward sent their address\n            User amount/rewardDebt gets updated\n\n            The term accCakePerShare mean keep track the amount of CAKE earned\n            per LP token(share) in specific pool\n            pending reward = (user.amount * pool.accCakePerShare) - user.rewardDebt\n\n            When a user claims their pending rewards, the following actions occur:\n            a. The pending reward is sent to the user's address.\n            b. The user's amount is updated to reflect the current number of LP tokens they have provided.\n            c. The user's rewardDebt is updated to the current value of (user.amount * pool.accSobaPerShare), \n            ensuring that any future pending rewards will be calculated accurately.\n        */\n    }\n\n    struct PoolInfo {\n        IERC20 lpToken; // address of LP token contract\n        uint256 allocPoint; // allocation point assign to the pool.\n        uint256 lastRewardBlock; // last time reward distritubed\n        uint256 accSobaPerShare;\n        uint256 totalStaked;\n    }\n\n    // Sobaja Token\n    SobaToken public sobaja;\n\n    address public devAddress; // for every 100 Soba, 10 is sent to dev address\n    uint256 public sobaPerBlock; // sobaja token created per block\n    uint256 public BONUS_MULTIPLIER = 1; // bonus mulitiplier for early sobaja makers\n\n    // info of each pool\n    PoolInfo[] public poolInfo;\n    // info of each user that stakes LP tokens.\n    mapping(uint256 => mapping(address => UserInfo)) public userInfo; // keep track based on poolID\n    // total Allocation points, sum of all allocation points in all pools\n    uint256 public totalAllocPoint = 0; // if a pool jave 10 allocation points, total allocations all pool is 100 then this pool will receive 10% of newly minted Soba token\n    // the block number when SOBA mining start\n    uint256 public startBlock;\n\n    /* EVENTS */\n\n    event Deposit(\n        address indexed user,\n        uint256 indexed poolId,\n        uint256 indexed amount\n    );\n\n    event Withdraw(\n        address indexed user,\n        uint256 indexed poolId,\n        uint256 amount\n    );\n\n    event EmergencyWithdraw(\n        address indexed user,\n        uint256 indexed poolId,\n        uint256 amount\n    );\n\n    constructor(\n        SobaToken _sobaja,\n        address _devaddr,\n        uint256 _sobaPerBlock,\n        uint256 _startBlock\n    ) {\n        sobaja = _sobaja;\n        devAddress = _devaddr;\n        sobaPerBlock = _sobaPerBlock;\n        startBlock = _startBlock;\n\n        // staking pool\n        // create first pool\n        poolInfo.push(\n            PoolInfo({\n                lpToken: _sobaja,\n                allocPoint: 1000,\n                lastRewardBlock: startBlock,\n                accSobaPerShare: 0,\n                totalStaked: 0\n            })\n        );\n\n        totalAllocPoint = 1000;\n    }\n\n    // for early user join the farm\n    // owner update the rate for reward\n    function updateMultiplier(uint256 multiplierNumber) public onlyOwner {\n        BONUS_MULTIPLIER = multiplierNumber;\n    }\n\n    function poolLength() external view returns (uint256) {\n        return poolInfo.length;\n    }\n\n    function block() external view returns (uint) {\n        return block.number;\n    }\n\n    // Add new LP to the pool, only owner\n    function add(\n        uint256 _allocPoint,\n        IERC20 _lpToken,\n        bool _withUpdate\n    ) public onlyOwner {\n        // when adding a new pool, ensure that all existing pools have up to date data\n        if (_withUpdate) {\n            massUpdatePools();\n        }\n        // if block at that present > startBlock so lastRewardBlock = block.number if not = startBlock\n        uint256 lastRewardBlock = block.number > startBlock\n            ? block.number\n            : startBlock;\n\n        totalAllocPoint = totalAllocPoint.add(_allocPoint);\n        poolInfo.push(\n            PoolInfo({\n                lpToken: _lpToken,\n                allocPoint: _allocPoint,\n                lastRewardBlock: lastRewardBlock,\n                accSobaPerShare: 0,\n                totalStaked: 0\n            })\n        );\n        updateStakingPool();\n    }\n\n    // update the give pool's Soba allocation point, only called by owner\n    function set(\n        uint256 _poolId,\n        uint256 _allocPoint,\n        bool _withUpdate\n    ) public onlyOwner {\n        if (_withUpdate) {\n            massUpdatePools();\n        }\n        uint256 prevAllocPoint = poolInfo[_poolId].allocPoint;\n        poolInfo[_poolId].allocPoint = _allocPoint;\n        if (prevAllocPoint != _allocPoint) {\n            totalAllocPoint = totalAllocPoint.sub(prevAllocPoint).add(\n                _allocPoint\n            );\n            updateStakingPool();\n        }\n    }\n\n    // update the allocation points and the allocation points for the first pool in poolInfo[] array\n    function updateStakingPool() internal {\n        uint256 length = poolInfo.length;\n        uint256 points = 0;\n        // from second pool\n        for (uint256 poolId = 1; poolId < length; ++poolId) {\n            points = points.add(poolInfo[poolId].allocPoint);\n        }\n        if (points != 0) {\n            points = points.div(3); // normalization\n            totalAllocPoint = totalAllocPoint.sub(poolInfo[0].allocPoint).add(\n                points\n            );\n            poolInfo[0].allocPoint = points;\n        }\n    }\n\n    // return reward mulitiplier over the given _from to _to block\n    function getMultiplier(\n        uint256 _from,\n        uint256 _to\n    ) public view returns (uint256) {\n        return _to.sub(_from).mul(BONUS_MULTIPLIER);\n    }\n\n    // pending SOBA on front-end\n    function pendingSoba(\n        uint256 _poolId,\n        address _user\n    ) external view returns (uint256) {\n        PoolInfo storage pool = poolInfo[_poolId];\n        UserInfo storage user = userInfo[_poolId][_user];\n\n        uint256 accSobaPerShare = pool.accSobaPerShare;\n        uint256 lpSupply = pool.lpToken.balanceOf(address(this));\n        if (block.number > pool.lastRewardBlock && lpSupply != 0) {\n            uint256 multiplier = getMultiplier(\n                pool.lastRewardBlock,\n                block.number\n            );\n            uint256 sobaReward = multiplier\n                .mul(sobaPerBlock)\n                .mul(pool.allocPoint)\n                .div(totalAllocPoint);\n\n            accSobaPerShare = accSobaPerShare.add(\n                sobaReward.mul(1e18).div(lpSupply)\n            );\n        }\n        return user.amount.mul(accSobaPerShare).div(1e18).sub(user.rewardDebt);\n    }\n\n    // update reward variables for all pools\n    function massUpdatePools() public {\n        uint256 length = poolInfo.length;\n        for (uint256 poolId = 0; poolId < length; ++poolId) {\n            updatePool(poolId);\n        }\n    }\n\n    // update reward variables of the given pool\n    function updatePool(uint256 _poolId) public {\n        PoolInfo storage pool = poolInfo[_poolId];\n\n        // if reward already up to date\n        if (block.number <= pool.lastRewardBlock) {\n            return;\n        }\n\n        uint256 lpSupply = pool.lpToken.balanceOf(address(this));\n        if (lpSupply == 0) {\n            pool.lastRewardBlock = block.number;\n            return;\n        }\n\n        // how many reward\n        uint256 multiplier = getMultiplier(pool.lastRewardBlock, block.number);\n\n        uint256 sobaReward = multiplier\n            .mul(sobaPerBlock)\n            .mul(pool.allocPoint)\n            .div(totalAllocPoint);\n\n        sobaja.mint(devAddress, sobaReward.div(10)); // send 10% to dev address\n        sobaja.mint(address(this), sobaReward);\n        pool.accSobaPerShare = pool.accSobaPerShare.add(\n            sobaReward.mul(1e18).div(lpSupply)\n        );\n        pool.lastRewardBlock = block.number;\n    }\n\n    // Deposit LP\n    function deposit(uint256 _poolId, uint256 _amount) public {\n        require(_poolId != 0, \"Pool must exist\");\n\n        PoolInfo storage pool = poolInfo[_poolId];\n        UserInfo storage user = userInfo[_poolId][msg.sender];\n        updatePool(_poolId);\n\n        // amount of Lp tokens that the users has previously staked in the pool\n        if (user.amount > 0) {\n            uint256 pending = user\n                .amount\n                .mul(pool.accSobaPerShare)\n                .div(1e18)\n                .sub(user.rewardDebt);\n            if (pending > 0) {\n                safeSobaTransfer(msg.sender, pending);\n            }\n        }\n        if (_amount > 0) {\n            pool.lpToken.safeTransferFrom(\n                address(msg.sender),\n                address(this),\n                _amount\n            );\n            user.amount = user.amount.add(_amount);\n            pool.totalStaked += _amount;\n        }\n        user.rewardDebt = user.amount.mul(pool.accSobaPerShare).div(1e18);\n        emit Deposit(msg.sender, _poolId, _amount);\n    }\n\n    function withdraw(uint256 _poolId, uint256 _amount) public {\n        require(_poolId != 0, \"Pool must exist\");\n        PoolInfo storage pool = poolInfo[_poolId];\n        UserInfo storage user = userInfo[_poolId][msg.sender];\n        require(user.amount >= _amount, \"Exceed\");\n\n        updatePool(_poolId);\n        uint256 pending = user.amount.mul(pool.accSobaPerShare).div(1e18).sub(\n            user.rewardDebt\n        );\n        if (pending > 0) {\n            safeSobaTransfer(msg.sender, pending);\n        }\n        if (_amount > 0) {\n            user.amount = user.amount.sub(_amount);\n            pool.totalStaked -= _amount;\n            pool.lpToken.safeTransfer(address(msg.sender), _amount);\n        }\n        user.rewardDebt = user.amount.mul(pool.accSobaPerShare).div(1e18);\n        emit Withdraw(msg.sender, _poolId, _amount);\n    }\n\n    // stake\n    function staking(uint256 _amount) public {\n        PoolInfo storage pool = poolInfo[0];\n        UserInfo storage user = userInfo[0][msg.sender];\n\n        updatePool(0);\n        if (user.amount > 0) {\n            uint256 pending = user\n                .amount\n                .mul(pool.accSobaPerShare)\n                .div(1e18)\n                .sub(user.rewardDebt);\n            if (pending > 0) {\n                safeSobaTransfer(msg.sender, pending);\n            }\n        }\n        if (_amount > 0) {\n            pool.lpToken.safeTransferFrom(\n                address(msg.sender),\n                address(this),\n                _amount\n            );\n            pool.totalStaked += _amount;\n            user.amount = user.amount.add(_amount);\n        }\n        user.rewardDebt = user.amount.mul(pool.accSobaPerShare).div(1e18);\n        emit Deposit(msg.sender, 0, _amount);\n    }\n\n    // withdraw soba token\n    function leaveStaking(uint256 _amount) public {\n        PoolInfo storage pool = poolInfo[0];\n        UserInfo storage user = userInfo[0][msg.sender];\n        require(user.amount >= _amount, \"Exceed\");\n        updatePool(0);\n        uint256 pending = user.amount.mul(pool.accSobaPerShare).div(1e18).sub(\n            user.rewardDebt\n        );\n        if (pending > 0) {\n            safeSobaTransfer(msg.sender, pending);\n        }\n\n        if (_amount > 0) {\n            pool.totalStaked -= _amount;\n            user.amount = user.amount.sub(_amount);\n            pool.lpToken.safeTransfer(address(msg.sender), _amount);\n        }\n        user.rewardDebt = user.amount.mul(pool.accSobaPerShare).div(1e18);\n        emit Withdraw(msg.sender, 0, _amount);\n    }\n\n    // withdraw without caring about reward. Emergency only\n    function emergencyWithdraw(uint256 _poolId) public {\n        PoolInfo storage pool = poolInfo[_poolId];\n        UserInfo storage user = userInfo[_poolId][msg.sender];\n        pool.lpToken.safeTransfer(address(msg.sender), user.amount);\n        pool.totalStaked -= user.amount;\n        emit EmergencyWithdraw(msg.sender, _poolId, user.amount);\n        user.amount = 0;\n        user.rewardDebt = 0;\n    }\n\n    // safe Soba transfer function\n    function safeSobaTransfer(address _to, uint256 _amount) internal {\n        uint256 sobaBalance = sobaja.balanceOf(address(this));\n        if (_amount > sobaBalance) {\n            sobaja.transfer(_to, sobaBalance);\n        } else {\n            sobaja.transfer(_to, _amount);\n        }\n    }\n\n    // update dev address\n    function dev(address _devaddr) public {\n        require(msg.sender == devAddress, \"Address not satisfy\");\n        devAddress = _devaddr;\n    }\n}\n"}},"settings":{"optimizer":{"enabled":true,"mode":"3"},"outputSelection":{"*":{"*":["abi","evm.methodIdentifiers","metadata"],"":["ast"]}}}},"output":{"errors":[{"component":"general","errorCode":"1878","formattedMessage":"Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.\n--> contracts/interfaces/ERC20Token.sol\n\n","message":"SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.","severity":"warning","sourceLocation":{"file":"contracts/interfaces/ERC20Token.sol","start":-1,"end":-1},"type":"Warning"},{"component":"general","errorCode":"3420","formattedMessage":"Warning: Source file does not specify required compiler version! Consider adding \"pragma solidity ^0.8.9;\"\n--> contracts/interfaces/ERC20Token.sol\n\n","message":"Source file does not specify required compiler version! Consider adding \"pragma solidity ^0.8.9;\"","severity":"warning","sourceLocation":{"file":"contracts/interfaces/ERC20Token.sol","start":-1,"end":-1},"type":"Warning"},{"component":"general","errorCode":"2319","formattedMessage":"Warning: This declaration shadows a builtin symbol.\n   --> contracts/YieldFarm.sol:120:5:\n    |\n120 |     function block() external view returns (uint) {\n    |     ^ (Relevant source part starts here and spans across multiple lines).\n\n","message":"This declaration shadows a builtin symbol.","severity":"warning","sourceLocation":{"file":"contracts/YieldFarm.sol","start":3962,"end":4044},"type":"Warning"},{"component":"general","errorCode":null,"formattedMessage":"\n┌──────────────────────────────────────────────────────────────────────────────────────────────────┐\n│ Warning: You are using 'block.number' in your code which we are planning to change in the near   │\n│ future. 'block.number' currently returns the number of the L1 batch. After the changes it will   │\n│ be returning the number of the L2 block.                                                         │\n│ More information here:                                                                           │\n│ https://github.com/zkSync-Community-Hub/zkync-developers/discussions/32                          │\n└──────────────────────────────────────────────────────────────────────────────────────────────────┘\n--> contracts/YieldFarm.sol\n","message":"\n┌──────────────────────────────────────────────────────────────────────────────────────────────────┐\n│ Warning: You are using 'block.number' in your code which we are planning to change in the near   │\n│ future. 'block.number' currently returns the number of the L1 batch. After the changes it will   │\n│ be returning the number of the L2 block.                                                         │\n│ More information here:                                                                           │\n│ https://github.com/zkSync-Community-Hub/zkync-developers/discussions/32                          │\n└──────────────────────────────────────────────────────────────────────────────────────────────────┘","severity":"warning","sourceLocation":{"file":"11","start":4025,"end":4037},"type":"Warning"},{"component":"general","errorCode":null,"formattedMessage":"\n┌──────────────────────────────────────────────────────────────────────────────────────────────────┐\n│ Warning: You are using 'block.number' in your code which we are planning to change in the near   │\n│ future. 'block.number' currently returns the number of the L1 batch. After the changes it will   │\n│ be returning the number of the L2 block.                                                         │\n│ More information here:                                                                           │\n│ https://github.com/zkSync-Community-Hub/zkync-developers/discussions/32                          │\n└──────────────────────────────────────────────────────────────────────────────────────────────────┘\n--> contracts/YieldFarm.sol\n","message":"\n┌──────────────────────────────────────────────────────────────────────────────────────────────────┐\n│ Warning: You are using 'block.number' in your code which we are planning to change in the near   │\n│ future. 'block.number' currently returns the number of the L1 batch. After the changes it will   │\n│ be returning the number of the L2 block.                                                         │\n│ More information here:                                                                           │\n│ https://github.com/zkSync-Community-Hub/zkync-developers/discussions/32                          │\n└──────────────────────────────────────────────────────────────────────────────────────────────────┘","severity":"warning","sourceLocation":{"file":"11","start":4502,"end":4514},"type":"Warning"},{"component":"general","errorCode":null,"formattedMessage":"\n┌──────────────────────────────────────────────────────────────────────────────────────────────────┐\n│ Warning: You are using 'block.number' in your code which we are planning to change in the near   │\n│ future. 'block.number' currently returns the number of the L1 batch. After the changes it will   │\n│ be returning the number of the L2 block.                                                         │\n│ More information here:                                                                           │\n│ https://github.com/zkSync-Community-Hub/zkync-developers/discussions/32                          │\n└──────────────────────────────────────────────────────────────────────────────────────────────────┘\n--> contracts/YieldFarm.sol\n","message":"\n┌──────────────────────────────────────────────────────────────────────────────────────────────────┐\n│ Warning: You are using 'block.number' in your code which we are planning to change in the near   │\n│ future. 'block.number' currently returns the number of the L1 batch. After the changes it will   │\n│ be returning the number of the L2 block.                                                         │\n│ More information here:                                                                           │\n│ https://github.com/zkSync-Community-Hub/zkync-developers/discussions/32                          │\n└──────────────────────────────────────────────────────────────────────────────────────────────────┘","severity":"warning","sourceLocation":{"file":"11","start":4542,"end":4554},"type":"Warning"},{"component":"general","errorCode":null,"formattedMessage":"\n┌──────────────────────────────────────────────────────────────────────────────────────────────────┐\n│ Warning: You are using 'block.number' in your code which we are planning to change in the near   │\n│ future. 'block.number' currently returns the number of the L1 batch. After the changes it will   │\n│ be returning the number of the L2 block.                                                         │\n│ More information here:                                                                           │\n│ https://github.com/zkSync-Community-Hub/zkync-developers/discussions/32                          │\n└──────────────────────────────────────────────────────────────────────────────────────────────────┘\n--> contracts/YieldFarm.sol\n","message":"\n┌──────────────────────────────────────────────────────────────────────────────────────────────────┐\n│ Warning: You are using 'block.number' in your code which we are planning to change in the near   │\n│ future. 'block.number' currently returns the number of the L1 batch. After the changes it will   │\n│ be returning the number of the L2 block.                                                         │\n│ More information here:                                                                           │\n│ https://github.com/zkSync-Community-Hub/zkync-developers/discussions/32                          │\n└──────────────────────────────────────────────────────────────────────────────────────────────────┘","severity":"warning","sourceLocation":{"file":"11","start":6793,"end":6805},"type":"Warning"},{"component":"general","errorCode":null,"formattedMessage":"\n┌──────────────────────────────────────────────────────────────────────────────────────────────────┐\n│ Warning: You are using 'block.number' in your code which we are planning to change in the near   │\n│ future. 'block.number' currently returns the number of the L1 batch. After the changes it will   │\n│ be returning the number of the L2 block.                                                         │\n│ More information here:                                                                           │\n│ https://github.com/zkSync-Community-Hub/zkync-developers/discussions/32                          │\n└──────────────────────────────────────────────────────────────────────────────────────────────────┘\n--> contracts/YieldFarm.sol\n","message":"\n┌──────────────────────────────────────────────────────────────────────────────────────────────────┐\n│ Warning: You are using 'block.number' in your code which we are planning to change in the near   │\n│ future. 'block.number' currently returns the number of the L1 batch. After the changes it will   │\n│ be returning the number of the L2 block.                                                         │\n│ More information here:                                                                           │\n│ https://github.com/zkSync-Community-Hub/zkync-developers/discussions/32                          │\n└──────────────────────────────────────────────────────────────────────────────────────────────────┘","severity":"warning","sourceLocation":{"file":"11","start":6951,"end":6963},"type":"Warning"},{"component":"general","errorCode":null,"formattedMessage":"\n┌──────────────────────────────────────────────────────────────────────────────────────────────────┐\n│ Warning: You are using 'block.number' in your code which we are planning to change in the near   │\n│ future. 'block.number' currently returns the number of the L1 batch. After the changes it will   │\n│ be returning the number of the L2 block.                                                         │\n│ More information here:                                                                           │\n│ https://github.com/zkSync-Community-Hub/zkync-developers/discussions/32                          │\n└──────────────────────────────────────────────────────────────────────────────────────────────────┘\n--> contracts/YieldFarm.sol\n","message":"\n┌──────────────────────────────────────────────────────────────────────────────────────────────────┐\n│ Warning: You are using 'block.number' in your code which we are planning to change in the near   │\n│ future. 'block.number' currently returns the number of the L1 batch. After the changes it will   │\n│ be returning the number of the L2 block.                                                         │\n│ More information here:                                                                           │\n│ https://github.com/zkSync-Community-Hub/zkync-developers/discussions/32                          │\n└──────────────────────────────────────────────────────────────────────────────────────────────────┘","severity":"warning","sourceLocation":{"file":"11","start":7791,"end":7803},"type":"Warning"},{"component":"general","errorCode":null,"formattedMessage":"\n┌──────────────────────────────────────────────────────────────────────────────────────────────────┐\n│ Warning: You are using 'block.number' in your code which we are planning to change in the near   │\n│ future. 'block.number' currently returns the number of the L1 batch. After the changes it will   │\n│ be returning the number of the L2 block.                                                         │\n│ More information here:                                                                           │\n│ https://github.com/zkSync-Community-Hub/zkync-developers/discussions/32                          │\n└──────────────────────────────────────────────────────────────────────────────────────────────────┘\n--> contracts/YieldFarm.sol\n","message":"\n┌──────────────────────────────────────────────────────────────────────────────────────────────────┐\n│ Warning: You are using 'block.number' in your code which we are planning to change in the near   │\n│ future. 'block.number' currently returns the number of the L1 batch. After the changes it will   │\n│ be returning the number of the L2 block.                                                         │\n│ More information here:                                                                           │\n│ https://github.com/zkSync-Community-Hub/zkync-developers/discussions/32                          │\n└──────────────────────────────────────────────────────────────────────────────────────────────────┘","severity":"warning","sourceLocation":{"file":"11","start":7992,"end":8004},"type":"Warning"},{"component":"general","errorCode":null,"formattedMessage":"\n┌──────────────────────────────────────────────────────────────────────────────────────────────────┐\n│ Warning: You are using 'block.number' in your code which we are planning to change in the near   │\n│ future. 'block.number' currently returns the number of the L1 batch. After the changes it will   │\n│ be returning the number of the L2 block.                                                         │\n│ More information here:                                                                           │\n│ https://github.com/zkSync-Community-Hub/zkync-developers/discussions/32                          │\n└──────────────────────────────────────────────────────────────────────────────────────────────────┘\n--> contracts/YieldFarm.sol\n","message":"\n┌──────────────────────────────────────────────────────────────────────────────────────────────────┐\n│ Warning: You are using 'block.number' in your code which we are planning to change in the near   │\n│ future. 'block.number' currently returns the number of the L1 batch. After the changes it will   │\n│ be returning the number of the L2 block.                                                         │\n│ More information here:                                                                           │\n│ https://github.com/zkSync-Community-Hub/zkync-developers/discussions/32                          │\n└──────────────────────────────────────────────────────────────────────────────────────────────────┘","severity":"warning","sourceLocation":{"file":"11","start":8129,"end":8141},"type":"Warning"},{"component":"general","errorCode":null,"formattedMessage":"\n┌──────────────────────────────────────────────────────────────────────────────────────────────────┐\n│ Warning: You are using 'block.number' in your code which we are planning to change in the near   │\n│ future. 'block.number' currently returns the number of the L1 batch. After the changes it will   │\n│ be returning the number of the L2 block.                                                         │\n│ More information here:                                                                           │\n│ https://github.com/zkSync-Community-Hub/zkync-developers/discussions/32                          │\n└──────────────────────────────────────────────────────────────────────────────────────────────────┘\n--> contracts/YieldFarm.sol\n","message":"\n┌──────────────────────────────────────────────────────────────────────────────────────────────────┐\n│ Warning: You are using 'block.number' in your code which we are planning to change in the near   │\n│ future. 'block.number' currently returns the number of the L1 batch. After the changes it will   │\n│ be returning the number of the L2 block.                                                         │\n│ More information here:                                                                           │\n│ https://github.com/zkSync-Community-Hub/zkync-developers/discussions/32                          │\n└──────────────────────────────────────────────────────────────────────────────────────────────────┘","severity":"warning","sourceLocation":{"file":"11","start":8560,"end":8572},"type":"Warning"},{"component":"general","errorCode":null,"formattedMessage":"\n┌──────────────────────────────────────────────────────────────────────────────────────────────────┐\n│ Warning: It looks like you are using '<address payable>.send/transfer(<X>)' without providing    │\n│ the gas amount. Such calls will fail depending on the pubdata costs.                             │\n│ This might be a false positive if you are using an interface (like IERC20) instead of the        │\n│ native Solidity `send/transfer`.                                                                 │\n│ Please use 'payable(<address>).call{value: <X>}(\"\")' instead, but be careful with the reentrancy │\n│ attack. `send` and `transfer` send limited amount of gas that prevents reentrancy, whereas       │\n│ `<address>.call{value: <X>}` sends all gas to the callee. Learn more on                          │\n│ https://docs.soliditylang.org/en/latest/security-considerations.html#reentrancy                  │\n└──────────────────────────────────────────────────────────────────────────────────────────────────┘\n--> contracts/YieldFarm.sol\n","message":"\n┌──────────────────────────────────────────────────────────────────────────────────────────────────┐\n│ Warning: It looks like you are using '<address payable>.send/transfer(<X>)' without providing    │\n│ the gas amount. Such calls will fail depending on the pubdata costs.                             │\n│ This might be a false positive if you are using an interface (like IERC20) instead of the        │\n│ native Solidity `send/transfer`.                                                                 │\n│ Please use 'payable(<address>).call{value: <X>}(\"\")' instead, but be careful with the reentrancy │\n│ attack. `send` and `transfer` send limited amount of gas that prevents reentrancy, whereas       │\n│ `<address>.call{value: <X>}` sends all gas to the callee. Learn more on                          │\n│ https://docs.soliditylang.org/en/latest/security-considerations.html#reentrancy                  │\n└──────────────────────────────────────────────────────────────────────────────────────────────────┘","severity":"warning","sourceLocation":{"file":"11","start":12954,"end":12983},"type":"Warning"},{"component":"general","errorCode":null,"formattedMessage":"\n┌──────────────────────────────────────────────────────────────────────────────────────────────────┐\n│ Warning: It looks like you are using '<address payable>.send/transfer(<X>)' without providing    │\n│ the gas amount. Such calls will fail depending on the pubdata costs.                             │\n│ This might be a false positive if you are using an interface (like IERC20) instead of the        │\n│ native Solidity `send/transfer`.                                                                 │\n│ Please use 'payable(<address>).call{value: <X>}(\"\")' instead, but be careful with the reentrancy │\n│ attack. `send` and `transfer` send limited amount of gas that prevents reentrancy, whereas       │\n│ `<address>.call{value: <X>}` sends all gas to the callee. Learn more on                          │\n│ https://docs.soliditylang.org/en/latest/security-considerations.html#reentrancy                  │\n└──────────────────────────────────────────────────────────────────────────────────────────────────┘\n--> contracts/YieldFarm.sol\n","message":"\n┌──────────────────────────────────────────────────────────────────────────────────────────────────┐\n│ Warning: It looks like you are using '<address payable>.send/transfer(<X>)' without providing    │\n│ the gas amount. Such calls will fail depending on the pubdata costs.                             │\n│ This might be a false positive if you are using an interface (like IERC20) instead of the        │\n│ native Solidity `send/transfer`.                                                                 │\n│ Please use 'payable(<address>).call{value: <X>}(\"\")' instead, but be careful with the reentrancy │\n│ attack. `send` and `transfer` send limited amount of gas that prevents reentrancy, whereas       │\n│ `<address>.call{value: <X>}` sends all gas to the callee. Learn more on                          │\n│ https://docs.soliditylang.org/en/latest/security-considerations.html#reentrancy                  │\n└──────────────────────────────────────────────────────────────────────────────────────────────────┘","severity":"warning","sourceLocation":{"file":"11","start":12890,"end":12923},"type":"Warning"}],"version":"0.8.9","long_version":"0.8.9+commit.e5eed63a.Darwin.appleclang","zk_version":"1.3.13","sources":{"@openzeppelin/contracts/access/Ownable.sol":{"id":0,"ast":{"absolutePath":"@openzeppelin/contracts/access/Ownable.sol","exportedSymbols":{"Context":[1566],"Ownable":[112]},"id":113,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"102:23:0"},{"absolutePath":"@openzeppelin/contracts/utils/Context.sol","file":"../utils/Context.sol","id":2,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":113,"sourceUnit":1567,"src":"127:30:0","symbolAliases":[],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":4,"name":"Context","nodeType":"IdentifierPath","referencedDeclaration":1566,"src":"683:7:0"},"id":5,"nodeType":"InheritanceSpecifier","src":"683:7:0"}],"canonicalName":"Ownable","contractDependencies":[],"contractKind":"contract","documentation":{"id":3,"nodeType":"StructuredDocumentation","src":"159:494:0","text":" @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n By default, the owner account will be the one that deploys the contract. This\n can later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."},"fullyImplemented":true,"id":112,"linearizedBaseContracts":[112,1566],"name":"Ownable","nameLocation":"672:7:0","nodeType":"ContractDefinition","nodes":[{"constant":false,"id":7,"mutability":"mutable","name":"_owner","nameLocation":"713:6:0","nodeType":"VariableDeclaration","scope":112,"src":"697:22:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6,"name":"address","nodeType":"ElementaryTypeName","src":"697:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"private"},{"anonymous":false,"id":13,"name":"OwnershipTransferred","nameLocation":"732:20:0","nodeType":"EventDefinition","parameters":{"id":12,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9,"indexed":true,"mutability":"mutable","name":"previousOwner","nameLocation":"769:13:0","nodeType":"VariableDeclaration","scope":13,"src":"753:29:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":8,"name":"address","nodeType":"ElementaryTypeName","src":"753:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":11,"indexed":true,"mutability":"mutable","name":"newOwner","nameLocation":"800:8:0","nodeType":"VariableDeclaration","scope":13,"src":"784:24:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":10,"name":"address","nodeType":"ElementaryTypeName","src":"784:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"752:57:0"},"src":"726:84:0"},{"body":{"id":22,"nodeType":"Block","src":"926:49:0","statements":[{"expression":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":18,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1556,"src":"955:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":19,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"955:12:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":17,"name":"_transferOwnership","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":111,"src":"936:18:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":20,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"936:32:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":21,"nodeType":"ExpressionStatement","src":"936:32:0"}]},"documentation":{"id":14,"nodeType":"StructuredDocumentation","src":"816:91:0","text":" @dev Initializes the contract setting the deployer as the initial owner."},"id":23,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":15,"nodeType":"ParameterList","parameters":[],"src":"923:2:0"},"returnParameters":{"id":16,"nodeType":"ParameterList","parameters":[],"src":"926:0:0"},"scope":112,"src":"912:63:0","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":30,"nodeType":"Block","src":"1084:41:0","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":26,"name":"_checkOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":54,"src":"1094:11:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$__$","typeString":"function () view"}},"id":27,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1094:13:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":28,"nodeType":"ExpressionStatement","src":"1094:13:0"},{"id":29,"nodeType":"PlaceholderStatement","src":"1117:1:0"}]},"documentation":{"id":24,"nodeType":"StructuredDocumentation","src":"981:77:0","text":" @dev Throws if called by any account other than the owner."},"id":31,"name":"onlyOwner","nameLocation":"1072:9:0","nodeType":"ModifierDefinition","parameters":{"id":25,"nodeType":"ParameterList","parameters":[],"src":"1081:2:0"},"src":"1063:62:0","virtual":false,"visibility":"internal"},{"body":{"id":39,"nodeType":"Block","src":"1256:30:0","statements":[{"expression":{"id":37,"name":"_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7,"src":"1273:6:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":36,"id":38,"nodeType":"Return","src":"1266:13:0"}]},"documentation":{"id":32,"nodeType":"StructuredDocumentation","src":"1131:65:0","text":" @dev Returns the address of the current owner."},"functionSelector":"8da5cb5b","id":40,"implemented":true,"kind":"function","modifiers":[],"name":"owner","nameLocation":"1210:5:0","nodeType":"FunctionDefinition","parameters":{"id":33,"nodeType":"ParameterList","parameters":[],"src":"1215:2:0"},"returnParameters":{"id":36,"nodeType":"ParameterList","parameters":[{"constant":false,"id":35,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":40,"src":"1247:7:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":34,"name":"address","nodeType":"ElementaryTypeName","src":"1247:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1246:9:0"},"scope":112,"src":"1201:85:0","stateMutability":"view","virtual":true,"visibility":"public"},{"body":{"id":53,"nodeType":"Block","src":"1404:85:0","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":49,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":45,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":40,"src":"1422:5:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":46,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1422:7:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":47,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1556,"src":"1433:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":48,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1433:12:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1422:23:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572","id":50,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1447:34:0","typeDescriptions":{"typeIdentifier":"t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe","typeString":"literal_string \"Ownable: caller is not the owner\""},"value":"Ownable: caller is not the owner"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe","typeString":"literal_string \"Ownable: caller is not the owner\""}],"id":44,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"1414:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":51,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1414:68:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":52,"nodeType":"ExpressionStatement","src":"1414:68:0"}]},"documentation":{"id":41,"nodeType":"StructuredDocumentation","src":"1292:62:0","text":" @dev Throws if the sender is not the owner."},"id":54,"implemented":true,"kind":"function","modifiers":[],"name":"_checkOwner","nameLocation":"1368:11:0","nodeType":"FunctionDefinition","parameters":{"id":42,"nodeType":"ParameterList","parameters":[],"src":"1379:2:0"},"returnParameters":{"id":43,"nodeType":"ParameterList","parameters":[],"src":"1404:0:0"},"scope":112,"src":"1359:130:0","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":67,"nodeType":"Block","src":"1878:47:0","statements":[{"expression":{"arguments":[{"arguments":[{"hexValue":"30","id":63,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1915:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":62,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1907:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":61,"name":"address","nodeType":"ElementaryTypeName","src":"1907:7:0","typeDescriptions":{}}},"id":64,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1907:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":60,"name":"_transferOwnership","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":111,"src":"1888:18:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":65,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1888:30:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":66,"nodeType":"ExpressionStatement","src":"1888:30:0"}]},"documentation":{"id":55,"nodeType":"StructuredDocumentation","src":"1495:324:0","text":" @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby disabling any functionality that is only available to the owner."},"functionSelector":"715018a6","id":68,"implemented":true,"kind":"function","modifiers":[{"id":58,"kind":"modifierInvocation","modifierName":{"id":57,"name":"onlyOwner","nodeType":"IdentifierPath","referencedDeclaration":31,"src":"1868:9:0"},"nodeType":"ModifierInvocation","src":"1868:9:0"}],"name":"renounceOwnership","nameLocation":"1833:17:0","nodeType":"FunctionDefinition","parameters":{"id":56,"nodeType":"ParameterList","parameters":[],"src":"1850:2:0"},"returnParameters":{"id":59,"nodeType":"ParameterList","parameters":[],"src":"1878:0:0"},"scope":112,"src":"1824:101:0","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":90,"nodeType":"Block","src":"2144:128:0","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":82,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":77,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":71,"src":"2162:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":80,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2182:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":79,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2174:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":78,"name":"address","nodeType":"ElementaryTypeName","src":"2174:7:0","typeDescriptions":{}}},"id":81,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2174:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2162:22:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373","id":83,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2186:40:0","typeDescriptions":{"typeIdentifier":"t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe","typeString":"literal_string \"Ownable: new owner is the zero address\""},"value":"Ownable: new owner is the zero address"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe","typeString":"literal_string \"Ownable: new owner is the zero address\""}],"id":76,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2154:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":84,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2154:73:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":85,"nodeType":"ExpressionStatement","src":"2154:73:0"},{"expression":{"arguments":[{"id":87,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":71,"src":"2256:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":86,"name":"_transferOwnership","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":111,"src":"2237:18:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":88,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2237:28:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":89,"nodeType":"ExpressionStatement","src":"2237:28:0"}]},"documentation":{"id":69,"nodeType":"StructuredDocumentation","src":"1931:138:0","text":" @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."},"functionSelector":"f2fde38b","id":91,"implemented":true,"kind":"function","modifiers":[{"id":74,"kind":"modifierInvocation","modifierName":{"id":73,"name":"onlyOwner","nodeType":"IdentifierPath","referencedDeclaration":31,"src":"2134:9:0"},"nodeType":"ModifierInvocation","src":"2134:9:0"}],"name":"transferOwnership","nameLocation":"2083:17:0","nodeType":"FunctionDefinition","parameters":{"id":72,"nodeType":"ParameterList","parameters":[{"constant":false,"id":71,"mutability":"mutable","name":"newOwner","nameLocation":"2109:8:0","nodeType":"VariableDeclaration","scope":91,"src":"2101:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":70,"name":"address","nodeType":"ElementaryTypeName","src":"2101:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2100:18:0"},"returnParameters":{"id":75,"nodeType":"ParameterList","parameters":[],"src":"2144:0:0"},"scope":112,"src":"2074:198:0","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":110,"nodeType":"Block","src":"2489:124:0","statements":[{"assignments":[98],"declarations":[{"constant":false,"id":98,"mutability":"mutable","name":"oldOwner","nameLocation":"2507:8:0","nodeType":"VariableDeclaration","scope":110,"src":"2499:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":97,"name":"address","nodeType":"ElementaryTypeName","src":"2499:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":100,"initialValue":{"id":99,"name":"_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7,"src":"2518:6:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"2499:25:0"},{"expression":{"id":103,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":101,"name":"_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7,"src":"2534:6:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":102,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":94,"src":"2543:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2534:17:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":104,"nodeType":"ExpressionStatement","src":"2534:17:0"},{"eventCall":{"arguments":[{"id":106,"name":"oldOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":98,"src":"2587:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":107,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":94,"src":"2597:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":105,"name":"OwnershipTransferred","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":13,"src":"2566:20:0","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$returns$__$","typeString":"function (address,address)"}},"id":108,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2566:40:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":109,"nodeType":"EmitStatement","src":"2561:45:0"}]},"documentation":{"id":92,"nodeType":"StructuredDocumentation","src":"2278:143:0","text":" @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."},"id":111,"implemented":true,"kind":"function","modifiers":[],"name":"_transferOwnership","nameLocation":"2435:18:0","nodeType":"FunctionDefinition","parameters":{"id":95,"nodeType":"ParameterList","parameters":[{"constant":false,"id":94,"mutability":"mutable","name":"newOwner","nameLocation":"2462:8:0","nodeType":"VariableDeclaration","scope":111,"src":"2454:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":93,"name":"address","nodeType":"ElementaryTypeName","src":"2454:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2453:18:0"},"returnParameters":{"id":96,"nodeType":"ParameterList","parameters":[],"src":"2489:0:0"},"scope":112,"src":"2426:187:0","stateMutability":"nonpayable","virtual":true,"visibility":"internal"}],"scope":113,"src":"654:1961:0","usedErrors":[]}],"src":"102:2514:0"}},"@openzeppelin/contracts/token/ERC20/ERC20.sol":{"id":1,"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC20/ERC20.sol","exportedSymbols":{"Context":[1566],"ERC20":[699],"IERC20":[777],"IERC20Metadata":[802]},"id":700,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":114,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"105:23:1"},{"absolutePath":"@openzeppelin/contracts/token/ERC20/IERC20.sol","file":"./IERC20.sol","id":115,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":700,"sourceUnit":778,"src":"130:22:1","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol","file":"./extensions/IERC20Metadata.sol","id":116,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":700,"sourceUnit":803,"src":"153:41:1","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/Context.sol","file":"../../utils/Context.sol","id":117,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":700,"sourceUnit":1567,"src":"195:33:1","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":119,"name":"Context","nodeType":"IdentifierPath","referencedDeclaration":1566,"src":"1550:7:1"},"id":120,"nodeType":"InheritanceSpecifier","src":"1550:7:1"},{"baseName":{"id":121,"name":"IERC20","nodeType":"IdentifierPath","referencedDeclaration":777,"src":"1559:6:1"},"id":122,"nodeType":"InheritanceSpecifier","src":"1559:6:1"},{"baseName":{"id":123,"name":"IERC20Metadata","nodeType":"IdentifierPath","referencedDeclaration":802,"src":"1567:14:1"},"id":124,"nodeType":"InheritanceSpecifier","src":"1567:14:1"}],"canonicalName":"ERC20","contractDependencies":[],"contractKind":"contract","documentation":{"id":118,"nodeType":"StructuredDocumentation","src":"230:1301:1","text":" @dev Implementation of the {IERC20} interface.\n This implementation is agnostic to the way tokens are created. This means\n that a supply mechanism has to be added in a derived contract using {_mint}.\n For a generic mechanism see {ERC20PresetMinterPauser}.\n TIP: For a detailed writeup see our guide\n https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n to implement supply mechanisms].\n The default value of {decimals} is 18. To change this, you should override\n this function so it returns a different value.\n We have followed general OpenZeppelin Contracts guidelines: functions revert\n instead returning `false` on failure. This behavior is nonetheless\n conventional and does not conflict with the expectations of ERC20\n applications.\n Additionally, an {Approval} event is emitted on calls to {transferFrom}.\n This allows applications to reconstruct the allowance for all accounts just\n by listening to said events. Other implementations of the EIP may not emit\n these events, as it isn't required by the specification.\n Finally, the non-standard {decreaseAllowance} and {increaseAllowance}\n functions have been added to mitigate the well-known issues around setting\n allowances. See {IERC20-approve}."},"fullyImplemented":true,"id":699,"linearizedBaseContracts":[699,802,777,1566],"name":"ERC20","nameLocation":"1541:5:1","nodeType":"ContractDefinition","nodes":[{"constant":false,"id":128,"mutability":"mutable","name":"_balances","nameLocation":"1624:9:1","nodeType":"VariableDeclaration","scope":699,"src":"1588:45:1","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"typeName":{"id":127,"keyType":{"id":125,"name":"address","nodeType":"ElementaryTypeName","src":"1596:7:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1588:27:1","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"valueType":{"id":126,"name":"uint256","nodeType":"ElementaryTypeName","src":"1607:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},"visibility":"private"},{"constant":false,"id":134,"mutability":"mutable","name":"_allowances","nameLocation":"1696:11:1","nodeType":"VariableDeclaration","scope":699,"src":"1640:67:1","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"},"typeName":{"id":133,"keyType":{"id":129,"name":"address","nodeType":"ElementaryTypeName","src":"1648:7:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1640:47:1","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"},"valueType":{"id":132,"keyType":{"id":130,"name":"address","nodeType":"ElementaryTypeName","src":"1667:7:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1659:27:1","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"valueType":{"id":131,"name":"uint256","nodeType":"ElementaryTypeName","src":"1678:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}}},"visibility":"private"},{"constant":false,"id":136,"mutability":"mutable","name":"_totalSupply","nameLocation":"1730:12:1","nodeType":"VariableDeclaration","scope":699,"src":"1714:28:1","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":135,"name":"uint256","nodeType":"ElementaryTypeName","src":"1714:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"private"},{"constant":false,"id":138,"mutability":"mutable","name":"_name","nameLocation":"1764:5:1","nodeType":"VariableDeclaration","scope":699,"src":"1749:20:1","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string"},"typeName":{"id":137,"name":"string","nodeType":"ElementaryTypeName","src":"1749:6:1","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"private"},{"constant":false,"id":140,"mutability":"mutable","name":"_symbol","nameLocation":"1790:7:1","nodeType":"VariableDeclaration","scope":699,"src":"1775:22:1","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string"},"typeName":{"id":139,"name":"string","nodeType":"ElementaryTypeName","src":"1775:6:1","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"private"},{"body":{"id":156,"nodeType":"Block","src":"2036:57:1","statements":[{"expression":{"id":150,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":148,"name":"_name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":138,"src":"2046:5:1","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":149,"name":"name_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":143,"src":"2054:5:1","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"2046:13:1","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":151,"nodeType":"ExpressionStatement","src":"2046:13:1"},{"expression":{"id":154,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":152,"name":"_symbol","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":140,"src":"2069:7:1","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":153,"name":"symbol_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":145,"src":"2079:7:1","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"2069:17:1","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":155,"nodeType":"ExpressionStatement","src":"2069:17:1"}]},"documentation":{"id":141,"nodeType":"StructuredDocumentation","src":"1804:171:1","text":" @dev Sets the values for {name} and {symbol}.\n All two of these values are immutable: they can only be set once during\n construction."},"id":157,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":146,"nodeType":"ParameterList","parameters":[{"constant":false,"id":143,"mutability":"mutable","name":"name_","nameLocation":"2006:5:1","nodeType":"VariableDeclaration","scope":157,"src":"1992:19:1","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":142,"name":"string","nodeType":"ElementaryTypeName","src":"1992:6:1","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":145,"mutability":"mutable","name":"symbol_","nameLocation":"2027:7:1","nodeType":"VariableDeclaration","scope":157,"src":"2013:21:1","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":144,"name":"string","nodeType":"ElementaryTypeName","src":"2013:6:1","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1991:44:1"},"returnParameters":{"id":147,"nodeType":"ParameterList","parameters":[],"src":"2036:0:1"},"scope":699,"src":"1980:113:1","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"baseFunctions":[789],"body":{"id":166,"nodeType":"Block","src":"2227:29:1","statements":[{"expression":{"id":164,"name":"_name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":138,"src":"2244:5:1","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"functionReturnParameters":163,"id":165,"nodeType":"Return","src":"2237:12:1"}]},"documentation":{"id":158,"nodeType":"StructuredDocumentation","src":"2099:54:1","text":" @dev Returns the name of the token."},"functionSelector":"06fdde03","id":167,"implemented":true,"kind":"function","modifiers":[],"name":"name","nameLocation":"2167:4:1","nodeType":"FunctionDefinition","overrides":{"id":160,"nodeType":"OverrideSpecifier","overrides":[],"src":"2194:8:1"},"parameters":{"id":159,"nodeType":"ParameterList","parameters":[],"src":"2171:2:1"},"returnParameters":{"id":163,"nodeType":"ParameterList","parameters":[{"constant":false,"id":162,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":167,"src":"2212:13:1","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":161,"name":"string","nodeType":"ElementaryTypeName","src":"2212:6:1","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2211:15:1"},"scope":699,"src":"2158:98:1","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[795],"body":{"id":176,"nodeType":"Block","src":"2440:31:1","statements":[{"expression":{"id":174,"name":"_symbol","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":140,"src":"2457:7:1","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"functionReturnParameters":173,"id":175,"nodeType":"Return","src":"2450:14:1"}]},"documentation":{"id":168,"nodeType":"StructuredDocumentation","src":"2262:102:1","text":" @dev Returns the symbol of the token, usually a shorter version of the\n name."},"functionSelector":"95d89b41","id":177,"implemented":true,"kind":"function","modifiers":[],"name":"symbol","nameLocation":"2378:6:1","nodeType":"FunctionDefinition","overrides":{"id":170,"nodeType":"OverrideSpecifier","overrides":[],"src":"2407:8:1"},"parameters":{"id":169,"nodeType":"ParameterList","parameters":[],"src":"2384:2:1"},"returnParameters":{"id":173,"nodeType":"ParameterList","parameters":[{"constant":false,"id":172,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":177,"src":"2425:13:1","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":171,"name":"string","nodeType":"ElementaryTypeName","src":"2425:6:1","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2424:15:1"},"scope":699,"src":"2369:102:1","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[801],"body":{"id":186,"nodeType":"Block","src":"3169:26:1","statements":[{"expression":{"hexValue":"3138","id":184,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3186:2:1","typeDescriptions":{"typeIdentifier":"t_rational_18_by_1","typeString":"int_const 18"},"value":"18"},"functionReturnParameters":183,"id":185,"nodeType":"Return","src":"3179:9:1"}]},"documentation":{"id":178,"nodeType":"StructuredDocumentation","src":"2477:622:1","text":" @dev Returns the number of decimals used to get its user representation.\n For example, if `decimals` equals `2`, a balance of `505` tokens should\n be displayed to a user as `5.05` (`505 / 10 ** 2`).\n Tokens usually opt for a value of 18, imitating the relationship between\n Ether and Wei. This is the default value returned by this function, unless\n it's overridden.\n NOTE: This information is only used for _display_ purposes: it in\n no way affects any of the arithmetic of the contract, including\n {IERC20-balanceOf} and {IERC20-transfer}."},"functionSelector":"313ce567","id":187,"implemented":true,"kind":"function","modifiers":[],"name":"decimals","nameLocation":"3113:8:1","nodeType":"FunctionDefinition","overrides":{"id":180,"nodeType":"OverrideSpecifier","overrides":[],"src":"3144:8:1"},"parameters":{"id":179,"nodeType":"ParameterList","parameters":[],"src":"3121:2:1"},"returnParameters":{"id":183,"nodeType":"ParameterList","parameters":[{"constant":false,"id":182,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":187,"src":"3162:5:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":181,"name":"uint8","nodeType":"ElementaryTypeName","src":"3162:5:1","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"3161:7:1"},"scope":699,"src":"3104:91:1","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[726],"body":{"id":196,"nodeType":"Block","src":"3325:36:1","statements":[{"expression":{"id":194,"name":"_totalSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":136,"src":"3342:12:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":193,"id":195,"nodeType":"Return","src":"3335:19:1"}]},"documentation":{"id":188,"nodeType":"StructuredDocumentation","src":"3201:49:1","text":" @dev See {IERC20-totalSupply}."},"functionSelector":"18160ddd","id":197,"implemented":true,"kind":"function","modifiers":[],"name":"totalSupply","nameLocation":"3264:11:1","nodeType":"FunctionDefinition","overrides":{"id":190,"nodeType":"OverrideSpecifier","overrides":[],"src":"3298:8:1"},"parameters":{"id":189,"nodeType":"ParameterList","parameters":[],"src":"3275:2:1"},"returnParameters":{"id":193,"nodeType":"ParameterList","parameters":[{"constant":false,"id":192,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":197,"src":"3316:7:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":191,"name":"uint256","nodeType":"ElementaryTypeName","src":"3316:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3315:9:1"},"scope":699,"src":"3255:106:1","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[734],"body":{"id":210,"nodeType":"Block","src":"3502:42:1","statements":[{"expression":{"baseExpression":{"id":206,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":128,"src":"3519:9:1","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":208,"indexExpression":{"id":207,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":200,"src":"3529:7:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3519:18:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":205,"id":209,"nodeType":"Return","src":"3512:25:1"}]},"documentation":{"id":198,"nodeType":"StructuredDocumentation","src":"3367:47:1","text":" @dev See {IERC20-balanceOf}."},"functionSelector":"70a08231","id":211,"implemented":true,"kind":"function","modifiers":[],"name":"balanceOf","nameLocation":"3428:9:1","nodeType":"FunctionDefinition","overrides":{"id":202,"nodeType":"OverrideSpecifier","overrides":[],"src":"3475:8:1"},"parameters":{"id":201,"nodeType":"ParameterList","parameters":[{"constant":false,"id":200,"mutability":"mutable","name":"account","nameLocation":"3446:7:1","nodeType":"VariableDeclaration","scope":211,"src":"3438:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":199,"name":"address","nodeType":"ElementaryTypeName","src":"3438:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3437:17:1"},"returnParameters":{"id":205,"nodeType":"ParameterList","parameters":[{"constant":false,"id":204,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":211,"src":"3493:7:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":203,"name":"uint256","nodeType":"ElementaryTypeName","src":"3493:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3492:9:1"},"scope":699,"src":"3419:125:1","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[744],"body":{"id":235,"nodeType":"Block","src":"3825:104:1","statements":[{"assignments":[223],"declarations":[{"constant":false,"id":223,"mutability":"mutable","name":"owner","nameLocation":"3843:5:1","nodeType":"VariableDeclaration","scope":235,"src":"3835:13:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":222,"name":"address","nodeType":"ElementaryTypeName","src":"3835:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":226,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":224,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1556,"src":"3851:10:1","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":225,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3851:12:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"3835:28:1"},{"expression":{"arguments":[{"id":228,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":223,"src":"3883:5:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":229,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":214,"src":"3890:2:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":230,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":216,"src":"3894:6:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":227,"name":"_transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":459,"src":"3873:9:1","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":231,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3873:28:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":232,"nodeType":"ExpressionStatement","src":"3873:28:1"},{"expression":{"hexValue":"74727565","id":233,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"3918:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":221,"id":234,"nodeType":"Return","src":"3911:11:1"}]},"documentation":{"id":212,"nodeType":"StructuredDocumentation","src":"3550:185:1","text":" @dev See {IERC20-transfer}.\n Requirements:\n - `to` cannot be the zero address.\n - the caller must have a balance of at least `amount`."},"functionSelector":"a9059cbb","id":236,"implemented":true,"kind":"function","modifiers":[],"name":"transfer","nameLocation":"3749:8:1","nodeType":"FunctionDefinition","overrides":{"id":218,"nodeType":"OverrideSpecifier","overrides":[],"src":"3801:8:1"},"parameters":{"id":217,"nodeType":"ParameterList","parameters":[{"constant":false,"id":214,"mutability":"mutable","name":"to","nameLocation":"3766:2:1","nodeType":"VariableDeclaration","scope":236,"src":"3758:10:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":213,"name":"address","nodeType":"ElementaryTypeName","src":"3758:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":216,"mutability":"mutable","name":"amount","nameLocation":"3778:6:1","nodeType":"VariableDeclaration","scope":236,"src":"3770:14:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":215,"name":"uint256","nodeType":"ElementaryTypeName","src":"3770:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3757:28:1"},"returnParameters":{"id":221,"nodeType":"ParameterList","parameters":[{"constant":false,"id":220,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":236,"src":"3819:4:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":219,"name":"bool","nodeType":"ElementaryTypeName","src":"3819:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"3818:6:1"},"scope":699,"src":"3740:189:1","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"baseFunctions":[754],"body":{"id":253,"nodeType":"Block","src":"4085:51:1","statements":[{"expression":{"baseExpression":{"baseExpression":{"id":247,"name":"_allowances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":134,"src":"4102:11:1","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"}},"id":249,"indexExpression":{"id":248,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":239,"src":"4114:5:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4102:18:1","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":251,"indexExpression":{"id":250,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":241,"src":"4121:7:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4102:27:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":246,"id":252,"nodeType":"Return","src":"4095:34:1"}]},"documentation":{"id":237,"nodeType":"StructuredDocumentation","src":"3935:47:1","text":" @dev See {IERC20-allowance}."},"functionSelector":"dd62ed3e","id":254,"implemented":true,"kind":"function","modifiers":[],"name":"allowance","nameLocation":"3996:9:1","nodeType":"FunctionDefinition","overrides":{"id":243,"nodeType":"OverrideSpecifier","overrides":[],"src":"4058:8:1"},"parameters":{"id":242,"nodeType":"ParameterList","parameters":[{"constant":false,"id":239,"mutability":"mutable","name":"owner","nameLocation":"4014:5:1","nodeType":"VariableDeclaration","scope":254,"src":"4006:13:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":238,"name":"address","nodeType":"ElementaryTypeName","src":"4006:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":241,"mutability":"mutable","name":"spender","nameLocation":"4029:7:1","nodeType":"VariableDeclaration","scope":254,"src":"4021:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":240,"name":"address","nodeType":"ElementaryTypeName","src":"4021:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4005:32:1"},"returnParameters":{"id":246,"nodeType":"ParameterList","parameters":[{"constant":false,"id":245,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":254,"src":"4076:7:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":244,"name":"uint256","nodeType":"ElementaryTypeName","src":"4076:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4075:9:1"},"scope":699,"src":"3987:149:1","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[764],"body":{"id":278,"nodeType":"Block","src":"4533:108:1","statements":[{"assignments":[266],"declarations":[{"constant":false,"id":266,"mutability":"mutable","name":"owner","nameLocation":"4551:5:1","nodeType":"VariableDeclaration","scope":278,"src":"4543:13:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":265,"name":"address","nodeType":"ElementaryTypeName","src":"4543:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":269,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":267,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1556,"src":"4559:10:1","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":268,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4559:12:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"4543:28:1"},{"expression":{"arguments":[{"id":271,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":266,"src":"4590:5:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":272,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":257,"src":"4597:7:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":273,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":259,"src":"4606:6:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":270,"name":"_approve","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":633,"src":"4581:8:1","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":274,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4581:32:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":275,"nodeType":"ExpressionStatement","src":"4581:32:1"},{"expression":{"hexValue":"74727565","id":276,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"4630:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":264,"id":277,"nodeType":"Return","src":"4623:11:1"}]},"documentation":{"id":255,"nodeType":"StructuredDocumentation","src":"4142:297:1","text":" @dev See {IERC20-approve}.\n NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on\n `transferFrom`. This is semantically equivalent to an infinite approval.\n Requirements:\n - `spender` cannot be the zero address."},"functionSelector":"095ea7b3","id":279,"implemented":true,"kind":"function","modifiers":[],"name":"approve","nameLocation":"4453:7:1","nodeType":"FunctionDefinition","overrides":{"id":261,"nodeType":"OverrideSpecifier","overrides":[],"src":"4509:8:1"},"parameters":{"id":260,"nodeType":"ParameterList","parameters":[{"constant":false,"id":257,"mutability":"mutable","name":"spender","nameLocation":"4469:7:1","nodeType":"VariableDeclaration","scope":279,"src":"4461:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":256,"name":"address","nodeType":"ElementaryTypeName","src":"4461:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":259,"mutability":"mutable","name":"amount","nameLocation":"4486:6:1","nodeType":"VariableDeclaration","scope":279,"src":"4478:14:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":258,"name":"uint256","nodeType":"ElementaryTypeName","src":"4478:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4460:33:1"},"returnParameters":{"id":264,"nodeType":"ParameterList","parameters":[{"constant":false,"id":263,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":279,"src":"4527:4:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":262,"name":"bool","nodeType":"ElementaryTypeName","src":"4527:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"4526:6:1"},"scope":699,"src":"4444:197:1","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"baseFunctions":[776],"body":{"id":311,"nodeType":"Block","src":"5306:153:1","statements":[{"assignments":[293],"declarations":[{"constant":false,"id":293,"mutability":"mutable","name":"spender","nameLocation":"5324:7:1","nodeType":"VariableDeclaration","scope":311,"src":"5316:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":292,"name":"address","nodeType":"ElementaryTypeName","src":"5316:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":296,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":294,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1556,"src":"5334:10:1","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":295,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5334:12:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"5316:30:1"},{"expression":{"arguments":[{"id":298,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":282,"src":"5372:4:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":299,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":293,"src":"5378:7:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":300,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":286,"src":"5387:6:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":297,"name":"_spendAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":676,"src":"5356:15:1","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":301,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5356:38:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":302,"nodeType":"ExpressionStatement","src":"5356:38:1"},{"expression":{"arguments":[{"id":304,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":282,"src":"5414:4:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":305,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":284,"src":"5420:2:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":306,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":286,"src":"5424:6:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":303,"name":"_transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":459,"src":"5404:9:1","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":307,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5404:27:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":308,"nodeType":"ExpressionStatement","src":"5404:27:1"},{"expression":{"hexValue":"74727565","id":309,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"5448:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":291,"id":310,"nodeType":"Return","src":"5441:11:1"}]},"documentation":{"id":280,"nodeType":"StructuredDocumentation","src":"4647:551:1","text":" @dev See {IERC20-transferFrom}.\n Emits an {Approval} event indicating the updated allowance. This is not\n required by the EIP. See the note at the beginning of {ERC20}.\n NOTE: Does not update the allowance if the current allowance\n is the maximum `uint256`.\n Requirements:\n - `from` and `to` cannot be the zero address.\n - `from` must have a balance of at least `amount`.\n - the caller must have allowance for ``from``'s tokens of at least\n `amount`."},"functionSelector":"23b872dd","id":312,"implemented":true,"kind":"function","modifiers":[],"name":"transferFrom","nameLocation":"5212:12:1","nodeType":"FunctionDefinition","overrides":{"id":288,"nodeType":"OverrideSpecifier","overrides":[],"src":"5282:8:1"},"parameters":{"id":287,"nodeType":"ParameterList","parameters":[{"constant":false,"id":282,"mutability":"mutable","name":"from","nameLocation":"5233:4:1","nodeType":"VariableDeclaration","scope":312,"src":"5225:12:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":281,"name":"address","nodeType":"ElementaryTypeName","src":"5225:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":284,"mutability":"mutable","name":"to","nameLocation":"5247:2:1","nodeType":"VariableDeclaration","scope":312,"src":"5239:10:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":283,"name":"address","nodeType":"ElementaryTypeName","src":"5239:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":286,"mutability":"mutable","name":"amount","nameLocation":"5259:6:1","nodeType":"VariableDeclaration","scope":312,"src":"5251:14:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":285,"name":"uint256","nodeType":"ElementaryTypeName","src":"5251:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5224:42:1"},"returnParameters":{"id":291,"nodeType":"ParameterList","parameters":[{"constant":false,"id":290,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":312,"src":"5300:4:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":289,"name":"bool","nodeType":"ElementaryTypeName","src":"5300:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"5299:6:1"},"scope":699,"src":"5203:256:1","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":340,"nodeType":"Block","src":"5948:140:1","statements":[{"assignments":[323],"declarations":[{"constant":false,"id":323,"mutability":"mutable","name":"owner","nameLocation":"5966:5:1","nodeType":"VariableDeclaration","scope":340,"src":"5958:13:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":322,"name":"address","nodeType":"ElementaryTypeName","src":"5958:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":326,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":324,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1556,"src":"5974:10:1","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":325,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5974:12:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"5958:28:1"},{"expression":{"arguments":[{"id":328,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":323,"src":"6005:5:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":329,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":315,"src":"6012:7:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":335,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":331,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":323,"src":"6031:5:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":332,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":315,"src":"6038:7:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":330,"name":"allowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":254,"src":"6021:9:1","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$","typeString":"function (address,address) view returns (uint256)"}},"id":333,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6021:25:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":334,"name":"addedValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":317,"src":"6049:10:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6021:38:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":327,"name":"_approve","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":633,"src":"5996:8:1","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":336,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5996:64:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":337,"nodeType":"ExpressionStatement","src":"5996:64:1"},{"expression":{"hexValue":"74727565","id":338,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"6077:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":321,"id":339,"nodeType":"Return","src":"6070:11:1"}]},"documentation":{"id":313,"nodeType":"StructuredDocumentation","src":"5465:384:1","text":" @dev Atomically increases the allowance granted to `spender` by the caller.\n This is an alternative to {approve} that can be used as a mitigation for\n problems described in {IERC20-approve}.\n Emits an {Approval} event indicating the updated allowance.\n Requirements:\n - `spender` cannot be the zero address."},"functionSelector":"39509351","id":341,"implemented":true,"kind":"function","modifiers":[],"name":"increaseAllowance","nameLocation":"5863:17:1","nodeType":"FunctionDefinition","parameters":{"id":318,"nodeType":"ParameterList","parameters":[{"constant":false,"id":315,"mutability":"mutable","name":"spender","nameLocation":"5889:7:1","nodeType":"VariableDeclaration","scope":341,"src":"5881:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":314,"name":"address","nodeType":"ElementaryTypeName","src":"5881:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":317,"mutability":"mutable","name":"addedValue","nameLocation":"5906:10:1","nodeType":"VariableDeclaration","scope":341,"src":"5898:18:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":316,"name":"uint256","nodeType":"ElementaryTypeName","src":"5898:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5880:37:1"},"returnParameters":{"id":321,"nodeType":"ParameterList","parameters":[{"constant":false,"id":320,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":341,"src":"5942:4:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":319,"name":"bool","nodeType":"ElementaryTypeName","src":"5942:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"5941:6:1"},"scope":699,"src":"5854:234:1","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":381,"nodeType":"Block","src":"6674:328:1","statements":[{"assignments":[352],"declarations":[{"constant":false,"id":352,"mutability":"mutable","name":"owner","nameLocation":"6692:5:1","nodeType":"VariableDeclaration","scope":381,"src":"6684:13:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":351,"name":"address","nodeType":"ElementaryTypeName","src":"6684:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":355,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":353,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1556,"src":"6700:10:1","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":354,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6700:12:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"6684:28:1"},{"assignments":[357],"declarations":[{"constant":false,"id":357,"mutability":"mutable","name":"currentAllowance","nameLocation":"6730:16:1","nodeType":"VariableDeclaration","scope":381,"src":"6722:24:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":356,"name":"uint256","nodeType":"ElementaryTypeName","src":"6722:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":362,"initialValue":{"arguments":[{"id":359,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":352,"src":"6759:5:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":360,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":344,"src":"6766:7:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":358,"name":"allowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":254,"src":"6749:9:1","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$","typeString":"function (address,address) view returns (uint256)"}},"id":361,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6749:25:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"6722:52:1"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":366,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":364,"name":"currentAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":357,"src":"6792:16:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":365,"name":"subtractedValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":346,"src":"6812:15:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6792:35:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726f","id":367,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"6829:39:1","typeDescriptions":{"typeIdentifier":"t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8","typeString":"literal_string \"ERC20: decreased allowance below zero\""},"value":"ERC20: decreased allowance below zero"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8","typeString":"literal_string \"ERC20: decreased allowance below zero\""}],"id":363,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"6784:7:1","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":368,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6784:85:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":369,"nodeType":"ExpressionStatement","src":"6784:85:1"},{"id":378,"nodeType":"UncheckedBlock","src":"6879:95:1","statements":[{"expression":{"arguments":[{"id":371,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":352,"src":"6912:5:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":372,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":344,"src":"6919:7:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":375,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":373,"name":"currentAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":357,"src":"6928:16:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":374,"name":"subtractedValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":346,"src":"6947:15:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6928:34:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":370,"name":"_approve","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":633,"src":"6903:8:1","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":376,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6903:60:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":377,"nodeType":"ExpressionStatement","src":"6903:60:1"}]},{"expression":{"hexValue":"74727565","id":379,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"6991:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":350,"id":380,"nodeType":"Return","src":"6984:11:1"}]},"documentation":{"id":342,"nodeType":"StructuredDocumentation","src":"6094:476:1","text":" @dev Atomically decreases the allowance granted to `spender` by the caller.\n This is an alternative to {approve} that can be used as a mitigation for\n problems described in {IERC20-approve}.\n Emits an {Approval} event indicating the updated allowance.\n Requirements:\n - `spender` cannot be the zero address.\n - `spender` must have allowance for the caller of at least\n `subtractedValue`."},"functionSelector":"a457c2d7","id":382,"implemented":true,"kind":"function","modifiers":[],"name":"decreaseAllowance","nameLocation":"6584:17:1","nodeType":"FunctionDefinition","parameters":{"id":347,"nodeType":"ParameterList","parameters":[{"constant":false,"id":344,"mutability":"mutable","name":"spender","nameLocation":"6610:7:1","nodeType":"VariableDeclaration","scope":382,"src":"6602:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":343,"name":"address","nodeType":"ElementaryTypeName","src":"6602:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":346,"mutability":"mutable","name":"subtractedValue","nameLocation":"6627:15:1","nodeType":"VariableDeclaration","scope":382,"src":"6619:23:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":345,"name":"uint256","nodeType":"ElementaryTypeName","src":"6619:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6601:42:1"},"returnParameters":{"id":350,"nodeType":"ParameterList","parameters":[{"constant":false,"id":349,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":382,"src":"6668:4:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":348,"name":"bool","nodeType":"ElementaryTypeName","src":"6668:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"6667:6:1"},"scope":699,"src":"6575:427:1","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":458,"nodeType":"Block","src":"7534:710:1","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":398,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":393,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":385,"src":"7552:4:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":396,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7568:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":395,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7560:7:1","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":394,"name":"address","nodeType":"ElementaryTypeName","src":"7560:7:1","typeDescriptions":{}}},"id":397,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7560:10:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"7552:18:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"45524332303a207472616e736665722066726f6d20746865207a65726f2061646472657373","id":399,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"7572:39:1","typeDescriptions":{"typeIdentifier":"t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea","typeString":"literal_string \"ERC20: transfer from the zero address\""},"value":"ERC20: transfer from the zero address"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea","typeString":"literal_string \"ERC20: transfer from the zero address\""}],"id":392,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"7544:7:1","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":400,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7544:68:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":401,"nodeType":"ExpressionStatement","src":"7544:68:1"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":408,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":403,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":387,"src":"7630:2:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":406,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7644:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":405,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7636:7:1","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":404,"name":"address","nodeType":"ElementaryTypeName","src":"7636:7:1","typeDescriptions":{}}},"id":407,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7636:10:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"7630:16:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"45524332303a207472616e7366657220746f20746865207a65726f2061646472657373","id":409,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"7648:37:1","typeDescriptions":{"typeIdentifier":"t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f","typeString":"literal_string \"ERC20: transfer to the zero address\""},"value":"ERC20: transfer to the zero address"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f","typeString":"literal_string \"ERC20: transfer to the zero address\""}],"id":402,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"7622:7:1","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":410,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7622:64:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":411,"nodeType":"ExpressionStatement","src":"7622:64:1"},{"expression":{"arguments":[{"id":413,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":385,"src":"7718:4:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":414,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":387,"src":"7724:2:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":415,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":389,"src":"7728:6:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":412,"name":"_beforeTokenTransfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":687,"src":"7697:20:1","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":416,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7697:38:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":417,"nodeType":"ExpressionStatement","src":"7697:38:1"},{"assignments":[419],"declarations":[{"constant":false,"id":419,"mutability":"mutable","name":"fromBalance","nameLocation":"7754:11:1","nodeType":"VariableDeclaration","scope":458,"src":"7746:19:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":418,"name":"uint256","nodeType":"ElementaryTypeName","src":"7746:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":423,"initialValue":{"baseExpression":{"id":420,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":128,"src":"7768:9:1","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":422,"indexExpression":{"id":421,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":385,"src":"7778:4:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"7768:15:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"7746:37:1"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":427,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":425,"name":"fromBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":419,"src":"7801:11:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":426,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":389,"src":"7816:6:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7801:21:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"45524332303a207472616e7366657220616d6f756e7420657863656564732062616c616e6365","id":428,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"7824:40:1","typeDescriptions":{"typeIdentifier":"t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6","typeString":"literal_string \"ERC20: transfer amount exceeds balance\""},"value":"ERC20: transfer amount exceeds balance"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6","typeString":"literal_string \"ERC20: transfer amount exceeds balance\""}],"id":424,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"7793:7:1","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":429,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7793:72:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":430,"nodeType":"ExpressionStatement","src":"7793:72:1"},{"id":445,"nodeType":"UncheckedBlock","src":"7875:273:1","statements":[{"expression":{"id":437,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":431,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":128,"src":"7899:9:1","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":433,"indexExpression":{"id":432,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":385,"src":"7909:4:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"7899:15:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":436,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":434,"name":"fromBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":419,"src":"7917:11:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":435,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":389,"src":"7931:6:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7917:20:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7899:38:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":438,"nodeType":"ExpressionStatement","src":"7899:38:1"},{"expression":{"id":443,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":439,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":128,"src":"8114:9:1","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":441,"indexExpression":{"id":440,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":387,"src":"8124:2:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"8114:13:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":442,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":389,"src":"8131:6:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8114:23:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":444,"nodeType":"ExpressionStatement","src":"8114:23:1"}]},{"eventCall":{"arguments":[{"id":447,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":385,"src":"8172:4:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":448,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":387,"src":"8178:2:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":449,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":389,"src":"8182:6:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":446,"name":"Transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":711,"src":"8163:8:1","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":450,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8163:26:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":451,"nodeType":"EmitStatement","src":"8158:31:1"},{"expression":{"arguments":[{"id":453,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":385,"src":"8220:4:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":454,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":387,"src":"8226:2:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":455,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":389,"src":"8230:6:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":452,"name":"_afterTokenTransfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":698,"src":"8200:19:1","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":456,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8200:37:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":457,"nodeType":"ExpressionStatement","src":"8200:37:1"}]},"documentation":{"id":383,"nodeType":"StructuredDocumentation","src":"7008:443:1","text":" @dev Moves `amount` of tokens from `from` to `to`.\n This internal function is equivalent to {transfer}, and can be used to\n e.g. implement automatic token fees, slashing mechanisms, etc.\n Emits a {Transfer} event.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `from` must have a balance of at least `amount`."},"id":459,"implemented":true,"kind":"function","modifiers":[],"name":"_transfer","nameLocation":"7465:9:1","nodeType":"FunctionDefinition","parameters":{"id":390,"nodeType":"ParameterList","parameters":[{"constant":false,"id":385,"mutability":"mutable","name":"from","nameLocation":"7483:4:1","nodeType":"VariableDeclaration","scope":459,"src":"7475:12:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":384,"name":"address","nodeType":"ElementaryTypeName","src":"7475:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":387,"mutability":"mutable","name":"to","nameLocation":"7497:2:1","nodeType":"VariableDeclaration","scope":459,"src":"7489:10:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":386,"name":"address","nodeType":"ElementaryTypeName","src":"7489:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":389,"mutability":"mutable","name":"amount","nameLocation":"7509:6:1","nodeType":"VariableDeclaration","scope":459,"src":"7501:14:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":388,"name":"uint256","nodeType":"ElementaryTypeName","src":"7501:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7474:42:1"},"returnParameters":{"id":391,"nodeType":"ParameterList","parameters":[],"src":"7534:0:1"},"scope":699,"src":"7456:788:1","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":515,"nodeType":"Block","src":"8585:470:1","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":473,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":468,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":462,"src":"8603:7:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":471,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8622:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":470,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8614:7:1","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":469,"name":"address","nodeType":"ElementaryTypeName","src":"8614:7:1","typeDescriptions":{}}},"id":472,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8614:10:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"8603:21:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"45524332303a206d696e7420746f20746865207a65726f2061646472657373","id":474,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"8626:33:1","typeDescriptions":{"typeIdentifier":"t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e","typeString":"literal_string \"ERC20: mint to the zero address\""},"value":"ERC20: mint to the zero address"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e","typeString":"literal_string \"ERC20: mint to the zero address\""}],"id":467,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"8595:7:1","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":475,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8595:65:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":476,"nodeType":"ExpressionStatement","src":"8595:65:1"},{"expression":{"arguments":[{"arguments":[{"hexValue":"30","id":480,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8700:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":479,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8692:7:1","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":478,"name":"address","nodeType":"ElementaryTypeName","src":"8692:7:1","typeDescriptions":{}}},"id":481,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8692:10:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":482,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":462,"src":"8704:7:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":483,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":464,"src":"8713:6:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":477,"name":"_beforeTokenTransfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":687,"src":"8671:20:1","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":484,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8671:49:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":485,"nodeType":"ExpressionStatement","src":"8671:49:1"},{"expression":{"id":488,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":486,"name":"_totalSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":136,"src":"8731:12:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":487,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":464,"src":"8747:6:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8731:22:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":489,"nodeType":"ExpressionStatement","src":"8731:22:1"},{"id":496,"nodeType":"UncheckedBlock","src":"8763:175:1","statements":[{"expression":{"id":494,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":490,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":128,"src":"8899:9:1","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":492,"indexExpression":{"id":491,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":462,"src":"8909:7:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"8899:18:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":493,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":464,"src":"8921:6:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8899:28:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":495,"nodeType":"ExpressionStatement","src":"8899:28:1"}]},{"eventCall":{"arguments":[{"arguments":[{"hexValue":"30","id":500,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8969:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":499,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8961:7:1","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":498,"name":"address","nodeType":"ElementaryTypeName","src":"8961:7:1","typeDescriptions":{}}},"id":501,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8961:10:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":502,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":462,"src":"8973:7:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":503,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":464,"src":"8982:6:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":497,"name":"Transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":711,"src":"8952:8:1","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":504,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8952:37:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":505,"nodeType":"EmitStatement","src":"8947:42:1"},{"expression":{"arguments":[{"arguments":[{"hexValue":"30","id":509,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9028:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":508,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9020:7:1","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":507,"name":"address","nodeType":"ElementaryTypeName","src":"9020:7:1","typeDescriptions":{}}},"id":510,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9020:10:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":511,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":462,"src":"9032:7:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":512,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":464,"src":"9041:6:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":506,"name":"_afterTokenTransfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":698,"src":"9000:19:1","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":513,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9000:48:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":514,"nodeType":"ExpressionStatement","src":"9000:48:1"}]},"documentation":{"id":460,"nodeType":"StructuredDocumentation","src":"8250:265:1","text":"@dev Creates `amount` tokens and assigns them to `account`, increasing\n the total supply.\n Emits a {Transfer} event with `from` set to the zero address.\n Requirements:\n - `account` cannot be the zero address."},"id":516,"implemented":true,"kind":"function","modifiers":[],"name":"_mint","nameLocation":"8529:5:1","nodeType":"FunctionDefinition","parameters":{"id":465,"nodeType":"ParameterList","parameters":[{"constant":false,"id":462,"mutability":"mutable","name":"account","nameLocation":"8543:7:1","nodeType":"VariableDeclaration","scope":516,"src":"8535:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":461,"name":"address","nodeType":"ElementaryTypeName","src":"8535:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":464,"mutability":"mutable","name":"amount","nameLocation":"8560:6:1","nodeType":"VariableDeclaration","scope":516,"src":"8552:14:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":463,"name":"uint256","nodeType":"ElementaryTypeName","src":"8552:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8534:33:1"},"returnParameters":{"id":466,"nodeType":"ParameterList","parameters":[],"src":"8585:0:1"},"scope":699,"src":"8520:535:1","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":587,"nodeType":"Block","src":"9440:594:1","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":530,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":525,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":519,"src":"9458:7:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":528,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9477:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":527,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9469:7:1","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":526,"name":"address","nodeType":"ElementaryTypeName","src":"9469:7:1","typeDescriptions":{}}},"id":529,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9469:10:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"9458:21:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"45524332303a206275726e2066726f6d20746865207a65726f2061646472657373","id":531,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"9481:35:1","typeDescriptions":{"typeIdentifier":"t_stringliteral_b16788493b576042bb52c50ed56189e0b250db113c7bfb1c3897d25cf9632d7f","typeString":"literal_string \"ERC20: burn from the zero address\""},"value":"ERC20: burn from the zero address"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_b16788493b576042bb52c50ed56189e0b250db113c7bfb1c3897d25cf9632d7f","typeString":"literal_string \"ERC20: burn from the zero address\""}],"id":524,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"9450:7:1","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":532,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9450:67:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":533,"nodeType":"ExpressionStatement","src":"9450:67:1"},{"expression":{"arguments":[{"id":535,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":519,"src":"9549:7:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"hexValue":"30","id":538,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9566:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":537,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9558:7:1","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":536,"name":"address","nodeType":"ElementaryTypeName","src":"9558:7:1","typeDescriptions":{}}},"id":539,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9558:10:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":540,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":521,"src":"9570:6:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":534,"name":"_beforeTokenTransfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":687,"src":"9528:20:1","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":541,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9528:49:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":542,"nodeType":"ExpressionStatement","src":"9528:49:1"},{"assignments":[544],"declarations":[{"constant":false,"id":544,"mutability":"mutable","name":"accountBalance","nameLocation":"9596:14:1","nodeType":"VariableDeclaration","scope":587,"src":"9588:22:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":543,"name":"uint256","nodeType":"ElementaryTypeName","src":"9588:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":548,"initialValue":{"baseExpression":{"id":545,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":128,"src":"9613:9:1","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":547,"indexExpression":{"id":546,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":519,"src":"9623:7:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"9613:18:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"9588:43:1"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":552,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":550,"name":"accountBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":544,"src":"9649:14:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":551,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":521,"src":"9667:6:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9649:24:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"45524332303a206275726e20616d6f756e7420657863656564732062616c616e6365","id":553,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"9675:36:1","typeDescriptions":{"typeIdentifier":"t_stringliteral_149b126e7125232b4200af45303d04fba8b74653b1a295a6a561a528c33fefdd","typeString":"literal_string \"ERC20: burn amount exceeds balance\""},"value":"ERC20: burn amount exceeds balance"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_149b126e7125232b4200af45303d04fba8b74653b1a295a6a561a528c33fefdd","typeString":"literal_string \"ERC20: burn amount exceeds balance\""}],"id":549,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"9641:7:1","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":554,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9641:71:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":555,"nodeType":"ExpressionStatement","src":"9641:71:1"},{"id":568,"nodeType":"UncheckedBlock","src":"9722:194:1","statements":[{"expression":{"id":562,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":556,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":128,"src":"9746:9:1","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":558,"indexExpression":{"id":557,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":519,"src":"9756:7:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"9746:18:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":561,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":559,"name":"accountBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":544,"src":"9767:14:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":560,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":521,"src":"9784:6:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9767:23:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9746:44:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":563,"nodeType":"ExpressionStatement","src":"9746:44:1"},{"expression":{"id":566,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":564,"name":"_totalSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":136,"src":"9883:12:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"-=","rightHandSide":{"id":565,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":521,"src":"9899:6:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9883:22:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":567,"nodeType":"ExpressionStatement","src":"9883:22:1"}]},{"eventCall":{"arguments":[{"id":570,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":519,"src":"9940:7:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"hexValue":"30","id":573,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9957:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":572,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9949:7:1","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":571,"name":"address","nodeType":"ElementaryTypeName","src":"9949:7:1","typeDescriptions":{}}},"id":574,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9949:10:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":575,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":521,"src":"9961:6:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":569,"name":"Transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":711,"src":"9931:8:1","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":576,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9931:37:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":577,"nodeType":"EmitStatement","src":"9926:42:1"},{"expression":{"arguments":[{"id":579,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":519,"src":"9999:7:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"hexValue":"30","id":582,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10016:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":581,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10008:7:1","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":580,"name":"address","nodeType":"ElementaryTypeName","src":"10008:7:1","typeDescriptions":{}}},"id":583,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"10008:10:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":584,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":521,"src":"10020:6:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":578,"name":"_afterTokenTransfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":698,"src":"9979:19:1","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":585,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9979:48:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":586,"nodeType":"ExpressionStatement","src":"9979:48:1"}]},"documentation":{"id":517,"nodeType":"StructuredDocumentation","src":"9061:309:1","text":" @dev Destroys `amount` tokens from `account`, reducing the\n total supply.\n Emits a {Transfer} event with `to` set to the zero address.\n Requirements:\n - `account` cannot be the zero address.\n - `account` must have at least `amount` tokens."},"id":588,"implemented":true,"kind":"function","modifiers":[],"name":"_burn","nameLocation":"9384:5:1","nodeType":"FunctionDefinition","parameters":{"id":522,"nodeType":"ParameterList","parameters":[{"constant":false,"id":519,"mutability":"mutable","name":"account","nameLocation":"9398:7:1","nodeType":"VariableDeclaration","scope":588,"src":"9390:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":518,"name":"address","nodeType":"ElementaryTypeName","src":"9390:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":521,"mutability":"mutable","name":"amount","nameLocation":"9415:6:1","nodeType":"VariableDeclaration","scope":588,"src":"9407:14:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":520,"name":"uint256","nodeType":"ElementaryTypeName","src":"9407:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9389:33:1"},"returnParameters":{"id":523,"nodeType":"ParameterList","parameters":[],"src":"9440:0:1"},"scope":699,"src":"9375:659:1","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":632,"nodeType":"Block","src":"10540:257:1","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":604,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":599,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":591,"src":"10558:5:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":602,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10575:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":601,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10567:7:1","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":600,"name":"address","nodeType":"ElementaryTypeName","src":"10567:7:1","typeDescriptions":{}}},"id":603,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"10567:10:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"10558:19:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"45524332303a20617070726f76652066726f6d20746865207a65726f2061646472657373","id":605,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"10579:38:1","typeDescriptions":{"typeIdentifier":"t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208","typeString":"literal_string \"ERC20: approve from the zero address\""},"value":"ERC20: approve from the zero address"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208","typeString":"literal_string \"ERC20: approve from the zero address\""}],"id":598,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"10550:7:1","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":606,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"10550:68:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":607,"nodeType":"ExpressionStatement","src":"10550:68:1"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":614,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":609,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":593,"src":"10636:7:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":612,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10655:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":611,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10647:7:1","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":610,"name":"address","nodeType":"ElementaryTypeName","src":"10647:7:1","typeDescriptions":{}}},"id":613,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"10647:10:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"10636:21:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"45524332303a20617070726f766520746f20746865207a65726f2061646472657373","id":615,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"10659:36:1","typeDescriptions":{"typeIdentifier":"t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029","typeString":"literal_string \"ERC20: approve to the zero address\""},"value":"ERC20: approve to the zero address"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029","typeString":"literal_string \"ERC20: approve to the zero address\""}],"id":608,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"10628:7:1","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":616,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"10628:68:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":617,"nodeType":"ExpressionStatement","src":"10628:68:1"},{"expression":{"id":624,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"baseExpression":{"id":618,"name":"_allowances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":134,"src":"10707:11:1","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"}},"id":621,"indexExpression":{"id":619,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":591,"src":"10719:5:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"10707:18:1","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":622,"indexExpression":{"id":620,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":593,"src":"10726:7:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"10707:27:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":623,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":595,"src":"10737:6:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10707:36:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":625,"nodeType":"ExpressionStatement","src":"10707:36:1"},{"eventCall":{"arguments":[{"id":627,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":591,"src":"10767:5:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":628,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":593,"src":"10774:7:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":629,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":595,"src":"10783:6:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":626,"name":"Approval","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":720,"src":"10758:8:1","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":630,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"10758:32:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":631,"nodeType":"EmitStatement","src":"10753:37:1"}]},"documentation":{"id":589,"nodeType":"StructuredDocumentation","src":"10040:412:1","text":" @dev Sets `amount` as the allowance of `spender` over the `owner` s tokens.\n This internal function is equivalent to `approve`, and can be used to\n e.g. set automatic allowances for certain subsystems, etc.\n Emits an {Approval} event.\n Requirements:\n - `owner` cannot be the zero address.\n - `spender` cannot be the zero address."},"id":633,"implemented":true,"kind":"function","modifiers":[],"name":"_approve","nameLocation":"10466:8:1","nodeType":"FunctionDefinition","parameters":{"id":596,"nodeType":"ParameterList","parameters":[{"constant":false,"id":591,"mutability":"mutable","name":"owner","nameLocation":"10483:5:1","nodeType":"VariableDeclaration","scope":633,"src":"10475:13:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":590,"name":"address","nodeType":"ElementaryTypeName","src":"10475:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":593,"mutability":"mutable","name":"spender","nameLocation":"10498:7:1","nodeType":"VariableDeclaration","scope":633,"src":"10490:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":592,"name":"address","nodeType":"ElementaryTypeName","src":"10490:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":595,"mutability":"mutable","name":"amount","nameLocation":"10515:6:1","nodeType":"VariableDeclaration","scope":633,"src":"10507:14:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":594,"name":"uint256","nodeType":"ElementaryTypeName","src":"10507:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10474:48:1"},"returnParameters":{"id":597,"nodeType":"ParameterList","parameters":[],"src":"10540:0:1"},"scope":699,"src":"10457:340:1","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":675,"nodeType":"Block","src":"11168:321:1","statements":[{"assignments":[644],"declarations":[{"constant":false,"id":644,"mutability":"mutable","name":"currentAllowance","nameLocation":"11186:16:1","nodeType":"VariableDeclaration","scope":675,"src":"11178:24:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":643,"name":"uint256","nodeType":"ElementaryTypeName","src":"11178:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":649,"initialValue":{"arguments":[{"id":646,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":636,"src":"11215:5:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":647,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":638,"src":"11222:7:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":645,"name":"allowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":254,"src":"11205:9:1","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$","typeString":"function (address,address) view returns (uint256)"}},"id":648,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"11205:25:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"11178:52:1"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":656,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":650,"name":"currentAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":644,"src":"11244:16:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"expression":{"arguments":[{"id":653,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11269:7:1","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":652,"name":"uint256","nodeType":"ElementaryTypeName","src":"11269:7:1","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"}],"id":651,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"11264:4:1","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":654,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"11264:13:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint256","typeString":"type(uint256)"}},"id":655,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"max","nodeType":"MemberAccess","src":"11264:17:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11244:37:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":674,"nodeType":"IfStatement","src":"11240:243:1","trueBody":{"id":673,"nodeType":"Block","src":"11283:200:1","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":660,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":658,"name":"currentAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":644,"src":"11305:16:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":659,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":640,"src":"11325:6:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11305:26:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"45524332303a20696e73756666696369656e7420616c6c6f77616e6365","id":661,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"11333:31:1","typeDescriptions":{"typeIdentifier":"t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe","typeString":"literal_string \"ERC20: insufficient allowance\""},"value":"ERC20: insufficient allowance"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe","typeString":"literal_string \"ERC20: insufficient allowance\""}],"id":657,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"11297:7:1","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":662,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"11297:68:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":663,"nodeType":"ExpressionStatement","src":"11297:68:1"},{"id":672,"nodeType":"UncheckedBlock","src":"11379:94:1","statements":[{"expression":{"arguments":[{"id":665,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":636,"src":"11416:5:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":666,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":638,"src":"11423:7:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":669,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":667,"name":"currentAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":644,"src":"11432:16:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":668,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":640,"src":"11451:6:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11432:25:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":664,"name":"_approve","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":633,"src":"11407:8:1","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":670,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"11407:51:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":671,"nodeType":"ExpressionStatement","src":"11407:51:1"}]}]}}]},"documentation":{"id":634,"nodeType":"StructuredDocumentation","src":"10803:270:1","text":" @dev Updates `owner` s allowance for `spender` based on spent `amount`.\n Does not update the allowance amount in case of infinite allowance.\n Revert if not enough allowance is available.\n Might emit an {Approval} event."},"id":676,"implemented":true,"kind":"function","modifiers":[],"name":"_spendAllowance","nameLocation":"11087:15:1","nodeType":"FunctionDefinition","parameters":{"id":641,"nodeType":"ParameterList","parameters":[{"constant":false,"id":636,"mutability":"mutable","name":"owner","nameLocation":"11111:5:1","nodeType":"VariableDeclaration","scope":676,"src":"11103:13:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":635,"name":"address","nodeType":"ElementaryTypeName","src":"11103:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":638,"mutability":"mutable","name":"spender","nameLocation":"11126:7:1","nodeType":"VariableDeclaration","scope":676,"src":"11118:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":637,"name":"address","nodeType":"ElementaryTypeName","src":"11118:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":640,"mutability":"mutable","name":"amount","nameLocation":"11143:6:1","nodeType":"VariableDeclaration","scope":676,"src":"11135:14:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":639,"name":"uint256","nodeType":"ElementaryTypeName","src":"11135:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11102:48:1"},"returnParameters":{"id":642,"nodeType":"ParameterList","parameters":[],"src":"11168:0:1"},"scope":699,"src":"11078:411:1","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":686,"nodeType":"Block","src":"12162:2:1","statements":[]},"documentation":{"id":677,"nodeType":"StructuredDocumentation","src":"11495:573:1","text":" @dev Hook that is called before any transfer of tokens. This includes\n minting and burning.\n Calling conditions:\n - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\n will be transferred to `to`.\n - when `from` is zero, `amount` tokens will be minted for `to`.\n - when `to` is zero, `amount` of ``from``'s tokens will be burned.\n - `from` and `to` are never both zero.\n To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks]."},"id":687,"implemented":true,"kind":"function","modifiers":[],"name":"_beforeTokenTransfer","nameLocation":"12082:20:1","nodeType":"FunctionDefinition","parameters":{"id":684,"nodeType":"ParameterList","parameters":[{"constant":false,"id":679,"mutability":"mutable","name":"from","nameLocation":"12111:4:1","nodeType":"VariableDeclaration","scope":687,"src":"12103:12:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":678,"name":"address","nodeType":"ElementaryTypeName","src":"12103:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":681,"mutability":"mutable","name":"to","nameLocation":"12125:2:1","nodeType":"VariableDeclaration","scope":687,"src":"12117:10:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":680,"name":"address","nodeType":"ElementaryTypeName","src":"12117:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":683,"mutability":"mutable","name":"amount","nameLocation":"12137:6:1","nodeType":"VariableDeclaration","scope":687,"src":"12129:14:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":682,"name":"uint256","nodeType":"ElementaryTypeName","src":"12129:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12102:42:1"},"returnParameters":{"id":685,"nodeType":"ParameterList","parameters":[],"src":"12162:0:1"},"scope":699,"src":"12073:91:1","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":697,"nodeType":"Block","src":"12840:2:1","statements":[]},"documentation":{"id":688,"nodeType":"StructuredDocumentation","src":"12170:577:1","text":" @dev Hook that is called after any transfer of tokens. This includes\n minting and burning.\n Calling conditions:\n - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\n has been transferred to `to`.\n - when `from` is zero, `amount` tokens have been minted for `to`.\n - when `to` is zero, `amount` of ``from``'s tokens have been burned.\n - `from` and `to` are never both zero.\n To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks]."},"id":698,"implemented":true,"kind":"function","modifiers":[],"name":"_afterTokenTransfer","nameLocation":"12761:19:1","nodeType":"FunctionDefinition","parameters":{"id":695,"nodeType":"ParameterList","parameters":[{"constant":false,"id":690,"mutability":"mutable","name":"from","nameLocation":"12789:4:1","nodeType":"VariableDeclaration","scope":698,"src":"12781:12:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":689,"name":"address","nodeType":"ElementaryTypeName","src":"12781:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":692,"mutability":"mutable","name":"to","nameLocation":"12803:2:1","nodeType":"VariableDeclaration","scope":698,"src":"12795:10:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":691,"name":"address","nodeType":"ElementaryTypeName","src":"12795:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":694,"mutability":"mutable","name":"amount","nameLocation":"12815:6:1","nodeType":"VariableDeclaration","scope":698,"src":"12807:14:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":693,"name":"uint256","nodeType":"ElementaryTypeName","src":"12807:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12780:42:1"},"returnParameters":{"id":696,"nodeType":"ParameterList","parameters":[],"src":"12840:0:1"},"scope":699,"src":"12752:90:1","stateMutability":"nonpayable","virtual":true,"visibility":"internal"}],"scope":700,"src":"1532:11312:1","usedErrors":[]}],"src":"105:12740:1"}},"@openzeppelin/contracts/token/ERC20/IERC20.sol":{"id":2,"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC20/IERC20.sol","exportedSymbols":{"IERC20":[777]},"id":778,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":701,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"106:23:2"},{"abstract":false,"baseContracts":[],"canonicalName":"IERC20","contractDependencies":[],"contractKind":"interface","documentation":{"id":702,"nodeType":"StructuredDocumentation","src":"131:70:2","text":" @dev Interface of the ERC20 standard as defined in the EIP."},"fullyImplemented":false,"id":777,"linearizedBaseContracts":[777],"name":"IERC20","nameLocation":"212:6:2","nodeType":"ContractDefinition","nodes":[{"anonymous":false,"documentation":{"id":703,"nodeType":"StructuredDocumentation","src":"225:158:2","text":" @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."},"id":711,"name":"Transfer","nameLocation":"394:8:2","nodeType":"EventDefinition","parameters":{"id":710,"nodeType":"ParameterList","parameters":[{"constant":false,"id":705,"indexed":true,"mutability":"mutable","name":"from","nameLocation":"419:4:2","nodeType":"VariableDeclaration","scope":711,"src":"403:20:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":704,"name":"address","nodeType":"ElementaryTypeName","src":"403:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":707,"indexed":true,"mutability":"mutable","name":"to","nameLocation":"441:2:2","nodeType":"VariableDeclaration","scope":711,"src":"425:18:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":706,"name":"address","nodeType":"ElementaryTypeName","src":"425:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":709,"indexed":false,"mutability":"mutable","name":"value","nameLocation":"453:5:2","nodeType":"VariableDeclaration","scope":711,"src":"445:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":708,"name":"uint256","nodeType":"ElementaryTypeName","src":"445:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"402:57:2"},"src":"388:72:2"},{"anonymous":false,"documentation":{"id":712,"nodeType":"StructuredDocumentation","src":"466:148:2","text":" @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."},"id":720,"name":"Approval","nameLocation":"625:8:2","nodeType":"EventDefinition","parameters":{"id":719,"nodeType":"ParameterList","parameters":[{"constant":false,"id":714,"indexed":true,"mutability":"mutable","name":"owner","nameLocation":"650:5:2","nodeType":"VariableDeclaration","scope":720,"src":"634:21:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":713,"name":"address","nodeType":"ElementaryTypeName","src":"634:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":716,"indexed":true,"mutability":"mutable","name":"spender","nameLocation":"673:7:2","nodeType":"VariableDeclaration","scope":720,"src":"657:23:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":715,"name":"address","nodeType":"ElementaryTypeName","src":"657:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":718,"indexed":false,"mutability":"mutable","name":"value","nameLocation":"690:5:2","nodeType":"VariableDeclaration","scope":720,"src":"682:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":717,"name":"uint256","nodeType":"ElementaryTypeName","src":"682:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"633:63:2"},"src":"619:78:2"},{"documentation":{"id":721,"nodeType":"StructuredDocumentation","src":"703:66:2","text":" @dev Returns the amount of tokens in existence."},"functionSelector":"18160ddd","id":726,"implemented":false,"kind":"function","modifiers":[],"name":"totalSupply","nameLocation":"783:11:2","nodeType":"FunctionDefinition","parameters":{"id":722,"nodeType":"ParameterList","parameters":[],"src":"794:2:2"},"returnParameters":{"id":725,"nodeType":"ParameterList","parameters":[{"constant":false,"id":724,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":726,"src":"820:7:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":723,"name":"uint256","nodeType":"ElementaryTypeName","src":"820:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"819:9:2"},"scope":777,"src":"774:55:2","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":727,"nodeType":"StructuredDocumentation","src":"835:72:2","text":" @dev Returns the amount of tokens owned by `account`."},"functionSelector":"70a08231","id":734,"implemented":false,"kind":"function","modifiers":[],"name":"balanceOf","nameLocation":"921:9:2","nodeType":"FunctionDefinition","parameters":{"id":730,"nodeType":"ParameterList","parameters":[{"constant":false,"id":729,"mutability":"mutable","name":"account","nameLocation":"939:7:2","nodeType":"VariableDeclaration","scope":734,"src":"931:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":728,"name":"address","nodeType":"ElementaryTypeName","src":"931:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"930:17:2"},"returnParameters":{"id":733,"nodeType":"ParameterList","parameters":[{"constant":false,"id":732,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":734,"src":"971:7:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":731,"name":"uint256","nodeType":"ElementaryTypeName","src":"971:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"970:9:2"},"scope":777,"src":"912:68:2","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":735,"nodeType":"StructuredDocumentation","src":"986:202:2","text":" @dev Moves `amount` tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."},"functionSelector":"a9059cbb","id":744,"implemented":false,"kind":"function","modifiers":[],"name":"transfer","nameLocation":"1202:8:2","nodeType":"FunctionDefinition","parameters":{"id":740,"nodeType":"ParameterList","parameters":[{"constant":false,"id":737,"mutability":"mutable","name":"to","nameLocation":"1219:2:2","nodeType":"VariableDeclaration","scope":744,"src":"1211:10:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":736,"name":"address","nodeType":"ElementaryTypeName","src":"1211:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":739,"mutability":"mutable","name":"amount","nameLocation":"1231:6:2","nodeType":"VariableDeclaration","scope":744,"src":"1223:14:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":738,"name":"uint256","nodeType":"ElementaryTypeName","src":"1223:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1210:28:2"},"returnParameters":{"id":743,"nodeType":"ParameterList","parameters":[{"constant":false,"id":742,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":744,"src":"1257:4:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":741,"name":"bool","nodeType":"ElementaryTypeName","src":"1257:4:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1256:6:2"},"scope":777,"src":"1193:70:2","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":745,"nodeType":"StructuredDocumentation","src":"1269:264:2","text":" @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."},"functionSelector":"dd62ed3e","id":754,"implemented":false,"kind":"function","modifiers":[],"name":"allowance","nameLocation":"1547:9:2","nodeType":"FunctionDefinition","parameters":{"id":750,"nodeType":"ParameterList","parameters":[{"constant":false,"id":747,"mutability":"mutable","name":"owner","nameLocation":"1565:5:2","nodeType":"VariableDeclaration","scope":754,"src":"1557:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":746,"name":"address","nodeType":"ElementaryTypeName","src":"1557:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":749,"mutability":"mutable","name":"spender","nameLocation":"1580:7:2","nodeType":"VariableDeclaration","scope":754,"src":"1572:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":748,"name":"address","nodeType":"ElementaryTypeName","src":"1572:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1556:32:2"},"returnParameters":{"id":753,"nodeType":"ParameterList","parameters":[{"constant":false,"id":752,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":754,"src":"1612:7:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":751,"name":"uint256","nodeType":"ElementaryTypeName","src":"1612:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1611:9:2"},"scope":777,"src":"1538:83:2","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":755,"nodeType":"StructuredDocumentation","src":"1627:642:2","text":" @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."},"functionSelector":"095ea7b3","id":764,"implemented":false,"kind":"function","modifiers":[],"name":"approve","nameLocation":"2283:7:2","nodeType":"FunctionDefinition","parameters":{"id":760,"nodeType":"ParameterList","parameters":[{"constant":false,"id":757,"mutability":"mutable","name":"spender","nameLocation":"2299:7:2","nodeType":"VariableDeclaration","scope":764,"src":"2291:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":756,"name":"address","nodeType":"ElementaryTypeName","src":"2291:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":759,"mutability":"mutable","name":"amount","nameLocation":"2316:6:2","nodeType":"VariableDeclaration","scope":764,"src":"2308:14:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":758,"name":"uint256","nodeType":"ElementaryTypeName","src":"2308:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2290:33:2"},"returnParameters":{"id":763,"nodeType":"ParameterList","parameters":[{"constant":false,"id":762,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":764,"src":"2342:4:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":761,"name":"bool","nodeType":"ElementaryTypeName","src":"2342:4:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2341:6:2"},"scope":777,"src":"2274:74:2","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":765,"nodeType":"StructuredDocumentation","src":"2354:287:2","text":" @dev Moves `amount` tokens from `from` to `to` using the\n allowance mechanism. `amount` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."},"functionSelector":"23b872dd","id":776,"implemented":false,"kind":"function","modifiers":[],"name":"transferFrom","nameLocation":"2655:12:2","nodeType":"FunctionDefinition","parameters":{"id":772,"nodeType":"ParameterList","parameters":[{"constant":false,"id":767,"mutability":"mutable","name":"from","nameLocation":"2676:4:2","nodeType":"VariableDeclaration","scope":776,"src":"2668:12:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":766,"name":"address","nodeType":"ElementaryTypeName","src":"2668:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":769,"mutability":"mutable","name":"to","nameLocation":"2690:2:2","nodeType":"VariableDeclaration","scope":776,"src":"2682:10:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":768,"name":"address","nodeType":"ElementaryTypeName","src":"2682:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":771,"mutability":"mutable","name":"amount","nameLocation":"2702:6:2","nodeType":"VariableDeclaration","scope":776,"src":"2694:14:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":770,"name":"uint256","nodeType":"ElementaryTypeName","src":"2694:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2667:42:2"},"returnParameters":{"id":775,"nodeType":"ParameterList","parameters":[{"constant":false,"id":774,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":776,"src":"2728:4:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":773,"name":"bool","nodeType":"ElementaryTypeName","src":"2728:4:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2727:6:2"},"scope":777,"src":"2646:88:2","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":778,"src":"202:2534:2","usedErrors":[]}],"src":"106:2631:2"}},"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol":{"id":3,"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol","exportedSymbols":{"IERC20":[777],"IERC20Metadata":[802]},"id":803,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":779,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"110:23:3"},{"absolutePath":"@openzeppelin/contracts/token/ERC20/IERC20.sol","file":"../IERC20.sol","id":780,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":803,"sourceUnit":778,"src":"135:23:3","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":782,"name":"IERC20","nodeType":"IdentifierPath","referencedDeclaration":777,"src":"305:6:3"},"id":783,"nodeType":"InheritanceSpecifier","src":"305:6:3"}],"canonicalName":"IERC20Metadata","contractDependencies":[],"contractKind":"interface","documentation":{"id":781,"nodeType":"StructuredDocumentation","src":"160:116:3","text":" @dev Interface for the optional metadata functions from the ERC20 standard.\n _Available since v4.1._"},"fullyImplemented":false,"id":802,"linearizedBaseContracts":[802,777],"name":"IERC20Metadata","nameLocation":"287:14:3","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":784,"nodeType":"StructuredDocumentation","src":"318:54:3","text":" @dev Returns the name of the token."},"functionSelector":"06fdde03","id":789,"implemented":false,"kind":"function","modifiers":[],"name":"name","nameLocation":"386:4:3","nodeType":"FunctionDefinition","parameters":{"id":785,"nodeType":"ParameterList","parameters":[],"src":"390:2:3"},"returnParameters":{"id":788,"nodeType":"ParameterList","parameters":[{"constant":false,"id":787,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":789,"src":"416:13:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":786,"name":"string","nodeType":"ElementaryTypeName","src":"416:6:3","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"415:15:3"},"scope":802,"src":"377:54:3","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":790,"nodeType":"StructuredDocumentation","src":"437:56:3","text":" @dev Returns the symbol of the token."},"functionSelector":"95d89b41","id":795,"implemented":false,"kind":"function","modifiers":[],"name":"symbol","nameLocation":"507:6:3","nodeType":"FunctionDefinition","parameters":{"id":791,"nodeType":"ParameterList","parameters":[],"src":"513:2:3"},"returnParameters":{"id":794,"nodeType":"ParameterList","parameters":[{"constant":false,"id":793,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":795,"src":"539:13:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":792,"name":"string","nodeType":"ElementaryTypeName","src":"539:6:3","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"538:15:3"},"scope":802,"src":"498:56:3","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":796,"nodeType":"StructuredDocumentation","src":"560:65:3","text":" @dev Returns the decimals places of the token."},"functionSelector":"313ce567","id":801,"implemented":false,"kind":"function","modifiers":[],"name":"decimals","nameLocation":"639:8:3","nodeType":"FunctionDefinition","parameters":{"id":797,"nodeType":"ParameterList","parameters":[],"src":"647:2:3"},"returnParameters":{"id":800,"nodeType":"ParameterList","parameters":[{"constant":false,"id":799,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":801,"src":"673:5:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":798,"name":"uint8","nodeType":"ElementaryTypeName","src":"673:5:3","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"672:7:3"},"scope":802,"src":"630:50:3","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":803,"src":"277:405:3","usedErrors":[]}],"src":"110:573:3"}},"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol":{"id":4,"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol","exportedSymbols":{"IERC20Permit":[838]},"id":839,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":804,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"123:23:4"},{"abstract":false,"baseContracts":[],"canonicalName":"IERC20Permit","contractDependencies":[],"contractKind":"interface","documentation":{"id":805,"nodeType":"StructuredDocumentation","src":"148:480:4","text":" @dev Interface of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in\n https://eips.ethereum.org/EIPS/eip-2612[EIP-2612].\n Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by\n presenting a message signed by the account. By not relying on {IERC20-approve}, the token holder account doesn't\n need to send a transaction, and thus is not required to hold Ether at all."},"fullyImplemented":false,"id":838,"linearizedBaseContracts":[838],"name":"IERC20Permit","nameLocation":"639:12:4","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":806,"nodeType":"StructuredDocumentation","src":"658:792:4","text":" @dev Sets `value` as the allowance of `spender` over ``owner``'s tokens,\n given ``owner``'s signed approval.\n IMPORTANT: The same issues {IERC20-approve} has related to transaction\n ordering also apply here.\n Emits an {Approval} event.\n Requirements:\n - `spender` cannot be the zero address.\n - `deadline` must be a timestamp in the future.\n - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner`\n over the EIP712-formatted function arguments.\n - the signature must use ``owner``'s current nonce (see {nonces}).\n For more information on the signature format, see the\n https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP\n section]."},"functionSelector":"d505accf","id":823,"implemented":false,"kind":"function","modifiers":[],"name":"permit","nameLocation":"1464:6:4","nodeType":"FunctionDefinition","parameters":{"id":821,"nodeType":"ParameterList","parameters":[{"constant":false,"id":808,"mutability":"mutable","name":"owner","nameLocation":"1488:5:4","nodeType":"VariableDeclaration","scope":823,"src":"1480:13:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":807,"name":"address","nodeType":"ElementaryTypeName","src":"1480:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":810,"mutability":"mutable","name":"spender","nameLocation":"1511:7:4","nodeType":"VariableDeclaration","scope":823,"src":"1503:15:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":809,"name":"address","nodeType":"ElementaryTypeName","src":"1503:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":812,"mutability":"mutable","name":"value","nameLocation":"1536:5:4","nodeType":"VariableDeclaration","scope":823,"src":"1528:13:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":811,"name":"uint256","nodeType":"ElementaryTypeName","src":"1528:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":814,"mutability":"mutable","name":"deadline","nameLocation":"1559:8:4","nodeType":"VariableDeclaration","scope":823,"src":"1551:16:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":813,"name":"uint256","nodeType":"ElementaryTypeName","src":"1551:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":816,"mutability":"mutable","name":"v","nameLocation":"1583:1:4","nodeType":"VariableDeclaration","scope":823,"src":"1577:7:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":815,"name":"uint8","nodeType":"ElementaryTypeName","src":"1577:5:4","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":818,"mutability":"mutable","name":"r","nameLocation":"1602:1:4","nodeType":"VariableDeclaration","scope":823,"src":"1594:9:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":817,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1594:7:4","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":820,"mutability":"mutable","name":"s","nameLocation":"1621:1:4","nodeType":"VariableDeclaration","scope":823,"src":"1613:9:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":819,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1613:7:4","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"1470:158:4"},"returnParameters":{"id":822,"nodeType":"ParameterList","parameters":[],"src":"1637:0:4"},"scope":838,"src":"1455:183:4","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":824,"nodeType":"StructuredDocumentation","src":"1644:294:4","text":" @dev Returns the current nonce for `owner`. This value must be\n included whenever a signature is generated for {permit}.\n Every successful call to {permit} increases ``owner``'s nonce by one. This\n prevents a signature from being used multiple times."},"functionSelector":"7ecebe00","id":831,"implemented":false,"kind":"function","modifiers":[],"name":"nonces","nameLocation":"1952:6:4","nodeType":"FunctionDefinition","parameters":{"id":827,"nodeType":"ParameterList","parameters":[{"constant":false,"id":826,"mutability":"mutable","name":"owner","nameLocation":"1967:5:4","nodeType":"VariableDeclaration","scope":831,"src":"1959:13:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":825,"name":"address","nodeType":"ElementaryTypeName","src":"1959:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1958:15:4"},"returnParameters":{"id":830,"nodeType":"ParameterList","parameters":[{"constant":false,"id":829,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":831,"src":"1997:7:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":828,"name":"uint256","nodeType":"ElementaryTypeName","src":"1997:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1996:9:4"},"scope":838,"src":"1943:63:4","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":832,"nodeType":"StructuredDocumentation","src":"2012:128:4","text":" @dev Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}."},"functionSelector":"3644e515","id":837,"implemented":false,"kind":"function","modifiers":[],"name":"DOMAIN_SEPARATOR","nameLocation":"2207:16:4","nodeType":"FunctionDefinition","parameters":{"id":833,"nodeType":"ParameterList","parameters":[],"src":"2223:2:4"},"returnParameters":{"id":836,"nodeType":"ParameterList","parameters":[{"constant":false,"id":835,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":837,"src":"2249:7:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":834,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2249:7:4","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2248:9:4"},"scope":838,"src":"2198:60:4","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":839,"src":"629:1631:4","usedErrors":[]}],"src":"123:2138:4"}},"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol":{"id":5,"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol","exportedSymbols":{"Address":[1544],"IERC20":[777],"IERC20Permit":[838],"SafeERC20":[1214]},"id":1215,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":840,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"115:23:5"},{"absolutePath":"@openzeppelin/contracts/token/ERC20/IERC20.sol","file":"../IERC20.sol","id":841,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1215,"sourceUnit":778,"src":"140:23:5","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol","file":"../extensions/IERC20Permit.sol","id":842,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1215,"sourceUnit":839,"src":"164:40:5","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/Address.sol","file":"../../../utils/Address.sol","id":843,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1215,"sourceUnit":1545,"src":"205:36:5","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"SafeERC20","contractDependencies":[],"contractKind":"library","documentation":{"id":844,"nodeType":"StructuredDocumentation","src":"243:457:5","text":" @title SafeERC20\n @dev Wrappers around ERC20 operations that throw on failure (when the token\n contract returns false). Tokens that return no value (and instead revert or\n throw on failure) are also supported, non-reverting calls are assumed to be\n successful.\n To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,\n which allows you to call the safe operations as `token.safeTransfer(...)`, etc."},"fullyImplemented":true,"id":1214,"linearizedBaseContracts":[1214],"name":"SafeERC20","nameLocation":"709:9:5","nodeType":"ContractDefinition","nodes":[{"id":847,"libraryName":{"id":845,"name":"Address","nodeType":"IdentifierPath","referencedDeclaration":1544,"src":"731:7:5"},"nodeType":"UsingForDirective","src":"725:26:5","typeName":{"id":846,"name":"address","nodeType":"ElementaryTypeName","src":"743:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}},{"body":{"id":870,"nodeType":"Block","src":"1013:103:5","statements":[{"expression":{"arguments":[{"id":859,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":851,"src":"1043:5:5","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$777","typeString":"contract IERC20"}},{"arguments":[{"expression":{"expression":{"id":862,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":851,"src":"1073:5:5","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$777","typeString":"contract IERC20"}},"id":863,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"transfer","nodeType":"MemberAccess","referencedDeclaration":744,"src":"1073:14:5","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) external returns (bool)"}},"id":864,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"selector","nodeType":"MemberAccess","src":"1073:23:5","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},{"id":865,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":853,"src":"1098:2:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":866,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":855,"src":"1102:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes4","typeString":"bytes4"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":860,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"1050:3:5","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":861,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"encodeWithSelector","nodeType":"MemberAccess","src":"1050:22:5","typeDescriptions":{"typeIdentifier":"t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$","typeString":"function (bytes4) pure returns (bytes memory)"}},"id":867,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1050:58:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$777","typeString":"contract IERC20"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":858,"name":"_callOptionalReturn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1165,"src":"1023:19:5","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$777_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (contract IERC20,bytes memory)"}},"id":868,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1023:86:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":869,"nodeType":"ExpressionStatement","src":"1023:86:5"}]},"documentation":{"id":848,"nodeType":"StructuredDocumentation","src":"757:179:5","text":" @dev Transfer `value` amount of `token` from the calling contract to `to`. If `token` returns no value,\n non-reverting calls are assumed to be successful."},"id":871,"implemented":true,"kind":"function","modifiers":[],"name":"safeTransfer","nameLocation":"950:12:5","nodeType":"FunctionDefinition","parameters":{"id":856,"nodeType":"ParameterList","parameters":[{"constant":false,"id":851,"mutability":"mutable","name":"token","nameLocation":"970:5:5","nodeType":"VariableDeclaration","scope":871,"src":"963:12:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$777","typeString":"contract IERC20"},"typeName":{"id":850,"nodeType":"UserDefinedTypeName","pathNode":{"id":849,"name":"IERC20","nodeType":"IdentifierPath","referencedDeclaration":777,"src":"963:6:5"},"referencedDeclaration":777,"src":"963:6:5","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$777","typeString":"contract IERC20"}},"visibility":"internal"},{"constant":false,"id":853,"mutability":"mutable","name":"to","nameLocation":"985:2:5","nodeType":"VariableDeclaration","scope":871,"src":"977:10:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":852,"name":"address","nodeType":"ElementaryTypeName","src":"977:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":855,"mutability":"mutable","name":"value","nameLocation":"997:5:5","nodeType":"VariableDeclaration","scope":871,"src":"989:13:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":854,"name":"uint256","nodeType":"ElementaryTypeName","src":"989:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"962:41:5"},"returnParameters":{"id":857,"nodeType":"ParameterList","parameters":[],"src":"1013:0:5"},"scope":1214,"src":"941:175:5","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":897,"nodeType":"Block","src":"1445:113:5","statements":[{"expression":{"arguments":[{"id":885,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":875,"src":"1475:5:5","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$777","typeString":"contract IERC20"}},{"arguments":[{"expression":{"expression":{"id":888,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":875,"src":"1505:5:5","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$777","typeString":"contract IERC20"}},"id":889,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"transferFrom","nodeType":"MemberAccess","referencedDeclaration":776,"src":"1505:18:5","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,address,uint256) external returns (bool)"}},"id":890,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"selector","nodeType":"MemberAccess","src":"1505:27:5","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},{"id":891,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":877,"src":"1534:4:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":892,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":879,"src":"1540:2:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":893,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":881,"src":"1544:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes4","typeString":"bytes4"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":886,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"1482:3:5","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":887,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"encodeWithSelector","nodeType":"MemberAccess","src":"1482:22:5","typeDescriptions":{"typeIdentifier":"t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$","typeString":"function (bytes4) pure returns (bytes memory)"}},"id":894,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1482:68:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$777","typeString":"contract IERC20"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":884,"name":"_callOptionalReturn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1165,"src":"1455:19:5","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$777_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (contract IERC20,bytes memory)"}},"id":895,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1455:96:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":896,"nodeType":"ExpressionStatement","src":"1455:96:5"}]},"documentation":{"id":872,"nodeType":"StructuredDocumentation","src":"1122:228:5","text":" @dev Transfer `value` amount of `token` from `from` to `to`, spending the approval given by `from` to the\n calling contract. If `token` returns no value, non-reverting calls are assumed to be successful."},"id":898,"implemented":true,"kind":"function","modifiers":[],"name":"safeTransferFrom","nameLocation":"1364:16:5","nodeType":"FunctionDefinition","parameters":{"id":882,"nodeType":"ParameterList","parameters":[{"constant":false,"id":875,"mutability":"mutable","name":"token","nameLocation":"1388:5:5","nodeType":"VariableDeclaration","scope":898,"src":"1381:12:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$777","typeString":"contract IERC20"},"typeName":{"id":874,"nodeType":"UserDefinedTypeName","pathNode":{"id":873,"name":"IERC20","nodeType":"IdentifierPath","referencedDeclaration":777,"src":"1381:6:5"},"referencedDeclaration":777,"src":"1381:6:5","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$777","typeString":"contract IERC20"}},"visibility":"internal"},{"constant":false,"id":877,"mutability":"mutable","name":"from","nameLocation":"1403:4:5","nodeType":"VariableDeclaration","scope":898,"src":"1395:12:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":876,"name":"address","nodeType":"ElementaryTypeName","src":"1395:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":879,"mutability":"mutable","name":"to","nameLocation":"1417:2:5","nodeType":"VariableDeclaration","scope":898,"src":"1409:10:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":878,"name":"address","nodeType":"ElementaryTypeName","src":"1409:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":881,"mutability":"mutable","name":"value","nameLocation":"1429:5:5","nodeType":"VariableDeclaration","scope":898,"src":"1421:13:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":880,"name":"uint256","nodeType":"ElementaryTypeName","src":"1421:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1380:55:5"},"returnParameters":{"id":883,"nodeType":"ParameterList","parameters":[],"src":"1445:0:5"},"scope":1214,"src":"1355:203:5","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":941,"nodeType":"Block","src":"1894:497:5","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":925,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":912,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":910,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":906,"src":"2143:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":911,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2152:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2143:10:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"id":913,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"2142:12:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":923,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"arguments":[{"id":918,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"2183:4:5","typeDescriptions":{"typeIdentifier":"t_contract$_SafeERC20_$1214","typeString":"library SafeERC20"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_SafeERC20_$1214","typeString":"library SafeERC20"}],"id":917,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2175:7:5","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":916,"name":"address","nodeType":"ElementaryTypeName","src":"2175:7:5","typeDescriptions":{}}},"id":919,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2175:13:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":920,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":904,"src":"2190:7:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":914,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":902,"src":"2159:5:5","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$777","typeString":"contract IERC20"}},"id":915,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"allowance","nodeType":"MemberAccess","referencedDeclaration":754,"src":"2159:15:5","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$","typeString":"function (address,address) view external returns (uint256)"}},"id":921,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2159:39:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":922,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2202:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2159:44:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"id":924,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"2158:46:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"2142:62:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"5361666545524332303a20617070726f76652066726f6d206e6f6e2d7a65726f20746f206e6f6e2d7a65726f20616c6c6f77616e6365","id":926,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2218:56:5","typeDescriptions":{"typeIdentifier":"t_stringliteral_ef945ddb1bfdc0da870feb4560d868b047642b4ac7f2fb7f8b7c51cb4a411e25","typeString":"literal_string \"SafeERC20: approve from non-zero to non-zero allowance\""},"value":"SafeERC20: approve from non-zero to non-zero allowance"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_ef945ddb1bfdc0da870feb4560d868b047642b4ac7f2fb7f8b7c51cb4a411e25","typeString":"literal_string \"SafeERC20: approve from non-zero to non-zero allowance\""}],"id":909,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2121:7:5","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":927,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2121:163:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":928,"nodeType":"ExpressionStatement","src":"2121:163:5"},{"expression":{"arguments":[{"id":930,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":902,"src":"2314:5:5","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$777","typeString":"contract IERC20"}},{"arguments":[{"expression":{"expression":{"id":933,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":902,"src":"2344:5:5","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$777","typeString":"contract IERC20"}},"id":934,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"approve","nodeType":"MemberAccess","referencedDeclaration":764,"src":"2344:13:5","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) external returns (bool)"}},"id":935,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"selector","nodeType":"MemberAccess","src":"2344:22:5","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},{"id":936,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":904,"src":"2368:7:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":937,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":906,"src":"2377:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes4","typeString":"bytes4"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":931,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"2321:3:5","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":932,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"encodeWithSelector","nodeType":"MemberAccess","src":"2321:22:5","typeDescriptions":{"typeIdentifier":"t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$","typeString":"function (bytes4) pure returns (bytes memory)"}},"id":938,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2321:62:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$777","typeString":"contract IERC20"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":929,"name":"_callOptionalReturn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1165,"src":"2294:19:5","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$777_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (contract IERC20,bytes memory)"}},"id":939,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2294:90:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":940,"nodeType":"ExpressionStatement","src":"2294:90:5"}]},"documentation":{"id":899,"nodeType":"StructuredDocumentation","src":"1564:249:5","text":" @dev Deprecated. This function has issues similar to the ones found in\n {IERC20-approve}, and its usage is discouraged.\n Whenever possible, use {safeIncreaseAllowance} and\n {safeDecreaseAllowance} instead."},"id":942,"implemented":true,"kind":"function","modifiers":[],"name":"safeApprove","nameLocation":"1827:11:5","nodeType":"FunctionDefinition","parameters":{"id":907,"nodeType":"ParameterList","parameters":[{"constant":false,"id":902,"mutability":"mutable","name":"token","nameLocation":"1846:5:5","nodeType":"VariableDeclaration","scope":942,"src":"1839:12:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$777","typeString":"contract IERC20"},"typeName":{"id":901,"nodeType":"UserDefinedTypeName","pathNode":{"id":900,"name":"IERC20","nodeType":"IdentifierPath","referencedDeclaration":777,"src":"1839:6:5"},"referencedDeclaration":777,"src":"1839:6:5","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$777","typeString":"contract IERC20"}},"visibility":"internal"},{"constant":false,"id":904,"mutability":"mutable","name":"spender","nameLocation":"1861:7:5","nodeType":"VariableDeclaration","scope":942,"src":"1853:15:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":903,"name":"address","nodeType":"ElementaryTypeName","src":"1853:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":906,"mutability":"mutable","name":"value","nameLocation":"1878:5:5","nodeType":"VariableDeclaration","scope":942,"src":"1870:13:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":905,"name":"uint256","nodeType":"ElementaryTypeName","src":"1870:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1838:46:5"},"returnParameters":{"id":908,"nodeType":"ParameterList","parameters":[],"src":"1894:0:5"},"scope":1214,"src":"1818:573:5","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":978,"nodeType":"Block","src":"2668:194:5","statements":[{"assignments":[954],"declarations":[{"constant":false,"id":954,"mutability":"mutable","name":"oldAllowance","nameLocation":"2686:12:5","nodeType":"VariableDeclaration","scope":978,"src":"2678:20:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":953,"name":"uint256","nodeType":"ElementaryTypeName","src":"2678:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":963,"initialValue":{"arguments":[{"arguments":[{"id":959,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"2725:4:5","typeDescriptions":{"typeIdentifier":"t_contract$_SafeERC20_$1214","typeString":"library SafeERC20"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_SafeERC20_$1214","typeString":"library SafeERC20"}],"id":958,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2717:7:5","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":957,"name":"address","nodeType":"ElementaryTypeName","src":"2717:7:5","typeDescriptions":{}}},"id":960,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2717:13:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":961,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":948,"src":"2732:7:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":955,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":946,"src":"2701:5:5","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$777","typeString":"contract IERC20"}},"id":956,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"allowance","nodeType":"MemberAccess","referencedDeclaration":754,"src":"2701:15:5","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$","typeString":"function (address,address) view external returns (uint256)"}},"id":962,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2701:39:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2678:62:5"},{"expression":{"arguments":[{"id":965,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":946,"src":"2770:5:5","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$777","typeString":"contract IERC20"}},{"arguments":[{"expression":{"expression":{"id":968,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":946,"src":"2800:5:5","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$777","typeString":"contract IERC20"}},"id":969,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"approve","nodeType":"MemberAccess","referencedDeclaration":764,"src":"2800:13:5","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) external returns (bool)"}},"id":970,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"selector","nodeType":"MemberAccess","src":"2800:22:5","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},{"id":971,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":948,"src":"2824:7:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":974,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":972,"name":"oldAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":954,"src":"2833:12:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":973,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":950,"src":"2848:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2833:20:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes4","typeString":"bytes4"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":966,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"2777:3:5","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":967,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"encodeWithSelector","nodeType":"MemberAccess","src":"2777:22:5","typeDescriptions":{"typeIdentifier":"t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$","typeString":"function (bytes4) pure returns (bytes memory)"}},"id":975,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2777:77:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$777","typeString":"contract IERC20"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":964,"name":"_callOptionalReturn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1165,"src":"2750:19:5","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$777_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (contract IERC20,bytes memory)"}},"id":976,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2750:105:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":977,"nodeType":"ExpressionStatement","src":"2750:105:5"}]},"documentation":{"id":943,"nodeType":"StructuredDocumentation","src":"2397:180:5","text":" @dev Increase the calling contract's allowance toward `spender` by `value`. If `token` returns no value,\n non-reverting calls are assumed to be successful."},"id":979,"implemented":true,"kind":"function","modifiers":[],"name":"safeIncreaseAllowance","nameLocation":"2591:21:5","nodeType":"FunctionDefinition","parameters":{"id":951,"nodeType":"ParameterList","parameters":[{"constant":false,"id":946,"mutability":"mutable","name":"token","nameLocation":"2620:5:5","nodeType":"VariableDeclaration","scope":979,"src":"2613:12:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$777","typeString":"contract IERC20"},"typeName":{"id":945,"nodeType":"UserDefinedTypeName","pathNode":{"id":944,"name":"IERC20","nodeType":"IdentifierPath","referencedDeclaration":777,"src":"2613:6:5"},"referencedDeclaration":777,"src":"2613:6:5","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$777","typeString":"contract IERC20"}},"visibility":"internal"},{"constant":false,"id":948,"mutability":"mutable","name":"spender","nameLocation":"2635:7:5","nodeType":"VariableDeclaration","scope":979,"src":"2627:15:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":947,"name":"address","nodeType":"ElementaryTypeName","src":"2627:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":950,"mutability":"mutable","name":"value","nameLocation":"2652:5:5","nodeType":"VariableDeclaration","scope":979,"src":"2644:13:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":949,"name":"uint256","nodeType":"ElementaryTypeName","src":"2644:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2612:46:5"},"returnParameters":{"id":952,"nodeType":"ParameterList","parameters":[],"src":"2668:0:5"},"scope":1214,"src":"2582:280:5","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1023,"nodeType":"Block","src":"3139:321:5","statements":[{"id":1022,"nodeType":"UncheckedBlock","src":"3149:305:5","statements":[{"assignments":[991],"declarations":[{"constant":false,"id":991,"mutability":"mutable","name":"oldAllowance","nameLocation":"3181:12:5","nodeType":"VariableDeclaration","scope":1022,"src":"3173:20:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":990,"name":"uint256","nodeType":"ElementaryTypeName","src":"3173:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1000,"initialValue":{"arguments":[{"arguments":[{"id":996,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"3220:4:5","typeDescriptions":{"typeIdentifier":"t_contract$_SafeERC20_$1214","typeString":"library SafeERC20"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_SafeERC20_$1214","typeString":"library SafeERC20"}],"id":995,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3212:7:5","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":994,"name":"address","nodeType":"ElementaryTypeName","src":"3212:7:5","typeDescriptions":{}}},"id":997,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3212:13:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":998,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":985,"src":"3227:7:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":992,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":983,"src":"3196:5:5","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$777","typeString":"contract IERC20"}},"id":993,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"allowance","nodeType":"MemberAccess","referencedDeclaration":754,"src":"3196:15:5","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$","typeString":"function (address,address) view external returns (uint256)"}},"id":999,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3196:39:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"3173:62:5"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1004,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1002,"name":"oldAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":991,"src":"3257:12:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":1003,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":987,"src":"3273:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3257:21:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"5361666545524332303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726f","id":1005,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3280:43:5","typeDescriptions":{"typeIdentifier":"t_stringliteral_2c3af60974a758b7e72e108c9bf0943ecc9e4f2e8af4695da5f52fbf57a63d3a","typeString":"literal_string \"SafeERC20: decreased allowance below zero\""},"value":"SafeERC20: decreased allowance below zero"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_2c3af60974a758b7e72e108c9bf0943ecc9e4f2e8af4695da5f52fbf57a63d3a","typeString":"literal_string \"SafeERC20: decreased allowance below zero\""}],"id":1001,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"3249:7:5","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1006,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3249:75:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1007,"nodeType":"ExpressionStatement","src":"3249:75:5"},{"expression":{"arguments":[{"id":1009,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":983,"src":"3358:5:5","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$777","typeString":"contract IERC20"}},{"arguments":[{"expression":{"expression":{"id":1012,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":983,"src":"3388:5:5","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$777","typeString":"contract IERC20"}},"id":1013,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"approve","nodeType":"MemberAccess","referencedDeclaration":764,"src":"3388:13:5","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) external returns (bool)"}},"id":1014,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"selector","nodeType":"MemberAccess","src":"3388:22:5","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},{"id":1015,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":985,"src":"3412:7:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1018,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1016,"name":"oldAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":991,"src":"3421:12:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":1017,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":987,"src":"3436:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3421:20:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes4","typeString":"bytes4"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":1010,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"3365:3:5","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":1011,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"encodeWithSelector","nodeType":"MemberAccess","src":"3365:22:5","typeDescriptions":{"typeIdentifier":"t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$","typeString":"function (bytes4) pure returns (bytes memory)"}},"id":1019,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3365:77:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$777","typeString":"contract IERC20"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1008,"name":"_callOptionalReturn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1165,"src":"3338:19:5","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$777_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (contract IERC20,bytes memory)"}},"id":1020,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3338:105:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1021,"nodeType":"ExpressionStatement","src":"3338:105:5"}]}]},"documentation":{"id":980,"nodeType":"StructuredDocumentation","src":"2868:180:5","text":" @dev Decrease the calling contract's allowance toward `spender` by `value`. If `token` returns no value,\n non-reverting calls are assumed to be successful."},"id":1024,"implemented":true,"kind":"function","modifiers":[],"name":"safeDecreaseAllowance","nameLocation":"3062:21:5","nodeType":"FunctionDefinition","parameters":{"id":988,"nodeType":"ParameterList","parameters":[{"constant":false,"id":983,"mutability":"mutable","name":"token","nameLocation":"3091:5:5","nodeType":"VariableDeclaration","scope":1024,"src":"3084:12:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$777","typeString":"contract IERC20"},"typeName":{"id":982,"nodeType":"UserDefinedTypeName","pathNode":{"id":981,"name":"IERC20","nodeType":"IdentifierPath","referencedDeclaration":777,"src":"3084:6:5"},"referencedDeclaration":777,"src":"3084:6:5","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$777","typeString":"contract IERC20"}},"visibility":"internal"},{"constant":false,"id":985,"mutability":"mutable","name":"spender","nameLocation":"3106:7:5","nodeType":"VariableDeclaration","scope":1024,"src":"3098:15:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":984,"name":"address","nodeType":"ElementaryTypeName","src":"3098:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":987,"mutability":"mutable","name":"value","nameLocation":"3123:5:5","nodeType":"VariableDeclaration","scope":1024,"src":"3115:13:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":986,"name":"uint256","nodeType":"ElementaryTypeName","src":"3115:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3083:46:5"},"returnParameters":{"id":989,"nodeType":"ParameterList","parameters":[],"src":"3139:0:5"},"scope":1214,"src":"3053:407:5","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1070,"nodeType":"Block","src":"3833:333:5","statements":[{"assignments":[1036],"declarations":[{"constant":false,"id":1036,"mutability":"mutable","name":"approvalCall","nameLocation":"3856:12:5","nodeType":"VariableDeclaration","scope":1070,"src":"3843:25:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1035,"name":"bytes","nodeType":"ElementaryTypeName","src":"3843:5:5","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":1045,"initialValue":{"arguments":[{"expression":{"expression":{"id":1039,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1028,"src":"3894:5:5","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$777","typeString":"contract IERC20"}},"id":1040,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"approve","nodeType":"MemberAccess","referencedDeclaration":764,"src":"3894:13:5","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) external returns (bool)"}},"id":1041,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"selector","nodeType":"MemberAccess","src":"3894:22:5","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},{"id":1042,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1030,"src":"3918:7:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1043,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1032,"src":"3927:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes4","typeString":"bytes4"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":1037,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"3871:3:5","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":1038,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"encodeWithSelector","nodeType":"MemberAccess","src":"3871:22:5","typeDescriptions":{"typeIdentifier":"t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$","typeString":"function (bytes4) pure returns (bytes memory)"}},"id":1044,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3871:62:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"3843:90:5"},{"condition":{"id":1050,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"3948:45:5","subExpression":{"arguments":[{"id":1047,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1028,"src":"3973:5:5","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$777","typeString":"contract IERC20"}},{"id":1048,"name":"approvalCall","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1036,"src":"3980:12:5","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$777","typeString":"contract IERC20"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1046,"name":"_callOptionalReturnBool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1213,"src":"3949:23:5","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$777_$_t_bytes_memory_ptr_$returns$_t_bool_$","typeString":"function (contract IERC20,bytes memory) returns (bool)"}},"id":1049,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3949:44:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1069,"nodeType":"IfStatement","src":"3944:216:5","trueBody":{"id":1068,"nodeType":"Block","src":"3995:165:5","statements":[{"expression":{"arguments":[{"id":1052,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1028,"src":"4029:5:5","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$777","typeString":"contract IERC20"}},{"arguments":[{"expression":{"expression":{"id":1055,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1028,"src":"4059:5:5","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$777","typeString":"contract IERC20"}},"id":1056,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"approve","nodeType":"MemberAccess","referencedDeclaration":764,"src":"4059:13:5","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) external returns (bool)"}},"id":1057,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"selector","nodeType":"MemberAccess","src":"4059:22:5","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},{"id":1058,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1030,"src":"4083:7:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"hexValue":"30","id":1059,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4092:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes4","typeString":"bytes4"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"expression":{"id":1053,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"4036:3:5","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":1054,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"encodeWithSelector","nodeType":"MemberAccess","src":"4036:22:5","typeDescriptions":{"typeIdentifier":"t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$","typeString":"function (bytes4) pure returns (bytes memory)"}},"id":1060,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4036:58:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$777","typeString":"contract IERC20"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1051,"name":"_callOptionalReturn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1165,"src":"4009:19:5","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$777_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (contract IERC20,bytes memory)"}},"id":1061,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4009:86:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1062,"nodeType":"ExpressionStatement","src":"4009:86:5"},{"expression":{"arguments":[{"id":1064,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1028,"src":"4129:5:5","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$777","typeString":"contract IERC20"}},{"id":1065,"name":"approvalCall","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1036,"src":"4136:12:5","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$777","typeString":"contract IERC20"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1063,"name":"_callOptionalReturn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1165,"src":"4109:19:5","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$777_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (contract IERC20,bytes memory)"}},"id":1066,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4109:40:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1067,"nodeType":"ExpressionStatement","src":"4109:40:5"}]}}]},"documentation":{"id":1025,"nodeType":"StructuredDocumentation","src":"3466:285:5","text":" @dev Set the calling contract's allowance toward `spender` to `value`. If `token` returns no value,\n non-reverting calls are assumed to be successful. Compatible with tokens that require the approval to be set to\n 0 before setting it to a non-zero value."},"id":1071,"implemented":true,"kind":"function","modifiers":[],"name":"forceApprove","nameLocation":"3765:12:5","nodeType":"FunctionDefinition","parameters":{"id":1033,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1028,"mutability":"mutable","name":"token","nameLocation":"3785:5:5","nodeType":"VariableDeclaration","scope":1071,"src":"3778:12:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$777","typeString":"contract IERC20"},"typeName":{"id":1027,"nodeType":"UserDefinedTypeName","pathNode":{"id":1026,"name":"IERC20","nodeType":"IdentifierPath","referencedDeclaration":777,"src":"3778:6:5"},"referencedDeclaration":777,"src":"3778:6:5","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$777","typeString":"contract IERC20"}},"visibility":"internal"},{"constant":false,"id":1030,"mutability":"mutable","name":"spender","nameLocation":"3800:7:5","nodeType":"VariableDeclaration","scope":1071,"src":"3792:15:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1029,"name":"address","nodeType":"ElementaryTypeName","src":"3792:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1032,"mutability":"mutable","name":"value","nameLocation":"3817:5:5","nodeType":"VariableDeclaration","scope":1071,"src":"3809:13:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1031,"name":"uint256","nodeType":"ElementaryTypeName","src":"3809:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3777:46:5"},"returnParameters":{"id":1034,"nodeType":"ParameterList","parameters":[],"src":"3833:0:5"},"scope":1214,"src":"3756:410:5","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1127,"nodeType":"Block","src":"4533:257:5","statements":[{"assignments":[1093],"declarations":[{"constant":false,"id":1093,"mutability":"mutable","name":"nonceBefore","nameLocation":"4551:11:5","nodeType":"VariableDeclaration","scope":1127,"src":"4543:19:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1092,"name":"uint256","nodeType":"ElementaryTypeName","src":"4543:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1098,"initialValue":{"arguments":[{"id":1096,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1077,"src":"4578:5:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":1094,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1075,"src":"4565:5:5","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20Permit_$838","typeString":"contract IERC20Permit"}},"id":1095,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"nonces","nodeType":"MemberAccess","referencedDeclaration":831,"src":"4565:12:5","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$returns$_t_uint256_$","typeString":"function (address) view external returns (uint256)"}},"id":1097,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4565:19:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"4543:41:5"},{"expression":{"arguments":[{"id":1102,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1077,"src":"4607:5:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1103,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1079,"src":"4614:7:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1104,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1081,"src":"4623:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1105,"name":"deadline","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1083,"src":"4630:8:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1106,"name":"v","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1085,"src":"4640:1:5","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},{"id":1107,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1087,"src":"4643:1:5","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":1108,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1089,"src":"4646:1:5","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint8","typeString":"uint8"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":1099,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1075,"src":"4594:5:5","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20Permit_$838","typeString":"contract IERC20Permit"}},"id":1101,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"permit","nodeType":"MemberAccess","referencedDeclaration":823,"src":"4594:12:5","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$__$","typeString":"function (address,address,uint256,uint256,uint8,bytes32,bytes32) external"}},"id":1109,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4594:54:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1110,"nodeType":"ExpressionStatement","src":"4594:54:5"},{"assignments":[1112],"declarations":[{"constant":false,"id":1112,"mutability":"mutable","name":"nonceAfter","nameLocation":"4666:10:5","nodeType":"VariableDeclaration","scope":1127,"src":"4658:18:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1111,"name":"uint256","nodeType":"ElementaryTypeName","src":"4658:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1117,"initialValue":{"arguments":[{"id":1115,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1077,"src":"4692:5:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":1113,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1075,"src":"4679:5:5","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20Permit_$838","typeString":"contract IERC20Permit"}},"id":1114,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"nonces","nodeType":"MemberAccess","referencedDeclaration":831,"src":"4679:12:5","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$returns$_t_uint256_$","typeString":"function (address) view external returns (uint256)"}},"id":1116,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4679:19:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"4658:40:5"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1123,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1119,"name":"nonceAfter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1112,"src":"4716:10:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1122,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1120,"name":"nonceBefore","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1093,"src":"4730:11:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":1121,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4744:1:5","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"4730:15:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4716:29:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"5361666545524332303a207065726d697420646964206e6f742073756363656564","id":1124,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4747:35:5","typeDescriptions":{"typeIdentifier":"t_stringliteral_cde8e927812a7a656f8f04e89ac4f4113d47940dd2125d11fcb8e0bd36bfc59d","typeString":"literal_string \"SafeERC20: permit did not succeed\""},"value":"SafeERC20: permit did not succeed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_cde8e927812a7a656f8f04e89ac4f4113d47940dd2125d11fcb8e0bd36bfc59d","typeString":"literal_string \"SafeERC20: permit did not succeed\""}],"id":1118,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"4708:7:5","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1125,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4708:75:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1126,"nodeType":"ExpressionStatement","src":"4708:75:5"}]},"documentation":{"id":1072,"nodeType":"StructuredDocumentation","src":"4172:141:5","text":" @dev Use a ERC-2612 signature to set the `owner` approval toward `spender` on `token`.\n Revert on invalid signature."},"id":1128,"implemented":true,"kind":"function","modifiers":[],"name":"safePermit","nameLocation":"4327:10:5","nodeType":"FunctionDefinition","parameters":{"id":1090,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1075,"mutability":"mutable","name":"token","nameLocation":"4360:5:5","nodeType":"VariableDeclaration","scope":1128,"src":"4347:18:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20Permit_$838","typeString":"contract IERC20Permit"},"typeName":{"id":1074,"nodeType":"UserDefinedTypeName","pathNode":{"id":1073,"name":"IERC20Permit","nodeType":"IdentifierPath","referencedDeclaration":838,"src":"4347:12:5"},"referencedDeclaration":838,"src":"4347:12:5","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20Permit_$838","typeString":"contract IERC20Permit"}},"visibility":"internal"},{"constant":false,"id":1077,"mutability":"mutable","name":"owner","nameLocation":"4383:5:5","nodeType":"VariableDeclaration","scope":1128,"src":"4375:13:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1076,"name":"address","nodeType":"ElementaryTypeName","src":"4375:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1079,"mutability":"mutable","name":"spender","nameLocation":"4406:7:5","nodeType":"VariableDeclaration","scope":1128,"src":"4398:15:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1078,"name":"address","nodeType":"ElementaryTypeName","src":"4398:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1081,"mutability":"mutable","name":"value","nameLocation":"4431:5:5","nodeType":"VariableDeclaration","scope":1128,"src":"4423:13:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1080,"name":"uint256","nodeType":"ElementaryTypeName","src":"4423:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1083,"mutability":"mutable","name":"deadline","nameLocation":"4454:8:5","nodeType":"VariableDeclaration","scope":1128,"src":"4446:16:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1082,"name":"uint256","nodeType":"ElementaryTypeName","src":"4446:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1085,"mutability":"mutable","name":"v","nameLocation":"4478:1:5","nodeType":"VariableDeclaration","scope":1128,"src":"4472:7:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":1084,"name":"uint8","nodeType":"ElementaryTypeName","src":"4472:5:5","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":1087,"mutability":"mutable","name":"r","nameLocation":"4497:1:5","nodeType":"VariableDeclaration","scope":1128,"src":"4489:9:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1086,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4489:7:5","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":1089,"mutability":"mutable","name":"s","nameLocation":"4516:1:5","nodeType":"VariableDeclaration","scope":1128,"src":"4508:9:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1088,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4508:7:5","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"4337:186:5"},"returnParameters":{"id":1091,"nodeType":"ParameterList","parameters":[],"src":"4533:0:5"},"scope":1214,"src":"4318:472:5","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1164,"nodeType":"Block","src":"5243:572:5","statements":[{"assignments":[1138],"declarations":[{"constant":false,"id":1138,"mutability":"mutable","name":"returndata","nameLocation":"5605:10:5","nodeType":"VariableDeclaration","scope":1164,"src":"5592:23:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1137,"name":"bytes","nodeType":"ElementaryTypeName","src":"5592:5:5","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":1147,"initialValue":{"arguments":[{"id":1144,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1134,"src":"5646:4:5","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"hexValue":"5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564","id":1145,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5652:34:5","typeDescriptions":{"typeIdentifier":"t_stringliteral_47fb62c2c272651d2f0f342bac006756b8ba07f21cc5cb87e0fbb9d50c0c585b","typeString":"literal_string \"SafeERC20: low-level call failed\""},"value":"SafeERC20: low-level call failed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_stringliteral_47fb62c2c272651d2f0f342bac006756b8ba07f21cc5cb87e0fbb9d50c0c585b","typeString":"literal_string \"SafeERC20: low-level call failed\""}],"expression":{"arguments":[{"id":1141,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1132,"src":"5626:5:5","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$777","typeString":"contract IERC20"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$777","typeString":"contract IERC20"}],"id":1140,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5618:7:5","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1139,"name":"address","nodeType":"ElementaryTypeName","src":"5618:7:5","typeDescriptions":{}}},"id":1142,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5618:14:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1143,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"functionCall","nodeType":"MemberAccess","referencedDeclaration":1304,"src":"5618:27:5","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$bound_to$_t_address_$","typeString":"function (address,bytes memory,string memory) returns (bytes memory)"}},"id":1146,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5618:69:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"5592:95:5"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1160,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1152,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1149,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1138,"src":"5705:10:5","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1150,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"5705:17:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":1151,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5726:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"5705:22:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"arguments":[{"id":1155,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1138,"src":"5742:10:5","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"components":[{"id":1157,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5755:4:5","typeDescriptions":{"typeIdentifier":"t_type$_t_bool_$","typeString":"type(bool)"},"typeName":{"id":1156,"name":"bool","nodeType":"ElementaryTypeName","src":"5755:4:5","typeDescriptions":{}}}],"id":1158,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"5754:6:5","typeDescriptions":{"typeIdentifier":"t_type$_t_bool_$","typeString":"type(bool)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_type$_t_bool_$","typeString":"type(bool)"}],"expression":{"id":1153,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"5731:3:5","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":1154,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"decode","nodeType":"MemberAccess","src":"5731:10:5","typeDescriptions":{"typeIdentifier":"t_function_abidecode_pure$__$returns$__$","typeString":"function () pure"}},"id":1159,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5731:30:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"5705:56:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"5361666545524332303a204552433230206f7065726174696f6e20646964206e6f742073756363656564","id":1161,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5763:44:5","typeDescriptions":{"typeIdentifier":"t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd","typeString":"literal_string \"SafeERC20: ERC20 operation did not succeed\""},"value":"SafeERC20: ERC20 operation did not succeed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd","typeString":"literal_string \"SafeERC20: ERC20 operation did not succeed\""}],"id":1148,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"5697:7:5","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1162,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5697:111:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1163,"nodeType":"ExpressionStatement","src":"5697:111:5"}]},"documentation":{"id":1129,"nodeType":"StructuredDocumentation","src":"4796:372:5","text":" @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n on the return value: the return value is optional (but if data is returned, it must not be false).\n @param token The token targeted by the call.\n @param data The call data (encoded using abi.encode or one of its variants)."},"id":1165,"implemented":true,"kind":"function","modifiers":[],"name":"_callOptionalReturn","nameLocation":"5182:19:5","nodeType":"FunctionDefinition","parameters":{"id":1135,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1132,"mutability":"mutable","name":"token","nameLocation":"5209:5:5","nodeType":"VariableDeclaration","scope":1165,"src":"5202:12:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$777","typeString":"contract IERC20"},"typeName":{"id":1131,"nodeType":"UserDefinedTypeName","pathNode":{"id":1130,"name":"IERC20","nodeType":"IdentifierPath","referencedDeclaration":777,"src":"5202:6:5"},"referencedDeclaration":777,"src":"5202:6:5","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$777","typeString":"contract IERC20"}},"visibility":"internal"},{"constant":false,"id":1134,"mutability":"mutable","name":"data","nameLocation":"5229:4:5","nodeType":"VariableDeclaration","scope":1165,"src":"5216:17:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1133,"name":"bytes","nodeType":"ElementaryTypeName","src":"5216:5:5","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"5201:33:5"},"returnParameters":{"id":1136,"nodeType":"ParameterList","parameters":[],"src":"5243:0:5"},"scope":1214,"src":"5173:642:5","stateMutability":"nonpayable","virtual":false,"visibility":"private"},{"body":{"id":1212,"nodeType":"Block","src":"6405:505:5","statements":[{"assignments":[1177,1179],"declarations":[{"constant":false,"id":1177,"mutability":"mutable","name":"success","nameLocation":"6706:7:5","nodeType":"VariableDeclaration","scope":1212,"src":"6701:12:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1176,"name":"bool","nodeType":"ElementaryTypeName","src":"6701:4:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":1179,"mutability":"mutable","name":"returndata","nameLocation":"6728:10:5","nodeType":"VariableDeclaration","scope":1212,"src":"6715:23:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1178,"name":"bytes","nodeType":"ElementaryTypeName","src":"6715:5:5","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":1187,"initialValue":{"arguments":[{"id":1185,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1171,"src":"6762:4:5","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"arguments":[{"id":1182,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1169,"src":"6750:5:5","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$777","typeString":"contract IERC20"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$777","typeString":"contract IERC20"}],"id":1181,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6742:7:5","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1180,"name":"address","nodeType":"ElementaryTypeName","src":"6742:7:5","typeDescriptions":{}}},"id":1183,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6742:14:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1184,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"call","nodeType":"MemberAccess","src":"6742:19:5","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":1186,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6742:25:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"6700:67:5"},{"expression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1210,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1202,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1188,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1177,"src":"6796:7:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1200,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1192,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1189,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1179,"src":"6808:10:5","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1190,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"6808:17:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":1191,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6829:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"6808:22:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"arguments":[{"id":1195,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1179,"src":"6845:10:5","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"components":[{"id":1197,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6858:4:5","typeDescriptions":{"typeIdentifier":"t_type$_t_bool_$","typeString":"type(bool)"},"typeName":{"id":1196,"name":"bool","nodeType":"ElementaryTypeName","src":"6858:4:5","typeDescriptions":{}}}],"id":1198,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"6857:6:5","typeDescriptions":{"typeIdentifier":"t_type$_t_bool_$","typeString":"type(bool)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_type$_t_bool_$","typeString":"type(bool)"}],"expression":{"id":1193,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"6834:3:5","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":1194,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"decode","nodeType":"MemberAccess","src":"6834:10:5","typeDescriptions":{"typeIdentifier":"t_function_abidecode_pure$__$returns$__$","typeString":"function () pure"}},"id":1199,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6834:30:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"6808:56:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"id":1201,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"6807:58:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"6796:69:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"arguments":[{"arguments":[{"id":1207,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1169,"src":"6896:5:5","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$777","typeString":"contract IERC20"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$777","typeString":"contract IERC20"}],"id":1206,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6888:7:5","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1205,"name":"address","nodeType":"ElementaryTypeName","src":"6888:7:5","typeDescriptions":{}}},"id":1208,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6888:14:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":1203,"name":"Address","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1544,"src":"6869:7:5","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Address_$1544_$","typeString":"type(library Address)"}},"id":1204,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"isContract","nodeType":"MemberAccess","referencedDeclaration":1232,"src":"6869:18:5","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_bool_$","typeString":"function (address) view returns (bool)"}},"id":1209,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6869:34:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"6796:107:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":1175,"id":1211,"nodeType":"Return","src":"6777:126:5"}]},"documentation":{"id":1166,"nodeType":"StructuredDocumentation","src":"5821:490:5","text":" @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n on the return value: the return value is optional (but if data is returned, it must not be false).\n @param token The token targeted by the call.\n @param data The call data (encoded using abi.encode or one of its variants).\n This is a variant of {_callOptionalReturn} that silents catches all reverts and returns a bool instead."},"id":1213,"implemented":true,"kind":"function","modifiers":[],"name":"_callOptionalReturnBool","nameLocation":"6325:23:5","nodeType":"FunctionDefinition","parameters":{"id":1172,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1169,"mutability":"mutable","name":"token","nameLocation":"6356:5:5","nodeType":"VariableDeclaration","scope":1213,"src":"6349:12:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$777","typeString":"contract IERC20"},"typeName":{"id":1168,"nodeType":"UserDefinedTypeName","pathNode":{"id":1167,"name":"IERC20","nodeType":"IdentifierPath","referencedDeclaration":777,"src":"6349:6:5"},"referencedDeclaration":777,"src":"6349:6:5","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$777","typeString":"contract IERC20"}},"visibility":"internal"},{"constant":false,"id":1171,"mutability":"mutable","name":"data","nameLocation":"6376:4:5","nodeType":"VariableDeclaration","scope":1213,"src":"6363:17:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1170,"name":"bytes","nodeType":"ElementaryTypeName","src":"6363:5:5","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"6348:33:5"},"returnParameters":{"id":1175,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1174,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1213,"src":"6399:4:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1173,"name":"bool","nodeType":"ElementaryTypeName","src":"6399:4:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"6398:6:5"},"scope":1214,"src":"6316:594:5","stateMutability":"nonpayable","virtual":false,"visibility":"private"}],"scope":1215,"src":"701:6211:5","usedErrors":[]}],"src":"115:6798:5"}},"@openzeppelin/contracts/utils/Address.sol":{"id":6,"ast":{"absolutePath":"@openzeppelin/contracts/utils/Address.sol","exportedSymbols":{"Address":[1544]},"id":1545,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1216,"literals":["solidity","^","0.8",".1"],"nodeType":"PragmaDirective","src":"101:23:6"},{"abstract":false,"baseContracts":[],"canonicalName":"Address","contractDependencies":[],"contractKind":"library","documentation":{"id":1217,"nodeType":"StructuredDocumentation","src":"126:67:6","text":" @dev Collection of functions related to the address type"},"fullyImplemented":true,"id":1544,"linearizedBaseContracts":[1544],"name":"Address","nameLocation":"202:7:6","nodeType":"ContractDefinition","nodes":[{"body":{"id":1231,"nodeType":"Block","src":"1478:254:6","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1229,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"expression":{"id":1225,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1220,"src":"1702:7:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1226,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"code","nodeType":"MemberAccess","src":"1702:12:6","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1227,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"1702:19:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":1228,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1724:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1702:23:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":1224,"id":1230,"nodeType":"Return","src":"1695:30:6"}]},"documentation":{"id":1218,"nodeType":"StructuredDocumentation","src":"216:1191:6","text":" @dev Returns true if `account` is a contract.\n [IMPORTANT]\n ====\n It is unsafe to assume that an address for which this function returns\n false is an externally-owned account (EOA) and not a contract.\n Among others, `isContract` will return false for the following\n types of addresses:\n  - an externally-owned account\n  - a contract in construction\n  - an address where a contract will be created\n  - an address where a contract lived, but was destroyed\n Furthermore, `isContract` will also return true if the target contract within\n the same transaction is already scheduled for destruction by `SELFDESTRUCT`,\n which only has an effect at the end of a transaction.\n ====\n [IMPORTANT]\n ====\n You shouldn't rely on `isContract` to protect against flash loan attacks!\n Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\n like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\n constructor.\n ===="},"id":1232,"implemented":true,"kind":"function","modifiers":[],"name":"isContract","nameLocation":"1421:10:6","nodeType":"FunctionDefinition","parameters":{"id":1221,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1220,"mutability":"mutable","name":"account","nameLocation":"1440:7:6","nodeType":"VariableDeclaration","scope":1232,"src":"1432:15:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1219,"name":"address","nodeType":"ElementaryTypeName","src":"1432:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1431:17:6"},"returnParameters":{"id":1224,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1223,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1232,"src":"1472:4:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1222,"name":"bool","nodeType":"ElementaryTypeName","src":"1472:4:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1471:6:6"},"scope":1544,"src":"1412:320:6","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":1265,"nodeType":"Block","src":"2718:241:6","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1247,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":1243,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"2744:4:6","typeDescriptions":{"typeIdentifier":"t_contract$_Address_$1544","typeString":"library Address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_Address_$1544","typeString":"library Address"}],"id":1242,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2736:7:6","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1241,"name":"address","nodeType":"ElementaryTypeName","src":"2736:7:6","typeDescriptions":{}}},"id":1244,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2736:13:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1245,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"balance","nodeType":"MemberAccess","src":"2736:21:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":1246,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1237,"src":"2761:6:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2736:31:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"416464726573733a20696e73756666696369656e742062616c616e6365","id":1248,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2769:31:6","typeDescriptions":{"typeIdentifier":"t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9","typeString":"literal_string \"Address: insufficient balance\""},"value":"Address: insufficient balance"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9","typeString":"literal_string \"Address: insufficient balance\""}],"id":1240,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2728:7:6","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1249,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2728:73:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1250,"nodeType":"ExpressionStatement","src":"2728:73:6"},{"assignments":[1252,null],"declarations":[{"constant":false,"id":1252,"mutability":"mutable","name":"success","nameLocation":"2818:7:6","nodeType":"VariableDeclaration","scope":1265,"src":"2813:12:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1251,"name":"bool","nodeType":"ElementaryTypeName","src":"2813:4:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},null],"id":1259,"initialValue":{"arguments":[{"hexValue":"","id":1257,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2861:2:6","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"expression":{"id":1253,"name":"recipient","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1235,"src":"2831:9:6","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"id":1254,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"call","nodeType":"MemberAccess","src":"2831:14:6","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":1256,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"names":["value"],"nodeType":"FunctionCallOptions","options":[{"id":1255,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1237,"src":"2853:6:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"src":"2831:29:6","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":1258,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2831:33:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"2812:52:6"},{"expression":{"arguments":[{"id":1261,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1252,"src":"2882:7:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"416464726573733a20756e61626c6520746f2073656e642076616c75652c20726563697069656e74206d61792068617665207265766572746564","id":1262,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2891:60:6","typeDescriptions":{"typeIdentifier":"t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae","typeString":"literal_string \"Address: unable to send value, recipient may have reverted\""},"value":"Address: unable to send value, recipient may have reverted"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae","typeString":"literal_string \"Address: unable to send value, recipient may have reverted\""}],"id":1260,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2874:7:6","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1263,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2874:78:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1264,"nodeType":"ExpressionStatement","src":"2874:78:6"}]},"documentation":{"id":1233,"nodeType":"StructuredDocumentation","src":"1738:904:6","text":" @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n `recipient`, forwarding all available gas and reverting on errors.\n https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n of certain opcodes, possibly making contracts go over the 2300 gas limit\n imposed by `transfer`, making them unable to receive funds via\n `transfer`. {sendValue} removes this limitation.\n https://consensys.net/diligence/blog/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n IMPORTANT: because control is transferred to `recipient`, care must be\n taken to not create reentrancy vulnerabilities. Consider using\n {ReentrancyGuard} or the\n https://solidity.readthedocs.io/en/v0.8.0/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern]."},"id":1266,"implemented":true,"kind":"function","modifiers":[],"name":"sendValue","nameLocation":"2656:9:6","nodeType":"FunctionDefinition","parameters":{"id":1238,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1235,"mutability":"mutable","name":"recipient","nameLocation":"2682:9:6","nodeType":"VariableDeclaration","scope":1266,"src":"2666:25:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"},"typeName":{"id":1234,"name":"address","nodeType":"ElementaryTypeName","src":"2666:15:6","stateMutability":"payable","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"visibility":"internal"},{"constant":false,"id":1237,"mutability":"mutable","name":"amount","nameLocation":"2701:6:6","nodeType":"VariableDeclaration","scope":1266,"src":"2693:14:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1236,"name":"uint256","nodeType":"ElementaryTypeName","src":"2693:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2665:43:6"},"returnParameters":{"id":1239,"nodeType":"ParameterList","parameters":[],"src":"2718:0:6"},"scope":1544,"src":"2647:312:6","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1283,"nodeType":"Block","src":"3790:96:6","statements":[{"expression":{"arguments":[{"id":1277,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1269,"src":"3829:6:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1278,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1271,"src":"3837:4:6","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"hexValue":"30","id":1279,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3843:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"hexValue":"416464726573733a206c6f772d6c6576656c2063616c6c206661696c6564","id":1280,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3846:32:6","typeDescriptions":{"typeIdentifier":"t_stringliteral_24d7ab5d382116e64324f19950ca9340b8af1ddeb09a8d026e0a3c6a01dcc9df","typeString":"literal_string \"Address: low-level call failed\""},"value":"Address: low-level call failed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_stringliteral_24d7ab5d382116e64324f19950ca9340b8af1ddeb09a8d026e0a3c6a01dcc9df","typeString":"literal_string \"Address: low-level call failed\""}],"id":1276,"name":"functionCallWithValue","nodeType":"Identifier","overloadedDeclarations":[1324,1368],"referencedDeclaration":1368,"src":"3807:21:6","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bytes memory,uint256,string memory) returns (bytes memory)"}},"id":1281,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3807:72:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":1275,"id":1282,"nodeType":"Return","src":"3800:79:6"}]},"documentation":{"id":1267,"nodeType":"StructuredDocumentation","src":"2965:731:6","text":" @dev Performs a Solidity function call using a low level `call`. A\n plain `call` is an unsafe replacement for a function call: use this\n function instead.\n If `target` reverts with a revert reason, it is bubbled up by this\n function (like regular Solidity function calls).\n Returns the raw returned data. To convert to the expected return value,\n use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n Requirements:\n - `target` must be a contract.\n - calling `target` with `data` must not revert.\n _Available since v3.1._"},"id":1284,"implemented":true,"kind":"function","modifiers":[],"name":"functionCall","nameLocation":"3710:12:6","nodeType":"FunctionDefinition","parameters":{"id":1272,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1269,"mutability":"mutable","name":"target","nameLocation":"3731:6:6","nodeType":"VariableDeclaration","scope":1284,"src":"3723:14:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1268,"name":"address","nodeType":"ElementaryTypeName","src":"3723:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1271,"mutability":"mutable","name":"data","nameLocation":"3752:4:6","nodeType":"VariableDeclaration","scope":1284,"src":"3739:17:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1270,"name":"bytes","nodeType":"ElementaryTypeName","src":"3739:5:6","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3722:35:6"},"returnParameters":{"id":1275,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1274,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1284,"src":"3776:12:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1273,"name":"bytes","nodeType":"ElementaryTypeName","src":"3776:5:6","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3775:14:6"},"scope":1544,"src":"3701:185:6","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1303,"nodeType":"Block","src":"4255:76:6","statements":[{"expression":{"arguments":[{"id":1297,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1287,"src":"4294:6:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1298,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1289,"src":"4302:4:6","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"hexValue":"30","id":1299,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4308:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"id":1300,"name":"errorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1291,"src":"4311:12:6","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1296,"name":"functionCallWithValue","nodeType":"Identifier","overloadedDeclarations":[1324,1368],"referencedDeclaration":1368,"src":"4272:21:6","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bytes memory,uint256,string memory) returns (bytes memory)"}},"id":1301,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4272:52:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":1295,"id":1302,"nodeType":"Return","src":"4265:59:6"}]},"documentation":{"id":1285,"nodeType":"StructuredDocumentation","src":"3892:211:6","text":" @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\n `errorMessage` as a fallback revert reason when `target` reverts.\n _Available since v3.1._"},"id":1304,"implemented":true,"kind":"function","modifiers":[],"name":"functionCall","nameLocation":"4117:12:6","nodeType":"FunctionDefinition","parameters":{"id":1292,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1287,"mutability":"mutable","name":"target","nameLocation":"4147:6:6","nodeType":"VariableDeclaration","scope":1304,"src":"4139:14:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1286,"name":"address","nodeType":"ElementaryTypeName","src":"4139:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1289,"mutability":"mutable","name":"data","nameLocation":"4176:4:6","nodeType":"VariableDeclaration","scope":1304,"src":"4163:17:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1288,"name":"bytes","nodeType":"ElementaryTypeName","src":"4163:5:6","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":1291,"mutability":"mutable","name":"errorMessage","nameLocation":"4204:12:6","nodeType":"VariableDeclaration","scope":1304,"src":"4190:26:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1290,"name":"string","nodeType":"ElementaryTypeName","src":"4190:6:6","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"4129:93:6"},"returnParameters":{"id":1295,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1294,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1304,"src":"4241:12:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1293,"name":"bytes","nodeType":"ElementaryTypeName","src":"4241:5:6","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"4240:14:6"},"scope":1544,"src":"4108:223:6","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1323,"nodeType":"Block","src":"4806:111:6","statements":[{"expression":{"arguments":[{"id":1317,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1307,"src":"4845:6:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1318,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1309,"src":"4853:4:6","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":1319,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1311,"src":"4859:5:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"416464726573733a206c6f772d6c6576656c2063616c6c20776974682076616c7565206661696c6564","id":1320,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4866:43:6","typeDescriptions":{"typeIdentifier":"t_stringliteral_88a4a0b5e975840320a0475d4027005235904fdb5ece94df156f3d717cb2dbfc","typeString":"literal_string \"Address: low-level call with value failed\""},"value":"Address: low-level call with value failed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_stringliteral_88a4a0b5e975840320a0475d4027005235904fdb5ece94df156f3d717cb2dbfc","typeString":"literal_string \"Address: low-level call with value failed\""}],"id":1316,"name":"functionCallWithValue","nodeType":"Identifier","overloadedDeclarations":[1324,1368],"referencedDeclaration":1368,"src":"4823:21:6","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bytes memory,uint256,string memory) returns (bytes memory)"}},"id":1321,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4823:87:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":1315,"id":1322,"nodeType":"Return","src":"4816:94:6"}]},"documentation":{"id":1305,"nodeType":"StructuredDocumentation","src":"4337:351:6","text":" @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but also transferring `value` wei to `target`.\n Requirements:\n - the calling contract must have an ETH balance of at least `value`.\n - the called Solidity function must be `payable`.\n _Available since v3.1._"},"id":1324,"implemented":true,"kind":"function","modifiers":[],"name":"functionCallWithValue","nameLocation":"4702:21:6","nodeType":"FunctionDefinition","parameters":{"id":1312,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1307,"mutability":"mutable","name":"target","nameLocation":"4732:6:6","nodeType":"VariableDeclaration","scope":1324,"src":"4724:14:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1306,"name":"address","nodeType":"ElementaryTypeName","src":"4724:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1309,"mutability":"mutable","name":"data","nameLocation":"4753:4:6","nodeType":"VariableDeclaration","scope":1324,"src":"4740:17:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1308,"name":"bytes","nodeType":"ElementaryTypeName","src":"4740:5:6","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":1311,"mutability":"mutable","name":"value","nameLocation":"4767:5:6","nodeType":"VariableDeclaration","scope":1324,"src":"4759:13:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1310,"name":"uint256","nodeType":"ElementaryTypeName","src":"4759:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4723:50:6"},"returnParameters":{"id":1315,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1314,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1324,"src":"4792:12:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1313,"name":"bytes","nodeType":"ElementaryTypeName","src":"4792:5:6","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"4791:14:6"},"scope":1544,"src":"4693:224:6","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1367,"nodeType":"Block","src":"5344:267:6","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1345,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":1341,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"5370:4:6","typeDescriptions":{"typeIdentifier":"t_contract$_Address_$1544","typeString":"library Address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_Address_$1544","typeString":"library Address"}],"id":1340,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5362:7:6","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1339,"name":"address","nodeType":"ElementaryTypeName","src":"5362:7:6","typeDescriptions":{}}},"id":1342,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5362:13:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1343,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"balance","nodeType":"MemberAccess","src":"5362:21:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":1344,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1331,"src":"5387:5:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5362:30:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c6c","id":1346,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5394:40:6","typeDescriptions":{"typeIdentifier":"t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c","typeString":"literal_string \"Address: insufficient balance for call\""},"value":"Address: insufficient balance for call"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c","typeString":"literal_string \"Address: insufficient balance for call\""}],"id":1338,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"5354:7:6","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1347,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5354:81:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1348,"nodeType":"ExpressionStatement","src":"5354:81:6"},{"assignments":[1350,1352],"declarations":[{"constant":false,"id":1350,"mutability":"mutable","name":"success","nameLocation":"5451:7:6","nodeType":"VariableDeclaration","scope":1367,"src":"5446:12:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1349,"name":"bool","nodeType":"ElementaryTypeName","src":"5446:4:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":1352,"mutability":"mutable","name":"returndata","nameLocation":"5473:10:6","nodeType":"VariableDeclaration","scope":1367,"src":"5460:23:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1351,"name":"bytes","nodeType":"ElementaryTypeName","src":"5460:5:6","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":1359,"initialValue":{"arguments":[{"id":1357,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1329,"src":"5513:4:6","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":1353,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1327,"src":"5487:6:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1354,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"call","nodeType":"MemberAccess","src":"5487:11:6","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":1356,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"names":["value"],"nodeType":"FunctionCallOptions","options":[{"id":1355,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1331,"src":"5506:5:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"src":"5487:25:6","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":1358,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5487:31:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"5445:73:6"},{"expression":{"arguments":[{"id":1361,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1327,"src":"5562:6:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1362,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1350,"src":"5570:7:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":1363,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1352,"src":"5579:10:6","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":1364,"name":"errorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1333,"src":"5591:12:6","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1360,"name":"verifyCallResultFromTarget","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1499,"src":"5535:26:6","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bool,bytes memory,string memory) view returns (bytes memory)"}},"id":1365,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5535:69:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":1337,"id":1366,"nodeType":"Return","src":"5528:76:6"}]},"documentation":{"id":1325,"nodeType":"StructuredDocumentation","src":"4923:237:6","text":" @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\n with `errorMessage` as a fallback revert reason when `target` reverts.\n _Available since v3.1._"},"id":1368,"implemented":true,"kind":"function","modifiers":[],"name":"functionCallWithValue","nameLocation":"5174:21:6","nodeType":"FunctionDefinition","parameters":{"id":1334,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1327,"mutability":"mutable","name":"target","nameLocation":"5213:6:6","nodeType":"VariableDeclaration","scope":1368,"src":"5205:14:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1326,"name":"address","nodeType":"ElementaryTypeName","src":"5205:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1329,"mutability":"mutable","name":"data","nameLocation":"5242:4:6","nodeType":"VariableDeclaration","scope":1368,"src":"5229:17:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1328,"name":"bytes","nodeType":"ElementaryTypeName","src":"5229:5:6","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":1331,"mutability":"mutable","name":"value","nameLocation":"5264:5:6","nodeType":"VariableDeclaration","scope":1368,"src":"5256:13:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1330,"name":"uint256","nodeType":"ElementaryTypeName","src":"5256:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1333,"mutability":"mutable","name":"errorMessage","nameLocation":"5293:12:6","nodeType":"VariableDeclaration","scope":1368,"src":"5279:26:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1332,"name":"string","nodeType":"ElementaryTypeName","src":"5279:6:6","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"5195:116:6"},"returnParameters":{"id":1337,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1336,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1368,"src":"5330:12:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1335,"name":"bytes","nodeType":"ElementaryTypeName","src":"5330:5:6","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"5329:14:6"},"scope":1544,"src":"5165:446:6","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1384,"nodeType":"Block","src":"5888:97:6","statements":[{"expression":{"arguments":[{"id":1379,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1371,"src":"5924:6:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1380,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1373,"src":"5932:4:6","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"hexValue":"416464726573733a206c6f772d6c6576656c207374617469632063616c6c206661696c6564","id":1381,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5938:39:6","typeDescriptions":{"typeIdentifier":"t_stringliteral_90ec82aa826a536a4cbfae44ecfa384680faa9a4b77344bce96aa761ad904df0","typeString":"literal_string \"Address: low-level static call failed\""},"value":"Address: low-level static call failed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_stringliteral_90ec82aa826a536a4cbfae44ecfa384680faa9a4b77344bce96aa761ad904df0","typeString":"literal_string \"Address: low-level static call failed\""}],"id":1378,"name":"functionStaticCall","nodeType":"Identifier","overloadedDeclarations":[1385,1414],"referencedDeclaration":1414,"src":"5905:18:6","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bytes memory,string memory) view returns (bytes memory)"}},"id":1382,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5905:73:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":1377,"id":1383,"nodeType":"Return","src":"5898:80:6"}]},"documentation":{"id":1369,"nodeType":"StructuredDocumentation","src":"5617:166:6","text":" @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a static call.\n _Available since v3.3._"},"id":1385,"implemented":true,"kind":"function","modifiers":[],"name":"functionStaticCall","nameLocation":"5797:18:6","nodeType":"FunctionDefinition","parameters":{"id":1374,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1371,"mutability":"mutable","name":"target","nameLocation":"5824:6:6","nodeType":"VariableDeclaration","scope":1385,"src":"5816:14:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1370,"name":"address","nodeType":"ElementaryTypeName","src":"5816:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1373,"mutability":"mutable","name":"data","nameLocation":"5845:4:6","nodeType":"VariableDeclaration","scope":1385,"src":"5832:17:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1372,"name":"bytes","nodeType":"ElementaryTypeName","src":"5832:5:6","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"5815:35:6"},"returnParameters":{"id":1377,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1376,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1385,"src":"5874:12:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1375,"name":"bytes","nodeType":"ElementaryTypeName","src":"5874:5:6","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"5873:14:6"},"scope":1544,"src":"5788:197:6","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":1413,"nodeType":"Block","src":"6327:168:6","statements":[{"assignments":[1398,1400],"declarations":[{"constant":false,"id":1398,"mutability":"mutable","name":"success","nameLocation":"6343:7:6","nodeType":"VariableDeclaration","scope":1413,"src":"6338:12:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1397,"name":"bool","nodeType":"ElementaryTypeName","src":"6338:4:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":1400,"mutability":"mutable","name":"returndata","nameLocation":"6365:10:6","nodeType":"VariableDeclaration","scope":1413,"src":"6352:23:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1399,"name":"bytes","nodeType":"ElementaryTypeName","src":"6352:5:6","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":1405,"initialValue":{"arguments":[{"id":1403,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1390,"src":"6397:4:6","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":1401,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1388,"src":"6379:6:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1402,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"staticcall","nodeType":"MemberAccess","src":"6379:17:6","typeDescriptions":{"typeIdentifier":"t_function_barestaticcall_view$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) view returns (bool,bytes memory)"}},"id":1404,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6379:23:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"6337:65:6"},{"expression":{"arguments":[{"id":1407,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1388,"src":"6446:6:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1408,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1398,"src":"6454:7:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":1409,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1400,"src":"6463:10:6","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":1410,"name":"errorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1392,"src":"6475:12:6","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1406,"name":"verifyCallResultFromTarget","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1499,"src":"6419:26:6","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bool,bytes memory,string memory) view returns (bytes memory)"}},"id":1411,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6419:69:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":1396,"id":1412,"nodeType":"Return","src":"6412:76:6"}]},"documentation":{"id":1386,"nodeType":"StructuredDocumentation","src":"5991:173:6","text":" @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n but performing a static call.\n _Available since v3.3._"},"id":1414,"implemented":true,"kind":"function","modifiers":[],"name":"functionStaticCall","nameLocation":"6178:18:6","nodeType":"FunctionDefinition","parameters":{"id":1393,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1388,"mutability":"mutable","name":"target","nameLocation":"6214:6:6","nodeType":"VariableDeclaration","scope":1414,"src":"6206:14:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1387,"name":"address","nodeType":"ElementaryTypeName","src":"6206:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1390,"mutability":"mutable","name":"data","nameLocation":"6243:4:6","nodeType":"VariableDeclaration","scope":1414,"src":"6230:17:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1389,"name":"bytes","nodeType":"ElementaryTypeName","src":"6230:5:6","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":1392,"mutability":"mutable","name":"errorMessage","nameLocation":"6271:12:6","nodeType":"VariableDeclaration","scope":1414,"src":"6257:26:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1391,"name":"string","nodeType":"ElementaryTypeName","src":"6257:6:6","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"6196:93:6"},"returnParameters":{"id":1396,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1395,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1414,"src":"6313:12:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1394,"name":"bytes","nodeType":"ElementaryTypeName","src":"6313:5:6","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"6312:14:6"},"scope":1544,"src":"6169:326:6","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":1430,"nodeType":"Block","src":"6771:101:6","statements":[{"expression":{"arguments":[{"id":1425,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1417,"src":"6809:6:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1426,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1419,"src":"6817:4:6","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"hexValue":"416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564","id":1427,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"6823:41:6","typeDescriptions":{"typeIdentifier":"t_stringliteral_9fdcd12e4b726339b32a442b0a448365d5d85c96b2d2cff917b4f66c63110398","typeString":"literal_string \"Address: low-level delegate call failed\""},"value":"Address: low-level delegate call failed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_stringliteral_9fdcd12e4b726339b32a442b0a448365d5d85c96b2d2cff917b4f66c63110398","typeString":"literal_string \"Address: low-level delegate call failed\""}],"id":1424,"name":"functionDelegateCall","nodeType":"Identifier","overloadedDeclarations":[1431,1460],"referencedDeclaration":1460,"src":"6788:20:6","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bytes memory,string memory) returns (bytes memory)"}},"id":1428,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6788:77:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":1423,"id":1429,"nodeType":"Return","src":"6781:84:6"}]},"documentation":{"id":1415,"nodeType":"StructuredDocumentation","src":"6501:168:6","text":" @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a delegate call.\n _Available since v3.4._"},"id":1431,"implemented":true,"kind":"function","modifiers":[],"name":"functionDelegateCall","nameLocation":"6683:20:6","nodeType":"FunctionDefinition","parameters":{"id":1420,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1417,"mutability":"mutable","name":"target","nameLocation":"6712:6:6","nodeType":"VariableDeclaration","scope":1431,"src":"6704:14:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1416,"name":"address","nodeType":"ElementaryTypeName","src":"6704:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1419,"mutability":"mutable","name":"data","nameLocation":"6733:4:6","nodeType":"VariableDeclaration","scope":1431,"src":"6720:17:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1418,"name":"bytes","nodeType":"ElementaryTypeName","src":"6720:5:6","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"6703:35:6"},"returnParameters":{"id":1423,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1422,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1431,"src":"6757:12:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1421,"name":"bytes","nodeType":"ElementaryTypeName","src":"6757:5:6","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"6756:14:6"},"scope":1544,"src":"6674:198:6","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1459,"nodeType":"Block","src":"7213:170:6","statements":[{"assignments":[1444,1446],"declarations":[{"constant":false,"id":1444,"mutability":"mutable","name":"success","nameLocation":"7229:7:6","nodeType":"VariableDeclaration","scope":1459,"src":"7224:12:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1443,"name":"bool","nodeType":"ElementaryTypeName","src":"7224:4:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":1446,"mutability":"mutable","name":"returndata","nameLocation":"7251:10:6","nodeType":"VariableDeclaration","scope":1459,"src":"7238:23:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1445,"name":"bytes","nodeType":"ElementaryTypeName","src":"7238:5:6","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":1451,"initialValue":{"arguments":[{"id":1449,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1436,"src":"7285:4:6","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":1447,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1434,"src":"7265:6:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1448,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"delegatecall","nodeType":"MemberAccess","src":"7265:19:6","typeDescriptions":{"typeIdentifier":"t_function_baredelegatecall_nonpayable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) returns (bool,bytes memory)"}},"id":1450,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7265:25:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"7223:67:6"},{"expression":{"arguments":[{"id":1453,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1434,"src":"7334:6:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1454,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1444,"src":"7342:7:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":1455,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1446,"src":"7351:10:6","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":1456,"name":"errorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1438,"src":"7363:12:6","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1452,"name":"verifyCallResultFromTarget","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1499,"src":"7307:26:6","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bool,bytes memory,string memory) view returns (bytes memory)"}},"id":1457,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7307:69:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":1442,"id":1458,"nodeType":"Return","src":"7300:76:6"}]},"documentation":{"id":1432,"nodeType":"StructuredDocumentation","src":"6878:175:6","text":" @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n but performing a delegate call.\n _Available since v3.4._"},"id":1460,"implemented":true,"kind":"function","modifiers":[],"name":"functionDelegateCall","nameLocation":"7067:20:6","nodeType":"FunctionDefinition","parameters":{"id":1439,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1434,"mutability":"mutable","name":"target","nameLocation":"7105:6:6","nodeType":"VariableDeclaration","scope":1460,"src":"7097:14:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1433,"name":"address","nodeType":"ElementaryTypeName","src":"7097:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1436,"mutability":"mutable","name":"data","nameLocation":"7134:4:6","nodeType":"VariableDeclaration","scope":1460,"src":"7121:17:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1435,"name":"bytes","nodeType":"ElementaryTypeName","src":"7121:5:6","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":1438,"mutability":"mutable","name":"errorMessage","nameLocation":"7162:12:6","nodeType":"VariableDeclaration","scope":1460,"src":"7148:26:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1437,"name":"string","nodeType":"ElementaryTypeName","src":"7148:6:6","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"7087:93:6"},"returnParameters":{"id":1442,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1441,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1460,"src":"7199:12:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1440,"name":"bytes","nodeType":"ElementaryTypeName","src":"7199:5:6","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"7198:14:6"},"scope":1544,"src":"7058:325:6","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1498,"nodeType":"Block","src":"7865:434:6","statements":[{"condition":{"id":1474,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1465,"src":"7879:7:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":1496,"nodeType":"Block","src":"8235:58:6","statements":[{"expression":{"arguments":[{"id":1492,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1467,"src":"8257:10:6","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":1493,"name":"errorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1469,"src":"8269:12:6","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1491,"name":"_revert","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1543,"src":"8249:7:6","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$__$","typeString":"function (bytes memory,string memory) pure"}},"id":1494,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8249:33:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1495,"nodeType":"ExpressionStatement","src":"8249:33:6"}]},"id":1497,"nodeType":"IfStatement","src":"7875:418:6","trueBody":{"id":1490,"nodeType":"Block","src":"7888:341:6","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1478,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1475,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1467,"src":"7906:10:6","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1476,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"7906:17:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":1477,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7927:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"7906:22:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1487,"nodeType":"IfStatement","src":"7902:286:6","trueBody":{"id":1486,"nodeType":"Block","src":"7930:258:6","statements":[{"expression":{"arguments":[{"arguments":[{"id":1481,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1463,"src":"8132:6:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1480,"name":"isContract","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1232,"src":"8121:10:6","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_bool_$","typeString":"function (address) view returns (bool)"}},"id":1482,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8121:18:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374","id":1483,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"8141:31:6","typeDescriptions":{"typeIdentifier":"t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad","typeString":"literal_string \"Address: call to non-contract\""},"value":"Address: call to non-contract"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad","typeString":"literal_string \"Address: call to non-contract\""}],"id":1479,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"8113:7:6","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1484,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8113:60:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1485,"nodeType":"ExpressionStatement","src":"8113:60:6"}]}},{"expression":{"id":1488,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1467,"src":"8208:10:6","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":1473,"id":1489,"nodeType":"Return","src":"8201:17:6"}]}}]},"documentation":{"id":1461,"nodeType":"StructuredDocumentation","src":"7389:277:6","text":" @dev Tool to verify that a low level call to smart-contract was successful, and revert (either by bubbling\n the revert reason or using the provided one) in case of unsuccessful call or if target was not a contract.\n _Available since v4.8._"},"id":1499,"implemented":true,"kind":"function","modifiers":[],"name":"verifyCallResultFromTarget","nameLocation":"7680:26:6","nodeType":"FunctionDefinition","parameters":{"id":1470,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1463,"mutability":"mutable","name":"target","nameLocation":"7724:6:6","nodeType":"VariableDeclaration","scope":1499,"src":"7716:14:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1462,"name":"address","nodeType":"ElementaryTypeName","src":"7716:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1465,"mutability":"mutable","name":"success","nameLocation":"7745:7:6","nodeType":"VariableDeclaration","scope":1499,"src":"7740:12:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1464,"name":"bool","nodeType":"ElementaryTypeName","src":"7740:4:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":1467,"mutability":"mutable","name":"returndata","nameLocation":"7775:10:6","nodeType":"VariableDeclaration","scope":1499,"src":"7762:23:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1466,"name":"bytes","nodeType":"ElementaryTypeName","src":"7762:5:6","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":1469,"mutability":"mutable","name":"errorMessage","nameLocation":"7809:12:6","nodeType":"VariableDeclaration","scope":1499,"src":"7795:26:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1468,"name":"string","nodeType":"ElementaryTypeName","src":"7795:6:6","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"7706:121:6"},"returnParameters":{"id":1473,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1472,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1499,"src":"7851:12:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1471,"name":"bytes","nodeType":"ElementaryTypeName","src":"7851:5:6","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"7850:14:6"},"scope":1544,"src":"7671:628:6","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":1522,"nodeType":"Block","src":"8680:135:6","statements":[{"condition":{"id":1511,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1502,"src":"8694:7:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":1520,"nodeType":"Block","src":"8751:58:6","statements":[{"expression":{"arguments":[{"id":1516,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1504,"src":"8773:10:6","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":1517,"name":"errorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1506,"src":"8785:12:6","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1515,"name":"_revert","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1543,"src":"8765:7:6","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$__$","typeString":"function (bytes memory,string memory) pure"}},"id":1518,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8765:33:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1519,"nodeType":"ExpressionStatement","src":"8765:33:6"}]},"id":1521,"nodeType":"IfStatement","src":"8690:119:6","trueBody":{"id":1514,"nodeType":"Block","src":"8703:42:6","statements":[{"expression":{"id":1512,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1504,"src":"8724:10:6","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":1510,"id":1513,"nodeType":"Return","src":"8717:17:6"}]}}]},"documentation":{"id":1500,"nodeType":"StructuredDocumentation","src":"8305:210:6","text":" @dev Tool to verify that a low level call was successful, and revert if it wasn't, either by bubbling the\n revert reason or using the provided one.\n _Available since v4.3._"},"id":1523,"implemented":true,"kind":"function","modifiers":[],"name":"verifyCallResult","nameLocation":"8529:16:6","nodeType":"FunctionDefinition","parameters":{"id":1507,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1502,"mutability":"mutable","name":"success","nameLocation":"8560:7:6","nodeType":"VariableDeclaration","scope":1523,"src":"8555:12:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1501,"name":"bool","nodeType":"ElementaryTypeName","src":"8555:4:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":1504,"mutability":"mutable","name":"returndata","nameLocation":"8590:10:6","nodeType":"VariableDeclaration","scope":1523,"src":"8577:23:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1503,"name":"bytes","nodeType":"ElementaryTypeName","src":"8577:5:6","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":1506,"mutability":"mutable","name":"errorMessage","nameLocation":"8624:12:6","nodeType":"VariableDeclaration","scope":1523,"src":"8610:26:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1505,"name":"string","nodeType":"ElementaryTypeName","src":"8610:6:6","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"8545:97:6"},"returnParameters":{"id":1510,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1509,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1523,"src":"8666:12:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1508,"name":"bytes","nodeType":"ElementaryTypeName","src":"8666:5:6","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"8665:14:6"},"scope":1544,"src":"8520:295:6","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1542,"nodeType":"Block","src":"8904:457:6","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1533,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1530,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1525,"src":"8980:10:6","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1531,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"8980:17:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":1532,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9000:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"8980:21:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":1540,"nodeType":"Block","src":"9310:45:6","statements":[{"expression":{"arguments":[{"id":1537,"name":"errorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1527,"src":"9331:12:6","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1536,"name":"revert","nodeType":"Identifier","overloadedDeclarations":[-19,-19],"referencedDeclaration":-19,"src":"9324:6:6","typeDescriptions":{"typeIdentifier":"t_function_revert_pure$_t_string_memory_ptr_$returns$__$","typeString":"function (string memory) pure"}},"id":1538,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9324:20:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1539,"nodeType":"ExpressionStatement","src":"9324:20:6"}]},"id":1541,"nodeType":"IfStatement","src":"8976:379:6","trueBody":{"id":1535,"nodeType":"Block","src":"9003:301:6","statements":[{"AST":{"nodeType":"YulBlock","src":"9161:133:6","statements":[{"nodeType":"YulVariableDeclaration","src":"9179:40:6","value":{"arguments":[{"name":"returndata","nodeType":"YulIdentifier","src":"9208:10:6"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"9202:5:6"},"nodeType":"YulFunctionCall","src":"9202:17:6"},"variables":[{"name":"returndata_size","nodeType":"YulTypedName","src":"9183:15:6","type":""}]},{"expression":{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"9247:2:6","type":"","value":"32"},{"name":"returndata","nodeType":"YulIdentifier","src":"9251:10:6"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9243:3:6"},"nodeType":"YulFunctionCall","src":"9243:19:6"},{"name":"returndata_size","nodeType":"YulIdentifier","src":"9264:15:6"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"9236:6:6"},"nodeType":"YulFunctionCall","src":"9236:44:6"},"nodeType":"YulExpressionStatement","src":"9236:44:6"}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"london","externalReferences":[{"declaration":1525,"isOffset":false,"isSlot":false,"src":"9208:10:6","valueSize":1},{"declaration":1525,"isOffset":false,"isSlot":false,"src":"9251:10:6","valueSize":1}],"id":1534,"nodeType":"InlineAssembly","src":"9152:142:6"}]}}]},"id":1543,"implemented":true,"kind":"function","modifiers":[],"name":"_revert","nameLocation":"8830:7:6","nodeType":"FunctionDefinition","parameters":{"id":1528,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1525,"mutability":"mutable","name":"returndata","nameLocation":"8851:10:6","nodeType":"VariableDeclaration","scope":1543,"src":"8838:23:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1524,"name":"bytes","nodeType":"ElementaryTypeName","src":"8838:5:6","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":1527,"mutability":"mutable","name":"errorMessage","nameLocation":"8877:12:6","nodeType":"VariableDeclaration","scope":1543,"src":"8863:26:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1526,"name":"string","nodeType":"ElementaryTypeName","src":"8863:6:6","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"8837:53:6"},"returnParameters":{"id":1529,"nodeType":"ParameterList","parameters":[],"src":"8904:0:6"},"scope":1544,"src":"8821:540:6","stateMutability":"pure","virtual":false,"visibility":"private"}],"scope":1545,"src":"194:9169:6","usedErrors":[]}],"src":"101:9263:6"}},"@openzeppelin/contracts/utils/Context.sol":{"id":7,"ast":{"absolutePath":"@openzeppelin/contracts/utils/Context.sol","exportedSymbols":{"Context":[1566]},"id":1567,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1546,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"86:23:7"},{"abstract":true,"baseContracts":[],"canonicalName":"Context","contractDependencies":[],"contractKind":"contract","documentation":{"id":1547,"nodeType":"StructuredDocumentation","src":"111:496:7","text":" @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."},"fullyImplemented":true,"id":1566,"linearizedBaseContracts":[1566],"name":"Context","nameLocation":"626:7:7","nodeType":"ContractDefinition","nodes":[{"body":{"id":1555,"nodeType":"Block","src":"702:34:7","statements":[{"expression":{"expression":{"id":1552,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"719:3:7","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1553,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"719:10:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":1551,"id":1554,"nodeType":"Return","src":"712:17:7"}]},"id":1556,"implemented":true,"kind":"function","modifiers":[],"name":"_msgSender","nameLocation":"649:10:7","nodeType":"FunctionDefinition","parameters":{"id":1548,"nodeType":"ParameterList","parameters":[],"src":"659:2:7"},"returnParameters":{"id":1551,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1550,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1556,"src":"693:7:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1549,"name":"address","nodeType":"ElementaryTypeName","src":"693:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"692:9:7"},"scope":1566,"src":"640:96:7","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":1564,"nodeType":"Block","src":"809:32:7","statements":[{"expression":{"expression":{"id":1561,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"826:3:7","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1562,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"data","nodeType":"MemberAccess","src":"826:8:7","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}},"functionReturnParameters":1560,"id":1563,"nodeType":"Return","src":"819:15:7"}]},"id":1565,"implemented":true,"kind":"function","modifiers":[],"name":"_msgData","nameLocation":"751:8:7","nodeType":"FunctionDefinition","parameters":{"id":1557,"nodeType":"ParameterList","parameters":[],"src":"759:2:7"},"returnParameters":{"id":1560,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1559,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1565,"src":"793:14:7","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":1558,"name":"bytes","nodeType":"ElementaryTypeName","src":"793:5:7","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"792:16:7"},"scope":1566,"src":"742:99:7","stateMutability":"view","virtual":true,"visibility":"internal"}],"scope":1567,"src":"608:235:7","usedErrors":[]}],"src":"86:758:7"}},"@openzeppelin/contracts/utils/math/SafeMath.sol":{"id":8,"ast":{"absolutePath":"@openzeppelin/contracts/utils/math/SafeMath.sol","exportedSymbols":{"SafeMath":[1878]},"id":1879,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1568,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"107:23:8"},{"abstract":false,"baseContracts":[],"canonicalName":"SafeMath","contractDependencies":[],"contractKind":"library","documentation":{"id":1569,"nodeType":"StructuredDocumentation","src":"285:196:8","text":" @dev Wrappers over Solidity's arithmetic operations.\n NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler\n now has built in overflow checking."},"fullyImplemented":true,"id":1878,"linearizedBaseContracts":[1878],"name":"SafeMath","nameLocation":"490:8:8","nodeType":"ContractDefinition","nodes":[{"body":{"id":1600,"nodeType":"Block","src":"717:140:8","statements":[{"id":1599,"nodeType":"UncheckedBlock","src":"727:124:8","statements":[{"assignments":[1582],"declarations":[{"constant":false,"id":1582,"mutability":"mutable","name":"c","nameLocation":"759:1:8","nodeType":"VariableDeclaration","scope":1599,"src":"751:9:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1581,"name":"uint256","nodeType":"ElementaryTypeName","src":"751:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1586,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1585,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1583,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1572,"src":"763:1:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":1584,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1574,"src":"767:1:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"763:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"751:17:8"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1589,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1587,"name":"c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1582,"src":"786:1:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":1588,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1572,"src":"790:1:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"786:5:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1594,"nodeType":"IfStatement","src":"782:28:8","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":1590,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"801:5:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":1591,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"808:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":1592,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"800:10:8","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":1580,"id":1593,"nodeType":"Return","src":"793:17:8"}},{"expression":{"components":[{"hexValue":"74727565","id":1595,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"832:4:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"id":1596,"name":"c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1582,"src":"838:1:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1597,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"831:9:8","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":1580,"id":1598,"nodeType":"Return","src":"824:16:8"}]}]},"documentation":{"id":1570,"nodeType":"StructuredDocumentation","src":"505:131:8","text":" @dev Returns the addition of two unsigned integers, with an overflow flag.\n _Available since v3.4._"},"id":1601,"implemented":true,"kind":"function","modifiers":[],"name":"tryAdd","nameLocation":"650:6:8","nodeType":"FunctionDefinition","parameters":{"id":1575,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1572,"mutability":"mutable","name":"a","nameLocation":"665:1:8","nodeType":"VariableDeclaration","scope":1601,"src":"657:9:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1571,"name":"uint256","nodeType":"ElementaryTypeName","src":"657:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1574,"mutability":"mutable","name":"b","nameLocation":"676:1:8","nodeType":"VariableDeclaration","scope":1601,"src":"668:9:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1573,"name":"uint256","nodeType":"ElementaryTypeName","src":"668:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"656:22:8"},"returnParameters":{"id":1580,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1577,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1601,"src":"702:4:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1576,"name":"bool","nodeType":"ElementaryTypeName","src":"702:4:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":1579,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1601,"src":"708:7:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1578,"name":"uint256","nodeType":"ElementaryTypeName","src":"708:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"701:15:8"},"scope":1878,"src":"641:216:8","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1628,"nodeType":"Block","src":"1078:113:8","statements":[{"id":1627,"nodeType":"UncheckedBlock","src":"1088:97:8","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1615,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1613,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1606,"src":"1116:1:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":1614,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1604,"src":"1120:1:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1116:5:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1620,"nodeType":"IfStatement","src":"1112:28:8","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":1616,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"1131:5:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":1617,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1138:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":1618,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"1130:10:8","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":1612,"id":1619,"nodeType":"Return","src":"1123:17:8"}},{"expression":{"components":[{"hexValue":"74727565","id":1621,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"1162:4:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1624,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1622,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1604,"src":"1168:1:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":1623,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1606,"src":"1172:1:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1168:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1625,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1161:13:8","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":1612,"id":1626,"nodeType":"Return","src":"1154:20:8"}]}]},"documentation":{"id":1602,"nodeType":"StructuredDocumentation","src":"863:134:8","text":" @dev Returns the subtraction of two unsigned integers, with an overflow flag.\n _Available since v3.4._"},"id":1629,"implemented":true,"kind":"function","modifiers":[],"name":"trySub","nameLocation":"1011:6:8","nodeType":"FunctionDefinition","parameters":{"id":1607,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1604,"mutability":"mutable","name":"a","nameLocation":"1026:1:8","nodeType":"VariableDeclaration","scope":1629,"src":"1018:9:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1603,"name":"uint256","nodeType":"ElementaryTypeName","src":"1018:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1606,"mutability":"mutable","name":"b","nameLocation":"1037:1:8","nodeType":"VariableDeclaration","scope":1629,"src":"1029:9:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1605,"name":"uint256","nodeType":"ElementaryTypeName","src":"1029:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1017:22:8"},"returnParameters":{"id":1612,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1609,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1629,"src":"1063:4:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1608,"name":"bool","nodeType":"ElementaryTypeName","src":"1063:4:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":1611,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1629,"src":"1069:7:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1610,"name":"uint256","nodeType":"ElementaryTypeName","src":"1069:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1062:15:8"},"scope":1878,"src":"1002:189:8","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1670,"nodeType":"Block","src":"1415:417:8","statements":[{"id":1669,"nodeType":"UncheckedBlock","src":"1425:401:8","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1643,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1641,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1632,"src":"1683:1:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":1642,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1688:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1683:6:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1648,"nodeType":"IfStatement","src":"1679:28:8","trueBody":{"expression":{"components":[{"hexValue":"74727565","id":1644,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"1699:4:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"hexValue":"30","id":1645,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1705:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":1646,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"1698:9:8","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":1640,"id":1647,"nodeType":"Return","src":"1691:16:8"}},{"assignments":[1650],"declarations":[{"constant":false,"id":1650,"mutability":"mutable","name":"c","nameLocation":"1729:1:8","nodeType":"VariableDeclaration","scope":1669,"src":"1721:9:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1649,"name":"uint256","nodeType":"ElementaryTypeName","src":"1721:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1654,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1653,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1651,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1632,"src":"1733:1:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":1652,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1634,"src":"1737:1:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1733:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"1721:17:8"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1659,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1657,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1655,"name":"c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1650,"src":"1756:1:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":1656,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1632,"src":"1760:1:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1756:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":1658,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1634,"src":"1765:1:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1756:10:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1664,"nodeType":"IfStatement","src":"1752:33:8","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":1660,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"1776:5:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":1661,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1783:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":1662,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"1775:10:8","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":1640,"id":1663,"nodeType":"Return","src":"1768:17:8"}},{"expression":{"components":[{"hexValue":"74727565","id":1665,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"1807:4:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"id":1666,"name":"c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1650,"src":"1813:1:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1667,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1806:9:8","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":1640,"id":1668,"nodeType":"Return","src":"1799:16:8"}]}]},"documentation":{"id":1630,"nodeType":"StructuredDocumentation","src":"1197:137:8","text":" @dev Returns the multiplication of two unsigned integers, with an overflow flag.\n _Available since v3.4._"},"id":1671,"implemented":true,"kind":"function","modifiers":[],"name":"tryMul","nameLocation":"1348:6:8","nodeType":"FunctionDefinition","parameters":{"id":1635,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1632,"mutability":"mutable","name":"a","nameLocation":"1363:1:8","nodeType":"VariableDeclaration","scope":1671,"src":"1355:9:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1631,"name":"uint256","nodeType":"ElementaryTypeName","src":"1355:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1634,"mutability":"mutable","name":"b","nameLocation":"1374:1:8","nodeType":"VariableDeclaration","scope":1671,"src":"1366:9:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1633,"name":"uint256","nodeType":"ElementaryTypeName","src":"1366:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1354:22:8"},"returnParameters":{"id":1640,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1637,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1671,"src":"1400:4:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1636,"name":"bool","nodeType":"ElementaryTypeName","src":"1400:4:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":1639,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1671,"src":"1406:7:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1638,"name":"uint256","nodeType":"ElementaryTypeName","src":"1406:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1399:15:8"},"scope":1878,"src":"1339:493:8","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1698,"nodeType":"Block","src":"2057:114:8","statements":[{"id":1697,"nodeType":"UncheckedBlock","src":"2067:98:8","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1685,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1683,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1676,"src":"2095:1:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":1684,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2100:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2095:6:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1690,"nodeType":"IfStatement","src":"2091:29:8","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":1686,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"2111:5:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":1687,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2118:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":1688,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"2110:10:8","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":1682,"id":1689,"nodeType":"Return","src":"2103:17:8"}},{"expression":{"components":[{"hexValue":"74727565","id":1691,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"2142:4:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1694,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1692,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1674,"src":"2148:1:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":1693,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1676,"src":"2152:1:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2148:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1695,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"2141:13:8","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":1682,"id":1696,"nodeType":"Return","src":"2134:20:8"}]}]},"documentation":{"id":1672,"nodeType":"StructuredDocumentation","src":"1838:138:8","text":" @dev Returns the division of two unsigned integers, with a division by zero flag.\n _Available since v3.4._"},"id":1699,"implemented":true,"kind":"function","modifiers":[],"name":"tryDiv","nameLocation":"1990:6:8","nodeType":"FunctionDefinition","parameters":{"id":1677,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1674,"mutability":"mutable","name":"a","nameLocation":"2005:1:8","nodeType":"VariableDeclaration","scope":1699,"src":"1997:9:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1673,"name":"uint256","nodeType":"ElementaryTypeName","src":"1997:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1676,"mutability":"mutable","name":"b","nameLocation":"2016:1:8","nodeType":"VariableDeclaration","scope":1699,"src":"2008:9:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1675,"name":"uint256","nodeType":"ElementaryTypeName","src":"2008:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1996:22:8"},"returnParameters":{"id":1682,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1679,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1699,"src":"2042:4:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1678,"name":"bool","nodeType":"ElementaryTypeName","src":"2042:4:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":1681,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1699,"src":"2048:7:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1680,"name":"uint256","nodeType":"ElementaryTypeName","src":"2048:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2041:15:8"},"scope":1878,"src":"1981:190:8","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1726,"nodeType":"Block","src":"2406:114:8","statements":[{"id":1725,"nodeType":"UncheckedBlock","src":"2416:98:8","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1713,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1711,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1704,"src":"2444:1:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":1712,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2449:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2444:6:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1718,"nodeType":"IfStatement","src":"2440:29:8","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":1714,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"2460:5:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":1715,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2467:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":1716,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"2459:10:8","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":1710,"id":1717,"nodeType":"Return","src":"2452:17:8"}},{"expression":{"components":[{"hexValue":"74727565","id":1719,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"2491:4:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1722,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1720,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1702,"src":"2497:1:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"%","rightExpression":{"id":1721,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1704,"src":"2501:1:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2497:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1723,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"2490:13:8","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":1710,"id":1724,"nodeType":"Return","src":"2483:20:8"}]}]},"documentation":{"id":1700,"nodeType":"StructuredDocumentation","src":"2177:148:8","text":" @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag.\n _Available since v3.4._"},"id":1727,"implemented":true,"kind":"function","modifiers":[],"name":"tryMod","nameLocation":"2339:6:8","nodeType":"FunctionDefinition","parameters":{"id":1705,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1702,"mutability":"mutable","name":"a","nameLocation":"2354:1:8","nodeType":"VariableDeclaration","scope":1727,"src":"2346:9:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1701,"name":"uint256","nodeType":"ElementaryTypeName","src":"2346:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1704,"mutability":"mutable","name":"b","nameLocation":"2365:1:8","nodeType":"VariableDeclaration","scope":1727,"src":"2357:9:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1703,"name":"uint256","nodeType":"ElementaryTypeName","src":"2357:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2345:22:8"},"returnParameters":{"id":1710,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1707,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1727,"src":"2391:4:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1706,"name":"bool","nodeType":"ElementaryTypeName","src":"2391:4:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":1709,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1727,"src":"2397:7:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1708,"name":"uint256","nodeType":"ElementaryTypeName","src":"2397:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2390:15:8"},"scope":1878,"src":"2330:190:8","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1741,"nodeType":"Block","src":"2822:29:8","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1739,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1737,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1730,"src":"2839:1:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":1738,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1732,"src":"2843:1:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2839:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1736,"id":1740,"nodeType":"Return","src":"2832:12:8"}]},"documentation":{"id":1728,"nodeType":"StructuredDocumentation","src":"2526:224:8","text":" @dev Returns the addition of two unsigned integers, reverting on\n overflow.\n Counterpart to Solidity's `+` operator.\n Requirements:\n - Addition cannot overflow."},"id":1742,"implemented":true,"kind":"function","modifiers":[],"name":"add","nameLocation":"2764:3:8","nodeType":"FunctionDefinition","parameters":{"id":1733,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1730,"mutability":"mutable","name":"a","nameLocation":"2776:1:8","nodeType":"VariableDeclaration","scope":1742,"src":"2768:9:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1729,"name":"uint256","nodeType":"ElementaryTypeName","src":"2768:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1732,"mutability":"mutable","name":"b","nameLocation":"2787:1:8","nodeType":"VariableDeclaration","scope":1742,"src":"2779:9:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1731,"name":"uint256","nodeType":"ElementaryTypeName","src":"2779:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2767:22:8"},"returnParameters":{"id":1736,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1735,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1742,"src":"2813:7:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1734,"name":"uint256","nodeType":"ElementaryTypeName","src":"2813:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2812:9:8"},"scope":1878,"src":"2755:96:8","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1756,"nodeType":"Block","src":"3189:29:8","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1754,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1752,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1745,"src":"3206:1:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":1753,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1747,"src":"3210:1:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3206:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1751,"id":1755,"nodeType":"Return","src":"3199:12:8"}]},"documentation":{"id":1743,"nodeType":"StructuredDocumentation","src":"2857:260:8","text":" @dev Returns the subtraction of two unsigned integers, reverting on\n overflow (when the result is negative).\n Counterpart to Solidity's `-` operator.\n Requirements:\n - Subtraction cannot overflow."},"id":1757,"implemented":true,"kind":"function","modifiers":[],"name":"sub","nameLocation":"3131:3:8","nodeType":"FunctionDefinition","parameters":{"id":1748,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1745,"mutability":"mutable","name":"a","nameLocation":"3143:1:8","nodeType":"VariableDeclaration","scope":1757,"src":"3135:9:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1744,"name":"uint256","nodeType":"ElementaryTypeName","src":"3135:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1747,"mutability":"mutable","name":"b","nameLocation":"3154:1:8","nodeType":"VariableDeclaration","scope":1757,"src":"3146:9:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1746,"name":"uint256","nodeType":"ElementaryTypeName","src":"3146:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3134:22:8"},"returnParameters":{"id":1751,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1750,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1757,"src":"3180:7:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1749,"name":"uint256","nodeType":"ElementaryTypeName","src":"3180:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3179:9:8"},"scope":1878,"src":"3122:96:8","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1771,"nodeType":"Block","src":"3532:29:8","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1769,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1767,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1760,"src":"3549:1:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":1768,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1762,"src":"3553:1:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3549:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1766,"id":1770,"nodeType":"Return","src":"3542:12:8"}]},"documentation":{"id":1758,"nodeType":"StructuredDocumentation","src":"3224:236:8","text":" @dev Returns the multiplication of two unsigned integers, reverting on\n overflow.\n Counterpart to Solidity's `*` operator.\n Requirements:\n - Multiplication cannot overflow."},"id":1772,"implemented":true,"kind":"function","modifiers":[],"name":"mul","nameLocation":"3474:3:8","nodeType":"FunctionDefinition","parameters":{"id":1763,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1760,"mutability":"mutable","name":"a","nameLocation":"3486:1:8","nodeType":"VariableDeclaration","scope":1772,"src":"3478:9:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1759,"name":"uint256","nodeType":"ElementaryTypeName","src":"3478:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1762,"mutability":"mutable","name":"b","nameLocation":"3497:1:8","nodeType":"VariableDeclaration","scope":1772,"src":"3489:9:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1761,"name":"uint256","nodeType":"ElementaryTypeName","src":"3489:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3477:22:8"},"returnParameters":{"id":1766,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1765,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1772,"src":"3523:7:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1764,"name":"uint256","nodeType":"ElementaryTypeName","src":"3523:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3522:9:8"},"scope":1878,"src":"3465:96:8","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1786,"nodeType":"Block","src":"3917:29:8","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1784,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1782,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1775,"src":"3934:1:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":1783,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1777,"src":"3938:1:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3934:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1781,"id":1785,"nodeType":"Return","src":"3927:12:8"}]},"documentation":{"id":1773,"nodeType":"StructuredDocumentation","src":"3567:278:8","text":" @dev Returns the integer division of two unsigned integers, reverting on\n division by zero. The result is rounded towards zero.\n Counterpart to Solidity's `/` operator.\n Requirements:\n - The divisor cannot be zero."},"id":1787,"implemented":true,"kind":"function","modifiers":[],"name":"div","nameLocation":"3859:3:8","nodeType":"FunctionDefinition","parameters":{"id":1778,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1775,"mutability":"mutable","name":"a","nameLocation":"3871:1:8","nodeType":"VariableDeclaration","scope":1787,"src":"3863:9:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1774,"name":"uint256","nodeType":"ElementaryTypeName","src":"3863:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1777,"mutability":"mutable","name":"b","nameLocation":"3882:1:8","nodeType":"VariableDeclaration","scope":1787,"src":"3874:9:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1776,"name":"uint256","nodeType":"ElementaryTypeName","src":"3874:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3862:22:8"},"returnParameters":{"id":1781,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1780,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1787,"src":"3908:7:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1779,"name":"uint256","nodeType":"ElementaryTypeName","src":"3908:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3907:9:8"},"scope":1878,"src":"3850:96:8","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1801,"nodeType":"Block","src":"4466:29:8","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1799,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1797,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1790,"src":"4483:1:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"%","rightExpression":{"id":1798,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1792,"src":"4487:1:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4483:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1796,"id":1800,"nodeType":"Return","src":"4476:12:8"}]},"documentation":{"id":1788,"nodeType":"StructuredDocumentation","src":"3952:442:8","text":" @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n reverting when dividing by zero.\n Counterpart to Solidity's `%` operator. This function uses a `revert`\n opcode (which leaves remaining gas untouched) while Solidity uses an\n invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."},"id":1802,"implemented":true,"kind":"function","modifiers":[],"name":"mod","nameLocation":"4408:3:8","nodeType":"FunctionDefinition","parameters":{"id":1793,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1790,"mutability":"mutable","name":"a","nameLocation":"4420:1:8","nodeType":"VariableDeclaration","scope":1802,"src":"4412:9:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1789,"name":"uint256","nodeType":"ElementaryTypeName","src":"4412:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1792,"mutability":"mutable","name":"b","nameLocation":"4431:1:8","nodeType":"VariableDeclaration","scope":1802,"src":"4423:9:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1791,"name":"uint256","nodeType":"ElementaryTypeName","src":"4423:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4411:22:8"},"returnParameters":{"id":1796,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1795,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1802,"src":"4457:7:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1794,"name":"uint256","nodeType":"ElementaryTypeName","src":"4457:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4456:9:8"},"scope":1878,"src":"4399:96:8","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1826,"nodeType":"Block","src":"5054:106:8","statements":[{"id":1825,"nodeType":"UncheckedBlock","src":"5064:90:8","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1817,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1815,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1807,"src":"5096:1:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"id":1816,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1805,"src":"5101:1:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5096:6:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":1818,"name":"errorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1809,"src":"5104:12:8","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1814,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"5088:7:8","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1819,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5088:29:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1820,"nodeType":"ExpressionStatement","src":"5088:29:8"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1823,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1821,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1805,"src":"5138:1:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":1822,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1807,"src":"5142:1:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5138:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1813,"id":1824,"nodeType":"Return","src":"5131:12:8"}]}]},"documentation":{"id":1803,"nodeType":"StructuredDocumentation","src":"4501:453:8","text":" @dev Returns the subtraction of two unsigned integers, reverting with custom message on\n overflow (when the result is negative).\n CAUTION: This function is deprecated because it requires allocating memory for the error\n message unnecessarily. For custom revert reasons use {trySub}.\n Counterpart to Solidity's `-` operator.\n Requirements:\n - Subtraction cannot overflow."},"id":1827,"implemented":true,"kind":"function","modifiers":[],"name":"sub","nameLocation":"4968:3:8","nodeType":"FunctionDefinition","parameters":{"id":1810,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1805,"mutability":"mutable","name":"a","nameLocation":"4980:1:8","nodeType":"VariableDeclaration","scope":1827,"src":"4972:9:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1804,"name":"uint256","nodeType":"ElementaryTypeName","src":"4972:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1807,"mutability":"mutable","name":"b","nameLocation":"4991:1:8","nodeType":"VariableDeclaration","scope":1827,"src":"4983:9:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1806,"name":"uint256","nodeType":"ElementaryTypeName","src":"4983:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1809,"mutability":"mutable","name":"errorMessage","nameLocation":"5008:12:8","nodeType":"VariableDeclaration","scope":1827,"src":"4994:26:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1808,"name":"string","nodeType":"ElementaryTypeName","src":"4994:6:8","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"4971:50:8"},"returnParameters":{"id":1813,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1812,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1827,"src":"5045:7:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1811,"name":"uint256","nodeType":"ElementaryTypeName","src":"5045:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5044:9:8"},"scope":1878,"src":"4959:201:8","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1851,"nodeType":"Block","src":"5739:105:8","statements":[{"id":1850,"nodeType":"UncheckedBlock","src":"5749:89:8","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1842,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1840,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1832,"src":"5781:1:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":1841,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5785:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"5781:5:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":1843,"name":"errorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1834,"src":"5788:12:8","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1839,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"5773:7:8","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1844,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5773:28:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1845,"nodeType":"ExpressionStatement","src":"5773:28:8"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1848,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1846,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1830,"src":"5822:1:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":1847,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1832,"src":"5826:1:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5822:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1838,"id":1849,"nodeType":"Return","src":"5815:12:8"}]}]},"documentation":{"id":1828,"nodeType":"StructuredDocumentation","src":"5166:473:8","text":" @dev Returns the integer division of two unsigned integers, reverting with custom message on\n division by zero. The result is rounded towards zero.\n Counterpart to Solidity's `/` operator. Note: this function uses a\n `revert` opcode (which leaves remaining gas untouched) while Solidity\n uses an invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."},"id":1852,"implemented":true,"kind":"function","modifiers":[],"name":"div","nameLocation":"5653:3:8","nodeType":"FunctionDefinition","parameters":{"id":1835,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1830,"mutability":"mutable","name":"a","nameLocation":"5665:1:8","nodeType":"VariableDeclaration","scope":1852,"src":"5657:9:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1829,"name":"uint256","nodeType":"ElementaryTypeName","src":"5657:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1832,"mutability":"mutable","name":"b","nameLocation":"5676:1:8","nodeType":"VariableDeclaration","scope":1852,"src":"5668:9:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1831,"name":"uint256","nodeType":"ElementaryTypeName","src":"5668:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1834,"mutability":"mutable","name":"errorMessage","nameLocation":"5693:12:8","nodeType":"VariableDeclaration","scope":1852,"src":"5679:26:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1833,"name":"string","nodeType":"ElementaryTypeName","src":"5679:6:8","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"5656:50:8"},"returnParameters":{"id":1838,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1837,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1852,"src":"5730:7:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1836,"name":"uint256","nodeType":"ElementaryTypeName","src":"5730:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5729:9:8"},"scope":1878,"src":"5644:200:8","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1876,"nodeType":"Block","src":"6585:105:8","statements":[{"id":1875,"nodeType":"UncheckedBlock","src":"6595:89:8","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1867,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1865,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1857,"src":"6627:1:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":1866,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6631:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"6627:5:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":1868,"name":"errorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1859,"src":"6634:12:8","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1864,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"6619:7:8","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1869,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6619:28:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1870,"nodeType":"ExpressionStatement","src":"6619:28:8"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1873,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1871,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1855,"src":"6668:1:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"%","rightExpression":{"id":1872,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1857,"src":"6672:1:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6668:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1863,"id":1874,"nodeType":"Return","src":"6661:12:8"}]}]},"documentation":{"id":1853,"nodeType":"StructuredDocumentation","src":"5850:635:8","text":" @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n reverting with custom message when dividing by zero.\n CAUTION: This function is deprecated because it requires allocating memory for the error\n message unnecessarily. For custom revert reasons use {tryMod}.\n Counterpart to Solidity's `%` operator. This function uses a `revert`\n opcode (which leaves remaining gas untouched) while Solidity uses an\n invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."},"id":1877,"implemented":true,"kind":"function","modifiers":[],"name":"mod","nameLocation":"6499:3:8","nodeType":"FunctionDefinition","parameters":{"id":1860,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1855,"mutability":"mutable","name":"a","nameLocation":"6511:1:8","nodeType":"VariableDeclaration","scope":1877,"src":"6503:9:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1854,"name":"uint256","nodeType":"ElementaryTypeName","src":"6503:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1857,"mutability":"mutable","name":"b","nameLocation":"6522:1:8","nodeType":"VariableDeclaration","scope":1877,"src":"6514:9:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1856,"name":"uint256","nodeType":"ElementaryTypeName","src":"6514:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1859,"mutability":"mutable","name":"errorMessage","nameLocation":"6539:12:8","nodeType":"VariableDeclaration","scope":1877,"src":"6525:26:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1858,"name":"string","nodeType":"ElementaryTypeName","src":"6525:6:8","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"6502:50:8"},"returnParameters":{"id":1863,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1862,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1877,"src":"6576:7:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1861,"name":"uint256","nodeType":"ElementaryTypeName","src":"6576:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6575:9:8"},"scope":1878,"src":"6490:200:8","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":1879,"src":"482:6210:8","usedErrors":[]}],"src":"107:6586:8"}},"contracts/ERC20Token.sol":{"id":9,"ast":{"absolutePath":"contracts/ERC20Token.sol","exportedSymbols":{"Context":[1566],"ERC20":[699],"ERC20Token":[1906],"IERC20":[777],"IERC20Metadata":[802]},"id":1907,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1880,"literals":["solidity","^","0.8",".9"],"nodeType":"PragmaDirective","src":"33:23:9"},{"absolutePath":"@openzeppelin/contracts/token/ERC20/ERC20.sol","file":"@openzeppelin/contracts/token/ERC20/ERC20.sol","id":1881,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1907,"sourceUnit":700,"src":"58:55:9","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":1882,"name":"ERC20","nodeType":"IdentifierPath","referencedDeclaration":699,"src":"138:5:9"},"id":1883,"nodeType":"InheritanceSpecifier","src":"138:5:9"}],"canonicalName":"ERC20Token","contractDependencies":[],"contractKind":"contract","fullyImplemented":true,"id":1906,"linearizedBaseContracts":[1906,699,802,777,1566],"name":"ERC20Token","nameLocation":"124:10:9","nodeType":"ContractDefinition","nodes":[{"body":{"id":1904,"nodeType":"Block","src":"224:120:9","statements":[{"expression":{"arguments":[{"expression":{"id":1895,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"300:3:9","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1896,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"300:10:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"commonType":{"typeIdentifier":"t_rational_1000000000000000000000000000_by_1","typeString":"int_const 1000000000000000000000000000"},"id":1901,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"315f3030305f3030305f303030","id":1897,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"312:13:9","typeDescriptions":{"typeIdentifier":"t_rational_1000000000_by_1","typeString":"int_const 1000000000"},"value":"1_000_000_000"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"commonType":{"typeIdentifier":"t_rational_1000000000000000000_by_1","typeString":"int_const 1000000000000000000"},"id":1900,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":1898,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"328:2:9","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3138","id":1899,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"334:2:9","typeDescriptions":{"typeIdentifier":"t_rational_18_by_1","typeString":"int_const 18"},"value":"18"},"src":"328:8:9","typeDescriptions":{"typeIdentifier":"t_rational_1000000000000000000_by_1","typeString":"int_const 1000000000000000000"}},"src":"312:24:9","typeDescriptions":{"typeIdentifier":"t_rational_1000000000000000000000000000_by_1","typeString":"int_const 1000000000000000000000000000"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_rational_1000000000000000000000000000_by_1","typeString":"int_const 1000000000000000000000000000"}],"id":1894,"name":"_mint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":516,"src":"294:5:9","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":1902,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"294:43:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1903,"nodeType":"ExpressionStatement","src":"294:43:9"}]},"id":1905,"implemented":true,"kind":"constructor","modifiers":[{"arguments":[{"id":1890,"name":"name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1885,"src":"210:4:9","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":1891,"name":"symbol","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1887,"src":"216:6:9","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"id":1892,"kind":"baseConstructorSpecifier","modifierName":{"id":1889,"name":"ERC20","nodeType":"IdentifierPath","referencedDeclaration":699,"src":"204:5:9"},"nodeType":"ModifierInvocation","src":"204:19:9"}],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":1888,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1885,"mutability":"mutable","name":"name","nameLocation":"176:4:9","nodeType":"VariableDeclaration","scope":1905,"src":"162:18:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1884,"name":"string","nodeType":"ElementaryTypeName","src":"162:6:9","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":1887,"mutability":"mutable","name":"symbol","nameLocation":"196:6:9","nodeType":"VariableDeclaration","scope":1905,"src":"182:20:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1886,"name":"string","nodeType":"ElementaryTypeName","src":"182:6:9","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"161:42:9"},"returnParameters":{"id":1893,"nodeType":"ParameterList","parameters":[],"src":"224:0:9"},"scope":1906,"src":"150:194:9","stateMutability":"nonpayable","virtual":false,"visibility":"public"}],"scope":1907,"src":"115:231:9","usedErrors":[]}],"src":"33:314:9"}},"contracts/SobaToken.sol":{"id":10,"ast":{"absolutePath":"contracts/SobaToken.sol","exportedSymbols":{"Context":[1566],"ERC20":[699],"IERC20":[777],"IERC20Metadata":[802],"Ownable":[112],"SobaToken":[1961]},"id":1962,"license":"UNLICENSED","nodeType":"SourceUnit","nodes":[{"id":1908,"literals":["solidity","^","0.8",".9"],"nodeType":"PragmaDirective","src":"39:23:10"},{"absolutePath":"@openzeppelin/contracts/token/ERC20/ERC20.sol","file":"@openzeppelin/contracts/token/ERC20/ERC20.sol","id":1909,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1962,"sourceUnit":700,"src":"64:55:10","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/access/Ownable.sol","file":"@openzeppelin/contracts/access/Ownable.sol","id":1910,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1962,"sourceUnit":113,"src":"120:52:10","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":1911,"name":"ERC20","nodeType":"IdentifierPath","referencedDeclaration":699,"src":"196:5:10"},"id":1912,"nodeType":"InheritanceSpecifier","src":"196:5:10"},{"baseName":{"id":1913,"name":"Ownable","nodeType":"IdentifierPath","referencedDeclaration":112,"src":"203:7:10"},"id":1914,"nodeType":"InheritanceSpecifier","src":"203:7:10"}],"canonicalName":"SobaToken","contractDependencies":[],"contractKind":"contract","fullyImplemented":true,"id":1961,"linearizedBaseContracts":[1961,112,699,802,777,1566],"name":"SobaToken","nameLocation":"183:9:10","nodeType":"ContractDefinition","nodes":[{"body":{"id":1935,"nodeType":"Block","src":"291:60:10","statements":[{"expression":{"arguments":[{"expression":{"id":1926,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"307:3:10","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1927,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"307:10:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"commonType":{"typeIdentifier":"t_rational_1000000000000000000000000000_by_1","typeString":"int_const 1000000000000000000000000000"},"id":1932,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"315f3030305f3030305f303030","id":1928,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"319:13:10","typeDescriptions":{"typeIdentifier":"t_rational_1000000000_by_1","typeString":"int_const 1000000000"},"value":"1_000_000_000"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"commonType":{"typeIdentifier":"t_rational_1000000000000000000_by_1","typeString":"int_const 1000000000000000000"},"id":1931,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":1929,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"335:2:10","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3138","id":1930,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"341:2:10","typeDescriptions":{"typeIdentifier":"t_rational_18_by_1","typeString":"int_const 18"},"value":"18"},"src":"335:8:10","typeDescriptions":{"typeIdentifier":"t_rational_1000000000000000000_by_1","typeString":"int_const 1000000000000000000"}},"src":"319:24:10","typeDescriptions":{"typeIdentifier":"t_rational_1000000000000000000000000000_by_1","typeString":"int_const 1000000000000000000000000000"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_rational_1000000000000000000000000000_by_1","typeString":"int_const 1000000000000000000000000000"}],"id":1925,"name":"_mint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":516,"src":"301:5:10","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":1933,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"301:43:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1934,"nodeType":"ExpressionStatement","src":"301:43:10"}]},"id":1936,"implemented":true,"kind":"constructor","modifiers":[{"arguments":[{"id":1921,"name":"name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1916,"src":"277:4:10","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":1922,"name":"symbol","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1918,"src":"283:6:10","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"id":1923,"kind":"baseConstructorSpecifier","modifierName":{"id":1920,"name":"ERC20","nodeType":"IdentifierPath","referencedDeclaration":699,"src":"271:5:10"},"nodeType":"ModifierInvocation","src":"271:19:10"}],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":1919,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1916,"mutability":"mutable","name":"name","nameLocation":"243:4:10","nodeType":"VariableDeclaration","scope":1936,"src":"229:18:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1915,"name":"string","nodeType":"ElementaryTypeName","src":"229:6:10","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":1918,"mutability":"mutable","name":"symbol","nameLocation":"263:6:10","nodeType":"VariableDeclaration","scope":1936,"src":"249:20:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1917,"name":"string","nodeType":"ElementaryTypeName","src":"249:6:10","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"228:42:10"},"returnParameters":{"id":1924,"nodeType":"ParameterList","parameters":[],"src":"291:0:10"},"scope":1961,"src":"217:134:10","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":1950,"nodeType":"Block","src":"418:36:10","statements":[{"expression":{"arguments":[{"id":1946,"name":"_to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1938,"src":"434:3:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1947,"name":"_amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1940,"src":"439:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1945,"name":"_mint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":516,"src":"428:5:10","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":1948,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"428:19:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1949,"nodeType":"ExpressionStatement","src":"428:19:10"}]},"functionSelector":"40c10f19","id":1951,"implemented":true,"kind":"function","modifiers":[{"id":1943,"kind":"modifierInvocation","modifierName":{"id":1942,"name":"onlyOwner","nodeType":"IdentifierPath","referencedDeclaration":31,"src":"408:9:10"},"nodeType":"ModifierInvocation","src":"408:9:10"}],"name":"mint","nameLocation":"366:4:10","nodeType":"FunctionDefinition","parameters":{"id":1941,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1938,"mutability":"mutable","name":"_to","nameLocation":"379:3:10","nodeType":"VariableDeclaration","scope":1951,"src":"371:11:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1937,"name":"address","nodeType":"ElementaryTypeName","src":"371:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1940,"mutability":"mutable","name":"_amount","nameLocation":"392:7:10","nodeType":"VariableDeclaration","scope":1951,"src":"384:15:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1939,"name":"uint256","nodeType":"ElementaryTypeName","src":"384:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"370:30:10"},"returnParameters":{"id":1944,"nodeType":"ParameterList","parameters":[],"src":"418:0:10"},"scope":1961,"src":"357:97:10","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"baseFunctions":[187],"body":{"id":1959,"nodeType":"Block","src":"525:26:10","statements":[{"expression":{"hexValue":"3138","id":1957,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"542:2:10","typeDescriptions":{"typeIdentifier":"t_rational_18_by_1","typeString":"int_const 18"},"value":"18"},"functionReturnParameters":1956,"id":1958,"nodeType":"Return","src":"535:9:10"}]},"functionSelector":"313ce567","id":1960,"implemented":true,"kind":"function","modifiers":[],"name":"decimals","nameLocation":"469:8:10","nodeType":"FunctionDefinition","overrides":{"id":1953,"nodeType":"OverrideSpecifier","overrides":[],"src":"500:8:10"},"parameters":{"id":1952,"nodeType":"ParameterList","parameters":[],"src":"477:2:10"},"returnParameters":{"id":1956,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1955,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1960,"src":"518:5:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":1954,"name":"uint8","nodeType":"ElementaryTypeName","src":"518:5:10","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"517:7:10"},"scope":1961,"src":"460:91:10","stateMutability":"view","virtual":true,"visibility":"public"}],"scope":1962,"src":"174:379:10","usedErrors":[]}],"src":"39:515:10"}},"contracts/YieldFarm.sol":{"id":11,"ast":{"absolutePath":"contracts/YieldFarm.sol","exportedSymbols":{"Address":[1544],"Context":[1566],"ERC20":[699],"IERC20":[777],"IERC20Metadata":[802],"IERC20Permit":[838],"Ownable":[112],"SafeERC20":[1214],"SafeMath":[1878],"SobaToken":[1961],"YieldFarm":[3156]},"id":3157,"license":"UNLICENSED","nodeType":"SourceUnit","nodes":[{"id":1963,"literals":["solidity","^","0.8",".9"],"nodeType":"PragmaDirective","src":"39:23:11"},{"absolutePath":"@openzeppelin/contracts/access/Ownable.sol","file":"@openzeppelin/contracts/access/Ownable.sol","id":1964,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3157,"sourceUnit":113,"src":"64:52:11","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/math/SafeMath.sol","file":"@openzeppelin/contracts/utils/math/SafeMath.sol","id":1965,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3157,"sourceUnit":1879,"src":"117:57:11","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/token/ERC20/ERC20.sol","file":"@openzeppelin/contracts/token/ERC20/ERC20.sol","id":1966,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3157,"sourceUnit":700,"src":"175:55:11","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/token/ERC20/IERC20.sol","file":"@openzeppelin/contracts/token/ERC20/IERC20.sol","id":1967,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3157,"sourceUnit":778,"src":"231:56:11","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol","file":"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol","id":1968,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3157,"sourceUnit":1215,"src":"288:65:11","symbolAliases":[],"unitAlias":""},{"absolutePath":"contracts/SobaToken.sol","file":"./SobaToken.sol","id":1969,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3157,"sourceUnit":1962,"src":"355:25:11","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":1970,"name":"Ownable","nodeType":"IdentifierPath","referencedDeclaration":112,"src":"404:7:11"},"id":1971,"nodeType":"InheritanceSpecifier","src":"404:7:11"}],"canonicalName":"YieldFarm","contractDependencies":[],"contractKind":"contract","fullyImplemented":true,"id":3156,"linearizedBaseContracts":[3156,112,1566],"name":"YieldFarm","nameLocation":"391:9:11","nodeType":"ContractDefinition","nodes":[{"id":1974,"libraryName":{"id":1972,"name":"SafeMath","nodeType":"IdentifierPath","referencedDeclaration":1878,"src":"424:8:11"},"nodeType":"UsingForDirective","src":"418:27:11","typeName":{"id":1973,"name":"uint256","nodeType":"ElementaryTypeName","src":"437:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},{"id":1978,"libraryName":{"id":1975,"name":"SafeERC20","nodeType":"IdentifierPath","referencedDeclaration":1214,"src":"456:9:11"},"nodeType":"UsingForDirective","src":"450:27:11","typeName":{"id":1977,"nodeType":"UserDefinedTypeName","pathNode":{"id":1976,"name":"IERC20","nodeType":"IdentifierPath","referencedDeclaration":777,"src":"470:6:11"},"referencedDeclaration":777,"src":"470:6:11","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$777","typeString":"contract IERC20"}}},{"canonicalName":"YieldFarm.UserInfo","id":1983,"members":[{"constant":false,"id":1980,"mutability":"mutable","name":"amount","nameLocation":"541:6:11","nodeType":"VariableDeclaration","scope":1983,"src":"533:14:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1979,"name":"uint256","nodeType":"ElementaryTypeName","src":"533:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1982,"mutability":"mutable","name":"rewardDebt","nameLocation":"592:10:11","nodeType":"VariableDeclaration","scope":1983,"src":"584:18:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1981,"name":"uint256","nodeType":"ElementaryTypeName","src":"584:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"name":"UserInfo","nameLocation":"514:8:11","nodeType":"StructDefinition","scope":3156,"src":"507:1067:11","visibility":"public"},{"canonicalName":"YieldFarm.PoolInfo","id":1995,"members":[{"constant":false,"id":1986,"mutability":"mutable","name":"lpToken","nameLocation":"1613:7:11","nodeType":"VariableDeclaration","scope":1995,"src":"1606:14:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$777","typeString":"contract IERC20"},"typeName":{"id":1985,"nodeType":"UserDefinedTypeName","pathNode":{"id":1984,"name":"IERC20","nodeType":"IdentifierPath","referencedDeclaration":777,"src":"1606:6:11"},"referencedDeclaration":777,"src":"1606:6:11","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$777","typeString":"contract IERC20"}},"visibility":"internal"},{"constant":false,"id":1988,"mutability":"mutable","name":"allocPoint","nameLocation":"1670:10:11","nodeType":"VariableDeclaration","scope":1995,"src":"1662:18:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1987,"name":"uint256","nodeType":"ElementaryTypeName","src":"1662:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1990,"mutability":"mutable","name":"lastRewardBlock","nameLocation":"1738:15:11","nodeType":"VariableDeclaration","scope":1995,"src":"1730:23:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1989,"name":"uint256","nodeType":"ElementaryTypeName","src":"1730:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1992,"mutability":"mutable","name":"accSobaPerShare","nameLocation":"1803:15:11","nodeType":"VariableDeclaration","scope":1995,"src":"1795:23:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1991,"name":"uint256","nodeType":"ElementaryTypeName","src":"1795:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1994,"mutability":"mutable","name":"totalStaked","nameLocation":"1836:11:11","nodeType":"VariableDeclaration","scope":1995,"src":"1828:19:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1993,"name":"uint256","nodeType":"ElementaryTypeName","src":"1828:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"name":"PoolInfo","nameLocation":"1587:8:11","nodeType":"StructDefinition","scope":3156,"src":"1580:274:11","visibility":"public"},{"constant":false,"functionSelector":"d93be1c7","id":1998,"mutability":"mutable","name":"sobaja","nameLocation":"1897:6:11","nodeType":"VariableDeclaration","scope":3156,"src":"1880:23:11","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_SobaToken_$1961","typeString":"contract SobaToken"},"typeName":{"id":1997,"nodeType":"UserDefinedTypeName","pathNode":{"id":1996,"name":"SobaToken","nodeType":"IdentifierPath","referencedDeclaration":1961,"src":"1880:9:11"},"referencedDeclaration":1961,"src":"1880:9:11","typeDescriptions":{"typeIdentifier":"t_contract$_SobaToken_$1961","typeString":"contract SobaToken"}},"visibility":"public"},{"constant":false,"functionSelector":"3ad10ef6","id":2000,"mutability":"mutable","name":"devAddress","nameLocation":"1925:10:11","nodeType":"VariableDeclaration","scope":3156,"src":"1910:25:11","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1999,"name":"address","nodeType":"ElementaryTypeName","src":"1910:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"public"},{"constant":false,"functionSelector":"ac9b2915","id":2002,"mutability":"mutable","name":"sobaPerBlock","nameLocation":"2005:12:11","nodeType":"VariableDeclaration","scope":3156,"src":"1990:27:11","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2001,"name":"uint256","nodeType":"ElementaryTypeName","src":"1990:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"public"},{"constant":false,"functionSelector":"8aa28550","id":2005,"mutability":"mutable","name":"BONUS_MULTIPLIER","nameLocation":"2072:16:11","nodeType":"VariableDeclaration","scope":3156,"src":"2057:35:11","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2003,"name":"uint256","nodeType":"ElementaryTypeName","src":"2057:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"31","id":2004,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2091:1:11","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"visibility":"public"},{"constant":false,"functionSelector":"1526fe27","id":2009,"mutability":"mutable","name":"poolInfo","nameLocation":"2187:8:11","nodeType":"VariableDeclaration","scope":3156,"src":"2169:26:11","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_PoolInfo_$1995_storage_$dyn_storage","typeString":"struct YieldFarm.PoolInfo[]"},"typeName":{"baseType":{"id":2007,"nodeType":"UserDefinedTypeName","pathNode":{"id":2006,"name":"PoolInfo","nodeType":"IdentifierPath","referencedDeclaration":1995,"src":"2169:8:11"},"referencedDeclaration":1995,"src":"2169:8:11","typeDescriptions":{"typeIdentifier":"t_struct$_PoolInfo_$1995_storage_ptr","typeString":"struct YieldFarm.PoolInfo"}},"id":2008,"nodeType":"ArrayTypeName","src":"2169:10:11","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_PoolInfo_$1995_storage_$dyn_storage_ptr","typeString":"struct YieldFarm.PoolInfo[]"}},"visibility":"public"},{"constant":false,"functionSelector":"93f1a40b","id":2016,"mutability":"mutable","name":"userInfo","nameLocation":"2305:8:11","nodeType":"VariableDeclaration","scope":3156,"src":"2249:64:11","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_struct$_UserInfo_$1983_storage_$_$","typeString":"mapping(uint256 => mapping(address => struct YieldFarm.UserInfo))"},"typeName":{"id":2015,"keyType":{"id":2010,"name":"uint256","nodeType":"ElementaryTypeName","src":"2257:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Mapping","src":"2249:48:11","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_struct$_UserInfo_$1983_storage_$_$","typeString":"mapping(uint256 => mapping(address => struct YieldFarm.UserInfo))"},"valueType":{"id":2014,"keyType":{"id":2011,"name":"address","nodeType":"ElementaryTypeName","src":"2276:7:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"2268:28:11","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_UserInfo_$1983_storage_$","typeString":"mapping(address => struct YieldFarm.UserInfo)"},"valueType":{"id":2013,"nodeType":"UserDefinedTypeName","pathNode":{"id":2012,"name":"UserInfo","nodeType":"IdentifierPath","referencedDeclaration":1983,"src":"2287:8:11"},"referencedDeclaration":1983,"src":"2287:8:11","typeDescriptions":{"typeIdentifier":"t_struct$_UserInfo_$1983_storage_ptr","typeString":"struct YieldFarm.UserInfo"}}}},"visibility":"public"},{"constant":false,"functionSelector":"17caf6f1","id":2019,"mutability":"mutable","name":"totalAllocPoint","nameLocation":"2438:15:11","nodeType":"VariableDeclaration","scope":3156,"src":"2423:34:11","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2017,"name":"uint256","nodeType":"ElementaryTypeName","src":"2423:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30","id":2018,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2456:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"visibility":"public"},{"constant":false,"functionSelector":"48cd4cb1","id":2021,"mutability":"mutable","name":"startBlock","nameLocation":"2658:10:11","nodeType":"VariableDeclaration","scope":3156,"src":"2643:25:11","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2020,"name":"uint256","nodeType":"ElementaryTypeName","src":"2643:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"public"},{"anonymous":false,"id":2029,"name":"Deposit","nameLocation":"2699:7:11","nodeType":"EventDefinition","parameters":{"id":2028,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2023,"indexed":true,"mutability":"mutable","name":"user","nameLocation":"2732:4:11","nodeType":"VariableDeclaration","scope":2029,"src":"2716:20:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2022,"name":"address","nodeType":"ElementaryTypeName","src":"2716:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2025,"indexed":true,"mutability":"mutable","name":"poolId","nameLocation":"2762:6:11","nodeType":"VariableDeclaration","scope":2029,"src":"2746:22:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2024,"name":"uint256","nodeType":"ElementaryTypeName","src":"2746:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2027,"indexed":true,"mutability":"mutable","name":"amount","nameLocation":"2794:6:11","nodeType":"VariableDeclaration","scope":2029,"src":"2778:22:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2026,"name":"uint256","nodeType":"ElementaryTypeName","src":"2778:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2706:100:11"},"src":"2693:114:11"},{"anonymous":false,"id":2037,"name":"Withdraw","nameLocation":"2819:8:11","nodeType":"EventDefinition","parameters":{"id":2036,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2031,"indexed":true,"mutability":"mutable","name":"user","nameLocation":"2853:4:11","nodeType":"VariableDeclaration","scope":2037,"src":"2837:20:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2030,"name":"address","nodeType":"ElementaryTypeName","src":"2837:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2033,"indexed":true,"mutability":"mutable","name":"poolId","nameLocation":"2883:6:11","nodeType":"VariableDeclaration","scope":2037,"src":"2867:22:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2032,"name":"uint256","nodeType":"ElementaryTypeName","src":"2867:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2035,"indexed":false,"mutability":"mutable","name":"amount","nameLocation":"2907:6:11","nodeType":"VariableDeclaration","scope":2037,"src":"2899:14:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2034,"name":"uint256","nodeType":"ElementaryTypeName","src":"2899:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2827:92:11"},"src":"2813:107:11"},{"anonymous":false,"id":2045,"name":"EmergencyWithdraw","nameLocation":"2932:17:11","nodeType":"EventDefinition","parameters":{"id":2044,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2039,"indexed":true,"mutability":"mutable","name":"user","nameLocation":"2975:4:11","nodeType":"VariableDeclaration","scope":2045,"src":"2959:20:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2038,"name":"address","nodeType":"ElementaryTypeName","src":"2959:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2041,"indexed":true,"mutability":"mutable","name":"poolId","nameLocation":"3005:6:11","nodeType":"VariableDeclaration","scope":2045,"src":"2989:22:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2040,"name":"uint256","nodeType":"ElementaryTypeName","src":"2989:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2043,"indexed":false,"mutability":"mutable","name":"amount","nameLocation":"3029:6:11","nodeType":"VariableDeclaration","scope":2045,"src":"3021:14:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2042,"name":"uint256","nodeType":"ElementaryTypeName","src":"3021:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2949:92:11"},"src":"2926:116:11"},{"body":{"id":2089,"nodeType":"Block","src":"3179:475:11","statements":[{"expression":{"id":2059,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2057,"name":"sobaja","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1998,"src":"3189:6:11","typeDescriptions":{"typeIdentifier":"t_contract$_SobaToken_$1961","typeString":"contract SobaToken"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":2058,"name":"_sobaja","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2048,"src":"3198:7:11","typeDescriptions":{"typeIdentifier":"t_contract$_SobaToken_$1961","typeString":"contract SobaToken"}},"src":"3189:16:11","typeDescriptions":{"typeIdentifier":"t_contract$_SobaToken_$1961","typeString":"contract SobaToken"}},"id":2060,"nodeType":"ExpressionStatement","src":"3189:16:11"},{"expression":{"id":2063,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2061,"name":"devAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2000,"src":"3215:10:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":2062,"name":"_devaddr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2050,"src":"3228:8:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"3215:21:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2064,"nodeType":"ExpressionStatement","src":"3215:21:11"},{"expression":{"id":2067,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2065,"name":"sobaPerBlock","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2002,"src":"3246:12:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":2066,"name":"_sobaPerBlock","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2052,"src":"3261:13:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3246:28:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2068,"nodeType":"ExpressionStatement","src":"3246:28:11"},{"expression":{"id":2071,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2069,"name":"startBlock","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2021,"src":"3284:10:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":2070,"name":"_startBlock","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2054,"src":"3297:11:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3284:24:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2072,"nodeType":"ExpressionStatement","src":"3284:24:11"},{"expression":{"arguments":[{"arguments":[{"id":2077,"name":"_sobaja","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2048,"src":"3435:7:11","typeDescriptions":{"typeIdentifier":"t_contract$_SobaToken_$1961","typeString":"contract SobaToken"}},{"hexValue":"31303030","id":2078,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3472:4:11","typeDescriptions":{"typeIdentifier":"t_rational_1000_by_1","typeString":"int_const 1000"},"value":"1000"},{"id":2079,"name":"startBlock","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2021,"src":"3511:10:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"30","id":2080,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3556:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"hexValue":"30","id":2081,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3588:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_SobaToken_$1961","typeString":"contract SobaToken"},{"typeIdentifier":"t_rational_1000_by_1","typeString":"int_const 1000"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2076,"name":"PoolInfo","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1995,"src":"3399:8:11","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_PoolInfo_$1995_storage_ptr_$","typeString":"type(struct YieldFarm.PoolInfo storage pointer)"}},"id":2082,"isConstant":false,"isLValue":false,"isPure":false,"kind":"structConstructorCall","lValueRequested":false,"names":["lpToken","allocPoint","lastRewardBlock","accSobaPerShare","totalStaked"],"nodeType":"FunctionCall","src":"3399:205:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_PoolInfo_$1995_memory_ptr","typeString":"struct YieldFarm.PoolInfo memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_PoolInfo_$1995_memory_ptr","typeString":"struct YieldFarm.PoolInfo memory"}],"expression":{"id":2073,"name":"poolInfo","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2009,"src":"3372:8:11","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_PoolInfo_$1995_storage_$dyn_storage","typeString":"struct YieldFarm.PoolInfo storage ref[] storage ref"}},"id":2075,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"push","nodeType":"MemberAccess","src":"3372:13:11","typeDescriptions":{"typeIdentifier":"t_function_arraypush_nonpayable$_t_array$_t_struct$_PoolInfo_$1995_storage_$dyn_storage_ptr_$_t_struct$_PoolInfo_$1995_storage_$returns$__$bound_to$_t_array$_t_struct$_PoolInfo_$1995_storage_$dyn_storage_ptr_$","typeString":"function (struct YieldFarm.PoolInfo storage ref[] storage pointer,struct YieldFarm.PoolInfo storage ref)"}},"id":2083,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3372:242:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2084,"nodeType":"ExpressionStatement","src":"3372:242:11"},{"expression":{"id":2087,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2085,"name":"totalAllocPoint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2019,"src":"3625:15:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"31303030","id":2086,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3643:4:11","typeDescriptions":{"typeIdentifier":"t_rational_1000_by_1","typeString":"int_const 1000"},"value":"1000"},"src":"3625:22:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2088,"nodeType":"ExpressionStatement","src":"3625:22:11"}]},"id":2090,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":2055,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2048,"mutability":"mutable","name":"_sobaja","nameLocation":"3079:7:11","nodeType":"VariableDeclaration","scope":2090,"src":"3069:17:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_SobaToken_$1961","typeString":"contract SobaToken"},"typeName":{"id":2047,"nodeType":"UserDefinedTypeName","pathNode":{"id":2046,"name":"SobaToken","nodeType":"IdentifierPath","referencedDeclaration":1961,"src":"3069:9:11"},"referencedDeclaration":1961,"src":"3069:9:11","typeDescriptions":{"typeIdentifier":"t_contract$_SobaToken_$1961","typeString":"contract SobaToken"}},"visibility":"internal"},{"constant":false,"id":2050,"mutability":"mutable","name":"_devaddr","nameLocation":"3104:8:11","nodeType":"VariableDeclaration","scope":2090,"src":"3096:16:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2049,"name":"address","nodeType":"ElementaryTypeName","src":"3096:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2052,"mutability":"mutable","name":"_sobaPerBlock","nameLocation":"3130:13:11","nodeType":"VariableDeclaration","scope":2090,"src":"3122:21:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2051,"name":"uint256","nodeType":"ElementaryTypeName","src":"3122:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2054,"mutability":"mutable","name":"_startBlock","nameLocation":"3161:11:11","nodeType":"VariableDeclaration","scope":2090,"src":"3153:19:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2053,"name":"uint256","nodeType":"ElementaryTypeName","src":"3153:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3059:119:11"},"returnParameters":{"id":2056,"nodeType":"ParameterList","parameters":[],"src":"3179:0:11"},"scope":3156,"src":"3048:606:11","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":2101,"nodeType":"Block","src":"3805:52:11","statements":[{"expression":{"id":2099,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2097,"name":"BONUS_MULTIPLIER","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2005,"src":"3815:16:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":2098,"name":"multiplierNumber","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2092,"src":"3834:16:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3815:35:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2100,"nodeType":"ExpressionStatement","src":"3815:35:11"}]},"functionSelector":"5ffe6146","id":2102,"implemented":true,"kind":"function","modifiers":[{"id":2095,"kind":"modifierInvocation","modifierName":{"id":2094,"name":"onlyOwner","nodeType":"IdentifierPath","referencedDeclaration":31,"src":"3795:9:11"},"nodeType":"ModifierInvocation","src":"3795:9:11"}],"name":"updateMultiplier","nameLocation":"3745:16:11","nodeType":"FunctionDefinition","parameters":{"id":2093,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2092,"mutability":"mutable","name":"multiplierNumber","nameLocation":"3770:16:11","nodeType":"VariableDeclaration","scope":2102,"src":"3762:24:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2091,"name":"uint256","nodeType":"ElementaryTypeName","src":"3762:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3761:26:11"},"returnParameters":{"id":2096,"nodeType":"ParameterList","parameters":[],"src":"3805:0:11"},"scope":3156,"src":"3736:121:11","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":2110,"nodeType":"Block","src":"3917:39:11","statements":[{"expression":{"expression":{"id":2107,"name":"poolInfo","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2009,"src":"3934:8:11","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_PoolInfo_$1995_storage_$dyn_storage","typeString":"struct YieldFarm.PoolInfo storage ref[] storage ref"}},"id":2108,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"3934:15:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2106,"id":2109,"nodeType":"Return","src":"3927:22:11"}]},"functionSelector":"081e3eda","id":2111,"implemented":true,"kind":"function","modifiers":[],"name":"poolLength","nameLocation":"3872:10:11","nodeType":"FunctionDefinition","parameters":{"id":2103,"nodeType":"ParameterList","parameters":[],"src":"3882:2:11"},"returnParameters":{"id":2106,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2105,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2111,"src":"3908:7:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2104,"name":"uint256","nodeType":"ElementaryTypeName","src":"3908:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3907:9:11"},"scope":3156,"src":"3863:93:11","stateMutability":"view","virtual":false,"visibility":"external"},{"body":{"id":2119,"nodeType":"Block","src":"4008:36:11","statements":[{"expression":{"expression":{"id":2116,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"4025:5:11","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":2117,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"number","nodeType":"MemberAccess","src":"4025:12:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2115,"id":2118,"nodeType":"Return","src":"4018:19:11"}]},"functionSelector":"575cb0f6","id":2120,"implemented":true,"kind":"function","modifiers":[],"name":"block","nameLocation":"3971:5:11","nodeType":"FunctionDefinition","parameters":{"id":2112,"nodeType":"ParameterList","parameters":[],"src":"3976:2:11"},"returnParameters":{"id":2115,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2114,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2120,"src":"4002:4:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2113,"name":"uint","nodeType":"ElementaryTypeName","src":"4002:4:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4001:6:11"},"scope":3156,"src":"3962:82:11","stateMutability":"view","virtual":false,"visibility":"external"},{"body":{"id":2171,"nodeType":"Block","src":"4208:733:11","statements":[{"condition":{"id":2132,"name":"_withUpdate","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2127,"src":"4309:11:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2137,"nodeType":"IfStatement","src":"4305:59:11","trueBody":{"id":2136,"nodeType":"Block","src":"4322:42:11","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":2133,"name":"massUpdatePools","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2434,"src":"4336:15:11","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":2134,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4336:17:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2135,"nodeType":"ExpressionStatement","src":"4336:17:11"}]}},{"assignments":[2139],"declarations":[{"constant":false,"id":2139,"mutability":"mutable","name":"lastRewardBlock","nameLocation":"4484:15:11","nodeType":"VariableDeclaration","scope":2171,"src":"4476:23:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2138,"name":"uint256","nodeType":"ElementaryTypeName","src":"4476:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2148,"initialValue":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2143,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":2140,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"4502:5:11","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":2141,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"number","nodeType":"MemberAccess","src":"4502:12:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":2142,"name":"startBlock","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2021,"src":"4517:10:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4502:25:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"id":2146,"name":"startBlock","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2021,"src":"4569:10:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2147,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"4502:77:11","trueExpression":{"expression":{"id":2144,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"4542:5:11","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":2145,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"number","nodeType":"MemberAccess","src":"4542:12:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"4476:103:11"},{"expression":{"id":2154,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2149,"name":"totalAllocPoint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2019,"src":"4590:15:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":2152,"name":"_allocPoint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2122,"src":"4628:11:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":2150,"name":"totalAllocPoint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2019,"src":"4608:15:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2151,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"add","nodeType":"MemberAccess","referencedDeclaration":1742,"src":"4608:19:11","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":2153,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4608:32:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4590:50:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2155,"nodeType":"ExpressionStatement","src":"4590:50:11"},{"expression":{"arguments":[{"arguments":[{"id":2160,"name":"_lpToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2125,"src":"4713:8:11","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$777","typeString":"contract IERC20"}},{"id":2161,"name":"_allocPoint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2122,"src":"4751:11:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2162,"name":"lastRewardBlock","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2139,"src":"4797:15:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"30","id":2163,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4847:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"hexValue":"30","id":2164,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4879:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$777","typeString":"contract IERC20"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2159,"name":"PoolInfo","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1995,"src":"4677:8:11","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_PoolInfo_$1995_storage_ptr_$","typeString":"type(struct YieldFarm.PoolInfo storage pointer)"}},"id":2165,"isConstant":false,"isLValue":false,"isPure":false,"kind":"structConstructorCall","lValueRequested":false,"names":["lpToken","allocPoint","lastRewardBlock","accSobaPerShare","totalStaked"],"nodeType":"FunctionCall","src":"4677:218:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_PoolInfo_$1995_memory_ptr","typeString":"struct YieldFarm.PoolInfo memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_PoolInfo_$1995_memory_ptr","typeString":"struct YieldFarm.PoolInfo memory"}],"expression":{"id":2156,"name":"poolInfo","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2009,"src":"4650:8:11","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_PoolInfo_$1995_storage_$dyn_storage","typeString":"struct YieldFarm.PoolInfo storage ref[] storage ref"}},"id":2158,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"push","nodeType":"MemberAccess","src":"4650:13:11","typeDescriptions":{"typeIdentifier":"t_function_arraypush_nonpayable$_t_array$_t_struct$_PoolInfo_$1995_storage_$dyn_storage_ptr_$_t_struct$_PoolInfo_$1995_storage_$returns$__$bound_to$_t_array$_t_struct$_PoolInfo_$1995_storage_$dyn_storage_ptr_$","typeString":"function (struct YieldFarm.PoolInfo storage ref[] storage pointer,struct YieldFarm.PoolInfo storage ref)"}},"id":2166,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4650:255:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2167,"nodeType":"ExpressionStatement","src":"4650:255:11"},{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":2168,"name":"updateStakingPool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2289,"src":"4915:17:11","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":2169,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4915:19:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2170,"nodeType":"ExpressionStatement","src":"4915:19:11"}]},"functionSelector":"1eaaa045","id":2172,"implemented":true,"kind":"function","modifiers":[{"id":2130,"kind":"modifierInvocation","modifierName":{"id":2129,"name":"onlyOwner","nodeType":"IdentifierPath","referencedDeclaration":31,"src":"4198:9:11"},"nodeType":"ModifierInvocation","src":"4198:9:11"}],"name":"add","nameLocation":"4101:3:11","nodeType":"FunctionDefinition","parameters":{"id":2128,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2122,"mutability":"mutable","name":"_allocPoint","nameLocation":"4122:11:11","nodeType":"VariableDeclaration","scope":2172,"src":"4114:19:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2121,"name":"uint256","nodeType":"ElementaryTypeName","src":"4114:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2125,"mutability":"mutable","name":"_lpToken","nameLocation":"4150:8:11","nodeType":"VariableDeclaration","scope":2172,"src":"4143:15:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$777","typeString":"contract IERC20"},"typeName":{"id":2124,"nodeType":"UserDefinedTypeName","pathNode":{"id":2123,"name":"IERC20","nodeType":"IdentifierPath","referencedDeclaration":777,"src":"4143:6:11"},"referencedDeclaration":777,"src":"4143:6:11","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$777","typeString":"contract IERC20"}},"visibility":"internal"},{"constant":false,"id":2127,"mutability":"mutable","name":"_withUpdate","nameLocation":"4173:11:11","nodeType":"VariableDeclaration","scope":2172,"src":"4168:16:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2126,"name":"bool","nodeType":"ElementaryTypeName","src":"4168:4:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"4104:86:11"},"returnParameters":{"id":2131,"nodeType":"ParameterList","parameters":[],"src":"4208:0:11"},"scope":3156,"src":"4092:849:11","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":2221,"nodeType":"Block","src":"5137:392:11","statements":[{"condition":{"id":2183,"name":"_withUpdate","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2178,"src":"5151:11:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2188,"nodeType":"IfStatement","src":"5147:59:11","trueBody":{"id":2187,"nodeType":"Block","src":"5164:42:11","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":2184,"name":"massUpdatePools","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2434,"src":"5178:15:11","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":2185,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5178:17:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2186,"nodeType":"ExpressionStatement","src":"5178:17:11"}]}},{"assignments":[2190],"declarations":[{"constant":false,"id":2190,"mutability":"mutable","name":"prevAllocPoint","nameLocation":"5223:14:11","nodeType":"VariableDeclaration","scope":2221,"src":"5215:22:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2189,"name":"uint256","nodeType":"ElementaryTypeName","src":"5215:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2195,"initialValue":{"expression":{"baseExpression":{"id":2191,"name":"poolInfo","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2009,"src":"5240:8:11","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_PoolInfo_$1995_storage_$dyn_storage","typeString":"struct YieldFarm.PoolInfo storage ref[] storage ref"}},"id":2193,"indexExpression":{"id":2192,"name":"_poolId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2174,"src":"5249:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5240:17:11","typeDescriptions":{"typeIdentifier":"t_struct$_PoolInfo_$1995_storage","typeString":"struct YieldFarm.PoolInfo storage ref"}},"id":2194,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"allocPoint","nodeType":"MemberAccess","referencedDeclaration":1988,"src":"5240:28:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"5215:53:11"},{"expression":{"id":2201,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"baseExpression":{"id":2196,"name":"poolInfo","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2009,"src":"5278:8:11","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_PoolInfo_$1995_storage_$dyn_storage","typeString":"struct YieldFarm.PoolInfo storage ref[] storage ref"}},"id":2198,"indexExpression":{"id":2197,"name":"_poolId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2174,"src":"5287:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5278:17:11","typeDescriptions":{"typeIdentifier":"t_struct$_PoolInfo_$1995_storage","typeString":"struct YieldFarm.PoolInfo storage ref"}},"id":2199,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberName":"allocPoint","nodeType":"MemberAccess","referencedDeclaration":1988,"src":"5278:28:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":2200,"name":"_allocPoint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2176,"src":"5309:11:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5278:42:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2202,"nodeType":"ExpressionStatement","src":"5278:42:11"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2205,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2203,"name":"prevAllocPoint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2190,"src":"5334:14:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":2204,"name":"_allocPoint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2176,"src":"5352:11:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5334:29:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2220,"nodeType":"IfStatement","src":"5330:193:11","trueBody":{"id":2219,"nodeType":"Block","src":"5365:158:11","statements":[{"expression":{"id":2214,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2206,"name":"totalAllocPoint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2019,"src":"5379:15:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":2212,"name":"_allocPoint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2176,"src":"5454:11:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"arguments":[{"id":2209,"name":"prevAllocPoint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2190,"src":"5417:14:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":2207,"name":"totalAllocPoint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2019,"src":"5397:15:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2208,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sub","nodeType":"MemberAccess","referencedDeclaration":1757,"src":"5397:19:11","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":2210,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5397:35:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2211,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"add","nodeType":"MemberAccess","referencedDeclaration":1742,"src":"5397:39:11","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":2213,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5397:82:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5379:100:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2215,"nodeType":"ExpressionStatement","src":"5379:100:11"},{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":2216,"name":"updateStakingPool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2289,"src":"5493:17:11","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":2217,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5493:19:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2218,"nodeType":"ExpressionStatement","src":"5493:19:11"}]}}]},"functionSelector":"64482f79","id":2222,"implemented":true,"kind":"function","modifiers":[{"id":2181,"kind":"modifierInvocation","modifierName":{"id":2180,"name":"onlyOwner","nodeType":"IdentifierPath","referencedDeclaration":31,"src":"5127:9:11"},"nodeType":"ModifierInvocation","src":"5127:9:11"}],"name":"set","nameLocation":"5030:3:11","nodeType":"FunctionDefinition","parameters":{"id":2179,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2174,"mutability":"mutable","name":"_poolId","nameLocation":"5051:7:11","nodeType":"VariableDeclaration","scope":2222,"src":"5043:15:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2173,"name":"uint256","nodeType":"ElementaryTypeName","src":"5043:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2176,"mutability":"mutable","name":"_allocPoint","nameLocation":"5076:11:11","nodeType":"VariableDeclaration","scope":2222,"src":"5068:19:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2175,"name":"uint256","nodeType":"ElementaryTypeName","src":"5068:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2178,"mutability":"mutable","name":"_withUpdate","nameLocation":"5102:11:11","nodeType":"VariableDeclaration","scope":2222,"src":"5097:16:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2177,"name":"bool","nodeType":"ElementaryTypeName","src":"5097:4:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"5033:86:11"},"returnParameters":{"id":2182,"nodeType":"ParameterList","parameters":[],"src":"5137:0:11"},"scope":3156,"src":"5021:508:11","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":2288,"nodeType":"Block","src":"5674:491:11","statements":[{"assignments":[2226],"declarations":[{"constant":false,"id":2226,"mutability":"mutable","name":"length","nameLocation":"5692:6:11","nodeType":"VariableDeclaration","scope":2288,"src":"5684:14:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2225,"name":"uint256","nodeType":"ElementaryTypeName","src":"5684:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2229,"initialValue":{"expression":{"id":2227,"name":"poolInfo","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2009,"src":"5701:8:11","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_PoolInfo_$1995_storage_$dyn_storage","typeString":"struct YieldFarm.PoolInfo storage ref[] storage ref"}},"id":2228,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"5701:15:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"5684:32:11"},{"assignments":[2231],"declarations":[{"constant":false,"id":2231,"mutability":"mutable","name":"points","nameLocation":"5734:6:11","nodeType":"VariableDeclaration","scope":2288,"src":"5726:14:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2230,"name":"uint256","nodeType":"ElementaryTypeName","src":"5726:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2233,"initialValue":{"hexValue":"30","id":2232,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5743:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"5726:18:11"},{"body":{"id":2254,"nodeType":"Block","src":"5834:73:11","statements":[{"expression":{"id":2252,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2244,"name":"points","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2231,"src":"5848:6:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"expression":{"baseExpression":{"id":2247,"name":"poolInfo","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2009,"src":"5868:8:11","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_PoolInfo_$1995_storage_$dyn_storage","typeString":"struct YieldFarm.PoolInfo storage ref[] storage ref"}},"id":2249,"indexExpression":{"id":2248,"name":"poolId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2235,"src":"5877:6:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5868:16:11","typeDescriptions":{"typeIdentifier":"t_struct$_PoolInfo_$1995_storage","typeString":"struct YieldFarm.PoolInfo storage ref"}},"id":2250,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"allocPoint","nodeType":"MemberAccess","referencedDeclaration":1988,"src":"5868:27:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":2245,"name":"points","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2231,"src":"5857:6:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2246,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"add","nodeType":"MemberAccess","referencedDeclaration":1742,"src":"5857:10:11","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":2251,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5857:39:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5848:48:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2253,"nodeType":"ExpressionStatement","src":"5848:48:11"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2240,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2238,"name":"poolId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2235,"src":"5807:6:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":2239,"name":"length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2226,"src":"5816:6:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5807:15:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2255,"initializationExpression":{"assignments":[2235],"declarations":[{"constant":false,"id":2235,"mutability":"mutable","name":"poolId","nameLocation":"5795:6:11","nodeType":"VariableDeclaration","scope":2255,"src":"5787:14:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2234,"name":"uint256","nodeType":"ElementaryTypeName","src":"5787:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2237,"initialValue":{"hexValue":"31","id":2236,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5804:1:11","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"VariableDeclarationStatement","src":"5787:18:11"},"loopExpression":{"expression":{"id":2242,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":true,"src":"5824:8:11","subExpression":{"id":2241,"name":"poolId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2235,"src":"5826:6:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2243,"nodeType":"ExpressionStatement","src":"5824:8:11"},"nodeType":"ForStatement","src":"5782:125:11"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2258,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2256,"name":"points","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2231,"src":"5920:6:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":2257,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5930:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"5920:11:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2287,"nodeType":"IfStatement","src":"5916:243:11","trueBody":{"id":2286,"nodeType":"Block","src":"5933:226:11","statements":[{"expression":{"id":2264,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2259,"name":"points","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2231,"src":"5947:6:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"hexValue":"33","id":2262,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5967:1:11","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"value":"3"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"}],"expression":{"id":2260,"name":"points","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2231,"src":"5956:6:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2261,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"div","nodeType":"MemberAccess","referencedDeclaration":1787,"src":"5956:10:11","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":2263,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5956:13:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5947:22:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2265,"nodeType":"ExpressionStatement","src":"5947:22:11"},{"expression":{"id":2277,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2266,"name":"totalAllocPoint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2019,"src":"6000:15:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":2275,"name":"points","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2231,"src":"6083:6:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"arguments":[{"expression":{"baseExpression":{"id":2269,"name":"poolInfo","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2009,"src":"6038:8:11","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_PoolInfo_$1995_storage_$dyn_storage","typeString":"struct YieldFarm.PoolInfo storage ref[] storage ref"}},"id":2271,"indexExpression":{"hexValue":"30","id":2270,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6047:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6038:11:11","typeDescriptions":{"typeIdentifier":"t_struct$_PoolInfo_$1995_storage","typeString":"struct YieldFarm.PoolInfo storage ref"}},"id":2272,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"allocPoint","nodeType":"MemberAccess","referencedDeclaration":1988,"src":"6038:22:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":2267,"name":"totalAllocPoint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2019,"src":"6018:15:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2268,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sub","nodeType":"MemberAccess","referencedDeclaration":1757,"src":"6018:19:11","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":2273,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6018:43:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2274,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"add","nodeType":"MemberAccess","referencedDeclaration":1742,"src":"6018:47:11","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":2276,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6018:85:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6000:103:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2278,"nodeType":"ExpressionStatement","src":"6000:103:11"},{"expression":{"id":2284,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"baseExpression":{"id":2279,"name":"poolInfo","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2009,"src":"6117:8:11","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_PoolInfo_$1995_storage_$dyn_storage","typeString":"struct YieldFarm.PoolInfo storage ref[] storage ref"}},"id":2281,"indexExpression":{"hexValue":"30","id":2280,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6126:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6117:11:11","typeDescriptions":{"typeIdentifier":"t_struct$_PoolInfo_$1995_storage","typeString":"struct YieldFarm.PoolInfo storage ref"}},"id":2282,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberName":"allocPoint","nodeType":"MemberAccess","referencedDeclaration":1988,"src":"6117:22:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":2283,"name":"points","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2231,"src":"6142:6:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6117:31:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2285,"nodeType":"ExpressionStatement","src":"6117:31:11"}]}}]},"id":2289,"implemented":true,"kind":"function","modifiers":[],"name":"updateStakingPool","nameLocation":"5645:17:11","nodeType":"FunctionDefinition","parameters":{"id":2223,"nodeType":"ParameterList","parameters":[],"src":"5662:2:11"},"returnParameters":{"id":2224,"nodeType":"ParameterList","parameters":[],"src":"5674:0:11"},"scope":3156,"src":"5636:529:11","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":2306,"nodeType":"Block","src":"6341:60:11","statements":[{"expression":{"arguments":[{"id":2303,"name":"BONUS_MULTIPLIER","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2005,"src":"6377:16:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"arguments":[{"id":2300,"name":"_from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2291,"src":"6366:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":2298,"name":"_to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2293,"src":"6358:3:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2299,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sub","nodeType":"MemberAccess","referencedDeclaration":1757,"src":"6358:7:11","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":2301,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6358:14:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2302,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"mul","nodeType":"MemberAccess","referencedDeclaration":1772,"src":"6358:18:11","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":2304,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6358:36:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2297,"id":2305,"nodeType":"Return","src":"6351:43:11"}]},"functionSelector":"8dbb1e3a","id":2307,"implemented":true,"kind":"function","modifiers":[],"name":"getMultiplier","nameLocation":"6247:13:11","nodeType":"FunctionDefinition","parameters":{"id":2294,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2291,"mutability":"mutable","name":"_from","nameLocation":"6278:5:11","nodeType":"VariableDeclaration","scope":2307,"src":"6270:13:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2290,"name":"uint256","nodeType":"ElementaryTypeName","src":"6270:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2293,"mutability":"mutable","name":"_to","nameLocation":"6301:3:11","nodeType":"VariableDeclaration","scope":2307,"src":"6293:11:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2292,"name":"uint256","nodeType":"ElementaryTypeName","src":"6293:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6260:50:11"},"returnParameters":{"id":2297,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2296,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2307,"src":"6332:7:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2295,"name":"uint256","nodeType":"ElementaryTypeName","src":"6332:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6331:9:11"},"scope":3156,"src":"6238:163:11","stateMutability":"view","virtual":false,"visibility":"public"},{"body":{"id":2408,"nodeType":"Block","src":"6547:801:11","statements":[{"assignments":[2318],"declarations":[{"constant":false,"id":2318,"mutability":"mutable","name":"pool","nameLocation":"6574:4:11","nodeType":"VariableDeclaration","scope":2408,"src":"6557:21:11","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_PoolInfo_$1995_storage_ptr","typeString":"struct YieldFarm.PoolInfo"},"typeName":{"id":2317,"nodeType":"UserDefinedTypeName","pathNode":{"id":2316,"name":"PoolInfo","nodeType":"IdentifierPath","referencedDeclaration":1995,"src":"6557:8:11"},"referencedDeclaration":1995,"src":"6557:8:11","typeDescriptions":{"typeIdentifier":"t_struct$_PoolInfo_$1995_storage_ptr","typeString":"struct YieldFarm.PoolInfo"}},"visibility":"internal"}],"id":2322,"initialValue":{"baseExpression":{"id":2319,"name":"poolInfo","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2009,"src":"6581:8:11","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_PoolInfo_$1995_storage_$dyn_storage","typeString":"struct YieldFarm.PoolInfo storage ref[] storage ref"}},"id":2321,"indexExpression":{"id":2320,"name":"_poolId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2309,"src":"6590:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6581:17:11","typeDescriptions":{"typeIdentifier":"t_struct$_PoolInfo_$1995_storage","typeString":"struct YieldFarm.PoolInfo storage ref"}},"nodeType":"VariableDeclarationStatement","src":"6557:41:11"},{"assignments":[2325],"declarations":[{"constant":false,"id":2325,"mutability":"mutable","name":"user","nameLocation":"6625:4:11","nodeType":"VariableDeclaration","scope":2408,"src":"6608:21:11","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_UserInfo_$1983_storage_ptr","typeString":"struct YieldFarm.UserInfo"},"typeName":{"id":2324,"nodeType":"UserDefinedTypeName","pathNode":{"id":2323,"name":"UserInfo","nodeType":"IdentifierPath","referencedDeclaration":1983,"src":"6608:8:11"},"referencedDeclaration":1983,"src":"6608:8:11","typeDescriptions":{"typeIdentifier":"t_struct$_UserInfo_$1983_storage_ptr","typeString":"struct YieldFarm.UserInfo"}},"visibility":"internal"}],"id":2331,"initialValue":{"baseExpression":{"baseExpression":{"id":2326,"name":"userInfo","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2016,"src":"6632:8:11","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_struct$_UserInfo_$1983_storage_$_$","typeString":"mapping(uint256 => mapping(address => struct YieldFarm.UserInfo storage ref))"}},"id":2328,"indexExpression":{"id":2327,"name":"_poolId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2309,"src":"6641:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6632:17:11","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_UserInfo_$1983_storage_$","typeString":"mapping(address => struct YieldFarm.UserInfo storage ref)"}},"id":2330,"indexExpression":{"id":2329,"name":"_user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2311,"src":"6650:5:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6632:24:11","typeDescriptions":{"typeIdentifier":"t_struct$_UserInfo_$1983_storage","typeString":"struct YieldFarm.UserInfo storage ref"}},"nodeType":"VariableDeclarationStatement","src":"6608:48:11"},{"assignments":[2333],"declarations":[{"constant":false,"id":2333,"mutability":"mutable","name":"accSobaPerShare","nameLocation":"6675:15:11","nodeType":"VariableDeclaration","scope":2408,"src":"6667:23:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2332,"name":"uint256","nodeType":"ElementaryTypeName","src":"6667:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2336,"initialValue":{"expression":{"id":2334,"name":"pool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2318,"src":"6693:4:11","typeDescriptions":{"typeIdentifier":"t_struct$_PoolInfo_$1995_storage_ptr","typeString":"struct YieldFarm.PoolInfo storage pointer"}},"id":2335,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"accSobaPerShare","nodeType":"MemberAccess","referencedDeclaration":1992,"src":"6693:20:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"6667:46:11"},{"assignments":[2338],"declarations":[{"constant":false,"id":2338,"mutability":"mutable","name":"lpSupply","nameLocation":"6731:8:11","nodeType":"VariableDeclaration","scope":2408,"src":"6723:16:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2337,"name":"uint256","nodeType":"ElementaryTypeName","src":"6723:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2347,"initialValue":{"arguments":[{"arguments":[{"id":2344,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"6773:4:11","typeDescriptions":{"typeIdentifier":"t_contract$_YieldFarm_$3156","typeString":"contract YieldFarm"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_YieldFarm_$3156","typeString":"contract YieldFarm"}],"id":2343,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6765:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2342,"name":"address","nodeType":"ElementaryTypeName","src":"6765:7:11","typeDescriptions":{}}},"id":2345,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6765:13:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"expression":{"id":2339,"name":"pool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2318,"src":"6742:4:11","typeDescriptions":{"typeIdentifier":"t_struct$_PoolInfo_$1995_storage_ptr","typeString":"struct YieldFarm.PoolInfo storage pointer"}},"id":2340,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"lpToken","nodeType":"MemberAccess","referencedDeclaration":1986,"src":"6742:12:11","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$777","typeString":"contract IERC20"}},"id":2341,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"balanceOf","nodeType":"MemberAccess","referencedDeclaration":734,"src":"6742:22:11","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$returns$_t_uint256_$","typeString":"function (address) view external returns (uint256)"}},"id":2346,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6742:37:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"6723:56:11"},{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2356,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2352,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":2348,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"6793:5:11","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":2349,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"number","nodeType":"MemberAccess","src":"6793:12:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"id":2350,"name":"pool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2318,"src":"6808:4:11","typeDescriptions":{"typeIdentifier":"t_struct$_PoolInfo_$1995_storage_ptr","typeString":"struct YieldFarm.PoolInfo storage pointer"}},"id":2351,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"lastRewardBlock","nodeType":"MemberAccess","referencedDeclaration":1990,"src":"6808:20:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6793:35:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2355,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2353,"name":"lpSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2338,"src":"6832:8:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":2354,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6844:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"6832:13:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"6793:52:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2394,"nodeType":"IfStatement","src":"6789:473:11","trueBody":{"id":2393,"nodeType":"Block","src":"6847:415:11","statements":[{"assignments":[2358],"declarations":[{"constant":false,"id":2358,"mutability":"mutable","name":"multiplier","nameLocation":"6869:10:11","nodeType":"VariableDeclaration","scope":2393,"src":"6861:18:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2357,"name":"uint256","nodeType":"ElementaryTypeName","src":"6861:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2365,"initialValue":{"arguments":[{"expression":{"id":2360,"name":"pool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2318,"src":"6913:4:11","typeDescriptions":{"typeIdentifier":"t_struct$_PoolInfo_$1995_storage_ptr","typeString":"struct YieldFarm.PoolInfo storage pointer"}},"id":2361,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"lastRewardBlock","nodeType":"MemberAccess","referencedDeclaration":1990,"src":"6913:20:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":2362,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"6951:5:11","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":2363,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"number","nodeType":"MemberAccess","src":"6951:12:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2359,"name":"getMultiplier","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2307,"src":"6882:13:11","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256) view returns (uint256)"}},"id":2364,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6882:95:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"6861:116:11"},{"assignments":[2367],"declarations":[{"constant":false,"id":2367,"mutability":"mutable","name":"sobaReward","nameLocation":"6999:10:11","nodeType":"VariableDeclaration","scope":2393,"src":"6991:18:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2366,"name":"uint256","nodeType":"ElementaryTypeName","src":"6991:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2379,"initialValue":{"arguments":[{"id":2377,"name":"totalAllocPoint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2019,"src":"7117:15:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"arguments":[{"expression":{"id":2373,"name":"pool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2318,"src":"7079:4:11","typeDescriptions":{"typeIdentifier":"t_struct$_PoolInfo_$1995_storage_ptr","typeString":"struct YieldFarm.PoolInfo storage pointer"}},"id":2374,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"allocPoint","nodeType":"MemberAccess","referencedDeclaration":1988,"src":"7079:15:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"arguments":[{"id":2370,"name":"sobaPerBlock","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2002,"src":"7044:12:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":2368,"name":"multiplier","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2358,"src":"7012:10:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2369,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"mul","nodeType":"MemberAccess","referencedDeclaration":1772,"src":"7012:31:11","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":2371,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7012:45:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2372,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"mul","nodeType":"MemberAccess","referencedDeclaration":1772,"src":"7012:66:11","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":2375,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7012:83:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2376,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"div","nodeType":"MemberAccess","referencedDeclaration":1787,"src":"7012:104:11","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":2378,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7012:121:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"6991:142:11"},{"expression":{"id":2391,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2380,"name":"accSobaPerShare","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2333,"src":"7148:15:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"arguments":[{"id":2388,"name":"lpSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2338,"src":"7228:8:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"arguments":[{"hexValue":"31653138","id":2385,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7218:4:11","typeDescriptions":{"typeIdentifier":"t_rational_1000000000000000000_by_1","typeString":"int_const 1000000000000000000"},"value":"1e18"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_1000000000000000000_by_1","typeString":"int_const 1000000000000000000"}],"expression":{"id":2383,"name":"sobaReward","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2367,"src":"7203:10:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2384,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"mul","nodeType":"MemberAccess","referencedDeclaration":1772,"src":"7203:14:11","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":2386,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7203:20:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2387,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"div","nodeType":"MemberAccess","referencedDeclaration":1787,"src":"7203:24:11","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":2389,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7203:34:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":2381,"name":"accSobaPerShare","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2333,"src":"7166:15:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2382,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"add","nodeType":"MemberAccess","referencedDeclaration":1742,"src":"7166:19:11","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":2390,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7166:85:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7148:103:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2392,"nodeType":"ExpressionStatement","src":"7148:103:11"}]}},{"expression":{"arguments":[{"expression":{"id":2404,"name":"user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2325,"src":"7325:4:11","typeDescriptions":{"typeIdentifier":"t_struct$_UserInfo_$1983_storage_ptr","typeString":"struct YieldFarm.UserInfo storage pointer"}},"id":2405,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"rewardDebt","nodeType":"MemberAccess","referencedDeclaration":1982,"src":"7325:15:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"arguments":[{"hexValue":"31653138","id":2401,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7315:4:11","typeDescriptions":{"typeIdentifier":"t_rational_1000000000000000000_by_1","typeString":"int_const 1000000000000000000"},"value":"1e18"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_1000000000000000000_by_1","typeString":"int_const 1000000000000000000"}],"expression":{"arguments":[{"id":2398,"name":"accSobaPerShare","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2333,"src":"7294:15:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"expression":{"id":2395,"name":"user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2325,"src":"7278:4:11","typeDescriptions":{"typeIdentifier":"t_struct$_UserInfo_$1983_storage_ptr","typeString":"struct YieldFarm.UserInfo storage pointer"}},"id":2396,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"amount","nodeType":"MemberAccess","referencedDeclaration":1980,"src":"7278:11:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2397,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"mul","nodeType":"MemberAccess","referencedDeclaration":1772,"src":"7278:15:11","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":2399,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7278:32:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2400,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"div","nodeType":"MemberAccess","referencedDeclaration":1787,"src":"7278:36:11","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":2402,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7278:42:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2403,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sub","nodeType":"MemberAccess","referencedDeclaration":1757,"src":"7278:46:11","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":2406,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7278:63:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2315,"id":2407,"nodeType":"Return","src":"7271:70:11"}]},"functionSelector":"cb3bc6de","id":2409,"implemented":true,"kind":"function","modifiers":[],"name":"pendingSoba","nameLocation":"6449:11:11","nodeType":"FunctionDefinition","parameters":{"id":2312,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2309,"mutability":"mutable","name":"_poolId","nameLocation":"6478:7:11","nodeType":"VariableDeclaration","scope":2409,"src":"6470:15:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2308,"name":"uint256","nodeType":"ElementaryTypeName","src":"6470:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2311,"mutability":"mutable","name":"_user","nameLocation":"6503:5:11","nodeType":"VariableDeclaration","scope":2409,"src":"6495:13:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2310,"name":"address","nodeType":"ElementaryTypeName","src":"6495:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"6460:54:11"},"returnParameters":{"id":2315,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2314,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2409,"src":"6538:7:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2313,"name":"uint256","nodeType":"ElementaryTypeName","src":"6538:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6537:9:11"},"scope":3156,"src":"6440:908:11","stateMutability":"view","virtual":false,"visibility":"external"},{"body":{"id":2433,"nodeType":"Block","src":"7433:153:11","statements":[{"assignments":[2413],"declarations":[{"constant":false,"id":2413,"mutability":"mutable","name":"length","nameLocation":"7451:6:11","nodeType":"VariableDeclaration","scope":2433,"src":"7443:14:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2412,"name":"uint256","nodeType":"ElementaryTypeName","src":"7443:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2416,"initialValue":{"expression":{"id":2414,"name":"poolInfo","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2009,"src":"7460:8:11","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_PoolInfo_$1995_storage_$dyn_storage","typeString":"struct YieldFarm.PoolInfo storage ref[] storage ref"}},"id":2415,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"7460:15:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"7443:32:11"},{"body":{"id":2431,"nodeType":"Block","src":"7537:43:11","statements":[{"expression":{"arguments":[{"id":2428,"name":"poolId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2418,"src":"7562:6:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2427,"name":"updatePool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2545,"src":"7551:10:11","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_uint256_$returns$__$","typeString":"function (uint256)"}},"id":2429,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7551:18:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2430,"nodeType":"ExpressionStatement","src":"7551:18:11"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2423,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2421,"name":"poolId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2418,"src":"7510:6:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":2422,"name":"length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2413,"src":"7519:6:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7510:15:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2432,"initializationExpression":{"assignments":[2418],"declarations":[{"constant":false,"id":2418,"mutability":"mutable","name":"poolId","nameLocation":"7498:6:11","nodeType":"VariableDeclaration","scope":2432,"src":"7490:14:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2417,"name":"uint256","nodeType":"ElementaryTypeName","src":"7490:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2420,"initialValue":{"hexValue":"30","id":2419,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7507:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"7490:18:11"},"loopExpression":{"expression":{"id":2425,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":true,"src":"7527:8:11","subExpression":{"id":2424,"name":"poolId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2418,"src":"7529:6:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2426,"nodeType":"ExpressionStatement","src":"7527:8:11"},"nodeType":"ForStatement","src":"7485:95:11"}]},"functionSelector":"630b5ba1","id":2434,"implemented":true,"kind":"function","modifiers":[],"name":"massUpdatePools","nameLocation":"7408:15:11","nodeType":"FunctionDefinition","parameters":{"id":2410,"nodeType":"ParameterList","parameters":[],"src":"7423:2:11"},"returnParameters":{"id":2411,"nodeType":"ParameterList","parameters":[],"src":"7433:0:11"},"scope":3156,"src":"7399:187:11","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":2544,"nodeType":"Block","src":"7685:894:11","statements":[{"assignments":[2441],"declarations":[{"constant":false,"id":2441,"mutability":"mutable","name":"pool","nameLocation":"7712:4:11","nodeType":"VariableDeclaration","scope":2544,"src":"7695:21:11","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_PoolInfo_$1995_storage_ptr","typeString":"struct YieldFarm.PoolInfo"},"typeName":{"id":2440,"nodeType":"UserDefinedTypeName","pathNode":{"id":2439,"name":"PoolInfo","nodeType":"IdentifierPath","referencedDeclaration":1995,"src":"7695:8:11"},"referencedDeclaration":1995,"src":"7695:8:11","typeDescriptions":{"typeIdentifier":"t_struct$_PoolInfo_$1995_storage_ptr","typeString":"struct YieldFarm.PoolInfo"}},"visibility":"internal"}],"id":2445,"initialValue":{"baseExpression":{"id":2442,"name":"poolInfo","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2009,"src":"7719:8:11","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_PoolInfo_$1995_storage_$dyn_storage","typeString":"struct YieldFarm.PoolInfo storage ref[] storage ref"}},"id":2444,"indexExpression":{"id":2443,"name":"_poolId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2436,"src":"7728:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"7719:17:11","typeDescriptions":{"typeIdentifier":"t_struct$_PoolInfo_$1995_storage","typeString":"struct YieldFarm.PoolInfo storage ref"}},"nodeType":"VariableDeclarationStatement","src":"7695:41:11"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2450,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":2446,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"7791:5:11","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":2447,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"number","nodeType":"MemberAccess","src":"7791:12:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"id":2448,"name":"pool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2441,"src":"7807:4:11","typeDescriptions":{"typeIdentifier":"t_struct$_PoolInfo_$1995_storage_ptr","typeString":"struct YieldFarm.PoolInfo storage pointer"}},"id":2449,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"lastRewardBlock","nodeType":"MemberAccess","referencedDeclaration":1990,"src":"7807:20:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7791:36:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2453,"nodeType":"IfStatement","src":"7787:73:11","trueBody":{"id":2452,"nodeType":"Block","src":"7829:31:11","statements":[{"functionReturnParameters":2438,"id":2451,"nodeType":"Return","src":"7843:7:11"}]}},{"assignments":[2455],"declarations":[{"constant":false,"id":2455,"mutability":"mutable","name":"lpSupply","nameLocation":"7878:8:11","nodeType":"VariableDeclaration","scope":2544,"src":"7870:16:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2454,"name":"uint256","nodeType":"ElementaryTypeName","src":"7870:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2464,"initialValue":{"arguments":[{"arguments":[{"id":2461,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"7920:4:11","typeDescriptions":{"typeIdentifier":"t_contract$_YieldFarm_$3156","typeString":"contract YieldFarm"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_YieldFarm_$3156","typeString":"contract YieldFarm"}],"id":2460,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7912:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2459,"name":"address","nodeType":"ElementaryTypeName","src":"7912:7:11","typeDescriptions":{}}},"id":2462,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7912:13:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"expression":{"id":2456,"name":"pool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2441,"src":"7889:4:11","typeDescriptions":{"typeIdentifier":"t_struct$_PoolInfo_$1995_storage_ptr","typeString":"struct YieldFarm.PoolInfo storage pointer"}},"id":2457,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"lpToken","nodeType":"MemberAccess","referencedDeclaration":1986,"src":"7889:12:11","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$777","typeString":"contract IERC20"}},"id":2458,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"balanceOf","nodeType":"MemberAccess","referencedDeclaration":734,"src":"7889:22:11","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$returns$_t_uint256_$","typeString":"function (address) view external returns (uint256)"}},"id":2463,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7889:37:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"7870:56:11"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2467,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2465,"name":"lpSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2455,"src":"7940:8:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":2466,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7952:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"7940:13:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2477,"nodeType":"IfStatement","src":"7936:99:11","trueBody":{"id":2476,"nodeType":"Block","src":"7955:80:11","statements":[{"expression":{"id":2473,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":2468,"name":"pool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2441,"src":"7969:4:11","typeDescriptions":{"typeIdentifier":"t_struct$_PoolInfo_$1995_storage_ptr","typeString":"struct YieldFarm.PoolInfo storage pointer"}},"id":2470,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberName":"lastRewardBlock","nodeType":"MemberAccess","referencedDeclaration":1990,"src":"7969:20:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"id":2471,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"7992:5:11","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":2472,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"number","nodeType":"MemberAccess","src":"7992:12:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7969:35:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2474,"nodeType":"ExpressionStatement","src":"7969:35:11"},{"functionReturnParameters":2438,"id":2475,"nodeType":"Return","src":"8018:7:11"}]}},{"assignments":[2479],"declarations":[{"constant":false,"id":2479,"mutability":"mutable","name":"multiplier","nameLocation":"8080:10:11","nodeType":"VariableDeclaration","scope":2544,"src":"8072:18:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2478,"name":"uint256","nodeType":"ElementaryTypeName","src":"8072:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2486,"initialValue":{"arguments":[{"expression":{"id":2481,"name":"pool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2441,"src":"8107:4:11","typeDescriptions":{"typeIdentifier":"t_struct$_PoolInfo_$1995_storage_ptr","typeString":"struct YieldFarm.PoolInfo storage pointer"}},"id":2482,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"lastRewardBlock","nodeType":"MemberAccess","referencedDeclaration":1990,"src":"8107:20:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":2483,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"8129:5:11","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":2484,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"number","nodeType":"MemberAccess","src":"8129:12:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2480,"name":"getMultiplier","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2307,"src":"8093:13:11","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256) view returns (uint256)"}},"id":2485,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8093:49:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"8072:70:11"},{"assignments":[2488],"declarations":[{"constant":false,"id":2488,"mutability":"mutable","name":"sobaReward","nameLocation":"8161:10:11","nodeType":"VariableDeclaration","scope":2544,"src":"8153:18:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2487,"name":"uint256","nodeType":"ElementaryTypeName","src":"8153:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2500,"initialValue":{"arguments":[{"id":2498,"name":"totalAllocPoint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2019,"src":"8267:15:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"arguments":[{"expression":{"id":2494,"name":"pool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2441,"src":"8233:4:11","typeDescriptions":{"typeIdentifier":"t_struct$_PoolInfo_$1995_storage_ptr","typeString":"struct YieldFarm.PoolInfo storage pointer"}},"id":2495,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"allocPoint","nodeType":"MemberAccess","referencedDeclaration":1988,"src":"8233:15:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"arguments":[{"id":2491,"name":"sobaPerBlock","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2002,"src":"8202:12:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":2489,"name":"multiplier","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2479,"src":"8174:10:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2490,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"mul","nodeType":"MemberAccess","referencedDeclaration":1772,"src":"8174:27:11","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":2492,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8174:41:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2493,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"mul","nodeType":"MemberAccess","referencedDeclaration":1772,"src":"8174:58:11","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":2496,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8174:75:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2497,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"div","nodeType":"MemberAccess","referencedDeclaration":1787,"src":"8174:92:11","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":2499,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8174:109:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"8153:130:11"},{"expression":{"arguments":[{"id":2504,"name":"devAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2000,"src":"8306:10:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"hexValue":"3130","id":2507,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8333:2:11","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"}],"expression":{"id":2505,"name":"sobaReward","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2488,"src":"8318:10:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2506,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"div","nodeType":"MemberAccess","referencedDeclaration":1787,"src":"8318:14:11","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":2508,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8318:18:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":2501,"name":"sobaja","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1998,"src":"8294:6:11","typeDescriptions":{"typeIdentifier":"t_contract$_SobaToken_$1961","typeString":"contract SobaToken"}},"id":2503,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"mint","nodeType":"MemberAccess","referencedDeclaration":1951,"src":"8294:11:11","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256) external"}},"id":2509,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8294:43:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2510,"nodeType":"ExpressionStatement","src":"8294:43:11"},{"expression":{"arguments":[{"arguments":[{"id":2516,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"8394:4:11","typeDescriptions":{"typeIdentifier":"t_contract$_YieldFarm_$3156","typeString":"contract YieldFarm"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_YieldFarm_$3156","typeString":"contract YieldFarm"}],"id":2515,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8386:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2514,"name":"address","nodeType":"ElementaryTypeName","src":"8386:7:11","typeDescriptions":{}}},"id":2517,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8386:13:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2518,"name":"sobaReward","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2488,"src":"8401:10:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":2511,"name":"sobaja","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1998,"src":"8374:6:11","typeDescriptions":{"typeIdentifier":"t_contract$_SobaToken_$1961","typeString":"contract SobaToken"}},"id":2513,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"mint","nodeType":"MemberAccess","referencedDeclaration":1951,"src":"8374:11:11","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256) external"}},"id":2519,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8374:38:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2520,"nodeType":"ExpressionStatement","src":"8374:38:11"},{"expression":{"id":2535,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":2521,"name":"pool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2441,"src":"8422:4:11","typeDescriptions":{"typeIdentifier":"t_struct$_PoolInfo_$1995_storage_ptr","typeString":"struct YieldFarm.PoolInfo storage pointer"}},"id":2523,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberName":"accSobaPerShare","nodeType":"MemberAccess","referencedDeclaration":1992,"src":"8422:20:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"arguments":[{"id":2532,"name":"lpSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2455,"src":"8508:8:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"arguments":[{"hexValue":"31653138","id":2529,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8498:4:11","typeDescriptions":{"typeIdentifier":"t_rational_1000000000000000000_by_1","typeString":"int_const 1000000000000000000"},"value":"1e18"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_1000000000000000000_by_1","typeString":"int_const 1000000000000000000"}],"expression":{"id":2527,"name":"sobaReward","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2488,"src":"8483:10:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2528,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"mul","nodeType":"MemberAccess","referencedDeclaration":1772,"src":"8483:14:11","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":2530,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8483:20:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2531,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"div","nodeType":"MemberAccess","referencedDeclaration":1787,"src":"8483:24:11","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":2533,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8483:34:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"expression":{"id":2524,"name":"pool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2441,"src":"8445:4:11","typeDescriptions":{"typeIdentifier":"t_struct$_PoolInfo_$1995_storage_ptr","typeString":"struct YieldFarm.PoolInfo storage pointer"}},"id":2525,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"accSobaPerShare","nodeType":"MemberAccess","referencedDeclaration":1992,"src":"8445:20:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2526,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"add","nodeType":"MemberAccess","referencedDeclaration":1742,"src":"8445:24:11","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":2534,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8445:82:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8422:105:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2536,"nodeType":"ExpressionStatement","src":"8422:105:11"},{"expression":{"id":2542,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":2537,"name":"pool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2441,"src":"8537:4:11","typeDescriptions":{"typeIdentifier":"t_struct$_PoolInfo_$1995_storage_ptr","typeString":"struct YieldFarm.PoolInfo storage pointer"}},"id":2539,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberName":"lastRewardBlock","nodeType":"MemberAccess","referencedDeclaration":1990,"src":"8537:20:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"id":2540,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"8560:5:11","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":2541,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"number","nodeType":"MemberAccess","src":"8560:12:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8537:35:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2543,"nodeType":"ExpressionStatement","src":"8537:35:11"}]},"functionSelector":"51eb05a6","id":2545,"implemented":true,"kind":"function","modifiers":[],"name":"updatePool","nameLocation":"7650:10:11","nodeType":"FunctionDefinition","parameters":{"id":2437,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2436,"mutability":"mutable","name":"_poolId","nameLocation":"7669:7:11","nodeType":"VariableDeclaration","scope":2545,"src":"7661:15:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2435,"name":"uint256","nodeType":"ElementaryTypeName","src":"7661:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7660:17:11"},"returnParameters":{"id":2438,"nodeType":"ParameterList","parameters":[],"src":"7685:0:11"},"scope":3156,"src":"7641:938:11","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":2672,"nodeType":"Block","src":"8661:998:11","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2555,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2553,"name":"_poolId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2547,"src":"8679:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":2554,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8690:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"8679:12:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"506f6f6c206d757374206578697374","id":2556,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"8693:17:11","typeDescriptions":{"typeIdentifier":"t_stringliteral_e0efbc0d56b19b3aff383dc01b2fe4a828ab58801c3c2318fa3a7efee8fef0a7","typeString":"literal_string \"Pool must exist\""},"value":"Pool must exist"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_e0efbc0d56b19b3aff383dc01b2fe4a828ab58801c3c2318fa3a7efee8fef0a7","typeString":"literal_string \"Pool must exist\""}],"id":2552,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"8671:7:11","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2557,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8671:40:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2558,"nodeType":"ExpressionStatement","src":"8671:40:11"},{"assignments":[2561],"declarations":[{"constant":false,"id":2561,"mutability":"mutable","name":"pool","nameLocation":"8739:4:11","nodeType":"VariableDeclaration","scope":2672,"src":"8722:21:11","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_PoolInfo_$1995_storage_ptr","typeString":"struct YieldFarm.PoolInfo"},"typeName":{"id":2560,"nodeType":"UserDefinedTypeName","pathNode":{"id":2559,"name":"PoolInfo","nodeType":"IdentifierPath","referencedDeclaration":1995,"src":"8722:8:11"},"referencedDeclaration":1995,"src":"8722:8:11","typeDescriptions":{"typeIdentifier":"t_struct$_PoolInfo_$1995_storage_ptr","typeString":"struct YieldFarm.PoolInfo"}},"visibility":"internal"}],"id":2565,"initialValue":{"baseExpression":{"id":2562,"name":"poolInfo","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2009,"src":"8746:8:11","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_PoolInfo_$1995_storage_$dyn_storage","typeString":"struct YieldFarm.PoolInfo storage ref[] storage ref"}},"id":2564,"indexExpression":{"id":2563,"name":"_poolId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2547,"src":"8755:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"8746:17:11","typeDescriptions":{"typeIdentifier":"t_struct$_PoolInfo_$1995_storage","typeString":"struct YieldFarm.PoolInfo storage ref"}},"nodeType":"VariableDeclarationStatement","src":"8722:41:11"},{"assignments":[2568],"declarations":[{"constant":false,"id":2568,"mutability":"mutable","name":"user","nameLocation":"8790:4:11","nodeType":"VariableDeclaration","scope":2672,"src":"8773:21:11","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_UserInfo_$1983_storage_ptr","typeString":"struct YieldFarm.UserInfo"},"typeName":{"id":2567,"nodeType":"UserDefinedTypeName","pathNode":{"id":2566,"name":"UserInfo","nodeType":"IdentifierPath","referencedDeclaration":1983,"src":"8773:8:11"},"referencedDeclaration":1983,"src":"8773:8:11","typeDescriptions":{"typeIdentifier":"t_struct$_UserInfo_$1983_storage_ptr","typeString":"struct YieldFarm.UserInfo"}},"visibility":"internal"}],"id":2575,"initialValue":{"baseExpression":{"baseExpression":{"id":2569,"name":"userInfo","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2016,"src":"8797:8:11","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_struct$_UserInfo_$1983_storage_$_$","typeString":"mapping(uint256 => mapping(address => struct YieldFarm.UserInfo storage ref))"}},"id":2571,"indexExpression":{"id":2570,"name":"_poolId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2547,"src":"8806:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"8797:17:11","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_UserInfo_$1983_storage_$","typeString":"mapping(address => struct YieldFarm.UserInfo storage ref)"}},"id":2574,"indexExpression":{"expression":{"id":2572,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"8815:3:11","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2573,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"8815:10:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"8797:29:11","typeDescriptions":{"typeIdentifier":"t_struct$_UserInfo_$1983_storage","typeString":"struct YieldFarm.UserInfo storage ref"}},"nodeType":"VariableDeclarationStatement","src":"8773:53:11"},{"expression":{"arguments":[{"id":2577,"name":"_poolId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2547,"src":"8847:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2576,"name":"updatePool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2545,"src":"8836:10:11","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_uint256_$returns$__$","typeString":"function (uint256)"}},"id":2578,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8836:19:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2579,"nodeType":"ExpressionStatement","src":"8836:19:11"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2583,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":2580,"name":"user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2568,"src":"8950:4:11","typeDescriptions":{"typeIdentifier":"t_struct$_UserInfo_$1983_storage_ptr","typeString":"struct YieldFarm.UserInfo storage pointer"}},"id":2581,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"amount","nodeType":"MemberAccess","referencedDeclaration":1980,"src":"8950:11:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":2582,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8964:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"8950:15:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2612,"nodeType":"IfStatement","src":"8946:300:11","trueBody":{"id":2611,"nodeType":"Block","src":"8967:279:11","statements":[{"assignments":[2585],"declarations":[{"constant":false,"id":2585,"mutability":"mutable","name":"pending","nameLocation":"8989:7:11","nodeType":"VariableDeclaration","scope":2611,"src":"8981:15:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2584,"name":"uint256","nodeType":"ElementaryTypeName","src":"8981:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2599,"initialValue":{"arguments":[{"expression":{"id":2596,"name":"user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2568,"src":"9119:4:11","typeDescriptions":{"typeIdentifier":"t_struct$_UserInfo_$1983_storage_ptr","typeString":"struct YieldFarm.UserInfo storage pointer"}},"id":2597,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"rewardDebt","nodeType":"MemberAccess","referencedDeclaration":1982,"src":"9119:15:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"arguments":[{"hexValue":"31653138","id":2593,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9092:4:11","typeDescriptions":{"typeIdentifier":"t_rational_1000000000000000000_by_1","typeString":"int_const 1000000000000000000"},"value":"1e18"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_1000000000000000000_by_1","typeString":"int_const 1000000000000000000"}],"expression":{"arguments":[{"expression":{"id":2589,"name":"pool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2561,"src":"9049:4:11","typeDescriptions":{"typeIdentifier":"t_struct$_PoolInfo_$1995_storage_ptr","typeString":"struct YieldFarm.PoolInfo storage pointer"}},"id":2590,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"accSobaPerShare","nodeType":"MemberAccess","referencedDeclaration":1992,"src":"9049:20:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"expression":{"id":2586,"name":"user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2568,"src":"8999:4:11","typeDescriptions":{"typeIdentifier":"t_struct$_UserInfo_$1983_storage_ptr","typeString":"struct YieldFarm.UserInfo storage pointer"}},"id":2587,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"amount","nodeType":"MemberAccess","referencedDeclaration":1980,"src":"8999:28:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2588,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"mul","nodeType":"MemberAccess","referencedDeclaration":1772,"src":"8999:49:11","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":2591,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8999:71:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2592,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"div","nodeType":"MemberAccess","referencedDeclaration":1787,"src":"8999:92:11","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":2594,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8999:98:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2595,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sub","nodeType":"MemberAccess","referencedDeclaration":1757,"src":"8999:119:11","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":2598,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8999:136:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"8981:154:11"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2602,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2600,"name":"pending","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2585,"src":"9153:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":2601,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9163:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"9153:11:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2610,"nodeType":"IfStatement","src":"9149:87:11","trueBody":{"id":2609,"nodeType":"Block","src":"9166:70:11","statements":[{"expression":{"arguments":[{"expression":{"id":2604,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"9201:3:11","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2605,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"9201:10:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2606,"name":"pending","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2585,"src":"9213:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2603,"name":"safeSobaTransfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3137,"src":"9184:16:11","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":2607,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9184:37:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2608,"nodeType":"ExpressionStatement","src":"9184:37:11"}]}}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2615,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2613,"name":"_amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2549,"src":"9259:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":2614,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9269:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"9259:11:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2650,"nodeType":"IfStatement","src":"9255:271:11","trueBody":{"id":2649,"nodeType":"Block","src":"9272:254:11","statements":[{"expression":{"arguments":[{"arguments":[{"expression":{"id":2623,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"9341:3:11","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2624,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"9341:10:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2622,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9333:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2621,"name":"address","nodeType":"ElementaryTypeName","src":"9333:7:11","typeDescriptions":{}}},"id":2625,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9333:19:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"id":2628,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"9378:4:11","typeDescriptions":{"typeIdentifier":"t_contract$_YieldFarm_$3156","typeString":"contract YieldFarm"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_YieldFarm_$3156","typeString":"contract YieldFarm"}],"id":2627,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9370:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2626,"name":"address","nodeType":"ElementaryTypeName","src":"9370:7:11","typeDescriptions":{}}},"id":2629,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9370:13:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2630,"name":"_amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2549,"src":"9401:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"expression":{"id":2616,"name":"pool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2561,"src":"9286:4:11","typeDescriptions":{"typeIdentifier":"t_struct$_PoolInfo_$1995_storage_ptr","typeString":"struct YieldFarm.PoolInfo storage pointer"}},"id":2619,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"lpToken","nodeType":"MemberAccess","referencedDeclaration":1986,"src":"9286:12:11","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$777","typeString":"contract IERC20"}},"id":2620,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"safeTransferFrom","nodeType":"MemberAccess","referencedDeclaration":898,"src":"9286:29:11","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$777_$_t_address_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20_$777_$","typeString":"function (contract IERC20,address,address,uint256)"}},"id":2631,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9286:136:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2632,"nodeType":"ExpressionStatement","src":"9286:136:11"},{"expression":{"id":2641,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":2633,"name":"user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2568,"src":"9436:4:11","typeDescriptions":{"typeIdentifier":"t_struct$_UserInfo_$1983_storage_ptr","typeString":"struct YieldFarm.UserInfo storage pointer"}},"id":2635,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberName":"amount","nodeType":"MemberAccess","referencedDeclaration":1980,"src":"9436:11:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":2639,"name":"_amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2549,"src":"9466:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"expression":{"id":2636,"name":"user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2568,"src":"9450:4:11","typeDescriptions":{"typeIdentifier":"t_struct$_UserInfo_$1983_storage_ptr","typeString":"struct YieldFarm.UserInfo storage pointer"}},"id":2637,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"amount","nodeType":"MemberAccess","referencedDeclaration":1980,"src":"9450:11:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2638,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"add","nodeType":"MemberAccess","referencedDeclaration":1742,"src":"9450:15:11","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":2640,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9450:24:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9436:38:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2642,"nodeType":"ExpressionStatement","src":"9436:38:11"},{"expression":{"id":2647,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":2643,"name":"pool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2561,"src":"9488:4:11","typeDescriptions":{"typeIdentifier":"t_struct$_PoolInfo_$1995_storage_ptr","typeString":"struct YieldFarm.PoolInfo storage pointer"}},"id":2645,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberName":"totalStaked","nodeType":"MemberAccess","referencedDeclaration":1994,"src":"9488:16:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":2646,"name":"_amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2549,"src":"9508:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9488:27:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2648,"nodeType":"ExpressionStatement","src":"9488:27:11"}]}},{"expression":{"id":2663,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":2651,"name":"user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2568,"src":"9535:4:11","typeDescriptions":{"typeIdentifier":"t_struct$_UserInfo_$1983_storage_ptr","typeString":"struct YieldFarm.UserInfo storage pointer"}},"id":2653,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberName":"rewardDebt","nodeType":"MemberAccess","referencedDeclaration":1982,"src":"9535:15:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"hexValue":"31653138","id":2661,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9595:4:11","typeDescriptions":{"typeIdentifier":"t_rational_1000000000000000000_by_1","typeString":"int_const 1000000000000000000"},"value":"1e18"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_1000000000000000000_by_1","typeString":"int_const 1000000000000000000"}],"expression":{"arguments":[{"expression":{"id":2657,"name":"pool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2561,"src":"9569:4:11","typeDescriptions":{"typeIdentifier":"t_struct$_PoolInfo_$1995_storage_ptr","typeString":"struct YieldFarm.PoolInfo storage pointer"}},"id":2658,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"accSobaPerShare","nodeType":"MemberAccess","referencedDeclaration":1992,"src":"9569:20:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"expression":{"id":2654,"name":"user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2568,"src":"9553:4:11","typeDescriptions":{"typeIdentifier":"t_struct$_UserInfo_$1983_storage_ptr","typeString":"struct YieldFarm.UserInfo storage pointer"}},"id":2655,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"amount","nodeType":"MemberAccess","referencedDeclaration":1980,"src":"9553:11:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2656,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"mul","nodeType":"MemberAccess","referencedDeclaration":1772,"src":"9553:15:11","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":2659,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9553:37:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2660,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"div","nodeType":"MemberAccess","referencedDeclaration":1787,"src":"9553:41:11","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":2662,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9553:47:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9535:65:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2664,"nodeType":"ExpressionStatement","src":"9535:65:11"},{"eventCall":{"arguments":[{"expression":{"id":2666,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"9623:3:11","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2667,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"9623:10:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2668,"name":"_poolId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2547,"src":"9635:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2669,"name":"_amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2549,"src":"9644:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2665,"name":"Deposit","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2029,"src":"9615:7:11","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (address,uint256,uint256)"}},"id":2670,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9615:37:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2671,"nodeType":"EmitStatement","src":"9610:42:11"}]},"functionSelector":"e2bbb158","id":2673,"implemented":true,"kind":"function","modifiers":[],"name":"deposit","nameLocation":"8612:7:11","nodeType":"FunctionDefinition","parameters":{"id":2550,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2547,"mutability":"mutable","name":"_poolId","nameLocation":"8628:7:11","nodeType":"VariableDeclaration","scope":2673,"src":"8620:15:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2546,"name":"uint256","nodeType":"ElementaryTypeName","src":"8620:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2549,"mutability":"mutable","name":"_amount","nameLocation":"8645:7:11","nodeType":"VariableDeclaration","scope":2673,"src":"8637:15:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2548,"name":"uint256","nodeType":"ElementaryTypeName","src":"8637:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8619:34:11"},"returnParameters":{"id":2551,"nodeType":"ParameterList","parameters":[],"src":"8661:0:11"},"scope":3156,"src":"8603:1056:11","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":2798,"nodeType":"Block","src":"9724:785:11","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2683,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2681,"name":"_poolId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2675,"src":"9742:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":2682,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9753:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"9742:12:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"506f6f6c206d757374206578697374","id":2684,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"9756:17:11","typeDescriptions":{"typeIdentifier":"t_stringliteral_e0efbc0d56b19b3aff383dc01b2fe4a828ab58801c3c2318fa3a7efee8fef0a7","typeString":"literal_string \"Pool must exist\""},"value":"Pool must exist"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_e0efbc0d56b19b3aff383dc01b2fe4a828ab58801c3c2318fa3a7efee8fef0a7","typeString":"literal_string \"Pool must exist\""}],"id":2680,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"9734:7:11","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2685,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9734:40:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2686,"nodeType":"ExpressionStatement","src":"9734:40:11"},{"assignments":[2689],"declarations":[{"constant":false,"id":2689,"mutability":"mutable","name":"pool","nameLocation":"9801:4:11","nodeType":"VariableDeclaration","scope":2798,"src":"9784:21:11","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_PoolInfo_$1995_storage_ptr","typeString":"struct YieldFarm.PoolInfo"},"typeName":{"id":2688,"nodeType":"UserDefinedTypeName","pathNode":{"id":2687,"name":"PoolInfo","nodeType":"IdentifierPath","referencedDeclaration":1995,"src":"9784:8:11"},"referencedDeclaration":1995,"src":"9784:8:11","typeDescriptions":{"typeIdentifier":"t_struct$_PoolInfo_$1995_storage_ptr","typeString":"struct YieldFarm.PoolInfo"}},"visibility":"internal"}],"id":2693,"initialValue":{"baseExpression":{"id":2690,"name":"poolInfo","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2009,"src":"9808:8:11","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_PoolInfo_$1995_storage_$dyn_storage","typeString":"struct YieldFarm.PoolInfo storage ref[] storage ref"}},"id":2692,"indexExpression":{"id":2691,"name":"_poolId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2675,"src":"9817:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"9808:17:11","typeDescriptions":{"typeIdentifier":"t_struct$_PoolInfo_$1995_storage","typeString":"struct YieldFarm.PoolInfo storage ref"}},"nodeType":"VariableDeclarationStatement","src":"9784:41:11"},{"assignments":[2696],"declarations":[{"constant":false,"id":2696,"mutability":"mutable","name":"user","nameLocation":"9852:4:11","nodeType":"VariableDeclaration","scope":2798,"src":"9835:21:11","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_UserInfo_$1983_storage_ptr","typeString":"struct YieldFarm.UserInfo"},"typeName":{"id":2695,"nodeType":"UserDefinedTypeName","pathNode":{"id":2694,"name":"UserInfo","nodeType":"IdentifierPath","referencedDeclaration":1983,"src":"9835:8:11"},"referencedDeclaration":1983,"src":"9835:8:11","typeDescriptions":{"typeIdentifier":"t_struct$_UserInfo_$1983_storage_ptr","typeString":"struct YieldFarm.UserInfo"}},"visibility":"internal"}],"id":2703,"initialValue":{"baseExpression":{"baseExpression":{"id":2697,"name":"userInfo","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2016,"src":"9859:8:11","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_struct$_UserInfo_$1983_storage_$_$","typeString":"mapping(uint256 => mapping(address => struct YieldFarm.UserInfo storage ref))"}},"id":2699,"indexExpression":{"id":2698,"name":"_poolId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2675,"src":"9868:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"9859:17:11","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_UserInfo_$1983_storage_$","typeString":"mapping(address => struct YieldFarm.UserInfo storage ref)"}},"id":2702,"indexExpression":{"expression":{"id":2700,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"9877:3:11","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2701,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"9877:10:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"9859:29:11","typeDescriptions":{"typeIdentifier":"t_struct$_UserInfo_$1983_storage","typeString":"struct YieldFarm.UserInfo storage ref"}},"nodeType":"VariableDeclarationStatement","src":"9835:53:11"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2708,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":2705,"name":"user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2696,"src":"9906:4:11","typeDescriptions":{"typeIdentifier":"t_struct$_UserInfo_$1983_storage_ptr","typeString":"struct YieldFarm.UserInfo storage pointer"}},"id":2706,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"amount","nodeType":"MemberAccess","referencedDeclaration":1980,"src":"9906:11:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":2707,"name":"_amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2677,"src":"9921:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9906:22:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"457863656564","id":2709,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"9930:8:11","typeDescriptions":{"typeIdentifier":"t_stringliteral_320dea9014adfea159382a7b13b743fbbd5cd97df68133680e2a2950006966aa","typeString":"literal_string \"Exceed\""},"value":"Exceed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_320dea9014adfea159382a7b13b743fbbd5cd97df68133680e2a2950006966aa","typeString":"literal_string \"Exceed\""}],"id":2704,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"9898:7:11","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2710,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9898:41:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2711,"nodeType":"ExpressionStatement","src":"9898:41:11"},{"expression":{"arguments":[{"id":2713,"name":"_poolId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2675,"src":"9961:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2712,"name":"updatePool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2545,"src":"9950:10:11","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_uint256_$returns$__$","typeString":"function (uint256)"}},"id":2714,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9950:19:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2715,"nodeType":"ExpressionStatement","src":"9950:19:11"},{"assignments":[2717],"declarations":[{"constant":false,"id":2717,"mutability":"mutable","name":"pending","nameLocation":"9987:7:11","nodeType":"VariableDeclaration","scope":2798,"src":"9979:15:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2716,"name":"uint256","nodeType":"ElementaryTypeName","src":"9979:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2731,"initialValue":{"arguments":[{"expression":{"id":2728,"name":"user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2696,"src":"10062:4:11","typeDescriptions":{"typeIdentifier":"t_struct$_UserInfo_$1983_storage_ptr","typeString":"struct YieldFarm.UserInfo storage pointer"}},"id":2729,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"rewardDebt","nodeType":"MemberAccess","referencedDeclaration":1982,"src":"10062:15:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"arguments":[{"hexValue":"31653138","id":2725,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10039:4:11","typeDescriptions":{"typeIdentifier":"t_rational_1000000000000000000_by_1","typeString":"int_const 1000000000000000000"},"value":"1e18"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_1000000000000000000_by_1","typeString":"int_const 1000000000000000000"}],"expression":{"arguments":[{"expression":{"id":2721,"name":"pool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2689,"src":"10013:4:11","typeDescriptions":{"typeIdentifier":"t_struct$_PoolInfo_$1995_storage_ptr","typeString":"struct YieldFarm.PoolInfo storage pointer"}},"id":2722,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"accSobaPerShare","nodeType":"MemberAccess","referencedDeclaration":1992,"src":"10013:20:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"expression":{"id":2718,"name":"user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2696,"src":"9997:4:11","typeDescriptions":{"typeIdentifier":"t_struct$_UserInfo_$1983_storage_ptr","typeString":"struct YieldFarm.UserInfo storage pointer"}},"id":2719,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"amount","nodeType":"MemberAccess","referencedDeclaration":1980,"src":"9997:11:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2720,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"mul","nodeType":"MemberAccess","referencedDeclaration":1772,"src":"9997:15:11","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":2723,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9997:37:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2724,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"div","nodeType":"MemberAccess","referencedDeclaration":1787,"src":"9997:41:11","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":2726,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9997:47:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2727,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sub","nodeType":"MemberAccess","referencedDeclaration":1757,"src":"9997:51:11","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":2730,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9997:90:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"9979:108:11"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2734,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2732,"name":"pending","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2717,"src":"10101:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":2733,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10111:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"10101:11:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2742,"nodeType":"IfStatement","src":"10097:79:11","trueBody":{"id":2741,"nodeType":"Block","src":"10114:62:11","statements":[{"expression":{"arguments":[{"expression":{"id":2736,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"10145:3:11","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2737,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"10145:10:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2738,"name":"pending","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2717,"src":"10157:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2735,"name":"safeSobaTransfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3137,"src":"10128:16:11","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":2739,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"10128:37:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2740,"nodeType":"ExpressionStatement","src":"10128:37:11"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2745,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2743,"name":"_amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2677,"src":"10189:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":2744,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10199:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"10189:11:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2776,"nodeType":"IfStatement","src":"10185:190:11","trueBody":{"id":2775,"nodeType":"Block","src":"10202:173:11","statements":[{"expression":{"id":2754,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":2746,"name":"user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2696,"src":"10216:4:11","typeDescriptions":{"typeIdentifier":"t_struct$_UserInfo_$1983_storage_ptr","typeString":"struct YieldFarm.UserInfo storage pointer"}},"id":2748,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberName":"amount","nodeType":"MemberAccess","referencedDeclaration":1980,"src":"10216:11:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":2752,"name":"_amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2677,"src":"10246:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"expression":{"id":2749,"name":"user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2696,"src":"10230:4:11","typeDescriptions":{"typeIdentifier":"t_struct$_UserInfo_$1983_storage_ptr","typeString":"struct YieldFarm.UserInfo storage pointer"}},"id":2750,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"amount","nodeType":"MemberAccess","referencedDeclaration":1980,"src":"10230:11:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2751,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sub","nodeType":"MemberAccess","referencedDeclaration":1757,"src":"10230:15:11","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":2753,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"10230:24:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10216:38:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2755,"nodeType":"ExpressionStatement","src":"10216:38:11"},{"expression":{"id":2760,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":2756,"name":"pool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2689,"src":"10268:4:11","typeDescriptions":{"typeIdentifier":"t_struct$_PoolInfo_$1995_storage_ptr","typeString":"struct YieldFarm.PoolInfo storage pointer"}},"id":2758,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberName":"totalStaked","nodeType":"MemberAccess","referencedDeclaration":1994,"src":"10268:16:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"-=","rightHandSide":{"id":2759,"name":"_amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2677,"src":"10288:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10268:27:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2761,"nodeType":"ExpressionStatement","src":"10268:27:11"},{"expression":{"arguments":[{"arguments":[{"expression":{"id":2769,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"10343:3:11","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2770,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"10343:10:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2768,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10335:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2767,"name":"address","nodeType":"ElementaryTypeName","src":"10335:7:11","typeDescriptions":{}}},"id":2771,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"10335:19:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2772,"name":"_amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2677,"src":"10356:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"expression":{"id":2762,"name":"pool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2689,"src":"10309:4:11","typeDescriptions":{"typeIdentifier":"t_struct$_PoolInfo_$1995_storage_ptr","typeString":"struct YieldFarm.PoolInfo storage pointer"}},"id":2765,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"lpToken","nodeType":"MemberAccess","referencedDeclaration":1986,"src":"10309:12:11","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$777","typeString":"contract IERC20"}},"id":2766,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"safeTransfer","nodeType":"MemberAccess","referencedDeclaration":871,"src":"10309:25:11","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$777_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20_$777_$","typeString":"function (contract IERC20,address,uint256)"}},"id":2773,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"10309:55:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2774,"nodeType":"ExpressionStatement","src":"10309:55:11"}]}},{"expression":{"id":2789,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":2777,"name":"user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2696,"src":"10384:4:11","typeDescriptions":{"typeIdentifier":"t_struct$_UserInfo_$1983_storage_ptr","typeString":"struct YieldFarm.UserInfo storage pointer"}},"id":2779,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberName":"rewardDebt","nodeType":"MemberAccess","referencedDeclaration":1982,"src":"10384:15:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"hexValue":"31653138","id":2787,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10444:4:11","typeDescriptions":{"typeIdentifier":"t_rational_1000000000000000000_by_1","typeString":"int_const 1000000000000000000"},"value":"1e18"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_1000000000000000000_by_1","typeString":"int_const 1000000000000000000"}],"expression":{"arguments":[{"expression":{"id":2783,"name":"pool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2689,"src":"10418:4:11","typeDescriptions":{"typeIdentifier":"t_struct$_PoolInfo_$1995_storage_ptr","typeString":"struct YieldFarm.PoolInfo storage pointer"}},"id":2784,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"accSobaPerShare","nodeType":"MemberAccess","referencedDeclaration":1992,"src":"10418:20:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"expression":{"id":2780,"name":"user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2696,"src":"10402:4:11","typeDescriptions":{"typeIdentifier":"t_struct$_UserInfo_$1983_storage_ptr","typeString":"struct YieldFarm.UserInfo storage pointer"}},"id":2781,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"amount","nodeType":"MemberAccess","referencedDeclaration":1980,"src":"10402:11:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2782,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"mul","nodeType":"MemberAccess","referencedDeclaration":1772,"src":"10402:15:11","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":2785,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"10402:37:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2786,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"div","nodeType":"MemberAccess","referencedDeclaration":1787,"src":"10402:41:11","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":2788,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"10402:47:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10384:65:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2790,"nodeType":"ExpressionStatement","src":"10384:65:11"},{"eventCall":{"arguments":[{"expression":{"id":2792,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"10473:3:11","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2793,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"10473:10:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2794,"name":"_poolId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2675,"src":"10485:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2795,"name":"_amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2677,"src":"10494:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2791,"name":"Withdraw","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2037,"src":"10464:8:11","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (address,uint256,uint256)"}},"id":2796,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"10464:38:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2797,"nodeType":"EmitStatement","src":"10459:43:11"}]},"functionSelector":"441a3e70","id":2799,"implemented":true,"kind":"function","modifiers":[],"name":"withdraw","nameLocation":"9674:8:11","nodeType":"FunctionDefinition","parameters":{"id":2678,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2675,"mutability":"mutable","name":"_poolId","nameLocation":"9691:7:11","nodeType":"VariableDeclaration","scope":2799,"src":"9683:15:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2674,"name":"uint256","nodeType":"ElementaryTypeName","src":"9683:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2677,"mutability":"mutable","name":"_amount","nameLocation":"9708:7:11","nodeType":"VariableDeclaration","scope":2799,"src":"9700:15:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2676,"name":"uint256","nodeType":"ElementaryTypeName","src":"9700:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9682:34:11"},"returnParameters":{"id":2679,"nodeType":"ParameterList","parameters":[],"src":"9724:0:11"},"scope":3156,"src":"9665:844:11","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":2917,"nodeType":"Block","src":"10569:843:11","statements":[{"assignments":[2806],"declarations":[{"constant":false,"id":2806,"mutability":"mutable","name":"pool","nameLocation":"10596:4:11","nodeType":"VariableDeclaration","scope":2917,"src":"10579:21:11","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_PoolInfo_$1995_storage_ptr","typeString":"struct YieldFarm.PoolInfo"},"typeName":{"id":2805,"nodeType":"UserDefinedTypeName","pathNode":{"id":2804,"name":"PoolInfo","nodeType":"IdentifierPath","referencedDeclaration":1995,"src":"10579:8:11"},"referencedDeclaration":1995,"src":"10579:8:11","typeDescriptions":{"typeIdentifier":"t_struct$_PoolInfo_$1995_storage_ptr","typeString":"struct YieldFarm.PoolInfo"}},"visibility":"internal"}],"id":2810,"initialValue":{"baseExpression":{"id":2807,"name":"poolInfo","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2009,"src":"10603:8:11","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_PoolInfo_$1995_storage_$dyn_storage","typeString":"struct YieldFarm.PoolInfo storage ref[] storage ref"}},"id":2809,"indexExpression":{"hexValue":"30","id":2808,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10612:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"10603:11:11","typeDescriptions":{"typeIdentifier":"t_struct$_PoolInfo_$1995_storage","typeString":"struct YieldFarm.PoolInfo storage ref"}},"nodeType":"VariableDeclarationStatement","src":"10579:35:11"},{"assignments":[2813],"declarations":[{"constant":false,"id":2813,"mutability":"mutable","name":"user","nameLocation":"10641:4:11","nodeType":"VariableDeclaration","scope":2917,"src":"10624:21:11","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_UserInfo_$1983_storage_ptr","typeString":"struct YieldFarm.UserInfo"},"typeName":{"id":2812,"nodeType":"UserDefinedTypeName","pathNode":{"id":2811,"name":"UserInfo","nodeType":"IdentifierPath","referencedDeclaration":1983,"src":"10624:8:11"},"referencedDeclaration":1983,"src":"10624:8:11","typeDescriptions":{"typeIdentifier":"t_struct$_UserInfo_$1983_storage_ptr","typeString":"struct YieldFarm.UserInfo"}},"visibility":"internal"}],"id":2820,"initialValue":{"baseExpression":{"baseExpression":{"id":2814,"name":"userInfo","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2016,"src":"10648:8:11","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_struct$_UserInfo_$1983_storage_$_$","typeString":"mapping(uint256 => mapping(address => struct YieldFarm.UserInfo storage ref))"}},"id":2816,"indexExpression":{"hexValue":"30","id":2815,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10657:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"10648:11:11","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_UserInfo_$1983_storage_$","typeString":"mapping(address => struct YieldFarm.UserInfo storage ref)"}},"id":2819,"indexExpression":{"expression":{"id":2817,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"10660:3:11","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2818,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"10660:10:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"10648:23:11","typeDescriptions":{"typeIdentifier":"t_struct$_UserInfo_$1983_storage","typeString":"struct YieldFarm.UserInfo storage ref"}},"nodeType":"VariableDeclarationStatement","src":"10624:47:11"},{"expression":{"arguments":[{"hexValue":"30","id":2822,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10693:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2821,"name":"updatePool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2545,"src":"10682:10:11","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_uint256_$returns$__$","typeString":"function (uint256)"}},"id":2823,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"10682:13:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2824,"nodeType":"ExpressionStatement","src":"10682:13:11"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2828,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":2825,"name":"user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2813,"src":"10709:4:11","typeDescriptions":{"typeIdentifier":"t_struct$_UserInfo_$1983_storage_ptr","typeString":"struct YieldFarm.UserInfo storage pointer"}},"id":2826,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"amount","nodeType":"MemberAccess","referencedDeclaration":1980,"src":"10709:11:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":2827,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10723:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"10709:15:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2857,"nodeType":"IfStatement","src":"10705:300:11","trueBody":{"id":2856,"nodeType":"Block","src":"10726:279:11","statements":[{"assignments":[2830],"declarations":[{"constant":false,"id":2830,"mutability":"mutable","name":"pending","nameLocation":"10748:7:11","nodeType":"VariableDeclaration","scope":2856,"src":"10740:15:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2829,"name":"uint256","nodeType":"ElementaryTypeName","src":"10740:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2844,"initialValue":{"arguments":[{"expression":{"id":2841,"name":"user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2813,"src":"10878:4:11","typeDescriptions":{"typeIdentifier":"t_struct$_UserInfo_$1983_storage_ptr","typeString":"struct YieldFarm.UserInfo storage pointer"}},"id":2842,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"rewardDebt","nodeType":"MemberAccess","referencedDeclaration":1982,"src":"10878:15:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"arguments":[{"hexValue":"31653138","id":2838,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10851:4:11","typeDescriptions":{"typeIdentifier":"t_rational_1000000000000000000_by_1","typeString":"int_const 1000000000000000000"},"value":"1e18"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_1000000000000000000_by_1","typeString":"int_const 1000000000000000000"}],"expression":{"arguments":[{"expression":{"id":2834,"name":"pool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2806,"src":"10808:4:11","typeDescriptions":{"typeIdentifier":"t_struct$_PoolInfo_$1995_storage_ptr","typeString":"struct YieldFarm.PoolInfo storage pointer"}},"id":2835,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"accSobaPerShare","nodeType":"MemberAccess","referencedDeclaration":1992,"src":"10808:20:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"expression":{"id":2831,"name":"user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2813,"src":"10758:4:11","typeDescriptions":{"typeIdentifier":"t_struct$_UserInfo_$1983_storage_ptr","typeString":"struct YieldFarm.UserInfo storage pointer"}},"id":2832,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"amount","nodeType":"MemberAccess","referencedDeclaration":1980,"src":"10758:28:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2833,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"mul","nodeType":"MemberAccess","referencedDeclaration":1772,"src":"10758:49:11","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":2836,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"10758:71:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2837,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"div","nodeType":"MemberAccess","referencedDeclaration":1787,"src":"10758:92:11","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":2839,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"10758:98:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2840,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sub","nodeType":"MemberAccess","referencedDeclaration":1757,"src":"10758:119:11","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":2843,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"10758:136:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"10740:154:11"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2847,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2845,"name":"pending","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2830,"src":"10912:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":2846,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10922:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"10912:11:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2855,"nodeType":"IfStatement","src":"10908:87:11","trueBody":{"id":2854,"nodeType":"Block","src":"10925:70:11","statements":[{"expression":{"arguments":[{"expression":{"id":2849,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"10960:3:11","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2850,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"10960:10:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2851,"name":"pending","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2830,"src":"10972:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2848,"name":"safeSobaTransfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3137,"src":"10943:16:11","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":2852,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"10943:37:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2853,"nodeType":"ExpressionStatement","src":"10943:37:11"}]}}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2860,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2858,"name":"_amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2801,"src":"11018:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":2859,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11028:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"11018:11:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2895,"nodeType":"IfStatement","src":"11014:271:11","trueBody":{"id":2894,"nodeType":"Block","src":"11031:254:11","statements":[{"expression":{"arguments":[{"arguments":[{"expression":{"id":2868,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"11100:3:11","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2869,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"11100:10:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2867,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11092:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2866,"name":"address","nodeType":"ElementaryTypeName","src":"11092:7:11","typeDescriptions":{}}},"id":2870,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"11092:19:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"id":2873,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"11137:4:11","typeDescriptions":{"typeIdentifier":"t_contract$_YieldFarm_$3156","typeString":"contract YieldFarm"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_YieldFarm_$3156","typeString":"contract YieldFarm"}],"id":2872,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11129:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2871,"name":"address","nodeType":"ElementaryTypeName","src":"11129:7:11","typeDescriptions":{}}},"id":2874,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"11129:13:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2875,"name":"_amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2801,"src":"11160:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"expression":{"id":2861,"name":"pool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2806,"src":"11045:4:11","typeDescriptions":{"typeIdentifier":"t_struct$_PoolInfo_$1995_storage_ptr","typeString":"struct YieldFarm.PoolInfo storage pointer"}},"id":2864,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"lpToken","nodeType":"MemberAccess","referencedDeclaration":1986,"src":"11045:12:11","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$777","typeString":"contract IERC20"}},"id":2865,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"safeTransferFrom","nodeType":"MemberAccess","referencedDeclaration":898,"src":"11045:29:11","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$777_$_t_address_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20_$777_$","typeString":"function (contract IERC20,address,address,uint256)"}},"id":2876,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"11045:136:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2877,"nodeType":"ExpressionStatement","src":"11045:136:11"},{"expression":{"id":2882,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":2878,"name":"pool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2806,"src":"11195:4:11","typeDescriptions":{"typeIdentifier":"t_struct$_PoolInfo_$1995_storage_ptr","typeString":"struct YieldFarm.PoolInfo storage pointer"}},"id":2880,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberName":"totalStaked","nodeType":"MemberAccess","referencedDeclaration":1994,"src":"11195:16:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":2881,"name":"_amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2801,"src":"11215:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11195:27:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2883,"nodeType":"ExpressionStatement","src":"11195:27:11"},{"expression":{"id":2892,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":2884,"name":"user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2813,"src":"11236:4:11","typeDescriptions":{"typeIdentifier":"t_struct$_UserInfo_$1983_storage_ptr","typeString":"struct YieldFarm.UserInfo storage pointer"}},"id":2886,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberName":"amount","nodeType":"MemberAccess","referencedDeclaration":1980,"src":"11236:11:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":2890,"name":"_amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2801,"src":"11266:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"expression":{"id":2887,"name":"user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2813,"src":"11250:4:11","typeDescriptions":{"typeIdentifier":"t_struct$_UserInfo_$1983_storage_ptr","typeString":"struct YieldFarm.UserInfo storage pointer"}},"id":2888,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"amount","nodeType":"MemberAccess","referencedDeclaration":1980,"src":"11250:11:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2889,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"add","nodeType":"MemberAccess","referencedDeclaration":1742,"src":"11250:15:11","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":2891,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"11250:24:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11236:38:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2893,"nodeType":"ExpressionStatement","src":"11236:38:11"}]}},{"expression":{"id":2908,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":2896,"name":"user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2813,"src":"11294:4:11","typeDescriptions":{"typeIdentifier":"t_struct$_UserInfo_$1983_storage_ptr","typeString":"struct YieldFarm.UserInfo storage pointer"}},"id":2898,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberName":"rewardDebt","nodeType":"MemberAccess","referencedDeclaration":1982,"src":"11294:15:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"hexValue":"31653138","id":2906,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11354:4:11","typeDescriptions":{"typeIdentifier":"t_rational_1000000000000000000_by_1","typeString":"int_const 1000000000000000000"},"value":"1e18"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_1000000000000000000_by_1","typeString":"int_const 1000000000000000000"}],"expression":{"arguments":[{"expression":{"id":2902,"name":"pool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2806,"src":"11328:4:11","typeDescriptions":{"typeIdentifier":"t_struct$_PoolInfo_$1995_storage_ptr","typeString":"struct YieldFarm.PoolInfo storage pointer"}},"id":2903,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"accSobaPerShare","nodeType":"MemberAccess","referencedDeclaration":1992,"src":"11328:20:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"expression":{"id":2899,"name":"user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2813,"src":"11312:4:11","typeDescriptions":{"typeIdentifier":"t_struct$_UserInfo_$1983_storage_ptr","typeString":"struct YieldFarm.UserInfo storage pointer"}},"id":2900,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"amount","nodeType":"MemberAccess","referencedDeclaration":1980,"src":"11312:11:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2901,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"mul","nodeType":"MemberAccess","referencedDeclaration":1772,"src":"11312:15:11","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":2904,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"11312:37:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2905,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"div","nodeType":"MemberAccess","referencedDeclaration":1787,"src":"11312:41:11","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":2907,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"11312:47:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11294:65:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2909,"nodeType":"ExpressionStatement","src":"11294:65:11"},{"eventCall":{"arguments":[{"expression":{"id":2911,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"11382:3:11","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2912,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"11382:10:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"hexValue":"30","id":2913,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11394:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"id":2914,"name":"_amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2801,"src":"11397:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2910,"name":"Deposit","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2029,"src":"11374:7:11","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (address,uint256,uint256)"}},"id":2915,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"11374:31:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2916,"nodeType":"EmitStatement","src":"11369:36:11"}]},"functionSelector":"1dbb2a22","id":2918,"implemented":true,"kind":"function","modifiers":[],"name":"staking","nameLocation":"10537:7:11","nodeType":"FunctionDefinition","parameters":{"id":2802,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2801,"mutability":"mutable","name":"_amount","nameLocation":"10553:7:11","nodeType":"VariableDeclaration","scope":2918,"src":"10545:15:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2800,"name":"uint256","nodeType":"ElementaryTypeName","src":"10545:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10544:17:11"},"returnParameters":{"id":2803,"nodeType":"ParameterList","parameters":[],"src":"10569:0:11"},"scope":3156,"src":"10528:884:11","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":3034,"nodeType":"Block","src":"11491:711:11","statements":[{"assignments":[2925],"declarations":[{"constant":false,"id":2925,"mutability":"mutable","name":"pool","nameLocation":"11518:4:11","nodeType":"VariableDeclaration","scope":3034,"src":"11501:21:11","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_PoolInfo_$1995_storage_ptr","typeString":"struct YieldFarm.PoolInfo"},"typeName":{"id":2924,"nodeType":"UserDefinedTypeName","pathNode":{"id":2923,"name":"PoolInfo","nodeType":"IdentifierPath","referencedDeclaration":1995,"src":"11501:8:11"},"referencedDeclaration":1995,"src":"11501:8:11","typeDescriptions":{"typeIdentifier":"t_struct$_PoolInfo_$1995_storage_ptr","typeString":"struct YieldFarm.PoolInfo"}},"visibility":"internal"}],"id":2929,"initialValue":{"baseExpression":{"id":2926,"name":"poolInfo","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2009,"src":"11525:8:11","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_PoolInfo_$1995_storage_$dyn_storage","typeString":"struct YieldFarm.PoolInfo storage ref[] storage ref"}},"id":2928,"indexExpression":{"hexValue":"30","id":2927,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11534:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"11525:11:11","typeDescriptions":{"typeIdentifier":"t_struct$_PoolInfo_$1995_storage","typeString":"struct YieldFarm.PoolInfo storage ref"}},"nodeType":"VariableDeclarationStatement","src":"11501:35:11"},{"assignments":[2932],"declarations":[{"constant":false,"id":2932,"mutability":"mutable","name":"user","nameLocation":"11563:4:11","nodeType":"VariableDeclaration","scope":3034,"src":"11546:21:11","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_UserInfo_$1983_storage_ptr","typeString":"struct YieldFarm.UserInfo"},"typeName":{"id":2931,"nodeType":"UserDefinedTypeName","pathNode":{"id":2930,"name":"UserInfo","nodeType":"IdentifierPath","referencedDeclaration":1983,"src":"11546:8:11"},"referencedDeclaration":1983,"src":"11546:8:11","typeDescriptions":{"typeIdentifier":"t_struct$_UserInfo_$1983_storage_ptr","typeString":"struct YieldFarm.UserInfo"}},"visibility":"internal"}],"id":2939,"initialValue":{"baseExpression":{"baseExpression":{"id":2933,"name":"userInfo","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2016,"src":"11570:8:11","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_struct$_UserInfo_$1983_storage_$_$","typeString":"mapping(uint256 => mapping(address => struct YieldFarm.UserInfo storage ref))"}},"id":2935,"indexExpression":{"hexValue":"30","id":2934,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11579:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"11570:11:11","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_UserInfo_$1983_storage_$","typeString":"mapping(address => struct YieldFarm.UserInfo storage ref)"}},"id":2938,"indexExpression":{"expression":{"id":2936,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"11582:3:11","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2937,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"11582:10:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"11570:23:11","typeDescriptions":{"typeIdentifier":"t_struct$_UserInfo_$1983_storage","typeString":"struct YieldFarm.UserInfo storage ref"}},"nodeType":"VariableDeclarationStatement","src":"11546:47:11"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2944,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":2941,"name":"user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2932,"src":"11611:4:11","typeDescriptions":{"typeIdentifier":"t_struct$_UserInfo_$1983_storage_ptr","typeString":"struct YieldFarm.UserInfo storage pointer"}},"id":2942,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"amount","nodeType":"MemberAccess","referencedDeclaration":1980,"src":"11611:11:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":2943,"name":"_amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2920,"src":"11626:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11611:22:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"457863656564","id":2945,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"11635:8:11","typeDescriptions":{"typeIdentifier":"t_stringliteral_320dea9014adfea159382a7b13b743fbbd5cd97df68133680e2a2950006966aa","typeString":"literal_string \"Exceed\""},"value":"Exceed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_320dea9014adfea159382a7b13b743fbbd5cd97df68133680e2a2950006966aa","typeString":"literal_string \"Exceed\""}],"id":2940,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"11603:7:11","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2946,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"11603:41:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2947,"nodeType":"ExpressionStatement","src":"11603:41:11"},{"expression":{"arguments":[{"hexValue":"30","id":2949,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11665:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2948,"name":"updatePool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2545,"src":"11654:10:11","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_uint256_$returns$__$","typeString":"function (uint256)"}},"id":2950,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"11654:13:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2951,"nodeType":"ExpressionStatement","src":"11654:13:11"},{"assignments":[2953],"declarations":[{"constant":false,"id":2953,"mutability":"mutable","name":"pending","nameLocation":"11685:7:11","nodeType":"VariableDeclaration","scope":3034,"src":"11677:15:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2952,"name":"uint256","nodeType":"ElementaryTypeName","src":"11677:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2967,"initialValue":{"arguments":[{"expression":{"id":2964,"name":"user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2932,"src":"11760:4:11","typeDescriptions":{"typeIdentifier":"t_struct$_UserInfo_$1983_storage_ptr","typeString":"struct YieldFarm.UserInfo storage pointer"}},"id":2965,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"rewardDebt","nodeType":"MemberAccess","referencedDeclaration":1982,"src":"11760:15:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"arguments":[{"hexValue":"31653138","id":2961,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11737:4:11","typeDescriptions":{"typeIdentifier":"t_rational_1000000000000000000_by_1","typeString":"int_const 1000000000000000000"},"value":"1e18"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_1000000000000000000_by_1","typeString":"int_const 1000000000000000000"}],"expression":{"arguments":[{"expression":{"id":2957,"name":"pool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2925,"src":"11711:4:11","typeDescriptions":{"typeIdentifier":"t_struct$_PoolInfo_$1995_storage_ptr","typeString":"struct YieldFarm.PoolInfo storage pointer"}},"id":2958,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"accSobaPerShare","nodeType":"MemberAccess","referencedDeclaration":1992,"src":"11711:20:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"expression":{"id":2954,"name":"user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2932,"src":"11695:4:11","typeDescriptions":{"typeIdentifier":"t_struct$_UserInfo_$1983_storage_ptr","typeString":"struct YieldFarm.UserInfo storage pointer"}},"id":2955,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"amount","nodeType":"MemberAccess","referencedDeclaration":1980,"src":"11695:11:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2956,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"mul","nodeType":"MemberAccess","referencedDeclaration":1772,"src":"11695:15:11","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":2959,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"11695:37:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2960,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"div","nodeType":"MemberAccess","referencedDeclaration":1787,"src":"11695:41:11","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":2962,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"11695:47:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2963,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sub","nodeType":"MemberAccess","referencedDeclaration":1757,"src":"11695:51:11","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":2966,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"11695:90:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"11677:108:11"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2970,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2968,"name":"pending","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2953,"src":"11799:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":2969,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11809:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"11799:11:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2978,"nodeType":"IfStatement","src":"11795:79:11","trueBody":{"id":2977,"nodeType":"Block","src":"11812:62:11","statements":[{"expression":{"arguments":[{"expression":{"id":2972,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"11843:3:11","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2973,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"11843:10:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2974,"name":"pending","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2953,"src":"11855:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2971,"name":"safeSobaTransfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3137,"src":"11826:16:11","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":2975,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"11826:37:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2976,"nodeType":"ExpressionStatement","src":"11826:37:11"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2981,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2979,"name":"_amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2920,"src":"11888:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":2980,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11898:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"11888:11:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3012,"nodeType":"IfStatement","src":"11884:190:11","trueBody":{"id":3011,"nodeType":"Block","src":"11901:173:11","statements":[{"expression":{"id":2986,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":2982,"name":"pool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2925,"src":"11915:4:11","typeDescriptions":{"typeIdentifier":"t_struct$_PoolInfo_$1995_storage_ptr","typeString":"struct YieldFarm.PoolInfo storage pointer"}},"id":2984,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberName":"totalStaked","nodeType":"MemberAccess","referencedDeclaration":1994,"src":"11915:16:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"-=","rightHandSide":{"id":2985,"name":"_amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2920,"src":"11935:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11915:27:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2987,"nodeType":"ExpressionStatement","src":"11915:27:11"},{"expression":{"id":2996,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":2988,"name":"user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2932,"src":"11956:4:11","typeDescriptions":{"typeIdentifier":"t_struct$_UserInfo_$1983_storage_ptr","typeString":"struct YieldFarm.UserInfo storage pointer"}},"id":2990,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberName":"amount","nodeType":"MemberAccess","referencedDeclaration":1980,"src":"11956:11:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":2994,"name":"_amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2920,"src":"11986:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"expression":{"id":2991,"name":"user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2932,"src":"11970:4:11","typeDescriptions":{"typeIdentifier":"t_struct$_UserInfo_$1983_storage_ptr","typeString":"struct YieldFarm.UserInfo storage pointer"}},"id":2992,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"amount","nodeType":"MemberAccess","referencedDeclaration":1980,"src":"11970:11:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2993,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sub","nodeType":"MemberAccess","referencedDeclaration":1757,"src":"11970:15:11","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":2995,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"11970:24:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11956:38:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2997,"nodeType":"ExpressionStatement","src":"11956:38:11"},{"expression":{"arguments":[{"arguments":[{"expression":{"id":3005,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"12042:3:11","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":3006,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"12042:10:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":3004,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12034:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3003,"name":"address","nodeType":"ElementaryTypeName","src":"12034:7:11","typeDescriptions":{}}},"id":3007,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"12034:19:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3008,"name":"_amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2920,"src":"12055:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"expression":{"id":2998,"name":"pool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2925,"src":"12008:4:11","typeDescriptions":{"typeIdentifier":"t_struct$_PoolInfo_$1995_storage_ptr","typeString":"struct YieldFarm.PoolInfo storage pointer"}},"id":3001,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"lpToken","nodeType":"MemberAccess","referencedDeclaration":1986,"src":"12008:12:11","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$777","typeString":"contract IERC20"}},"id":3002,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"safeTransfer","nodeType":"MemberAccess","referencedDeclaration":871,"src":"12008:25:11","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$777_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20_$777_$","typeString":"function (contract IERC20,address,uint256)"}},"id":3009,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"12008:55:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3010,"nodeType":"ExpressionStatement","src":"12008:55:11"}]}},{"expression":{"id":3025,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":3013,"name":"user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2932,"src":"12083:4:11","typeDescriptions":{"typeIdentifier":"t_struct$_UserInfo_$1983_storage_ptr","typeString":"struct YieldFarm.UserInfo storage pointer"}},"id":3015,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberName":"rewardDebt","nodeType":"MemberAccess","referencedDeclaration":1982,"src":"12083:15:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"hexValue":"31653138","id":3023,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12143:4:11","typeDescriptions":{"typeIdentifier":"t_rational_1000000000000000000_by_1","typeString":"int_const 1000000000000000000"},"value":"1e18"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_1000000000000000000_by_1","typeString":"int_const 1000000000000000000"}],"expression":{"arguments":[{"expression":{"id":3019,"name":"pool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2925,"src":"12117:4:11","typeDescriptions":{"typeIdentifier":"t_struct$_PoolInfo_$1995_storage_ptr","typeString":"struct YieldFarm.PoolInfo storage pointer"}},"id":3020,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"accSobaPerShare","nodeType":"MemberAccess","referencedDeclaration":1992,"src":"12117:20:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"expression":{"id":3016,"name":"user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2932,"src":"12101:4:11","typeDescriptions":{"typeIdentifier":"t_struct$_UserInfo_$1983_storage_ptr","typeString":"struct YieldFarm.UserInfo storage pointer"}},"id":3017,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"amount","nodeType":"MemberAccess","referencedDeclaration":1980,"src":"12101:11:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3018,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"mul","nodeType":"MemberAccess","referencedDeclaration":1772,"src":"12101:15:11","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":3021,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"12101:37:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3022,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"div","nodeType":"MemberAccess","referencedDeclaration":1787,"src":"12101:41:11","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":3024,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"12101:47:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12083:65:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3026,"nodeType":"ExpressionStatement","src":"12083:65:11"},{"eventCall":{"arguments":[{"expression":{"id":3028,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"12172:3:11","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":3029,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"12172:10:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"hexValue":"30","id":3030,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12184:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"id":3031,"name":"_amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2920,"src":"12187:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3027,"name":"Withdraw","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2037,"src":"12163:8:11","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (address,uint256,uint256)"}},"id":3032,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"12163:32:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3033,"nodeType":"EmitStatement","src":"12158:37:11"}]},"functionSelector":"1058d281","id":3035,"implemented":true,"kind":"function","modifiers":[],"name":"leaveStaking","nameLocation":"11454:12:11","nodeType":"FunctionDefinition","parameters":{"id":2921,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2920,"mutability":"mutable","name":"_amount","nameLocation":"11475:7:11","nodeType":"VariableDeclaration","scope":3035,"src":"11467:15:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2919,"name":"uint256","nodeType":"ElementaryTypeName","src":"11467:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11466:17:11"},"returnParameters":{"id":2922,"nodeType":"ParameterList","parameters":[],"src":"11491:0:11"},"scope":3156,"src":"11445:757:11","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":3098,"nodeType":"Block","src":"12319:351:11","statements":[{"assignments":[3042],"declarations":[{"constant":false,"id":3042,"mutability":"mutable","name":"pool","nameLocation":"12346:4:11","nodeType":"VariableDeclaration","scope":3098,"src":"12329:21:11","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_PoolInfo_$1995_storage_ptr","typeString":"struct YieldFarm.PoolInfo"},"typeName":{"id":3041,"nodeType":"UserDefinedTypeName","pathNode":{"id":3040,"name":"PoolInfo","nodeType":"IdentifierPath","referencedDeclaration":1995,"src":"12329:8:11"},"referencedDeclaration":1995,"src":"12329:8:11","typeDescriptions":{"typeIdentifier":"t_struct$_PoolInfo_$1995_storage_ptr","typeString":"struct YieldFarm.PoolInfo"}},"visibility":"internal"}],"id":3046,"initialValue":{"baseExpression":{"id":3043,"name":"poolInfo","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2009,"src":"12353:8:11","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_PoolInfo_$1995_storage_$dyn_storage","typeString":"struct YieldFarm.PoolInfo storage ref[] storage ref"}},"id":3045,"indexExpression":{"id":3044,"name":"_poolId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3037,"src":"12362:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"12353:17:11","typeDescriptions":{"typeIdentifier":"t_struct$_PoolInfo_$1995_storage","typeString":"struct YieldFarm.PoolInfo storage ref"}},"nodeType":"VariableDeclarationStatement","src":"12329:41:11"},{"assignments":[3049],"declarations":[{"constant":false,"id":3049,"mutability":"mutable","name":"user","nameLocation":"12397:4:11","nodeType":"VariableDeclaration","scope":3098,"src":"12380:21:11","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_UserInfo_$1983_storage_ptr","typeString":"struct YieldFarm.UserInfo"},"typeName":{"id":3048,"nodeType":"UserDefinedTypeName","pathNode":{"id":3047,"name":"UserInfo","nodeType":"IdentifierPath","referencedDeclaration":1983,"src":"12380:8:11"},"referencedDeclaration":1983,"src":"12380:8:11","typeDescriptions":{"typeIdentifier":"t_struct$_UserInfo_$1983_storage_ptr","typeString":"struct YieldFarm.UserInfo"}},"visibility":"internal"}],"id":3056,"initialValue":{"baseExpression":{"baseExpression":{"id":3050,"name":"userInfo","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2016,"src":"12404:8:11","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_struct$_UserInfo_$1983_storage_$_$","typeString":"mapping(uint256 => mapping(address => struct YieldFarm.UserInfo storage ref))"}},"id":3052,"indexExpression":{"id":3051,"name":"_poolId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3037,"src":"12413:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"12404:17:11","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_UserInfo_$1983_storage_$","typeString":"mapping(address => struct YieldFarm.UserInfo storage ref)"}},"id":3055,"indexExpression":{"expression":{"id":3053,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"12422:3:11","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":3054,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"12422:10:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"12404:29:11","typeDescriptions":{"typeIdentifier":"t_struct$_UserInfo_$1983_storage","typeString":"struct YieldFarm.UserInfo storage ref"}},"nodeType":"VariableDeclarationStatement","src":"12380:53:11"},{"expression":{"arguments":[{"arguments":[{"expression":{"id":3064,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"12477:3:11","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":3065,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"12477:10:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":3063,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12469:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3062,"name":"address","nodeType":"ElementaryTypeName","src":"12469:7:11","typeDescriptions":{}}},"id":3066,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"12469:19:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":3067,"name":"user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3049,"src":"12490:4:11","typeDescriptions":{"typeIdentifier":"t_struct$_UserInfo_$1983_storage_ptr","typeString":"struct YieldFarm.UserInfo storage pointer"}},"id":3068,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"amount","nodeType":"MemberAccess","referencedDeclaration":1980,"src":"12490:11:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"expression":{"id":3057,"name":"pool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3042,"src":"12443:4:11","typeDescriptions":{"typeIdentifier":"t_struct$_PoolInfo_$1995_storage_ptr","typeString":"struct YieldFarm.PoolInfo storage pointer"}},"id":3060,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"lpToken","nodeType":"MemberAccess","referencedDeclaration":1986,"src":"12443:12:11","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$777","typeString":"contract IERC20"}},"id":3061,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"safeTransfer","nodeType":"MemberAccess","referencedDeclaration":871,"src":"12443:25:11","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$777_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20_$777_$","typeString":"function (contract IERC20,address,uint256)"}},"id":3069,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"12443:59:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3070,"nodeType":"ExpressionStatement","src":"12443:59:11"},{"expression":{"id":3076,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":3071,"name":"pool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3042,"src":"12512:4:11","typeDescriptions":{"typeIdentifier":"t_struct$_PoolInfo_$1995_storage_ptr","typeString":"struct YieldFarm.PoolInfo storage pointer"}},"id":3073,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberName":"totalStaked","nodeType":"MemberAccess","referencedDeclaration":1994,"src":"12512:16:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"-=","rightHandSide":{"expression":{"id":3074,"name":"user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3049,"src":"12532:4:11","typeDescriptions":{"typeIdentifier":"t_struct$_UserInfo_$1983_storage_ptr","typeString":"struct YieldFarm.UserInfo storage pointer"}},"id":3075,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"amount","nodeType":"MemberAccess","referencedDeclaration":1980,"src":"12532:11:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12512:31:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3077,"nodeType":"ExpressionStatement","src":"12512:31:11"},{"eventCall":{"arguments":[{"expression":{"id":3079,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"12576:3:11","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":3080,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"12576:10:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3081,"name":"_poolId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3037,"src":"12588:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":3082,"name":"user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3049,"src":"12597:4:11","typeDescriptions":{"typeIdentifier":"t_struct$_UserInfo_$1983_storage_ptr","typeString":"struct YieldFarm.UserInfo storage pointer"}},"id":3083,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"amount","nodeType":"MemberAccess","referencedDeclaration":1980,"src":"12597:11:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3078,"name":"EmergencyWithdraw","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2045,"src":"12558:17:11","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (address,uint256,uint256)"}},"id":3084,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"12558:51:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3085,"nodeType":"EmitStatement","src":"12553:56:11"},{"expression":{"id":3090,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":3086,"name":"user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3049,"src":"12619:4:11","typeDescriptions":{"typeIdentifier":"t_struct$_UserInfo_$1983_storage_ptr","typeString":"struct YieldFarm.UserInfo storage pointer"}},"id":3088,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberName":"amount","nodeType":"MemberAccess","referencedDeclaration":1980,"src":"12619:11:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"30","id":3089,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12633:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"12619:15:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3091,"nodeType":"ExpressionStatement","src":"12619:15:11"},{"expression":{"id":3096,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":3092,"name":"user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3049,"src":"12644:4:11","typeDescriptions":{"typeIdentifier":"t_struct$_UserInfo_$1983_storage_ptr","typeString":"struct YieldFarm.UserInfo storage pointer"}},"id":3094,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberName":"rewardDebt","nodeType":"MemberAccess","referencedDeclaration":1982,"src":"12644:15:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"30","id":3095,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12662:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"12644:19:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3097,"nodeType":"ExpressionStatement","src":"12644:19:11"}]},"functionSelector":"5312ea8e","id":3099,"implemented":true,"kind":"function","modifiers":[],"name":"emergencyWithdraw","nameLocation":"12277:17:11","nodeType":"FunctionDefinition","parameters":{"id":3038,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3037,"mutability":"mutable","name":"_poolId","nameLocation":"12303:7:11","nodeType":"VariableDeclaration","scope":3099,"src":"12295:15:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3036,"name":"uint256","nodeType":"ElementaryTypeName","src":"12295:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12294:17:11"},"returnParameters":{"id":3039,"nodeType":"ParameterList","parameters":[],"src":"12319:0:11"},"scope":3156,"src":"12268:402:11","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":3136,"nodeType":"Block","src":"12776:224:11","statements":[{"assignments":[3107],"declarations":[{"constant":false,"id":3107,"mutability":"mutable","name":"sobaBalance","nameLocation":"12794:11:11","nodeType":"VariableDeclaration","scope":3136,"src":"12786:19:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3106,"name":"uint256","nodeType":"ElementaryTypeName","src":"12786:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3115,"initialValue":{"arguments":[{"arguments":[{"id":3112,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"12833:4:11","typeDescriptions":{"typeIdentifier":"t_contract$_YieldFarm_$3156","typeString":"contract YieldFarm"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_YieldFarm_$3156","typeString":"contract YieldFarm"}],"id":3111,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12825:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3110,"name":"address","nodeType":"ElementaryTypeName","src":"12825:7:11","typeDescriptions":{}}},"id":3113,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"12825:13:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":3108,"name":"sobaja","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1998,"src":"12808:6:11","typeDescriptions":{"typeIdentifier":"t_contract$_SobaToken_$1961","typeString":"contract SobaToken"}},"id":3109,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"balanceOf","nodeType":"MemberAccess","referencedDeclaration":211,"src":"12808:16:11","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$returns$_t_uint256_$","typeString":"function (address) view external returns (uint256)"}},"id":3114,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"12808:31:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"12786:53:11"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3118,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3116,"name":"_amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3103,"src":"12853:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":3117,"name":"sobaBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3107,"src":"12863:11:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12853:21:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":3134,"nodeType":"Block","src":"12940:54:11","statements":[{"expression":{"arguments":[{"id":3130,"name":"_to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3101,"src":"12970:3:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3131,"name":"_amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3103,"src":"12975:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":3127,"name":"sobaja","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1998,"src":"12954:6:11","typeDescriptions":{"typeIdentifier":"t_contract$_SobaToken_$1961","typeString":"contract SobaToken"}},"id":3129,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"transfer","nodeType":"MemberAccess","referencedDeclaration":236,"src":"12954:15:11","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) external returns (bool)"}},"id":3132,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"12954:29:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3133,"nodeType":"ExpressionStatement","src":"12954:29:11"}]},"id":3135,"nodeType":"IfStatement","src":"12849:145:11","trueBody":{"id":3126,"nodeType":"Block","src":"12876:58:11","statements":[{"expression":{"arguments":[{"id":3122,"name":"_to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3101,"src":"12906:3:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3123,"name":"sobaBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3107,"src":"12911:11:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":3119,"name":"sobaja","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1998,"src":"12890:6:11","typeDescriptions":{"typeIdentifier":"t_contract$_SobaToken_$1961","typeString":"contract SobaToken"}},"id":3121,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"transfer","nodeType":"MemberAccess","referencedDeclaration":236,"src":"12890:15:11","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) external returns (bool)"}},"id":3124,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"12890:33:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3125,"nodeType":"ExpressionStatement","src":"12890:33:11"}]}}]},"id":3137,"implemented":true,"kind":"function","modifiers":[],"name":"safeSobaTransfer","nameLocation":"12720:16:11","nodeType":"FunctionDefinition","parameters":{"id":3104,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3101,"mutability":"mutable","name":"_to","nameLocation":"12745:3:11","nodeType":"VariableDeclaration","scope":3137,"src":"12737:11:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3100,"name":"address","nodeType":"ElementaryTypeName","src":"12737:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3103,"mutability":"mutable","name":"_amount","nameLocation":"12758:7:11","nodeType":"VariableDeclaration","scope":3137,"src":"12750:15:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3102,"name":"uint256","nodeType":"ElementaryTypeName","src":"12750:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12736:30:11"},"returnParameters":{"id":3105,"nodeType":"ParameterList","parameters":[],"src":"12776:0:11"},"scope":3156,"src":"12711:289:11","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":3154,"nodeType":"Block","src":"13070:104:11","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":3146,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":3143,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"13088:3:11","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":3144,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"13088:10:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":3145,"name":"devAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2000,"src":"13102:10:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"13088:24:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"41646472657373206e6f742073617469736679","id":3147,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"13114:21:11","typeDescriptions":{"typeIdentifier":"t_stringliteral_cb0325f5b958e34a013bcb3af51d63ec6f0e2f54077dd6b00dd93dab2642f2c0","typeString":"literal_string \"Address not satisfy\""},"value":"Address not satisfy"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_cb0325f5b958e34a013bcb3af51d63ec6f0e2f54077dd6b00dd93dab2642f2c0","typeString":"literal_string \"Address not satisfy\""}],"id":3142,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"13080:7:11","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":3148,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"13080:56:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3149,"nodeType":"ExpressionStatement","src":"13080:56:11"},{"expression":{"id":3152,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3150,"name":"devAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2000,"src":"13146:10:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":3151,"name":"_devaddr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3139,"src":"13159:8:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"13146:21:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":3153,"nodeType":"ExpressionStatement","src":"13146:21:11"}]},"functionSelector":"8d88a90e","id":3155,"implemented":true,"kind":"function","modifiers":[],"name":"dev","nameLocation":"13041:3:11","nodeType":"FunctionDefinition","parameters":{"id":3140,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3139,"mutability":"mutable","name":"_devaddr","nameLocation":"13053:8:11","nodeType":"VariableDeclaration","scope":3155,"src":"13045:16:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3138,"name":"address","nodeType":"ElementaryTypeName","src":"13045:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"13044:18:11"},"returnParameters":{"id":3141,"nodeType":"ParameterList","parameters":[],"src":"13070:0:11"},"scope":3156,"src":"13032:142:11","stateMutability":"nonpayable","virtual":false,"visibility":"public"}],"scope":3157,"src":"382:12794:11","usedErrors":[]}],"src":"39:13138:11"}},"contracts/interfaces/ERC20Token.sol":{"id":12,"ast":{"absolutePath":"contracts/interfaces/ERC20Token.sol","exportedSymbols":{},"id":3158,"nodeType":"SourceUnit","nodes":[],"src":"0:0:12"}}},"contracts":{"@openzeppelin/contracts/access/Ownable.sol":{"Ownable":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"renounceOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"newOwner","type":"address"}],"name":"transferOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"}],"metadata":"{\"compiler\":{\"version\":\"0.8.9+commit.e5eed63a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. By default, the owner account will be the one that deploys the contract. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/Ownable.sol\":\"Ownable\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"details\":{\"constantOptimizer\":false,\"cse\":true,\"deduplicate\":true,\"inliner\":true,\"jumpdestRemover\":true,\"orderLiterals\":true,\"peephole\":true,\"yul\":true,\"yulDetails\":{\"optimizerSteps\":\"dhfoDgvulfnTUtnIf[xarrscLMcCTUtTOntnfDIulLculVcul jjTpeulxarulrulxarrcLgvifCTUcarrLsTFOtfDncarrIulc]jmuljuljul VcTOcul jmul\",\"stackAllocation\":true}},\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xba43b97fba0d32eb4254f6a5a297b39a19a247082a02d6e69349e071e2946218\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fc980984badf3984b6303b377711220e067722bbd6a135b24669ff5069ef9f32\",\"dweb:/ipfs/QmPHXMSXj99XjSVM21YsY6aNtLLjLVXDbyN76J5HQYvvrz\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]}},\"version\":1}","evm":{"legacyAssembly":null,"assembly":null,"bytecode":null,"methodIdentifiers":{"owner()":"8da5cb5b","renounceOwnership()":"715018a6","transferOwnership(address)":"f2fde38b"}},"irOptimized":""}},"@openzeppelin/contracts/token/ERC20/ERC20.sol":{"ERC20":{"abi":[{"inputs":[{"internalType":"string","name":"name_","type":"string"},{"internalType":"string","name":"symbol_","type":"string"}],"stateMutability":"nonpayable","type":"constructor"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"decimals","outputs":[{"internalType":"uint8","name":"","type":"uint8"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"subtractedValue","type":"uint256"}],"name":"decreaseAllowance","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"addedValue","type":"uint256"}],"name":"increaseAllowance","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"}],"metadata":{"optimizer_settings":"M3B3","solc_metadata":"{\"compiler\":{\"version\":\"0.8.9+commit.e5eed63a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name_\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"symbol_\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. For a generic mechanism see {ERC20PresetMinterPauser}. TIP: For a detailed writeup see our guide https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. The default value of {decimals} is 18. To change this, you should override this function so it returns a different value. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC20 applications. Additionally, an {Approval} event is emitted on calls to {transferFrom}. This allows applications to reconstruct the allowance for all accounts just by listening to said events. Other implementations of the EIP may not emit these events, as it isn't required by the specification. Finally, the non-standard {decreaseAllowance} and {increaseAllowance} functions have been added to mitigate the well-known issues around setting allowances. See {IERC20-approve}.\",\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"constructor\":{\"details\":\"Sets the values for {name} and {symbol}. All two of these values are immutable: they can only be set once during construction.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"decreaseAllowance(address,uint256)\":{\"details\":\"Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`.\"},\"increaseAllowance(address,uint256)\":{\"details\":\"Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `amount`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `amount`. - the caller must have allowance for ``from``'s tokens of at least `amount`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":\"ERC20\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"details\":{\"constantOptimizer\":false,\"cse\":true,\"deduplicate\":true,\"inliner\":true,\"jumpdestRemover\":true,\"orderLiterals\":true,\"peephole\":true,\"yul\":true,\"yulDetails\":{\"optimizerSteps\":\"dhfoDgvulfnTUtnIf[xarrscLMcCTUtTOntnfDIulLculVcul jjTpeulxarulrulxarrcLgvifCTUcarrLsTFOtfDncarrIulc]jmuljuljul VcTOcul jmul\",\"stackAllocation\":true}},\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0xa56ca923f70c1748830700250b19c61b70db9a683516dc5e216694a50445d99c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cac938788bc4be12101e59d45588b4e059579f4e61062e1cda8d6b06c0191b15\",\"dweb:/ipfs/QmV2JKCyjTVH3rkWNrfdJRhAT7tZ3usAN2XcnD4h53Mvih\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x287b55befed2961a7eabd7d7b1b2839cbca8a5b80ef8dcbb25ed3d4c2002c305\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bd39944e8fc06be6dbe2dd1d8449b5336e23c6a7ba3e8e9ae5ae0f37f35283f5\",\"dweb:/ipfs/QmPV3FGYjVwvKSgAXKUN3r9T9GwniZz83CxBpM7vyj2G53\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x8de418a5503946cabe331f35fe242d3201a73f67f77aaeb7110acb1f30423aca\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a376d3dda2cb70536c0a45c208b29b34ac560c4cb4f513a42079f96ba47d2dd\",\"dweb:/ipfs/QmZQg6gn1sUpM8wHzwNvSnihumUCAhxD119MpXeKp8B9s8\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]}},\"version\":1}","zk_version":"1.3.13"},"evm":{"legacyAssembly":null,"assembly":"\t.text\n\t.file\t\"ERC20.sol:ERC20\"\n\t.globl\t__entry\n__entry:\n.func_begin0:\n\tnop\tstack+=[7]\n\tptr.add\tr1, r0, stack[@ptr_calldata]\n\tshr.s\t96, r1, r1\n\tand\t@CPI0_0[0], r1, stack[@calldatasize]\n\tadd\t128, r0, r1\n\tst.1\t64, r1\n\tand!\t1, r2, r1\n\tjump.ne\t@.BB0_1\n\tadd\tstack[@calldatasize], r0, r1\n\tsub.s!\t4, r1, r1\n\tjump.lt\t@.BB0_2\n\tptr.add\tstack[@ptr_calldata], r0, r1\n\tld\tr1, r1\n\tshr.s\t224, r1, r1\n\tsub.s!\t@CPI0_7[0], r1, r2\n\tjump.le\t@.BB0_55\n\tsub.s!\t@CPI0_8[0], r1, r2\n\tjump.gt\t@.BB0_65\n\tsub.s!\t@CPI0_12[0], r1, r2\n\tjump.eq\t@.BB0_81\n\tsub.s!\t@CPI0_13[0], r1, r2\n\tjump.eq\t@.BB0_83\n\tsub.s!\t@CPI0_14[0], r1, r1\n\tjump.ne\t@.BB0_2\n\tcontext.get_context_u128\tr1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_2\n\tsub.s\t4, r0, r1\n\tadd\tstack[@calldatasize], r1, r1\n\tadd\t@CPI0_2[0], r0, r2\n\tsub!\tr1, r0, r3\n\tadd\tr0, r0, r3\n\tadd.lt\tr2, r0, r3\n\tand\t@CPI0_2[0], r1, r1\n\tsub!\tr1, r0, r4\n\tadd.le\tr0, r0, r2\n\tsub.s!\t@CPI0_2[0], r1, r1\n\tadd\tr3, r0, r1\n\tadd.eq\tr2, r0, r1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_2\n\tnear_call\tr0, @copy_array_from_storage_to_memory_string, @DEFAULT_UNWIND\n\tadd\tr1, r0, r2\n\tld.1\t64, r1\n\tadd\tr1, r0, stack-[7]\n\tnear_call\tr0, @abi_encode_string, @DEFAULT_UNWIND\n\tadd\tstack-[7], r0, r4\n\tsub\tr1, r4, r1\n\tadd\t@CPI0_0[0], r0, r2\n\tsub.s!\t@CPI0_0[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tsub.s!\t@CPI0_0[0], r4, r3\n\tadd.lt\tr4, r0, r2\n\tshl.s\t64, r2, r2\n\tshl.s\t96, r1, r1\n\tor\tr1, r2, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_1:\n\tcontext.get_context_u128\tr1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_2\n\tadd\tstack[@calldatasize], r0, r2\n\tadd\t31, r2, r1\n\tsub.s\t32, r0, r10\n\tand\tr1, r10, r4\n\tld.1\t64, r1\n\tadd\tr4, r1, r3\n\tsub!\tr3, r4, r4\n\tadd\t0, r0, r4\n\tadd.lt\t1, r0, r4\n\tsub.s!\t@CPI0_1[0], r3, r5\n\tjump.gt\t@.BB0_5\n\tand!\t1, r4, r4\n\tjump.ne\t@.BB0_5\n\tst.1\t64, r3\n\tand\t31, r2, r3\n\tptr.add\tstack[@ptr_calldata], r0, r4\n\tshr.s!\t5, r2, r5\n\tjump.eq\t@.BB0_94\n\tadd\tr0, r0, r6\n.BB0_8:\n\tshl.s\t5, r6, r7\n\tadd\tr1, r7, r8\n\tptr.add\tr4, r7, r7\n\tld\tr7, r7\n\tst.1\tr8, r7\n\tadd\t1, r6, r6\n\tsub!\tr6, r5, r7\n\tjump.lt\t@.BB0_8\n.BB0_94:\n\tsub!\tr3, r0, r6\n\tjump.eq\t@.BB0_10\n\tshl.s\t5, r5, r5\n\tptr.add\tr4, r5, r4\n\tadd\tr1, r5, r5\n\tshl.s\t3, r3, r3\n\tld.1\tr5, r6\n\tshl\tr6, r3, r6\n\tshr\tr6, r3, r6\n\tld\tr4, r4\n\tsub\t256, r3, r3\n\tshr\tr4, r3, r4\n\tshl\tr4, r3, r3\n\tor\tr3, r6, r3\n\tst.1\tr5, r3\n.BB0_10:\n\tadd\t@CPI0_2[0], r0, r3\n\tsub.s!\t64, r2, r4\n\tadd\tr0, r0, r4\n\tadd.lt\tr3, r0, r4\n\tand\t@CPI0_2[0], r2, r5\n\tsub!\tr5, r0, r6\n\tadd.le\tr0, r0, r3\n\tsub.s!\t@CPI0_2[0], r5, r5\n\tadd.ne\tr4, r0, r3\n\tsub!\tr3, r0, r3\n\tjump.ne\t@.BB0_2\n\tld.1.inc\tr1, r4, r3\n\tsub.s!\t@CPI0_1[0], r4, r5\n\tjump.gt\t@.BB0_2\n\tadd\tr1, r2, r2\n\tadd\tr4, r1, r4\n\tadd\t31, r4, r5\n\tadd\t@CPI0_2[0], r0, r6\n\tsub!\tr5, r2, r7\n\tadd\tr0, r0, r7\n\tadd.ge\tr6, r0, r7\n\tand\t@CPI0_2[0], r5, r5\n\tand\t@CPI0_2[0], r2, r8\n\tsub!\tr5, r8, r9\n\tadd.ge\tr0, r0, r6\n\txor\tr5, r8, r5\n\tsub.s!\t@CPI0_2[0], r5, r5\n\tadd\tr7, r0, r5\n\tadd.eq\tr6, r0, r5\n\tsub!\tr5, r0, r5\n\tjump.ne\t@.BB0_2\n\tld.1\tr4, r5\n\tsub.s!\t@CPI0_1[0], r5, r6\n\tjump.le\t@.BB0_14\n.BB0_5:\n\tadd\t@CPI0_5[0], r0, r1\n\tst.1\t0, r1\n\tadd\t65, r0, r1\n\tst.1\t4, r1\n\tadd\t@CPI0_6[0], r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB0_55:\n\tsub.s!\t@CPI0_15[0], r1, r2\n\tjump.le\t@.BB0_56\n\tsub.s!\t@CPI0_16[0], r1, r2\n\tjump.eq\t@.BB0_73\n\tsub.s!\t@CPI0_17[0], r1, r2\n\tjump.eq\t@.BB0_76\n\tsub.s!\t@CPI0_18[0], r1, r1\n\tjump.ne\t@.BB0_2\n\tcontext.get_context_u128\tr1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_2\n\tsub.s\t4, r0, r1\n\tadd\tstack[@calldatasize], r1, r1\n\tadd\t@CPI0_2[0], r0, r2\n\tsub!\tr1, r0, r3\n\tadd\tr0, r0, r3\n\tadd.lt\tr2, r0, r3\n\tand\t@CPI0_2[0], r1, r1\n\tsub!\tr1, r0, r4\n\tadd.le\tr0, r0, r2\n\tsub.s!\t@CPI0_2[0], r1, r1\n\tadd\tr3, r0, r1\n\tadd.eq\tr2, r0, r1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_2\n\tld.1\t64, r1\n\tadd\t18, r0, r2\n\tst.1\tr1, r2\n\tadd\t@CPI0_0[0], r0, r2\n\tsub.s!\t@CPI0_0[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI0_21[0], r1, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_65:\n\tsub.s!\t@CPI0_9[0], r1, r2\n\tjump.eq\t@.BB0_88\n\tsub.s!\t@CPI0_10[0], r1, r2\n\tjump.eq\t@.BB0_90\n\tsub.s!\t@CPI0_11[0], r1, r1\n\tjump.ne\t@.BB0_2\n\tcontext.get_context_u128\tr1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_2\n\tadd\tstack[@calldatasize], r0, r1\n\tnear_call\tr0, @abi_decode_addresst_address, @DEFAULT_UNWIND\n\tadd\tr2, r0, stack-[7]\n\tnear_call\tr0, @mapping_index_access_mapping_address_uint256_of_address_2492, @DEFAULT_UNWIND\n\tadd\tstack-[7], r0, r2\n\tnear_call\tr0, @mapping_index_access_mapping_address_uint256_of_address, @DEFAULT_UNWIND\n\tsload\tr1, r1\n\tld.1\t64, r2\n\tst.1\tr2, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI0_21[0], r1, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_56:\n\tsub.s!\t@CPI0_19[0], r1, r2\n\tjump.eq\t@.BB0_68\n\tsub.s!\t@CPI0_20[0], r1, r1\n\tjump.ne\t@.BB0_2\n\tcontext.get_context_u128\tr1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_2\n\tadd\tstack[@calldatasize], r0, r1\n\tnear_call\tr0, @abi_decode_addresst_uint256, @DEFAULT_UNWIND\n\tnear_call\tr0, @fun_approve, @DEFAULT_UNWIND\n\tadd\t1, r0, r1\n\tld.1\t64, r2\n\tst.1\tr2, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI0_21[0], r1, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_81:\n\tcontext.get_context_u128\tr1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_2\n\tadd\tstack[@calldatasize], r0, r1\n\tnear_call\tr0, @abi_decode_addresst_uint256, @DEFAULT_UNWIND\n\tnear_call\tr0, @fun_increaseAllowance, @DEFAULT_UNWIND\n\tadd\t1, r0, r1\n\tld.1\t64, r2\n\tst.1\tr2, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI0_21[0], r1, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_83:\n\tcontext.get_context_u128\tr1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_2\n\tadd\tstack[@calldatasize], r0, r1\n\tnear_call\tr0, @abi_decode_address, @DEFAULT_UNWIND\n\tnear_call\tr0, @fun_balanceOf, @DEFAULT_UNWIND\n\tld.1\t64, r2\n\tst.1\tr2, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI0_21[0], r1, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_73:\n\tcontext.get_context_u128\tr1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_2\n\tsub.s\t4, r0, r1\n\tadd\tstack[@calldatasize], r1, r1\n\tadd\t@CPI0_2[0], r0, r2\n\tsub!\tr1, r0, r3\n\tadd\tr0, r0, r3\n\tadd.lt\tr2, r0, r3\n\tand\t@CPI0_2[0], r1, r1\n\tsub!\tr1, r0, r4\n\tadd.le\tr0, r0, r2\n\tsub.s!\t@CPI0_2[0], r1, r1\n\tadd\tr3, r0, r1\n\tadd.eq\tr2, r0, r1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_2\n\tadd\t2, r0, r1\n\tsload\tr1, r1\n\tld.1\t64, r2\n\tst.1\tr2, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI0_21[0], r1, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_76:\n\tcontext.get_context_u128\tr1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_2\n\tadd\tstack[@calldatasize], r0, r1\n\tnear_call\tr0, @abi_decode_addresst_addresst_uint256, @DEFAULT_UNWIND\n\tnear_call\tr0, @fun_transferFrom, @DEFAULT_UNWIND\n\tadd\t1, r0, r1\n\tld.1\t64, r2\n\tst.1\tr2, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI0_21[0], r1, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_88:\n\tcontext.get_context_u128\tr1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_2\n\tadd\tstack[@calldatasize], r0, r1\n\tnear_call\tr0, @abi_decode_addresst_uint256, @DEFAULT_UNWIND\n\tnear_call\tr0, @fun_decreaseAllowance, @DEFAULT_UNWIND\n\tadd\t1, r0, r1\n\tld.1\t64, r2\n\tst.1\tr2, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI0_21[0], r1, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_90:\n\tcontext.get_context_u128\tr1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_2\n\tadd\tstack[@calldatasize], r0, r1\n\tnear_call\tr0, @abi_decode_addresst_uint256, @DEFAULT_UNWIND\n\tnear_call\tr0, @fun_transfer, @DEFAULT_UNWIND\n\tadd\t1, r0, r1\n\tld.1\t64, r2\n\tst.1\tr2, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI0_21[0], r1, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_68:\n\tcontext.get_context_u128\tr1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_2\n\tsub.s\t4, r0, r1\n\tadd\tstack[@calldatasize], r1, r1\n\tadd\t@CPI0_2[0], r0, r2\n\tsub!\tr1, r0, r3\n\tadd\tr0, r0, r3\n\tadd.lt\tr2, r0, r3\n\tand\t@CPI0_2[0], r1, r1\n\tsub!\tr1, r0, r4\n\tadd.le\tr0, r0, r2\n\tsub.s!\t@CPI0_2[0], r1, r1\n\tadd\tr3, r0, r1\n\tadd.eq\tr2, r0, r1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_2\n\tnear_call\tr0, @copy_array_from_storage_to_memory_string_2479, @DEFAULT_UNWIND\n\tadd\tr1, r0, r2\n\tld.1\t64, r1\n\tadd\tr1, r0, stack-[7]\n\tnear_call\tr0, @abi_encode_string, @DEFAULT_UNWIND\n\tadd\tstack-[7], r0, r4\n\tsub\tr1, r4, r1\n\tadd\t@CPI0_0[0], r0, r2\n\tsub.s!\t@CPI0_0[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tsub.s!\t@CPI0_0[0], r4, r3\n\tadd.lt\tr4, r0, r2\n\tshl.s\t64, r2, r2\n\tshl.s\t96, r1, r1\n\tor\tr1, r2, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_14:\n\tadd\t63, r5, r6\n\tand\tr6, r10, r6\n\tld.1\t64, r11\n\tadd\tr11, r6, r6\n\tsub!\tr6, r11, r7\n\tadd\t0, r0, r7\n\tadd.lt\t1, r0, r7\n\tsub.s!\t@CPI0_1[0], r6, r8\n\tjump.gt\t@.BB0_5\n\tand!\t1, r7, r7\n\tjump.ne\t@.BB0_5\n\tst.1\t64, r6\n\tst.1.inc\tr11, r5, r12\n\tadd\t32, r5, r6\n\tadd\tr6, r4, r7\n\tsub!\tr7, r2, r7\n\tjump.gt\t@.BB0_2\n\tsub!\tr5, r0, r7\n\tjump.eq\t@.BB0_22\n\tadd\tr0, r0, r7\n.BB0_19:\n\tadd\t32, r7, r7\n\tadd\tr7, r11, r8\n\tadd\tr7, r4, r9\n\tld.1\tr9, r9\n\tst.1\tr8, r9\n\tsub!\tr7, r5, r8\n\tjump.lt\t@.BB0_19\n\tsub!\tr7, r5, r4\n\tjump.le\t@.BB0_22\n\tadd\tr11, r6, r4\n\tst.1\tr4, r0\n.BB0_22:\n\tld.1\tr3, r3\n\tsub.s!\t@CPI0_1[0], r3, r4\n\tjump.gt\t@.BB0_2\n\tadd\tr3, r1, r1\n\tadd\t31, r1, r3\n\tadd\t@CPI0_2[0], r0, r4\n\tsub!\tr3, r2, r5\n\tadd\tr0, r0, r5\n\tadd.ge\tr4, r0, r5\n\tand\t@CPI0_2[0], r3, r3\n\tand\t@CPI0_2[0], r2, r6\n\tsub!\tr3, r6, r7\n\tadd.ge\tr0, r0, r4\n\txor\tr3, r6, r3\n\tsub.s!\t@CPI0_2[0], r3, r3\n\tadd\tr5, r0, r3\n\tadd.eq\tr4, r0, r3\n\tsub!\tr3, r0, r3\n\tjump.ne\t@.BB0_2\n\tld.1\tr1, r3\n\tsub.s!\t@CPI0_1[0], r3, r4\n\tjump.gt\t@.BB0_5\n\tadd\t63, r3, r4\n\tand\tr4, r10, r4\n\tld.1\t64, r7\n\tadd\tr7, r4, r4\n\tsub!\tr4, r7, r5\n\tadd\t0, r0, r5\n\tadd.lt\t1, r0, r5\n\tsub.s!\t@CPI0_1[0], r4, r6\n\tjump.gt\t@.BB0_5\n\tand!\t1, r5, r5\n\tjump.ne\t@.BB0_5\n\tst.1\t64, r4\n\tst.1\tr7, r3\n\tadd\t32, r3, r4\n\tadd\tr4, r1, r5\n\tsub!\tr5, r2, r2\n\tjump.le\t@.BB0_28\n.BB0_2:\n\tadd\tr0, r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB0_28:\n\tadd\tr12, r0, stack-[4]\n\tadd\tr11, r0, stack-[7]\n\tadd\tr10, r0, stack-[5]\n\tsub!\tr3, r0, r2\n\tjump.eq\t@.BB0_33\n\tadd\tr0, r0, r2\n.BB0_30:\n\tadd\t32, r2, r2\n\tadd\tr2, r7, r5\n\tadd\tr2, r1, r6\n\tld.1\tr6, r6\n\tst.1\tr5, r6\n\tsub!\tr2, r3, r5\n\tjump.lt\t@.BB0_30\n\tsub!\tr2, r3, r1\n\tjump.le\t@.BB0_33\n\tadd\tr7, r4, r1\n\tst.1\tr1, r0\n.BB0_33:\n\tadd\tstack-[7], r0, r1\n\tld.1\tr1, r1\n\tadd\tr1, r0, stack-[6]\n\tsub.s!\t@CPI0_1[0], r1, r1\n\tjump.gt\t@.BB0_5\n\tadd\tr7, r0, stack-[1]\n\tadd\t3, r0, r1\n\tadd\tr1, r0, stack-[3]\n\tsload\tr1, r1\n\tand!\t1, r1, r2\n\tshr.s\t1, r1, r1\n\tand\t127, r1, r3\n\tadd.eq\tr3, r0, r1\n\tadd\tr1, r0, stack-[2]\n\tsub.s!\t31, r1, r1\n\tadd\t0, r0, r1\n\tadd.gt\t1, r0, r1\n\tand\t1, r1, r1\n\tsub!\tr2, r1, r1\n\tjump.eq\t@.BB0_36\n\tadd\t@CPI0_5[0], r0, r1\n\tst.1\t0, r1\n\tadd\t34, r0, r1\n\tst.1\t4, r1\n\tadd\t@CPI0_6[0], r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB0_36:\n\tadd\tstack-[2], r0, r1\n\tsub.s!\t32, r1, r1\n\tjump.lt\t@.BB0_41\n\tadd\tstack-[3], r0, r1\n\tst.1\t0, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_3[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tadd\tstack-[6], r0, r3\n\tadd\t31, r3, r2\n\tshr.s\t5, r2, r2\n\tsub.s!\t32, r3, r3\n\tadd.lt\tr0, r0, r2\n\tld\tr1, r3\n\tadd\tstack-[2], r0, r1\n\tadd\t31, r1, r1\n\tshr.s\t5, r1, r1\n\tadd\tr3, r1, r1\n\tadd\tr3, r2, r2\n\tsub!\tr2, r1, r3\n\tjump.ge\t@.BB0_41\n.BB0_40:\n\tsstore\tr2, r0\n\tadd\t1, r2, r2\n\tsub!\tr2, r1, r3\n\tjump.lt\t@.BB0_40\n.BB0_41:\n\tadd\tstack-[6], r0, r1\n\tsub.s!\t31, r1, r1\n\tjump.le\t@.BB0_50\n\tadd\tstack-[3], r0, r1\n\tst.1\t0, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_3[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tadd\tstack-[5], r0, r2\n\tadd\tstack-[7], r0, r6\n\tjump.eq\t@.BB0_2\n\tadd\tstack-[6], r0, r3\n\tand!\tr3, r2, r3\n\tadd\t32, r0, r2\n\tld\tr1, r1\n\tjump.eq\t@.BB0_47\n\tadd\t32, r0, r2\n\tadd\tr0, r0, r4\n.BB0_46:\n\tadd\tr2, r6, r5\n\tld.1\tr5, r5\n\tsstore\tr1, r5\n\tadd\t32, r2, r2\n\tadd\t1, r1, r1\n\tadd\t32, r4, r4\n\tsub!\tr4, r3, r5\n\tjump.lt\t@.BB0_46\n.BB0_47:\n\tadd\tstack-[6], r0, r4\n\tsub!\tr3, r4, r3\n\tjump.ge\t@.BB0_49\n\tadd\tstack-[6], r0, r3\n\tshl.s\t3, r3, r3\n\tand\t248, r3, r3\n\tsub.s\t1, r0, r4\n\tshr\tr4, r3, r3\n\txor\tr3, r4, r3\n\tadd\tstack-[7], r0, r4\n\tadd\tr2, r4, r2\n\tld.1\tr2, r2\n\tand\tr2, r3, r2\n\tsstore\tr1, r2\n.BB0_49:\n\tadd\t1, r0, r1\n\tadd\tstack-[6], r0, r2\n\tshl.s\t1, r2, r2\n\tjump\t@.BB0_42\n.BB0_50:\n\tadd\tstack-[6], r0, r1\n\tsub!\tr1, r0, r1\n\tadd\tr0, r0, r1\n\tjump.eq\t@.BB0_52\n\tadd\tstack-[4], r0, r1\n\tld.1\tr1, r1\n.BB0_52:\n\tadd\tstack-[6], r0, r4\n\tshl.s\t3, r4, r2\n\tsub.s\t1, r0, r3\n\tshr\tr3, r2, r2\n\txor\tr2, r3, r2\n\tand\tr1, r2, r2\n\tshl.s\t1, r4, r1\n.BB0_42:\n\tor\tr2, r1, r1\n\tadd\tstack-[3], r0, r2\n\tsstore\tr2, r1\n\tadd\tstack-[1], r0, r1\n\tnear_call\tr0, @copy_byte_array_to_storage_from_string_to_string, @DEFAULT_UNWIND\n\tadd\t32, r0, r1\n\tst.2\t256, r1\n\tst.2\t288, r0\n\tadd\t@CPI0_4[0], r0, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.func_end0:\n\ncopy_byte_array_to_storage_from_string_to_string:\n.func_begin1:\n\tnop\tstack+=[5]\n\tld.1.inc\tr1, r5, r7\n\tsub.s!\t@CPI1_0[0], r5, r2\n\tjump.ge\t@.BB1_1\n\tadd\t4, r0, r4\n\tsload\tr4, r3\n\tand!\t1, r3, r2\n\tshr.s\t1, r3, r6\n\tand\t127, r6, r3\n\tadd.eq\tr3, r0, r6\n\tsub.s!\t31, r6, r3\n\tadd\t0, r0, r3\n\tadd.gt\t1, r0, r3\n\tand\t1, r3, r3\n\tsub!\tr2, r3, r2\n\tjump.ne\t@.BB1_3\n\tadd\tr1, r0, stack-[3]\n\tsub.s!\t32, r6, r1\n\tadd\tr4, r0, stack-[5]\n\tadd\tr5, r0, stack-[4]\n\tjump.lt\t@.BB1_10\n\tadd\tr6, r0, stack-[1]\n\tadd\tr7, r0, stack-[2]\n\tst.1\t0, r4\n\tadd\t@CPI1_1[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI1_1[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI1_2[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB1_6\n\tadd\tstack-[4], r0, r5\n\tadd\t31, r5, r2\n\tshr.s\t5, r2, r2\n\tsub.s!\t32, r5, r3\n\tadd.lt\tr0, r0, r2\n\tld\tr1, r3\n\tadd\tstack-[1], r0, r1\n\tadd\t31, r1, r1\n\tshr.s\t5, r1, r1\n\tadd\tr3, r1, r1\n\tadd\tr3, r2, r2\n\tsub!\tr2, r1, r3\n\tadd\tstack-[5], r0, r4\n\tadd\tstack-[2], r0, r7\n\tjump.ge\t@.BB1_10\n.BB1_9:\n\tsstore\tr2, r0\n\tadd\t1, r2, r2\n\tsub!\tr2, r1, r3\n\tjump.lt\t@.BB1_9\n.BB1_10:\n\tsub.s!\t31, r5, r1\n\tjump.le\t@.BB1_19\n\tst.1\t0, r4\n\tadd\t@CPI1_1[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI1_1[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI1_2[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB1_6\n\tsub.s\t32, r0, r2\n\tadd\tstack-[4], r0, r6\n\tand!\tr6, r2, r3\n\tadd\t32, r0, r2\n\tld\tr1, r1\n\tadd\tstack-[3], r0, r7\n\tjump.eq\t@.BB1_16\n\tadd\t32, r0, r2\n\tadd\tr0, r0, r4\n.BB1_15:\n\tadd\tr2, r7, r5\n\tld.1\tr5, r5\n\tsstore\tr1, r5\n\tadd\t32, r2, r2\n\tadd\t1, r1, r1\n\tadd\t32, r4, r4\n\tsub!\tr4, r3, r5\n\tjump.lt\t@.BB1_15\n.BB1_16:\n\tsub!\tr3, r6, r3\n\tjump.ge\t@.BB1_18\n\tshl.s\t3, r6, r3\n\tand\t248, r3, r3\n\tsub.s\t1, r0, r4\n\tshr\tr4, r3, r3\n\txor\tr3, r4, r3\n\tadd\tr2, r7, r2\n\tld.1\tr2, r2\n\tand\tr2, r3, r2\n\tsstore\tr1, r2\n.BB1_18:\n\tshl.s\t1, r6, r1\n\tor\t1, r1, r1\n\tadd\tstack-[5], r0, r4\n\tjump\t@.BB1_11\n.BB1_19:\n\tsub!\tr5, r0, r1\n\tadd\tr0, r0, r1\n\tjump.eq\t@.BB1_11\n\tshl.s\t3, r5, r1\n\tsub.s\t1, r0, r2\n\tshr\tr2, r1, r1\n\txor\tr1, r2, r1\n\tld.1\tr7, r2\n\tand\tr2, r1, r1\n\tshl.s\t1, r5, r2\n\tor\tr1, r2, r1\n.BB1_11:\n\tsstore\tr4, r1\n\tret\n.BB1_1:\n\tadd\t@CPI1_3[0], r0, r1\n\tst.1\t0, r1\n\tadd\t65, r0, r1\n\tst.1\t4, r1\n\tadd\t@CPI1_4[0], r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB1_3:\n\tadd\t@CPI1_3[0], r0, r1\n\tst.1\t0, r1\n\tadd\t34, r0, r1\n\tst.1\t4, r1\n\tadd\t@CPI1_4[0], r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB1_6:\n\tadd\tr0, r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.func_end1:\n\nabi_encode_string:\n.func_begin2:\n\tadd\t32, r0, r3\n\tst.1.inc\tr1, r3, r4\n\tld.1\tr2, r3\n\tst.1\tr4, r3\n\tsub!\tr3, r0, r4\n\tadd\t64, r1, r1\n\tjump.eq\t@.BB2_4\n\tadd\tr0, r0, r4\n.BB2_2:\n\tadd\tr1, r4, r5\n\tadd\t32, r4, r4\n\tadd\tr4, r2, r6\n\tld.1\tr6, r6\n\tst.1\tr5, r6\n\tsub!\tr4, r3, r5\n\tjump.lt\t@.BB2_2\n\tsub!\tr4, r3, r2\n\tjump.le\t@.BB2_4\n\tadd\tr1, r3, r2\n\tst.1\tr2, r0\n\tjump\t@.BB2_6\n.BB2_4:\n.BB2_6:\n\tadd\t31, r3, r2\n\tsub.s\t32, r0, r3\n\tand\tr2, r3, r2\n\tadd\tr1, r2, r1\n\tret\n.func_end2:\n\nabi_decode_addresst_uint256:\n.func_begin3:\n\tsub.s\t4, r1, r1\n\tadd\t@CPI3_0[0], r0, r2\n\tsub.s!\t63, r1, r3\n\tadd\tr0, r0, r3\n\tadd.gt\tr2, r0, r3\n\tand\t@CPI3_0[0], r1, r1\n\tsub!\tr1, r0, r4\n\tadd.ge\tr0, r0, r2\n\tsub.s!\t@CPI3_0[0], r1, r1\n\tadd\tr3, r0, r1\n\tadd.eq\tr2, r0, r1\n\tsub!\tr1, r0, r1\n\tjump.eq\t@.BB3_1\n\tptr.add\tstack[@ptr_calldata], r0, r2\n\tptr.add.s\t4, r2, r1\n\tld\tr1, r1\n\tsub.s!\t@CPI3_1[0], r1, r3\n\tjump.gt\t@.BB3_1\n\tptr.add.s\t36, r2, r2\n\tld\tr2, r2\n\tret\n.BB3_1:\n\tadd\tr0, r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.func_end3:\n\nabi_decode_addresst_addresst_uint256:\n.func_begin4:\n\tsub.s\t4, r1, r1\n\tadd\t@CPI4_0[0], r0, r2\n\tsub.s!\t95, r1, r3\n\tadd\tr0, r0, r3\n\tadd.gt\tr2, r0, r3\n\tand\t@CPI4_0[0], r1, r1\n\tsub!\tr1, r0, r4\n\tadd.ge\tr0, r0, r2\n\tsub.s!\t@CPI4_0[0], r1, r1\n\tadd\tr3, r0, r1\n\tadd.eq\tr2, r0, r1\n\tsub!\tr1, r0, r1\n\tjump.eq\t@.BB4_1\n\tptr.add\tstack[@ptr_calldata], r0, r3\n\tptr.add.s\t4, r3, r1\n\tld\tr1, r1\n\tsub.s!\t@CPI4_1[0], r1, r2\n\tjump.gt\t@.BB4_1\n\tptr.add.s\t36, r3, r2\n\tld\tr2, r2\n\tsub.s!\t@CPI4_1[0], r2, r4\n\tjump.gt\t@.BB4_1\n\tptr.add.s\t68, r3, r3\n\tld\tr3, r3\n\tret\n.BB4_1:\n\tadd\tr0, r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.func_end4:\n\nabi_decode_address:\n.func_begin5:\n\tsub.s\t4, r1, r1\n\tadd\t@CPI5_0[0], r0, r2\n\tsub.s!\t31, r1, r3\n\tadd\tr0, r0, r3\n\tadd.gt\tr2, r0, r3\n\tand\t@CPI5_0[0], r1, r1\n\tsub!\tr1, r0, r4\n\tadd.ge\tr0, r0, r2\n\tsub.s!\t@CPI5_0[0], r1, r1\n\tadd\tr3, r0, r1\n\tadd.eq\tr2, r0, r1\n\tsub!\tr1, r0, r1\n\tjump.eq\t@.BB5_1\n\tadd\t4, r0, r1\n\tptr.add\tstack[@ptr_calldata], r1, r1\n\tld\tr1, r1\n\tsub.s!\t@CPI5_1[0], r1, r2\n\tjump.gt\t@.BB5_1\n\tret\n.BB5_1:\n\tadd\tr0, r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.func_end5:\n\nabi_decode_addresst_address:\n.func_begin6:\n\tsub.s\t4, r1, r1\n\tadd\t@CPI6_0[0], r0, r2\n\tsub.s!\t63, r1, r3\n\tadd\tr0, r0, r3\n\tadd.gt\tr2, r0, r3\n\tand\t@CPI6_0[0], r1, r1\n\tsub!\tr1, r0, r4\n\tadd.ge\tr0, r0, r2\n\tsub.s!\t@CPI6_0[0], r1, r1\n\tadd\tr3, r0, r1\n\tadd.eq\tr2, r0, r1\n\tsub!\tr1, r0, r1\n\tjump.eq\t@.BB6_1\n\tptr.add\tstack[@ptr_calldata], r0, r2\n\tptr.add.s\t4, r2, r1\n\tld\tr1, r1\n\tsub.s!\t@CPI6_1[0], r1, r3\n\tjump.gt\t@.BB6_1\n\tptr.add.s\t36, r2, r2\n\tld\tr2, r2\n\tsub.s!\t@CPI6_1[0], r2, r3\n\tjump.gt\t@.BB6_1\n\tret\n.BB6_1:\n\tadd\tr0, r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.func_end6:\n\ncopy_array_from_storage_to_memory_string_2479:\n.func_begin7:\n\tadd\t3, r0, r5\n\tsload\tr5, r4\n\tand!\t1, r4, r6\n\tshr.s\t1, r4, r1\n\tand\t127, r1, r2\n\tadd.ne\tr1, r0, r2\n\tsub.s!\t31, r2, r1\n\tadd\t0, r0, r1\n\tadd.gt\t1, r0, r1\n\tand\t1, r1, r1\n\tsub!\tr6, r1, r1\n\tjump.ne\t@.BB7_1\n\tld.1\t64, r1\n\tst.1.inc\tr1, r2, r3\n\tsub!\tr6, r0, r6\n\tjump.ne\t@.BB7_9\n\tsub.s\t256, r0, r2\n\tand\tr4, r2, r2\n\tst.1\tr3, r2\n\tadd\t64, r0, r4\n\tjump\t@.BB7_4\n.BB7_9:\n\tst.1\t0, r5\n\tadd\t32, r0, r4\n\tsub!\tr2, r0, r5\n\tjump.eq\t@.BB7_4\n\tadd\t@CPI7_0[0], r0, r4\n\tadd\tr0, r0, r6\n.BB7_11:\n\tadd\tr6, r0, r5\n\tadd\tr5, r3, r6\n\tsload\tr4, r7\n\tst.1\tr6, r7\n\tadd\t1, r4, r4\n\tadd\t32, r5, r6\n\tsub!\tr6, r2, r7\n\tjump.lt\t@.BB7_11\n\tadd\t95, r5, r2\n\tsub.s\t32, r0, r3\n\tand\tr2, r3, r4\n.BB7_4:\n\tadd\tr4, r1, r2\n\tsub!\tr2, r4, r3\n\tadd\t0, r0, r3\n\tadd.lt\t1, r0, r3\n\tsub.s!\t@CPI7_1[0], r2, r4\n\tjump.gt\t@.BB7_6\n\tand!\t1, r3, r3\n\tjump.ne\t@.BB7_6\n\tst.1\t64, r2\n\tret\n.BB7_1:\n\tadd\t@CPI7_2[0], r0, r1\n\tst.1\t0, r1\n\tadd\t34, r0, r1\n\tst.1\t4, r1\n\tadd\t@CPI7_3[0], r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB7_6:\n\tadd\t@CPI7_2[0], r0, r1\n\tst.1\t0, r1\n\tadd\t65, r0, r1\n\tst.1\t4, r1\n\tadd\t@CPI7_3[0], r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.func_end7:\n\ncopy_array_from_storage_to_memory_string:\n.func_begin8:\n\tadd\t4, r0, r5\n\tsload\tr5, r4\n\tand!\t1, r4, r6\n\tshr.s\t1, r4, r1\n\tand\t127, r1, r2\n\tadd.ne\tr1, r0, r2\n\tsub.s!\t31, r2, r1\n\tadd\t0, r0, r1\n\tadd.gt\t1, r0, r1\n\tand\t1, r1, r1\n\tsub!\tr6, r1, r1\n\tjump.ne\t@.BB8_1\n\tld.1\t64, r1\n\tst.1.inc\tr1, r2, r3\n\tsub!\tr6, r0, r6\n\tjump.ne\t@.BB8_9\n\tsub.s\t256, r0, r2\n\tand\tr4, r2, r2\n\tst.1\tr3, r2\n\tadd\t64, r0, r4\n\tjump\t@.BB8_4\n.BB8_9:\n\tst.1\t0, r5\n\tadd\t32, r0, r4\n\tsub!\tr2, r0, r5\n\tjump.eq\t@.BB8_4\n\tadd\t@CPI8_0[0], r0, r4\n\tadd\tr0, r0, r6\n.BB8_11:\n\tadd\tr6, r0, r5\n\tadd\tr5, r3, r6\n\tsload\tr4, r7\n\tst.1\tr6, r7\n\tadd\t1, r4, r4\n\tadd\t32, r5, r6\n\tsub!\tr6, r2, r7\n\tjump.lt\t@.BB8_11\n\tadd\t95, r5, r2\n\tsub.s\t32, r0, r3\n\tand\tr2, r3, r4\n.BB8_4:\n\tadd\tr4, r1, r2\n\tsub!\tr2, r4, r3\n\tadd\t0, r0, r3\n\tadd.lt\t1, r0, r3\n\tsub.s!\t@CPI8_1[0], r2, r4\n\tjump.gt\t@.BB8_6\n\tand!\t1, r3, r3\n\tjump.ne\t@.BB8_6\n\tst.1\t64, r2\n\tret\n.BB8_1:\n\tadd\t@CPI8_2[0], r0, r1\n\tst.1\t0, r1\n\tadd\t34, r0, r1\n\tst.1\t4, r1\n\tadd\t@CPI8_3[0], r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB8_6:\n\tadd\t@CPI8_2[0], r0, r1\n\tst.1\t0, r1\n\tadd\t65, r0, r1\n\tst.1\t4, r1\n\tadd\t@CPI8_3[0], r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.func_end8:\n\nmapping_index_access_mapping_address_uint256_of_address_2492:\n.func_begin9:\n\tand\t@CPI9_0[0], r1, r1\n\tst.1\t0, r1\n\tadd\t1, r0, r1\n\tst.1\t32, r1\n\tadd\t@CPI9_1[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI9_1[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI9_2[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB9_1\n\tld\tr1, r1\n\tret\n.BB9_1:\n\tadd\tr0, r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.func_end9:\n\nmapping_index_access_mapping_address_uint256_of_address:\n.func_begin10:\n\tand\t@CPI10_0[0], r2, r2\n\tst.1\t0, r2\n\tst.1\t32, r1\n\tadd\t@CPI10_1[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI10_1[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI10_2[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB10_1\n\tld\tr1, r1\n\tret\n.BB10_1:\n\tadd\tr0, r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.func_end10:\n\nfun_balanceOf:\n.func_begin11:\n\tand\t@CPI11_0[0], r1, r1\n\tst.1\t0, r1\n\tst.1\t32, r0\n\tadd\t@CPI11_1[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI11_1[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI11_2[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB11_1\n\tld\tr1, r1\n\tsload\tr1, r1\n\tret\n.BB11_1:\n\tadd\tr0, r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.func_end11:\n\nfun_transfer:\n.func_begin12:\n\tnop\tstack+=[6]\n\tadd\tr2, r0, stack-[6]\n\tcontext.caller\tr2\n\tand!\t@CPI12_0[0], r2, r3\n\tjump.eq\t@.BB12_1\n\tadd\tr2, r0, stack-[2]\n\tadd\tr1, r0, stack-[3]\n\tand!\t@CPI12_0[0], r1, r1\n\tadd\tr1, r0, stack-[5]\n\tjump.eq\t@.BB12_3\n\tadd\tr3, r0, stack-[4]\n\tst.1\t0, r3\n\tst.1\t32, r0\n\tadd\t@CPI12_1[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI12_1[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI12_2[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB12_5\n\tld\tr1, r1\n\tsload\tr1, r2\n\tadd\tstack-[6], r0, r1\n\tadd\tr2, r0, stack-[1]\n\tsub!\tr2, r1, r1\n\tjump.lt\t@.BB12_7\n\tadd\tstack-[4], r0, r1\n\tst.1\t0, r1\n\tst.1\t32, r0\n\tadd\t@CPI12_1[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI12_1[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI12_2[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB12_5\n\tadd\tstack-[6], r0, r2\n\tadd\tstack-[1], r0, r3\n\tsub\tr3, r2, r2\n\tld\tr1, r1\n\tsstore\tr1, r2\n\tadd\tstack-[5], r0, r1\n\tst.1\t0, r1\n\tst.1\t32, r0\n\tadd\t@CPI12_1[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI12_1[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI12_2[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB12_5\n\tld\tr1, r1\n\tsload\tr1, r2\n\tadd\tstack-[6], r0, r3\n\tadd\tr2, r3, r2\n\tsstore\tr1, r2\n\tld.1\t64, r1\n\tst.1\tr1, r3\n\tadd\t@CPI12_1[0], r0, r2\n\tcontext.gas_left\tr3\n\tsub.s!\t@CPI12_1[0], r3, r4\n\tadd.ge\tr2, r0, r3\n\tsub.s!\t@CPI12_1[0], r1, r4\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tshl.s\t192, r3, r2\n\tor\tr2, r1, r1\n\tor\t@CPI12_3[0], r1, r1\n\tadd\t32781, r0, r2\n\tadd\t3, r0, r3\n\tadd\t@CPI12_4[0], r0, r4\n\tadd\tstack-[2], r0, r5\n\tadd\tstack-[3], r0, r6\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r1\n\tjump.eq\t@.BB12_5\n\tret\n.BB12_5:\n\tadd\tr0, r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB12_1:\n\tld.1\t64, r1\n\tadd\t100, r1, r2\n\tadd\t@CPI12_11[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t68, r1, r2\n\tadd\t@CPI12_12[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t36, r1, r2\n\tadd\t37, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI12_7[0], r0, r2\n\tst.1\tr1, r2\n\tadd\t4, r1, r2\n\tadd\t32, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI12_1[0], r0, r2\n\tsub.s!\t@CPI12_1[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI12_8[0], r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB12_3:\n\tld.1\t64, r1\n\tadd\t100, r1, r2\n\tadd\t@CPI12_9[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t68, r1, r2\n\tadd\t@CPI12_10[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t36, r1, r2\n\tadd\t35, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI12_7[0], r0, r2\n\tst.1\tr1, r2\n\tadd\t4, r1, r2\n\tadd\t32, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI12_1[0], r0, r2\n\tsub.s!\t@CPI12_1[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI12_8[0], r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB12_7:\n\tld.1\t64, r1\n\tadd\t100, r1, r2\n\tadd\t@CPI12_5[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t68, r1, r2\n\tadd\t@CPI12_6[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t36, r1, r2\n\tadd\t38, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI12_7[0], r0, r2\n\tst.1\tr1, r2\n\tadd\t4, r1, r2\n\tadd\t32, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI12_1[0], r0, r2\n\tsub.s!\t@CPI12_1[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI12_8[0], r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.func_end12:\n\nfun_approve:\n.func_begin13:\n\tnop\tstack+=[4]\n\tcontext.caller\tr3\n\tand!\t@CPI13_0[0], r3, r4\n\tjump.eq\t@.BB13_1\n\tadd\tr2, r0, stack-[1]\n\tadd\tr3, r0, stack-[2]\n\tadd\tr1, r0, stack-[3]\n\tand!\t@CPI13_0[0], r1, r1\n\tadd\tr1, r0, stack-[4]\n\tjump.eq\t@.BB13_3\n\tst.1\t0, r4\n\tadd\t1, r0, r1\n\tst.1\t32, r1\n\tadd\t@CPI13_1[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI13_1[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI13_2[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB13_5\n\tld\tr1, r1\n\tadd\tstack-[4], r0, r2\n\tst.1\t0, r2\n\tst.1\t32, r1\n\tadd\t@CPI13_1[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI13_1[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI13_2[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB13_5\n\tld\tr1, r1\n\tadd\tstack-[1], r0, r2\n\tsstore\tr1, r2\n\tld.1\t64, r1\n\tst.1\tr1, r2\n\tadd\t@CPI13_1[0], r0, r2\n\tcontext.gas_left\tr3\n\tsub.s!\t@CPI13_1[0], r3, r4\n\tadd.ge\tr2, r0, r3\n\tsub.s!\t@CPI13_1[0], r1, r4\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tshl.s\t192, r3, r2\n\tor\tr2, r1, r1\n\tor\t@CPI13_3[0], r1, r1\n\tadd\t32781, r0, r2\n\tadd\t3, r0, r3\n\tadd\t@CPI13_4[0], r0, r4\n\tadd\tstack-[2], r0, r5\n\tadd\tstack-[3], r0, r6\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r1\n\tjump.eq\t@.BB13_5\n\tret\n.BB13_5:\n\tadd\tr0, r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB13_1:\n\tld.1\t64, r1\n\tadd\t100, r1, r2\n\tadd\t@CPI13_9[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t68, r1, r2\n\tadd\t@CPI13_10[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t36, r1, r2\n\tadd\t36, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI13_7[0], r0, r2\n\tst.1\tr1, r2\n\tadd\t4, r1, r2\n\tadd\t32, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI13_1[0], r0, r2\n\tsub.s!\t@CPI13_1[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI13_8[0], r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB13_3:\n\tld.1\t64, r1\n\tadd\t100, r1, r2\n\tadd\t@CPI13_5[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t68, r1, r2\n\tadd\t@CPI13_6[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t36, r1, r2\n\tadd\t34, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI13_7[0], r0, r2\n\tst.1\tr1, r2\n\tadd\t4, r1, r2\n\tadd\t32, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI13_1[0], r0, r2\n\tsub.s!\t@CPI13_1[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI13_8[0], r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.func_end13:\n\nfun_transferFrom:\n.func_begin14:\n\tnop\tstack+=[8]\n\tadd\tr3, r0, stack-[8]\n\tadd\tr2, r0, stack-[6]\n\tadd\tr1, r0, stack-[5]\n\tand\t@CPI14_0[0], r1, r1\n\tadd\tr1, r0, stack-[7]\n\tst.1\t0, r1\n\tadd\t1, r0, r1\n\tadd\tr1, r0, stack-[3]\n\tst.1\t32, r1\n\tadd\t@CPI14_1[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI14_1[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI14_2[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB14_1\n\tcontext.caller\tr2\n\tld\tr1, r1\n\tadd\tr2, r0, stack-[2]\n\tand\t@CPI14_0[0], r2, r2\n\tadd\tr2, r0, stack-[4]\n\tst.1\t0, r2\n\tst.1\t32, r1\n\tadd\t@CPI14_1[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI14_1[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI14_2[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB14_1\n\tld\tr1, r1\n\tsload\tr1, r2\n\tsub.s\t1, r0, r1\n\tsub!\tr2, r1, r1\n\tjump.eq\t@.BB14_5\n\tadd\tstack-[8], r0, r1\n\tsub!\tr2, r1, r1\n\tjump.lt\t@.BB14_16\n\tadd\tstack-[7], r0, r1\n\tsub!\tr1, r0, r1\n\tjump.eq\t@.BB14_18\n\tadd\tr2, r0, stack-[1]\n\tadd\tstack-[4], r0, r1\n\tsub!\tr1, r0, r1\n\tjump.eq\t@.BB14_20\n\tadd\tstack-[7], r0, r1\n\tst.1\t0, r1\n\tadd\tstack-[3], r0, r1\n\tst.1\t32, r1\n\tadd\t@CPI14_1[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI14_1[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI14_2[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB14_1\n\tld\tr1, r1\n\tadd\tstack-[4], r0, r2\n\tst.1\t0, r2\n\tst.1\t32, r1\n\tadd\t@CPI14_1[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI14_1[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI14_2[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB14_1\n\tadd\tstack-[8], r0, r2\n\tadd\tstack-[1], r0, r3\n\tsub\tr3, r2, r2\n\tld\tr1, r1\n\tsstore\tr1, r2\n\tld.1\t64, r1\n\tst.1\tr1, r2\n\tadd\t@CPI14_1[0], r0, r2\n\tcontext.gas_left\tr3\n\tsub.s!\t@CPI14_1[0], r3, r4\n\tadd.ge\tr2, r0, r3\n\tsub.s!\t@CPI14_1[0], r1, r4\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tshl.s\t192, r3, r2\n\tor\tr2, r1, r1\n\tor\t@CPI14_3[0], r1, r1\n\tadd\t32781, r0, r2\n\tadd\t3, r0, r3\n\tadd\t@CPI14_4[0], r0, r4\n\tadd\tstack-[5], r0, r5\n\tadd\tstack-[2], r0, r6\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r1\n\tjump.ne\t@.BB14_7\n\tjump\t@.BB14_1\n.BB14_5:\n\tadd\tstack-[7], r0, r1\n\tsub!\tr1, r0, r1\n\tjump.eq\t@.BB14_6\n.BB14_7:\n\tadd\tstack-[6], r0, r1\n\tand!\t@CPI14_0[0], r1, r1\n\tadd\tr1, r0, stack-[4]\n\tjump.eq\t@.BB14_8\n\tadd\tstack-[7], r0, r1\n\tst.1\t0, r1\n\tst.1\t32, r0\n\tadd\t@CPI14_1[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI14_1[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI14_2[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB14_1\n\tld\tr1, r1\n\tsload\tr1, r2\n\tadd\tstack-[8], r0, r1\n\tadd\tr2, r0, stack-[3]\n\tsub!\tr2, r1, r1\n\tjump.lt\t@.BB14_11\n\tadd\tstack-[7], r0, r1\n\tst.1\t0, r1\n\tst.1\t32, r0\n\tadd\t@CPI14_1[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI14_1[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI14_2[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB14_1\n\tadd\tstack-[8], r0, r2\n\tadd\tstack-[3], r0, r3\n\tsub\tr3, r2, r2\n\tld\tr1, r1\n\tsstore\tr1, r2\n\tadd\tstack-[4], r0, r1\n\tst.1\t0, r1\n\tst.1\t32, r0\n\tadd\t@CPI14_1[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI14_1[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI14_2[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB14_1\n\tld\tr1, r1\n\tsload\tr1, r2\n\tadd\tstack-[8], r0, r3\n\tadd\tr2, r3, r2\n\tsstore\tr1, r2\n\tld.1\t64, r1\n\tst.1\tr1, r3\n\tadd\t@CPI14_1[0], r0, r2\n\tcontext.gas_left\tr3\n\tsub.s!\t@CPI14_1[0], r3, r4\n\tadd.ge\tr2, r0, r3\n\tsub.s!\t@CPI14_1[0], r1, r4\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tshl.s\t192, r3, r2\n\tor\tr2, r1, r1\n\tor\t@CPI14_3[0], r1, r1\n\tadd\t32781, r0, r2\n\tadd\t3, r0, r3\n\tadd\t@CPI14_13[0], r0, r4\n\tadd\tstack-[5], r0, r5\n\tadd\tstack-[6], r0, r6\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r1\n\tjump.eq\t@.BB14_1\n\tret\n.BB14_1:\n\tadd\tr0, r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB14_8:\n\tld.1\t64, r1\n\tadd\t100, r1, r2\n\tadd\t@CPI14_16[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t68, r1, r2\n\tadd\t@CPI14_17[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t36, r1, r2\n\tadd\t35, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI14_7[0], r0, r2\n\tst.1\tr1, r2\n\tadd\t4, r1, r2\n\tadd\t32, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI14_1[0], r0, r2\n\tsub.s!\t@CPI14_1[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI14_8[0], r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB14_11:\n\tld.1\t64, r1\n\tadd\t100, r1, r2\n\tadd\t@CPI14_14[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t68, r1, r2\n\tadd\t@CPI14_15[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t36, r1, r2\n\tadd\t38, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI14_7[0], r0, r2\n\tst.1\tr1, r2\n\tadd\t4, r1, r2\n\tadd\t32, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI14_1[0], r0, r2\n\tsub.s!\t@CPI14_1[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI14_8[0], r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB14_16:\n\tld.1\t64, r1\n\tadd\t68, r1, r2\n\tadd\t@CPI14_11[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t36, r1, r2\n\tadd\t29, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI14_7[0], r0, r2\n\tst.1\tr1, r2\n\tadd\t4, r1, r2\n\tadd\t32, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI14_1[0], r0, r2\n\tsub.s!\t@CPI14_1[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI14_12[0], r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB14_18:\n\tld.1\t64, r1\n\tadd\t100, r1, r2\n\tadd\t@CPI14_9[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t68, r1, r2\n\tadd\t@CPI14_10[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t36, r1, r2\n\tadd\t36, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI14_7[0], r0, r2\n\tst.1\tr1, r2\n\tadd\t4, r1, r2\n\tadd\t32, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI14_1[0], r0, r2\n\tsub.s!\t@CPI14_1[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI14_8[0], r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB14_20:\n\tld.1\t64, r1\n\tadd\t100, r1, r2\n\tadd\t@CPI14_5[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t68, r1, r2\n\tadd\t@CPI14_6[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t36, r1, r2\n\tadd\t34, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI14_7[0], r0, r2\n\tst.1\tr1, r2\n\tadd\t4, r1, r2\n\tadd\t32, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI14_1[0], r0, r2\n\tsub.s!\t@CPI14_1[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI14_8[0], r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB14_6:\n\tld.1\t64, r1\n\tadd\t100, r1, r2\n\tadd\t@CPI14_18[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t68, r1, r2\n\tadd\t@CPI14_19[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t36, r1, r2\n\tadd\t37, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI14_7[0], r0, r2\n\tst.1\tr1, r2\n\tadd\t4, r1, r2\n\tadd\t32, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI14_1[0], r0, r2\n\tsub.s!\t@CPI14_1[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI14_8[0], r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.func_end14:\n\nfun_increaseAllowance:\n.func_begin15:\n\tnop\tstack+=[6]\n\tadd\tr2, r0, stack-[5]\n\tadd\tr1, r0, stack-[6]\n\tcontext.caller\tr1\n\tadd\tr1, r0, stack-[4]\n\tst.1\t0, r1\n\tadd\t1, r0, r1\n\tadd\tr1, r0, stack-[2]\n\tst.1\t32, r1\n\tadd\t@CPI15_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI15_0[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI15_1[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB15_1\n\tld\tr1, r1\n\tadd\tstack-[6], r0, r2\n\tand\t@CPI15_2[0], r2, r2\n\tadd\tr2, r0, stack-[3]\n\tst.1\t0, r2\n\tst.1\t32, r1\n\tadd\t@CPI15_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI15_0[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI15_1[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB15_1\n\tsub.s\t1, r0, r2\n\tadd\tstack-[5], r0, r3\n\txor\tr3, r2, r2\n\tld\tr1, r1\n\tsload\tr1, r3\n\tsub!\tr3, r2, r1\n\tjump.gt\t@.BB15_4\n\tadd\tstack-[4], r0, r1\n\tand!\t@CPI15_2[0], r1, r1\n\tjump.eq\t@.BB15_6\n\tadd\tr3, r0, stack-[1]\n\tadd\tstack-[3], r0, r2\n\tsub!\tr2, r0, r2\n\tjump.eq\t@.BB15_8\n\tst.1\t0, r1\n\tadd\tstack-[2], r0, r1\n\tst.1\t32, r1\n\tadd\t@CPI15_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI15_0[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI15_1[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB15_1\n\tld\tr1, r1\n\tadd\tstack-[3], r0, r2\n\tst.1\t0, r2\n\tst.1\t32, r1\n\tadd\t@CPI15_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI15_0[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI15_1[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB15_1\n\tadd\tstack-[5], r0, r2\n\tadd\tstack-[1], r0, r3\n\tadd\tr3, r2, r2\n\tld\tr1, r1\n\tsstore\tr1, r2\n\tld.1\t64, r1\n\tst.1\tr1, r2\n\tadd\t@CPI15_0[0], r0, r2\n\tcontext.gas_left\tr3\n\tsub.s!\t@CPI15_0[0], r3, r4\n\tadd.ge\tr2, r0, r3\n\tsub.s!\t@CPI15_0[0], r1, r4\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tshl.s\t192, r3, r2\n\tor\tr2, r1, r1\n\tor\t@CPI15_3[0], r1, r1\n\tadd\t32781, r0, r2\n\tadd\t3, r0, r3\n\tadd\t@CPI15_4[0], r0, r4\n\tadd\tstack-[4], r0, r5\n\tadd\tstack-[6], r0, r6\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r1\n\tjump.eq\t@.BB15_1\n\tret\n.BB15_1:\n\tadd\tr0, r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB15_4:\n\tadd\t@CPI15_11[0], r0, r1\n\tst.1\t0, r1\n\tadd\t17, r0, r1\n\tst.1\t4, r1\n\tadd\t@CPI15_12[0], r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB15_6:\n\tld.1\t64, r1\n\tadd\t100, r1, r2\n\tadd\t@CPI15_9[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t68, r1, r2\n\tadd\t@CPI15_10[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t36, r1, r2\n\tadd\t36, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI15_7[0], r0, r2\n\tst.1\tr1, r2\n\tadd\t4, r1, r2\n\tadd\t32, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI15_0[0], r0, r2\n\tsub.s!\t@CPI15_0[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI15_8[0], r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB15_8:\n\tld.1\t64, r1\n\tadd\t100, r1, r2\n\tadd\t@CPI15_5[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t68, r1, r2\n\tadd\t@CPI15_6[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t36, r1, r2\n\tadd\t34, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI15_7[0], r0, r2\n\tst.1\tr1, r2\n\tadd\t4, r1, r2\n\tadd\t32, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI15_0[0], r0, r2\n\tsub.s!\t@CPI15_0[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI15_8[0], r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.func_end15:\n\nfun_decreaseAllowance:\n.func_begin16:\n\tnop\tstack+=[6]\n\tadd\tr2, r0, stack-[5]\n\tadd\tr1, r0, stack-[6]\n\tcontext.caller\tr1\n\tadd\tr1, r0, stack-[4]\n\tst.1\t0, r1\n\tadd\t1, r0, r1\n\tadd\tr1, r0, stack-[2]\n\tst.1\t32, r1\n\tadd\t@CPI16_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI16_0[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI16_1[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB16_1\n\tld\tr1, r1\n\tadd\tstack-[6], r0, r2\n\tand\t@CPI16_2[0], r2, r2\n\tadd\tr2, r0, stack-[3]\n\tst.1\t0, r2\n\tst.1\t32, r1\n\tadd\t@CPI16_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI16_0[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI16_1[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB16_1\n\tld\tr1, r1\n\tsload\tr1, r2\n\tadd\tstack-[5], r0, r1\n\tsub!\tr2, r1, r1\n\tjump.lt\t@.BB16_4\n\tadd\tstack-[4], r0, r1\n\tand!\t@CPI16_2[0], r1, r1\n\tjump.eq\t@.BB16_6\n\tadd\tr2, r0, stack-[1]\n\tadd\tstack-[3], r0, r2\n\tsub!\tr2, r0, r2\n\tjump.eq\t@.BB16_8\n\tst.1\t0, r1\n\tadd\tstack-[2], r0, r1\n\tst.1\t32, r1\n\tadd\t@CPI16_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI16_0[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI16_1[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB16_1\n\tld\tr1, r1\n\tadd\tstack-[3], r0, r2\n\tst.1\t0, r2\n\tst.1\t32, r1\n\tadd\t@CPI16_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI16_0[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI16_1[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB16_1\n\tadd\tstack-[5], r0, r2\n\tadd\tstack-[1], r0, r3\n\tsub\tr3, r2, r2\n\tld\tr1, r1\n\tsstore\tr1, r2\n\tld.1\t64, r1\n\tst.1\tr1, r2\n\tadd\t@CPI16_0[0], r0, r2\n\tcontext.gas_left\tr3\n\tsub.s!\t@CPI16_0[0], r3, r4\n\tadd.ge\tr2, r0, r3\n\tsub.s!\t@CPI16_0[0], r1, r4\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tshl.s\t192, r3, r2\n\tor\tr2, r1, r1\n\tor\t@CPI16_3[0], r1, r1\n\tadd\t32781, r0, r2\n\tadd\t3, r0, r3\n\tadd\t@CPI16_4[0], r0, r4\n\tadd\tstack-[4], r0, r5\n\tadd\tstack-[6], r0, r6\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r1\n\tjump.eq\t@.BB16_1\n\tret\n.BB16_1:\n\tadd\tr0, r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB16_4:\n\tld.1\t64, r1\n\tadd\t100, r1, r2\n\tadd\t@CPI16_11[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t68, r1, r2\n\tadd\t@CPI16_12[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t36, r1, r2\n\tadd\t37, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI16_7[0], r0, r2\n\tst.1\tr1, r2\n\tadd\t4, r1, r2\n\tadd\t32, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI16_0[0], r0, r2\n\tsub.s!\t@CPI16_0[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI16_8[0], r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB16_6:\n\tld.1\t64, r1\n\tadd\t100, r1, r2\n\tadd\t@CPI16_9[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t68, r1, r2\n\tadd\t@CPI16_10[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t36, r1, r2\n\tadd\t36, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI16_7[0], r0, r2\n\tst.1\tr1, r2\n\tadd\t4, r1, r2\n\tadd\t32, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI16_0[0], r0, r2\n\tsub.s!\t@CPI16_0[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI16_8[0], r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB16_8:\n\tld.1\t64, r1\n\tadd\t100, r1, r2\n\tadd\t@CPI16_5[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t68, r1, r2\n\tadd\t@CPI16_6[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t36, r1, r2\n\tadd\t34, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI16_7[0], r0, r2\n\tst.1\tr1, r2\n\tadd\t4, r1, r2\n\tadd\t32, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI16_0[0], r0, r2\n\tsub.s!\t@CPI16_0[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI16_8[0], r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.func_end16:\n\n__farcall:\n.func_begin17:\n.tmp0:\n\tfar_call\tr1, r2, @.BB17_2\n.tmp1:\n\tadd\t1, r0, r2\n\tret\n.BB17_2:\n.tmp2:\n\tadd\tr0, r0, r2\n\tret\n.func_end17:\n\n__staticcall:\n.func_begin18:\n.tmp3:\n\tfar_call.static\tr1, r2, @.BB18_2\n.tmp4:\n\tadd\t1, r0, r2\n\tret\n.BB18_2:\n.tmp5:\n\tadd\tr0, r0, r2\n\tret\n.func_end18:\n\n\t.data\n\t.p2align\t5\ncalldatasize:\n\t.cell 0\n\n\t.p2align\t5\nptr_calldata:\n.cell\t0\n\n\t.note.GNU-stack\n\t.rodata\nCPI0_0:\nCPI1_1:\nCPI9_1:\nCPI10_1:\nCPI11_1:\nCPI12_1:\nCPI13_1:\nCPI14_1:\nCPI15_0:\nCPI16_0:\n\t.cell 4294967295\nCPI0_1:\nCPI7_1:\nCPI8_1:\n\t.cell 18446744073709551615\nCPI0_2:\nCPI3_0:\nCPI4_0:\nCPI5_0:\nCPI6_0:\n\t.cell -57896044618658097711785492504343953926634992332820282019728792003956564819968\nCPI0_3:\nCPI1_2:\nCPI12_3:\nCPI13_3:\nCPI14_3:\nCPI15_3:\nCPI16_3:\n\t.cell 904625697166532776746648320380374280103671757735618107014721178055227736064\nCPI0_4:\n\t.cell 53919893334301279589334030174039261352344891250716429051063678533632\nCPI0_5:\nCPI1_3:\nCPI7_2:\nCPI8_2:\nCPI15_11:\n\t.cell 35408467139433450592217433187231851964531694900788300625387963629091585785856\nCPI0_6:\nCPI1_4:\nCPI7_3:\nCPI8_3:\nCPI15_12:\n\t.cell 2852213850513516153367582212096\nCPI0_7:\n\t.cell 961581904\nCPI0_8:\n\t.cell 2757214934\nCPI0_9:\n\t.cell 2757214935\nCPI0_10:\n\t.cell 2835717307\nCPI0_11:\n\t.cell 3714247998\nCPI0_12:\n\t.cell 961581905\nCPI0_13:\n\t.cell 1889567281\nCPI0_14:\n\t.cell 2514000705\nCPI0_15:\n\t.cell 404098524\nCPI0_16:\n\t.cell 404098525\nCPI0_17:\n\t.cell 599290589\nCPI0_18:\n\t.cell 826074471\nCPI0_19:\n\t.cell 117300739\nCPI0_20:\n\t.cell 157198259\nCPI0_21:\n\t.cell 2535301200456458802993406410752\nCPI1_0:\n\t.cell 18446744073709551616\nCPI3_1:\nCPI4_1:\nCPI5_1:\nCPI6_1:\nCPI9_0:\nCPI10_0:\nCPI11_0:\nCPI12_0:\nCPI13_0:\nCPI14_0:\nCPI15_2:\nCPI16_2:\n\t.cell 1461501637330902918203684832716283019655932542975\nCPI7_0:\n\t.cell -27889059366240281169193357100633332908378892778709981755071813198463099602853\nCPI8_0:\n\t.cell -53278079350709166316280423202849322519190186591071851114874353210178472783461\nCPI9_2:\nCPI10_2:\nCPI11_2:\nCPI12_2:\nCPI13_2:\nCPI14_2:\nCPI15_1:\nCPI16_1:\n\t.cell 904625697166532776746648320380374280103671760270919307471179981048634146816\nCPI12_4:\nCPI14_13:\n\t.cell -15402802100530019096323380498944738953123845089667699673314898783681816316945\nCPI12_5:\nCPI14_14:\n\t.cell 44065838241030143116324720188876985940908656145555552347773292252211112312832\nCPI12_6:\nCPI14_15:\n\t.cell 31354931781638678607228669297131712859100820671745083778533502622993977909346\nCPI12_7:\nCPI13_7:\nCPI14_7:\nCPI15_7:\nCPI16_7:\n\t.cell 3963877391197344453575983046348115674221700746820753546331534351508065746944\nCPI12_8:\nCPI13_8:\nCPI14_8:\nCPI15_8:\nCPI16_8:\n\t.cell 10458117451882892562347801444352\nCPI12_9:\nCPI14_16:\n\t.cell 45887578820189300338443374388718498632482616163288499555830078344056365121536\nCPI12_10:\nCPI14_17:\n\t.cell 31354931781638678607228669297131712859126084785867252355217498662940140921970\nCPI12_11:\nCPI14_18:\n\t.cell 45433405612597180762055095701412804886438245671210399661410036396145969725440\nCPI12_12:\nCPI14_19:\n\t.cell 31354931781638678607228669297131712859107492772550336241160036866987736981860\nCPI13_4:\nCPI14_4:\nCPI15_4:\nCPI16_4:\n\t.cell -52305948261162578668367882225327028569797882979485679342215860919519743330011\nCPI13_5:\nCPI14_5:\nCPI15_5:\nCPI16_5:\n\t.cell 52219164999525148860834357634456956735281286572158918307284071279203377479680\nCPI13_6:\nCPI14_6:\nCPI15_6:\nCPI16_6:\n\t.cell 31354931781638678487916134672869638488806705378895508030211234510262059168357\nCPI13_9:\nCPI14_9:\nCPI15_9:\nCPI16_9:\n\t.cell 51742913093258732729005998692887265601192425265805909375210916622055285719040\nCPI13_10:\nCPI14_10:\nCPI15_10:\nCPI16_10:\n\t.cell 31354931781638678487916134672869638484047149969764982831501014746446650500196\nCPI14_11:\n\t.cell 31354931781638678538084197150757782427756587561754988975511141185730285404160\nCPI14_12:\n\t.cell 7922816251426433759354395033600\nCPI16_11:\n\t.cell 14690266658072097593480850647027335513285713462661904985951319567533531463680\nCPI16_12:\n\t.cell 31354931781638678506476475496475743842680577777870365728514456330491174612855\n","bytecode":{"object":"0002000000000002000700000000000200010000000103550000006001100270000001da0010019d0000008001000039000000400010043f00000001012001900000003a0000c13d0000000001000031000000040110008c000001a80000413d0000000101000367000000000101043b000000e001100270000001e10210009c0000008f0000a13d000001e20210009c000000b10000213d000001e60210009c000000dc0000613d000001e70210009c000000eb0000613d000001e80110009c000001a80000c13d0000000001000416000000000101004b000001a80000c13d000000040100008a0000000001100031000001dc02000041000000000301004b00000000030000190000000003024019000001dc01100197000000000401004b000000000200a019000001dc0110009c00000000010300190000000001026019000000000101004b000001a80000c13d076203700000040f0000000002010019000000400100043d000700000001001d076202bb0000040f00000007040000290000000001410049000001da02000041000001da0310009c0000000001028019000001da0340009c000000000204401900000040022002100000006001100210000000000121019f000007630001042e0000000001000416000000000101004b000001a80000c13d00000000020000310000001f01200039000000200a00008a0000000004a1016f000000400100043d0000000003140019000000000443004b00000000040000190000000104004039000001db0530009c000000890000213d0000000104400190000000890000c13d000000400030043f0000001f0320018f00000001040003670000000505200272000000580000613d000000000600001900000005076002100000000008710019000000000774034f000000000707043b00000000007804350000000106600039000000000756004b000000500000413d000000000603004b000000670000613d0000000505500210000000000454034f00000000055100190000000303300210000000000605043300000000063601cf000000000636022f000000000404043b0000010003300089000000000434022f00000000033401cf000000000363019f0000000000350435000001dc03000041000000400420008c00000000040000190000000004034019000001dc05200197000000000605004b000000000300a019000001dc0550009c000000000304c019000000000303004b000001a80000c13d0000000034010434000001db0540009c000001a80000213d000000000221001900000000041400190000001f05400039000001dc06000041000000000725004b00000000070000190000000007068019000001dc05500197000001dc08200197000000000985004b0000000006008019000000000585013f000001dc0550009c00000000050700190000000005066019000000000505004b000001a80000c13d0000000005040433000001db0650009c000001620000a13d000001df0100004100000000001004350000004101000039000000040010043f000001e0010000410000076400010430000001e90210009c000000c90000a13d000001ea0210009c000000f90000613d000001eb0210009c000001140000613d000001ec0110009c000001a80000c13d0000000001000416000000000101004b000001a80000c13d000000040100008a0000000001100031000001dc02000041000000000301004b00000000030000190000000003024019000001dc01100197000000000401004b000000000200a019000001dc0110009c00000000010300190000000001026019000000000101004b000001a80000c13d000000400100043d00000012020000390000000000210435000001da02000041000001da0310009c00000000010280190000004001100210000001ef011001c7000007630001042e000001e30210009c000001230000613d000001e40210009c000001320000613d000001e50110009c000001a80000c13d0000000001000416000000000101004b000001a80000c13d00000000010000310762031b0000040f000700000002001d076203ac0000040f0000000702000029076203be0000040f000000000101041a000000400200043d0000000000120435000001da01000041000001da0320009c00000000010240190000004001100210000001ef011001c7000007630001042e000001ed0210009c000001410000613d000001ee0110009c000001a80000c13d0000000001000416000000000101004b000001a80000c13d0000000001000031076202d40000040f076204780000040f0000000101000039000000400200043d0000000000120435000001da01000041000001da0320009c00000000010240190000004001100210000001ef011001c7000007630001042e0000000001000416000000000101004b000001a80000c13d0000000001000031076202d40000040f0762061b0000040f0000000101000039000000400200043d0000000000120435000001da01000041000001da0320009c00000000010240190000004001100210000001ef011001c7000007630001042e0000000001000416000000000101004b000001a80000c13d0000000001000031076203060000040f076203cf0000040f000000400200043d0000000000120435000001da01000041000001da0320009c00000000010240190000004001100210000001ef011001c7000007630001042e0000000001000416000000000101004b000001a80000c13d000000040100008a0000000001100031000001dc02000041000000000301004b00000000030000190000000003024019000001dc01100197000000000401004b000000000200a019000001dc0110009c00000000010300190000000001026019000000000101004b000001a80000c13d0000000201000039000000000101041a000000400200043d0000000000120435000001da01000041000001da0320009c00000000010240190000004001100210000001ef011001c7000007630001042e0000000001000416000000000101004b000001a80000c13d0000000001000031076202eb0000040f076204e10000040f0000000101000039000000400200043d0000000000120435000001da01000041000001da0320009c00000000010240190000004001100210000001ef011001c7000007630001042e0000000001000416000000000101004b000001a80000c13d0000000001000031076202d40000040f076206b30000040f0000000101000039000000400200043d0000000000120435000001da01000041000001da0320009c00000000010240190000004001100210000001ef011001c7000007630001042e0000000001000416000000000101004b000001a80000c13d0000000001000031076202d40000040f076203e10000040f0000000101000039000000400200043d0000000000120435000001da01000041000001da0320009c00000000010240190000004001100210000001ef011001c7000007630001042e0000000001000416000000000101004b000001a80000c13d000000040100008a0000000001100031000001dc02000041000000000301004b00000000030000190000000003024019000001dc01100197000000000401004b000000000200a019000001dc0110009c00000000010300190000000001026019000000000101004b000001a80000c13d076203340000040f0000000002010019000000400100043d000700000001001d076202bb0000040f00000007040000290000000001410049000001da02000041000001da0310009c0000000001028019000001da0340009c000000000204401900000040022002100000006001100210000000000121019f000007630001042e0000003f065000390000000006a6016f000000400b00043d00000000066b00190000000007b6004b00000000070000190000000107004039000001db0860009c000000890000213d0000000107700190000000890000c13d000000400060043f000000000c5b043600000020065000390000000007460019000000000727004b000001a80000213d000000000705004b000001810000613d000000000700001900000020077000390000000008b70019000000000947001900000000090904330000000000980435000000000857004b000001760000413d000000000457004b000001810000a13d00000000046b001900000000000404350000000003030433000001db0430009c000001a80000213d00000000011300190000001f03100039000001dc04000041000000000523004b00000000050000190000000005048019000001dc03300197000001dc06200197000000000763004b0000000004008019000000000363013f000001dc0330009c00000000030500190000000003046019000000000303004b000001a80000c13d0000000003010433000001db0430009c000000890000213d0000003f043000390000000004a4016f000000400700043d0000000004470019000000000574004b00000000050000190000000105004039000001db0640009c000000890000213d0000000105500190000000890000c13d000000400040043f000000000037043500000020043000390000000005140019000000000225004b000001aa0000a13d0000000001000019000007640001043000040000000c001d00070000000b001d00050000000a001d000000000203004b000001bb0000613d000000000200001900000020022000390000000005720019000000000612001900000000060604330000000000650435000000000532004b000001b00000413d000000000132004b000001bb0000a13d0000000001470019000000000001043500000007010000290000000001010433000600000001001d000001db0110009c000000890000213d000100000007001d0000000301000039000300000001001d000000000101041a000000010210019000000001011002700000007f0310018f0000000001036019000200000001001d0000001f0110008c00000000010000190000000101002039000000010110018f000000000112004b000001d50000613d000001df0100004100000000001004350000002201000039000000040010043f000001e00100004100000764000104300000000201000029000000200110008c000001f50000413d00000003010000290000000000100435000001da010000410000000002000414000001da0320009c0000000001024019000000c001100210000001dd011001c700008010020000390762075d0000040f0000000102200190000001a80000613d00000006030000290000001f023000390000000502200270000000200330008c0000000002004019000000000301043b00000002010000290000001f01100039000000050110027000000000011300190000000002230019000000000312004b000001f50000813d000000000002041b0000000102200039000000000312004b000001f10000413d00000006010000290000001f0110008c000002270000a13d00000003010000290000000000100435000001da010000410000000002000414000001da0320009c0000000001024019000000c001100210000001dd011001c700008010020000390762075d0000040f000000010220019000000005020000290000000706000029000001a80000613d000000060300002900000000032301700000002002000039000000000101043b000002150000613d0000002002000039000000000400001900000000056200190000000005050433000000000051041b000000200220003900000001011000390000002004400039000000000534004b0000020d0000413d0000000604000029000000000343004b000002230000813d00000006030000290000000303300210000000f80330018f000000010400008a000000000334022f000000000343013f000000070400002900000000024200190000000002020433000000000232016f000000000021041b000000010100003900000006020000290000000102200210000002340000013d0000000601000029000000000101004b00000000010000190000022d0000613d0000000401000029000000000101043300000006040000290000000302400210000000010300008a000000000223022f000000000232013f000000000221016f0000000101400210000000000112019f0000000302000029000000000012041b00000001010000290762023e0000040f000000200100003900000100001004430000012000000443000001de01000041000007630001042e00050000000000020000000075010434000001f00250009c000002ad0000813d0000000404000039000000000304041a000000010230019000000001063002700000007f0360018f00000000060360190000001f0360008c00000000030000190000000103002039000000010330018f000000000232004b000002b30000c13d000300000001001d000000200160008c000500000004001d000400000005001d000002730000413d000100000006001d000200000007001d0000000000400435000001da010000410000000002000414000001da0320009c0000000001024019000000c001100210000001dd011001c700008010020000390762075d0000040f0000000102200190000002b90000613d00000004050000290000001f025000390000000502200270000000200350008c0000000002004019000000000301043b00000001010000290000001f01100039000000050110027000000000011300190000000002230019000000000312004b00000005040000290000000207000029000002730000813d000000000002041b0000000102200039000000000312004b0000026f0000413d0000001f0150008c000002a00000a13d0000000000400435000001da010000410000000002000414000001da0320009c0000000001024019000000c001100210000001dd011001c700008010020000390762075d0000040f0000000102200190000002b90000613d000000200200008a000000040600002900000000032601700000002002000039000000000101043b0000000307000029000002910000613d0000002002000039000000000400001900000000057200190000000005050433000000000051041b000000200220003900000001011000390000002004400039000000000534004b000002890000413d000000000363004b0000029c0000813d0000000303600210000000f80330018f000000010400008a000000000334022f000000000343013f00000000027200190000000002020433000000000232016f000000000021041b000000010160021000000001011001bf0000000504000029000002ab0000013d000000000105004b0000000001000019000002ab0000613d0000000301500210000000010200008a000000000112022f000000000121013f0000000002070433000000000112016f0000000102500210000000000121019f000000000014041b000000000001042d000001df0100004100000000001004350000004101000039000000040010043f000001e0010000410000076400010430000001df0100004100000000001004350000002201000039000000040010043f000001e0010000410000076400010430000000000100001900000764000104300000002003000039000000000431043600000000030204330000000000340435000000000403004b0000004001100039000002cf0000613d000000000400001900000000054100190000002004400039000000000624001900000000060604330000000000650435000000000534004b000002c30000413d000000000234004b000002cf0000a13d00000000023100190000000000020435000002cf0000013d0000001f02300039000000200300008a000000000232016f0000000001210019000000000001042d000000040110008a000001dc020000410000003f0310008c00000000030000190000000003022019000001dc01100197000000000401004b0000000002008019000001dc0110009c00000000010300190000000001026019000000000101004b000002e90000613d00000001020003670000000401200370000000000101043b000001f10310009c000002e90000213d0000002402200370000000000202043b000000000001042d00000000010000190000076400010430000000040110008a000001dc020000410000005f0310008c00000000030000190000000003022019000001dc01100197000000000401004b0000000002008019000001dc0110009c00000000010300190000000001026019000000000101004b000003040000613d00000001030003670000000401300370000000000101043b000001f10210009c000003040000213d0000002402300370000000000202043b000001f10420009c000003040000213d0000004403300370000000000303043b000000000001042d00000000010000190000076400010430000000040110008a000001dc020000410000001f0310008c00000000030000190000000003022019000001dc01100197000000000401004b0000000002008019000001dc0110009c00000000010300190000000001026019000000000101004b000003190000613d00000004010000390000000101100367000000000101043b000001f10210009c000003190000213d000000000001042d00000000010000190000076400010430000000040110008a000001dc020000410000003f0310008c00000000030000190000000003022019000001dc01100197000000000401004b0000000002008019000001dc0110009c00000000010300190000000001026019000000000101004b000003320000613d00000001020003670000000401200370000000000101043b000001f10310009c000003320000213d0000002402200370000000000202043b000001f10320009c000003320000213d000000000001042d000000000100001900000764000104300000000305000039000000000405041a000000010640019000000001014002700000007f0210018f000000000201c0190000001f0120008c00000000010000190000000101002039000000010110018f000000000116004b000003640000c13d000000400100043d0000000003210436000000000606004b000003490000c13d000001000200008a000000000224016f000000000023043500000040040000390000035a0000013d00000000005004350000002004000039000000000502004b0000035a0000613d000001f204000041000000000600001900000000050600190000000006350019000000000704041a000000000076043500000001044000390000002006500039000000000726004b0000034f0000413d0000005f02500039000000200300008a000000000432016f0000000002140019000000000342004b00000000030000190000000103004039000001db0420009c0000036a0000213d00000001033001900000036a0000c13d000000400020043f000000000001042d000001df0100004100000000001004350000002201000039000000040010043f000001e0010000410000076400010430000001df0100004100000000001004350000004101000039000000040010043f000001e00100004100000764000104300000000405000039000000000405041a000000010640019000000001014002700000007f0210018f000000000201c0190000001f0120008c00000000010000190000000101002039000000010110018f000000000116004b000003a00000c13d000000400100043d0000000003210436000000000606004b000003850000c13d000001000200008a000000000224016f00000000002304350000004004000039000003960000013d00000000005004350000002004000039000000000502004b000003960000613d000001f304000041000000000600001900000000050600190000000006350019000000000704041a000000000076043500000001044000390000002006500039000000000726004b0000038b0000413d0000005f02500039000000200300008a000000000432016f0000000002140019000000000342004b00000000030000190000000103004039000001db0420009c000003a60000213d0000000103300190000003a60000c13d000000400020043f000000000001042d000001df0100004100000000001004350000002201000039000000040010043f000001e0010000410000076400010430000001df0100004100000000001004350000004101000039000000040010043f000001e0010000410000076400010430000001f10110019700000000001004350000000101000039000000200010043f000001da010000410000000002000414000001da0320009c0000000001024019000000c001100210000001f4011001c700008010020000390762075d0000040f0000000102200190000003bc0000613d000000000101043b000000000001042d00000000010000190000076400010430000001f1022001970000000000200435000000200010043f000001da010000410000000002000414000001da0320009c0000000001024019000000c001100210000001f4011001c700008010020000390762075d0000040f0000000102200190000003cd0000613d000000000101043b000000000001042d00000000010000190000076400010430000001f1011001970000000000100435000000200000043f000001da010000410000000002000414000001da0320009c0000000001024019000000c001100210000001f4011001c700008010020000390762075d0000040f0000000102200190000003df0000613d000000000101043b000000000101041a000000000001042d000000000100001900000764000104300006000000000002000600000002001d0000000002000411000001f103200198000004390000613d000200000002001d000300000001001d000001f101100198000500000001001d0000044e0000613d000400000003001d0000000000300435000000200000043f000001da010000410000000002000414000001da0320009c0000000001024019000000c001100210000001f4011001c700008010020000390762075d0000040f0000000102200190000004370000613d000000000101043b000000000201041a0000000601000029000100000002001d000000000112004b000004630000413d00000004010000290000000000100435000000200000043f000001da010000410000000002000414000001da0320009c0000000001024019000000c001100210000001f4011001c700008010020000390762075d0000040f0000000102200190000004370000613d000000060200002900000001030000290000000002230049000000000101043b000000000021041b00000005010000290000000000100435000000200000043f000001da010000410000000002000414000001da0320009c0000000001024019000000c001100210000001f4011001c700008010020000390762075d0000040f0000000102200190000004370000613d000000000101043b000000000201041a00000006030000290000000002320019000000000021041b000000400100043d0000000000310435000001da020000410000000003000414000001da0430009c0000000003028019000001da0410009c00000000010280190000004001100210000000c002300210000000000112019f000001dd011001c70000800d020000390000000303000039000001f50400004100000002050000290000000306000029076207580000040f0000000101200190000004370000613d000000000001042d00000000010000190000076400010430000000400100043d0000006402100039000001fc0300004100000000003204350000004402100039000001fd030000410000000000320435000000240210003900000025030000390000000000320435000001f8020000410000000000210435000000040210003900000020030000390000000000320435000001da02000041000001da0310009c00000000010280190000004001100210000001f9011001c70000076400010430000000400100043d0000006402100039000001fa0300004100000000003204350000004402100039000001fb030000410000000000320435000000240210003900000023030000390000000000320435000001f8020000410000000000210435000000040210003900000020030000390000000000320435000001da02000041000001da0310009c00000000010280190000004001100210000001f9011001c70000076400010430000000400100043d0000006402100039000001f60300004100000000003204350000004402100039000001f7030000410000000000320435000000240210003900000026030000390000000000320435000001f8020000410000000000210435000000040210003900000020030000390000000000320435000001da02000041000001da0310009c00000000010280190000004001100210000001f9011001c7000007640001043000040000000000020000000003000411000001f104300198000004b70000613d000100000002001d000200000003001d000300000001001d000001f101100198000400000001001d000004cc0000613d00000000004004350000000101000039000000200010043f000001da010000410000000002000414000001da0320009c0000000001024019000000c001100210000001f4011001c700008010020000390762075d0000040f0000000102200190000004b50000613d000000000101043b00000004020000290000000000200435000000200010043f000001da010000410000000002000414000001da0320009c0000000001024019000000c001100210000001f4011001c700008010020000390762075d0000040f0000000102200190000004b50000613d000000000101043b0000000102000029000000000021041b000000400100043d0000000000210435000001da020000410000000003000414000001da0430009c0000000003028019000001da0410009c00000000010280190000004001100210000000c002300210000000000112019f000001dd011001c70000800d020000390000000303000039000001fe0400004100000002050000290000000306000029076207580000040f0000000101200190000004b50000613d000000000001042d00000000010000190000076400010430000000400100043d000000640210003900000201030000410000000000320435000000440210003900000202030000410000000000320435000000240210003900000024030000390000000000320435000001f8020000410000000000210435000000040210003900000020030000390000000000320435000001da02000041000001da0310009c00000000010280190000004001100210000001f9011001c70000076400010430000000400100043d0000006402100039000001ff030000410000000000320435000000440210003900000200030000410000000000320435000000240210003900000022030000390000000000320435000001f8020000410000000000210435000000040210003900000020030000390000000000320435000001da02000041000001da0310009c00000000010280190000004001100210000001f9011001c700000764000104300008000000000002000800000003001d000600000002001d000500000001001d000001f101100197000700000001001d00000000001004350000000101000039000300000001001d000000200010043f000001da010000410000000002000414000001da0320009c0000000001024019000000c001100210000001f4011001c700008010020000390762075d0000040f00000001022001900000059e0000613d0000000002000411000000000101043b000200000002001d000001f102200197000400000002001d0000000000200435000000200010043f000001da010000410000000002000414000001da0320009c0000000001024019000000c001100210000001f4011001c700008010020000390762075d0000040f00000001022001900000059e0000613d000000000101043b000000000201041a000000010100008a000000000112004b0000054b0000613d0000000801000029000000000112004b000005ca0000413d0000000701000029000000000101004b000005dc0000613d000100000002001d0000000401000029000000000101004b000005f10000613d000000070100002900000000001004350000000301000029000000200010043f000001da010000410000000002000414000001da0320009c0000000001024019000000c001100210000001f4011001c700008010020000390762075d0000040f00000001022001900000059e0000613d000000000101043b00000004020000290000000000200435000000200010043f000001da010000410000000002000414000001da0320009c0000000001024019000000c001100210000001f4011001c700008010020000390762075d0000040f00000001022001900000059e0000613d000000080200002900000001030000290000000002230049000000000101043b000000000021041b000000400100043d0000000000210435000001da020000410000000003000414000001da0430009c0000000003028019000001da0410009c00000000010280190000004001100210000000c002300210000000000112019f000001dd011001c70000800d020000390000000303000039000001fe0400004100000005050000290000000206000029076207580000040f00000001012001900000054e0000c13d0000059e0000013d0000000701000029000000000101004b000006060000613d0000000601000029000001f101100198000400000001001d000005a00000613d00000007010000290000000000100435000000200000043f000001da010000410000000002000414000001da0320009c0000000001024019000000c001100210000001f4011001c700008010020000390762075d0000040f00000001022001900000059e0000613d000000000101043b000000000201041a0000000801000029000300000002001d000000000112004b000005b50000413d00000007010000290000000000100435000000200000043f000001da010000410000000002000414000001da0320009c0000000001024019000000c001100210000001f4011001c700008010020000390762075d0000040f00000001022001900000059e0000613d000000080200002900000003030000290000000002230049000000000101043b000000000021041b00000004010000290000000000100435000000200000043f000001da010000410000000002000414000001da0320009c0000000001024019000000c001100210000001f4011001c700008010020000390762075d0000040f00000001022001900000059e0000613d000000000101043b000000000201041a00000008030000290000000002320019000000000021041b000000400100043d0000000000310435000001da020000410000000003000414000001da0430009c0000000003028019000001da0410009c00000000010280190000004001100210000000c002300210000000000112019f000001dd011001c70000800d020000390000000303000039000001f50400004100000005050000290000000606000029076207580000040f00000001012001900000059e0000613d000000000001042d00000000010000190000076400010430000000400100043d0000006402100039000001fa0300004100000000003204350000004402100039000001fb030000410000000000320435000000240210003900000023030000390000000000320435000001f8020000410000000000210435000000040210003900000020030000390000000000320435000001da02000041000001da0310009c00000000010280190000004001100210000001f9011001c70000076400010430000000400100043d0000006402100039000001f60300004100000000003204350000004402100039000001f7030000410000000000320435000000240210003900000026030000390000000000320435000001f8020000410000000000210435000000040210003900000020030000390000000000320435000001da02000041000001da0310009c00000000010280190000004001100210000001f9011001c70000076400010430000000400100043d00000044021000390000020303000041000000000032043500000024021000390000001d030000390000000000320435000001f8020000410000000000210435000000040210003900000020030000390000000000320435000001da02000041000001da0310009c0000000001028019000000400110021000000204011001c70000076400010430000000400100043d000000640210003900000201030000410000000000320435000000440210003900000202030000410000000000320435000000240210003900000024030000390000000000320435000001f8020000410000000000210435000000040210003900000020030000390000000000320435000001da02000041000001da0310009c00000000010280190000004001100210000001f9011001c70000076400010430000000400100043d0000006402100039000001ff030000410000000000320435000000440210003900000200030000410000000000320435000000240210003900000022030000390000000000320435000001f8020000410000000000210435000000040210003900000020030000390000000000320435000001da02000041000001da0310009c00000000010280190000004001100210000001f9011001c70000076400010430000000400100043d0000006402100039000001fc0300004100000000003204350000004402100039000001fd030000410000000000320435000000240210003900000025030000390000000000320435000001f8020000410000000000210435000000040210003900000020030000390000000000320435000001da02000041000001da0310009c00000000010280190000004001100210000001f9011001c700000764000104300006000000000002000500000002001d000600000001001d0000000001000411000400000001001d00000000001004350000000101000039000200000001001d000000200010043f000001da010000410000000002000414000001da0320009c0000000001024019000000c001100210000001f4011001c700008010020000390762075d0000040f0000000102200190000006810000613d000000000101043b0000000602000029000001f102200197000300000002001d0000000000200435000000200010043f000001da010000410000000002000414000001da0320009c0000000001024019000000c001100210000001f4011001c700008010020000390762075d0000040f0000000102200190000006810000613d000000010200008a0000000503000029000000000223013f000000000101043b000000000301041a000000000123004b000006830000213d0000000401000029000001f101100198000006890000613d000100000003001d0000000302000029000000000202004b0000069e0000613d00000000001004350000000201000029000000200010043f000001da010000410000000002000414000001da0320009c0000000001024019000000c001100210000001f4011001c700008010020000390762075d0000040f0000000102200190000006810000613d000000000101043b00000003020000290000000000200435000000200010043f000001da010000410000000002000414000001da0320009c0000000001024019000000c001100210000001f4011001c700008010020000390762075d0000040f0000000102200190000006810000613d000000050200002900000001030000290000000002230019000000000101043b000000000021041b000000400100043d0000000000210435000001da020000410000000003000414000001da0430009c0000000003028019000001da0410009c00000000010280190000004001100210000000c002300210000000000112019f000001dd011001c70000800d020000390000000303000039000001fe0400004100000004050000290000000606000029076207580000040f0000000101200190000006810000613d000000000001042d00000000010000190000076400010430000001df0100004100000000001004350000001101000039000000040010043f000001e0010000410000076400010430000000400100043d000000640210003900000201030000410000000000320435000000440210003900000202030000410000000000320435000000240210003900000024030000390000000000320435000001f8020000410000000000210435000000040210003900000020030000390000000000320435000001da02000041000001da0310009c00000000010280190000004001100210000001f9011001c70000076400010430000000400100043d0000006402100039000001ff030000410000000000320435000000440210003900000200030000410000000000320435000000240210003900000022030000390000000000320435000001f8020000410000000000210435000000040210003900000020030000390000000000320435000001da02000041000001da0310009c00000000010280190000004001100210000001f9011001c700000764000104300006000000000002000500000002001d000600000001001d0000000001000411000400000001001d00000000001004350000000101000039000200000001001d000000200010043f000001da010000410000000002000414000001da0320009c0000000001024019000000c001100210000001f4011001c700008010020000390762075d0000040f0000000102200190000007170000613d000000000101043b0000000602000029000001f102200197000300000002001d0000000000200435000000200010043f000001da010000410000000002000414000001da0320009c0000000001024019000000c001100210000001f4011001c700008010020000390762075d0000040f0000000102200190000007170000613d000000000101043b000000000201041a0000000501000029000000000112004b000007190000413d0000000401000029000001f1011001980000072e0000613d000100000002001d0000000302000029000000000202004b000007430000613d00000000001004350000000201000029000000200010043f000001da010000410000000002000414000001da0320009c0000000001024019000000c001100210000001f4011001c700008010020000390762075d0000040f0000000102200190000007170000613d000000000101043b00000003020000290000000000200435000000200010043f000001da010000410000000002000414000001da0320009c0000000001024019000000c001100210000001f4011001c700008010020000390762075d0000040f0000000102200190000007170000613d000000050200002900000001030000290000000002230049000000000101043b000000000021041b000000400100043d0000000000210435000001da020000410000000003000414000001da0430009c0000000003028019000001da0410009c00000000010280190000004001100210000000c002300210000000000112019f000001dd011001c70000800d020000390000000303000039000001fe0400004100000004050000290000000606000029076207580000040f0000000101200190000007170000613d000000000001042d00000000010000190000076400010430000000400100043d000000640210003900000205030000410000000000320435000000440210003900000206030000410000000000320435000000240210003900000025030000390000000000320435000001f8020000410000000000210435000000040210003900000020030000390000000000320435000001da02000041000001da0310009c00000000010280190000004001100210000001f9011001c70000076400010430000000400100043d000000640210003900000201030000410000000000320435000000440210003900000202030000410000000000320435000000240210003900000024030000390000000000320435000001f8020000410000000000210435000000040210003900000020030000390000000000320435000001da02000041000001da0310009c00000000010280190000004001100210000001f9011001c70000076400010430000000400100043d0000006402100039000001ff030000410000000000320435000000440210003900000200030000410000000000320435000000240210003900000022030000390000000000320435000001f8020000410000000000210435000000040210003900000020030000390000000000320435000001da02000041000001da0310009c00000000010280190000004001100210000001f9011001c700000764000104300000075b002104210000000102000039000000000001042d0000000002000019000000000001042d00000760002104230000000102000039000000000001042d0000000002000019000000000001042d0000076200000432000007630001042e000007640001043000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000ffffffff000000000000000000000000000000000000000000000000ffffffffffffffff8000000000000000000000000000000000000000000000000000000000000000020000000000000000000000000000000000002000000000000000000000000000000002000000000000000000000000000000400000010000000000000000004e487b71000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000024000000000000000000000000000000000000000000000000000000000000000000000000000000003950935000000000000000000000000000000000000000000000000000000000a457c2d600000000000000000000000000000000000000000000000000000000a457c2d700000000000000000000000000000000000000000000000000000000a9059cbb00000000000000000000000000000000000000000000000000000000dd62ed3e00000000000000000000000000000000000000000000000000000000395093510000000000000000000000000000000000000000000000000000000070a082310000000000000000000000000000000000000000000000000000000095d89b410000000000000000000000000000000000000000000000000000000018160ddc0000000000000000000000000000000000000000000000000000000018160ddd0000000000000000000000000000000000000000000000000000000023b872dd00000000000000000000000000000000000000000000000000000000313ce5670000000000000000000000000000000000000000000000000000000006fdde0300000000000000000000000000000000000000000000000000000000095ea7b300000000000000000000000000000000000000200000000000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000ffffffffffffffffffffffffffffffffffffffffc2575a0e9e593c00f959f8c92f12db2869c3395a3b0502d05e2516446f71f85b8a35acfbc15ff81a39ae7d344fd709f28e8600b4aa8c65c6b64bfe7fe36bd19b0200000000000000000000000000000000000040000000000000000000000000ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef616c616e6365000000000000000000000000000000000000000000000000000045524332303a207472616e7366657220616d6f756e742065786365656473206208c379a0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000084000000000000000000000000657373000000000000000000000000000000000000000000000000000000000045524332303a207472616e7366657220746f20746865207a65726f2061646472647265737300000000000000000000000000000000000000000000000000000045524332303a207472616e736665722066726f6d20746865207a65726f2061648c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925737300000000000000000000000000000000000000000000000000000000000045524332303a20617070726f766520746f20746865207a65726f206164647265726573730000000000000000000000000000000000000000000000000000000045524332303a20617070726f76652066726f6d20746865207a65726f2061646445524332303a20696e73756666696369656e7420616c6c6f77616e63650000000000000000000000000000000000000000000064000000000000000000000000207a65726f00000000000000000000000000000000000000000000000000000045524332303a2064656372656173656420616c6c6f77616e63652062656c6f770000000000000000000000000000000000000000000000000000000000000000cb40d699fb0c2a0ba5b379b64b23602a9a4326db2f7d5d0b7ac365d56f3d2ce0"},"methodIdentifiers":{"allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","decimals()":"313ce567","decreaseAllowance(address,uint256)":"a457c2d7","increaseAllowance(address,uint256)":"39509351","name()":"06fdde03","symbol()":"95d89b41","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd"}},"irOptimized":"/*=====================================================*\n *                       WARNING                       *\n *  Solidity to Yul compilation is still EXPERIMENTAL  *\n *       It can result in LOSS OF FUNDS or worse       *\n *                !USE AT YOUR OWN RISK!               *\n *=====================================================*/\n\n/// @use-src 1:\"@openzeppelin/contracts/token/ERC20/ERC20.sol\", 2:\"@openzeppelin/contracts/token/ERC20/IERC20.sol\", 3:\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\", 7:\"@openzeppelin/contracts/utils/Context.sol\"\nobject \"ERC20_699\" {\n    code {\n        {\n            /// @src 1:1532:12844  \"contract ERC20 is Context, IERC20, IERC20Metadata {...\"\n            mstore(64, 128)\n            if callvalue() { revert(0, 0) }\n            let programSize := datasize(\"ERC20_699\")\n            let argSize := sub(codesize(), programSize)\n            let memoryDataOffset := allocate_memory(argSize)\n            codecopy(memoryDataOffset, programSize, argSize)\n            let _1 := add(memoryDataOffset, argSize)\n            if slt(sub(_1, memoryDataOffset), 64)\n            {\n                revert(/** @src -1:-1:-1 */ 0, 0)\n            }\n            /// @src 1:1532:12844  \"contract ERC20 is Context, IERC20, IERC20Metadata {...\"\n            let offset := mload(memoryDataOffset)\n            let _2 := sub(shl(64, 1), 1)\n            if gt(offset, _2)\n            {\n                revert(/** @src -1:-1:-1 */ 0, 0)\n            }\n            /// @src 1:1532:12844  \"contract ERC20 is Context, IERC20, IERC20Metadata {...\"\n            let value0 := abi_decode_string_fromMemory(add(memoryDataOffset, offset), _1)\n            let _3 := 32\n            let offset_1 := mload(add(memoryDataOffset, _3))\n            if gt(offset_1, _2)\n            {\n                revert(/** @src -1:-1:-1 */ 0, 0)\n            }\n            /// @src 1:1532:12844  \"contract ERC20 is Context, IERC20, IERC20Metadata {...\"\n            let _4 := abi_decode_string_fromMemory(add(memoryDataOffset, offset_1), _1)\n            let newLen := mload(value0)\n            if gt(newLen, _2) { panic_error_0x41() }\n            clean_up_bytearray_end_slots_string_storage(extract_byte_array_length(sload(/** @src 1:2046:2059  \"_name = name_\" */ 0x03)), /** @src 1:1532:12844  \"contract ERC20 is Context, IERC20, IERC20Metadata {...\" */ newLen)\n            let srcOffset := 0\n            srcOffset := _3\n            switch gt(newLen, 31)\n            case 1 {\n                let loopEnd := and(newLen, not(31))\n                let dstPtr := array_dataslot_string_storage_998()\n                let i := 0\n                for { } lt(i, loopEnd) { i := add(i, _3) }\n                {\n                    sstore(dstPtr, mload(add(value0, srcOffset)))\n                    dstPtr := add(dstPtr, 1)\n                    srcOffset := add(srcOffset, _3)\n                }\n                if lt(loopEnd, newLen)\n                {\n                    let lastValue := mload(add(value0, srcOffset))\n                    sstore(dstPtr, and(lastValue, not(shr(and(shl(/** @src 1:2046:2059  \"_name = name_\" */ 0x03, /** @src 1:1532:12844  \"contract ERC20 is Context, IERC20, IERC20Metadata {...\" */ newLen), 248), not(0)))))\n                }\n                sstore(/** @src 1:2046:2059  \"_name = name_\" */ 0x03, /** @src 1:1532:12844  \"contract ERC20 is Context, IERC20, IERC20Metadata {...\" */ add(shl(1, newLen), 1))\n            }\n            default {\n                let value := 0\n                if newLen\n                {\n                    value := mload(add(value0, srcOffset))\n                }\n                sstore(/** @src 1:2046:2059  \"_name = name_\" */ 0x03, /** @src 1:1532:12844  \"contract ERC20 is Context, IERC20, IERC20Metadata {...\" */ extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n            }\n            copy_byte_array_to_storage_from_string_to_string(_4)\n            let _5 := mload(64)\n            let _6 := datasize(\"ERC20_699_deployed\")\n            codecopy(_5, dataoffset(\"ERC20_699_deployed\"), _6)\n            return(_5, _6)\n        }\n        function panic_error_0x41()\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x41)\n            revert(0, 0x24)\n        }\n        function allocate_memory(size) -> memPtr\n        {\n            memPtr := mload(64)\n            let newFreePtr := add(memPtr, and(add(size, 31), not(31)))\n            if or(gt(newFreePtr, sub(shl(64, 1), 1)), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n            mstore(64, newFreePtr)\n        }\n        function abi_decode_string_fromMemory(offset, end) -> array\n        {\n            if iszero(slt(add(offset, 0x1f), end)) { revert(0, 0) }\n            let _1 := mload(offset)\n            if gt(_1, sub(shl(64, 1), 1)) { panic_error_0x41() }\n            let _2 := 0x20\n            let array_1 := allocate_memory(add(and(add(_1, 0x1f), not(31)), _2))\n            mstore(array_1, _1)\n            if gt(add(add(offset, _1), _2), end)\n            {\n                revert(/** @src -1:-1:-1 */ 0, 0)\n            }\n            /// @src 1:1532:12844  \"contract ERC20 is Context, IERC20, IERC20Metadata {...\"\n            let i := /** @src -1:-1:-1 */ 0\n            /// @src 1:1532:12844  \"contract ERC20 is Context, IERC20, IERC20Metadata {...\"\n            for { } lt(i, _1) { i := add(i, _2) }\n            {\n                mstore(add(add(array_1, i), _2), mload(add(add(offset, i), _2)))\n            }\n            if gt(i, _1)\n            {\n                mstore(add(add(array_1, _1), _2), /** @src -1:-1:-1 */ 0)\n            }\n            /// @src 1:1532:12844  \"contract ERC20 is Context, IERC20, IERC20Metadata {...\"\n            array := array_1\n        }\n        function extract_byte_array_length(data) -> length\n        {\n            length := shr(1, data)\n            let outOfPlaceEncoding := and(data, 1)\n            if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n            if eq(outOfPlaceEncoding, lt(length, 32))\n            {\n                mstore(0, shl(224, 0x4e487b71))\n                mstore(4, 0x22)\n                revert(0, 0x24)\n            }\n        }\n        function array_dataslot_string_storage_998() -> data\n        {\n            mstore(0, /** @src 1:2046:2059  \"_name = name_\" */ 0x03)\n            /// @src 1:1532:12844  \"contract ERC20 is Context, IERC20, IERC20Metadata {...\"\n            data := keccak256(0, 0x20)\n        }\n        function array_dataslot_string_storage() -> data\n        {\n            mstore(0, /** @src 1:2069:2086  \"_symbol = symbol_\" */ 0x04)\n            /// @src 1:1532:12844  \"contract ERC20 is Context, IERC20, IERC20Metadata {...\"\n            data := keccak256(0, 0x20)\n        }\n        function clean_up_bytearray_end_slots_string_storage(len, startIndex)\n        {\n            if gt(len, 31)\n            {\n                /// @src -1:-1:-1\n                let _1 := 0\n                /// @src 1:1532:12844  \"contract ERC20 is Context, IERC20, IERC20Metadata {...\"\n                mstore(/** @src -1:-1:-1 */ _1, /** @src 1:2046:2059  \"_name = name_\" */ 0x03)\n                /// @src 1:1532:12844  \"contract ERC20 is Context, IERC20, IERC20Metadata {...\"\n                let data := keccak256(/** @src -1:-1:-1 */ _1, /** @src 1:1532:12844  \"contract ERC20 is Context, IERC20, IERC20Metadata {...\" */ 0x20)\n                let deleteStart := add(data, shr(5, add(startIndex, 31)))\n                if lt(startIndex, 0x20) { deleteStart := data }\n                let _2 := add(data, shr(5, add(len, 31)))\n                let start := deleteStart\n                for { } lt(start, _2) { start := add(start, 1) }\n                {\n                    sstore(start, /** @src -1:-1:-1 */ _1)\n                }\n            }\n        }\n        /// @src 1:1532:12844  \"contract ERC20 is Context, IERC20, IERC20Metadata {...\"\n        function clean_up_bytearray_end_slots_string_storage_1902(len, startIndex)\n        {\n            if gt(len, 31)\n            {\n                /// @src -1:-1:-1\n                let _1 := 0\n                /// @src 1:1532:12844  \"contract ERC20 is Context, IERC20, IERC20Metadata {...\"\n                mstore(/** @src -1:-1:-1 */ _1, /** @src 1:2069:2086  \"_symbol = symbol_\" */ 0x04)\n                /// @src 1:1532:12844  \"contract ERC20 is Context, IERC20, IERC20Metadata {...\"\n                let data := keccak256(/** @src -1:-1:-1 */ _1, /** @src 1:1532:12844  \"contract ERC20 is Context, IERC20, IERC20Metadata {...\" */ 0x20)\n                let deleteStart := add(data, shr(5, add(startIndex, 31)))\n                if lt(startIndex, 0x20) { deleteStart := data }\n                let _2 := add(data, shr(5, add(len, 31)))\n                let start := deleteStart\n                for { } lt(start, _2) { start := add(start, 1) }\n                {\n                    sstore(start, /** @src -1:-1:-1 */ _1)\n                }\n            }\n        }\n        /// @src 1:1532:12844  \"contract ERC20 is Context, IERC20, IERC20Metadata {...\"\n        function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used\n        {\n            used := or(and(data, not(shr(shl(3, len), not(0)))), shl(1, len))\n        }\n        function copy_byte_array_to_storage_from_string_to_string(src)\n        {\n            let newLen := mload(src)\n            if gt(newLen, sub(shl(64, 1), 1)) { panic_error_0x41() }\n            clean_up_bytearray_end_slots_string_storage_1902(extract_byte_array_length(sload(/** @src 1:2069:2086  \"_symbol = symbol_\" */ 0x04)), /** @src 1:1532:12844  \"contract ERC20 is Context, IERC20, IERC20Metadata {...\" */ newLen)\n            let srcOffset := 0\n            let srcOffset_1 := 0x20\n            srcOffset := srcOffset_1\n            switch gt(newLen, 31)\n            case 1 {\n                let loopEnd := and(newLen, not(31))\n                let dstPtr := array_dataslot_string_storage()\n                let i := 0\n                for { } lt(i, loopEnd) { i := add(i, srcOffset_1) }\n                {\n                    sstore(dstPtr, mload(add(src, srcOffset)))\n                    dstPtr := add(dstPtr, 1)\n                    srcOffset := add(srcOffset, srcOffset_1)\n                }\n                if lt(loopEnd, newLen)\n                {\n                    let lastValue := mload(add(src, srcOffset))\n                    sstore(dstPtr, and(lastValue, not(shr(and(shl(3, newLen), 248), not(0)))))\n                }\n                sstore(/** @src 1:2069:2086  \"_symbol = symbol_\" */ 0x04, /** @src 1:1532:12844  \"contract ERC20 is Context, IERC20, IERC20Metadata {...\" */ add(shl(1, newLen), 1))\n            }\n            default {\n                let value := 0\n                if newLen\n                {\n                    value := mload(add(src, srcOffset))\n                }\n                sstore(/** @src 1:2069:2086  \"_symbol = symbol_\" */ 0x04, /** @src 1:1532:12844  \"contract ERC20 is Context, IERC20, IERC20Metadata {...\" */ extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n            }\n        }\n    }\n    /// @use-src 1:\"@openzeppelin/contracts/token/ERC20/ERC20.sol\", 7:\"@openzeppelin/contracts/utils/Context.sol\"\n    object \"ERC20_699_deployed\" {\n        code {\n            {\n                /// @src 1:1532:12844  \"contract ERC20 is Context, IERC20, IERC20Metadata {...\"\n                let _1 := 64\n                mstore(_1, 128)\n                if iszero(lt(calldatasize(), 4))\n                {\n                    let _2 := 0\n                    switch shr(224, calldataload(_2))\n                    case 0x06fdde03 {\n                        if callvalue() { revert(_2, _2) }\n                        abi_decode(calldatasize())\n                        let converted := copy_array_from_storage_to_memory_string_2479()\n                        let memPos := mload(_1)\n                        return(memPos, sub(abi_encode_string(memPos, converted), memPos))\n                    }\n                    case 0x095ea7b3 {\n                        if callvalue() { revert(_2, _2) }\n                        let param, param_1 := abi_decode_addresst_uint256(calldatasize())\n                        let ret := fun_approve(param, param_1)\n                        let memPos_1 := mload(_1)\n                        return(memPos_1, sub(abi_encode_bool(memPos_1, ret), memPos_1))\n                    }\n                    case 0x18160ddd {\n                        if callvalue() { revert(_2, _2) }\n                        abi_decode(calldatasize())\n                        let _3 := sload(/** @src 1:3342:3354  \"_totalSupply\" */ 0x02)\n                        /// @src 1:1532:12844  \"contract ERC20 is Context, IERC20, IERC20Metadata {...\"\n                        let memPos_2 := mload(_1)\n                        return(memPos_2, sub(abi_encode_uint256(memPos_2, _3), memPos_2))\n                    }\n                    case 0x23b872dd {\n                        if callvalue() { revert(_2, _2) }\n                        let param_2, param_3, param_4 := abi_decode_addresst_addresst_uint256(calldatasize())\n                        let ret_1 := fun_transferFrom(param_2, param_3, param_4)\n                        let memPos_3 := mload(_1)\n                        return(memPos_3, sub(abi_encode_bool(memPos_3, ret_1), memPos_3))\n                    }\n                    case 0x313ce567 {\n                        if callvalue() { revert(_2, _2) }\n                        abi_decode(calldatasize())\n                        let memPos_4 := mload(_1)\n                        return(memPos_4, sub(abi_encode_uint8(memPos_4), memPos_4))\n                    }\n                    case 0x39509351 {\n                        if callvalue() { revert(_2, _2) }\n                        let param_5, param_6 := abi_decode_addresst_uint256(calldatasize())\n                        let ret_2 := fun_increaseAllowance(param_5, param_6)\n                        let memPos_5 := mload(_1)\n                        return(memPos_5, sub(abi_encode_bool(memPos_5, ret_2), memPos_5))\n                    }\n                    case 0x70a08231 {\n                        if callvalue() { revert(_2, _2) }\n                        let ret_3 := fun_balanceOf(abi_decode_address(calldatasize()))\n                        let memPos_6 := mload(_1)\n                        return(memPos_6, sub(abi_encode_uint256(memPos_6, ret_3), memPos_6))\n                    }\n                    case 0x95d89b41 {\n                        if callvalue() { revert(_2, _2) }\n                        abi_decode(calldatasize())\n                        let converted_1 := copy_array_from_storage_to_memory_string()\n                        let memPos_7 := mload(_1)\n                        return(memPos_7, sub(abi_encode_string(memPos_7, converted_1), memPos_7))\n                    }\n                    case 0xa457c2d7 {\n                        if callvalue() { revert(_2, _2) }\n                        let param_7, param_8 := abi_decode_addresst_uint256(calldatasize())\n                        let ret_4 := fun_decreaseAllowance(param_7, param_8)\n                        let memPos_8 := mload(_1)\n                        return(memPos_8, sub(abi_encode_bool(memPos_8, ret_4), memPos_8))\n                    }\n                    case 0xa9059cbb {\n                        if callvalue() { revert(_2, _2) }\n                        let param_9, param_10 := abi_decode_addresst_uint256(calldatasize())\n                        let ret_5 := fun_transfer(param_9, param_10)\n                        let memPos_9 := mload(_1)\n                        return(memPos_9, sub(abi_encode_bool(memPos_9, ret_5), memPos_9))\n                    }\n                    case 0xdd62ed3e {\n                        if callvalue() { revert(_2, _2) }\n                        let param_11, param_12 := abi_decode_addresst_address(calldatasize())\n                        let _4 := sload(/** @src 1:4102:4129  \"_allowances[owner][spender]\" */ mapping_index_access_mapping_address_uint256_of_address(/** @src 1:4102:4120  \"_allowances[owner]\" */ mapping_index_access_mapping_address_uint256_of_address_2492(/** @src 1:1532:12844  \"contract ERC20 is Context, IERC20, IERC20Metadata {...\" */ param_11), param_12))\n                        let memPos_10 := mload(_1)\n                        return(memPos_10, sub(abi_encode_uint256(memPos_10, _4), memPos_10))\n                    }\n                }\n                revert(0, 0)\n            }\n            function abi_decode(dataEnd)\n            {\n                if slt(add(dataEnd, not(3)), 0) { revert(0, 0) }\n            }\n            function array_storeLengthForEncoding_string(pos, length) -> updated_pos\n            {\n                mstore(pos, length)\n                updated_pos := add(pos, 0x20)\n            }\n            function abi_encode_string(headStart, value0) -> tail\n            {\n                let _1 := 32\n                mstore(headStart, _1)\n                let length := mload(value0)\n                mstore(add(headStart, _1), length)\n                let i := 0\n                for { } lt(i, length) { i := add(i, _1) }\n                {\n                    mstore(add(add(headStart, i), 64), mload(add(add(value0, i), _1)))\n                }\n                if gt(i, length)\n                {\n                    mstore(add(add(headStart, length), 64), 0)\n                }\n                tail := add(add(headStart, and(add(length, 31), not(31))), 64)\n            }\n            function abi_decode_addresst_uint256(dataEnd) -> value0, value1\n            {\n                if slt(add(dataEnd, not(3)), 64) { revert(0, 0) }\n                let value := calldataload(4)\n                if iszero(eq(value, and(value, sub(shl(160, 1), 1))))\n                {\n                    revert(/** @src -1:-1:-1 */ 0, 0)\n                }\n                /// @src 1:1532:12844  \"contract ERC20 is Context, IERC20, IERC20Metadata {...\"\n                value0 := value\n                value1 := calldataload(36)\n            }\n            function abi_encode_bool(headStart, value0) -> tail\n            {\n                tail := add(headStart, 32)\n                mstore(headStart, iszero(iszero(value0)))\n            }\n            function abi_encode_uint256(headStart, value0) -> tail\n            {\n                tail := add(headStart, 32)\n                mstore(headStart, value0)\n            }\n            function abi_decode_addresst_addresst_uint256(dataEnd) -> value0, value1, value2\n            {\n                if slt(add(dataEnd, not(3)), 96) { revert(0, 0) }\n                let value := calldataload(4)\n                let _1 := sub(shl(160, 1), 1)\n                if iszero(eq(value, and(value, _1)))\n                {\n                    revert(/** @src -1:-1:-1 */ 0, 0)\n                }\n                /// @src 1:1532:12844  \"contract ERC20 is Context, IERC20, IERC20Metadata {...\"\n                value0 := value\n                let value_1 := calldataload(36)\n                if iszero(eq(value_1, and(value_1, _1)))\n                {\n                    revert(/** @src -1:-1:-1 */ 0, 0)\n                }\n                /// @src 1:1532:12844  \"contract ERC20 is Context, IERC20, IERC20Metadata {...\"\n                value1 := value_1\n                value2 := calldataload(68)\n            }\n            function abi_encode_uint8(headStart) -> tail\n            {\n                tail := add(headStart, 32)\n                mstore(headStart, /** @src 1:3186:3188  \"18\" */ 0x12)\n            }\n            /// @src 1:1532:12844  \"contract ERC20 is Context, IERC20, IERC20Metadata {...\"\n            function abi_decode_address(dataEnd) -> value0\n            {\n                if slt(add(dataEnd, not(3)), 32) { revert(0, 0) }\n                let value := calldataload(4)\n                if iszero(eq(value, and(value, sub(shl(160, 1), 1))))\n                {\n                    revert(/** @src -1:-1:-1 */ 0, 0)\n                }\n                /// @src 1:1532:12844  \"contract ERC20 is Context, IERC20, IERC20Metadata {...\"\n                value0 := value\n            }\n            function abi_decode_addresst_address(dataEnd) -> value0, value1\n            {\n                if slt(add(dataEnd, not(3)), 64) { revert(0, 0) }\n                let value := calldataload(4)\n                let _1 := sub(shl(160, 1), 1)\n                if iszero(eq(value, and(value, _1)))\n                {\n                    revert(/** @src -1:-1:-1 */ 0, 0)\n                }\n                /// @src 1:1532:12844  \"contract ERC20 is Context, IERC20, IERC20Metadata {...\"\n                value0 := value\n                let value_1 := calldataload(36)\n                if iszero(eq(value_1, and(value_1, _1)))\n                {\n                    revert(/** @src -1:-1:-1 */ 0, 0)\n                }\n                /// @src 1:1532:12844  \"contract ERC20 is Context, IERC20, IERC20Metadata {...\"\n                value1 := value_1\n            }\n            function array_dataslot_string_storage() -> data\n            {\n                mstore(0, /** @src 1:2244:2249  \"_name\" */ 0x03)\n                /// @src 1:1532:12844  \"contract ERC20 is Context, IERC20, IERC20Metadata {...\"\n                data := 87903029871075914254377627908054574944891091886930582284385770809450030037083\n            }\n            function array_dataslot_string_storage_4050() -> data\n            {\n                mstore(0, 4)\n                data := 62514009886607029107290561805838585334079798074568712924583230797734656856475\n            }\n            function finalize_allocation(memPtr, size)\n            {\n                let newFreePtr := add(memPtr, and(add(size, 31), not(31)))\n                if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr))\n                {\n                    mstore(0, shl(224, 0x4e487b71))\n                    mstore(4, 0x41)\n                    revert(0, 0x24)\n                }\n                mstore(64, newFreePtr)\n            }\n            function copy_array_from_storage_to_memory_string_2479() -> memPtr\n            {\n                memPtr := mload(64)\n                let ret := /** @src -1:-1:-1 */ 0\n                /// @src 1:1532:12844  \"contract ERC20 is Context, IERC20, IERC20Metadata {...\"\n                let slotValue := sload(/** @src 1:2244:2249  \"_name\" */ 0x03)\n                /// @src 1:1532:12844  \"contract ERC20 is Context, IERC20, IERC20Metadata {...\"\n                let length := /** @src -1:-1:-1 */ ret\n                /// @src 1:1532:12844  \"contract ERC20 is Context, IERC20, IERC20Metadata {...\"\n                let _1 := 1\n                length := shr(_1, slotValue)\n                let outOfPlaceEncoding := and(slotValue, _1)\n                if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n                let _2 := 32\n                if eq(outOfPlaceEncoding, lt(length, _2))\n                {\n                    mstore(/** @src -1:-1:-1 */ ret, /** @src 1:1532:12844  \"contract ERC20 is Context, IERC20, IERC20Metadata {...\" */ shl(224, 0x4e487b71))\n                    mstore(4, 0x22)\n                    revert(/** @src -1:-1:-1 */ ret, /** @src 1:1532:12844  \"contract ERC20 is Context, IERC20, IERC20Metadata {...\" */ 0x24)\n                }\n                let pos := array_storeLengthForEncoding_string(memPtr, length)\n                switch outOfPlaceEncoding\n                case 0 {\n                    mstore(pos, and(slotValue, not(255)))\n                    ret := add(pos, _2)\n                }\n                case 1 {\n                    let dataPos := array_dataslot_string_storage()\n                    let i := /** @src -1:-1:-1 */ 0\n                    /// @src 1:1532:12844  \"contract ERC20 is Context, IERC20, IERC20Metadata {...\"\n                    for { } lt(i, length) { i := add(i, _2) }\n                    {\n                        mstore(add(pos, i), sload(dataPos))\n                        dataPos := add(dataPos, _1)\n                    }\n                    ret := add(pos, i)\n                }\n                finalize_allocation(memPtr, sub(ret, memPtr))\n            }\n            function copy_array_from_storage_to_memory_string() -> memPtr\n            {\n                memPtr := mload(64)\n                let ret := /** @src -1:-1:-1 */ 0\n                /// @src 1:1532:12844  \"contract ERC20 is Context, IERC20, IERC20Metadata {...\"\n                let slotValue := sload(4)\n                let length := /** @src -1:-1:-1 */ ret\n                /// @src 1:1532:12844  \"contract ERC20 is Context, IERC20, IERC20Metadata {...\"\n                let _1 := 1\n                length := shr(_1, slotValue)\n                let outOfPlaceEncoding := and(slotValue, _1)\n                if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n                let _2 := 32\n                if eq(outOfPlaceEncoding, lt(length, _2))\n                {\n                    mstore(/** @src -1:-1:-1 */ ret, /** @src 1:1532:12844  \"contract ERC20 is Context, IERC20, IERC20Metadata {...\" */ shl(224, 0x4e487b71))\n                    mstore(4, 0x22)\n                    revert(/** @src -1:-1:-1 */ ret, /** @src 1:1532:12844  \"contract ERC20 is Context, IERC20, IERC20Metadata {...\" */ 0x24)\n                }\n                let pos := array_storeLengthForEncoding_string(memPtr, length)\n                switch outOfPlaceEncoding\n                case 0 {\n                    mstore(pos, and(slotValue, not(255)))\n                    ret := add(pos, _2)\n                }\n                case 1 {\n                    let dataPos := array_dataslot_string_storage_4050()\n                    let i := /** @src -1:-1:-1 */ 0\n                    /// @src 1:1532:12844  \"contract ERC20 is Context, IERC20, IERC20Metadata {...\"\n                    for { } lt(i, length) { i := add(i, _2) }\n                    {\n                        mstore(add(pos, i), sload(dataPos))\n                        dataPos := add(dataPos, _1)\n                    }\n                    ret := add(pos, i)\n                }\n                finalize_allocation(memPtr, sub(ret, memPtr))\n            }\n            function mapping_index_access_mapping_address_uint256_of_address_2492(key) -> dataSlot\n            {\n                mstore(0, and(key, sub(shl(160, 1), 1)))\n                mstore(0x20, /** @src 1:4102:4113  \"_allowances\" */ 0x01)\n                /// @src 1:1532:12844  \"contract ERC20 is Context, IERC20, IERC20Metadata {...\"\n                dataSlot := keccak256(0, 0x40)\n            }\n            function mapping_index_access_mapping_address_uint256_of_address_2493(key) -> dataSlot\n            {\n                mstore(/** @src 1:7568:7569  \"0\" */ 0x00, /** @src 1:1532:12844  \"contract ERC20 is Context, IERC20, IERC20Metadata {...\" */ and(key, sub(shl(160, 1), 1)))\n                mstore(0x20, /** @src 1:7568:7569  \"0\" */ 0x00)\n                /// @src 1:1532:12844  \"contract ERC20 is Context, IERC20, IERC20Metadata {...\"\n                dataSlot := keccak256(/** @src 1:7568:7569  \"0\" */ 0x00, /** @src 1:1532:12844  \"contract ERC20 is Context, IERC20, IERC20Metadata {...\" */ 0x40)\n            }\n            function mapping_index_access_mapping_address_uint256_of_address(slot, key) -> dataSlot\n            {\n                mstore(0, and(key, sub(shl(160, 1), 1)))\n                mstore(0x20, slot)\n                dataSlot := keccak256(0, 0x40)\n            }\n            /// @ast-id 211 @src 1:3419:3544  \"function balanceOf(address account) public view virtual override returns (uint256) {...\"\n            function fun_balanceOf(var_account) -> var\n            {\n                /// @src 1:1532:12844  \"contract ERC20 is Context, IERC20, IERC20Metadata {...\"\n                mstore(/** @src 1:3519:3528  \"_balances\" */ 0x00, /** @src 1:1532:12844  \"contract ERC20 is Context, IERC20, IERC20Metadata {...\" */ and(var_account, sub(shl(160, 1), 1)))\n                mstore(0x20, /** @src 1:3519:3528  \"_balances\" */ 0x00)\n                /// @src 1:3512:3537  \"return _balances[account]\"\n                var := /** @src 1:1532:12844  \"contract ERC20 is Context, IERC20, IERC20Metadata {...\" */ sload(keccak256(/** @src 1:3519:3528  \"_balances\" */ 0x00, /** @src 1:1532:12844  \"contract ERC20 is Context, IERC20, IERC20Metadata {...\" */ 0x40))\n            }\n            /// @ast-id 236 @src 1:3740:3929  \"function transfer(address to, uint256 amount) public virtual override returns (bool) {...\"\n            function fun_transfer(var_to, var_amount) -> var\n            {\n                /// @src 1:3894:3900  \"amount\"\n                fun__transfer(/** @src 7:719:729  \"msg.sender\" */ caller(), /** @src 1:3894:3900  \"amount\" */ var_to, var_amount)\n                /// @src 1:3911:3922  \"return true\"\n                var := /** @src 1:3918:3922  \"true\" */ 0x01\n            }\n            /// @ast-id 279 @src 1:4444:4641  \"function approve(address spender, uint256 amount) public virtual override returns (bool) {...\"\n            function fun_approve(var_spender, var_amount) -> var\n            {\n                /// @src 1:4606:4612  \"amount\"\n                fun__approve(/** @src 7:719:729  \"msg.sender\" */ caller(), /** @src 1:4606:4612  \"amount\" */ var_spender, var_amount)\n                /// @src 1:4623:4634  \"return true\"\n                var := /** @src 1:4630:4634  \"true\" */ 0x01\n            }\n            /// @ast-id 312 @src 1:5203:5459  \"function transferFrom(address from, address to, uint256 amount) public virtual override returns (bool) {...\"\n            function fun_transferFrom(var_from, var_to, var_amount) -> var_\n            {\n                /// @src 1:1532:12844  \"contract ERC20 is Context, IERC20, IERC20Metadata {...\"\n                mstore(/** @src -1:-1:-1 */ 0, /** @src 1:1532:12844  \"contract ERC20 is Context, IERC20, IERC20Metadata {...\" */ and(var_from, sub(shl(160, 1), 1)))\n                mstore(0x20, /** @src 1:4102:4113  \"_allowances\" */ 0x01)\n                /// @src 1:1532:12844  \"contract ERC20 is Context, IERC20, IERC20Metadata {...\"\n                let _1 := sload(/** @src 1:4102:4129  \"_allowances[owner][spender]\" */ mapping_index_access_mapping_address_uint256_of_address(/** @src 1:1532:12844  \"contract ERC20 is Context, IERC20, IERC20Metadata {...\" */ keccak256(/** @src -1:-1:-1 */ 0, /** @src 1:1532:12844  \"contract ERC20 is Context, IERC20, IERC20Metadata {...\" */ 0x40), /** @src 7:719:729  \"msg.sender\" */ caller()))\n                /// @src 1:11240:11483  \"if (currentAllowance != type(uint256).max) {...\"\n                if /** @src 1:11244:11281  \"currentAllowance != type(uint256).max\" */ iszero(eq(_1, /** @src 1:11264:11281  \"type(uint256).max\" */ not(0)))\n                /// @src 1:11240:11483  \"if (currentAllowance != type(uint256).max) {...\"\n                {\n                    /// @src 1:1532:12844  \"contract ERC20 is Context, IERC20, IERC20Metadata {...\"\n                    if /** @src 1:11305:11331  \"currentAllowance >= amount\" */ lt(_1, var_amount)\n                    /// @src 1:1532:12844  \"contract ERC20 is Context, IERC20, IERC20Metadata {...\"\n                    {\n                        let memPtr := mload(0x40)\n                        mstore(memPtr, shl(229, 4594637))\n                        mstore(add(memPtr, 4), 0x20)\n                        mstore(add(memPtr, 36), 29)\n                        mstore(add(memPtr, 68), \"ERC20: insufficient allowance\")\n                        revert(memPtr, 100)\n                    }\n                    /// @src 1:11432:11457  \"currentAllowance - amount\"\n                    fun__approve(var_from, /** @src 7:719:729  \"msg.sender\" */ caller(), /** @src 1:1532:12844  \"contract ERC20 is Context, IERC20, IERC20Metadata {...\" */ sub(/** @src 1:11432:11457  \"currentAllowance - amount\" */ _1, var_amount))\n                }\n                /// @src 1:5424:5430  \"amount\"\n                fun__transfer(var_from, var_to, var_amount)\n                /// @src 1:5441:5452  \"return true\"\n                var_ := /** @src 1:4102:4113  \"_allowances\" */ 0x01\n            }\n            /// @ast-id 341 @src 1:5854:6088  \"function increaseAllowance(address spender, uint256 addedValue) public virtual returns (bool) {...\"\n            function fun_increaseAllowance(var_spender, var_addedValue) -> var\n            {\n                /// @src 1:1532:12844  \"contract ERC20 is Context, IERC20, IERC20Metadata {...\"\n                mstore(/** @src -1:-1:-1 */ 0, /** @src 7:719:729  \"msg.sender\" */ caller())\n                /// @src 1:1532:12844  \"contract ERC20 is Context, IERC20, IERC20Metadata {...\"\n                mstore(0x20, /** @src 1:4102:4113  \"_allowances\" */ 0x01)\n                /// @src 1:1532:12844  \"contract ERC20 is Context, IERC20, IERC20Metadata {...\"\n                let _1 := sload(/** @src 1:4102:4129  \"_allowances[owner][spender]\" */ mapping_index_access_mapping_address_uint256_of_address(/** @src 1:1532:12844  \"contract ERC20 is Context, IERC20, IERC20Metadata {...\" */ keccak256(/** @src -1:-1:-1 */ 0, /** @src 1:1532:12844  \"contract ERC20 is Context, IERC20, IERC20Metadata {...\" */ 0x40), /** @src 1:6021:6046  \"allowance(owner, spender)\" */ var_spender))\n                /// @src 1:1532:12844  \"contract ERC20 is Context, IERC20, IERC20Metadata {...\"\n                if gt(_1, not(var_addedValue))\n                {\n                    mstore(/** @src -1:-1:-1 */ 0, /** @src 1:1532:12844  \"contract ERC20 is Context, IERC20, IERC20Metadata {...\" */ shl(224, 0x4e487b71))\n                    mstore(4, 0x11)\n                    revert(/** @src -1:-1:-1 */ 0, /** @src 1:1532:12844  \"contract ERC20 is Context, IERC20, IERC20Metadata {...\" */ 0x24)\n                }\n                /// @src 1:6021:6059  \"allowance(owner, spender) + addedValue\"\n                fun__approve(/** @src 7:719:729  \"msg.sender\" */ caller(), /** @src 1:6021:6059  \"allowance(owner, spender) + addedValue\" */ var_spender, /** @src 1:1532:12844  \"contract ERC20 is Context, IERC20, IERC20Metadata {...\" */ add(_1, var_addedValue))\n                /// @src 1:6070:6081  \"return true\"\n                var := /** @src 1:4102:4113  \"_allowances\" */ 0x01\n            }\n            /// @ast-id 382 @src 1:6575:7002  \"function decreaseAllowance(address spender, uint256 subtractedValue) public virtual returns (bool) {...\"\n            function fun_decreaseAllowance(var_spender, var_subtractedValue) -> var\n            {\n                /// @src 1:1532:12844  \"contract ERC20 is Context, IERC20, IERC20Metadata {...\"\n                mstore(/** @src -1:-1:-1 */ 0, /** @src 7:719:729  \"msg.sender\" */ caller())\n                /// @src 1:1532:12844  \"contract ERC20 is Context, IERC20, IERC20Metadata {...\"\n                mstore(0x20, /** @src 1:4102:4113  \"_allowances\" */ 0x01)\n                /// @src 1:1532:12844  \"contract ERC20 is Context, IERC20, IERC20Metadata {...\"\n                let _1 := sload(/** @src 1:4102:4129  \"_allowances[owner][spender]\" */ mapping_index_access_mapping_address_uint256_of_address(/** @src 1:1532:12844  \"contract ERC20 is Context, IERC20, IERC20Metadata {...\" */ keccak256(/** @src -1:-1:-1 */ 0, /** @src 1:1532:12844  \"contract ERC20 is Context, IERC20, IERC20Metadata {...\" */ 0x40), /** @src 1:6749:6774  \"allowance(owner, spender)\" */ var_spender))\n                /// @src 1:1532:12844  \"contract ERC20 is Context, IERC20, IERC20Metadata {...\"\n                if /** @src 1:6792:6827  \"currentAllowance >= subtractedValue\" */ lt(_1, var_subtractedValue)\n                /// @src 1:1532:12844  \"contract ERC20 is Context, IERC20, IERC20Metadata {...\"\n                {\n                    let memPtr := mload(0x40)\n                    mstore(memPtr, shl(229, 4594637))\n                    mstore(add(memPtr, 4), 0x20)\n                    mstore(add(memPtr, 36), 37)\n                    mstore(add(memPtr, 68), \"ERC20: decreased allowance below\")\n                    mstore(add(memPtr, 100), \" zero\")\n                    revert(memPtr, 132)\n                }\n                /// @src 1:6928:6962  \"currentAllowance - subtractedValue\"\n                fun__approve(/** @src 7:719:729  \"msg.sender\" */ caller(), /** @src 1:6928:6962  \"currentAllowance - subtractedValue\" */ var_spender, /** @src 1:1532:12844  \"contract ERC20 is Context, IERC20, IERC20Metadata {...\" */ sub(/** @src 1:6928:6962  \"currentAllowance - subtractedValue\" */ _1, var_subtractedValue))\n                /// @src 1:6984:6995  \"return true\"\n                var := /** @src 1:4102:4113  \"_allowances\" */ 0x01\n            }\n            /// @src 1:1532:12844  \"contract ERC20 is Context, IERC20, IERC20Metadata {...\"\n            function require_helper_stringliteral(condition)\n            {\n                if iszero(condition)\n                {\n                    let memPtr := mload(64)\n                    mstore(memPtr, shl(229, 4594637))\n                    mstore(add(memPtr, 4), 32)\n                    mstore(add(memPtr, 36), 35)\n                    mstore(add(memPtr, 68), \"ERC20: transfer to the zero addr\")\n                    mstore(add(memPtr, 100), \"ess\")\n                    revert(memPtr, 132)\n                }\n            }\n            function require_helper_stringliteral_4107(condition)\n            {\n                if iszero(condition)\n                {\n                    let memPtr := mload(64)\n                    mstore(memPtr, shl(229, 4594637))\n                    mstore(add(memPtr, 4), 32)\n                    mstore(add(memPtr, 36), 38)\n                    mstore(add(memPtr, 68), \"ERC20: transfer amount exceeds b\")\n                    mstore(add(memPtr, 100), \"alance\")\n                    revert(memPtr, 132)\n                }\n            }\n            /// @ast-id 459 @src 1:7456:8244  \"function _transfer(address from, address to, uint256 amount) internal virtual {...\"\n            function fun__transfer(var_from, var_to, var_amount)\n            {\n                /// @src 1:1532:12844  \"contract ERC20 is Context, IERC20, IERC20Metadata {...\"\n                let _1 := sub(shl(160, 1), 1)\n                if /** @src 1:7552:7570  \"from != address(0)\" */ iszero(/** @src 1:1532:12844  \"contract ERC20 is Context, IERC20, IERC20Metadata {...\" */ and(/** @src 1:7552:7570  \"from != address(0)\" */ var_from, /** @src 1:1532:12844  \"contract ERC20 is Context, IERC20, IERC20Metadata {...\" */ _1))\n                {\n                    let memPtr := mload(64)\n                    mstore(memPtr, shl(229, 4594637))\n                    mstore(add(memPtr, 4), 32)\n                    mstore(add(memPtr, 36), 37)\n                    mstore(add(memPtr, 68), \"ERC20: transfer from the zero ad\")\n                    mstore(add(memPtr, 100), \"dress\")\n                    revert(memPtr, 132)\n                }\n                /// @src 1:7622:7686  \"require(to != address(0), \\\"ERC20: transfer to the zero address\\\")\"\n                require_helper_stringliteral(/** @src 1:7630:7646  \"to != address(0)\" */ iszero(iszero(/** @src 1:1532:12844  \"contract ERC20 is Context, IERC20, IERC20Metadata {...\" */ and(/** @src 1:7630:7646  \"to != address(0)\" */ var_to, /** @src 1:1532:12844  \"contract ERC20 is Context, IERC20, IERC20Metadata {...\" */ _1))))\n                let _2 := sload(/** @src 1:7768:7783  \"_balances[from]\" */ mapping_index_access_mapping_address_uint256_of_address_2493(var_from))\n                /// @src 1:7793:7865  \"require(fromBalance >= amount, \\\"ERC20: transfer amount exceeds balance\\\")\"\n                require_helper_stringliteral_4107(/** @src 1:7801:7822  \"fromBalance >= amount\" */ iszero(lt(_2, var_amount)))\n                /// @src 1:1532:12844  \"contract ERC20 is Context, IERC20, IERC20Metadata {...\"\n                sstore(/** @src 1:7899:7914  \"_balances[from]\" */ mapping_index_access_mapping_address_uint256_of_address_2493(var_from), /** @src 1:1532:12844  \"contract ERC20 is Context, IERC20, IERC20Metadata {...\" */ sub(/** @src 1:7917:7937  \"fromBalance - amount\" */ _2, var_amount))\n                /// @src 1:8114:8127  \"_balances[to]\"\n                let _3 := mapping_index_access_mapping_address_uint256_of_address_2493(var_to)\n                /// @src 1:1532:12844  \"contract ERC20 is Context, IERC20, IERC20Metadata {...\"\n                sstore(_3, add(sload(/** @src 1:8114:8137  \"_balances[to] += amount\" */ _3), /** @src 1:1532:12844  \"contract ERC20 is Context, IERC20, IERC20Metadata {...\" */ var_amount))\n                /// @src 1:8163:8189  \"Transfer(from, to, amount)\"\n                let _4 := /** @src 1:1532:12844  \"contract ERC20 is Context, IERC20, IERC20Metadata {...\" */ mload(64)\n                /// @src 1:8163:8189  \"Transfer(from, to, amount)\"\n                log3(_4, sub(abi_encode_uint256(_4, var_amount), _4), 0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef, var_from, var_to)\n            }\n            /// @ast-id 633 @src 1:10457:10797  \"function _approve(address owner, address spender, uint256 amount) internal virtual {...\"\n            function fun__approve(var_owner, var_spender, var_amount)\n            {\n                /// @src 1:1532:12844  \"contract ERC20 is Context, IERC20, IERC20Metadata {...\"\n                let _1 := sub(shl(160, 1), 1)\n                if /** @src 1:10558:10577  \"owner != address(0)\" */ iszero(/** @src 1:1532:12844  \"contract ERC20 is Context, IERC20, IERC20Metadata {...\" */ and(/** @src 1:10558:10577  \"owner != address(0)\" */ var_owner, /** @src 1:1532:12844  \"contract ERC20 is Context, IERC20, IERC20Metadata {...\" */ _1))\n                {\n                    let memPtr := mload(64)\n                    mstore(memPtr, shl(229, 4594637))\n                    mstore(add(memPtr, 4), 32)\n                    mstore(add(memPtr, 36), 36)\n                    mstore(add(memPtr, 68), \"ERC20: approve from the zero add\")\n                    mstore(add(memPtr, 100), \"ress\")\n                    revert(memPtr, 132)\n                }\n                if /** @src 1:10636:10657  \"spender != address(0)\" */ iszero(/** @src 1:1532:12844  \"contract ERC20 is Context, IERC20, IERC20Metadata {...\" */ and(/** @src 1:10636:10657  \"spender != address(0)\" */ var_spender, /** @src 1:1532:12844  \"contract ERC20 is Context, IERC20, IERC20Metadata {...\" */ _1))\n                {\n                    let memPtr_1 := mload(64)\n                    mstore(memPtr_1, shl(229, 4594637))\n                    mstore(add(memPtr_1, 4), 32)\n                    mstore(add(memPtr_1, 36), 34)\n                    mstore(add(memPtr_1, 68), \"ERC20: approve to the zero addre\")\n                    mstore(add(memPtr_1, 100), \"ss\")\n                    revert(memPtr_1, 132)\n                }\n                sstore(/** @src 1:10707:10734  \"_allowances[owner][spender]\" */ mapping_index_access_mapping_address_uint256_of_address(/** @src 1:10707:10725  \"_allowances[owner]\" */ mapping_index_access_mapping_address_uint256_of_address_2492(var_owner), /** @src 1:10707:10734  \"_allowances[owner][spender]\" */ var_spender), /** @src 1:1532:12844  \"contract ERC20 is Context, IERC20, IERC20Metadata {...\" */ var_amount)\n                /// @src 1:10758:10790  \"Approval(owner, spender, amount)\"\n                let _2 := /** @src 1:1532:12844  \"contract ERC20 is Context, IERC20, IERC20Metadata {...\" */ mload(64)\n                /// @src 1:10758:10790  \"Approval(owner, spender, amount)\"\n                log3(_2, sub(abi_encode_uint256(_2, var_amount), _2), 0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925, var_owner, var_spender)\n            }\n        }\n        data \".metadata\" hex\"a3646970667358221220c63b8eff276e5466d2a597a4f37e23522c514c9ba52a27b74fe472d56e0bc2196c6578706572696d656e74616cf564736f6c63430008090041\"\n    }\n}\n","hash":"01000209055ddbb76ff6e667614f144e8e12ac84f005b938d99df6dbec18554d","factoryDependencies":{}}},"@openzeppelin/contracts/token/ERC20/IERC20.sol":{"IERC20":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"}],"metadata":"{\"compiler\":{\"version\":\"0.8.9+commit.e5eed63a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 standard as defined in the EIP.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"details\":{\"constantOptimizer\":false,\"cse\":true,\"deduplicate\":true,\"inliner\":true,\"jumpdestRemover\":true,\"orderLiterals\":true,\"peephole\":true,\"yul\":true,\"yulDetails\":{\"optimizerSteps\":\"dhfoDgvulfnTUtnIf[xarrscLMcCTUtTOntnfDIulLculVcul jjTpeulxarulrulxarrcLgvifCTUcarrLsTFOtfDncarrIulc]jmuljuljul VcTOcul jmul\",\"stackAllocation\":true}},\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x287b55befed2961a7eabd7d7b1b2839cbca8a5b80ef8dcbb25ed3d4c2002c305\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bd39944e8fc06be6dbe2dd1d8449b5336e23c6a7ba3e8e9ae5ae0f37f35283f5\",\"dweb:/ipfs/QmPV3FGYjVwvKSgAXKUN3r9T9GwniZz83CxBpM7vyj2G53\"]}},\"version\":1}","evm":{"legacyAssembly":null,"assembly":null,"bytecode":null,"methodIdentifiers":{"allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd"}},"irOptimized":""}},"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol":{"IERC20Metadata":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"decimals","outputs":[{"internalType":"uint8","name":"","type":"uint8"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"}],"metadata":"{\"compiler\":{\"version\":\"0.8.9+commit.e5eed63a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for the optional metadata functions from the ERC20 standard. _Available since v4.1._\",\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"decimals()\":{\"details\":\"Returns the decimals places of the token.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token.\"},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":\"IERC20Metadata\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"details\":{\"constantOptimizer\":false,\"cse\":true,\"deduplicate\":true,\"inliner\":true,\"jumpdestRemover\":true,\"orderLiterals\":true,\"peephole\":true,\"yul\":true,\"yulDetails\":{\"optimizerSteps\":\"dhfoDgvulfnTUtnIf[xarrscLMcCTUtTOntnfDIulLculVcul jjTpeulxarulrulxarrcLgvifCTUcarrLsTFOtfDncarrIulc]jmuljuljul VcTOcul jmul\",\"stackAllocation\":true}},\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x287b55befed2961a7eabd7d7b1b2839cbca8a5b80ef8dcbb25ed3d4c2002c305\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bd39944e8fc06be6dbe2dd1d8449b5336e23c6a7ba3e8e9ae5ae0f37f35283f5\",\"dweb:/ipfs/QmPV3FGYjVwvKSgAXKUN3r9T9GwniZz83CxBpM7vyj2G53\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x8de418a5503946cabe331f35fe242d3201a73f67f77aaeb7110acb1f30423aca\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a376d3dda2cb70536c0a45c208b29b34ac560c4cb4f513a42079f96ba47d2dd\",\"dweb:/ipfs/QmZQg6gn1sUpM8wHzwNvSnihumUCAhxD119MpXeKp8B9s8\"]}},\"version\":1}","evm":{"legacyAssembly":null,"assembly":null,"bytecode":null,"methodIdentifiers":{"allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","decimals()":"313ce567","name()":"06fdde03","symbol()":"95d89b41","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd"}},"irOptimized":""}},"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol":{"IERC20Permit":{"abi":[{"inputs":[],"name":"DOMAIN_SEPARATOR","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"nonces","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"},{"internalType":"uint256","name":"deadline","type":"uint256"},{"internalType":"uint8","name":"v","type":"uint8"},{"internalType":"bytes32","name":"r","type":"bytes32"},{"internalType":"bytes32","name":"s","type":"bytes32"}],"name":"permit","outputs":[],"stateMutability":"nonpayable","type":"function"}],"metadata":"{\"compiler\":{\"version\":\"0.8.9+commit.e5eed63a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"DOMAIN_SEPARATOR\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"nonces\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"permit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in https://eips.ethereum.org/EIPS/eip-2612[EIP-2612]. Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by presenting a message signed by the account. By not relying on {IERC20-approve}, the token holder account doesn't need to send a transaction, and thus is not required to hold Ether at all.\",\"kind\":\"dev\",\"methods\":{\"DOMAIN_SEPARATOR()\":{\"details\":\"Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}.\"},\"nonces(address)\":{\"details\":\"Returns the current nonce for `owner`. This value must be included whenever a signature is generated for {permit}. Every successful call to {permit} increases ``owner``'s nonce by one. This prevents a signature from being used multiple times.\"},\"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)\":{\"details\":\"Sets `value` as the allowance of `spender` over ``owner``'s tokens, given ``owner``'s signed approval. IMPORTANT: The same issues {IERC20-approve} has related to transaction ordering also apply here. Emits an {Approval} event. Requirements: - `spender` cannot be the zero address. - `deadline` must be a timestamp in the future. - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner` over the EIP712-formatted function arguments. - the signature must use ``owner``'s current nonce (see {nonces}). For more information on the signature format, see the https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP section].\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol\":\"IERC20Permit\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"details\":{\"constantOptimizer\":false,\"cse\":true,\"deduplicate\":true,\"inliner\":true,\"jumpdestRemover\":true,\"orderLiterals\":true,\"peephole\":true,\"yul\":true,\"yulDetails\":{\"optimizerSteps\":\"dhfoDgvulfnTUtnIf[xarrscLMcCTUtTOntnfDIulLculVcul jjTpeulxarulrulxarrcLgvifCTUcarrLsTFOtfDncarrIulc]jmuljuljul VcTOcul jmul\",\"stackAllocation\":true}},\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol\":{\"keccak256\":\"0xec63854014a5b4f2b3290ab9103a21bdf902a508d0f41a8573fea49e98bf571a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bc5b5dc12fbc4002f282eaa7a5f06d8310ed62c1c77c5770f6283e058454c39a\",\"dweb:/ipfs/Qme9rE2wS3yBuyJq9GgbmzbsBQsW2M2sVFqYYLw7bosGrv\"]}},\"version\":1}","evm":{"legacyAssembly":null,"assembly":null,"bytecode":null,"methodIdentifiers":{"DOMAIN_SEPARATOR()":"3644e515","nonces(address)":"7ecebe00","permit(address,address,uint256,uint256,uint8,bytes32,bytes32)":"d505accf"}},"irOptimized":""}},"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol":{"SafeERC20":{"abi":[],"metadata":{"optimizer_settings":"M3B3","solc_metadata":"{\"compiler\":{\"version\":\"0.8.9+commit.e5eed63a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Wrappers around ERC20 operations that throw on failure (when the token contract returns false). Tokens that return no value (and instead revert or throw on failure) are also supported, non-reverting calls are assumed to be successful. To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract, which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\",\"kind\":\"dev\",\"methods\":{},\"title\":\"SafeERC20\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":\"SafeERC20\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"details\":{\"constantOptimizer\":false,\"cse\":true,\"deduplicate\":true,\"inliner\":true,\"jumpdestRemover\":true,\"orderLiterals\":true,\"peephole\":true,\"yul\":true,\"yulDetails\":{\"optimizerSteps\":\"dhfoDgvulfnTUtnIf[xarrscLMcCTUtTOntnfDIulLculVcul jjTpeulxarulrulxarrcLgvifCTUcarrLsTFOtfDncarrIulc]jmuljuljul VcTOcul jmul\",\"stackAllocation\":true}},\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x287b55befed2961a7eabd7d7b1b2839cbca8a5b80ef8dcbb25ed3d4c2002c305\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bd39944e8fc06be6dbe2dd1d8449b5336e23c6a7ba3e8e9ae5ae0f37f35283f5\",\"dweb:/ipfs/QmPV3FGYjVwvKSgAXKUN3r9T9GwniZz83CxBpM7vyj2G53\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol\":{\"keccak256\":\"0xec63854014a5b4f2b3290ab9103a21bdf902a508d0f41a8573fea49e98bf571a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bc5b5dc12fbc4002f282eaa7a5f06d8310ed62c1c77c5770f6283e058454c39a\",\"dweb:/ipfs/Qme9rE2wS3yBuyJq9GgbmzbsBQsW2M2sVFqYYLw7bosGrv\"]},\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0x909d608c2db6eb165ca178c81289a07ed2e118e444d0025b2a85c97d0b44a4fa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://656cda26512ddd7373c2d5551c8fae759fc30f05b10f0fc2e738e9274199dbd4\",\"dweb:/ipfs/QmTSArSzQRFbQmHgq7U1PZXnsDFhvDZhKVu9CzMG4yo6Lx\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0x006dd67219697fe68d7fbfdea512e7c4cb64a43565ed86171d67e844982da6fa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2455248c8ddd9cc6a7af76a13973cddf222072427e7b0e2a7d1aff345145e931\",\"dweb:/ipfs/QmfYjnjRbWqYpuxurqveE6HtzsY1Xx323J428AKQgtBJZm\"]}},\"version\":1}","zk_version":"1.3.13"},"evm":{"legacyAssembly":null,"assembly":"\t.text\n\t.file\t\"SafeERC20.sol:SafeERC20\"\n\t.globl\t__entry\n__entry:\n.func_begin0:\n\tadd\t128, r0, r1\n\tst.1\t64, r1\n\tand!\t1, r2, r1\n\tjump.ne\t@.BB0_1\n\tadd\tr0, r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB0_1:\n\tcontext.get_context_u128\tr1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_2\n\tadd\t32, r0, r1\n\tst.2\t256, r1\n\tst.2\t288, r0\n\tadd\t@CPI0_0[0], r0, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_2:\n\tadd\tr0, r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.func_end0:\n\n\t.note.GNU-stack\n\t.rodata\nCPI0_0:\n\t.cell 53919893334301279589334030174039261352344891250716429051063678533632\n","bytecode":{"object":"0000008001000039000000400010043f0000000101200190000000060000c13d000000000100001900000012000104300000000001000416000000000101004b0000000e0000c13d0000002001000039000001000010044300000120000004430000000501000041000000110001042e000000000100001900000012000104300000001000000432000000110001042e00000012000104300000000000000000000000020000000000000000000000000000004000000100000000000000000081ea3b49debbcc70287aa5b27bd1b33c931f722b8c4e02e4eaaa6d1c50229831"},"methodIdentifiers":{}},"irOptimized":"/*=====================================================*\n *                       WARNING                       *\n *  Solidity to Yul compilation is still EXPERIMENTAL  *\n *       It can result in LOSS OF FUNDS or worse       *\n *                !USE AT YOUR OWN RISK!               *\n *=====================================================*/\n\n/// @use-src 5:\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\"\nobject \"SafeERC20_1214\" {\n    code {\n        {\n            /// @src 5:701:6912  \"library SafeERC20 {...\"\n            mstore(64, 128)\n            if callvalue() { revert(0, 0) }\n            let _1 := datasize(\"SafeERC20_1214_deployed\")\n            codecopy(128, dataoffset(\"SafeERC20_1214_deployed\"), _1)\n            setimmutable(128, \"library_deploy_address\", address())\n            return(128, _1)\n        }\n    }\n    /// @use-src 5:\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\"\n    object \"SafeERC20_1214_deployed\" {\n        code {\n            {\n                /// @src 5:701:6912  \"library SafeERC20 {...\"\n                mstore(64, 128)\n                revert(0, 0)\n            }\n        }\n        data \".metadata\" hex\"a3646970667358221220829c19c09d77e73c4ca47d01124d33cf59bcd122f50a8db102d6b5e57447cfa86c6578706572696d656e74616cf564736f6c63430008090041\"\n    }\n}\n","hash":"010000073f4f67999635d11705aed930883e3fcfff5d335e639dfad78c7be580","factoryDependencies":{}}},"@openzeppelin/contracts/utils/Address.sol":{"Address":{"abi":[],"metadata":{"optimizer_settings":"M3B3","solc_metadata":"{\"compiler\":{\"version\":\"0.8.9+commit.e5eed63a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Collection of functions related to the address type\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Address.sol\":\"Address\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"details\":{\"constantOptimizer\":false,\"cse\":true,\"deduplicate\":true,\"inliner\":true,\"jumpdestRemover\":true,\"orderLiterals\":true,\"peephole\":true,\"yul\":true,\"yulDetails\":{\"optimizerSteps\":\"dhfoDgvulfnTUtnIf[xarrscLMcCTUtTOntnfDIulLculVcul jjTpeulxarulrulxarrcLgvifCTUcarrLsTFOtfDncarrIulc]jmuljuljul VcTOcul jmul\",\"stackAllocation\":true}},\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0x006dd67219697fe68d7fbfdea512e7c4cb64a43565ed86171d67e844982da6fa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2455248c8ddd9cc6a7af76a13973cddf222072427e7b0e2a7d1aff345145e931\",\"dweb:/ipfs/QmfYjnjRbWqYpuxurqveE6HtzsY1Xx323J428AKQgtBJZm\"]}},\"version\":1}","zk_version":"1.3.13"},"evm":{"legacyAssembly":null,"assembly":"\t.text\n\t.file\t\"Address.sol:Address\"\n\t.globl\t__entry\n__entry:\n.func_begin0:\n\tadd\t128, r0, r1\n\tst.1\t64, r1\n\tand!\t1, r2, r1\n\tjump.ne\t@.BB0_1\n\tadd\tr0, r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB0_1:\n\tcontext.get_context_u128\tr1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_2\n\tadd\t32, r0, r1\n\tst.2\t256, r1\n\tst.2\t288, r0\n\tadd\t@CPI0_0[0], r0, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_2:\n\tadd\tr0, r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.func_end0:\n\n\t.note.GNU-stack\n\t.rodata\nCPI0_0:\n\t.cell 53919893334301279589334030174039261352344891250716429051063678533632\n","bytecode":{"object":"0000008001000039000000400010043f0000000101200190000000060000c13d000000000100001900000012000104300000000001000416000000000101004b0000000e0000c13d0000002001000039000001000010044300000120000004430000000501000041000000110001042e000000000100001900000012000104300000001000000432000000110001042e0000001200010430000000000000000000000002000000000000000000000000000000400000010000000000000000006c487bd67367bd0f1a76cf6d6c614662b896c5e78f04868a7795f2bb9eb380e5"},"methodIdentifiers":{}},"irOptimized":"/*=====================================================*\n *                       WARNING                       *\n *  Solidity to Yul compilation is still EXPERIMENTAL  *\n *       It can result in LOSS OF FUNDS or worse       *\n *                !USE AT YOUR OWN RISK!               *\n *=====================================================*/\n\n/// @use-src 6:\"@openzeppelin/contracts/utils/Address.sol\"\nobject \"Address_1544\" {\n    code {\n        {\n            /// @src 6:194:9363  \"library Address {...\"\n            mstore(64, 128)\n            if callvalue() { revert(0, 0) }\n            let _1 := datasize(\"Address_1544_deployed\")\n            codecopy(128, dataoffset(\"Address_1544_deployed\"), _1)\n            setimmutable(128, \"library_deploy_address\", address())\n            return(128, _1)\n        }\n    }\n    /// @use-src 6:\"@openzeppelin/contracts/utils/Address.sol\"\n    object \"Address_1544_deployed\" {\n        code {\n            {\n                /// @src 6:194:9363  \"library Address {...\"\n                mstore(64, 128)\n                revert(0, 0)\n            }\n        }\n        data \".metadata\" hex\"a3646970667358221220afeff4a3e285003cf1f6e7635e4e9210ffda528c4f2265cd3933e0d3a0af2bf86c6578706572696d656e74616cf564736f6c63430008090041\"\n    }\n}\n","hash":"0100000788e7aa963e81764937b327cf27500ac05e9a0757173c2c1f8a67e75a","factoryDependencies":{}}},"@openzeppelin/contracts/utils/Context.sol":{"Context":{"abi":[],"metadata":"{\"compiler\":{\"version\":\"0.8.9+commit.e5eed63a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"details\":{\"constantOptimizer\":false,\"cse\":true,\"deduplicate\":true,\"inliner\":true,\"jumpdestRemover\":true,\"orderLiterals\":true,\"peephole\":true,\"yul\":true,\"yulDetails\":{\"optimizerSteps\":\"dhfoDgvulfnTUtnIf[xarrscLMcCTUtTOntnfDIulLculVcul jjTpeulxarulrulxarrcLgvifCTUcarrLsTFOtfDncarrIulc]jmuljuljul VcTOcul jmul\",\"stackAllocation\":true}},\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]}},\"version\":1}","evm":{"legacyAssembly":null,"assembly":null,"bytecode":null,"methodIdentifiers":{}},"irOptimized":""}},"@openzeppelin/contracts/utils/math/SafeMath.sol":{"SafeMath":{"abi":[],"metadata":{"optimizer_settings":"M3B3","solc_metadata":"{\"compiler\":{\"version\":\"0.8.9+commit.e5eed63a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Wrappers over Solidity's arithmetic operations. NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler now has built in overflow checking.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/math/SafeMath.sol\":\"SafeMath\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"details\":{\"constantOptimizer\":false,\"cse\":true,\"deduplicate\":true,\"inliner\":true,\"jumpdestRemover\":true,\"orderLiterals\":true,\"peephole\":true,\"yul\":true,\"yulDetails\":{\"optimizerSteps\":\"dhfoDgvulfnTUtnIf[xarrscLMcCTUtTOntnfDIulLculVcul jjTpeulxarulrulxarrcLgvifCTUcarrLsTFOtfDncarrIulc]jmuljuljul VcTOcul jmul\",\"stackAllocation\":true}},\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/math/SafeMath.sol\":{\"keccak256\":\"0x58b21219689909c4f8339af00813760337f7e2e7f169a97fe49e2896dcfb3b9a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ef8e012e946dec20e59f2d4446f4b44bb098f3fa8bac103b1b5112fff777447b\",\"dweb:/ipfs/QmVTooKWcLkJ9W68yNX4MgdrbAKiAXwuRN9A7f4NkdcdtQ\"]}},\"version\":1}","zk_version":"1.3.13"},"evm":{"legacyAssembly":null,"assembly":"\t.text\n\t.file\t\"SafeMath.sol:SafeMath\"\n\t.globl\t__entry\n__entry:\n.func_begin0:\n\tadd\t128, r0, r1\n\tst.1\t64, r1\n\tand!\t1, r2, r1\n\tjump.ne\t@.BB0_1\n\tadd\tr0, r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB0_1:\n\tcontext.get_context_u128\tr1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_2\n\tadd\t32, r0, r1\n\tst.2\t256, r1\n\tst.2\t288, r0\n\tadd\t@CPI0_0[0], r0, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_2:\n\tadd\tr0, r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.func_end0:\n\n\t.note.GNU-stack\n\t.rodata\nCPI0_0:\n\t.cell 53919893334301279589334030174039261352344891250716429051063678533632\n","bytecode":{"object":"0000008001000039000000400010043f0000000101200190000000060000c13d000000000100001900000012000104300000000001000416000000000101004b0000000e0000c13d0000002001000039000001000010044300000120000004430000000501000041000000110001042e000000000100001900000012000104300000001000000432000000110001042e000000120001043000000000000000000000000200000000000000000000000000000040000001000000000000000000f51f3a3904ad859fa99dcfaeea8c45a0f61eef34f1908dcc7673b3d2157d3aef"},"methodIdentifiers":{}},"irOptimized":"/*=====================================================*\n *                       WARNING                       *\n *  Solidity to Yul compilation is still EXPERIMENTAL  *\n *       It can result in LOSS OF FUNDS or worse       *\n *                !USE AT YOUR OWN RISK!               *\n *=====================================================*/\n\n/// @use-src 8:\"@openzeppelin/contracts/utils/math/SafeMath.sol\"\nobject \"SafeMath_1878\" {\n    code {\n        {\n            /// @src 8:482:6692  \"library SafeMath {...\"\n            mstore(64, 128)\n            if callvalue() { revert(0, 0) }\n            let _1 := datasize(\"SafeMath_1878_deployed\")\n            codecopy(128, dataoffset(\"SafeMath_1878_deployed\"), _1)\n            setimmutable(128, \"library_deploy_address\", address())\n            return(128, _1)\n        }\n    }\n    /// @use-src 8:\"@openzeppelin/contracts/utils/math/SafeMath.sol\"\n    object \"SafeMath_1878_deployed\" {\n        code {\n            {\n                /// @src 8:482:6692  \"library SafeMath {...\"\n                mstore(64, 128)\n                revert(0, 0)\n            }\n        }\n        data \".metadata\" hex\"a3646970667358221220f49b58e27176f500696e86c6eb751a273d215cc36ac4568f121f6a1ace56fdef6c6578706572696d656e74616cf564736f6c63430008090041\"\n    }\n}\n","hash":"01000007a56b87daf193dbca78d86e975537f5b8bbf5faf507c2320889007239","factoryDependencies":{}}},"contracts/ERC20Token.sol":{"ERC20Token":{"abi":[{"inputs":[{"internalType":"string","name":"name","type":"string"},{"internalType":"string","name":"symbol","type":"string"}],"stateMutability":"nonpayable","type":"constructor"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"decimals","outputs":[{"internalType":"uint8","name":"","type":"uint8"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"subtractedValue","type":"uint256"}],"name":"decreaseAllowance","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"addedValue","type":"uint256"}],"name":"increaseAllowance","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"}],"metadata":{"optimizer_settings":"M3B3","solc_metadata":"{\"compiler\":{\"version\":\"0.8.9+commit.e5eed63a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"symbol\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"decreaseAllowance(address,uint256)\":{\"details\":\"Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`.\"},\"increaseAllowance(address,uint256)\":{\"details\":\"Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `amount`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `amount`. - the caller must have allowance for ``from``'s tokens of at least `amount`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/ERC20Token.sol\":\"ERC20Token\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"details\":{\"constantOptimizer\":false,\"cse\":true,\"deduplicate\":true,\"inliner\":true,\"jumpdestRemover\":true,\"orderLiterals\":true,\"peephole\":true,\"yul\":true,\"yulDetails\":{\"optimizerSteps\":\"dhfoDgvulfnTUtnIf[xarrscLMcCTUtTOntnfDIulLculVcul jjTpeulxarulrulxarrcLgvifCTUcarrLsTFOtfDncarrIulc]jmuljuljul VcTOcul jmul\",\"stackAllocation\":true}},\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0xa56ca923f70c1748830700250b19c61b70db9a683516dc5e216694a50445d99c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cac938788bc4be12101e59d45588b4e059579f4e61062e1cda8d6b06c0191b15\",\"dweb:/ipfs/QmV2JKCyjTVH3rkWNrfdJRhAT7tZ3usAN2XcnD4h53Mvih\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x287b55befed2961a7eabd7d7b1b2839cbca8a5b80ef8dcbb25ed3d4c2002c305\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bd39944e8fc06be6dbe2dd1d8449b5336e23c6a7ba3e8e9ae5ae0f37f35283f5\",\"dweb:/ipfs/QmPV3FGYjVwvKSgAXKUN3r9T9GwniZz83CxBpM7vyj2G53\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x8de418a5503946cabe331f35fe242d3201a73f67f77aaeb7110acb1f30423aca\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a376d3dda2cb70536c0a45c208b29b34ac560c4cb4f513a42079f96ba47d2dd\",\"dweb:/ipfs/QmZQg6gn1sUpM8wHzwNvSnihumUCAhxD119MpXeKp8B9s8\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"contracts/ERC20Token.sol\":{\"keccak256\":\"0x0f0ba001a42c41f383c91d4248b1e188b73041d44ca6b8dd5fc9d8115a1fec7c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cd078f41bb3c15105e5e498e6d800824223be7c7bc38c277ef7456934349b747\",\"dweb:/ipfs/QmTqt2u8mL6j7zz2nnNgRTTZRxmkfomDBr2JWq6JghTAsp\"]}},\"version\":1}","zk_version":"1.3.13"},"evm":{"legacyAssembly":null,"assembly":"\t.text\n\t.file\t\"ERC20Token.sol:ERC20Token\"\n\t.globl\t__entry\n__entry:\n.func_begin0:\n\tnop\tstack+=[7]\n\tptr.add\tr1, r0, stack[@ptr_calldata]\n\tshr.s\t96, r1, r1\n\tand\t@CPI0_0[0], r1, stack[@calldatasize]\n\tadd\t128, r0, r1\n\tst.1\t64, r1\n\tand!\t1, r2, r1\n\tjump.ne\t@.BB0_1\n\tadd\tstack[@calldatasize], r0, r1\n\tsub.s!\t4, r1, r1\n\tjump.lt\t@.BB0_2\n\tptr.add\tstack[@ptr_calldata], r0, r1\n\tld\tr1, r1\n\tshr.s\t224, r1, r1\n\tsub.s!\t@CPI0_7[0], r1, r2\n\tjump.le\t@.BB0_55\n\tsub.s!\t@CPI0_8[0], r1, r2\n\tjump.gt\t@.BB0_65\n\tsub.s!\t@CPI0_12[0], r1, r2\n\tjump.eq\t@.BB0_81\n\tsub.s!\t@CPI0_13[0], r1, r2\n\tjump.eq\t@.BB0_83\n\tsub.s!\t@CPI0_14[0], r1, r1\n\tjump.ne\t@.BB0_2\n\tcontext.get_context_u128\tr1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_2\n\tsub.s\t4, r0, r1\n\tadd\tstack[@calldatasize], r1, r1\n\tadd\t@CPI0_2[0], r0, r2\n\tsub!\tr1, r0, r3\n\tadd\tr0, r0, r3\n\tadd.lt\tr2, r0, r3\n\tand\t@CPI0_2[0], r1, r1\n\tsub!\tr1, r0, r4\n\tadd.le\tr0, r0, r2\n\tsub.s!\t@CPI0_2[0], r1, r1\n\tadd\tr3, r0, r1\n\tadd.eq\tr2, r0, r1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_2\n\tnear_call\tr0, @copy_array_from_storage_to_memory_string, @DEFAULT_UNWIND\n\tadd\tr1, r0, r2\n\tld.1\t64, r1\n\tadd\tr1, r0, stack-[7]\n\tnear_call\tr0, @abi_encode_string, @DEFAULT_UNWIND\n\tadd\tstack-[7], r0, r4\n\tsub\tr1, r4, r1\n\tadd\t@CPI0_0[0], r0, r2\n\tsub.s!\t@CPI0_0[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tsub.s!\t@CPI0_0[0], r4, r3\n\tadd.lt\tr4, r0, r2\n\tshl.s\t64, r2, r2\n\tshl.s\t96, r1, r1\n\tor\tr1, r2, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_1:\n\tcontext.get_context_u128\tr1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_2\n\tadd\tstack[@calldatasize], r0, r2\n\tadd\t31, r2, r1\n\tsub.s\t32, r0, r10\n\tand\tr1, r10, r4\n\tld.1\t64, r1\n\tadd\tr4, r1, r3\n\tsub!\tr3, r4, r4\n\tadd\t0, r0, r4\n\tadd.lt\t1, r0, r4\n\tsub.s!\t@CPI0_1[0], r3, r5\n\tjump.gt\t@.BB0_5\n\tand!\t1, r4, r4\n\tjump.ne\t@.BB0_5\n\tst.1\t64, r3\n\tand\t31, r2, r3\n\tptr.add\tstack[@ptr_calldata], r0, r4\n\tshr.s!\t5, r2, r5\n\tjump.eq\t@.BB0_94\n\tadd\tr0, r0, r6\n.BB0_8:\n\tshl.s\t5, r6, r7\n\tadd\tr1, r7, r8\n\tptr.add\tr4, r7, r7\n\tld\tr7, r7\n\tst.1\tr8, r7\n\tadd\t1, r6, r6\n\tsub!\tr6, r5, r7\n\tjump.lt\t@.BB0_8\n.BB0_94:\n\tsub!\tr3, r0, r6\n\tjump.eq\t@.BB0_10\n\tshl.s\t5, r5, r5\n\tptr.add\tr4, r5, r4\n\tadd\tr1, r5, r5\n\tshl.s\t3, r3, r3\n\tld.1\tr5, r6\n\tshl\tr6, r3, r6\n\tshr\tr6, r3, r6\n\tld\tr4, r4\n\tsub\t256, r3, r3\n\tshr\tr4, r3, r4\n\tshl\tr4, r3, r3\n\tor\tr3, r6, r3\n\tst.1\tr5, r3\n.BB0_10:\n\tadd\t@CPI0_2[0], r0, r3\n\tsub.s!\t64, r2, r4\n\tadd\tr0, r0, r4\n\tadd.lt\tr3, r0, r4\n\tand\t@CPI0_2[0], r2, r5\n\tsub!\tr5, r0, r6\n\tadd.le\tr0, r0, r3\n\tsub.s!\t@CPI0_2[0], r5, r5\n\tadd.ne\tr4, r0, r3\n\tsub!\tr3, r0, r3\n\tjump.ne\t@.BB0_2\n\tld.1.inc\tr1, r4, r3\n\tsub.s!\t@CPI0_1[0], r4, r5\n\tjump.gt\t@.BB0_2\n\tadd\tr1, r2, r2\n\tadd\tr4, r1, r4\n\tadd\t31, r4, r5\n\tadd\t@CPI0_2[0], r0, r6\n\tsub!\tr5, r2, r7\n\tadd\tr0, r0, r7\n\tadd.ge\tr6, r0, r7\n\tand\t@CPI0_2[0], r5, r5\n\tand\t@CPI0_2[0], r2, r8\n\tsub!\tr5, r8, r9\n\tadd.ge\tr0, r0, r6\n\txor\tr5, r8, r5\n\tsub.s!\t@CPI0_2[0], r5, r5\n\tadd\tr7, r0, r5\n\tadd.eq\tr6, r0, r5\n\tsub!\tr5, r0, r5\n\tjump.ne\t@.BB0_2\n\tld.1\tr4, r5\n\tsub.s!\t@CPI0_1[0], r5, r6\n\tjump.le\t@.BB0_14\n.BB0_5:\n\tadd\t@CPI0_5[0], r0, r1\n\tst.1\t0, r1\n\tadd\t65, r0, r1\n\tst.1\t4, r1\n\tadd\t@CPI0_6[0], r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB0_55:\n\tsub.s!\t@CPI0_15[0], r1, r2\n\tjump.le\t@.BB0_56\n\tsub.s!\t@CPI0_16[0], r1, r2\n\tjump.eq\t@.BB0_73\n\tsub.s!\t@CPI0_17[0], r1, r2\n\tjump.eq\t@.BB0_76\n\tsub.s!\t@CPI0_18[0], r1, r1\n\tjump.ne\t@.BB0_2\n\tcontext.get_context_u128\tr1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_2\n\tsub.s\t4, r0, r1\n\tadd\tstack[@calldatasize], r1, r1\n\tadd\t@CPI0_2[0], r0, r2\n\tsub!\tr1, r0, r3\n\tadd\tr0, r0, r3\n\tadd.lt\tr2, r0, r3\n\tand\t@CPI0_2[0], r1, r1\n\tsub!\tr1, r0, r4\n\tadd.le\tr0, r0, r2\n\tsub.s!\t@CPI0_2[0], r1, r1\n\tadd\tr3, r0, r1\n\tadd.eq\tr2, r0, r1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_2\n\tld.1\t64, r1\n\tadd\t18, r0, r2\n\tst.1\tr1, r2\n\tadd\t@CPI0_0[0], r0, r2\n\tsub.s!\t@CPI0_0[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI0_21[0], r1, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_65:\n\tsub.s!\t@CPI0_9[0], r1, r2\n\tjump.eq\t@.BB0_88\n\tsub.s!\t@CPI0_10[0], r1, r2\n\tjump.eq\t@.BB0_90\n\tsub.s!\t@CPI0_11[0], r1, r1\n\tjump.ne\t@.BB0_2\n\tcontext.get_context_u128\tr1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_2\n\tadd\tstack[@calldatasize], r0, r1\n\tnear_call\tr0, @abi_decode_addresst_address, @DEFAULT_UNWIND\n\tadd\tr2, r0, stack-[7]\n\tnear_call\tr0, @mapping_index_access_mapping_address_uint256_of_address_2492, @DEFAULT_UNWIND\n\tadd\tstack-[7], r0, r2\n\tnear_call\tr0, @mapping_index_access_mapping_address_uint256_of_address.3, @DEFAULT_UNWIND\n\tsload\tr1, r1\n\tld.1\t64, r2\n\tst.1\tr2, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI0_21[0], r1, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_56:\n\tsub.s!\t@CPI0_19[0], r1, r2\n\tjump.eq\t@.BB0_68\n\tsub.s!\t@CPI0_20[0], r1, r1\n\tjump.ne\t@.BB0_2\n\tcontext.get_context_u128\tr1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_2\n\tadd\tstack[@calldatasize], r0, r1\n\tnear_call\tr0, @abi_decode_addresst_uint256, @DEFAULT_UNWIND\n\tnear_call\tr0, @fun_approve, @DEFAULT_UNWIND\n\tadd\t1, r0, r1\n\tld.1\t64, r2\n\tst.1\tr2, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI0_21[0], r1, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_81:\n\tcontext.get_context_u128\tr1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_2\n\tadd\tstack[@calldatasize], r0, r1\n\tnear_call\tr0, @abi_decode_addresst_uint256, @DEFAULT_UNWIND\n\tnear_call\tr0, @fun_increaseAllowance, @DEFAULT_UNWIND\n\tadd\t1, r0, r1\n\tld.1\t64, r2\n\tst.1\tr2, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI0_21[0], r1, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_83:\n\tcontext.get_context_u128\tr1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_2\n\tadd\tstack[@calldatasize], r0, r1\n\tnear_call\tr0, @abi_decode_address, @DEFAULT_UNWIND\n\tnear_call\tr0, @fun_balanceOf, @DEFAULT_UNWIND\n\tld.1\t64, r2\n\tst.1\tr2, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI0_21[0], r1, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_73:\n\tcontext.get_context_u128\tr1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_2\n\tsub.s\t4, r0, r1\n\tadd\tstack[@calldatasize], r1, r1\n\tadd\t@CPI0_2[0], r0, r2\n\tsub!\tr1, r0, r3\n\tadd\tr0, r0, r3\n\tadd.lt\tr2, r0, r3\n\tand\t@CPI0_2[0], r1, r1\n\tsub!\tr1, r0, r4\n\tadd.le\tr0, r0, r2\n\tsub.s!\t@CPI0_2[0], r1, r1\n\tadd\tr3, r0, r1\n\tadd.eq\tr2, r0, r1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_2\n\tadd\t2, r0, r1\n\tsload\tr1, r1\n\tld.1\t64, r2\n\tst.1\tr2, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI0_21[0], r1, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_76:\n\tcontext.get_context_u128\tr1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_2\n\tadd\tstack[@calldatasize], r0, r1\n\tnear_call\tr0, @abi_decode_addresst_addresst_uint256, @DEFAULT_UNWIND\n\tnear_call\tr0, @fun_transferFrom, @DEFAULT_UNWIND\n\tadd\t1, r0, r1\n\tld.1\t64, r2\n\tst.1\tr2, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI0_21[0], r1, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_88:\n\tcontext.get_context_u128\tr1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_2\n\tadd\tstack[@calldatasize], r0, r1\n\tnear_call\tr0, @abi_decode_addresst_uint256, @DEFAULT_UNWIND\n\tnear_call\tr0, @fun_decreaseAllowance, @DEFAULT_UNWIND\n\tadd\t1, r0, r1\n\tld.1\t64, r2\n\tst.1\tr2, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI0_21[0], r1, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_90:\n\tcontext.get_context_u128\tr1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_2\n\tadd\tstack[@calldatasize], r0, r1\n\tnear_call\tr0, @abi_decode_addresst_uint256, @DEFAULT_UNWIND\n\tnear_call\tr0, @fun_transfer, @DEFAULT_UNWIND\n\tadd\t1, r0, r1\n\tld.1\t64, r2\n\tst.1\tr2, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI0_21[0], r1, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_68:\n\tcontext.get_context_u128\tr1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_2\n\tsub.s\t4, r0, r1\n\tadd\tstack[@calldatasize], r1, r1\n\tadd\t@CPI0_2[0], r0, r2\n\tsub!\tr1, r0, r3\n\tadd\tr0, r0, r3\n\tadd.lt\tr2, r0, r3\n\tand\t@CPI0_2[0], r1, r1\n\tsub!\tr1, r0, r4\n\tadd.le\tr0, r0, r2\n\tsub.s!\t@CPI0_2[0], r1, r1\n\tadd\tr3, r0, r1\n\tadd.eq\tr2, r0, r1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_2\n\tnear_call\tr0, @copy_array_from_storage_to_memory_string_2479, @DEFAULT_UNWIND\n\tadd\tr1, r0, r2\n\tld.1\t64, r1\n\tadd\tr1, r0, stack-[7]\n\tnear_call\tr0, @abi_encode_string, @DEFAULT_UNWIND\n\tadd\tstack-[7], r0, r4\n\tsub\tr1, r4, r1\n\tadd\t@CPI0_0[0], r0, r2\n\tsub.s!\t@CPI0_0[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tsub.s!\t@CPI0_0[0], r4, r3\n\tadd.lt\tr4, r0, r2\n\tshl.s\t64, r2, r2\n\tshl.s\t96, r1, r1\n\tor\tr1, r2, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_14:\n\tadd\t63, r5, r6\n\tand\tr6, r10, r6\n\tld.1\t64, r11\n\tadd\tr11, r6, r6\n\tsub!\tr6, r11, r7\n\tadd\t0, r0, r7\n\tadd.lt\t1, r0, r7\n\tsub.s!\t@CPI0_1[0], r6, r8\n\tjump.gt\t@.BB0_5\n\tand!\t1, r7, r7\n\tjump.ne\t@.BB0_5\n\tst.1\t64, r6\n\tst.1.inc\tr11, r5, r12\n\tadd\t32, r5, r6\n\tadd\tr6, r4, r7\n\tsub!\tr7, r2, r7\n\tjump.gt\t@.BB0_2\n\tsub!\tr5, r0, r7\n\tjump.eq\t@.BB0_22\n\tadd\tr0, r0, r7\n.BB0_19:\n\tadd\t32, r7, r7\n\tadd\tr7, r11, r8\n\tadd\tr7, r4, r9\n\tld.1\tr9, r9\n\tst.1\tr8, r9\n\tsub!\tr7, r5, r8\n\tjump.lt\t@.BB0_19\n\tsub!\tr7, r5, r4\n\tjump.le\t@.BB0_22\n\tadd\tr11, r6, r4\n\tst.1\tr4, r0\n.BB0_22:\n\tld.1\tr3, r3\n\tsub.s!\t@CPI0_1[0], r3, r4\n\tjump.gt\t@.BB0_2\n\tadd\tr3, r1, r1\n\tadd\t31, r1, r3\n\tadd\t@CPI0_2[0], r0, r4\n\tsub!\tr3, r2, r5\n\tadd\tr0, r0, r5\n\tadd.ge\tr4, r0, r5\n\tand\t@CPI0_2[0], r3, r3\n\tand\t@CPI0_2[0], r2, r6\n\tsub!\tr3, r6, r7\n\tadd.ge\tr0, r0, r4\n\txor\tr3, r6, r3\n\tsub.s!\t@CPI0_2[0], r3, r3\n\tadd\tr5, r0, r3\n\tadd.eq\tr4, r0, r3\n\tsub!\tr3, r0, r3\n\tjump.ne\t@.BB0_2\n\tld.1\tr1, r3\n\tsub.s!\t@CPI0_1[0], r3, r4\n\tjump.gt\t@.BB0_5\n\tadd\t63, r3, r4\n\tand\tr4, r10, r4\n\tld.1\t64, r7\n\tadd\tr7, r4, r4\n\tsub!\tr4, r7, r5\n\tadd\t0, r0, r5\n\tadd.lt\t1, r0, r5\n\tsub.s!\t@CPI0_1[0], r4, r6\n\tjump.gt\t@.BB0_5\n\tand!\t1, r5, r5\n\tjump.ne\t@.BB0_5\n\tst.1\t64, r4\n\tst.1\tr7, r3\n\tadd\t32, r3, r4\n\tadd\tr4, r1, r5\n\tsub!\tr5, r2, r2\n\tjump.le\t@.BB0_28\n.BB0_2:\n\tadd\tr0, r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB0_28:\n\tadd\tr12, r0, stack-[4]\n\tadd\tr11, r0, stack-[7]\n\tadd\tr10, r0, stack-[5]\n\tsub!\tr3, r0, r2\n\tjump.eq\t@.BB0_33\n\tadd\tr0, r0, r2\n.BB0_30:\n\tadd\t32, r2, r2\n\tadd\tr2, r7, r5\n\tadd\tr2, r1, r6\n\tld.1\tr6, r6\n\tst.1\tr5, r6\n\tsub!\tr2, r3, r5\n\tjump.lt\t@.BB0_30\n\tsub!\tr2, r3, r1\n\tjump.le\t@.BB0_33\n\tadd\tr7, r4, r1\n\tst.1\tr1, r0\n.BB0_33:\n\tadd\tstack-[7], r0, r1\n\tld.1\tr1, r1\n\tadd\tr1, r0, stack-[6]\n\tsub.s!\t@CPI0_1[0], r1, r1\n\tjump.gt\t@.BB0_5\n\tadd\tr7, r0, stack-[1]\n\tadd\t3, r0, r1\n\tadd\tr1, r0, stack-[3]\n\tsload\tr1, r1\n\tand!\t1, r1, r2\n\tshr.s\t1, r1, r1\n\tand\t127, r1, r3\n\tadd.eq\tr3, r0, r1\n\tadd\tr1, r0, stack-[2]\n\tsub.s!\t31, r1, r1\n\tadd\t0, r0, r1\n\tadd.gt\t1, r0, r1\n\tand\t1, r1, r1\n\tsub!\tr2, r1, r1\n\tjump.eq\t@.BB0_36\n\tadd\t@CPI0_5[0], r0, r1\n\tst.1\t0, r1\n\tadd\t34, r0, r1\n\tst.1\t4, r1\n\tadd\t@CPI0_6[0], r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB0_36:\n\tadd\tstack-[2], r0, r1\n\tsub.s!\t32, r1, r1\n\tjump.lt\t@.BB0_41\n\tadd\tstack-[3], r0, r1\n\tst.1\t0, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_3[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tadd\tstack-[6], r0, r3\n\tadd\t31, r3, r2\n\tshr.s\t5, r2, r2\n\tsub.s!\t32, r3, r3\n\tadd.lt\tr0, r0, r2\n\tld\tr1, r3\n\tadd\tstack-[2], r0, r1\n\tadd\t31, r1, r1\n\tshr.s\t5, r1, r1\n\tadd\tr3, r1, r1\n\tadd\tr3, r2, r2\n\tsub!\tr2, r1, r3\n\tjump.ge\t@.BB0_41\n.BB0_40:\n\tsstore\tr2, r0\n\tadd\t1, r2, r2\n\tsub!\tr2, r1, r3\n\tjump.lt\t@.BB0_40\n.BB0_41:\n\tadd\tstack-[6], r0, r1\n\tsub.s!\t31, r1, r1\n\tjump.le\t@.BB0_50\n\tadd\tstack-[3], r0, r1\n\tst.1\t0, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_3[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tadd\tstack-[5], r0, r2\n\tadd\tstack-[7], r0, r6\n\tjump.eq\t@.BB0_2\n\tadd\tstack-[6], r0, r3\n\tand!\tr3, r2, r3\n\tadd\t32, r0, r2\n\tld\tr1, r1\n\tjump.eq\t@.BB0_47\n\tadd\t32, r0, r2\n\tadd\tr0, r0, r4\n.BB0_46:\n\tadd\tr2, r6, r5\n\tld.1\tr5, r5\n\tsstore\tr1, r5\n\tadd\t32, r2, r2\n\tadd\t1, r1, r1\n\tadd\t32, r4, r4\n\tsub!\tr4, r3, r5\n\tjump.lt\t@.BB0_46\n.BB0_47:\n\tadd\tstack-[6], r0, r4\n\tsub!\tr3, r4, r3\n\tjump.ge\t@.BB0_49\n\tadd\tstack-[6], r0, r3\n\tshl.s\t3, r3, r3\n\tand\t248, r3, r3\n\tsub.s\t1, r0, r4\n\tshr\tr4, r3, r3\n\txor\tr3, r4, r3\n\tadd\tstack-[7], r0, r4\n\tadd\tr2, r4, r2\n\tld.1\tr2, r2\n\tand\tr2, r3, r2\n\tsstore\tr1, r2\n.BB0_49:\n\tadd\t1, r0, r1\n\tadd\tstack-[6], r0, r2\n\tshl.s\t1, r2, r2\n\tjump\t@.BB0_42\n.BB0_50:\n\tadd\tstack-[6], r0, r1\n\tsub!\tr1, r0, r1\n\tadd\tr0, r0, r1\n\tjump.eq\t@.BB0_52\n\tadd\tstack-[4], r0, r1\n\tld.1\tr1, r1\n.BB0_52:\n\tadd\tstack-[6], r0, r4\n\tshl.s\t3, r4, r2\n\tsub.s\t1, r0, r3\n\tshr\tr3, r2, r2\n\txor\tr2, r3, r2\n\tand\tr1, r2, r2\n\tshl.s\t1, r4, r1\n.BB0_42:\n\tor\tr2, r1, r1\n\tadd\tstack-[3], r0, r2\n\tsstore\tr2, r1\n\tadd\tstack-[1], r0, r1\n\tnear_call\tr0, @copy_byte_array_to_storage_from_string_to_string, @DEFAULT_UNWIND\n\tcontext.caller\tr1\n\tnear_call\tr0, @fun_mint, @DEFAULT_UNWIND\n\tadd\t32, r0, r1\n\tst.2\t256, r1\n\tst.2\t288, r0\n\tadd\t@CPI0_4[0], r0, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.func_end0:\n\ncopy_byte_array_to_storage_from_string_to_string:\n.func_begin1:\n\tnop\tstack+=[5]\n\tld.1.inc\tr1, r5, r7\n\tsub.s!\t@CPI1_0[0], r5, r2\n\tjump.ge\t@.BB1_1\n\tadd\t4, r0, r4\n\tsload\tr4, r3\n\tand!\t1, r3, r2\n\tshr.s\t1, r3, r6\n\tand\t127, r6, r3\n\tadd.eq\tr3, r0, r6\n\tsub.s!\t31, r6, r3\n\tadd\t0, r0, r3\n\tadd.gt\t1, r0, r3\n\tand\t1, r3, r3\n\tsub!\tr2, r3, r2\n\tjump.ne\t@.BB1_3\n\tadd\tr1, r0, stack-[3]\n\tsub.s!\t32, r6, r1\n\tadd\tr4, r0, stack-[5]\n\tadd\tr5, r0, stack-[4]\n\tjump.lt\t@.BB1_10\n\tadd\tr6, r0, stack-[1]\n\tadd\tr7, r0, stack-[2]\n\tst.1\t0, r4\n\tadd\t@CPI1_1[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI1_1[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI1_2[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB1_6\n\tadd\tstack-[4], r0, r5\n\tadd\t31, r5, r2\n\tshr.s\t5, r2, r2\n\tsub.s!\t32, r5, r3\n\tadd.lt\tr0, r0, r2\n\tld\tr1, r3\n\tadd\tstack-[1], r0, r1\n\tadd\t31, r1, r1\n\tshr.s\t5, r1, r1\n\tadd\tr3, r1, r1\n\tadd\tr3, r2, r2\n\tsub!\tr2, r1, r3\n\tadd\tstack-[5], r0, r4\n\tadd\tstack-[2], r0, r7\n\tjump.ge\t@.BB1_10\n.BB1_9:\n\tsstore\tr2, r0\n\tadd\t1, r2, r2\n\tsub!\tr2, r1, r3\n\tjump.lt\t@.BB1_9\n.BB1_10:\n\tsub.s!\t31, r5, r1\n\tjump.le\t@.BB1_19\n\tst.1\t0, r4\n\tadd\t@CPI1_1[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI1_1[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI1_2[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB1_6\n\tsub.s\t32, r0, r2\n\tadd\tstack-[4], r0, r6\n\tand!\tr6, r2, r3\n\tadd\t32, r0, r2\n\tld\tr1, r1\n\tadd\tstack-[3], r0, r7\n\tjump.eq\t@.BB1_16\n\tadd\t32, r0, r2\n\tadd\tr0, r0, r4\n.BB1_15:\n\tadd\tr2, r7, r5\n\tld.1\tr5, r5\n\tsstore\tr1, r5\n\tadd\t32, r2, r2\n\tadd\t1, r1, r1\n\tadd\t32, r4, r4\n\tsub!\tr4, r3, r5\n\tjump.lt\t@.BB1_15\n.BB1_16:\n\tsub!\tr3, r6, r3\n\tjump.ge\t@.BB1_18\n\tshl.s\t3, r6, r3\n\tand\t248, r3, r3\n\tsub.s\t1, r0, r4\n\tshr\tr4, r3, r3\n\txor\tr3, r4, r3\n\tadd\tr2, r7, r2\n\tld.1\tr2, r2\n\tand\tr2, r3, r2\n\tsstore\tr1, r2\n.BB1_18:\n\tshl.s\t1, r6, r1\n\tor\t1, r1, r1\n\tadd\tstack-[5], r0, r4\n\tjump\t@.BB1_11\n.BB1_19:\n\tsub!\tr5, r0, r1\n\tadd\tr0, r0, r1\n\tjump.eq\t@.BB1_11\n\tshl.s\t3, r5, r1\n\tsub.s\t1, r0, r2\n\tshr\tr2, r1, r1\n\txor\tr1, r2, r1\n\tld.1\tr7, r2\n\tand\tr2, r1, r1\n\tshl.s\t1, r5, r2\n\tor\tr1, r2, r1\n.BB1_11:\n\tsstore\tr4, r1\n\tret\n.BB1_1:\n\tadd\t@CPI1_3[0], r0, r1\n\tst.1\t0, r1\n\tadd\t65, r0, r1\n\tst.1\t4, r1\n\tadd\t@CPI1_4[0], r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB1_3:\n\tadd\t@CPI1_3[0], r0, r1\n\tst.1\t0, r1\n\tadd\t34, r0, r1\n\tst.1\t4, r1\n\tadd\t@CPI1_4[0], r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB1_6:\n\tadd\tr0, r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.func_end1:\n\nfun_mint:\n.func_begin2:\n\tnop\tstack+=[1]\n\tand!\t@CPI2_0[0], r1, r5\n\tjump.eq\t@.BB2_1\n\tadd\tr1, r0, stack-[1]\n\tadd\t2, r0, r2\n\tsload\tr2, r3\n\tsub.s!\t@CPI2_1[0], r3, r4\n\tjump.ge\t@.BB2_3\n\tadd\t@CPI2_2[0], r3, r3\n\tsstore\tr2, r3\n\tst.1\t0, r5\n\tst.1\t32, r0\n\tadd\t@CPI2_3[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI2_3[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI2_4[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB2_5\n\tld\tr1, r1\n\tsload\tr1, r2\n\tadd\t@CPI2_2[0], r2, r2\n\tsstore\tr1, r2\n\tadd\t@CPI2_2[0], r0, r1\n\tld.1\t64, r2\n\tst.1\tr2, r1\n\tadd\t@CPI2_3[0], r0, r1\n\tcontext.gas_left\tr3\n\tsub.s!\t@CPI2_3[0], r3, r4\n\tadd.ge\tr1, r0, r3\n\tsub.s!\t@CPI2_3[0], r2, r4\n\tadd.lt\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tshl.s\t192, r3, r2\n\tor\tr2, r1, r1\n\tor\t@CPI2_5[0], r1, r1\n\tadd\t32781, r0, r2\n\tadd\t3, r0, r3\n\tadd\t@CPI2_6[0], r0, r4\n\tadd\tr0, r0, r5\n\tadd\tstack-[1], r0, r6\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r1\n\tjump.eq\t@.BB2_5\n\tret\n.BB2_5:\n\tadd\tr0, r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB2_1:\n\tld.1\t64, r1\n\tadd\t68, r1, r2\n\tadd\t@CPI2_9[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t36, r1, r2\n\tadd\t31, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI2_10[0], r0, r2\n\tst.1\tr1, r2\n\tadd\t4, r1, r2\n\tadd\t32, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI2_3[0], r0, r2\n\tsub.s!\t@CPI2_3[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI2_11[0], r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB2_3:\n\tadd\t@CPI2_7[0], r0, r1\n\tst.1\t0, r1\n\tadd\t17, r0, r1\n\tst.1\t4, r1\n\tadd\t@CPI2_8[0], r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.func_end2:\n\nabi_encode_string:\n.func_begin3:\n\tadd\t32, r0, r3\n\tst.1.inc\tr1, r3, r4\n\tld.1\tr2, r3\n\tst.1\tr4, r3\n\tsub!\tr3, r0, r4\n\tadd\t64, r1, r1\n\tjump.eq\t@.BB3_4\n\tadd\tr0, r0, r4\n.BB3_2:\n\tadd\tr1, r4, r5\n\tadd\t32, r4, r4\n\tadd\tr4, r2, r6\n\tld.1\tr6, r6\n\tst.1\tr5, r6\n\tsub!\tr4, r3, r5\n\tjump.lt\t@.BB3_2\n\tsub!\tr4, r3, r2\n\tjump.le\t@.BB3_4\n\tadd\tr1, r3, r2\n\tst.1\tr2, r0\n\tjump\t@.BB3_6\n.BB3_4:\n.BB3_6:\n\tadd\t31, r3, r2\n\tsub.s\t32, r0, r3\n\tand\tr2, r3, r2\n\tadd\tr1, r2, r1\n\tret\n.func_end3:\n\nabi_decode_addresst_uint256:\n.func_begin4:\n\tsub.s\t4, r1, r1\n\tadd\t@CPI4_0[0], r0, r2\n\tsub.s!\t63, r1, r3\n\tadd\tr0, r0, r3\n\tadd.gt\tr2, r0, r3\n\tand\t@CPI4_0[0], r1, r1\n\tsub!\tr1, r0, r4\n\tadd.ge\tr0, r0, r2\n\tsub.s!\t@CPI4_0[0], r1, r1\n\tadd\tr3, r0, r1\n\tadd.eq\tr2, r0, r1\n\tsub!\tr1, r0, r1\n\tjump.eq\t@.BB4_1\n\tptr.add\tstack[@ptr_calldata], r0, r2\n\tptr.add.s\t4, r2, r1\n\tld\tr1, r1\n\tsub.s!\t@CPI4_1[0], r1, r3\n\tjump.gt\t@.BB4_1\n\tptr.add.s\t36, r2, r2\n\tld\tr2, r2\n\tret\n.BB4_1:\n\tadd\tr0, r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.func_end4:\n\nabi_decode_addresst_addresst_uint256:\n.func_begin5:\n\tsub.s\t4, r1, r1\n\tadd\t@CPI5_0[0], r0, r2\n\tsub.s!\t95, r1, r3\n\tadd\tr0, r0, r3\n\tadd.gt\tr2, r0, r3\n\tand\t@CPI5_0[0], r1, r1\n\tsub!\tr1, r0, r4\n\tadd.ge\tr0, r0, r2\n\tsub.s!\t@CPI5_0[0], r1, r1\n\tadd\tr3, r0, r1\n\tadd.eq\tr2, r0, r1\n\tsub!\tr1, r0, r1\n\tjump.eq\t@.BB5_1\n\tptr.add\tstack[@ptr_calldata], r0, r3\n\tptr.add.s\t4, r3, r1\n\tld\tr1, r1\n\tsub.s!\t@CPI5_1[0], r1, r2\n\tjump.gt\t@.BB5_1\n\tptr.add.s\t36, r3, r2\n\tld\tr2, r2\n\tsub.s!\t@CPI5_1[0], r2, r4\n\tjump.gt\t@.BB5_1\n\tptr.add.s\t68, r3, r3\n\tld\tr3, r3\n\tret\n.BB5_1:\n\tadd\tr0, r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.func_end5:\n\nabi_decode_address:\n.func_begin6:\n\tsub.s\t4, r1, r1\n\tadd\t@CPI6_0[0], r0, r2\n\tsub.s!\t31, r1, r3\n\tadd\tr0, r0, r3\n\tadd.gt\tr2, r0, r3\n\tand\t@CPI6_0[0], r1, r1\n\tsub!\tr1, r0, r4\n\tadd.ge\tr0, r0, r2\n\tsub.s!\t@CPI6_0[0], r1, r1\n\tadd\tr3, r0, r1\n\tadd.eq\tr2, r0, r1\n\tsub!\tr1, r0, r1\n\tjump.eq\t@.BB6_1\n\tadd\t4, r0, r1\n\tptr.add\tstack[@ptr_calldata], r1, r1\n\tld\tr1, r1\n\tsub.s!\t@CPI6_1[0], r1, r2\n\tjump.gt\t@.BB6_1\n\tret\n.BB6_1:\n\tadd\tr0, r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.func_end6:\n\nabi_decode_addresst_address:\n.func_begin7:\n\tsub.s\t4, r1, r1\n\tadd\t@CPI7_0[0], r0, r2\n\tsub.s!\t63, r1, r3\n\tadd\tr0, r0, r3\n\tadd.gt\tr2, r0, r3\n\tand\t@CPI7_0[0], r1, r1\n\tsub!\tr1, r0, r4\n\tadd.ge\tr0, r0, r2\n\tsub.s!\t@CPI7_0[0], r1, r1\n\tadd\tr3, r0, r1\n\tadd.eq\tr2, r0, r1\n\tsub!\tr1, r0, r1\n\tjump.eq\t@.BB7_1\n\tptr.add\tstack[@ptr_calldata], r0, r2\n\tptr.add.s\t4, r2, r1\n\tld\tr1, r1\n\tsub.s!\t@CPI7_1[0], r1, r3\n\tjump.gt\t@.BB7_1\n\tptr.add.s\t36, r2, r2\n\tld\tr2, r2\n\tsub.s!\t@CPI7_1[0], r2, r3\n\tjump.gt\t@.BB7_1\n\tret\n.BB7_1:\n\tadd\tr0, r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.func_end7:\n\ncopy_array_from_storage_to_memory_string_2479:\n.func_begin8:\n\tadd\t3, r0, r5\n\tsload\tr5, r4\n\tand!\t1, r4, r6\n\tshr.s\t1, r4, r1\n\tand\t127, r1, r2\n\tadd.ne\tr1, r0, r2\n\tsub.s!\t31, r2, r1\n\tadd\t0, r0, r1\n\tadd.gt\t1, r0, r1\n\tand\t1, r1, r1\n\tsub!\tr6, r1, r1\n\tjump.ne\t@.BB8_1\n\tld.1\t64, r1\n\tst.1.inc\tr1, r2, r3\n\tsub!\tr6, r0, r6\n\tjump.ne\t@.BB8_9\n\tsub.s\t256, r0, r2\n\tand\tr4, r2, r2\n\tst.1\tr3, r2\n\tadd\t64, r0, r4\n\tjump\t@.BB8_4\n.BB8_9:\n\tst.1\t0, r5\n\tadd\t32, r0, r4\n\tsub!\tr2, r0, r5\n\tjump.eq\t@.BB8_4\n\tadd\t@CPI8_0[0], r0, r4\n\tadd\tr0, r0, r6\n.BB8_11:\n\tadd\tr6, r0, r5\n\tadd\tr5, r3, r6\n\tsload\tr4, r7\n\tst.1\tr6, r7\n\tadd\t1, r4, r4\n\tadd\t32, r5, r6\n\tsub!\tr6, r2, r7\n\tjump.lt\t@.BB8_11\n\tadd\t95, r5, r2\n\tsub.s\t32, r0, r3\n\tand\tr2, r3, r4\n.BB8_4:\n\tadd\tr4, r1, r2\n\tsub!\tr2, r4, r3\n\tadd\t0, r0, r3\n\tadd.lt\t1, r0, r3\n\tsub.s!\t@CPI8_1[0], r2, r4\n\tjump.gt\t@.BB8_6\n\tand!\t1, r3, r3\n\tjump.ne\t@.BB8_6\n\tst.1\t64, r2\n\tret\n.BB8_1:\n\tadd\t@CPI8_2[0], r0, r1\n\tst.1\t0, r1\n\tadd\t34, r0, r1\n\tst.1\t4, r1\n\tadd\t@CPI8_3[0], r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB8_6:\n\tadd\t@CPI8_2[0], r0, r1\n\tst.1\t0, r1\n\tadd\t65, r0, r1\n\tst.1\t4, r1\n\tadd\t@CPI8_3[0], r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.func_end8:\n\ncopy_array_from_storage_to_memory_string:\n.func_begin9:\n\tadd\t4, r0, r5\n\tsload\tr5, r4\n\tand!\t1, r4, r6\n\tshr.s\t1, r4, r1\n\tand\t127, r1, r2\n\tadd.ne\tr1, r0, r2\n\tsub.s!\t31, r2, r1\n\tadd\t0, r0, r1\n\tadd.gt\t1, r0, r1\n\tand\t1, r1, r1\n\tsub!\tr6, r1, r1\n\tjump.ne\t@.BB9_1\n\tld.1\t64, r1\n\tst.1.inc\tr1, r2, r3\n\tsub!\tr6, r0, r6\n\tjump.ne\t@.BB9_9\n\tsub.s\t256, r0, r2\n\tand\tr4, r2, r2\n\tst.1\tr3, r2\n\tadd\t64, r0, r4\n\tjump\t@.BB9_4\n.BB9_9:\n\tst.1\t0, r5\n\tadd\t32, r0, r4\n\tsub!\tr2, r0, r5\n\tjump.eq\t@.BB9_4\n\tadd\t@CPI9_0[0], r0, r4\n\tadd\tr0, r0, r6\n.BB9_11:\n\tadd\tr6, r0, r5\n\tadd\tr5, r3, r6\n\tsload\tr4, r7\n\tst.1\tr6, r7\n\tadd\t1, r4, r4\n\tadd\t32, r5, r6\n\tsub!\tr6, r2, r7\n\tjump.lt\t@.BB9_11\n\tadd\t95, r5, r2\n\tsub.s\t32, r0, r3\n\tand\tr2, r3, r4\n.BB9_4:\n\tadd\tr4, r1, r2\n\tsub!\tr2, r4, r3\n\tadd\t0, r0, r3\n\tadd.lt\t1, r0, r3\n\tsub.s!\t@CPI9_1[0], r2, r4\n\tjump.gt\t@.BB9_6\n\tand!\t1, r3, r3\n\tjump.ne\t@.BB9_6\n\tst.1\t64, r2\n\tret\n.BB9_1:\n\tadd\t@CPI9_2[0], r0, r1\n\tst.1\t0, r1\n\tadd\t34, r0, r1\n\tst.1\t4, r1\n\tadd\t@CPI9_3[0], r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB9_6:\n\tadd\t@CPI9_2[0], r0, r1\n\tst.1\t0, r1\n\tadd\t65, r0, r1\n\tst.1\t4, r1\n\tadd\t@CPI9_3[0], r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.func_end9:\n\nmapping_index_access_mapping_address_uint256_of_address_2492:\n.func_begin10:\n\tand\t@CPI10_0[0], r1, r1\n\tst.1\t0, r1\n\tadd\t1, r0, r1\n\tst.1\t32, r1\n\tadd\t@CPI10_1[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI10_1[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI10_2[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB10_1\n\tld\tr1, r1\n\tret\n.BB10_1:\n\tadd\tr0, r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.func_end10:\n\nmapping_index_access_mapping_address_uint256_of_address.3:\n.func_begin11:\n\tand\t@CPI11_0[0], r2, r2\n\tst.1\t0, r2\n\tst.1\t32, r1\n\tadd\t@CPI11_1[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI11_1[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI11_2[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB11_1\n\tld\tr1, r1\n\tret\n.BB11_1:\n\tadd\tr0, r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.func_end11:\n\nfun_balanceOf:\n.func_begin12:\n\tand\t@CPI12_0[0], r1, r1\n\tst.1\t0, r1\n\tst.1\t32, r0\n\tadd\t@CPI12_1[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI12_1[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI12_2[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB12_1\n\tld\tr1, r1\n\tsload\tr1, r1\n\tret\n.BB12_1:\n\tadd\tr0, r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.func_end12:\n\nfun_transfer:\n.func_begin13:\n\tnop\tstack+=[6]\n\tadd\tr2, r0, stack-[6]\n\tcontext.caller\tr2\n\tand!\t@CPI13_0[0], r2, r3\n\tjump.eq\t@.BB13_1\n\tadd\tr2, r0, stack-[2]\n\tadd\tr1, r0, stack-[3]\n\tand!\t@CPI13_0[0], r1, r1\n\tadd\tr1, r0, stack-[5]\n\tjump.eq\t@.BB13_3\n\tadd\tr3, r0, stack-[4]\n\tst.1\t0, r3\n\tst.1\t32, r0\n\tadd\t@CPI13_1[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI13_1[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI13_2[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB13_5\n\tld\tr1, r1\n\tsload\tr1, r2\n\tadd\tstack-[6], r0, r1\n\tadd\tr2, r0, stack-[1]\n\tsub!\tr2, r1, r1\n\tjump.lt\t@.BB13_7\n\tadd\tstack-[4], r0, r1\n\tst.1\t0, r1\n\tst.1\t32, r0\n\tadd\t@CPI13_1[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI13_1[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI13_2[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB13_5\n\tadd\tstack-[6], r0, r2\n\tadd\tstack-[1], r0, r3\n\tsub\tr3, r2, r2\n\tld\tr1, r1\n\tsstore\tr1, r2\n\tadd\tstack-[5], r0, r1\n\tst.1\t0, r1\n\tst.1\t32, r0\n\tadd\t@CPI13_1[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI13_1[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI13_2[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB13_5\n\tld\tr1, r1\n\tsload\tr1, r2\n\tadd\tstack-[6], r0, r3\n\tadd\tr2, r3, r2\n\tsstore\tr1, r2\n\tld.1\t64, r1\n\tst.1\tr1, r3\n\tadd\t@CPI13_1[0], r0, r2\n\tcontext.gas_left\tr3\n\tsub.s!\t@CPI13_1[0], r3, r4\n\tadd.ge\tr2, r0, r3\n\tsub.s!\t@CPI13_1[0], r1, r4\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tshl.s\t192, r3, r2\n\tor\tr2, r1, r1\n\tor\t@CPI13_3[0], r1, r1\n\tadd\t32781, r0, r2\n\tadd\t3, r0, r3\n\tadd\t@CPI13_4[0], r0, r4\n\tadd\tstack-[2], r0, r5\n\tadd\tstack-[3], r0, r6\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r1\n\tjump.eq\t@.BB13_5\n\tret\n.BB13_5:\n\tadd\tr0, r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB13_1:\n\tld.1\t64, r1\n\tadd\t100, r1, r2\n\tadd\t@CPI13_11[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t68, r1, r2\n\tadd\t@CPI13_12[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t36, r1, r2\n\tadd\t37, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI13_7[0], r0, r2\n\tst.1\tr1, r2\n\tadd\t4, r1, r2\n\tadd\t32, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI13_1[0], r0, r2\n\tsub.s!\t@CPI13_1[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI13_8[0], r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB13_3:\n\tld.1\t64, r1\n\tadd\t100, r1, r2\n\tadd\t@CPI13_9[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t68, r1, r2\n\tadd\t@CPI13_10[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t36, r1, r2\n\tadd\t35, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI13_7[0], r0, r2\n\tst.1\tr1, r2\n\tadd\t4, r1, r2\n\tadd\t32, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI13_1[0], r0, r2\n\tsub.s!\t@CPI13_1[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI13_8[0], r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB13_7:\n\tld.1\t64, r1\n\tadd\t100, r1, r2\n\tadd\t@CPI13_5[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t68, r1, r2\n\tadd\t@CPI13_6[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t36, r1, r2\n\tadd\t38, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI13_7[0], r0, r2\n\tst.1\tr1, r2\n\tadd\t4, r1, r2\n\tadd\t32, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI13_1[0], r0, r2\n\tsub.s!\t@CPI13_1[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI13_8[0], r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.func_end13:\n\nfun_approve:\n.func_begin14:\n\tnop\tstack+=[4]\n\tcontext.caller\tr3\n\tand!\t@CPI14_0[0], r3, r4\n\tjump.eq\t@.BB14_1\n\tadd\tr2, r0, stack-[1]\n\tadd\tr3, r0, stack-[2]\n\tadd\tr1, r0, stack-[3]\n\tand!\t@CPI14_0[0], r1, r1\n\tadd\tr1, r0, stack-[4]\n\tjump.eq\t@.BB14_3\n\tst.1\t0, r4\n\tadd\t1, r0, r1\n\tst.1\t32, r1\n\tadd\t@CPI14_1[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI14_1[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI14_2[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB14_5\n\tld\tr1, r1\n\tadd\tstack-[4], r0, r2\n\tst.1\t0, r2\n\tst.1\t32, r1\n\tadd\t@CPI14_1[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI14_1[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI14_2[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB14_5\n\tld\tr1, r1\n\tadd\tstack-[1], r0, r2\n\tsstore\tr1, r2\n\tld.1\t64, r1\n\tst.1\tr1, r2\n\tadd\t@CPI14_1[0], r0, r2\n\tcontext.gas_left\tr3\n\tsub.s!\t@CPI14_1[0], r3, r4\n\tadd.ge\tr2, r0, r3\n\tsub.s!\t@CPI14_1[0], r1, r4\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tshl.s\t192, r3, r2\n\tor\tr2, r1, r1\n\tor\t@CPI14_3[0], r1, r1\n\tadd\t32781, r0, r2\n\tadd\t3, r0, r3\n\tadd\t@CPI14_4[0], r0, r4\n\tadd\tstack-[2], r0, r5\n\tadd\tstack-[3], r0, r6\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r1\n\tjump.eq\t@.BB14_5\n\tret\n.BB14_5:\n\tadd\tr0, r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB14_1:\n\tld.1\t64, r1\n\tadd\t100, r1, r2\n\tadd\t@CPI14_9[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t68, r1, r2\n\tadd\t@CPI14_10[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t36, r1, r2\n\tadd\t36, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI14_7[0], r0, r2\n\tst.1\tr1, r2\n\tadd\t4, r1, r2\n\tadd\t32, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI14_1[0], r0, r2\n\tsub.s!\t@CPI14_1[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI14_8[0], r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB14_3:\n\tld.1\t64, r1\n\tadd\t100, r1, r2\n\tadd\t@CPI14_5[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t68, r1, r2\n\tadd\t@CPI14_6[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t36, r1, r2\n\tadd\t34, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI14_7[0], r0, r2\n\tst.1\tr1, r2\n\tadd\t4, r1, r2\n\tadd\t32, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI14_1[0], r0, r2\n\tsub.s!\t@CPI14_1[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI14_8[0], r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.func_end14:\n\nfun_transferFrom:\n.func_begin15:\n\tnop\tstack+=[8]\n\tadd\tr3, r0, stack-[8]\n\tadd\tr2, r0, stack-[6]\n\tadd\tr1, r0, stack-[5]\n\tand\t@CPI15_0[0], r1, r1\n\tadd\tr1, r0, stack-[7]\n\tst.1\t0, r1\n\tadd\t1, r0, r1\n\tadd\tr1, r0, stack-[3]\n\tst.1\t32, r1\n\tadd\t@CPI15_1[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI15_1[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI15_2[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB15_1\n\tcontext.caller\tr2\n\tld\tr1, r1\n\tadd\tr2, r0, stack-[2]\n\tand\t@CPI15_0[0], r2, r2\n\tadd\tr2, r0, stack-[4]\n\tst.1\t0, r2\n\tst.1\t32, r1\n\tadd\t@CPI15_1[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI15_1[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI15_2[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB15_1\n\tld\tr1, r1\n\tsload\tr1, r2\n\tsub.s\t1, r0, r1\n\tsub!\tr2, r1, r1\n\tjump.eq\t@.BB15_5\n\tadd\tstack-[8], r0, r1\n\tsub!\tr2, r1, r1\n\tjump.lt\t@.BB15_16\n\tadd\tstack-[7], r0, r1\n\tsub!\tr1, r0, r1\n\tjump.eq\t@.BB15_18\n\tadd\tr2, r0, stack-[1]\n\tadd\tstack-[4], r0, r1\n\tsub!\tr1, r0, r1\n\tjump.eq\t@.BB15_20\n\tadd\tstack-[7], r0, r1\n\tst.1\t0, r1\n\tadd\tstack-[3], r0, r1\n\tst.1\t32, r1\n\tadd\t@CPI15_1[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI15_1[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI15_2[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB15_1\n\tld\tr1, r1\n\tadd\tstack-[4], r0, r2\n\tst.1\t0, r2\n\tst.1\t32, r1\n\tadd\t@CPI15_1[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI15_1[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI15_2[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB15_1\n\tadd\tstack-[8], r0, r2\n\tadd\tstack-[1], r0, r3\n\tsub\tr3, r2, r2\n\tld\tr1, r1\n\tsstore\tr1, r2\n\tld.1\t64, r1\n\tst.1\tr1, r2\n\tadd\t@CPI15_1[0], r0, r2\n\tcontext.gas_left\tr3\n\tsub.s!\t@CPI15_1[0], r3, r4\n\tadd.ge\tr2, r0, r3\n\tsub.s!\t@CPI15_1[0], r1, r4\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tshl.s\t192, r3, r2\n\tor\tr2, r1, r1\n\tor\t@CPI15_3[0], r1, r1\n\tadd\t32781, r0, r2\n\tadd\t3, r0, r3\n\tadd\t@CPI15_4[0], r0, r4\n\tadd\tstack-[5], r0, r5\n\tadd\tstack-[2], r0, r6\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r1\n\tjump.ne\t@.BB15_7\n\tjump\t@.BB15_1\n.BB15_5:\n\tadd\tstack-[7], r0, r1\n\tsub!\tr1, r0, r1\n\tjump.eq\t@.BB15_6\n.BB15_7:\n\tadd\tstack-[6], r0, r1\n\tand!\t@CPI15_0[0], r1, r1\n\tadd\tr1, r0, stack-[4]\n\tjump.eq\t@.BB15_8\n\tadd\tstack-[7], r0, r1\n\tst.1\t0, r1\n\tst.1\t32, r0\n\tadd\t@CPI15_1[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI15_1[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI15_2[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB15_1\n\tld\tr1, r1\n\tsload\tr1, r2\n\tadd\tstack-[8], r0, r1\n\tadd\tr2, r0, stack-[3]\n\tsub!\tr2, r1, r1\n\tjump.lt\t@.BB15_11\n\tadd\tstack-[7], r0, r1\n\tst.1\t0, r1\n\tst.1\t32, r0\n\tadd\t@CPI15_1[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI15_1[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI15_2[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB15_1\n\tadd\tstack-[8], r0, r2\n\tadd\tstack-[3], r0, r3\n\tsub\tr3, r2, r2\n\tld\tr1, r1\n\tsstore\tr1, r2\n\tadd\tstack-[4], r0, r1\n\tst.1\t0, r1\n\tst.1\t32, r0\n\tadd\t@CPI15_1[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI15_1[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI15_2[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB15_1\n\tld\tr1, r1\n\tsload\tr1, r2\n\tadd\tstack-[8], r0, r3\n\tadd\tr2, r3, r2\n\tsstore\tr1, r2\n\tld.1\t64, r1\n\tst.1\tr1, r3\n\tadd\t@CPI15_1[0], r0, r2\n\tcontext.gas_left\tr3\n\tsub.s!\t@CPI15_1[0], r3, r4\n\tadd.ge\tr2, r0, r3\n\tsub.s!\t@CPI15_1[0], r1, r4\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tshl.s\t192, r3, r2\n\tor\tr2, r1, r1\n\tor\t@CPI15_3[0], r1, r1\n\tadd\t32781, r0, r2\n\tadd\t3, r0, r3\n\tadd\t@CPI15_13[0], r0, r4\n\tadd\tstack-[5], r0, r5\n\tadd\tstack-[6], r0, r6\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r1\n\tjump.eq\t@.BB15_1\n\tret\n.BB15_1:\n\tadd\tr0, r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB15_8:\n\tld.1\t64, r1\n\tadd\t100, r1, r2\n\tadd\t@CPI15_16[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t68, r1, r2\n\tadd\t@CPI15_17[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t36, r1, r2\n\tadd\t35, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI15_7[0], r0, r2\n\tst.1\tr1, r2\n\tadd\t4, r1, r2\n\tadd\t32, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI15_1[0], r0, r2\n\tsub.s!\t@CPI15_1[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI15_8[0], r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB15_11:\n\tld.1\t64, r1\n\tadd\t100, r1, r2\n\tadd\t@CPI15_14[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t68, r1, r2\n\tadd\t@CPI15_15[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t36, r1, r2\n\tadd\t38, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI15_7[0], r0, r2\n\tst.1\tr1, r2\n\tadd\t4, r1, r2\n\tadd\t32, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI15_1[0], r0, r2\n\tsub.s!\t@CPI15_1[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI15_8[0], r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB15_16:\n\tld.1\t64, r1\n\tadd\t68, r1, r2\n\tadd\t@CPI15_11[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t36, r1, r2\n\tadd\t29, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI15_7[0], r0, r2\n\tst.1\tr1, r2\n\tadd\t4, r1, r2\n\tadd\t32, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI15_1[0], r0, r2\n\tsub.s!\t@CPI15_1[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI15_12[0], r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB15_18:\n\tld.1\t64, r1\n\tadd\t100, r1, r2\n\tadd\t@CPI15_9[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t68, r1, r2\n\tadd\t@CPI15_10[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t36, r1, r2\n\tadd\t36, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI15_7[0], r0, r2\n\tst.1\tr1, r2\n\tadd\t4, r1, r2\n\tadd\t32, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI15_1[0], r0, r2\n\tsub.s!\t@CPI15_1[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI15_8[0], r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB15_20:\n\tld.1\t64, r1\n\tadd\t100, r1, r2\n\tadd\t@CPI15_5[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t68, r1, r2\n\tadd\t@CPI15_6[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t36, r1, r2\n\tadd\t34, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI15_7[0], r0, r2\n\tst.1\tr1, r2\n\tadd\t4, r1, r2\n\tadd\t32, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI15_1[0], r0, r2\n\tsub.s!\t@CPI15_1[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI15_8[0], r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB15_6:\n\tld.1\t64, r1\n\tadd\t100, r1, r2\n\tadd\t@CPI15_18[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t68, r1, r2\n\tadd\t@CPI15_19[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t36, r1, r2\n\tadd\t37, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI15_7[0], r0, r2\n\tst.1\tr1, r2\n\tadd\t4, r1, r2\n\tadd\t32, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI15_1[0], r0, r2\n\tsub.s!\t@CPI15_1[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI15_8[0], r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.func_end15:\n\nfun_increaseAllowance:\n.func_begin16:\n\tnop\tstack+=[6]\n\tadd\tr2, r0, stack-[5]\n\tadd\tr1, r0, stack-[6]\n\tcontext.caller\tr1\n\tadd\tr1, r0, stack-[4]\n\tst.1\t0, r1\n\tadd\t1, r0, r1\n\tadd\tr1, r0, stack-[2]\n\tst.1\t32, r1\n\tadd\t@CPI16_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI16_0[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI16_1[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB16_1\n\tld\tr1, r1\n\tadd\tstack-[6], r0, r2\n\tand\t@CPI16_2[0], r2, r2\n\tadd\tr2, r0, stack-[3]\n\tst.1\t0, r2\n\tst.1\t32, r1\n\tadd\t@CPI16_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI16_0[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI16_1[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB16_1\n\tsub.s\t1, r0, r2\n\tadd\tstack-[5], r0, r3\n\txor\tr3, r2, r2\n\tld\tr1, r1\n\tsload\tr1, r3\n\tsub!\tr3, r2, r1\n\tjump.gt\t@.BB16_4\n\tadd\tstack-[4], r0, r1\n\tand!\t@CPI16_2[0], r1, r1\n\tjump.eq\t@.BB16_6\n\tadd\tr3, r0, stack-[1]\n\tadd\tstack-[3], r0, r2\n\tsub!\tr2, r0, r2\n\tjump.eq\t@.BB16_8\n\tst.1\t0, r1\n\tadd\tstack-[2], r0, r1\n\tst.1\t32, r1\n\tadd\t@CPI16_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI16_0[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI16_1[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB16_1\n\tld\tr1, r1\n\tadd\tstack-[3], r0, r2\n\tst.1\t0, r2\n\tst.1\t32, r1\n\tadd\t@CPI16_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI16_0[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI16_1[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB16_1\n\tadd\tstack-[5], r0, r2\n\tadd\tstack-[1], r0, r3\n\tadd\tr3, r2, r2\n\tld\tr1, r1\n\tsstore\tr1, r2\n\tld.1\t64, r1\n\tst.1\tr1, r2\n\tadd\t@CPI16_0[0], r0, r2\n\tcontext.gas_left\tr3\n\tsub.s!\t@CPI16_0[0], r3, r4\n\tadd.ge\tr2, r0, r3\n\tsub.s!\t@CPI16_0[0], r1, r4\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tshl.s\t192, r3, r2\n\tor\tr2, r1, r1\n\tor\t@CPI16_3[0], r1, r1\n\tadd\t32781, r0, r2\n\tadd\t3, r0, r3\n\tadd\t@CPI16_4[0], r0, r4\n\tadd\tstack-[4], r0, r5\n\tadd\tstack-[6], r0, r6\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r1\n\tjump.eq\t@.BB16_1\n\tret\n.BB16_1:\n\tadd\tr0, r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB16_4:\n\tadd\t@CPI16_11[0], r0, r1\n\tst.1\t0, r1\n\tadd\t17, r0, r1\n\tst.1\t4, r1\n\tadd\t@CPI16_12[0], r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB16_6:\n\tld.1\t64, r1\n\tadd\t100, r1, r2\n\tadd\t@CPI16_9[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t68, r1, r2\n\tadd\t@CPI16_10[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t36, r1, r2\n\tadd\t36, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI16_7[0], r0, r2\n\tst.1\tr1, r2\n\tadd\t4, r1, r2\n\tadd\t32, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI16_0[0], r0, r2\n\tsub.s!\t@CPI16_0[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI16_8[0], r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB16_8:\n\tld.1\t64, r1\n\tadd\t100, r1, r2\n\tadd\t@CPI16_5[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t68, r1, r2\n\tadd\t@CPI16_6[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t36, r1, r2\n\tadd\t34, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI16_7[0], r0, r2\n\tst.1\tr1, r2\n\tadd\t4, r1, r2\n\tadd\t32, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI16_0[0], r0, r2\n\tsub.s!\t@CPI16_0[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI16_8[0], r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.func_end16:\n\nfun_decreaseAllowance:\n.func_begin17:\n\tnop\tstack+=[6]\n\tadd\tr2, r0, stack-[5]\n\tadd\tr1, r0, stack-[6]\n\tcontext.caller\tr1\n\tadd\tr1, r0, stack-[4]\n\tst.1\t0, r1\n\tadd\t1, r0, r1\n\tadd\tr1, r0, stack-[2]\n\tst.1\t32, r1\n\tadd\t@CPI17_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI17_0[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI17_1[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB17_1\n\tld\tr1, r1\n\tadd\tstack-[6], r0, r2\n\tand\t@CPI17_2[0], r2, r2\n\tadd\tr2, r0, stack-[3]\n\tst.1\t0, r2\n\tst.1\t32, r1\n\tadd\t@CPI17_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI17_0[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI17_1[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB17_1\n\tld\tr1, r1\n\tsload\tr1, r2\n\tadd\tstack-[5], r0, r1\n\tsub!\tr2, r1, r1\n\tjump.lt\t@.BB17_4\n\tadd\tstack-[4], r0, r1\n\tand!\t@CPI17_2[0], r1, r1\n\tjump.eq\t@.BB17_6\n\tadd\tr2, r0, stack-[1]\n\tadd\tstack-[3], r0, r2\n\tsub!\tr2, r0, r2\n\tjump.eq\t@.BB17_8\n\tst.1\t0, r1\n\tadd\tstack-[2], r0, r1\n\tst.1\t32, r1\n\tadd\t@CPI17_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI17_0[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI17_1[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB17_1\n\tld\tr1, r1\n\tadd\tstack-[3], r0, r2\n\tst.1\t0, r2\n\tst.1\t32, r1\n\tadd\t@CPI17_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI17_0[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI17_1[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB17_1\n\tadd\tstack-[5], r0, r2\n\tadd\tstack-[1], r0, r3\n\tsub\tr3, r2, r2\n\tld\tr1, r1\n\tsstore\tr1, r2\n\tld.1\t64, r1\n\tst.1\tr1, r2\n\tadd\t@CPI17_0[0], r0, r2\n\tcontext.gas_left\tr3\n\tsub.s!\t@CPI17_0[0], r3, r4\n\tadd.ge\tr2, r0, r3\n\tsub.s!\t@CPI17_0[0], r1, r4\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tshl.s\t192, r3, r2\n\tor\tr2, r1, r1\n\tor\t@CPI17_3[0], r1, r1\n\tadd\t32781, r0, r2\n\tadd\t3, r0, r3\n\tadd\t@CPI17_4[0], r0, r4\n\tadd\tstack-[4], r0, r5\n\tadd\tstack-[6], r0, r6\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r1\n\tjump.eq\t@.BB17_1\n\tret\n.BB17_1:\n\tadd\tr0, r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB17_4:\n\tld.1\t64, r1\n\tadd\t100, r1, r2\n\tadd\t@CPI17_11[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t68, r1, r2\n\tadd\t@CPI17_12[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t36, r1, r2\n\tadd\t37, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI17_7[0], r0, r2\n\tst.1\tr1, r2\n\tadd\t4, r1, r2\n\tadd\t32, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI17_0[0], r0, r2\n\tsub.s!\t@CPI17_0[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI17_8[0], r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB17_6:\n\tld.1\t64, r1\n\tadd\t100, r1, r2\n\tadd\t@CPI17_9[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t68, r1, r2\n\tadd\t@CPI17_10[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t36, r1, r2\n\tadd\t36, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI17_7[0], r0, r2\n\tst.1\tr1, r2\n\tadd\t4, r1, r2\n\tadd\t32, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI17_0[0], r0, r2\n\tsub.s!\t@CPI17_0[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI17_8[0], r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB17_8:\n\tld.1\t64, r1\n\tadd\t100, r1, r2\n\tadd\t@CPI17_5[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t68, r1, r2\n\tadd\t@CPI17_6[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t36, r1, r2\n\tadd\t34, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI17_7[0], r0, r2\n\tst.1\tr1, r2\n\tadd\t4, r1, r2\n\tadd\t32, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI17_0[0], r0, r2\n\tsub.s!\t@CPI17_0[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI17_8[0], r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.func_end17:\n\n__farcall:\n.func_begin18:\n.tmp0:\n\tfar_call\tr1, r2, @.BB18_2\n.tmp1:\n\tadd\t1, r0, r2\n\tret\n.BB18_2:\n.tmp2:\n\tadd\tr0, r0, r2\n\tret\n.func_end18:\n\n__staticcall:\n.func_begin19:\n.tmp3:\n\tfar_call.static\tr1, r2, @.BB19_2\n.tmp4:\n\tadd\t1, r0, r2\n\tret\n.BB19_2:\n.tmp5:\n\tadd\tr0, r0, r2\n\tret\n.func_end19:\n\n\t.data\n\t.p2align\t5\ncalldatasize:\n\t.cell 0\n\n\t.p2align\t5\nptr_calldata:\n.cell\t0\n\n\t.note.GNU-stack\n\t.rodata\nCPI0_0:\nCPI1_1:\nCPI2_3:\nCPI10_1:\nCPI11_1:\nCPI12_1:\nCPI13_1:\nCPI14_1:\nCPI15_1:\nCPI16_0:\nCPI17_0:\n\t.cell 4294967295\nCPI0_1:\nCPI8_1:\nCPI9_1:\n\t.cell 18446744073709551615\nCPI0_2:\nCPI4_0:\nCPI5_0:\nCPI6_0:\nCPI7_0:\n\t.cell -57896044618658097711785492504343953926634992332820282019728792003956564819968\nCPI0_3:\nCPI1_2:\nCPI2_5:\nCPI13_3:\nCPI14_3:\nCPI15_3:\nCPI16_3:\nCPI17_3:\n\t.cell 904625697166532776746648320380374280103671757735618107014721178055227736064\nCPI0_4:\n\t.cell 53919893334301279589334030174039261352344891250716429051063678533632\nCPI0_5:\nCPI1_3:\nCPI2_7:\nCPI8_2:\nCPI9_2:\nCPI16_11:\n\t.cell 35408467139433450592217433187231851964531694900788300625387963629091585785856\nCPI0_6:\nCPI1_4:\nCPI2_8:\nCPI8_3:\nCPI9_3:\nCPI16_12:\n\t.cell 2852213850513516153367582212096\nCPI0_7:\n\t.cell 961581904\nCPI0_8:\n\t.cell 2757214934\nCPI0_9:\n\t.cell 2757214935\nCPI0_10:\n\t.cell 2835717307\nCPI0_11:\n\t.cell 3714247998\nCPI0_12:\n\t.cell 961581905\nCPI0_13:\n\t.cell 1889567281\nCPI0_14:\n\t.cell 2514000705\nCPI0_15:\n\t.cell 404098524\nCPI0_16:\n\t.cell 404098525\nCPI0_17:\n\t.cell 599290589\nCPI0_18:\n\t.cell 826074471\nCPI0_19:\n\t.cell 117300739\nCPI0_20:\n\t.cell 157198259\nCPI0_21:\n\t.cell 2535301200456458802993406410752\nCPI1_0:\n\t.cell 18446744073709551616\nCPI2_0:\nCPI4_1:\nCPI5_1:\nCPI6_1:\nCPI7_1:\nCPI10_0:\nCPI11_0:\nCPI12_0:\nCPI13_0:\nCPI14_0:\nCPI15_0:\nCPI16_2:\nCPI17_2:\n\t.cell 1461501637330902918203684832716283019655932542975\nCPI2_1:\n\t.cell -1000000000000000000000000000\nCPI2_2:\n\t.cell 1000000000000000000000000000\nCPI2_4:\nCPI10_2:\nCPI11_2:\nCPI12_2:\nCPI13_2:\nCPI14_2:\nCPI15_2:\nCPI16_1:\nCPI17_1:\n\t.cell 904625697166532776746648320380374280103671760270919307471179981048634146816\nCPI2_6:\nCPI13_4:\nCPI15_13:\n\t.cell -15402802100530019096323380498944738953123845089667699673314898783681816316945\nCPI2_9:\n\t.cell 31354931781638678563069525067809233856775101976563302031013534919694566519552\nCPI2_10:\nCPI13_7:\nCPI14_7:\nCPI15_7:\nCPI16_7:\nCPI17_7:\n\t.cell 3963877391197344453575983046348115674221700746820753546331534351508065746944\nCPI2_11:\nCPI15_12:\n\t.cell 7922816251426433759354395033600\nCPI8_0:\n\t.cell -27889059366240281169193357100633332908378892778709981755071813198463099602853\nCPI9_0:\n\t.cell -53278079350709166316280423202849322519190186591071851114874353210178472783461\nCPI13_5:\nCPI15_14:\n\t.cell 44065838241030143116324720188876985940908656145555552347773292252211112312832\nCPI13_6:\nCPI15_15:\n\t.cell 31354931781638678607228669297131712859100820671745083778533502622993977909346\nCPI13_8:\nCPI14_8:\nCPI15_8:\nCPI16_8:\nCPI17_8:\n\t.cell 10458117451882892562347801444352\nCPI13_9:\nCPI15_16:\n\t.cell 45887578820189300338443374388718498632482616163288499555830078344056365121536\nCPI13_10:\nCPI15_17:\n\t.cell 31354931781638678607228669297131712859126084785867252355217498662940140921970\nCPI13_11:\nCPI15_18:\n\t.cell 45433405612597180762055095701412804886438245671210399661410036396145969725440\nCPI13_12:\nCPI15_19:\n\t.cell 31354931781638678607228669297131712859107492772550336241160036866987736981860\nCPI14_4:\nCPI15_4:\nCPI16_4:\nCPI17_4:\n\t.cell -52305948261162578668367882225327028569797882979485679342215860919519743330011\nCPI14_5:\nCPI15_5:\nCPI16_5:\nCPI17_5:\n\t.cell 52219164999525148860834357634456956735281286572158918307284071279203377479680\nCPI14_6:\nCPI15_6:\nCPI16_6:\nCPI17_6:\n\t.cell 31354931781638678487916134672869638488806705378895508030211234510262059168357\nCPI14_9:\nCPI15_9:\nCPI16_9:\nCPI17_9:\n\t.cell 51742913093258732729005998692887265601192425265805909375210916622055285719040\nCPI14_10:\nCPI15_10:\nCPI16_10:\nCPI17_10:\n\t.cell 31354931781638678487916134672869638484047149969764982831501014746446650500196\nCPI15_11:\n\t.cell 31354931781638678538084197150757782427756587561754988975511141185730285404160\nCPI17_11:\n\t.cell 14690266658072097593480850647027335513285713462661904985951319567533531463680\nCPI17_12:\n\t.cell 31354931781638678506476475496475743842680577777870365728514456330491174612855\n","bytecode":{"object":""},"methodIdentifiers":{"allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","decimals()":"313ce567","decreaseAllowance(address,uint256)":"a457c2d7","increaseAllowance(address,uint256)":"39509351","name()":"06fdde03","symbol()":"95d89b41","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd"}},"irOptimized":"/*=====================================================*\n *                       WARNING                       *\n *  Solidity to Yul compilation is still EXPERIMENTAL  *\n *       It can result in LOSS OF FUNDS or worse       *\n *                !USE AT YOUR OWN RISK!               *\n *=====================================================*/\n\n/// @use-src 1:\"@openzeppelin/contracts/token/ERC20/ERC20.sol\", 2:\"@openzeppelin/contracts/token/ERC20/IERC20.sol\", 3:\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\", 7:\"@openzeppelin/contracts/utils/Context.sol\", 9:\"contracts/ERC20Token.sol\"\nobject \"ERC20Token_1906\" {\n    code {\n        {\n            /// @src 9:115:346  \"contract ERC20Token is ERC20 {...\"\n            mstore(64, 128)\n            if callvalue() { revert(0, 0) }\n            let programSize := datasize(\"ERC20Token_1906\")\n            let argSize := sub(codesize(), programSize)\n            let memoryDataOffset := allocate_memory(argSize)\n            codecopy(memoryDataOffset, programSize, argSize)\n            let _1 := add(memoryDataOffset, argSize)\n            if slt(sub(_1, memoryDataOffset), 64)\n            {\n                revert(/** @src -1:-1:-1 */ 0, 0)\n            }\n            /// @src 9:115:346  \"contract ERC20Token is ERC20 {...\"\n            let offset := mload(memoryDataOffset)\n            let _2 := sub(shl(64, 1), 1)\n            if gt(offset, _2)\n            {\n                revert(/** @src -1:-1:-1 */ 0, 0)\n            }\n            /// @src 9:115:346  \"contract ERC20Token is ERC20 {...\"\n            let value0 := abi_decode_string_fromMemory(add(memoryDataOffset, offset), _1)\n            let _3 := 32\n            let offset_1 := mload(add(memoryDataOffset, _3))\n            if gt(offset_1, _2)\n            {\n                revert(/** @src -1:-1:-1 */ 0, 0)\n            }\n            /// @src 9:115:346  \"contract ERC20Token is ERC20 {...\"\n            let _4 := abi_decode_string_fromMemory(add(memoryDataOffset, offset_1), _1)\n            let newLen := mload(value0)\n            if gt(newLen, _2) { panic_error_0x41() }\n            clean_up_bytearray_end_slots_string_storage_1446(extract_byte_array_length(sload(/** @src 1:2046:2059  \"_name = name_\" */ 0x03)), /** @src 9:115:346  \"contract ERC20Token is ERC20 {...\" */ newLen)\n            let srcOffset := 0\n            srcOffset := _3\n            switch gt(newLen, 31)\n            case 1 {\n                let loopEnd := and(newLen, not(31))\n                let dstPtr := array_dataslot_string_storage_1447()\n                let i := 0\n                for { } lt(i, loopEnd) { i := add(i, _3) }\n                {\n                    sstore(dstPtr, mload(add(value0, srcOffset)))\n                    dstPtr := add(dstPtr, 1)\n                    srcOffset := add(srcOffset, _3)\n                }\n                if lt(loopEnd, newLen)\n                {\n                    let lastValue := mload(add(value0, srcOffset))\n                    sstore(dstPtr, and(lastValue, not(shr(and(shl(/** @src 1:2046:2059  \"_name = name_\" */ 0x03, /** @src 9:115:346  \"contract ERC20Token is ERC20 {...\" */ newLen), 248), not(0)))))\n                }\n                sstore(/** @src 1:2046:2059  \"_name = name_\" */ 0x03, /** @src 9:115:346  \"contract ERC20Token is ERC20 {...\" */ add(shl(1, newLen), 1))\n            }\n            default {\n                let value := 0\n                if newLen\n                {\n                    value := mload(add(value0, srcOffset))\n                }\n                sstore(/** @src 1:2046:2059  \"_name = name_\" */ 0x03, /** @src 9:115:346  \"contract ERC20Token is ERC20 {...\" */ extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n            }\n            copy_byte_array_to_storage_from_string_to_string(_4)\n            /// @src 9:294:337  \"_mint(msg.sender, 1_000_000_000 * 10 ** 18)\"\n            fun_mint(/** @src 9:300:310  \"msg.sender\" */ caller())\n            /// @src 9:115:346  \"contract ERC20Token is ERC20 {...\"\n            let _5 := mload(64)\n            let _6 := datasize(\"ERC20Token_1906_deployed\")\n            codecopy(_5, dataoffset(\"ERC20Token_1906_deployed\"), _6)\n            return(_5, _6)\n        }\n        function panic_error_0x41()\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x41)\n            revert(0, 0x24)\n        }\n        function allocate_memory(size) -> memPtr\n        {\n            memPtr := mload(64)\n            let newFreePtr := add(memPtr, and(add(size, 31), not(31)))\n            if or(gt(newFreePtr, sub(shl(64, 1), 1)), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n            mstore(64, newFreePtr)\n        }\n        function abi_decode_string_fromMemory(offset, end) -> array\n        {\n            if iszero(slt(add(offset, 0x1f), end)) { revert(0, 0) }\n            let _1 := mload(offset)\n            if gt(_1, sub(shl(64, 1), 1)) { panic_error_0x41() }\n            let _2 := 0x20\n            let array_1 := allocate_memory(add(and(add(_1, 0x1f), not(31)), _2))\n            mstore(array_1, _1)\n            if gt(add(add(offset, _1), _2), end)\n            {\n                revert(/** @src -1:-1:-1 */ 0, 0)\n            }\n            /// @src 9:115:346  \"contract ERC20Token is ERC20 {...\"\n            let i := /** @src -1:-1:-1 */ 0\n            /// @src 9:115:346  \"contract ERC20Token is ERC20 {...\"\n            for { } lt(i, _1) { i := add(i, _2) }\n            {\n                mstore(add(add(array_1, i), _2), mload(add(add(offset, i), _2)))\n            }\n            if gt(i, _1)\n            {\n                mstore(add(add(array_1, _1), _2), /** @src -1:-1:-1 */ 0)\n            }\n            /// @src 9:115:346  \"contract ERC20Token is ERC20 {...\"\n            array := array_1\n        }\n        function extract_byte_array_length(data) -> length\n        {\n            length := shr(1, data)\n            let outOfPlaceEncoding := and(data, 1)\n            if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n            if eq(outOfPlaceEncoding, lt(length, 32))\n            {\n                mstore(0, shl(224, 0x4e487b71))\n                mstore(4, 0x22)\n                revert(0, 0x24)\n            }\n        }\n        function array_dataslot_string_storage_1447() -> data\n        {\n            mstore(0, /** @src 1:2046:2059  \"_name = name_\" */ 0x03)\n            /// @src 9:115:346  \"contract ERC20Token is ERC20 {...\"\n            data := keccak256(0, 0x20)\n        }\n        function array_dataslot_string_storage() -> data\n        {\n            mstore(0, /** @src 1:2069:2086  \"_symbol = symbol_\" */ 0x04)\n            /// @src 9:115:346  \"contract ERC20Token is ERC20 {...\"\n            data := keccak256(0, 0x20)\n        }\n        function clean_up_bytearray_end_slots_string_storage_1446(len, startIndex)\n        {\n            if gt(len, 31)\n            {\n                /// @src -1:-1:-1\n                let _1 := 0\n                /// @src 9:115:346  \"contract ERC20Token is ERC20 {...\"\n                mstore(/** @src -1:-1:-1 */ _1, /** @src 1:2046:2059  \"_name = name_\" */ 0x03)\n                /// @src 9:115:346  \"contract ERC20Token is ERC20 {...\"\n                let data := keccak256(/** @src -1:-1:-1 */ _1, /** @src 9:115:346  \"contract ERC20Token is ERC20 {...\" */ 0x20)\n                let deleteStart := add(data, shr(5, add(startIndex, 31)))\n                if lt(startIndex, 0x20) { deleteStart := data }\n                let _2 := add(data, shr(5, add(len, 31)))\n                let start := deleteStart\n                for { } lt(start, _2) { start := add(start, 1) }\n                {\n                    sstore(start, /** @src -1:-1:-1 */ _1)\n                }\n            }\n        }\n        /// @src 9:115:346  \"contract ERC20Token is ERC20 {...\"\n        function clean_up_bytearray_end_slots_string_storage(len, startIndex)\n        {\n            if gt(len, 31)\n            {\n                /// @src -1:-1:-1\n                let _1 := 0\n                /// @src 9:115:346  \"contract ERC20Token is ERC20 {...\"\n                mstore(/** @src -1:-1:-1 */ _1, /** @src 1:2069:2086  \"_symbol = symbol_\" */ 0x04)\n                /// @src 9:115:346  \"contract ERC20Token is ERC20 {...\"\n                let data := keccak256(/** @src -1:-1:-1 */ _1, /** @src 9:115:346  \"contract ERC20Token is ERC20 {...\" */ 0x20)\n                let deleteStart := add(data, shr(5, add(startIndex, 31)))\n                if lt(startIndex, 0x20) { deleteStart := data }\n                let _2 := add(data, shr(5, add(len, 31)))\n                let start := deleteStart\n                for { } lt(start, _2) { start := add(start, 1) }\n                {\n                    sstore(start, /** @src -1:-1:-1 */ _1)\n                }\n            }\n        }\n        /// @src 9:115:346  \"contract ERC20Token is ERC20 {...\"\n        function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used\n        {\n            used := or(and(data, not(shr(shl(3, len), not(0)))), shl(1, len))\n        }\n        function copy_byte_array_to_storage_from_string_to_string(src)\n        {\n            let newLen := mload(src)\n            if gt(newLen, sub(shl(64, 1), 1)) { panic_error_0x41() }\n            clean_up_bytearray_end_slots_string_storage(extract_byte_array_length(sload(/** @src 1:2069:2086  \"_symbol = symbol_\" */ 0x04)), /** @src 9:115:346  \"contract ERC20Token is ERC20 {...\" */ newLen)\n            let srcOffset := 0\n            let srcOffset_1 := 0x20\n            srcOffset := srcOffset_1\n            switch gt(newLen, 31)\n            case 1 {\n                let loopEnd := and(newLen, not(31))\n                let dstPtr := array_dataslot_string_storage()\n                let i := 0\n                for { } lt(i, loopEnd) { i := add(i, srcOffset_1) }\n                {\n                    sstore(dstPtr, mload(add(src, srcOffset)))\n                    dstPtr := add(dstPtr, 1)\n                    srcOffset := add(srcOffset, srcOffset_1)\n                }\n                if lt(loopEnd, newLen)\n                {\n                    let lastValue := mload(add(src, srcOffset))\n                    sstore(dstPtr, and(lastValue, not(shr(and(shl(3, newLen), 248), not(0)))))\n                }\n                sstore(/** @src 1:2069:2086  \"_symbol = symbol_\" */ 0x04, /** @src 9:115:346  \"contract ERC20Token is ERC20 {...\" */ add(shl(1, newLen), 1))\n            }\n            default {\n                let value := 0\n                if newLen\n                {\n                    value := mload(add(src, srcOffset))\n                }\n                sstore(/** @src 1:2069:2086  \"_symbol = symbol_\" */ 0x04, /** @src 9:115:346  \"contract ERC20Token is ERC20 {...\" */ extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n            }\n        }\n        function update_storage_value_offsett_uint256_to_uint256(value)\n        {\n            sstore(/** @src 1:8731:8753  \"_totalSupply += amount\" */ 0x02, /** @src 9:115:346  \"contract ERC20Token is ERC20 {...\" */ value)\n        }\n        function mapping_index_access_mapping_address_uint256_of_address(key) -> dataSlot\n        {\n            mstore(/** @src 1:8622:8623  \"0\" */ 0x00, /** @src 9:115:346  \"contract ERC20Token is ERC20 {...\" */ and(key, sub(shl(160, 1), 1)))\n            mstore(0x20, /** @src 1:8622:8623  \"0\" */ 0x00)\n            /// @src 9:115:346  \"contract ERC20Token is ERC20 {...\"\n            dataSlot := keccak256(/** @src 1:8622:8623  \"0\" */ 0x00, /** @src 9:115:346  \"contract ERC20Token is ERC20 {...\" */ 0x40)\n        }\n        function abi_encode_uint256(headStart) -> tail\n        {\n            tail := add(headStart, 32)\n            mstore(headStart, /** @src 9:312:336  \"1_000_000_000 * 10 ** 18\" */ 0x033b2e3c9fd0803ce8000000)\n        }\n        /// @ast-id 516 @src 1:8520:9055  \"function _mint(address account, uint256 amount) internal virtual {...\"\n        function fun_mint(var_account)\n        {\n            /// @src 9:115:346  \"contract ERC20Token is ERC20 {...\"\n            if /** @src 1:8603:8624  \"account != address(0)\" */ iszero(/** @src 9:115:346  \"contract ERC20Token is ERC20 {...\" */ and(/** @src 1:8603:8624  \"account != address(0)\" */ var_account, /** @src 9:115:346  \"contract ERC20Token is ERC20 {...\" */ sub(shl(160, 1), 1)))\n            {\n                let memPtr := mload(64)\n                mstore(memPtr, shl(229, 4594637))\n                mstore(add(memPtr, 4), 32)\n                mstore(add(memPtr, 36), 31)\n                mstore(add(memPtr, 68), \"ERC20: mint to the zero address\")\n                revert(memPtr, 100)\n            }\n            let _1 := sload(/** @src 1:8731:8753  \"_totalSupply += amount\" */ 0x02)\n            /// @src 9:115:346  \"contract ERC20Token is ERC20 {...\"\n            if gt(_1, not(/** @src 9:312:336  \"1_000_000_000 * 10 ** 18\" */ 0x033b2e3c9fd0803ce8000000))\n            /// @src 9:115:346  \"contract ERC20Token is ERC20 {...\"\n            {\n                mstore(/** @src 1:8622:8623  \"0\" */ 0x00, /** @src 9:115:346  \"contract ERC20Token is ERC20 {...\" */ shl(224, 0x4e487b71))\n                mstore(4, 0x11)\n                revert(/** @src 1:8622:8623  \"0\" */ 0x00, /** @src 9:115:346  \"contract ERC20Token is ERC20 {...\" */ 0x24)\n            }\n            /// @src 9:312:336  \"1_000_000_000 * 10 ** 18\"\n            let _2 := 0x033b2e3c9fd0803ce8000000\n            /// @src 1:8731:8753  \"_totalSupply += amount\"\n            update_storage_value_offsett_uint256_to_uint256(/** @src 9:115:346  \"contract ERC20Token is ERC20 {...\" */ add(_1, /** @src 9:312:336  \"1_000_000_000 * 10 ** 18\" */ _2))\n            /// @src 1:8899:8917  \"_balances[account]\"\n            let _3 := mapping_index_access_mapping_address_uint256_of_address(var_account)\n            /// @src 9:115:346  \"contract ERC20Token is ERC20 {...\"\n            sstore(_3, add(sload(/** @src 1:8899:8927  \"_balances[account] += amount\" */ _3), /** @src 9:312:336  \"1_000_000_000 * 10 ** 18\" */ _2))\n            /// @src 1:8952:8989  \"Transfer(address(0), account, amount)\"\n            let _4 := /** @src 9:115:346  \"contract ERC20Token is ERC20 {...\" */ mload(64)\n            /// @src 1:8952:8989  \"Transfer(address(0), account, amount)\"\n            log3(_4, sub(abi_encode_uint256(_4), _4), 0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef, /** @src 1:8622:8623  \"0\" */ 0x00, /** @src 1:8952:8989  \"Transfer(address(0), account, amount)\" */ var_account)\n        }\n    }\n    /// @use-src 1:\"@openzeppelin/contracts/token/ERC20/ERC20.sol\", 7:\"@openzeppelin/contracts/utils/Context.sol\", 9:\"contracts/ERC20Token.sol\"\n    object \"ERC20Token_1906_deployed\" {\n        code {\n            {\n                /// @src 9:115:346  \"contract ERC20Token is ERC20 {...\"\n                let _1 := 64\n                mstore(_1, 128)\n                if iszero(lt(calldatasize(), 4))\n                {\n                    let _2 := 0\n                    switch shr(224, calldataload(_2))\n                    case 0x06fdde03 {\n                        if callvalue() { revert(_2, _2) }\n                        abi_decode(calldatasize())\n                        let converted := copy_array_from_storage_to_memory_string_2479()\n                        let memPos := mload(_1)\n                        return(memPos, sub(abi_encode_string(memPos, converted), memPos))\n                    }\n                    case 0x095ea7b3 {\n                        if callvalue() { revert(_2, _2) }\n                        let param, param_1 := abi_decode_addresst_uint256(calldatasize())\n                        let ret := fun_approve(param, param_1)\n                        let memPos_1 := mload(_1)\n                        return(memPos_1, sub(abi_encode_bool(memPos_1, ret), memPos_1))\n                    }\n                    case 0x18160ddd {\n                        if callvalue() { revert(_2, _2) }\n                        abi_decode(calldatasize())\n                        let _3 := sload(/** @src 1:3342:3354  \"_totalSupply\" */ 0x02)\n                        /// @src 9:115:346  \"contract ERC20Token is ERC20 {...\"\n                        let memPos_2 := mload(_1)\n                        return(memPos_2, sub(abi_encode_uint256(memPos_2, _3), memPos_2))\n                    }\n                    case 0x23b872dd {\n                        if callvalue() { revert(_2, _2) }\n                        let param_2, param_3, param_4 := abi_decode_addresst_addresst_uint256(calldatasize())\n                        let ret_1 := fun_transferFrom(param_2, param_3, param_4)\n                        let memPos_3 := mload(_1)\n                        return(memPos_3, sub(abi_encode_bool(memPos_3, ret_1), memPos_3))\n                    }\n                    case 0x313ce567 {\n                        if callvalue() { revert(_2, _2) }\n                        abi_decode(calldatasize())\n                        let memPos_4 := mload(_1)\n                        return(memPos_4, sub(abi_encode_uint8(memPos_4), memPos_4))\n                    }\n                    case 0x39509351 {\n                        if callvalue() { revert(_2, _2) }\n                        let param_5, param_6 := abi_decode_addresst_uint256(calldatasize())\n                        let ret_2 := fun_increaseAllowance(param_5, param_6)\n                        let memPos_5 := mload(_1)\n                        return(memPos_5, sub(abi_encode_bool(memPos_5, ret_2), memPos_5))\n                    }\n                    case 0x70a08231 {\n                        if callvalue() { revert(_2, _2) }\n                        let ret_3 := fun_balanceOf(abi_decode_address(calldatasize()))\n                        let memPos_6 := mload(_1)\n                        return(memPos_6, sub(abi_encode_uint256(memPos_6, ret_3), memPos_6))\n                    }\n                    case 0x95d89b41 {\n                        if callvalue() { revert(_2, _2) }\n                        abi_decode(calldatasize())\n                        let converted_1 := copy_array_from_storage_to_memory_string()\n                        let memPos_7 := mload(_1)\n                        return(memPos_7, sub(abi_encode_string(memPos_7, converted_1), memPos_7))\n                    }\n                    case 0xa457c2d7 {\n                        if callvalue() { revert(_2, _2) }\n                        let param_7, param_8 := abi_decode_addresst_uint256(calldatasize())\n                        let ret_4 := fun_decreaseAllowance(param_7, param_8)\n                        let memPos_8 := mload(_1)\n                        return(memPos_8, sub(abi_encode_bool(memPos_8, ret_4), memPos_8))\n                    }\n                    case 0xa9059cbb {\n                        if callvalue() { revert(_2, _2) }\n                        let param_9, param_10 := abi_decode_addresst_uint256(calldatasize())\n                        let ret_5 := fun_transfer(param_9, param_10)\n                        let memPos_9 := mload(_1)\n                        return(memPos_9, sub(abi_encode_bool(memPos_9, ret_5), memPos_9))\n                    }\n                    case 0xdd62ed3e {\n                        if callvalue() { revert(_2, _2) }\n                        let param_11, param_12 := abi_decode_addresst_address(calldatasize())\n                        let _4 := sload(/** @src 1:4102:4129  \"_allowances[owner][spender]\" */ mapping_index_access_mapping_address_uint256_of_address(/** @src 1:4102:4120  \"_allowances[owner]\" */ mapping_index_access_mapping_address_uint256_of_address_2492(/** @src 9:115:346  \"contract ERC20Token is ERC20 {...\" */ param_11), param_12))\n                        let memPos_10 := mload(_1)\n                        return(memPos_10, sub(abi_encode_uint256(memPos_10, _4), memPos_10))\n                    }\n                }\n                revert(0, 0)\n            }\n            function abi_decode(dataEnd)\n            {\n                if slt(add(dataEnd, not(3)), 0) { revert(0, 0) }\n            }\n            function array_storeLengthForEncoding_string(pos, length) -> updated_pos\n            {\n                mstore(pos, length)\n                updated_pos := add(pos, 0x20)\n            }\n            function abi_encode_string(headStart, value0) -> tail\n            {\n                let _1 := 32\n                mstore(headStart, _1)\n                let length := mload(value0)\n                mstore(add(headStart, _1), length)\n                let i := 0\n                for { } lt(i, length) { i := add(i, _1) }\n                {\n                    mstore(add(add(headStart, i), 64), mload(add(add(value0, i), _1)))\n                }\n                if gt(i, length)\n                {\n                    mstore(add(add(headStart, length), 64), 0)\n                }\n                tail := add(add(headStart, and(add(length, 31), not(31))), 64)\n            }\n            function abi_decode_addresst_uint256(dataEnd) -> value0, value1\n            {\n                if slt(add(dataEnd, not(3)), 64) { revert(0, 0) }\n                let value := calldataload(4)\n                if iszero(eq(value, and(value, sub(shl(160, 1), 1))))\n                {\n                    revert(/** @src -1:-1:-1 */ 0, 0)\n                }\n                /// @src 9:115:346  \"contract ERC20Token is ERC20 {...\"\n                value0 := value\n                value1 := calldataload(36)\n            }\n            function abi_encode_bool(headStart, value0) -> tail\n            {\n                tail := add(headStart, 32)\n                mstore(headStart, iszero(iszero(value0)))\n            }\n            function abi_encode_uint256(headStart, value0) -> tail\n            {\n                tail := add(headStart, 32)\n                mstore(headStart, value0)\n            }\n            function abi_decode_addresst_addresst_uint256(dataEnd) -> value0, value1, value2\n            {\n                if slt(add(dataEnd, not(3)), 96) { revert(0, 0) }\n                let value := calldataload(4)\n                let _1 := sub(shl(160, 1), 1)\n                if iszero(eq(value, and(value, _1)))\n                {\n                    revert(/** @src -1:-1:-1 */ 0, 0)\n                }\n                /// @src 9:115:346  \"contract ERC20Token is ERC20 {...\"\n                value0 := value\n                let value_1 := calldataload(36)\n                if iszero(eq(value_1, and(value_1, _1)))\n                {\n                    revert(/** @src -1:-1:-1 */ 0, 0)\n                }\n                /// @src 9:115:346  \"contract ERC20Token is ERC20 {...\"\n                value1 := value_1\n                value2 := calldataload(68)\n            }\n            function abi_encode_uint8(headStart) -> tail\n            {\n                tail := add(headStart, 32)\n                mstore(headStart, /** @src 1:3186:3188  \"18\" */ 0x12)\n            }\n            /// @src 9:115:346  \"contract ERC20Token is ERC20 {...\"\n            function abi_decode_address(dataEnd) -> value0\n            {\n                if slt(add(dataEnd, not(3)), 32) { revert(0, 0) }\n                let value := calldataload(4)\n                if iszero(eq(value, and(value, sub(shl(160, 1), 1))))\n                {\n                    revert(/** @src -1:-1:-1 */ 0, 0)\n                }\n                /// @src 9:115:346  \"contract ERC20Token is ERC20 {...\"\n                value0 := value\n            }\n            function abi_decode_addresst_address(dataEnd) -> value0, value1\n            {\n                if slt(add(dataEnd, not(3)), 64) { revert(0, 0) }\n                let value := calldataload(4)\n                let _1 := sub(shl(160, 1), 1)\n                if iszero(eq(value, and(value, _1)))\n                {\n                    revert(/** @src -1:-1:-1 */ 0, 0)\n                }\n                /// @src 9:115:346  \"contract ERC20Token is ERC20 {...\"\n                value0 := value\n                let value_1 := calldataload(36)\n                if iszero(eq(value_1, and(value_1, _1)))\n                {\n                    revert(/** @src -1:-1:-1 */ 0, 0)\n                }\n                /// @src 9:115:346  \"contract ERC20Token is ERC20 {...\"\n                value1 := value_1\n            }\n            function array_dataslot_string_storage() -> data\n            {\n                mstore(0, /** @src 1:2244:2249  \"_name\" */ 0x03)\n                /// @src 9:115:346  \"contract ERC20Token is ERC20 {...\"\n                data := 87903029871075914254377627908054574944891091886930582284385770809450030037083\n            }\n            function array_dataslot_string_storage_4050() -> data\n            {\n                mstore(0, 4)\n                data := 62514009886607029107290561805838585334079798074568712924583230797734656856475\n            }\n            function finalize_allocation(memPtr, size)\n            {\n                let newFreePtr := add(memPtr, and(add(size, 31), not(31)))\n                if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr))\n                {\n                    mstore(0, shl(224, 0x4e487b71))\n                    mstore(4, 0x41)\n                    revert(0, 0x24)\n                }\n                mstore(64, newFreePtr)\n            }\n            function copy_array_from_storage_to_memory_string_2479() -> memPtr\n            {\n                memPtr := mload(64)\n                let ret := /** @src -1:-1:-1 */ 0\n                /// @src 9:115:346  \"contract ERC20Token is ERC20 {...\"\n                let slotValue := sload(/** @src 1:2244:2249  \"_name\" */ 0x03)\n                /// @src 9:115:346  \"contract ERC20Token is ERC20 {...\"\n                let length := /** @src -1:-1:-1 */ ret\n                /// @src 9:115:346  \"contract ERC20Token is ERC20 {...\"\n                let _1 := 1\n                length := shr(_1, slotValue)\n                let outOfPlaceEncoding := and(slotValue, _1)\n                if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n                let _2 := 32\n                if eq(outOfPlaceEncoding, lt(length, _2))\n                {\n                    mstore(/** @src -1:-1:-1 */ ret, /** @src 9:115:346  \"contract ERC20Token is ERC20 {...\" */ shl(224, 0x4e487b71))\n                    mstore(4, 0x22)\n                    revert(/** @src -1:-1:-1 */ ret, /** @src 9:115:346  \"contract ERC20Token is ERC20 {...\" */ 0x24)\n                }\n                let pos := array_storeLengthForEncoding_string(memPtr, length)\n                switch outOfPlaceEncoding\n                case 0 {\n                    mstore(pos, and(slotValue, not(255)))\n                    ret := add(pos, _2)\n                }\n                case 1 {\n                    let dataPos := array_dataslot_string_storage()\n                    let i := /** @src -1:-1:-1 */ 0\n                    /// @src 9:115:346  \"contract ERC20Token is ERC20 {...\"\n                    for { } lt(i, length) { i := add(i, _2) }\n                    {\n                        mstore(add(pos, i), sload(dataPos))\n                        dataPos := add(dataPos, _1)\n                    }\n                    ret := add(pos, i)\n                }\n                finalize_allocation(memPtr, sub(ret, memPtr))\n            }\n            function copy_array_from_storage_to_memory_string() -> memPtr\n            {\n                memPtr := mload(64)\n                let ret := /** @src -1:-1:-1 */ 0\n                /// @src 9:115:346  \"contract ERC20Token is ERC20 {...\"\n                let slotValue := sload(4)\n                let length := /** @src -1:-1:-1 */ ret\n                /// @src 9:115:346  \"contract ERC20Token is ERC20 {...\"\n                let _1 := 1\n                length := shr(_1, slotValue)\n                let outOfPlaceEncoding := and(slotValue, _1)\n                if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n                let _2 := 32\n                if eq(outOfPlaceEncoding, lt(length, _2))\n                {\n                    mstore(/** @src -1:-1:-1 */ ret, /** @src 9:115:346  \"contract ERC20Token is ERC20 {...\" */ shl(224, 0x4e487b71))\n                    mstore(4, 0x22)\n                    revert(/** @src -1:-1:-1 */ ret, /** @src 9:115:346  \"contract ERC20Token is ERC20 {...\" */ 0x24)\n                }\n                let pos := array_storeLengthForEncoding_string(memPtr, length)\n                switch outOfPlaceEncoding\n                case 0 {\n                    mstore(pos, and(slotValue, not(255)))\n                    ret := add(pos, _2)\n                }\n                case 1 {\n                    let dataPos := array_dataslot_string_storage_4050()\n                    let i := /** @src -1:-1:-1 */ 0\n                    /// @src 9:115:346  \"contract ERC20Token is ERC20 {...\"\n                    for { } lt(i, length) { i := add(i, _2) }\n                    {\n                        mstore(add(pos, i), sload(dataPos))\n                        dataPos := add(dataPos, _1)\n                    }\n                    ret := add(pos, i)\n                }\n                finalize_allocation(memPtr, sub(ret, memPtr))\n            }\n            function mapping_index_access_mapping_address_uint256_of_address_2492(key) -> dataSlot\n            {\n                mstore(0, and(key, sub(shl(160, 1), 1)))\n                mstore(0x20, /** @src 1:4102:4113  \"_allowances\" */ 0x01)\n                /// @src 9:115:346  \"contract ERC20Token is ERC20 {...\"\n                dataSlot := keccak256(0, 0x40)\n            }\n            function mapping_index_access_mapping_address_uint256_of_address_2493(key) -> dataSlot\n            {\n                mstore(/** @src 1:7568:7569  \"0\" */ 0x00, /** @src 9:115:346  \"contract ERC20Token is ERC20 {...\" */ and(key, sub(shl(160, 1), 1)))\n                mstore(0x20, /** @src 1:7568:7569  \"0\" */ 0x00)\n                /// @src 9:115:346  \"contract ERC20Token is ERC20 {...\"\n                dataSlot := keccak256(/** @src 1:7568:7569  \"0\" */ 0x00, /** @src 9:115:346  \"contract ERC20Token is ERC20 {...\" */ 0x40)\n            }\n            function mapping_index_access_mapping_address_uint256_of_address(slot, key) -> dataSlot\n            {\n                mstore(0, and(key, sub(shl(160, 1), 1)))\n                mstore(0x20, slot)\n                dataSlot := keccak256(0, 0x40)\n            }\n            /// @ast-id 211 @src 1:3419:3544  \"function balanceOf(address account) public view virtual override returns (uint256) {...\"\n            function fun_balanceOf(var_account) -> var\n            {\n                /// @src 9:115:346  \"contract ERC20Token is ERC20 {...\"\n                mstore(/** @src 1:3519:3528  \"_balances\" */ 0x00, /** @src 9:115:346  \"contract ERC20Token is ERC20 {...\" */ and(var_account, sub(shl(160, 1), 1)))\n                mstore(0x20, /** @src 1:3519:3528  \"_balances\" */ 0x00)\n                /// @src 1:3512:3537  \"return _balances[account]\"\n                var := /** @src 9:115:346  \"contract ERC20Token is ERC20 {...\" */ sload(keccak256(/** @src 1:3519:3528  \"_balances\" */ 0x00, /** @src 9:115:346  \"contract ERC20Token is ERC20 {...\" */ 0x40))\n            }\n            /// @ast-id 236 @src 1:3740:3929  \"function transfer(address to, uint256 amount) public virtual override returns (bool) {...\"\n            function fun_transfer(var_to, var_amount) -> var\n            {\n                /// @src 1:3894:3900  \"amount\"\n                fun__transfer(/** @src 7:719:729  \"msg.sender\" */ caller(), /** @src 1:3894:3900  \"amount\" */ var_to, var_amount)\n                /// @src 1:3911:3922  \"return true\"\n                var := /** @src 1:3918:3922  \"true\" */ 0x01\n            }\n            /// @ast-id 279 @src 1:4444:4641  \"function approve(address spender, uint256 amount) public virtual override returns (bool) {...\"\n            function fun_approve(var_spender, var_amount) -> var\n            {\n                /// @src 1:4606:4612  \"amount\"\n                fun__approve(/** @src 7:719:729  \"msg.sender\" */ caller(), /** @src 1:4606:4612  \"amount\" */ var_spender, var_amount)\n                /// @src 1:4623:4634  \"return true\"\n                var := /** @src 1:4630:4634  \"true\" */ 0x01\n            }\n            /// @ast-id 312 @src 1:5203:5459  \"function transferFrom(address from, address to, uint256 amount) public virtual override returns (bool) {...\"\n            function fun_transferFrom(var_from, var_to, var_amount) -> var_\n            {\n                /// @src 9:115:346  \"contract ERC20Token is ERC20 {...\"\n                mstore(/** @src -1:-1:-1 */ 0, /** @src 9:115:346  \"contract ERC20Token is ERC20 {...\" */ and(var_from, sub(shl(160, 1), 1)))\n                mstore(0x20, /** @src 1:4102:4113  \"_allowances\" */ 0x01)\n                /// @src 9:115:346  \"contract ERC20Token is ERC20 {...\"\n                let _1 := sload(/** @src 1:4102:4129  \"_allowances[owner][spender]\" */ mapping_index_access_mapping_address_uint256_of_address(/** @src 9:115:346  \"contract ERC20Token is ERC20 {...\" */ keccak256(/** @src -1:-1:-1 */ 0, /** @src 9:115:346  \"contract ERC20Token is ERC20 {...\" */ 0x40), /** @src 7:719:729  \"msg.sender\" */ caller()))\n                /// @src 1:11240:11483  \"if (currentAllowance != type(uint256).max) {...\"\n                if /** @src 1:11244:11281  \"currentAllowance != type(uint256).max\" */ iszero(eq(_1, /** @src 1:11264:11281  \"type(uint256).max\" */ not(0)))\n                /// @src 1:11240:11483  \"if (currentAllowance != type(uint256).max) {...\"\n                {\n                    /// @src 9:115:346  \"contract ERC20Token is ERC20 {...\"\n                    if /** @src 1:11305:11331  \"currentAllowance >= amount\" */ lt(_1, var_amount)\n                    /// @src 9:115:346  \"contract ERC20Token is ERC20 {...\"\n                    {\n                        let memPtr := mload(0x40)\n                        mstore(memPtr, shl(229, 4594637))\n                        mstore(add(memPtr, 4), 0x20)\n                        mstore(add(memPtr, 36), 29)\n                        mstore(add(memPtr, 68), \"ERC20: insufficient allowance\")\n                        revert(memPtr, 100)\n                    }\n                    /// @src 1:11432:11457  \"currentAllowance - amount\"\n                    fun__approve(var_from, /** @src 7:719:729  \"msg.sender\" */ caller(), /** @src 9:115:346  \"contract ERC20Token is ERC20 {...\" */ sub(/** @src 1:11432:11457  \"currentAllowance - amount\" */ _1, var_amount))\n                }\n                /// @src 1:5424:5430  \"amount\"\n                fun__transfer(var_from, var_to, var_amount)\n                /// @src 1:5441:5452  \"return true\"\n                var_ := /** @src 1:4102:4113  \"_allowances\" */ 0x01\n            }\n            /// @ast-id 341 @src 1:5854:6088  \"function increaseAllowance(address spender, uint256 addedValue) public virtual returns (bool) {...\"\n            function fun_increaseAllowance(var_spender, var_addedValue) -> var\n            {\n                /// @src 9:115:346  \"contract ERC20Token is ERC20 {...\"\n                mstore(/** @src -1:-1:-1 */ 0, /** @src 7:719:729  \"msg.sender\" */ caller())\n                /// @src 9:115:346  \"contract ERC20Token is ERC20 {...\"\n                mstore(0x20, /** @src 1:4102:4113  \"_allowances\" */ 0x01)\n                /// @src 9:115:346  \"contract ERC20Token is ERC20 {...\"\n                let _1 := sload(/** @src 1:4102:4129  \"_allowances[owner][spender]\" */ mapping_index_access_mapping_address_uint256_of_address(/** @src 9:115:346  \"contract ERC20Token is ERC20 {...\" */ keccak256(/** @src -1:-1:-1 */ 0, /** @src 9:115:346  \"contract ERC20Token is ERC20 {...\" */ 0x40), /** @src 1:6021:6046  \"allowance(owner, spender)\" */ var_spender))\n                /// @src 9:115:346  \"contract ERC20Token is ERC20 {...\"\n                if gt(_1, not(var_addedValue))\n                {\n                    mstore(/** @src -1:-1:-1 */ 0, /** @src 9:115:346  \"contract ERC20Token is ERC20 {...\" */ shl(224, 0x4e487b71))\n                    mstore(4, 0x11)\n                    revert(/** @src -1:-1:-1 */ 0, /** @src 9:115:346  \"contract ERC20Token is ERC20 {...\" */ 0x24)\n                }\n                /// @src 1:6021:6059  \"allowance(owner, spender) + addedValue\"\n                fun__approve(/** @src 7:719:729  \"msg.sender\" */ caller(), /** @src 1:6021:6059  \"allowance(owner, spender) + addedValue\" */ var_spender, /** @src 9:115:346  \"contract ERC20Token is ERC20 {...\" */ add(_1, var_addedValue))\n                /// @src 1:6070:6081  \"return true\"\n                var := /** @src 1:4102:4113  \"_allowances\" */ 0x01\n            }\n            /// @ast-id 382 @src 1:6575:7002  \"function decreaseAllowance(address spender, uint256 subtractedValue) public virtual returns (bool) {...\"\n            function fun_decreaseAllowance(var_spender, var_subtractedValue) -> var\n            {\n                /// @src 9:115:346  \"contract ERC20Token is ERC20 {...\"\n                mstore(/** @src -1:-1:-1 */ 0, /** @src 7:719:729  \"msg.sender\" */ caller())\n                /// @src 9:115:346  \"contract ERC20Token is ERC20 {...\"\n                mstore(0x20, /** @src 1:4102:4113  \"_allowances\" */ 0x01)\n                /// @src 9:115:346  \"contract ERC20Token is ERC20 {...\"\n                let _1 := sload(/** @src 1:4102:4129  \"_allowances[owner][spender]\" */ mapping_index_access_mapping_address_uint256_of_address(/** @src 9:115:346  \"contract ERC20Token is ERC20 {...\" */ keccak256(/** @src -1:-1:-1 */ 0, /** @src 9:115:346  \"contract ERC20Token is ERC20 {...\" */ 0x40), /** @src 1:6749:6774  \"allowance(owner, spender)\" */ var_spender))\n                /// @src 9:115:346  \"contract ERC20Token is ERC20 {...\"\n                if /** @src 1:6792:6827  \"currentAllowance >= subtractedValue\" */ lt(_1, var_subtractedValue)\n                /// @src 9:115:346  \"contract ERC20Token is ERC20 {...\"\n                {\n                    let memPtr := mload(0x40)\n                    mstore(memPtr, shl(229, 4594637))\n                    mstore(add(memPtr, 4), 0x20)\n                    mstore(add(memPtr, 36), 37)\n                    mstore(add(memPtr, 68), \"ERC20: decreased allowance below\")\n                    mstore(add(memPtr, 100), \" zero\")\n                    revert(memPtr, 132)\n                }\n                /// @src 1:6928:6962  \"currentAllowance - subtractedValue\"\n                fun__approve(/** @src 7:719:729  \"msg.sender\" */ caller(), /** @src 1:6928:6962  \"currentAllowance - subtractedValue\" */ var_spender, /** @src 9:115:346  \"contract ERC20Token is ERC20 {...\" */ sub(/** @src 1:6928:6962  \"currentAllowance - subtractedValue\" */ _1, var_subtractedValue))\n                /// @src 1:6984:6995  \"return true\"\n                var := /** @src 1:4102:4113  \"_allowances\" */ 0x01\n            }\n            /// @src 9:115:346  \"contract ERC20Token is ERC20 {...\"\n            function require_helper_stringliteral(condition)\n            {\n                if iszero(condition)\n                {\n                    let memPtr := mload(64)\n                    mstore(memPtr, shl(229, 4594637))\n                    mstore(add(memPtr, 4), 32)\n                    mstore(add(memPtr, 36), 35)\n                    mstore(add(memPtr, 68), \"ERC20: transfer to the zero addr\")\n                    mstore(add(memPtr, 100), \"ess\")\n                    revert(memPtr, 132)\n                }\n            }\n            function require_helper_stringliteral_4107(condition)\n            {\n                if iszero(condition)\n                {\n                    let memPtr := mload(64)\n                    mstore(memPtr, shl(229, 4594637))\n                    mstore(add(memPtr, 4), 32)\n                    mstore(add(memPtr, 36), 38)\n                    mstore(add(memPtr, 68), \"ERC20: transfer amount exceeds b\")\n                    mstore(add(memPtr, 100), \"alance\")\n                    revert(memPtr, 132)\n                }\n            }\n            /// @ast-id 459 @src 1:7456:8244  \"function _transfer(address from, address to, uint256 amount) internal virtual {...\"\n            function fun__transfer(var_from, var_to, var_amount)\n            {\n                /// @src 9:115:346  \"contract ERC20Token is ERC20 {...\"\n                let _1 := sub(shl(160, 1), 1)\n                if /** @src 1:7552:7570  \"from != address(0)\" */ iszero(/** @src 9:115:346  \"contract ERC20Token is ERC20 {...\" */ and(/** @src 1:7552:7570  \"from != address(0)\" */ var_from, /** @src 9:115:346  \"contract ERC20Token is ERC20 {...\" */ _1))\n                {\n                    let memPtr := mload(64)\n                    mstore(memPtr, shl(229, 4594637))\n                    mstore(add(memPtr, 4), 32)\n                    mstore(add(memPtr, 36), 37)\n                    mstore(add(memPtr, 68), \"ERC20: transfer from the zero ad\")\n                    mstore(add(memPtr, 100), \"dress\")\n                    revert(memPtr, 132)\n                }\n                /// @src 1:7622:7686  \"require(to != address(0), \\\"ERC20: transfer to the zero address\\\")\"\n                require_helper_stringliteral(/** @src 1:7630:7646  \"to != address(0)\" */ iszero(iszero(/** @src 9:115:346  \"contract ERC20Token is ERC20 {...\" */ and(/** @src 1:7630:7646  \"to != address(0)\" */ var_to, /** @src 9:115:346  \"contract ERC20Token is ERC20 {...\" */ _1))))\n                let _2 := sload(/** @src 1:7768:7783  \"_balances[from]\" */ mapping_index_access_mapping_address_uint256_of_address_2493(var_from))\n                /// @src 1:7793:7865  \"require(fromBalance >= amount, \\\"ERC20: transfer amount exceeds balance\\\")\"\n                require_helper_stringliteral_4107(/** @src 1:7801:7822  \"fromBalance >= amount\" */ iszero(lt(_2, var_amount)))\n                /// @src 9:115:346  \"contract ERC20Token is ERC20 {...\"\n                sstore(/** @src 1:7899:7914  \"_balances[from]\" */ mapping_index_access_mapping_address_uint256_of_address_2493(var_from), /** @src 9:115:346  \"contract ERC20Token is ERC20 {...\" */ sub(/** @src 1:7917:7937  \"fromBalance - amount\" */ _2, var_amount))\n                /// @src 1:8114:8127  \"_balances[to]\"\n                let _3 := mapping_index_access_mapping_address_uint256_of_address_2493(var_to)\n                /// @src 9:115:346  \"contract ERC20Token is ERC20 {...\"\n                sstore(_3, add(sload(/** @src 1:8114:8137  \"_balances[to] += amount\" */ _3), /** @src 9:115:346  \"contract ERC20Token is ERC20 {...\" */ var_amount))\n                /// @src 1:8163:8189  \"Transfer(from, to, amount)\"\n                let _4 := /** @src 9:115:346  \"contract ERC20Token is ERC20 {...\" */ mload(64)\n                /// @src 1:8163:8189  \"Transfer(from, to, amount)\"\n                log3(_4, sub(abi_encode_uint256(_4, var_amount), _4), 0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef, var_from, var_to)\n            }\n            /// @ast-id 633 @src 1:10457:10797  \"function _approve(address owner, address spender, uint256 amount) internal virtual {...\"\n            function fun__approve(var_owner, var_spender, var_amount)\n            {\n                /// @src 9:115:346  \"contract ERC20Token is ERC20 {...\"\n                let _1 := sub(shl(160, 1), 1)\n                if /** @src 1:10558:10577  \"owner != address(0)\" */ iszero(/** @src 9:115:346  \"contract ERC20Token is ERC20 {...\" */ and(/** @src 1:10558:10577  \"owner != address(0)\" */ var_owner, /** @src 9:115:346  \"contract ERC20Token is ERC20 {...\" */ _1))\n                {\n                    let memPtr := mload(64)\n                    mstore(memPtr, shl(229, 4594637))\n                    mstore(add(memPtr, 4), 32)\n                    mstore(add(memPtr, 36), 36)\n                    mstore(add(memPtr, 68), \"ERC20: approve from the zero add\")\n                    mstore(add(memPtr, 100), \"ress\")\n                    revert(memPtr, 132)\n                }\n                if /** @src 1:10636:10657  \"spender != address(0)\" */ iszero(/** @src 9:115:346  \"contract ERC20Token is ERC20 {...\" */ and(/** @src 1:10636:10657  \"spender != address(0)\" */ var_spender, /** @src 9:115:346  \"contract ERC20Token is ERC20 {...\" */ _1))\n                {\n                    let memPtr_1 := mload(64)\n                    mstore(memPtr_1, shl(229, 4594637))\n                    mstore(add(memPtr_1, 4), 32)\n                    mstore(add(memPtr_1, 36), 34)\n                    mstore(add(memPtr_1, 68), \"ERC20: approve to the zero addre\")\n                    mstore(add(memPtr_1, 100), \"ss\")\n                    revert(memPtr_1, 132)\n                }\n                sstore(/** @src 1:10707:10734  \"_allowances[owner][spender]\" */ mapping_index_access_mapping_address_uint256_of_address(/** @src 1:10707:10725  \"_allowances[owner]\" */ mapping_index_access_mapping_address_uint256_of_address_2492(var_owner), /** @src 1:10707:10734  \"_allowances[owner][spender]\" */ var_spender), /** @src 9:115:346  \"contract ERC20Token is ERC20 {...\" */ var_amount)\n                /// @src 1:10758:10790  \"Approval(owner, spender, amount)\"\n                let _2 := /** @src 9:115:346  \"contract ERC20Token is ERC20 {...\" */ mload(64)\n                /// @src 1:10758:10790  \"Approval(owner, spender, amount)\"\n                log3(_2, sub(abi_encode_uint256(_2, var_amount), _2), 0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925, var_owner, var_spender)\n            }\n        }\n        data \".metadata\" hex\"a3646970667358221220b36b32fe739cd10aed3523eafc2036a04031116b8bf3c29f9a74f1e1182a8a2a6c6578706572696d656e74616cf564736f6c63430008090041\"\n    }\n}\n","hash":"0100021f4f88f1fcc1d9427313a009f42341492c5103a14a1024b88d90345907","factoryDependencies":{}}},"contracts/SobaToken.sol":{"SobaToken":{"abi":[{"inputs":[{"internalType":"string","name":"name","type":"string"},{"internalType":"string","name":"symbol","type":"string"}],"stateMutability":"nonpayable","type":"constructor"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"decimals","outputs":[{"internalType":"uint8","name":"","type":"uint8"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"subtractedValue","type":"uint256"}],"name":"decreaseAllowance","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"addedValue","type":"uint256"}],"name":"increaseAllowance","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"_to","type":"address"},{"internalType":"uint256","name":"_amount","type":"uint256"}],"name":"mint","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"renounceOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"newOwner","type":"address"}],"name":"transferOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"}],"metadata":{"optimizer_settings":"M3B3","solc_metadata":"{\"compiler\":{\"version\":\"0.8.9+commit.e5eed63a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"symbol\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"decreaseAllowance(address,uint256)\":{\"details\":\"Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`.\"},\"increaseAllowance(address,uint256)\":{\"details\":\"Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `amount`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `amount`. - the caller must have allowance for ``from``'s tokens of at least `amount`.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/SobaToken.sol\":\"SobaToken\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"details\":{\"constantOptimizer\":false,\"cse\":true,\"deduplicate\":true,\"inliner\":true,\"jumpdestRemover\":true,\"orderLiterals\":true,\"peephole\":true,\"yul\":true,\"yulDetails\":{\"optimizerSteps\":\"dhfoDgvulfnTUtnIf[xarrscLMcCTUtTOntnfDIulLculVcul jjTpeulxarulrulxarrcLgvifCTUcarrLsTFOtfDncarrIulc]jmuljuljul VcTOcul jmul\",\"stackAllocation\":true}},\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xba43b97fba0d32eb4254f6a5a297b39a19a247082a02d6e69349e071e2946218\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fc980984badf3984b6303b377711220e067722bbd6a135b24669ff5069ef9f32\",\"dweb:/ipfs/QmPHXMSXj99XjSVM21YsY6aNtLLjLVXDbyN76J5HQYvvrz\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0xa56ca923f70c1748830700250b19c61b70db9a683516dc5e216694a50445d99c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cac938788bc4be12101e59d45588b4e059579f4e61062e1cda8d6b06c0191b15\",\"dweb:/ipfs/QmV2JKCyjTVH3rkWNrfdJRhAT7tZ3usAN2XcnD4h53Mvih\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x287b55befed2961a7eabd7d7b1b2839cbca8a5b80ef8dcbb25ed3d4c2002c305\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bd39944e8fc06be6dbe2dd1d8449b5336e23c6a7ba3e8e9ae5ae0f37f35283f5\",\"dweb:/ipfs/QmPV3FGYjVwvKSgAXKUN3r9T9GwniZz83CxBpM7vyj2G53\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x8de418a5503946cabe331f35fe242d3201a73f67f77aaeb7110acb1f30423aca\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a376d3dda2cb70536c0a45c208b29b34ac560c4cb4f513a42079f96ba47d2dd\",\"dweb:/ipfs/QmZQg6gn1sUpM8wHzwNvSnihumUCAhxD119MpXeKp8B9s8\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"contracts/SobaToken.sol\":{\"keccak256\":\"0x1a711fad1b25e1c82cc1e834c66072fcd56c7b98ce6ffd9956c77b96a99a2956\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://0c5c3de1169b0c147ab4f6a4a8bd9c9c78f1de8e5eae64aba2f2b837fc289d9b\",\"dweb:/ipfs/QmTgFkHD5GpZmoafh3JKXRCXaezqBfkYqSf7J5ucKpv78X\"]}},\"version\":1}","zk_version":"1.3.13"},"evm":{"legacyAssembly":null,"assembly":"\t.text\n\t.file\t\"SobaToken.sol:SobaToken\"\n\t.globl\t__entry\n__entry:\n.func_begin0:\n\tnop\tstack+=[7]\n\tptr.add\tr1, r0, stack[@ptr_calldata]\n\tshr.s\t96, r1, r1\n\tand\t@CPI0_0[0], r1, stack[@calldatasize]\n\tadd\t128, r0, r1\n\tst.1\t64, r1\n\tand!\t1, r2, r1\n\tjump.ne\t@.BB0_1\n\tadd\tstack[@calldatasize], r0, r1\n\tsub.s!\t4, r1, r1\n\tjump.lt\t@.BB0_2\n\tptr.add\tstack[@ptr_calldata], r0, r1\n\tld\tr1, r1\n\tshr.s\t224, r1, r1\n\tsub.s!\t@CPI0_7[0], r1, r2\n\tjump.le\t@.BB0_55\n\tsub.s!\t@CPI0_8[0], r1, r2\n\tjump.gt\t@.BB0_70\n\tsub.s!\t@CPI0_14[0], r1, r2\n\tjump.gt\t@.BB0_68\n\tsub.s!\t@CPI0_17[0], r1, r2\n\tjump.eq\t@.BB0_92\n\tsub.s!\t@CPI0_18[0], r1, r1\n\tjump.ne\t@.BB0_2\n\tcontext.get_context_u128\tr1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_2\n\tsub.s\t4, r0, r1\n\tadd\tstack[@calldatasize], r1, r1\n\tadd\t@CPI0_2[0], r0, r2\n\tsub!\tr1, r0, r3\n\tadd\tr0, r0, r3\n\tadd.lt\tr2, r0, r3\n\tand\t@CPI0_2[0], r1, r1\n\tsub!\tr1, r0, r4\n\tadd.le\tr0, r0, r2\n\tsub.s!\t@CPI0_2[0], r1, r1\n\tadd\tr3, r0, r1\n\tadd.eq\tr2, r0, r1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_2\n\tnear_call\tr0, @modifier_onlyOwner, @DEFAULT_UNWIND\n\tadd\t@CPI0_0[0], r0, r1\n\tld.1\t64, r2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_1:\n\tcontext.get_context_u128\tr1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_2\n\tadd\tstack[@calldatasize], r0, r2\n\tadd\t31, r2, r1\n\tsub.s\t32, r0, r10\n\tand\tr1, r10, r4\n\tld.1\t64, r1\n\tadd\tr4, r1, r3\n\tsub!\tr3, r4, r4\n\tadd\t0, r0, r4\n\tadd.lt\t1, r0, r4\n\tsub.s!\t@CPI0_1[0], r3, r5\n\tjump.gt\t@.BB0_5\n\tand!\t1, r4, r4\n\tjump.ne\t@.BB0_5\n\tst.1\t64, r3\n\tand\t31, r2, r3\n\tptr.add\tstack[@ptr_calldata], r0, r4\n\tshr.s!\t5, r2, r5\n\tjump.eq\t@.BB0_111\n\tadd\tr0, r0, r6\n.BB0_8:\n\tshl.s\t5, r6, r7\n\tadd\tr1, r7, r8\n\tptr.add\tr4, r7, r7\n\tld\tr7, r7\n\tst.1\tr8, r7\n\tadd\t1, r6, r6\n\tsub!\tr6, r5, r7\n\tjump.lt\t@.BB0_8\n.BB0_111:\n\tsub!\tr3, r0, r6\n\tjump.eq\t@.BB0_10\n\tshl.s\t5, r5, r5\n\tptr.add\tr4, r5, r4\n\tadd\tr1, r5, r5\n\tshl.s\t3, r3, r3\n\tld.1\tr5, r6\n\tshl\tr6, r3, r6\n\tshr\tr6, r3, r6\n\tld\tr4, r4\n\tsub\t256, r3, r3\n\tshr\tr4, r3, r4\n\tshl\tr4, r3, r3\n\tor\tr3, r6, r3\n\tst.1\tr5, r3\n.BB0_10:\n\tadd\t@CPI0_2[0], r0, r3\n\tsub.s!\t64, r2, r4\n\tadd\tr0, r0, r4\n\tadd.lt\tr3, r0, r4\n\tand\t@CPI0_2[0], r2, r5\n\tsub!\tr5, r0, r6\n\tadd.le\tr0, r0, r3\n\tsub.s!\t@CPI0_2[0], r5, r5\n\tadd.ne\tr4, r0, r3\n\tsub!\tr3, r0, r3\n\tjump.ne\t@.BB0_2\n\tld.1.inc\tr1, r4, r3\n\tsub.s!\t@CPI0_1[0], r4, r5\n\tjump.gt\t@.BB0_2\n\tadd\tr1, r2, r2\n\tadd\tr4, r1, r4\n\tadd\t31, r4, r5\n\tadd\t@CPI0_2[0], r0, r6\n\tsub!\tr5, r2, r7\n\tadd\tr0, r0, r7\n\tadd.ge\tr6, r0, r7\n\tand\t@CPI0_2[0], r5, r5\n\tand\t@CPI0_2[0], r2, r8\n\tsub!\tr5, r8, r9\n\tadd.ge\tr0, r0, r6\n\txor\tr5, r8, r5\n\tsub.s!\t@CPI0_2[0], r5, r5\n\tadd\tr7, r0, r5\n\tadd.eq\tr6, r0, r5\n\tsub!\tr5, r0, r5\n\tjump.ne\t@.BB0_2\n\tld.1\tr4, r5\n\tsub.s!\t@CPI0_1[0], r5, r6\n\tjump.le\t@.BB0_14\n.BB0_5:\n\tadd\t@CPI0_5[0], r0, r1\n\tst.1\t0, r1\n\tadd\t65, r0, r1\n\tst.1\t4, r1\n\tadd\t@CPI0_6[0], r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB0_55:\n\tsub.s!\t@CPI0_19[0], r1, r2\n\tjump.le\t@.BB0_56\n\tsub.s!\t@CPI0_20[0], r1, r2\n\tjump.gt\t@.BB0_62\n\tsub.s!\t@CPI0_23[0], r1, r2\n\tjump.eq\t@.BB0_83\n\tsub.s!\t@CPI0_24[0], r1, r1\n\tjump.ne\t@.BB0_2\n\tcontext.get_context_u128\tr1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_2\n\tsub.s\t4, r0, r1\n\tadd\tstack[@calldatasize], r1, r1\n\tadd\t@CPI0_2[0], r0, r2\n\tsub!\tr1, r0, r3\n\tadd\tr0, r0, r3\n\tadd.lt\tr2, r0, r3\n\tand\t@CPI0_2[0], r1, r1\n\tsub!\tr1, r0, r4\n\tadd.le\tr0, r0, r2\n\tsub.s!\t@CPI0_2[0], r1, r1\n\tadd\tr3, r0, r1\n\tadd.eq\tr2, r0, r1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_2\n\tld.1\t64, r1\n\tadd\t18, r0, r2\n\tst.1\tr1, r2\n\tadd\t@CPI0_0[0], r0, r2\n\tsub.s!\t@CPI0_0[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI0_28[0], r1, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_70:\n\tsub.s!\t@CPI0_9[0], r1, r2\n\tjump.gt\t@.BB0_73\n\tsub.s!\t@CPI0_12[0], r1, r2\n\tjump.eq\t@.BB0_103\n\tsub.s!\t@CPI0_13[0], r1, r1\n\tjump.ne\t@.BB0_2\n\tcontext.get_context_u128\tr1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_2\n\tadd\tstack[@calldatasize], r0, r1\n\tnear_call\tr0, @abi_decode_addresst_uint256, @DEFAULT_UNWIND\n\tnear_call\tr0, @fun_transfer, @DEFAULT_UNWIND\n\tadd\t1, r0, r1\n\tld.1\t64, r2\n\tst.1\tr2, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI0_28[0], r1, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_56:\n\tsub.s!\t@CPI0_25[0], r1, r2\n\tjump.eq\t@.BB0_75\n\tsub.s!\t@CPI0_26[0], r1, r2\n\tjump.eq\t@.BB0_78\n\tsub.s!\t@CPI0_27[0], r1, r1\n\tjump.ne\t@.BB0_2\n\tcontext.get_context_u128\tr1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_2\n\tsub.s\t4, r0, r1\n\tadd\tstack[@calldatasize], r1, r1\n\tadd\t@CPI0_2[0], r0, r2\n\tsub!\tr1, r0, r3\n\tadd\tr0, r0, r3\n\tadd.lt\tr2, r0, r3\n\tand\t@CPI0_2[0], r1, r1\n\tsub!\tr1, r0, r4\n\tadd.le\tr0, r0, r2\n\tsub.s!\t@CPI0_2[0], r1, r1\n\tadd\tr3, r0, r1\n\tadd.eq\tr2, r0, r1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_2\n\tadd\t2, r0, r1\n\tsload\tr1, r1\n\tld.1\t64, r2\n\tst.1\tr2, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI0_28[0], r1, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_68:\n\tsub.s!\t@CPI0_15[0], r1, r2\n\tjump.eq\t@.BB0_97\n\tsub.s!\t@CPI0_16[0], r1, r1\n\tjump.ne\t@.BB0_2\n\tcontext.get_context_u128\tr1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_2\n\tsub.s\t4, r0, r1\n\tadd\tstack[@calldatasize], r1, r1\n\tadd\t@CPI0_2[0], r0, r2\n\tsub!\tr1, r0, r3\n\tadd\tr0, r0, r3\n\tadd.lt\tr2, r0, r3\n\tand\t@CPI0_2[0], r1, r1\n\tsub!\tr1, r0, r4\n\tadd.le\tr0, r0, r2\n\tsub.s!\t@CPI0_2[0], r1, r1\n\tadd\tr3, r0, r1\n\tadd.eq\tr2, r0, r1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_2\n\tnear_call\tr0, @copy_array_from_storage_to_memory_string, @DEFAULT_UNWIND\n\tadd\tr1, r0, r2\n\tld.1\t64, r1\n\tadd\tr1, r0, stack-[7]\n\tnear_call\tr0, @abi_encode_string, @DEFAULT_UNWIND\n\tadd\tstack-[7], r0, r4\n\tsub\tr1, r4, r1\n\tadd\t@CPI0_0[0], r0, r2\n\tsub.s!\t@CPI0_0[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tsub.s!\t@CPI0_0[0], r4, r3\n\tadd.lt\tr4, r0, r2\n\tshl.s\t64, r2, r2\n\tshl.s\t96, r1, r1\n\tor\tr1, r2, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_62:\n\tsub.s!\t@CPI0_21[0], r1, r2\n\tjump.eq\t@.BB0_88\n\tsub.s!\t@CPI0_22[0], r1, r1\n\tjump.ne\t@.BB0_2\n\tcontext.get_context_u128\tr1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_2\n\tadd\tstack[@calldatasize], r0, r1\n\tnear_call\tr0, @abi_decode_addresst_uint256, @DEFAULT_UNWIND\n\tnear_call\tr0, @modifier_onlyOwner_1943, @DEFAULT_UNWIND\n\tadd\t@CPI0_0[0], r0, r1\n\tld.1\t64, r2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_73:\n\tsub.s!\t@CPI0_10[0], r1, r2\n\tjump.eq\t@.BB0_107\n\tsub.s!\t@CPI0_11[0], r1, r1\n\tjump.ne\t@.BB0_2\n\tcontext.get_context_u128\tr1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_2\n\tadd\tstack[@calldatasize], r0, r1\n\tnear_call\tr0, @abi_decode_address, @DEFAULT_UNWIND\n\tnear_call\tr0, @modifier_onlyOwner_74, @DEFAULT_UNWIND\n\tadd\t@CPI0_0[0], r0, r1\n\tld.1\t64, r2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_92:\n\tcontext.get_context_u128\tr1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_2\n\tadd\tstack[@calldatasize], r0, r1\n\tnear_call\tr0, @abi_decode_address, @DEFAULT_UNWIND\n\tnear_call\tr0, @fun_balanceOf, @DEFAULT_UNWIND\n\tld.1\t64, r2\n\tst.1\tr2, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI0_28[0], r1, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_83:\n\tcontext.get_context_u128\tr1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_2\n\tadd\tstack[@calldatasize], r0, r1\n\tnear_call\tr0, @abi_decode_addresst_addresst_uint256, @DEFAULT_UNWIND\n\tnear_call\tr0, @fun_transferFrom, @DEFAULT_UNWIND\n\tadd\t1, r0, r1\n\tld.1\t64, r2\n\tst.1\tr2, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI0_28[0], r1, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_103:\n\tcontext.get_context_u128\tr1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_2\n\tadd\tstack[@calldatasize], r0, r1\n\tnear_call\tr0, @abi_decode_addresst_uint256, @DEFAULT_UNWIND\n\tnear_call\tr0, @fun_decreaseAllowance, @DEFAULT_UNWIND\n\tadd\t1, r0, r1\n\tld.1\t64, r2\n\tst.1\tr2, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI0_28[0], r1, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_75:\n\tcontext.get_context_u128\tr1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_2\n\tsub.s\t4, r0, r1\n\tadd\tstack[@calldatasize], r1, r1\n\tadd\t@CPI0_2[0], r0, r2\n\tsub!\tr1, r0, r3\n\tadd\tr0, r0, r3\n\tadd.lt\tr2, r0, r3\n\tand\t@CPI0_2[0], r1, r1\n\tsub!\tr1, r0, r4\n\tadd.le\tr0, r0, r2\n\tsub.s!\t@CPI0_2[0], r1, r1\n\tadd\tr3, r0, r1\n\tadd.eq\tr2, r0, r1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_2\n\tnear_call\tr0, @copy_array_from_storage_to_memory_string_3575, @DEFAULT_UNWIND\n\tadd\tr1, r0, r2\n\tld.1\t64, r1\n\tadd\tr1, r0, stack-[7]\n\tnear_call\tr0, @abi_encode_string, @DEFAULT_UNWIND\n\tadd\tstack-[7], r0, r4\n\tsub\tr1, r4, r1\n\tadd\t@CPI0_0[0], r0, r2\n\tsub.s!\t@CPI0_0[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tsub.s!\t@CPI0_0[0], r4, r3\n\tadd.lt\tr4, r0, r2\n\tshl.s\t64, r2, r2\n\tshl.s\t96, r1, r1\n\tor\tr1, r2, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_78:\n\tcontext.get_context_u128\tr1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_2\n\tadd\tstack[@calldatasize], r0, r1\n\tnear_call\tr0, @abi_decode_addresst_uint256, @DEFAULT_UNWIND\n\tnear_call\tr0, @fun_approve, @DEFAULT_UNWIND\n\tadd\t1, r0, r1\n\tld.1\t64, r2\n\tst.1\tr2, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI0_28[0], r1, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_97:\n\tcontext.get_context_u128\tr1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_2\n\tsub.s\t4, r0, r1\n\tadd\tstack[@calldatasize], r1, r1\n\tadd\t@CPI0_2[0], r0, r2\n\tsub!\tr1, r0, r3\n\tadd\tr0, r0, r3\n\tadd.lt\tr2, r0, r3\n\tand\t@CPI0_2[0], r1, r1\n\tsub!\tr1, r0, r4\n\tadd.le\tr0, r0, r2\n\tsub.s!\t@CPI0_2[0], r1, r1\n\tadd\tr3, r0, r1\n\tadd.eq\tr2, r0, r1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_2\n\tadd\t5, r0, r1\n\tsload\tr1, r1\n\tand\t@CPI0_29[0], r1, r1\n\tld.1\t64, r2\n\tst.1\tr2, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI0_28[0], r1, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_88:\n\tcontext.get_context_u128\tr1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_2\n\tadd\tstack[@calldatasize], r0, r1\n\tnear_call\tr0, @abi_decode_addresst_uint256, @DEFAULT_UNWIND\n\tnear_call\tr0, @fun_increaseAllowance, @DEFAULT_UNWIND\n\tadd\t1, r0, r1\n\tld.1\t64, r2\n\tst.1\tr2, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI0_28[0], r1, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_107:\n\tcontext.get_context_u128\tr1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_2\n\tadd\tstack[@calldatasize], r0, r1\n\tnear_call\tr0, @abi_decode_addresst_address, @DEFAULT_UNWIND\n\tadd\tr2, r0, stack-[7]\n\tnear_call\tr0, @mapping_index_access_mapping_address_uint256_of_address_3592, @DEFAULT_UNWIND\n\tadd\tstack-[7], r0, r2\n\tnear_call\tr0, @mapping_index_access_mapping_address_uint256_of_address.3, @DEFAULT_UNWIND\n\tsload\tr1, r1\n\tld.1\t64, r2\n\tst.1\tr2, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI0_28[0], r1, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_14:\n\tadd\t63, r5, r6\n\tand\tr6, r10, r6\n\tld.1\t64, r11\n\tadd\tr11, r6, r6\n\tsub!\tr6, r11, r7\n\tadd\t0, r0, r7\n\tadd.lt\t1, r0, r7\n\tsub.s!\t@CPI0_1[0], r6, r8\n\tjump.gt\t@.BB0_5\n\tand!\t1, r7, r7\n\tjump.ne\t@.BB0_5\n\tst.1\t64, r6\n\tst.1.inc\tr11, r5, r12\n\tadd\t32, r5, r6\n\tadd\tr6, r4, r7\n\tsub!\tr7, r2, r7\n\tjump.gt\t@.BB0_2\n\tsub!\tr5, r0, r7\n\tjump.eq\t@.BB0_22\n\tadd\tr0, r0, r7\n.BB0_19:\n\tadd\t32, r7, r7\n\tadd\tr7, r11, r8\n\tadd\tr7, r4, r9\n\tld.1\tr9, r9\n\tst.1\tr8, r9\n\tsub!\tr7, r5, r8\n\tjump.lt\t@.BB0_19\n\tsub!\tr7, r5, r4\n\tjump.le\t@.BB0_22\n\tadd\tr11, r6, r4\n\tst.1\tr4, r0\n.BB0_22:\n\tld.1\tr3, r3\n\tsub.s!\t@CPI0_1[0], r3, r4\n\tjump.gt\t@.BB0_2\n\tadd\tr3, r1, r1\n\tadd\t31, r1, r3\n\tadd\t@CPI0_2[0], r0, r4\n\tsub!\tr3, r2, r5\n\tadd\tr0, r0, r5\n\tadd.ge\tr4, r0, r5\n\tand\t@CPI0_2[0], r3, r3\n\tand\t@CPI0_2[0], r2, r6\n\tsub!\tr3, r6, r7\n\tadd.ge\tr0, r0, r4\n\txor\tr3, r6, r3\n\tsub.s!\t@CPI0_2[0], r3, r3\n\tadd\tr5, r0, r3\n\tadd.eq\tr4, r0, r3\n\tsub!\tr3, r0, r3\n\tjump.ne\t@.BB0_2\n\tld.1\tr1, r3\n\tsub.s!\t@CPI0_1[0], r3, r4\n\tjump.gt\t@.BB0_5\n\tadd\t63, r3, r4\n\tand\tr4, r10, r4\n\tld.1\t64, r7\n\tadd\tr7, r4, r4\n\tsub!\tr4, r7, r5\n\tadd\t0, r0, r5\n\tadd.lt\t1, r0, r5\n\tsub.s!\t@CPI0_1[0], r4, r6\n\tjump.gt\t@.BB0_5\n\tand!\t1, r5, r5\n\tjump.ne\t@.BB0_5\n\tst.1\t64, r4\n\tst.1\tr7, r3\n\tadd\t32, r3, r4\n\tadd\tr4, r1, r5\n\tsub!\tr5, r2, r2\n\tjump.le\t@.BB0_28\n.BB0_2:\n\tadd\tr0, r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB0_28:\n\tadd\tr12, r0, stack-[4]\n\tadd\tr11, r0, stack-[7]\n\tadd\tr10, r0, stack-[5]\n\tsub!\tr3, r0, r2\n\tjump.eq\t@.BB0_33\n\tadd\tr0, r0, r2\n.BB0_30:\n\tadd\t32, r2, r2\n\tadd\tr2, r7, r5\n\tadd\tr2, r1, r6\n\tld.1\tr6, r6\n\tst.1\tr5, r6\n\tsub!\tr2, r3, r5\n\tjump.lt\t@.BB0_30\n\tsub!\tr2, r3, r1\n\tjump.le\t@.BB0_33\n\tadd\tr7, r4, r1\n\tst.1\tr1, r0\n.BB0_33:\n\tadd\tstack-[7], r0, r1\n\tld.1\tr1, r1\n\tadd\tr1, r0, stack-[6]\n\tsub.s!\t@CPI0_1[0], r1, r1\n\tjump.gt\t@.BB0_5\n\tadd\tr7, r0, stack-[1]\n\tadd\t3, r0, r1\n\tadd\tr1, r0, stack-[3]\n\tsload\tr1, r1\n\tand!\t1, r1, r2\n\tshr.s\t1, r1, r1\n\tand\t127, r1, r3\n\tadd.eq\tr3, r0, r1\n\tadd\tr1, r0, stack-[2]\n\tsub.s!\t31, r1, r1\n\tadd\t0, r0, r1\n\tadd.gt\t1, r0, r1\n\tand\t1, r1, r1\n\tsub!\tr2, r1, r1\n\tjump.eq\t@.BB0_36\n\tadd\t@CPI0_5[0], r0, r1\n\tst.1\t0, r1\n\tadd\t34, r0, r1\n\tst.1\t4, r1\n\tadd\t@CPI0_6[0], r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB0_36:\n\tadd\tstack-[2], r0, r1\n\tsub.s!\t32, r1, r1\n\tjump.lt\t@.BB0_41\n\tadd\tstack-[3], r0, r1\n\tst.1\t0, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_3[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tadd\tstack-[6], r0, r3\n\tadd\t31, r3, r2\n\tshr.s\t5, r2, r2\n\tsub.s!\t32, r3, r3\n\tadd.lt\tr0, r0, r2\n\tld\tr1, r3\n\tadd\tstack-[2], r0, r1\n\tadd\t31, r1, r1\n\tshr.s\t5, r1, r1\n\tadd\tr3, r1, r1\n\tadd\tr3, r2, r2\n\tsub!\tr2, r1, r3\n\tjump.ge\t@.BB0_41\n.BB0_40:\n\tsstore\tr2, r0\n\tadd\t1, r2, r2\n\tsub!\tr2, r1, r3\n\tjump.lt\t@.BB0_40\n.BB0_41:\n\tadd\tstack-[6], r0, r1\n\tsub.s!\t31, r1, r1\n\tjump.le\t@.BB0_50\n\tadd\tstack-[3], r0, r1\n\tst.1\t0, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_3[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tadd\tstack-[5], r0, r2\n\tadd\tstack-[7], r0, r6\n\tjump.eq\t@.BB0_2\n\tadd\tstack-[6], r0, r3\n\tand!\tr3, r2, r3\n\tadd\t32, r0, r2\n\tld\tr1, r1\n\tjump.eq\t@.BB0_47\n\tadd\t32, r0, r2\n\tadd\tr0, r0, r4\n.BB0_46:\n\tadd\tr2, r6, r5\n\tld.1\tr5, r5\n\tsstore\tr1, r5\n\tadd\t32, r2, r2\n\tadd\t1, r1, r1\n\tadd\t32, r4, r4\n\tsub!\tr4, r3, r5\n\tjump.lt\t@.BB0_46\n.BB0_47:\n\tadd\tstack-[6], r0, r4\n\tsub!\tr3, r4, r3\n\tjump.ge\t@.BB0_49\n\tadd\tstack-[6], r0, r3\n\tshl.s\t3, r3, r3\n\tand\t248, r3, r3\n\tsub.s\t1, r0, r4\n\tshr\tr4, r3, r3\n\txor\tr3, r4, r3\n\tadd\tstack-[7], r0, r4\n\tadd\tr2, r4, r2\n\tld.1\tr2, r2\n\tand\tr2, r3, r2\n\tsstore\tr1, r2\n.BB0_49:\n\tadd\t1, r0, r1\n\tadd\tstack-[6], r0, r2\n\tshl.s\t1, r2, r2\n\tjump\t@.BB0_42\n.BB0_50:\n\tadd\tstack-[6], r0, r1\n\tsub!\tr1, r0, r1\n\tadd\tr0, r0, r1\n\tjump.eq\t@.BB0_52\n\tadd\tstack-[4], r0, r1\n\tld.1\tr1, r1\n.BB0_52:\n\tadd\tstack-[6], r0, r4\n\tshl.s\t3, r4, r2\n\tsub.s\t1, r0, r3\n\tshr\tr3, r2, r2\n\txor\tr2, r3, r2\n\tand\tr1, r2, r2\n\tshl.s\t1, r4, r1\n.BB0_42:\n\tor\tr2, r1, r1\n\tadd\tstack-[3], r0, r2\n\tsstore\tr2, r1\n\tadd\tstack-[1], r0, r1\n\tnear_call\tr0, @copy_byte_array_to_storage_from_string_to_string, @DEFAULT_UNWIND\n\tcontext.caller\tr1\n\tadd\tr1, r0, stack-[7]\n\tnear_call\tr0, @fun_transferOwnership, @DEFAULT_UNWIND\n\tadd\tstack-[7], r0, r1\n\tnear_call\tr0, @fun_mint, @DEFAULT_UNWIND\n\tadd\t32, r0, r1\n\tst.2\t256, r1\n\tst.2\t288, r0\n\tadd\t@CPI0_4[0], r0, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.func_end0:\n\ncopy_byte_array_to_storage_from_string_to_string:\n.func_begin1:\n\tnop\tstack+=[5]\n\tld.1.inc\tr1, r5, r7\n\tsub.s!\t@CPI1_0[0], r5, r2\n\tjump.ge\t@.BB1_1\n\tadd\t4, r0, r4\n\tsload\tr4, r3\n\tand!\t1, r3, r2\n\tshr.s\t1, r3, r6\n\tand\t127, r6, r3\n\tadd.eq\tr3, r0, r6\n\tsub.s!\t31, r6, r3\n\tadd\t0, r0, r3\n\tadd.gt\t1, r0, r3\n\tand\t1, r3, r3\n\tsub!\tr2, r3, r2\n\tjump.ne\t@.BB1_3\n\tadd\tr1, r0, stack-[3]\n\tsub.s!\t32, r6, r1\n\tadd\tr4, r0, stack-[5]\n\tadd\tr5, r0, stack-[4]\n\tjump.lt\t@.BB1_10\n\tadd\tr6, r0, stack-[1]\n\tadd\tr7, r0, stack-[2]\n\tst.1\t0, r4\n\tadd\t@CPI1_1[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI1_1[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI1_2[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB1_6\n\tadd\tstack-[4], r0, r5\n\tadd\t31, r5, r2\n\tshr.s\t5, r2, r2\n\tsub.s!\t32, r5, r3\n\tadd.lt\tr0, r0, r2\n\tld\tr1, r3\n\tadd\tstack-[1], r0, r1\n\tadd\t31, r1, r1\n\tshr.s\t5, r1, r1\n\tadd\tr3, r1, r1\n\tadd\tr3, r2, r2\n\tsub!\tr2, r1, r3\n\tadd\tstack-[5], r0, r4\n\tadd\tstack-[2], r0, r7\n\tjump.ge\t@.BB1_10\n.BB1_9:\n\tsstore\tr2, r0\n\tadd\t1, r2, r2\n\tsub!\tr2, r1, r3\n\tjump.lt\t@.BB1_9\n.BB1_10:\n\tsub.s!\t31, r5, r1\n\tjump.le\t@.BB1_19\n\tst.1\t0, r4\n\tadd\t@CPI1_1[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI1_1[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI1_2[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB1_6\n\tsub.s\t32, r0, r2\n\tadd\tstack-[4], r0, r6\n\tand!\tr6, r2, r3\n\tadd\t32, r0, r2\n\tld\tr1, r1\n\tadd\tstack-[3], r0, r7\n\tjump.eq\t@.BB1_16\n\tadd\t32, r0, r2\n\tadd\tr0, r0, r4\n.BB1_15:\n\tadd\tr2, r7, r5\n\tld.1\tr5, r5\n\tsstore\tr1, r5\n\tadd\t32, r2, r2\n\tadd\t1, r1, r1\n\tadd\t32, r4, r4\n\tsub!\tr4, r3, r5\n\tjump.lt\t@.BB1_15\n.BB1_16:\n\tsub!\tr3, r6, r3\n\tjump.ge\t@.BB1_18\n\tshl.s\t3, r6, r3\n\tand\t248, r3, r3\n\tsub.s\t1, r0, r4\n\tshr\tr4, r3, r3\n\txor\tr3, r4, r3\n\tadd\tr2, r7, r2\n\tld.1\tr2, r2\n\tand\tr2, r3, r2\n\tsstore\tr1, r2\n.BB1_18:\n\tshl.s\t1, r6, r1\n\tor\t1, r1, r1\n\tadd\tstack-[5], r0, r4\n\tjump\t@.BB1_11\n.BB1_19:\n\tsub!\tr5, r0, r1\n\tadd\tr0, r0, r1\n\tjump.eq\t@.BB1_11\n\tshl.s\t3, r5, r1\n\tsub.s\t1, r0, r2\n\tshr\tr2, r1, r1\n\txor\tr1, r2, r1\n\tld.1\tr7, r2\n\tand\tr2, r1, r1\n\tshl.s\t1, r5, r2\n\tor\tr1, r2, r1\n.BB1_11:\n\tsstore\tr4, r1\n\tret\n.BB1_1:\n\tadd\t@CPI1_3[0], r0, r1\n\tst.1\t0, r1\n\tadd\t65, r0, r1\n\tst.1\t4, r1\n\tadd\t@CPI1_4[0], r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB1_3:\n\tadd\t@CPI1_3[0], r0, r1\n\tst.1\t0, r1\n\tadd\t34, r0, r1\n\tst.1\t4, r1\n\tadd\t@CPI1_4[0], r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB1_6:\n\tadd\tr0, r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.func_end1:\n\nfun_transferOwnership:\n.func_begin2:\n\tadd\tr1, r0, r6\n\tand\t@CPI2_0[0], r6, r1\n\tadd\t5, r0, r2\n\tsload\tr2, r3\n\tand\t@CPI2_1[0], r3, r4\n\tor\tr4, r1, r1\n\tsstore\tr2, r1\n\tld.1\t64, r1\n\tadd\t@CPI2_2[0], r0, r2\n\tcontext.gas_left\tr4\n\tsub.s!\t@CPI2_2[0], r4, r5\n\tadd.ge\tr2, r0, r4\n\tsub.s!\t@CPI2_2[0], r1, r5\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tshl.s\t192, r4, r2\n\tor\tr2, r1, r1\n\tand\t@CPI2_0[0], r3, r5\n\tor\t@CPI2_3[0], r1, r1\n\tadd\t32781, r0, r2\n\tadd\t3, r0, r3\n\tadd\t@CPI2_4[0], r0, r4\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r1\n\tjump.eq\t@.BB2_1\n\tret\n.BB2_1:\n\tadd\tr0, r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.func_end2:\n\nfun_mint:\n.func_begin3:\n\tnop\tstack+=[1]\n\tand!\t@CPI3_0[0], r1, r5\n\tjump.eq\t@.BB3_1\n\tadd\tr1, r0, stack-[1]\n\tadd\t2, r0, r2\n\tsload\tr2, r3\n\tsub.s!\t@CPI3_1[0], r3, r4\n\tjump.ge\t@.BB3_3\n\tadd\t@CPI3_2[0], r3, r3\n\tsstore\tr2, r3\n\tst.1\t0, r5\n\tst.1\t32, r0\n\tadd\t@CPI3_3[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI3_3[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI3_4[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB3_5\n\tld\tr1, r1\n\tsload\tr1, r2\n\tadd\t@CPI3_2[0], r2, r2\n\tsstore\tr1, r2\n\tadd\t@CPI3_2[0], r0, r1\n\tld.1\t64, r2\n\tst.1\tr2, r1\n\tadd\t@CPI3_3[0], r0, r1\n\tcontext.gas_left\tr3\n\tsub.s!\t@CPI3_3[0], r3, r4\n\tadd.ge\tr1, r0, r3\n\tsub.s!\t@CPI3_3[0], r2, r4\n\tadd.lt\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tshl.s\t192, r3, r2\n\tor\tr2, r1, r1\n\tor\t@CPI3_5[0], r1, r1\n\tadd\t32781, r0, r2\n\tadd\t3, r0, r3\n\tadd\t@CPI3_6[0], r0, r4\n\tadd\tr0, r0, r5\n\tadd\tstack-[1], r0, r6\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r1\n\tjump.eq\t@.BB3_5\n\tret\n.BB3_5:\n\tadd\tr0, r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB3_1:\n\tld.1\t64, r1\n\tadd\t68, r1, r2\n\tadd\t@CPI3_9[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t36, r1, r2\n\tadd\t31, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI3_10[0], r0, r2\n\tst.1\tr1, r2\n\tadd\t4, r1, r2\n\tadd\t32, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI3_3[0], r0, r2\n\tsub.s!\t@CPI3_3[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI3_11[0], r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB3_3:\n\tadd\t@CPI3_7[0], r0, r1\n\tst.1\t0, r1\n\tadd\t17, r0, r1\n\tst.1\t4, r1\n\tadd\t@CPI3_8[0], r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.func_end3:\n\nabi_encode_string:\n.func_begin4:\n\tadd\t32, r0, r3\n\tst.1.inc\tr1, r3, r4\n\tld.1\tr2, r3\n\tst.1\tr4, r3\n\tsub!\tr3, r0, r4\n\tadd\t64, r1, r1\n\tjump.eq\t@.BB4_4\n\tadd\tr0, r0, r4\n.BB4_2:\n\tadd\tr1, r4, r5\n\tadd\t32, r4, r4\n\tadd\tr4, r2, r6\n\tld.1\tr6, r6\n\tst.1\tr5, r6\n\tsub!\tr4, r3, r5\n\tjump.lt\t@.BB4_2\n\tsub!\tr4, r3, r2\n\tjump.le\t@.BB4_4\n\tadd\tr1, r3, r2\n\tst.1\tr2, r0\n\tjump\t@.BB4_6\n.BB4_4:\n.BB4_6:\n\tadd\t31, r3, r2\n\tsub.s\t32, r0, r3\n\tand\tr2, r3, r2\n\tadd\tr1, r2, r1\n\tret\n.func_end4:\n\nabi_decode_addresst_uint256:\n.func_begin5:\n\tsub.s\t4, r1, r1\n\tadd\t@CPI5_0[0], r0, r2\n\tsub.s!\t63, r1, r3\n\tadd\tr0, r0, r3\n\tadd.gt\tr2, r0, r3\n\tand\t@CPI5_0[0], r1, r1\n\tsub!\tr1, r0, r4\n\tadd.ge\tr0, r0, r2\n\tsub.s!\t@CPI5_0[0], r1, r1\n\tadd\tr3, r0, r1\n\tadd.eq\tr2, r0, r1\n\tsub!\tr1, r0, r1\n\tjump.eq\t@.BB5_1\n\tptr.add\tstack[@ptr_calldata], r0, r2\n\tptr.add.s\t4, r2, r1\n\tld\tr1, r1\n\tsub.s!\t@CPI5_1[0], r1, r3\n\tjump.gt\t@.BB5_1\n\tptr.add.s\t36, r2, r2\n\tld\tr2, r2\n\tret\n.BB5_1:\n\tadd\tr0, r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.func_end5:\n\nabi_decode_addresst_addresst_uint256:\n.func_begin6:\n\tsub.s\t4, r1, r1\n\tadd\t@CPI6_0[0], r0, r2\n\tsub.s!\t95, r1, r3\n\tadd\tr0, r0, r3\n\tadd.gt\tr2, r0, r3\n\tand\t@CPI6_0[0], r1, r1\n\tsub!\tr1, r0, r4\n\tadd.ge\tr0, r0, r2\n\tsub.s!\t@CPI6_0[0], r1, r1\n\tadd\tr3, r0, r1\n\tadd.eq\tr2, r0, r1\n\tsub!\tr1, r0, r1\n\tjump.eq\t@.BB6_1\n\tptr.add\tstack[@ptr_calldata], r0, r3\n\tptr.add.s\t4, r3, r1\n\tld\tr1, r1\n\tsub.s!\t@CPI6_1[0], r1, r2\n\tjump.gt\t@.BB6_1\n\tptr.add.s\t36, r3, r2\n\tld\tr2, r2\n\tsub.s!\t@CPI6_1[0], r2, r4\n\tjump.gt\t@.BB6_1\n\tptr.add.s\t68, r3, r3\n\tld\tr3, r3\n\tret\n.BB6_1:\n\tadd\tr0, r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.func_end6:\n\nabi_decode_address:\n.func_begin7:\n\tsub.s\t4, r1, r1\n\tadd\t@CPI7_0[0], r0, r2\n\tsub.s!\t31, r1, r3\n\tadd\tr0, r0, r3\n\tadd.gt\tr2, r0, r3\n\tand\t@CPI7_0[0], r1, r1\n\tsub!\tr1, r0, r4\n\tadd.ge\tr0, r0, r2\n\tsub.s!\t@CPI7_0[0], r1, r1\n\tadd\tr3, r0, r1\n\tadd.eq\tr2, r0, r1\n\tsub!\tr1, r0, r1\n\tjump.eq\t@.BB7_1\n\tadd\t4, r0, r1\n\tptr.add\tstack[@ptr_calldata], r1, r1\n\tld\tr1, r1\n\tsub.s!\t@CPI7_1[0], r1, r2\n\tjump.gt\t@.BB7_1\n\tret\n.BB7_1:\n\tadd\tr0, r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.func_end7:\n\nabi_decode_addresst_address:\n.func_begin8:\n\tsub.s\t4, r1, r1\n\tadd\t@CPI8_0[0], r0, r2\n\tsub.s!\t63, r1, r3\n\tadd\tr0, r0, r3\n\tadd.gt\tr2, r0, r3\n\tand\t@CPI8_0[0], r1, r1\n\tsub!\tr1, r0, r4\n\tadd.ge\tr0, r0, r2\n\tsub.s!\t@CPI8_0[0], r1, r1\n\tadd\tr3, r0, r1\n\tadd.eq\tr2, r0, r1\n\tsub!\tr1, r0, r1\n\tjump.eq\t@.BB8_1\n\tptr.add\tstack[@ptr_calldata], r0, r2\n\tptr.add.s\t4, r2, r1\n\tld\tr1, r1\n\tsub.s!\t@CPI8_1[0], r1, r3\n\tjump.gt\t@.BB8_1\n\tptr.add.s\t36, r2, r2\n\tld\tr2, r2\n\tsub.s!\t@CPI8_1[0], r2, r3\n\tjump.gt\t@.BB8_1\n\tret\n.BB8_1:\n\tadd\tr0, r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.func_end8:\n\nmodifier_onlyOwner:\n.func_begin9:\n\tadd\t5, r0, r1\n\tsload\tr1, r2\n\tand\t@CPI9_0[0], r2, r5\n\tcontext.caller\tr3\n\tsub!\tr5, r3, r3\n\tjump.ne\t@.BB9_1\n\tand\t@CPI9_5[0], r2, r2\n\tsstore\tr1, r2\n\tld.1\t64, r1\n\tadd\t@CPI9_3[0], r0, r2\n\tcontext.gas_left\tr3\n\tsub.s!\t@CPI9_3[0], r3, r4\n\tadd.ge\tr2, r0, r3\n\tsub.s!\t@CPI9_3[0], r1, r4\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tshl.s\t192, r3, r2\n\tor\tr2, r1, r1\n\tor\t@CPI9_6[0], r1, r1\n\tadd\t32781, r0, r2\n\tadd\t3, r0, r3\n\tadd\t@CPI9_7[0], r0, r4\n\tadd\tr0, r0, r6\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r1\n\tjump.eq\t@.BB9_3\n\tret\n.BB9_1:\n\tld.1\t64, r1\n\tadd\t68, r1, r2\n\tadd\t@CPI9_1[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI9_2[0], r0, r2\n\tst.1\tr1, r2\n\tadd\t36, r1, r2\n\tadd\t32, r0, r3\n\tst.1\tr2, r3\n\tadd\t4, r1, r2\n\tst.1\tr2, r3\n\tadd\t@CPI9_3[0], r0, r2\n\tsub.s!\t@CPI9_3[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI9_4[0], r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB9_3:\n\tadd\tr0, r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.func_end9:\n\nmodifier_onlyOwner_74:\n.func_begin10:\n\tadd\tr1, r0, r6\n\tadd\t5, r0, r1\n\tsload\tr1, r2\n\tand\t@CPI10_0[0], r2, r5\n\tcontext.caller\tr3\n\tsub!\tr5, r3, r3\n\tjump.ne\t@.BB10_1\n\tand!\t@CPI10_0[0], r6, r3\n\tjump.eq\t@.BB10_3\n\tand\t@CPI10_5[0], r2, r2\n\tor\tr2, r3, r2\n\tsstore\tr1, r2\n\tld.1\t64, r1\n\tadd\t@CPI10_3[0], r0, r2\n\tcontext.gas_left\tr3\n\tsub.s!\t@CPI10_3[0], r3, r4\n\tadd.ge\tr2, r0, r3\n\tsub.s!\t@CPI10_3[0], r1, r4\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tshl.s\t192, r3, r2\n\tor\tr2, r1, r1\n\tor\t@CPI10_6[0], r1, r1\n\tadd\t32781, r0, r2\n\tadd\t3, r0, r3\n\tadd\t@CPI10_7[0], r0, r4\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r1\n\tjump.eq\t@.BB10_5\n\tret\n.BB10_1:\n\tld.1\t64, r1\n\tadd\t68, r1, r2\n\tadd\t@CPI10_1[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI10_2[0], r0, r2\n\tst.1\tr1, r2\n\tadd\t36, r1, r2\n\tadd\t32, r0, r3\n\tst.1\tr2, r3\n\tadd\t4, r1, r2\n\tst.1\tr2, r3\n\tadd\t@CPI10_3[0], r0, r2\n\tsub.s!\t@CPI10_3[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI10_4[0], r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB10_3:\n\tld.1\t64, r1\n\tadd\t100, r1, r2\n\tadd\t@CPI10_8[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t68, r1, r2\n\tadd\t@CPI10_9[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t36, r1, r2\n\tadd\t38, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI10_2[0], r0, r2\n\tst.1\tr1, r2\n\tadd\t4, r1, r2\n\tadd\t32, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI10_3[0], r0, r2\n\tsub.s!\t@CPI10_3[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI10_10[0], r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB10_5:\n\tadd\tr0, r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.func_end10:\n\ncopy_array_from_storage_to_memory_string_3575:\n.func_begin11:\n\tadd\t3, r0, r5\n\tsload\tr5, r4\n\tand!\t1, r4, r6\n\tshr.s\t1, r4, r1\n\tand\t127, r1, r2\n\tadd.ne\tr1, r0, r2\n\tsub.s!\t31, r2, r1\n\tadd\t0, r0, r1\n\tadd.gt\t1, r0, r1\n\tand\t1, r1, r1\n\tsub!\tr6, r1, r1\n\tjump.ne\t@.BB11_1\n\tld.1\t64, r1\n\tst.1.inc\tr1, r2, r3\n\tsub!\tr6, r0, r6\n\tjump.ne\t@.BB11_9\n\tsub.s\t256, r0, r2\n\tand\tr4, r2, r2\n\tst.1\tr3, r2\n\tadd\t64, r0, r4\n\tjump\t@.BB11_4\n.BB11_9:\n\tst.1\t0, r5\n\tadd\t32, r0, r4\n\tsub!\tr2, r0, r5\n\tjump.eq\t@.BB11_4\n\tadd\t@CPI11_0[0], r0, r4\n\tadd\tr0, r0, r6\n.BB11_11:\n\tadd\tr6, r0, r5\n\tadd\tr5, r3, r6\n\tsload\tr4, r7\n\tst.1\tr6, r7\n\tadd\t1, r4, r4\n\tadd\t32, r5, r6\n\tsub!\tr6, r2, r7\n\tjump.lt\t@.BB11_11\n\tadd\t95, r5, r2\n\tsub.s\t32, r0, r3\n\tand\tr2, r3, r4\n.BB11_4:\n\tadd\tr4, r1, r2\n\tsub!\tr2, r4, r3\n\tadd\t0, r0, r3\n\tadd.lt\t1, r0, r3\n\tsub.s!\t@CPI11_1[0], r2, r4\n\tjump.gt\t@.BB11_6\n\tand!\t1, r3, r3\n\tjump.ne\t@.BB11_6\n\tst.1\t64, r2\n\tret\n.BB11_1:\n\tadd\t@CPI11_2[0], r0, r1\n\tst.1\t0, r1\n\tadd\t34, r0, r1\n\tst.1\t4, r1\n\tadd\t@CPI11_3[0], r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB11_6:\n\tadd\t@CPI11_2[0], r0, r1\n\tst.1\t0, r1\n\tadd\t65, r0, r1\n\tst.1\t4, r1\n\tadd\t@CPI11_3[0], r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.func_end11:\n\ncopy_array_from_storage_to_memory_string:\n.func_begin12:\n\tadd\t4, r0, r5\n\tsload\tr5, r4\n\tand!\t1, r4, r6\n\tshr.s\t1, r4, r1\n\tand\t127, r1, r2\n\tadd.ne\tr1, r0, r2\n\tsub.s!\t31, r2, r1\n\tadd\t0, r0, r1\n\tadd.gt\t1, r0, r1\n\tand\t1, r1, r1\n\tsub!\tr6, r1, r1\n\tjump.ne\t@.BB12_1\n\tld.1\t64, r1\n\tst.1.inc\tr1, r2, r3\n\tsub!\tr6, r0, r6\n\tjump.ne\t@.BB12_9\n\tsub.s\t256, r0, r2\n\tand\tr4, r2, r2\n\tst.1\tr3, r2\n\tadd\t64, r0, r4\n\tjump\t@.BB12_4\n.BB12_9:\n\tst.1\t0, r5\n\tadd\t32, r0, r4\n\tsub!\tr2, r0, r5\n\tjump.eq\t@.BB12_4\n\tadd\t@CPI12_0[0], r0, r4\n\tadd\tr0, r0, r6\n.BB12_11:\n\tadd\tr6, r0, r5\n\tadd\tr5, r3, r6\n\tsload\tr4, r7\n\tst.1\tr6, r7\n\tadd\t1, r4, r4\n\tadd\t32, r5, r6\n\tsub!\tr6, r2, r7\n\tjump.lt\t@.BB12_11\n\tadd\t95, r5, r2\n\tsub.s\t32, r0, r3\n\tand\tr2, r3, r4\n.BB12_4:\n\tadd\tr4, r1, r2\n\tsub!\tr2, r4, r3\n\tadd\t0, r0, r3\n\tadd.lt\t1, r0, r3\n\tsub.s!\t@CPI12_1[0], r2, r4\n\tjump.gt\t@.BB12_6\n\tand!\t1, r3, r3\n\tjump.ne\t@.BB12_6\n\tst.1\t64, r2\n\tret\n.BB12_1:\n\tadd\t@CPI12_2[0], r0, r1\n\tst.1\t0, r1\n\tadd\t34, r0, r1\n\tst.1\t4, r1\n\tadd\t@CPI12_3[0], r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB12_6:\n\tadd\t@CPI12_2[0], r0, r1\n\tst.1\t0, r1\n\tadd\t65, r0, r1\n\tst.1\t4, r1\n\tadd\t@CPI12_3[0], r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.func_end12:\n\nmapping_index_access_mapping_address_uint256_of_address_3592:\n.func_begin13:\n\tand\t@CPI13_0[0], r1, r1\n\tst.1\t0, r1\n\tadd\t1, r0, r1\n\tst.1\t32, r1\n\tadd\t@CPI13_1[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI13_1[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI13_2[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB13_1\n\tld\tr1, r1\n\tret\n.BB13_1:\n\tadd\tr0, r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.func_end13:\n\nmapping_index_access_mapping_address_uint256_of_address.3:\n.func_begin14:\n\tand\t@CPI14_0[0], r2, r2\n\tst.1\t0, r2\n\tst.1\t32, r1\n\tadd\t@CPI14_1[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI14_1[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI14_2[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB14_1\n\tld\tr1, r1\n\tret\n.BB14_1:\n\tadd\tr0, r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.func_end14:\n\nfun_balanceOf:\n.func_begin15:\n\tand\t@CPI15_0[0], r1, r1\n\tst.1\t0, r1\n\tst.1\t32, r0\n\tadd\t@CPI15_1[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI15_1[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI15_2[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB15_1\n\tld\tr1, r1\n\tsload\tr1, r1\n\tret\n.BB15_1:\n\tadd\tr0, r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.func_end15:\n\nfun_transfer:\n.func_begin16:\n\tnop\tstack+=[6]\n\tadd\tr2, r0, stack-[6]\n\tcontext.caller\tr2\n\tand!\t@CPI16_0[0], r2, r3\n\tjump.eq\t@.BB16_1\n\tadd\tr2, r0, stack-[2]\n\tadd\tr1, r0, stack-[3]\n\tand!\t@CPI16_0[0], r1, r1\n\tadd\tr1, r0, stack-[5]\n\tjump.eq\t@.BB16_3\n\tadd\tr3, r0, stack-[4]\n\tst.1\t0, r3\n\tst.1\t32, r0\n\tadd\t@CPI16_1[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI16_1[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI16_2[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB16_5\n\tld\tr1, r1\n\tsload\tr1, r2\n\tadd\tstack-[6], r0, r1\n\tadd\tr2, r0, stack-[1]\n\tsub!\tr2, r1, r1\n\tjump.lt\t@.BB16_7\n\tadd\tstack-[4], r0, r1\n\tst.1\t0, r1\n\tst.1\t32, r0\n\tadd\t@CPI16_1[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI16_1[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI16_2[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB16_5\n\tadd\tstack-[6], r0, r2\n\tadd\tstack-[1], r0, r3\n\tsub\tr3, r2, r2\n\tld\tr1, r1\n\tsstore\tr1, r2\n\tadd\tstack-[5], r0, r1\n\tst.1\t0, r1\n\tst.1\t32, r0\n\tadd\t@CPI16_1[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI16_1[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI16_2[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB16_5\n\tld\tr1, r1\n\tsload\tr1, r2\n\tadd\tstack-[6], r0, r3\n\tadd\tr2, r3, r2\n\tsstore\tr1, r2\n\tld.1\t64, r1\n\tst.1\tr1, r3\n\tadd\t@CPI16_1[0], r0, r2\n\tcontext.gas_left\tr3\n\tsub.s!\t@CPI16_1[0], r3, r4\n\tadd.ge\tr2, r0, r3\n\tsub.s!\t@CPI16_1[0], r1, r4\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tshl.s\t192, r3, r2\n\tor\tr2, r1, r1\n\tor\t@CPI16_3[0], r1, r1\n\tadd\t32781, r0, r2\n\tadd\t3, r0, r3\n\tadd\t@CPI16_4[0], r0, r4\n\tadd\tstack-[2], r0, r5\n\tadd\tstack-[3], r0, r6\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r1\n\tjump.eq\t@.BB16_5\n\tret\n.BB16_5:\n\tadd\tr0, r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB16_1:\n\tld.1\t64, r1\n\tadd\t100, r1, r2\n\tadd\t@CPI16_11[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t68, r1, r2\n\tadd\t@CPI16_12[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t36, r1, r2\n\tadd\t37, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI16_7[0], r0, r2\n\tst.1\tr1, r2\n\tadd\t4, r1, r2\n\tadd\t32, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI16_1[0], r0, r2\n\tsub.s!\t@CPI16_1[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI16_8[0], r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB16_3:\n\tld.1\t64, r1\n\tadd\t100, r1, r2\n\tadd\t@CPI16_9[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t68, r1, r2\n\tadd\t@CPI16_10[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t36, r1, r2\n\tadd\t35, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI16_7[0], r0, r2\n\tst.1\tr1, r2\n\tadd\t4, r1, r2\n\tadd\t32, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI16_1[0], r0, r2\n\tsub.s!\t@CPI16_1[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI16_8[0], r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB16_7:\n\tld.1\t64, r1\n\tadd\t100, r1, r2\n\tadd\t@CPI16_5[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t68, r1, r2\n\tadd\t@CPI16_6[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t36, r1, r2\n\tadd\t38, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI16_7[0], r0, r2\n\tst.1\tr1, r2\n\tadd\t4, r1, r2\n\tadd\t32, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI16_1[0], r0, r2\n\tsub.s!\t@CPI16_1[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI16_8[0], r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.func_end16:\n\nfun_approve:\n.func_begin17:\n\tnop\tstack+=[4]\n\tcontext.caller\tr3\n\tand!\t@CPI17_0[0], r3, r4\n\tjump.eq\t@.BB17_1\n\tadd\tr2, r0, stack-[1]\n\tadd\tr3, r0, stack-[2]\n\tadd\tr1, r0, stack-[3]\n\tand!\t@CPI17_0[0], r1, r1\n\tadd\tr1, r0, stack-[4]\n\tjump.eq\t@.BB17_3\n\tst.1\t0, r4\n\tadd\t1, r0, r1\n\tst.1\t32, r1\n\tadd\t@CPI17_1[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI17_1[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI17_2[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB17_5\n\tld\tr1, r1\n\tadd\tstack-[4], r0, r2\n\tst.1\t0, r2\n\tst.1\t32, r1\n\tadd\t@CPI17_1[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI17_1[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI17_2[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB17_5\n\tld\tr1, r1\n\tadd\tstack-[1], r0, r2\n\tsstore\tr1, r2\n\tld.1\t64, r1\n\tst.1\tr1, r2\n\tadd\t@CPI17_1[0], r0, r2\n\tcontext.gas_left\tr3\n\tsub.s!\t@CPI17_1[0], r3, r4\n\tadd.ge\tr2, r0, r3\n\tsub.s!\t@CPI17_1[0], r1, r4\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tshl.s\t192, r3, r2\n\tor\tr2, r1, r1\n\tor\t@CPI17_3[0], r1, r1\n\tadd\t32781, r0, r2\n\tadd\t3, r0, r3\n\tadd\t@CPI17_4[0], r0, r4\n\tadd\tstack-[2], r0, r5\n\tadd\tstack-[3], r0, r6\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r1\n\tjump.eq\t@.BB17_5\n\tret\n.BB17_5:\n\tadd\tr0, r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB17_1:\n\tld.1\t64, r1\n\tadd\t100, r1, r2\n\tadd\t@CPI17_9[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t68, r1, r2\n\tadd\t@CPI17_10[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t36, r1, r2\n\tadd\t36, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI17_7[0], r0, r2\n\tst.1\tr1, r2\n\tadd\t4, r1, r2\n\tadd\t32, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI17_1[0], r0, r2\n\tsub.s!\t@CPI17_1[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI17_8[0], r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB17_3:\n\tld.1\t64, r1\n\tadd\t100, r1, r2\n\tadd\t@CPI17_5[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t68, r1, r2\n\tadd\t@CPI17_6[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t36, r1, r2\n\tadd\t34, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI17_7[0], r0, r2\n\tst.1\tr1, r2\n\tadd\t4, r1, r2\n\tadd\t32, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI17_1[0], r0, r2\n\tsub.s!\t@CPI17_1[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI17_8[0], r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.func_end17:\n\nfun_transferFrom:\n.func_begin18:\n\tnop\tstack+=[8]\n\tadd\tr3, r0, stack-[8]\n\tadd\tr2, r0, stack-[6]\n\tadd\tr1, r0, stack-[5]\n\tand\t@CPI18_0[0], r1, r1\n\tadd\tr1, r0, stack-[7]\n\tst.1\t0, r1\n\tadd\t1, r0, r1\n\tadd\tr1, r0, stack-[3]\n\tst.1\t32, r1\n\tadd\t@CPI18_1[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI18_1[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI18_2[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB18_1\n\tcontext.caller\tr2\n\tld\tr1, r1\n\tadd\tr2, r0, stack-[2]\n\tand\t@CPI18_0[0], r2, r2\n\tadd\tr2, r0, stack-[4]\n\tst.1\t0, r2\n\tst.1\t32, r1\n\tadd\t@CPI18_1[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI18_1[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI18_2[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB18_1\n\tld\tr1, r1\n\tsload\tr1, r2\n\tsub.s\t1, r0, r1\n\tsub!\tr2, r1, r1\n\tjump.eq\t@.BB18_5\n\tadd\tstack-[8], r0, r1\n\tsub!\tr2, r1, r1\n\tjump.lt\t@.BB18_16\n\tadd\tstack-[7], r0, r1\n\tsub!\tr1, r0, r1\n\tjump.eq\t@.BB18_18\n\tadd\tr2, r0, stack-[1]\n\tadd\tstack-[4], r0, r1\n\tsub!\tr1, r0, r1\n\tjump.eq\t@.BB18_20\n\tadd\tstack-[7], r0, r1\n\tst.1\t0, r1\n\tadd\tstack-[3], r0, r1\n\tst.1\t32, r1\n\tadd\t@CPI18_1[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI18_1[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI18_2[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB18_1\n\tld\tr1, r1\n\tadd\tstack-[4], r0, r2\n\tst.1\t0, r2\n\tst.1\t32, r1\n\tadd\t@CPI18_1[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI18_1[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI18_2[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB18_1\n\tadd\tstack-[8], r0, r2\n\tadd\tstack-[1], r0, r3\n\tsub\tr3, r2, r2\n\tld\tr1, r1\n\tsstore\tr1, r2\n\tld.1\t64, r1\n\tst.1\tr1, r2\n\tadd\t@CPI18_1[0], r0, r2\n\tcontext.gas_left\tr3\n\tsub.s!\t@CPI18_1[0], r3, r4\n\tadd.ge\tr2, r0, r3\n\tsub.s!\t@CPI18_1[0], r1, r4\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tshl.s\t192, r3, r2\n\tor\tr2, r1, r1\n\tor\t@CPI18_3[0], r1, r1\n\tadd\t32781, r0, r2\n\tadd\t3, r0, r3\n\tadd\t@CPI18_4[0], r0, r4\n\tadd\tstack-[5], r0, r5\n\tadd\tstack-[2], r0, r6\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r1\n\tjump.ne\t@.BB18_7\n\tjump\t@.BB18_1\n.BB18_5:\n\tadd\tstack-[7], r0, r1\n\tsub!\tr1, r0, r1\n\tjump.eq\t@.BB18_6\n.BB18_7:\n\tadd\tstack-[6], r0, r1\n\tand!\t@CPI18_0[0], r1, r1\n\tadd\tr1, r0, stack-[4]\n\tjump.eq\t@.BB18_8\n\tadd\tstack-[7], r0, r1\n\tst.1\t0, r1\n\tst.1\t32, r0\n\tadd\t@CPI18_1[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI18_1[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI18_2[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB18_1\n\tld\tr1, r1\n\tsload\tr1, r2\n\tadd\tstack-[8], r0, r1\n\tadd\tr2, r0, stack-[3]\n\tsub!\tr2, r1, r1\n\tjump.lt\t@.BB18_11\n\tadd\tstack-[7], r0, r1\n\tst.1\t0, r1\n\tst.1\t32, r0\n\tadd\t@CPI18_1[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI18_1[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI18_2[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB18_1\n\tadd\tstack-[8], r0, r2\n\tadd\tstack-[3], r0, r3\n\tsub\tr3, r2, r2\n\tld\tr1, r1\n\tsstore\tr1, r2\n\tadd\tstack-[4], r0, r1\n\tst.1\t0, r1\n\tst.1\t32, r0\n\tadd\t@CPI18_1[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI18_1[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI18_2[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB18_1\n\tld\tr1, r1\n\tsload\tr1, r2\n\tadd\tstack-[8], r0, r3\n\tadd\tr2, r3, r2\n\tsstore\tr1, r2\n\tld.1\t64, r1\n\tst.1\tr1, r3\n\tadd\t@CPI18_1[0], r0, r2\n\tcontext.gas_left\tr3\n\tsub.s!\t@CPI18_1[0], r3, r4\n\tadd.ge\tr2, r0, r3\n\tsub.s!\t@CPI18_1[0], r1, r4\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tshl.s\t192, r3, r2\n\tor\tr2, r1, r1\n\tor\t@CPI18_3[0], r1, r1\n\tadd\t32781, r0, r2\n\tadd\t3, r0, r3\n\tadd\t@CPI18_13[0], r0, r4\n\tadd\tstack-[5], r0, r5\n\tadd\tstack-[6], r0, r6\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r1\n\tjump.eq\t@.BB18_1\n\tret\n.BB18_1:\n\tadd\tr0, r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB18_8:\n\tld.1\t64, r1\n\tadd\t100, r1, r2\n\tadd\t@CPI18_16[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t68, r1, r2\n\tadd\t@CPI18_17[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t36, r1, r2\n\tadd\t35, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI18_7[0], r0, r2\n\tst.1\tr1, r2\n\tadd\t4, r1, r2\n\tadd\t32, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI18_1[0], r0, r2\n\tsub.s!\t@CPI18_1[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI18_8[0], r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB18_11:\n\tld.1\t64, r1\n\tadd\t100, r1, r2\n\tadd\t@CPI18_14[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t68, r1, r2\n\tadd\t@CPI18_15[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t36, r1, r2\n\tadd\t38, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI18_7[0], r0, r2\n\tst.1\tr1, r2\n\tadd\t4, r1, r2\n\tadd\t32, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI18_1[0], r0, r2\n\tsub.s!\t@CPI18_1[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI18_8[0], r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB18_16:\n\tld.1\t64, r1\n\tadd\t68, r1, r2\n\tadd\t@CPI18_11[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t36, r1, r2\n\tadd\t29, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI18_7[0], r0, r2\n\tst.1\tr1, r2\n\tadd\t4, r1, r2\n\tadd\t32, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI18_1[0], r0, r2\n\tsub.s!\t@CPI18_1[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI18_12[0], r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB18_18:\n\tld.1\t64, r1\n\tadd\t100, r1, r2\n\tadd\t@CPI18_9[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t68, r1, r2\n\tadd\t@CPI18_10[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t36, r1, r2\n\tadd\t36, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI18_7[0], r0, r2\n\tst.1\tr1, r2\n\tadd\t4, r1, r2\n\tadd\t32, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI18_1[0], r0, r2\n\tsub.s!\t@CPI18_1[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI18_8[0], r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB18_20:\n\tld.1\t64, r1\n\tadd\t100, r1, r2\n\tadd\t@CPI18_5[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t68, r1, r2\n\tadd\t@CPI18_6[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t36, r1, r2\n\tadd\t34, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI18_7[0], r0, r2\n\tst.1\tr1, r2\n\tadd\t4, r1, r2\n\tadd\t32, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI18_1[0], r0, r2\n\tsub.s!\t@CPI18_1[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI18_8[0], r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB18_6:\n\tld.1\t64, r1\n\tadd\t100, r1, r2\n\tadd\t@CPI18_18[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t68, r1, r2\n\tadd\t@CPI18_19[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t36, r1, r2\n\tadd\t37, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI18_7[0], r0, r2\n\tst.1\tr1, r2\n\tadd\t4, r1, r2\n\tadd\t32, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI18_1[0], r0, r2\n\tsub.s!\t@CPI18_1[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI18_8[0], r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.func_end18:\n\nfun_increaseAllowance:\n.func_begin19:\n\tnop\tstack+=[6]\n\tadd\tr2, r0, stack-[5]\n\tadd\tr1, r0, stack-[6]\n\tcontext.caller\tr1\n\tadd\tr1, r0, stack-[4]\n\tst.1\t0, r1\n\tadd\t1, r0, r1\n\tadd\tr1, r0, stack-[2]\n\tst.1\t32, r1\n\tadd\t@CPI19_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI19_0[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI19_1[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB19_1\n\tld\tr1, r1\n\tadd\tstack-[6], r0, r2\n\tand\t@CPI19_2[0], r2, r2\n\tadd\tr2, r0, stack-[3]\n\tst.1\t0, r2\n\tst.1\t32, r1\n\tadd\t@CPI19_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI19_0[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI19_1[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB19_1\n\tsub.s\t1, r0, r2\n\tadd\tstack-[5], r0, r3\n\txor\tr3, r2, r2\n\tld\tr1, r1\n\tsload\tr1, r3\n\tsub!\tr3, r2, r1\n\tjump.gt\t@.BB19_4\n\tadd\tstack-[4], r0, r1\n\tand!\t@CPI19_2[0], r1, r1\n\tjump.eq\t@.BB19_6\n\tadd\tr3, r0, stack-[1]\n\tadd\tstack-[3], r0, r2\n\tsub!\tr2, r0, r2\n\tjump.eq\t@.BB19_8\n\tst.1\t0, r1\n\tadd\tstack-[2], r0, r1\n\tst.1\t32, r1\n\tadd\t@CPI19_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI19_0[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI19_1[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB19_1\n\tld\tr1, r1\n\tadd\tstack-[3], r0, r2\n\tst.1\t0, r2\n\tst.1\t32, r1\n\tadd\t@CPI19_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI19_0[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI19_1[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB19_1\n\tadd\tstack-[5], r0, r2\n\tadd\tstack-[1], r0, r3\n\tadd\tr3, r2, r2\n\tld\tr1, r1\n\tsstore\tr1, r2\n\tld.1\t64, r1\n\tst.1\tr1, r2\n\tadd\t@CPI19_0[0], r0, r2\n\tcontext.gas_left\tr3\n\tsub.s!\t@CPI19_0[0], r3, r4\n\tadd.ge\tr2, r0, r3\n\tsub.s!\t@CPI19_0[0], r1, r4\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tshl.s\t192, r3, r2\n\tor\tr2, r1, r1\n\tor\t@CPI19_3[0], r1, r1\n\tadd\t32781, r0, r2\n\tadd\t3, r0, r3\n\tadd\t@CPI19_4[0], r0, r4\n\tadd\tstack-[4], r0, r5\n\tadd\tstack-[6], r0, r6\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r1\n\tjump.eq\t@.BB19_1\n\tret\n.BB19_1:\n\tadd\tr0, r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB19_4:\n\tadd\t@CPI19_11[0], r0, r1\n\tst.1\t0, r1\n\tadd\t17, r0, r1\n\tst.1\t4, r1\n\tadd\t@CPI19_12[0], r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB19_6:\n\tld.1\t64, r1\n\tadd\t100, r1, r2\n\tadd\t@CPI19_9[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t68, r1, r2\n\tadd\t@CPI19_10[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t36, r1, r2\n\tadd\t36, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI19_7[0], r0, r2\n\tst.1\tr1, r2\n\tadd\t4, r1, r2\n\tadd\t32, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI19_0[0], r0, r2\n\tsub.s!\t@CPI19_0[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI19_8[0], r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB19_8:\n\tld.1\t64, r1\n\tadd\t100, r1, r2\n\tadd\t@CPI19_5[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t68, r1, r2\n\tadd\t@CPI19_6[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t36, r1, r2\n\tadd\t34, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI19_7[0], r0, r2\n\tst.1\tr1, r2\n\tadd\t4, r1, r2\n\tadd\t32, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI19_0[0], r0, r2\n\tsub.s!\t@CPI19_0[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI19_8[0], r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.func_end19:\n\nfun_decreaseAllowance:\n.func_begin20:\n\tnop\tstack+=[6]\n\tadd\tr2, r0, stack-[5]\n\tadd\tr1, r0, stack-[6]\n\tcontext.caller\tr1\n\tadd\tr1, r0, stack-[4]\n\tst.1\t0, r1\n\tadd\t1, r0, r1\n\tadd\tr1, r0, stack-[2]\n\tst.1\t32, r1\n\tadd\t@CPI20_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI20_0[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI20_1[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB20_1\n\tld\tr1, r1\n\tadd\tstack-[6], r0, r2\n\tand\t@CPI20_2[0], r2, r2\n\tadd\tr2, r0, stack-[3]\n\tst.1\t0, r2\n\tst.1\t32, r1\n\tadd\t@CPI20_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI20_0[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI20_1[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB20_1\n\tld\tr1, r1\n\tsload\tr1, r2\n\tadd\tstack-[5], r0, r1\n\tsub!\tr2, r1, r1\n\tjump.lt\t@.BB20_4\n\tadd\tstack-[4], r0, r1\n\tand!\t@CPI20_2[0], r1, r1\n\tjump.eq\t@.BB20_6\n\tadd\tr2, r0, stack-[1]\n\tadd\tstack-[3], r0, r2\n\tsub!\tr2, r0, r2\n\tjump.eq\t@.BB20_8\n\tst.1\t0, r1\n\tadd\tstack-[2], r0, r1\n\tst.1\t32, r1\n\tadd\t@CPI20_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI20_0[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI20_1[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB20_1\n\tld\tr1, r1\n\tadd\tstack-[3], r0, r2\n\tst.1\t0, r2\n\tst.1\t32, r1\n\tadd\t@CPI20_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI20_0[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI20_1[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB20_1\n\tadd\tstack-[5], r0, r2\n\tadd\tstack-[1], r0, r3\n\tsub\tr3, r2, r2\n\tld\tr1, r1\n\tsstore\tr1, r2\n\tld.1\t64, r1\n\tst.1\tr1, r2\n\tadd\t@CPI20_0[0], r0, r2\n\tcontext.gas_left\tr3\n\tsub.s!\t@CPI20_0[0], r3, r4\n\tadd.ge\tr2, r0, r3\n\tsub.s!\t@CPI20_0[0], r1, r4\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tshl.s\t192, r3, r2\n\tor\tr2, r1, r1\n\tor\t@CPI20_3[0], r1, r1\n\tadd\t32781, r0, r2\n\tadd\t3, r0, r3\n\tadd\t@CPI20_4[0], r0, r4\n\tadd\tstack-[4], r0, r5\n\tadd\tstack-[6], r0, r6\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r1\n\tjump.eq\t@.BB20_1\n\tret\n.BB20_1:\n\tadd\tr0, r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB20_4:\n\tld.1\t64, r1\n\tadd\t100, r1, r2\n\tadd\t@CPI20_11[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t68, r1, r2\n\tadd\t@CPI20_12[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t36, r1, r2\n\tadd\t37, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI20_7[0], r0, r2\n\tst.1\tr1, r2\n\tadd\t4, r1, r2\n\tadd\t32, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI20_0[0], r0, r2\n\tsub.s!\t@CPI20_0[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI20_8[0], r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB20_6:\n\tld.1\t64, r1\n\tadd\t100, r1, r2\n\tadd\t@CPI20_9[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t68, r1, r2\n\tadd\t@CPI20_10[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t36, r1, r2\n\tadd\t36, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI20_7[0], r0, r2\n\tst.1\tr1, r2\n\tadd\t4, r1, r2\n\tadd\t32, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI20_0[0], r0, r2\n\tsub.s!\t@CPI20_0[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI20_8[0], r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB20_8:\n\tld.1\t64, r1\n\tadd\t100, r1, r2\n\tadd\t@CPI20_5[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t68, r1, r2\n\tadd\t@CPI20_6[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t36, r1, r2\n\tadd\t34, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI20_7[0], r0, r2\n\tst.1\tr1, r2\n\tadd\t4, r1, r2\n\tadd\t32, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI20_0[0], r0, r2\n\tsub.s!\t@CPI20_0[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI20_8[0], r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.func_end20:\n\nmodifier_onlyOwner_1943:\n.func_begin21:\n\tnop\tstack+=[2]\n\tadd\tr2, r0, r6\n\tadd\t5, r0, r2\n\tsload\tr2, r2\n\tand\t@CPI21_0[0], r2, r3\n\tcontext.caller\tr2\n\tsub!\tr3, r2, r2\n\tjump.ne\t@.BB21_1\n\tand!\t@CPI21_0[0], r1, r5\n\tjump.eq\t@.BB21_3\n\tadd\tr1, r0, stack-[2]\n\tsub.s\t1, r0, r2\n\txor\tr6, r2, r4\n\tadd\t2, r0, r2\n\tsload\tr2, r3\n\tsub!\tr3, r4, r4\n\tjump.gt\t@.BB21_5\n\tadd\tr3, r6, r3\n\tsstore\tr2, r3\n\tst.1\t0, r5\n\tst.1\t32, r0\n\tadd\t@CPI21_3[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI21_3[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI21_5[0], r1, r1\n\tadd\t32784, r0, r2\n\tadd\tr6, r0, stack-[1]\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB21_7\n\tld\tr1, r1\n\tsload\tr1, r2\n\tadd\tstack-[1], r0, r3\n\tadd\tr2, r3, r2\n\tsstore\tr1, r2\n\tld.1\t64, r1\n\tst.1\tr1, r3\n\tadd\t@CPI21_3[0], r0, r2\n\tcontext.gas_left\tr3\n\tsub.s!\t@CPI21_3[0], r3, r4\n\tadd.ge\tr2, r0, r3\n\tsub.s!\t@CPI21_3[0], r1, r4\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tshl.s\t192, r3, r2\n\tor\tr2, r1, r1\n\tor\t@CPI21_6[0], r1, r1\n\tadd\t32781, r0, r2\n\tadd\t3, r0, r3\n\tadd\t@CPI21_7[0], r0, r4\n\tadd\tr0, r0, r5\n\tadd\tstack-[2], r0, r6\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r1\n\tjump.eq\t@.BB21_7\n\tret\n.BB21_7:\n\tadd\tr0, r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB21_1:\n\tld.1\t64, r1\n\tadd\t68, r1, r2\n\tadd\t@CPI21_1[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI21_2[0], r0, r2\n\tst.1\tr1, r2\n\tadd\t36, r1, r2\n\tadd\t32, r0, r3\n\tst.1\tr2, r3\n\tadd\t4, r1, r2\n\tst.1\tr2, r3\n\tadd\t@CPI21_3[0], r0, r2\n\tsub.s!\t@CPI21_3[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI21_4[0], r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB21_3:\n\tld.1\t64, r1\n\tadd\t68, r1, r2\n\tadd\t@CPI21_10[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t36, r1, r2\n\tadd\t31, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI21_2[0], r0, r2\n\tst.1\tr1, r2\n\tadd\t4, r1, r2\n\tadd\t32, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI21_3[0], r0, r2\n\tsub.s!\t@CPI21_3[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI21_4[0], r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB21_5:\n\tadd\t@CPI21_8[0], r0, r1\n\tst.1\t0, r1\n\tadd\t17, r0, r1\n\tst.1\t4, r1\n\tadd\t@CPI21_9[0], r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.func_end21:\n\n__farcall:\n.func_begin22:\n.tmp0:\n\tfar_call\tr1, r2, @.BB22_2\n.tmp1:\n\tadd\t1, r0, r2\n\tret\n.BB22_2:\n.tmp2:\n\tadd\tr0, r0, r2\n\tret\n.func_end22:\n\n__staticcall:\n.func_begin23:\n.tmp3:\n\tfar_call.static\tr1, r2, @.BB23_2\n.tmp4:\n\tadd\t1, r0, r2\n\tret\n.BB23_2:\n.tmp5:\n\tadd\tr0, r0, r2\n\tret\n.func_end23:\n\n\t.data\n\t.p2align\t5\ncalldatasize:\n\t.cell 0\n\n\t.p2align\t5\nptr_calldata:\n.cell\t0\n\n\t.note.GNU-stack\n\t.rodata\nCPI0_0:\nCPI1_1:\nCPI2_2:\nCPI3_3:\nCPI9_3:\nCPI10_3:\nCPI13_1:\nCPI14_1:\nCPI15_1:\nCPI16_1:\nCPI17_1:\nCPI18_1:\nCPI19_0:\nCPI20_0:\nCPI21_3:\n\t.cell 4294967295\nCPI0_1:\nCPI11_1:\nCPI12_1:\n\t.cell 18446744073709551615\nCPI0_2:\nCPI5_0:\nCPI6_0:\nCPI7_0:\nCPI8_0:\n\t.cell -57896044618658097711785492504343953926634992332820282019728792003956564819968\nCPI0_3:\nCPI1_2:\nCPI3_5:\nCPI16_3:\nCPI17_3:\nCPI18_3:\nCPI19_3:\nCPI20_3:\nCPI21_6:\n\t.cell 904625697166532776746648320380374280103671757735618107014721178055227736064\nCPI0_4:\n\t.cell 53919893334301279589334030174039261352344891250716429051063678533632\nCPI0_5:\nCPI1_3:\nCPI3_7:\nCPI11_2:\nCPI12_2:\nCPI19_11:\nCPI21_8:\n\t.cell 35408467139433450592217433187231851964531694900788300625387963629091585785856\nCPI0_6:\nCPI1_4:\nCPI3_8:\nCPI11_3:\nCPI12_3:\nCPI19_12:\nCPI21_9:\n\t.cell 2852213850513516153367582212096\nCPI0_7:\n\t.cell 1889567280\nCPI0_8:\n\t.cell 2757214934\nCPI0_9:\n\t.cell 3714247997\nCPI0_10:\n\t.cell 3714247998\nCPI0_11:\n\t.cell 4076725131\nCPI0_12:\n\t.cell 2757214935\nCPI0_13:\n\t.cell 2835717307\nCPI0_14:\n\t.cell 2376452954\nCPI0_15:\n\t.cell 2376452955\nCPI0_16:\n\t.cell 2514000705\nCPI0_17:\n\t.cell 1889567281\nCPI0_18:\n\t.cell 1901074598\nCPI0_19:\n\t.cell 599290588\nCPI0_20:\n\t.cell 961581904\nCPI0_21:\n\t.cell 961581905\nCPI0_22:\n\t.cell 1086394137\nCPI0_23:\n\t.cell 599290589\nCPI0_24:\n\t.cell 826074471\nCPI0_25:\n\t.cell 117300739\nCPI0_26:\n\t.cell 157198259\nCPI0_27:\n\t.cell 404098525\nCPI0_28:\n\t.cell 2535301200456458802993406410752\nCPI0_29:\nCPI2_0:\nCPI3_0:\nCPI5_1:\nCPI6_1:\nCPI7_1:\nCPI8_1:\nCPI9_0:\nCPI10_0:\nCPI13_0:\nCPI14_0:\nCPI15_0:\nCPI16_0:\nCPI17_0:\nCPI18_0:\nCPI19_2:\nCPI20_2:\nCPI21_0:\n\t.cell 1461501637330902918203684832716283019655932542975\nCPI1_0:\n\t.cell 18446744073709551616\nCPI2_1:\nCPI9_5:\nCPI10_5:\n\t.cell -1461501637330902918203684832716283019655932542976\nCPI2_3:\nCPI9_6:\nCPI10_6:\n\t.cell 904625697166532776746648320380374280103671755200316906558262375061821325312\nCPI2_4:\nCPI9_7:\nCPI10_7:\n\t.cell -52524777015005588113349992707137368332388074750292320778649315033004770043936\nCPI3_1:\n\t.cell -1000000000000000000000000000\nCPI3_2:\n\t.cell 1000000000000000000000000000\nCPI3_4:\nCPI13_2:\nCPI14_2:\nCPI15_2:\nCPI16_2:\nCPI17_2:\nCPI18_2:\nCPI19_1:\nCPI20_1:\nCPI21_5:\n\t.cell 904625697166532776746648320380374280103671760270919307471179981048634146816\nCPI3_6:\nCPI16_4:\nCPI18_13:\nCPI21_7:\n\t.cell -15402802100530019096323380498944738953123845089667699673314898783681816316945\nCPI3_9:\nCPI21_10:\n\t.cell 31354931781638678563069525067809233856775101976563302031013534919694566519552\nCPI3_10:\nCPI9_2:\nCPI10_2:\nCPI16_7:\nCPI17_7:\nCPI18_7:\nCPI19_7:\nCPI20_7:\nCPI21_2:\n\t.cell 3963877391197344453575983046348115674221700746820753546331534351508065746944\nCPI3_11:\nCPI9_4:\nCPI10_4:\nCPI18_12:\nCPI21_4:\n\t.cell 7922816251426433759354395033600\nCPI9_1:\nCPI10_1:\nCPI21_1:\n\t.cell 35943731656364841964516503116990081338611484598491072354577564874054038349170\nCPI10_8:\n\t.cell 45408759099000846574684193736602357774271237157169010951590501707763511459840\nCPI10_9:\n\t.cell 35943731656364841964517558219894961445653631979235167635064085396828900499553\nCPI10_10:\nCPI16_8:\nCPI17_8:\nCPI18_8:\nCPI19_8:\nCPI20_8:\n\t.cell 10458117451882892562347801444352\nCPI11_0:\n\t.cell -27889059366240281169193357100633332908378892778709981755071813198463099602853\nCPI12_0:\n\t.cell -53278079350709166316280423202849322519190186591071851114874353210178472783461\nCPI16_5:\nCPI18_14:\n\t.cell 44065838241030143116324720188876985940908656145555552347773292252211112312832\nCPI16_6:\nCPI18_15:\n\t.cell 31354931781638678607228669297131712859100820671745083778533502622993977909346\nCPI16_9:\nCPI18_16:\n\t.cell 45887578820189300338443374388718498632482616163288499555830078344056365121536\nCPI16_10:\nCPI18_17:\n\t.cell 31354931781638678607228669297131712859126084785867252355217498662940140921970\nCPI16_11:\nCPI18_18:\n\t.cell 45433405612597180762055095701412804886438245671210399661410036396145969725440\nCPI16_12:\nCPI18_19:\n\t.cell 31354931781638678607228669297131712859107492772550336241160036866987736981860\nCPI17_4:\nCPI18_4:\nCPI19_4:\nCPI20_4:\n\t.cell -52305948261162578668367882225327028569797882979485679342215860919519743330011\nCPI17_5:\nCPI18_5:\nCPI19_5:\nCPI20_5:\n\t.cell 52219164999525148860834357634456956735281286572158918307284071279203377479680\nCPI17_6:\nCPI18_6:\nCPI19_6:\nCPI20_6:\n\t.cell 31354931781638678487916134672869638488806705378895508030211234510262059168357\nCPI17_9:\nCPI18_9:\nCPI19_9:\nCPI20_9:\n\t.cell 51742913093258732729005998692887265601192425265805909375210916622055285719040\nCPI17_10:\nCPI18_10:\nCPI19_10:\nCPI20_10:\n\t.cell 31354931781638678487916134672869638484047149969764982831501014746446650500196\nCPI18_11:\n\t.cell 31354931781638678538084197150757782427756587561754988975511141185730285404160\nCPI20_11:\n\t.cell 14690266658072097593480850647027335513285713462661904985951319567533531463680\nCPI20_12:\n\t.cell 31354931781638678506476475496475743842680577777870365728514456330491174612855\n","bytecode":{"object":""},"methodIdentifiers":{"allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","decimals()":"313ce567","decreaseAllowance(address,uint256)":"a457c2d7","increaseAllowance(address,uint256)":"39509351","mint(address,uint256)":"40c10f19","name()":"06fdde03","owner()":"8da5cb5b","renounceOwnership()":"715018a6","symbol()":"95d89b41","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd","transferOwnership(address)":"f2fde38b"}},"irOptimized":"/*=====================================================*\n *                       WARNING                       *\n *  Solidity to Yul compilation is still EXPERIMENTAL  *\n *       It can result in LOSS OF FUNDS or worse       *\n *                !USE AT YOUR OWN RISK!               *\n *=====================================================*/\n\n/// @use-src 0:\"@openzeppelin/contracts/access/Ownable.sol\", 1:\"@openzeppelin/contracts/token/ERC20/ERC20.sol\", 2:\"@openzeppelin/contracts/token/ERC20/IERC20.sol\", 3:\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\", 7:\"@openzeppelin/contracts/utils/Context.sol\", 10:\"contracts/SobaToken.sol\"\nobject \"SobaToken_1961\" {\n    code {\n        {\n            /// @src 10:174:553  \"contract SobaToken is ERC20, Ownable {...\"\n            mstore(64, 128)\n            if callvalue() { revert(0, 0) }\n            let programSize := datasize(\"SobaToken_1961\")\n            let argSize := sub(codesize(), programSize)\n            let memoryDataOffset := allocate_memory(argSize)\n            codecopy(memoryDataOffset, programSize, argSize)\n            let _1 := add(memoryDataOffset, argSize)\n            if slt(sub(_1, memoryDataOffset), 64)\n            {\n                revert(/** @src -1:-1:-1 */ 0, 0)\n            }\n            /// @src 10:174:553  \"contract SobaToken is ERC20, Ownable {...\"\n            let offset := mload(memoryDataOffset)\n            let _2 := sub(shl(64, 1), 1)\n            if gt(offset, _2)\n            {\n                revert(/** @src -1:-1:-1 */ 0, 0)\n            }\n            /// @src 10:174:553  \"contract SobaToken is ERC20, Ownable {...\"\n            let value0 := abi_decode_string_fromMemory(add(memoryDataOffset, offset), _1)\n            let _3 := 32\n            let offset_1 := mload(add(memoryDataOffset, _3))\n            if gt(offset_1, _2)\n            {\n                revert(/** @src -1:-1:-1 */ 0, 0)\n            }\n            /// @src 10:174:553  \"contract SobaToken is ERC20, Ownable {...\"\n            let _4 := abi_decode_string_fromMemory(add(memoryDataOffset, offset_1), _1)\n            let newLen := mload(value0)\n            if gt(newLen, _2) { panic_error_0x41() }\n            clean_up_bytearray_end_slots_string_storage_1647(extract_byte_array_length(sload(/** @src 1:2046:2059  \"_name = name_\" */ 0x03)), /** @src 10:174:553  \"contract SobaToken is ERC20, Ownable {...\" */ newLen)\n            let srcOffset := 0\n            srcOffset := _3\n            switch gt(newLen, 31)\n            case 1 {\n                let loopEnd := and(newLen, not(31))\n                let dstPtr := array_dataslot_string_storage_1648()\n                let i := 0\n                for { } lt(i, loopEnd) { i := add(i, _3) }\n                {\n                    sstore(dstPtr, mload(add(value0, srcOffset)))\n                    dstPtr := add(dstPtr, 1)\n                    srcOffset := add(srcOffset, _3)\n                }\n                if lt(loopEnd, newLen)\n                {\n                    let lastValue := mload(add(value0, srcOffset))\n                    sstore(dstPtr, and(lastValue, not(shr(and(shl(/** @src 1:2046:2059  \"_name = name_\" */ 0x03, /** @src 10:174:553  \"contract SobaToken is ERC20, Ownable {...\" */ newLen), 248), not(0)))))\n                }\n                sstore(/** @src 1:2046:2059  \"_name = name_\" */ 0x03, /** @src 10:174:553  \"contract SobaToken is ERC20, Ownable {...\" */ add(shl(1, newLen), 1))\n            }\n            default {\n                let value := 0\n                if newLen\n                {\n                    value := mload(add(value0, srcOffset))\n                }\n                sstore(/** @src 1:2046:2059  \"_name = name_\" */ 0x03, /** @src 10:174:553  \"contract SobaToken is ERC20, Ownable {...\" */ extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n            }\n            copy_byte_array_to_storage_from_string_to_string(_4)\n            /// @src 0:955:967  \"_msgSender()\"\n            fun_transferOwnership(/** @src 7:719:729  \"msg.sender\" */ caller())\n            /// @src 10:301:344  \"_mint(msg.sender, 1_000_000_000 * 10 ** 18)\"\n            fun_mint(/** @src 7:719:729  \"msg.sender\" */ caller())\n            /// @src 10:174:553  \"contract SobaToken is ERC20, Ownable {...\"\n            let _5 := mload(64)\n            let _6 := datasize(\"SobaToken_1961_deployed\")\n            codecopy(_5, dataoffset(\"SobaToken_1961_deployed\"), _6)\n            return(_5, _6)\n        }\n        function panic_error_0x41()\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x41)\n            revert(0, 0x24)\n        }\n        function allocate_memory(size) -> memPtr\n        {\n            memPtr := mload(64)\n            let newFreePtr := add(memPtr, and(add(size, 31), not(31)))\n            if or(gt(newFreePtr, sub(shl(64, 1), 1)), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n            mstore(64, newFreePtr)\n        }\n        function abi_decode_string_fromMemory(offset, end) -> array\n        {\n            if iszero(slt(add(offset, 0x1f), end)) { revert(0, 0) }\n            let _1 := mload(offset)\n            if gt(_1, sub(shl(64, 1), 1)) { panic_error_0x41() }\n            let _2 := 0x20\n            let array_1 := allocate_memory(add(and(add(_1, 0x1f), not(31)), _2))\n            mstore(array_1, _1)\n            if gt(add(add(offset, _1), _2), end)\n            {\n                revert(/** @src -1:-1:-1 */ 0, 0)\n            }\n            /// @src 10:174:553  \"contract SobaToken is ERC20, Ownable {...\"\n            let i := /** @src -1:-1:-1 */ 0\n            /// @src 10:174:553  \"contract SobaToken is ERC20, Ownable {...\"\n            for { } lt(i, _1) { i := add(i, _2) }\n            {\n                mstore(add(add(array_1, i), _2), mload(add(add(offset, i), _2)))\n            }\n            if gt(i, _1)\n            {\n                mstore(add(add(array_1, _1), _2), /** @src -1:-1:-1 */ 0)\n            }\n            /// @src 10:174:553  \"contract SobaToken is ERC20, Ownable {...\"\n            array := array_1\n        }\n        function extract_byte_array_length(data) -> length\n        {\n            length := shr(1, data)\n            let outOfPlaceEncoding := and(data, 1)\n            if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n            if eq(outOfPlaceEncoding, lt(length, 32))\n            {\n                mstore(0, shl(224, 0x4e487b71))\n                mstore(4, 0x22)\n                revert(0, 0x24)\n            }\n        }\n        function array_dataslot_string_storage_1648() -> data\n        {\n            mstore(0, /** @src 1:2046:2059  \"_name = name_\" */ 0x03)\n            /// @src 10:174:553  \"contract SobaToken is ERC20, Ownable {...\"\n            data := keccak256(0, 0x20)\n        }\n        function array_dataslot_string_storage() -> data\n        {\n            mstore(0, /** @src 1:2069:2086  \"_symbol = symbol_\" */ 0x04)\n            /// @src 10:174:553  \"contract SobaToken is ERC20, Ownable {...\"\n            data := keccak256(0, 0x20)\n        }\n        function clean_up_bytearray_end_slots_string_storage_1647(len, startIndex)\n        {\n            if gt(len, 31)\n            {\n                /// @src -1:-1:-1\n                let _1 := 0\n                /// @src 10:174:553  \"contract SobaToken is ERC20, Ownable {...\"\n                mstore(/** @src -1:-1:-1 */ _1, /** @src 1:2046:2059  \"_name = name_\" */ 0x03)\n                /// @src 10:174:553  \"contract SobaToken is ERC20, Ownable {...\"\n                let data := keccak256(/** @src -1:-1:-1 */ _1, /** @src 10:174:553  \"contract SobaToken is ERC20, Ownable {...\" */ 0x20)\n                let deleteStart := add(data, shr(5, add(startIndex, 31)))\n                if lt(startIndex, 0x20) { deleteStart := data }\n                let _2 := add(data, shr(5, add(len, 31)))\n                let start := deleteStart\n                for { } lt(start, _2) { start := add(start, 1) }\n                {\n                    sstore(start, /** @src -1:-1:-1 */ _1)\n                }\n            }\n        }\n        /// @src 10:174:553  \"contract SobaToken is ERC20, Ownable {...\"\n        function clean_up_bytearray_end_slots_string_storage(len, startIndex)\n        {\n            if gt(len, 31)\n            {\n                /// @src -1:-1:-1\n                let _1 := 0\n                /// @src 10:174:553  \"contract SobaToken is ERC20, Ownable {...\"\n                mstore(/** @src -1:-1:-1 */ _1, /** @src 1:2069:2086  \"_symbol = symbol_\" */ 0x04)\n                /// @src 10:174:553  \"contract SobaToken is ERC20, Ownable {...\"\n                let data := keccak256(/** @src -1:-1:-1 */ _1, /** @src 10:174:553  \"contract SobaToken is ERC20, Ownable {...\" */ 0x20)\n                let deleteStart := add(data, shr(5, add(startIndex, 31)))\n                if lt(startIndex, 0x20) { deleteStart := data }\n                let _2 := add(data, shr(5, add(len, 31)))\n                let start := deleteStart\n                for { } lt(start, _2) { start := add(start, 1) }\n                {\n                    sstore(start, /** @src -1:-1:-1 */ _1)\n                }\n            }\n        }\n        /// @src 10:174:553  \"contract SobaToken is ERC20, Ownable {...\"\n        function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used\n        {\n            used := or(and(data, not(shr(shl(3, len), not(0)))), shl(1, len))\n        }\n        function copy_byte_array_to_storage_from_string_to_string(src)\n        {\n            let newLen := mload(src)\n            if gt(newLen, sub(shl(64, 1), 1)) { panic_error_0x41() }\n            clean_up_bytearray_end_slots_string_storage(extract_byte_array_length(sload(/** @src 1:2069:2086  \"_symbol = symbol_\" */ 0x04)), /** @src 10:174:553  \"contract SobaToken is ERC20, Ownable {...\" */ newLen)\n            let srcOffset := 0\n            let srcOffset_1 := 0x20\n            srcOffset := srcOffset_1\n            switch gt(newLen, 31)\n            case 1 {\n                let loopEnd := and(newLen, not(31))\n                let dstPtr := array_dataslot_string_storage()\n                let i := 0\n                for { } lt(i, loopEnd) { i := add(i, srcOffset_1) }\n                {\n                    sstore(dstPtr, mload(add(src, srcOffset)))\n                    dstPtr := add(dstPtr, 1)\n                    srcOffset := add(srcOffset, srcOffset_1)\n                }\n                if lt(loopEnd, newLen)\n                {\n                    let lastValue := mload(add(src, srcOffset))\n                    sstore(dstPtr, and(lastValue, not(shr(and(shl(3, newLen), 248), not(0)))))\n                }\n                sstore(/** @src 1:2069:2086  \"_symbol = symbol_\" */ 0x04, /** @src 10:174:553  \"contract SobaToken is ERC20, Ownable {...\" */ add(shl(1, newLen), 1))\n            }\n            default {\n                let value := 0\n                if newLen\n                {\n                    value := mload(add(src, srcOffset))\n                }\n                sstore(/** @src 1:2069:2086  \"_symbol = symbol_\" */ 0x04, /** @src 10:174:553  \"contract SobaToken is ERC20, Ownable {...\" */ extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n            }\n        }\n        /// @ast-id 111 @src 0:2426:2613  \"function _transferOwnership(address newOwner) internal virtual {...\"\n        function fun_transferOwnership(var_newOwner)\n        {\n            /// @src 10:174:553  \"contract SobaToken is ERC20, Ownable {...\"\n            let _1 := sload(/** @src 0:2518:2524  \"_owner\" */ 0x05)\n            /// @src 10:174:553  \"contract SobaToken is ERC20, Ownable {...\"\n            let _2 := sub(shl(160, 1), 1)\n            sstore(/** @src 0:2518:2524  \"_owner\" */ 0x05, /** @src 10:174:553  \"contract SobaToken is ERC20, Ownable {...\" */ or(and(_1, not(sub(shl(160, 1), 1))), and(var_newOwner, _2)))\n            /// @src 0:2566:2606  \"OwnershipTransferred(oldOwner, newOwner)\"\n            log3(/** @src 10:174:553  \"contract SobaToken is ERC20, Ownable {...\" */ mload(64), /** @src -1:-1:-1 */ 0, /** @src 0:2566:2606  \"OwnershipTransferred(oldOwner, newOwner)\" */ 0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0, /** @src 10:174:553  \"contract SobaToken is ERC20, Ownable {...\" */ and(_1, _2), /** @src 0:2566:2606  \"OwnershipTransferred(oldOwner, newOwner)\" */ var_newOwner)\n        }\n        /// @src 10:174:553  \"contract SobaToken is ERC20, Ownable {...\"\n        function update_storage_value_offsett_uint256_to_uint256(value)\n        {\n            sstore(/** @src 1:8731:8753  \"_totalSupply += amount\" */ 0x02, /** @src 10:174:553  \"contract SobaToken is ERC20, Ownable {...\" */ value)\n        }\n        function mapping_index_access_mapping_address_uint256_of_address(key) -> dataSlot\n        {\n            mstore(/** @src 1:8622:8623  \"0\" */ 0x00, /** @src 10:174:553  \"contract SobaToken is ERC20, Ownable {...\" */ and(key, sub(shl(160, 1), 1)))\n            mstore(0x20, /** @src 1:8622:8623  \"0\" */ 0x00)\n            /// @src 10:174:553  \"contract SobaToken is ERC20, Ownable {...\"\n            dataSlot := keccak256(/** @src 1:8622:8623  \"0\" */ 0x00, /** @src 10:174:553  \"contract SobaToken is ERC20, Ownable {...\" */ 0x40)\n        }\n        function abi_encode_uint256(headStart) -> tail\n        {\n            tail := add(headStart, 32)\n            mstore(headStart, /** @src 10:319:343  \"1_000_000_000 * 10 ** 18\" */ 0x033b2e3c9fd0803ce8000000)\n        }\n        /// @ast-id 516 @src 1:8520:9055  \"function _mint(address account, uint256 amount) internal virtual {...\"\n        function fun_mint(var_account)\n        {\n            /// @src 10:174:553  \"contract SobaToken is ERC20, Ownable {...\"\n            if /** @src 1:8603:8624  \"account != address(0)\" */ iszero(/** @src 10:174:553  \"contract SobaToken is ERC20, Ownable {...\" */ and(/** @src 1:8603:8624  \"account != address(0)\" */ var_account, /** @src 10:174:553  \"contract SobaToken is ERC20, Ownable {...\" */ sub(shl(160, 1), 1)))\n            {\n                let memPtr := mload(64)\n                mstore(memPtr, shl(229, 4594637))\n                mstore(add(memPtr, 4), 32)\n                mstore(add(memPtr, 36), 31)\n                mstore(add(memPtr, 68), \"ERC20: mint to the zero address\")\n                revert(memPtr, 100)\n            }\n            let _1 := sload(/** @src 1:8731:8753  \"_totalSupply += amount\" */ 0x02)\n            /// @src 10:174:553  \"contract SobaToken is ERC20, Ownable {...\"\n            if gt(_1, not(/** @src 10:319:343  \"1_000_000_000 * 10 ** 18\" */ 0x033b2e3c9fd0803ce8000000))\n            /// @src 10:174:553  \"contract SobaToken is ERC20, Ownable {...\"\n            {\n                mstore(/** @src 1:8622:8623  \"0\" */ 0x00, /** @src 10:174:553  \"contract SobaToken is ERC20, Ownable {...\" */ shl(224, 0x4e487b71))\n                mstore(4, 0x11)\n                revert(/** @src 1:8622:8623  \"0\" */ 0x00, /** @src 10:174:553  \"contract SobaToken is ERC20, Ownable {...\" */ 0x24)\n            }\n            /// @src 10:319:343  \"1_000_000_000 * 10 ** 18\"\n            let _2 := 0x033b2e3c9fd0803ce8000000\n            /// @src 1:8731:8753  \"_totalSupply += amount\"\n            update_storage_value_offsett_uint256_to_uint256(/** @src 10:174:553  \"contract SobaToken is ERC20, Ownable {...\" */ add(_1, /** @src 10:319:343  \"1_000_000_000 * 10 ** 18\" */ _2))\n            /// @src 1:8899:8917  \"_balances[account]\"\n            let _3 := mapping_index_access_mapping_address_uint256_of_address(var_account)\n            /// @src 10:174:553  \"contract SobaToken is ERC20, Ownable {...\"\n            sstore(_3, add(sload(/** @src 1:8899:8927  \"_balances[account] += amount\" */ _3), /** @src 10:319:343  \"1_000_000_000 * 10 ** 18\" */ _2))\n            /// @src 1:8952:8989  \"Transfer(address(0), account, amount)\"\n            let _4 := /** @src 10:174:553  \"contract SobaToken is ERC20, Ownable {...\" */ mload(64)\n            /// @src 1:8952:8989  \"Transfer(address(0), account, amount)\"\n            log3(_4, sub(abi_encode_uint256(_4), _4), 0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef, /** @src 1:8622:8623  \"0\" */ 0x00, /** @src 1:8952:8989  \"Transfer(address(0), account, amount)\" */ var_account)\n        }\n    }\n    /// @use-src 0:\"@openzeppelin/contracts/access/Ownable.sol\", 1:\"@openzeppelin/contracts/token/ERC20/ERC20.sol\", 7:\"@openzeppelin/contracts/utils/Context.sol\", 10:\"contracts/SobaToken.sol\"\n    object \"SobaToken_1961_deployed\" {\n        code {\n            {\n                /// @src 10:174:553  \"contract SobaToken is ERC20, Ownable {...\"\n                let _1 := 64\n                mstore(_1, 128)\n                if iszero(lt(calldatasize(), 4))\n                {\n                    let _2 := 0\n                    switch shr(224, calldataload(_2))\n                    case 0x06fdde03 {\n                        if callvalue() { revert(_2, _2) }\n                        abi_decode(calldatasize())\n                        let converted := copy_array_from_storage_to_memory_string_3575()\n                        let memPos := mload(_1)\n                        return(memPos, sub(abi_encode_string(memPos, converted), memPos))\n                    }\n                    case 0x095ea7b3 {\n                        if callvalue() { revert(_2, _2) }\n                        let param, param_1 := abi_decode_addresst_uint256(calldatasize())\n                        let ret := fun_approve(param, param_1)\n                        let memPos_1 := mload(_1)\n                        return(memPos_1, sub(abi_encode_bool(memPos_1, ret), memPos_1))\n                    }\n                    case 0x18160ddd {\n                        if callvalue() { revert(_2, _2) }\n                        abi_decode(calldatasize())\n                        let _3 := sload(/** @src 1:3342:3354  \"_totalSupply\" */ 0x02)\n                        /// @src 10:174:553  \"contract SobaToken is ERC20, Ownable {...\"\n                        let memPos_2 := mload(_1)\n                        return(memPos_2, sub(abi_encode_uint256(memPos_2, _3), memPos_2))\n                    }\n                    case 0x23b872dd {\n                        if callvalue() { revert(_2, _2) }\n                        let param_2, param_3, param_4 := abi_decode_addresst_addresst_uint256(calldatasize())\n                        let ret_1 := fun_transferFrom(param_2, param_3, param_4)\n                        let memPos_3 := mload(_1)\n                        return(memPos_3, sub(abi_encode_bool(memPos_3, ret_1), memPos_3))\n                    }\n                    case 0x313ce567 {\n                        if callvalue() { revert(_2, _2) }\n                        abi_decode(calldatasize())\n                        let memPos_4 := mload(_1)\n                        return(memPos_4, sub(abi_encode_uint8(memPos_4), memPos_4))\n                    }\n                    case 0x39509351 {\n                        if callvalue() { revert(_2, _2) }\n                        let param_5, param_6 := abi_decode_addresst_uint256(calldatasize())\n                        let ret_2 := fun_increaseAllowance(param_5, param_6)\n                        let memPos_5 := mload(_1)\n                        return(memPos_5, sub(abi_encode_bool(memPos_5, ret_2), memPos_5))\n                    }\n                    case 0x40c10f19 {\n                        if callvalue() { revert(_2, _2) }\n                        let param_7, param_8 := abi_decode_addresst_uint256(calldatasize())\n                        /// @src 10:357:454  \"function mint(address _to, uint256 _amount) public onlyOwner {...\"\n                        modifier_onlyOwner_1943(param_7, param_8)\n                        /// @src 10:174:553  \"contract SobaToken is ERC20, Ownable {...\"\n                        return(mload(_1), _2)\n                    }\n                    case 0x70a08231 {\n                        if callvalue() { revert(_2, _2) }\n                        let ret_3 := fun_balanceOf(abi_decode_address(calldatasize()))\n                        let memPos_6 := mload(_1)\n                        return(memPos_6, sub(abi_encode_uint256(memPos_6, ret_3), memPos_6))\n                    }\n                    case 0x715018a6 {\n                        if callvalue() { revert(_2, _2) }\n                        abi_decode(calldatasize())\n                        /// @src 0:1824:1925  \"function renounceOwnership() public virtual onlyOwner {...\"\n                        modifier_onlyOwner()\n                        /// @src 10:174:553  \"contract SobaToken is ERC20, Ownable {...\"\n                        return(mload(_1), _2)\n                    }\n                    case 0x8da5cb5b {\n                        if callvalue() { revert(_2, _2) }\n                        abi_decode(calldatasize())\n                        let ret_4 := and(sload(/** @src 0:1273:1279  \"_owner\" */ 0x05), /** @src 10:174:553  \"contract SobaToken is ERC20, Ownable {...\" */ sub(shl(160, 1), 1))\n                        let memPos_7 := mload(_1)\n                        return(memPos_7, sub(abi_encode_address(memPos_7, ret_4), memPos_7))\n                    }\n                    case 0x95d89b41 {\n                        if callvalue() { revert(_2, _2) }\n                        abi_decode(calldatasize())\n                        let converted_1 := copy_array_from_storage_to_memory_string()\n                        let memPos_8 := mload(_1)\n                        return(memPos_8, sub(abi_encode_string(memPos_8, converted_1), memPos_8))\n                    }\n                    case 0xa457c2d7 {\n                        if callvalue() { revert(_2, _2) }\n                        let param_9, param_10 := abi_decode_addresst_uint256(calldatasize())\n                        let ret_5 := fun_decreaseAllowance(param_9, param_10)\n                        let memPos_9 := mload(_1)\n                        return(memPos_9, sub(abi_encode_bool(memPos_9, ret_5), memPos_9))\n                    }\n                    case 0xa9059cbb {\n                        if callvalue() { revert(_2, _2) }\n                        let param_11, param_12 := abi_decode_addresst_uint256(calldatasize())\n                        let ret_6 := fun_transfer(param_11, param_12)\n                        let memPos_10 := mload(_1)\n                        return(memPos_10, sub(abi_encode_bool(memPos_10, ret_6), memPos_10))\n                    }\n                    case 0xdd62ed3e {\n                        if callvalue() { revert(_2, _2) }\n                        let param_13, param_14 := abi_decode_addresst_address(calldatasize())\n                        let _4 := sload(/** @src 1:4102:4129  \"_allowances[owner][spender]\" */ mapping_index_access_mapping_address_uint256_of_address(/** @src 1:4102:4120  \"_allowances[owner]\" */ mapping_index_access_mapping_address_uint256_of_address_3592(/** @src 10:174:553  \"contract SobaToken is ERC20, Ownable {...\" */ param_13), param_14))\n                        let memPos_11 := mload(_1)\n                        return(memPos_11, sub(abi_encode_uint256(memPos_11, _4), memPos_11))\n                    }\n                    case 0xf2fde38b {\n                        if callvalue() { revert(_2, _2) }\n                        /// @src 0:2074:2272  \"function transferOwnership(address newOwner) public virtual onlyOwner {...\"\n                        modifier_onlyOwner_74(/** @src 10:174:553  \"contract SobaToken is ERC20, Ownable {...\" */ abi_decode_address(calldatasize()))\n                        return(mload(_1), _2)\n                    }\n                }\n                revert(0, 0)\n            }\n            function abi_decode(dataEnd)\n            {\n                if slt(add(dataEnd, not(3)), 0) { revert(0, 0) }\n            }\n            function array_storeLengthForEncoding_string(pos, length) -> updated_pos\n            {\n                mstore(pos, length)\n                updated_pos := add(pos, 0x20)\n            }\n            function abi_encode_string(headStart, value0) -> tail\n            {\n                let _1 := 32\n                mstore(headStart, _1)\n                let length := mload(value0)\n                mstore(add(headStart, _1), length)\n                let i := 0\n                for { } lt(i, length) { i := add(i, _1) }\n                {\n                    mstore(add(add(headStart, i), 64), mload(add(add(value0, i), _1)))\n                }\n                if gt(i, length)\n                {\n                    mstore(add(add(headStart, length), 64), 0)\n                }\n                tail := add(add(headStart, and(add(length, 31), not(31))), 64)\n            }\n            function abi_decode_addresst_uint256(dataEnd) -> value0, value1\n            {\n                if slt(add(dataEnd, not(3)), 64) { revert(0, 0) }\n                let value := calldataload(4)\n                if iszero(eq(value, and(value, sub(shl(160, 1), 1))))\n                {\n                    revert(/** @src -1:-1:-1 */ 0, 0)\n                }\n                /// @src 10:174:553  \"contract SobaToken is ERC20, Ownable {...\"\n                value0 := value\n                value1 := calldataload(36)\n            }\n            function abi_encode_bool(headStart, value0) -> tail\n            {\n                tail := add(headStart, 32)\n                mstore(headStart, iszero(iszero(value0)))\n            }\n            function abi_encode_uint256(headStart, value0) -> tail\n            {\n                tail := add(headStart, 32)\n                mstore(headStart, value0)\n            }\n            function abi_decode_addresst_addresst_uint256(dataEnd) -> value0, value1, value2\n            {\n                if slt(add(dataEnd, not(3)), 96) { revert(0, 0) }\n                let value := calldataload(4)\n                let _1 := sub(shl(160, 1), 1)\n                if iszero(eq(value, and(value, _1)))\n                {\n                    revert(/** @src -1:-1:-1 */ 0, 0)\n                }\n                /// @src 10:174:553  \"contract SobaToken is ERC20, Ownable {...\"\n                value0 := value\n                let value_1 := calldataload(36)\n                if iszero(eq(value_1, and(value_1, _1)))\n                {\n                    revert(/** @src -1:-1:-1 */ 0, 0)\n                }\n                /// @src 10:174:553  \"contract SobaToken is ERC20, Ownable {...\"\n                value1 := value_1\n                value2 := calldataload(68)\n            }\n            function abi_encode_uint8(headStart) -> tail\n            {\n                tail := add(headStart, 32)\n                mstore(headStart, /** @src 10:542:544  \"18\" */ 0x12)\n            }\n            /// @src 10:174:553  \"contract SobaToken is ERC20, Ownable {...\"\n            function abi_decode_address(dataEnd) -> value0\n            {\n                if slt(add(dataEnd, not(3)), 32) { revert(0, 0) }\n                let value := calldataload(4)\n                if iszero(eq(value, and(value, sub(shl(160, 1), 1))))\n                {\n                    revert(/** @src -1:-1:-1 */ 0, 0)\n                }\n                /// @src 10:174:553  \"contract SobaToken is ERC20, Ownable {...\"\n                value0 := value\n            }\n            function abi_encode_address(headStart, value0) -> tail\n            {\n                tail := add(headStart, 32)\n                mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n            }\n            function abi_decode_addresst_address(dataEnd) -> value0, value1\n            {\n                if slt(add(dataEnd, not(3)), 64) { revert(0, 0) }\n                let value := calldataload(4)\n                let _1 := sub(shl(160, 1), 1)\n                if iszero(eq(value, and(value, _1)))\n                {\n                    revert(/** @src -1:-1:-1 */ 0, 0)\n                }\n                /// @src 10:174:553  \"contract SobaToken is ERC20, Ownable {...\"\n                value0 := value\n                let value_1 := calldataload(36)\n                if iszero(eq(value_1, and(value_1, _1)))\n                {\n                    revert(/** @src -1:-1:-1 */ 0, 0)\n                }\n                /// @src 10:174:553  \"contract SobaToken is ERC20, Ownable {...\"\n                value1 := value_1\n            }\n            /// @ast-id 31 @src 0:1063:1125  \"modifier onlyOwner() {...\"\n            function modifier_onlyOwner()\n            {\n                fun_checkOwner()\n                /// @src 10:174:553  \"contract SobaToken is ERC20, Ownable {...\"\n                let _1 := sload(/** @src 0:2518:2524  \"_owner\" */ 0x05)\n                /// @src 10:174:553  \"contract SobaToken is ERC20, Ownable {...\"\n                sstore(/** @src 0:2518:2524  \"_owner\" */ 0x05, /** @src 10:174:553  \"contract SobaToken is ERC20, Ownable {...\" */ and(_1, shl(160, 0xffffffffffffffffffffffff)))\n                /// @src 0:2566:2606  \"OwnershipTransferred(oldOwner, newOwner)\"\n                log3(/** @src 10:174:553  \"contract SobaToken is ERC20, Ownable {...\" */ mload(64), 0, /** @src 0:2566:2606  \"OwnershipTransferred(oldOwner, newOwner)\" */ 0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0, /** @src 10:174:553  \"contract SobaToken is ERC20, Ownable {...\" */ and(_1, sub(shl(160, 1), 1)), 0)\n            }\n            /// @ast-id 54 @src 0:1359:1489  \"function _checkOwner() internal view virtual {...\"\n            function fun_checkOwner()\n            {\n                /// @src 10:174:553  \"contract SobaToken is ERC20, Ownable {...\"\n                let value := and(sload(/** @src 0:1273:1279  \"_owner\" */ 0x05), /** @src 10:174:553  \"contract SobaToken is ERC20, Ownable {...\" */ sub(shl(160, 1), 1))\n                if iszero(/** @src 0:1422:1445  \"owner() == _msgSender()\" */ eq(/** @src 10:174:553  \"contract SobaToken is ERC20, Ownable {...\" */ value, /** @src 7:719:729  \"msg.sender\" */ caller()))\n                /// @src 10:174:553  \"contract SobaToken is ERC20, Ownable {...\"\n                {\n                    let memPtr := mload(64)\n                    mstore(memPtr, shl(229, 4594637))\n                    mstore(add(memPtr, 4), 32)\n                    mstore(add(memPtr, 36), 32)\n                    mstore(add(memPtr, 68), \"Ownable: caller is not the owner\")\n                    revert(memPtr, 100)\n                }\n            }\n            /// @ast-id 31 @src 0:1063:1125  \"modifier onlyOwner() {...\"\n            function modifier_onlyOwner_74(var_newOwner)\n            {\n                fun_checkOwner()\n                /// @src 10:174:553  \"contract SobaToken is ERC20, Ownable {...\"\n                let _1 := sub(shl(160, 1), 1)\n                let _2 := and(/** @src 0:2162:2184  \"newOwner != address(0)\" */ var_newOwner, /** @src 10:174:553  \"contract SobaToken is ERC20, Ownable {...\" */ _1)\n                if /** @src 0:2162:2184  \"newOwner != address(0)\" */ iszero(/** @src 10:174:553  \"contract SobaToken is ERC20, Ownable {...\" */ _2)\n                {\n                    let memPtr := mload(64)\n                    mstore(memPtr, shl(229, 4594637))\n                    mstore(add(memPtr, 4), 32)\n                    mstore(add(memPtr, 36), 38)\n                    mstore(add(memPtr, 68), \"Ownable: new owner is the zero a\")\n                    mstore(add(memPtr, 100), \"ddress\")\n                    revert(memPtr, 132)\n                }\n                let _3 := sload(/** @src 0:2518:2524  \"_owner\" */ 0x05)\n                /// @src 10:174:553  \"contract SobaToken is ERC20, Ownable {...\"\n                sstore(/** @src 0:2518:2524  \"_owner\" */ 0x05, /** @src 10:174:553  \"contract SobaToken is ERC20, Ownable {...\" */ or(and(_3, shl(160, 0xffffffffffffffffffffffff)), _2))\n                /// @src 0:2566:2606  \"OwnershipTransferred(oldOwner, newOwner)\"\n                log3(/** @src 10:174:553  \"contract SobaToken is ERC20, Ownable {...\" */ mload(64), /** @src -1:-1:-1 */ 0, /** @src 0:2566:2606  \"OwnershipTransferred(oldOwner, newOwner)\" */ 0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0, /** @src 10:174:553  \"contract SobaToken is ERC20, Ownable {...\" */ and(_3, _1), /** @src 0:2566:2606  \"OwnershipTransferred(oldOwner, newOwner)\" */ var_newOwner)\n            }\n            /// @src 10:174:553  \"contract SobaToken is ERC20, Ownable {...\"\n            function array_dataslot_string_storage_5637() -> data\n            {\n                mstore(0, /** @src 1:2244:2249  \"_name\" */ 0x03)\n                /// @src 10:174:553  \"contract SobaToken is ERC20, Ownable {...\"\n                data := 87903029871075914254377627908054574944891091886930582284385770809450030037083\n            }\n            function array_dataslot_string_storage() -> data\n            {\n                mstore(0, 4)\n                data := 62514009886607029107290561805838585334079798074568712924583230797734656856475\n            }\n            function finalize_allocation(memPtr, size)\n            {\n                let newFreePtr := add(memPtr, and(add(size, 31), not(31)))\n                if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr))\n                {\n                    mstore(0, shl(224, 0x4e487b71))\n                    mstore(4, 0x41)\n                    revert(0, 0x24)\n                }\n                mstore(64, newFreePtr)\n            }\n            function copy_array_from_storage_to_memory_string_3575() -> memPtr\n            {\n                memPtr := mload(64)\n                let ret := /** @src -1:-1:-1 */ 0\n                /// @src 10:174:553  \"contract SobaToken is ERC20, Ownable {...\"\n                let slotValue := sload(/** @src 1:2244:2249  \"_name\" */ 0x03)\n                /// @src 10:174:553  \"contract SobaToken is ERC20, Ownable {...\"\n                let length := /** @src -1:-1:-1 */ ret\n                /// @src 10:174:553  \"contract SobaToken is ERC20, Ownable {...\"\n                let _1 := 1\n                length := shr(_1, slotValue)\n                let outOfPlaceEncoding := and(slotValue, _1)\n                if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n                let _2 := 32\n                if eq(outOfPlaceEncoding, lt(length, _2))\n                {\n                    mstore(/** @src -1:-1:-1 */ ret, /** @src 10:174:553  \"contract SobaToken is ERC20, Ownable {...\" */ shl(224, 0x4e487b71))\n                    mstore(4, 0x22)\n                    revert(/** @src -1:-1:-1 */ ret, /** @src 10:174:553  \"contract SobaToken is ERC20, Ownable {...\" */ 0x24)\n                }\n                let pos := array_storeLengthForEncoding_string(memPtr, length)\n                switch outOfPlaceEncoding\n                case 0 {\n                    mstore(pos, and(slotValue, not(255)))\n                    ret := add(pos, _2)\n                }\n                case 1 {\n                    let dataPos := array_dataslot_string_storage_5637()\n                    let i := /** @src -1:-1:-1 */ 0\n                    /// @src 10:174:553  \"contract SobaToken is ERC20, Ownable {...\"\n                    for { } lt(i, length) { i := add(i, _2) }\n                    {\n                        mstore(add(pos, i), sload(dataPos))\n                        dataPos := add(dataPos, _1)\n                    }\n                    ret := add(pos, i)\n                }\n                finalize_allocation(memPtr, sub(ret, memPtr))\n            }\n            function copy_array_from_storage_to_memory_string() -> memPtr\n            {\n                memPtr := mload(64)\n                let ret := /** @src -1:-1:-1 */ 0\n                /// @src 10:174:553  \"contract SobaToken is ERC20, Ownable {...\"\n                let slotValue := sload(4)\n                let length := /** @src -1:-1:-1 */ ret\n                /// @src 10:174:553  \"contract SobaToken is ERC20, Ownable {...\"\n                let _1 := 1\n                length := shr(_1, slotValue)\n                let outOfPlaceEncoding := and(slotValue, _1)\n                if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n                let _2 := 32\n                if eq(outOfPlaceEncoding, lt(length, _2))\n                {\n                    mstore(/** @src -1:-1:-1 */ ret, /** @src 10:174:553  \"contract SobaToken is ERC20, Ownable {...\" */ shl(224, 0x4e487b71))\n                    mstore(4, 0x22)\n                    revert(/** @src -1:-1:-1 */ ret, /** @src 10:174:553  \"contract SobaToken is ERC20, Ownable {...\" */ 0x24)\n                }\n                let pos := array_storeLengthForEncoding_string(memPtr, length)\n                switch outOfPlaceEncoding\n                case 0 {\n                    mstore(pos, and(slotValue, not(255)))\n                    ret := add(pos, _2)\n                }\n                case 1 {\n                    let dataPos := array_dataslot_string_storage()\n                    let i := /** @src -1:-1:-1 */ 0\n                    /// @src 10:174:553  \"contract SobaToken is ERC20, Ownable {...\"\n                    for { } lt(i, length) { i := add(i, _2) }\n                    {\n                        mstore(add(pos, i), sload(dataPos))\n                        dataPos := add(dataPos, _1)\n                    }\n                    ret := add(pos, i)\n                }\n                finalize_allocation(memPtr, sub(ret, memPtr))\n            }\n            function mapping_index_access_mapping_address_uint256_of_address_3592(key) -> dataSlot\n            {\n                mstore(0, and(key, sub(shl(160, 1), 1)))\n                mstore(0x20, /** @src 1:4102:4113  \"_allowances\" */ 0x01)\n                /// @src 10:174:553  \"contract SobaToken is ERC20, Ownable {...\"\n                dataSlot := keccak256(0, 0x40)\n            }\n            function mapping_index_access_mapping_address_uint256_of_address_3597(key) -> dataSlot\n            {\n                mstore(/** @src 1:7568:7569  \"0\" */ 0x00, /** @src 10:174:553  \"contract SobaToken is ERC20, Ownable {...\" */ and(key, sub(shl(160, 1), 1)))\n                mstore(0x20, /** @src 1:7568:7569  \"0\" */ 0x00)\n                /// @src 10:174:553  \"contract SobaToken is ERC20, Ownable {...\"\n                dataSlot := keccak256(/** @src 1:7568:7569  \"0\" */ 0x00, /** @src 10:174:553  \"contract SobaToken is ERC20, Ownable {...\" */ 0x40)\n            }\n            function mapping_index_access_mapping_address_uint256_of_address(slot, key) -> dataSlot\n            {\n                mstore(0, and(key, sub(shl(160, 1), 1)))\n                mstore(0x20, slot)\n                dataSlot := keccak256(0, 0x40)\n            }\n            /// @ast-id 211 @src 1:3419:3544  \"function balanceOf(address account) public view virtual override returns (uint256) {...\"\n            function fun_balanceOf(var_account) -> var\n            {\n                /// @src 10:174:553  \"contract SobaToken is ERC20, Ownable {...\"\n                mstore(/** @src 1:3519:3528  \"_balances\" */ 0x00, /** @src 10:174:553  \"contract SobaToken is ERC20, Ownable {...\" */ and(var_account, sub(shl(160, 1), 1)))\n                mstore(0x20, /** @src 1:3519:3528  \"_balances\" */ 0x00)\n                /// @src 1:3512:3537  \"return _balances[account]\"\n                var := /** @src 10:174:553  \"contract SobaToken is ERC20, Ownable {...\" */ sload(keccak256(/** @src 1:3519:3528  \"_balances\" */ 0x00, /** @src 10:174:553  \"contract SobaToken is ERC20, Ownable {...\" */ 0x40))\n            }\n            /// @ast-id 236 @src 1:3740:3929  \"function transfer(address to, uint256 amount) public virtual override returns (bool) {...\"\n            function fun_transfer(var_to, var_amount) -> var\n            {\n                /// @src 1:3894:3900  \"amount\"\n                fun__transfer(/** @src 7:719:729  \"msg.sender\" */ caller(), /** @src 1:3894:3900  \"amount\" */ var_to, var_amount)\n                /// @src 1:3911:3922  \"return true\"\n                var := /** @src 1:3918:3922  \"true\" */ 0x01\n            }\n            /// @ast-id 279 @src 1:4444:4641  \"function approve(address spender, uint256 amount) public virtual override returns (bool) {...\"\n            function fun_approve(var_spender, var_amount) -> var\n            {\n                /// @src 1:4606:4612  \"amount\"\n                fun__approve(/** @src 7:719:729  \"msg.sender\" */ caller(), /** @src 1:4606:4612  \"amount\" */ var_spender, var_amount)\n                /// @src 1:4623:4634  \"return true\"\n                var := /** @src 1:4630:4634  \"true\" */ 0x01\n            }\n            /// @ast-id 312 @src 1:5203:5459  \"function transferFrom(address from, address to, uint256 amount) public virtual override returns (bool) {...\"\n            function fun_transferFrom(var_from, var_to, var_amount) -> var\n            {\n                /// @src 10:174:553  \"contract SobaToken is ERC20, Ownable {...\"\n                mstore(/** @src -1:-1:-1 */ 0, /** @src 10:174:553  \"contract SobaToken is ERC20, Ownable {...\" */ and(var_from, sub(shl(160, 1), 1)))\n                mstore(0x20, /** @src 1:4102:4113  \"_allowances\" */ 0x01)\n                /// @src 10:174:553  \"contract SobaToken is ERC20, Ownable {...\"\n                let _1 := sload(/** @src 1:4102:4129  \"_allowances[owner][spender]\" */ mapping_index_access_mapping_address_uint256_of_address(/** @src 10:174:553  \"contract SobaToken is ERC20, Ownable {...\" */ keccak256(/** @src -1:-1:-1 */ 0, /** @src 10:174:553  \"contract SobaToken is ERC20, Ownable {...\" */ 0x40), /** @src 7:719:729  \"msg.sender\" */ caller()))\n                /// @src 1:11240:11483  \"if (currentAllowance != type(uint256).max) {...\"\n                if /** @src 1:11244:11281  \"currentAllowance != type(uint256).max\" */ iszero(eq(_1, /** @src 1:11264:11281  \"type(uint256).max\" */ not(0)))\n                /// @src 1:11240:11483  \"if (currentAllowance != type(uint256).max) {...\"\n                {\n                    /// @src 10:174:553  \"contract SobaToken is ERC20, Ownable {...\"\n                    if /** @src 1:11305:11331  \"currentAllowance >= amount\" */ lt(_1, var_amount)\n                    /// @src 10:174:553  \"contract SobaToken is ERC20, Ownable {...\"\n                    {\n                        let memPtr := mload(0x40)\n                        mstore(memPtr, shl(229, 4594637))\n                        mstore(add(memPtr, 4), 0x20)\n                        mstore(add(memPtr, 36), 29)\n                        mstore(add(memPtr, 68), \"ERC20: insufficient allowance\")\n                        revert(memPtr, 100)\n                    }\n                    /// @src 1:11432:11457  \"currentAllowance - amount\"\n                    fun__approve(var_from, /** @src 7:719:729  \"msg.sender\" */ caller(), /** @src 10:174:553  \"contract SobaToken is ERC20, Ownable {...\" */ sub(/** @src 1:11432:11457  \"currentAllowance - amount\" */ _1, var_amount))\n                }\n                /// @src 1:5424:5430  \"amount\"\n                fun__transfer(var_from, var_to, var_amount)\n                /// @src 1:5441:5452  \"return true\"\n                var := /** @src 1:4102:4113  \"_allowances\" */ 0x01\n            }\n            /// @src 10:174:553  \"contract SobaToken is ERC20, Ownable {...\"\n            function checked_add_uint256(x, y) -> sum\n            {\n                if gt(x, not(y))\n                {\n                    mstore(0, shl(224, 0x4e487b71))\n                    mstore(4, 0x11)\n                    revert(0, 0x24)\n                }\n                sum := add(x, y)\n            }\n            /// @ast-id 341 @src 1:5854:6088  \"function increaseAllowance(address spender, uint256 addedValue) public virtual returns (bool) {...\"\n            function fun_increaseAllowance(var_spender, var_addedValue) -> var\n            {\n                /// @src 10:174:553  \"contract SobaToken is ERC20, Ownable {...\"\n                mstore(/** @src -1:-1:-1 */ 0, /** @src 7:719:729  \"msg.sender\" */ caller())\n                /// @src 10:174:553  \"contract SobaToken is ERC20, Ownable {...\"\n                mstore(0x20, /** @src 1:4102:4113  \"_allowances\" */ 0x01)\n                /// @src 1:6021:6059  \"allowance(owner, spender) + addedValue\"\n                fun__approve(/** @src 7:719:729  \"msg.sender\" */ caller(), /** @src 1:6021:6059  \"allowance(owner, spender) + addedValue\" */ var_spender, checked_add_uint256(/** @src 10:174:553  \"contract SobaToken is ERC20, Ownable {...\" */ sload(/** @src 1:4102:4129  \"_allowances[owner][spender]\" */ mapping_index_access_mapping_address_uint256_of_address(/** @src 10:174:553  \"contract SobaToken is ERC20, Ownable {...\" */ keccak256(/** @src -1:-1:-1 */ 0, /** @src 10:174:553  \"contract SobaToken is ERC20, Ownable {...\" */ 0x40), /** @src 1:6021:6046  \"allowance(owner, spender)\" */ var_spender)), /** @src 1:6021:6059  \"allowance(owner, spender) + addedValue\" */ var_addedValue))\n                /// @src 1:6070:6081  \"return true\"\n                var := /** @src 1:4102:4113  \"_allowances\" */ 0x01\n            }\n            /// @ast-id 382 @src 1:6575:7002  \"function decreaseAllowance(address spender, uint256 subtractedValue) public virtual returns (bool) {...\"\n            function fun_decreaseAllowance(var_spender, var_subtractedValue) -> var\n            {\n                /// @src 10:174:553  \"contract SobaToken is ERC20, Ownable {...\"\n                mstore(/** @src -1:-1:-1 */ 0, /** @src 7:719:729  \"msg.sender\" */ caller())\n                /// @src 10:174:553  \"contract SobaToken is ERC20, Ownable {...\"\n                mstore(0x20, /** @src 1:4102:4113  \"_allowances\" */ 0x01)\n                /// @src 10:174:553  \"contract SobaToken is ERC20, Ownable {...\"\n                let _1 := sload(/** @src 1:4102:4129  \"_allowances[owner][spender]\" */ mapping_index_access_mapping_address_uint256_of_address(/** @src 10:174:553  \"contract SobaToken is ERC20, Ownable {...\" */ keccak256(/** @src -1:-1:-1 */ 0, /** @src 10:174:553  \"contract SobaToken is ERC20, Ownable {...\" */ 0x40), /** @src 1:6749:6774  \"allowance(owner, spender)\" */ var_spender))\n                /// @src 10:174:553  \"contract SobaToken is ERC20, Ownable {...\"\n                if /** @src 1:6792:6827  \"currentAllowance >= subtractedValue\" */ lt(_1, var_subtractedValue)\n                /// @src 10:174:553  \"contract SobaToken is ERC20, Ownable {...\"\n                {\n                    let memPtr := mload(0x40)\n                    mstore(memPtr, shl(229, 4594637))\n                    mstore(add(memPtr, 4), 0x20)\n                    mstore(add(memPtr, 36), 37)\n                    mstore(add(memPtr, 68), \"ERC20: decreased allowance below\")\n                    mstore(add(memPtr, 100), \" zero\")\n                    revert(memPtr, 132)\n                }\n                /// @src 1:6928:6962  \"currentAllowance - subtractedValue\"\n                fun__approve(/** @src 7:719:729  \"msg.sender\" */ caller(), /** @src 1:6928:6962  \"currentAllowance - subtractedValue\" */ var_spender, /** @src 10:174:553  \"contract SobaToken is ERC20, Ownable {...\" */ sub(/** @src 1:6928:6962  \"currentAllowance - subtractedValue\" */ _1, var_subtractedValue))\n                /// @src 1:6984:6995  \"return true\"\n                var := /** @src 1:4102:4113  \"_allowances\" */ 0x01\n            }\n            /// @src 10:174:553  \"contract SobaToken is ERC20, Ownable {...\"\n            function require_helper_stringliteral(condition)\n            {\n                if iszero(condition)\n                {\n                    let memPtr := mload(64)\n                    mstore(memPtr, shl(229, 4594637))\n                    mstore(add(memPtr, 4), 32)\n                    mstore(add(memPtr, 36), 35)\n                    mstore(add(memPtr, 68), \"ERC20: transfer to the zero addr\")\n                    mstore(add(memPtr, 100), \"ess\")\n                    revert(memPtr, 132)\n                }\n            }\n            function require_helper_stringliteral_4107(condition)\n            {\n                if iszero(condition)\n                {\n                    let memPtr := mload(64)\n                    mstore(memPtr, shl(229, 4594637))\n                    mstore(add(memPtr, 4), 32)\n                    mstore(add(memPtr, 36), 38)\n                    mstore(add(memPtr, 68), \"ERC20: transfer amount exceeds b\")\n                    mstore(add(memPtr, 100), \"alance\")\n                    revert(memPtr, 132)\n                }\n            }\n            /// @ast-id 459 @src 1:7456:8244  \"function _transfer(address from, address to, uint256 amount) internal virtual {...\"\n            function fun__transfer(var_from, var_to, var_amount)\n            {\n                /// @src 10:174:553  \"contract SobaToken is ERC20, Ownable {...\"\n                let _1 := sub(shl(160, 1), 1)\n                if /** @src 1:7552:7570  \"from != address(0)\" */ iszero(/** @src 10:174:553  \"contract SobaToken is ERC20, Ownable {...\" */ and(/** @src 1:7552:7570  \"from != address(0)\" */ var_from, /** @src 10:174:553  \"contract SobaToken is ERC20, Ownable {...\" */ _1))\n                {\n                    let memPtr := mload(64)\n                    mstore(memPtr, shl(229, 4594637))\n                    mstore(add(memPtr, 4), 32)\n                    mstore(add(memPtr, 36), 37)\n                    mstore(add(memPtr, 68), \"ERC20: transfer from the zero ad\")\n                    mstore(add(memPtr, 100), \"dress\")\n                    revert(memPtr, 132)\n                }\n                /// @src 1:7622:7686  \"require(to != address(0), \\\"ERC20: transfer to the zero address\\\")\"\n                require_helper_stringliteral(/** @src 1:7630:7646  \"to != address(0)\" */ iszero(iszero(/** @src 10:174:553  \"contract SobaToken is ERC20, Ownable {...\" */ and(/** @src 1:7630:7646  \"to != address(0)\" */ var_to, /** @src 10:174:553  \"contract SobaToken is ERC20, Ownable {...\" */ _1))))\n                let _2 := sload(/** @src 1:7768:7783  \"_balances[from]\" */ mapping_index_access_mapping_address_uint256_of_address_3597(var_from))\n                /// @src 1:7793:7865  \"require(fromBalance >= amount, \\\"ERC20: transfer amount exceeds balance\\\")\"\n                require_helper_stringliteral_4107(/** @src 1:7801:7822  \"fromBalance >= amount\" */ iszero(lt(_2, var_amount)))\n                /// @src 10:174:553  \"contract SobaToken is ERC20, Ownable {...\"\n                sstore(/** @src 1:7899:7914  \"_balances[from]\" */ mapping_index_access_mapping_address_uint256_of_address_3597(var_from), /** @src 10:174:553  \"contract SobaToken is ERC20, Ownable {...\" */ sub(/** @src 1:7917:7937  \"fromBalance - amount\" */ _2, var_amount))\n                /// @src 1:8114:8127  \"_balances[to]\"\n                let _3 := mapping_index_access_mapping_address_uint256_of_address_3597(var_to)\n                /// @src 10:174:553  \"contract SobaToken is ERC20, Ownable {...\"\n                sstore(_3, add(sload(/** @src 1:8114:8137  \"_balances[to] += amount\" */ _3), /** @src 10:174:553  \"contract SobaToken is ERC20, Ownable {...\" */ var_amount))\n                /// @src 1:8163:8189  \"Transfer(from, to, amount)\"\n                let _4 := /** @src 10:174:553  \"contract SobaToken is ERC20, Ownable {...\" */ mload(64)\n                /// @src 1:8163:8189  \"Transfer(from, to, amount)\"\n                log3(_4, sub(abi_encode_uint256(_4, var_amount), _4), 0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef, var_from, var_to)\n            }\n            /// @ast-id 633 @src 1:10457:10797  \"function _approve(address owner, address spender, uint256 amount) internal virtual {...\"\n            function fun__approve(var_owner, var_spender, var_amount)\n            {\n                /// @src 10:174:553  \"contract SobaToken is ERC20, Ownable {...\"\n                let _1 := sub(shl(160, 1), 1)\n                if /** @src 1:10558:10577  \"owner != address(0)\" */ iszero(/** @src 10:174:553  \"contract SobaToken is ERC20, Ownable {...\" */ and(/** @src 1:10558:10577  \"owner != address(0)\" */ var_owner, /** @src 10:174:553  \"contract SobaToken is ERC20, Ownable {...\" */ _1))\n                {\n                    let memPtr := mload(64)\n                    mstore(memPtr, shl(229, 4594637))\n                    mstore(add(memPtr, 4), 32)\n                    mstore(add(memPtr, 36), 36)\n                    mstore(add(memPtr, 68), \"ERC20: approve from the zero add\")\n                    mstore(add(memPtr, 100), \"ress\")\n                    revert(memPtr, 132)\n                }\n                if /** @src 1:10636:10657  \"spender != address(0)\" */ iszero(/** @src 10:174:553  \"contract SobaToken is ERC20, Ownable {...\" */ and(/** @src 1:10636:10657  \"spender != address(0)\" */ var_spender, /** @src 10:174:553  \"contract SobaToken is ERC20, Ownable {...\" */ _1))\n                {\n                    let memPtr_1 := mload(64)\n                    mstore(memPtr_1, shl(229, 4594637))\n                    mstore(add(memPtr_1, 4), 32)\n                    mstore(add(memPtr_1, 36), 34)\n                    mstore(add(memPtr_1, 68), \"ERC20: approve to the zero addre\")\n                    mstore(add(memPtr_1, 100), \"ss\")\n                    revert(memPtr_1, 132)\n                }\n                sstore(/** @src 1:10707:10734  \"_allowances[owner][spender]\" */ mapping_index_access_mapping_address_uint256_of_address(/** @src 1:10707:10725  \"_allowances[owner]\" */ mapping_index_access_mapping_address_uint256_of_address_3592(var_owner), /** @src 1:10707:10734  \"_allowances[owner][spender]\" */ var_spender), /** @src 10:174:553  \"contract SobaToken is ERC20, Ownable {...\" */ var_amount)\n                /// @src 1:10758:10790  \"Approval(owner, spender, amount)\"\n                let _2 := /** @src 10:174:553  \"contract SobaToken is ERC20, Ownable {...\" */ mload(64)\n                /// @src 1:10758:10790  \"Approval(owner, spender, amount)\"\n                log3(_2, sub(abi_encode_uint256(_2, var_amount), _2), 0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925, var_owner, var_spender)\n            }\n            /// @ast-id 31 @src 0:1063:1125  \"modifier onlyOwner() {...\"\n            function modifier_onlyOwner_1943(var__to, var_amount)\n            {\n                fun_checkOwner()\n                /// @src 10:174:553  \"contract SobaToken is ERC20, Ownable {...\"\n                if /** @src 1:8603:8624  \"account != address(0)\" */ iszero(/** @src 10:174:553  \"contract SobaToken is ERC20, Ownable {...\" */ and(/** @src 1:8603:8624  \"account != address(0)\" */ var__to, /** @src 10:174:553  \"contract SobaToken is ERC20, Ownable {...\" */ sub(shl(160, 1), 1)))\n                {\n                    let memPtr := mload(64)\n                    mstore(memPtr, shl(229, 4594637))\n                    mstore(add(memPtr, 4), 32)\n                    mstore(add(memPtr, 36), 31)\n                    mstore(add(memPtr, 68), \"ERC20: mint to the zero address\")\n                    revert(memPtr, 100)\n                }\n                sstore(/** @src 1:8731:8753  \"_totalSupply += amount\" */ 0x02, checked_add_uint256(/** @src 10:174:553  \"contract SobaToken is ERC20, Ownable {...\" */ sload(/** @src 1:8731:8753  \"_totalSupply += amount\" */ 0x02), var_amount))\n                /// @src 1:8899:8917  \"_balances[account]\"\n                let _1 := mapping_index_access_mapping_address_uint256_of_address_3597(var__to)\n                /// @src 10:174:553  \"contract SobaToken is ERC20, Ownable {...\"\n                sstore(_1, add(sload(/** @src 1:8899:8927  \"_balances[account] += amount\" */ _1), /** @src 10:174:553  \"contract SobaToken is ERC20, Ownable {...\" */ var_amount))\n                /// @src 1:8952:8989  \"Transfer(address(0), account, amount)\"\n                let _2 := /** @src 10:174:553  \"contract SobaToken is ERC20, Ownable {...\" */ mload(64)\n                mstore(_2, var_amount)\n                /// @src 1:8952:8989  \"Transfer(address(0), account, amount)\"\n                log3(_2, /** @src 10:174:553  \"contract SobaToken is ERC20, Ownable {...\" */ 32, /** @src 1:8952:8989  \"Transfer(address(0), account, amount)\" */ 0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef, /** @src 1:8622:8623  \"0\" */ 0x00, /** @src 1:8952:8989  \"Transfer(address(0), account, amount)\" */ var__to)\n            }\n        }\n        data \".metadata\" hex\"a364697066735822122030cf2c70464520174afe138701acc71375aab097959fdac32cdfbb1287e0de5f6c6578706572696d656e74616cf564736f6c63430008090041\"\n    }\n}\n","hash":"0100027f24630ac53cc76cd10900ba4f149c79ae7d643dc73797aa7f8d050559","factoryDependencies":{}}},"contracts/YieldFarm.sol":{"YieldFarm":{"abi":[{"inputs":[{"internalType":"contract SobaToken","name":"_sobaja","type":"address"},{"internalType":"address","name":"_devaddr","type":"address"},{"internalType":"uint256","name":"_sobaPerBlock","type":"uint256"},{"internalType":"uint256","name":"_startBlock","type":"uint256"}],"stateMutability":"nonpayable","type":"constructor"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"user","type":"address"},{"indexed":true,"internalType":"uint256","name":"poolId","type":"uint256"},{"indexed":true,"internalType":"uint256","name":"amount","type":"uint256"}],"name":"Deposit","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"user","type":"address"},{"indexed":true,"internalType":"uint256","name":"poolId","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"amount","type":"uint256"}],"name":"EmergencyWithdraw","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"user","type":"address"},{"indexed":true,"internalType":"uint256","name":"poolId","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"amount","type":"uint256"}],"name":"Withdraw","type":"event"},{"inputs":[],"name":"BONUS_MULTIPLIER","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"_allocPoint","type":"uint256"},{"internalType":"contract IERC20","name":"_lpToken","type":"address"},{"internalType":"bool","name":"_withUpdate","type":"bool"}],"name":"add","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"block","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"_poolId","type":"uint256"},{"internalType":"uint256","name":"_amount","type":"uint256"}],"name":"deposit","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"_devaddr","type":"address"}],"name":"dev","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"devAddress","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"_poolId","type":"uint256"}],"name":"emergencyWithdraw","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"_from","type":"uint256"},{"internalType":"uint256","name":"_to","type":"uint256"}],"name":"getMultiplier","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"_amount","type":"uint256"}],"name":"leaveStaking","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"massUpdatePools","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"_poolId","type":"uint256"},{"internalType":"address","name":"_user","type":"address"}],"name":"pendingSoba","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"","type":"uint256"}],"name":"poolInfo","outputs":[{"internalType":"contract IERC20","name":"lpToken","type":"address"},{"internalType":"uint256","name":"allocPoint","type":"uint256"},{"internalType":"uint256","name":"lastRewardBlock","type":"uint256"},{"internalType":"uint256","name":"accSobaPerShare","type":"uint256"},{"internalType":"uint256","name":"totalStaked","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"poolLength","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"renounceOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"_poolId","type":"uint256"},{"internalType":"uint256","name":"_allocPoint","type":"uint256"},{"internalType":"bool","name":"_withUpdate","type":"bool"}],"name":"set","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"sobaPerBlock","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"sobaja","outputs":[{"internalType":"contract SobaToken","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"_amount","type":"uint256"}],"name":"staking","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"startBlock","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalAllocPoint","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"newOwner","type":"address"}],"name":"transferOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"multiplierNumber","type":"uint256"}],"name":"updateMultiplier","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"_poolId","type":"uint256"}],"name":"updatePool","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"","type":"uint256"},{"internalType":"address","name":"","type":"address"}],"name":"userInfo","outputs":[{"internalType":"uint256","name":"amount","type":"uint256"},{"internalType":"uint256","name":"rewardDebt","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"_poolId","type":"uint256"},{"internalType":"uint256","name":"_amount","type":"uint256"}],"name":"withdraw","outputs":[],"stateMutability":"nonpayable","type":"function"}],"metadata":{"optimizer_settings":"M3B3","solc_metadata":"{\"compiler\":{\"version\":\"0.8.9+commit.e5eed63a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"contract SobaToken\",\"name\":\"_sobaja\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_devaddr\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_sobaPerBlock\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_startBlock\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"poolId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Deposit\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"poolId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"EmergencyWithdraw\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"poolId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Withdraw\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"BONUS_MULTIPLIER\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_allocPoint\",\"type\":\"uint256\"},{\"internalType\":\"contract IERC20\",\"name\":\"_lpToken\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"_withUpdate\",\"type\":\"bool\"}],\"name\":\"add\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"block\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_poolId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"deposit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_devaddr\",\"type\":\"address\"}],\"name\":\"dev\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"devAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_poolId\",\"type\":\"uint256\"}],\"name\":\"emergencyWithdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_from\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_to\",\"type\":\"uint256\"}],\"name\":\"getMultiplier\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"leaveStaking\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"massUpdatePools\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_poolId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_user\",\"type\":\"address\"}],\"name\":\"pendingSoba\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"poolInfo\",\"outputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"lpToken\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allocPoint\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"lastRewardBlock\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"accSobaPerShare\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"totalStaked\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"poolLength\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_poolId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_allocPoint\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"_withUpdate\",\"type\":\"bool\"}],\"name\":\"set\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"sobaPerBlock\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"sobaja\",\"outputs\":[{\"internalType\":\"contract SobaToken\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"staking\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"startBlock\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalAllocPoint\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"multiplierNumber\",\"type\":\"uint256\"}],\"name\":\"updateMultiplier\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_poolId\",\"type\":\"uint256\"}],\"name\":\"updatePool\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"userInfo\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"rewardDebt\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_poolId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/YieldFarm.sol\":\"YieldFarm\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"details\":{\"constantOptimizer\":false,\"cse\":true,\"deduplicate\":true,\"inliner\":true,\"jumpdestRemover\":true,\"orderLiterals\":true,\"peephole\":true,\"yul\":true,\"yulDetails\":{\"optimizerSteps\":\"dhfoDgvulfnTUtnIf[xarrscLMcCTUtTOntnfDIulLculVcul jjTpeulxarulrulxarrcLgvifCTUcarrLsTFOtfDncarrIulc]jmuljuljul VcTOcul jmul\",\"stackAllocation\":true}},\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xba43b97fba0d32eb4254f6a5a297b39a19a247082a02d6e69349e071e2946218\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fc980984badf3984b6303b377711220e067722bbd6a135b24669ff5069ef9f32\",\"dweb:/ipfs/QmPHXMSXj99XjSVM21YsY6aNtLLjLVXDbyN76J5HQYvvrz\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0xa56ca923f70c1748830700250b19c61b70db9a683516dc5e216694a50445d99c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cac938788bc4be12101e59d45588b4e059579f4e61062e1cda8d6b06c0191b15\",\"dweb:/ipfs/QmV2JKCyjTVH3rkWNrfdJRhAT7tZ3usAN2XcnD4h53Mvih\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x287b55befed2961a7eabd7d7b1b2839cbca8a5b80ef8dcbb25ed3d4c2002c305\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bd39944e8fc06be6dbe2dd1d8449b5336e23c6a7ba3e8e9ae5ae0f37f35283f5\",\"dweb:/ipfs/QmPV3FGYjVwvKSgAXKUN3r9T9GwniZz83CxBpM7vyj2G53\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x8de418a5503946cabe331f35fe242d3201a73f67f77aaeb7110acb1f30423aca\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a376d3dda2cb70536c0a45c208b29b34ac560c4cb4f513a42079f96ba47d2dd\",\"dweb:/ipfs/QmZQg6gn1sUpM8wHzwNvSnihumUCAhxD119MpXeKp8B9s8\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol\":{\"keccak256\":\"0xec63854014a5b4f2b3290ab9103a21bdf902a508d0f41a8573fea49e98bf571a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bc5b5dc12fbc4002f282eaa7a5f06d8310ed62c1c77c5770f6283e058454c39a\",\"dweb:/ipfs/Qme9rE2wS3yBuyJq9GgbmzbsBQsW2M2sVFqYYLw7bosGrv\"]},\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0x909d608c2db6eb165ca178c81289a07ed2e118e444d0025b2a85c97d0b44a4fa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://656cda26512ddd7373c2d5551c8fae759fc30f05b10f0fc2e738e9274199dbd4\",\"dweb:/ipfs/QmTSArSzQRFbQmHgq7U1PZXnsDFhvDZhKVu9CzMG4yo6Lx\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0x006dd67219697fe68d7fbfdea512e7c4cb64a43565ed86171d67e844982da6fa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2455248c8ddd9cc6a7af76a13973cddf222072427e7b0e2a7d1aff345145e931\",\"dweb:/ipfs/QmfYjnjRbWqYpuxurqveE6HtzsY1Xx323J428AKQgtBJZm\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"@openzeppelin/contracts/utils/math/SafeMath.sol\":{\"keccak256\":\"0x58b21219689909c4f8339af00813760337f7e2e7f169a97fe49e2896dcfb3b9a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ef8e012e946dec20e59f2d4446f4b44bb098f3fa8bac103b1b5112fff777447b\",\"dweb:/ipfs/QmVTooKWcLkJ9W68yNX4MgdrbAKiAXwuRN9A7f4NkdcdtQ\"]},\"contracts/SobaToken.sol\":{\"keccak256\":\"0x1a711fad1b25e1c82cc1e834c66072fcd56c7b98ce6ffd9956c77b96a99a2956\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://0c5c3de1169b0c147ab4f6a4a8bd9c9c78f1de8e5eae64aba2f2b837fc289d9b\",\"dweb:/ipfs/QmTgFkHD5GpZmoafh3JKXRCXaezqBfkYqSf7J5ucKpv78X\"]},\"contracts/YieldFarm.sol\":{\"keccak256\":\"0xdf5b4779a596362c50ee4efae94f4d36a0766fa0bd952e49b54474b837405b54\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://6f069d9499aa78f4b46b6a6d378b9d40dc6e05bc4da00fc778aae03a8987bb1d\",\"dweb:/ipfs/QmbjGW5k4fJ3Z8JTmVxeqSZAuUDQgqAz99FFk87oAGGuS7\"]}},\"version\":1}","zk_version":"1.3.13"},"evm":{"legacyAssembly":null,"assembly":"\t.text\n\t.file\t\"YieldFarm.sol:YieldFarm\"\n\t.globl\t__entry\n__entry:\n.func_begin0:\n\tnop\tstack+=[6]\n\tadd\tr1, r0, r3\n\tshr.s\t96, r3, r3\n\tand\t@CPI0_0[0], r3, r4\n\tptr.add\tr1, r4, stack[@ptr_return_data]\n\tptr.add\tr1, r0, stack[@ptr_calldata]\n\tand\t@CPI0_0[0], r3, stack[@calldatasize]\n\tadd\t0, r0, stack[@returndatasize]\n\tadd\t128, r0, r1\n\tst.1\t64, r1\n\tand!\t1, r2, r1\n\tjump.ne\t@.BB0_1\n\tadd\tstack[@calldatasize], r0, r1\n\tsub.s!\t4, r1, r1\n\tjump.lt\t@.BB0_2\n\tptr.add\tstack[@ptr_calldata], r0, r1\n\tld\tr1, r1\n\tshr.s\t224, r1, r1\n\tsub.s!\t@CPI0_10[0], r1, r2\n\tjump.gt\t@.BB0_34\n\tsub.s!\t@CPI0_28[0], r1, r2\n\tjump.le\t@.BB0_18\n\tsub.s!\t@CPI0_29[0], r1, r2\n\tjump.le\t@.BB0_26\n\tsub.s!\t@CPI0_30[0], r1, r2\n\tjump.gt\t@.BB0_32\n\tsub.s!\t@CPI0_33[0], r1, r2\n\tjump.eq\t@.BB0_76\n\tsub.s!\t@CPI0_34[0], r1, r1\n\tjump.ne\t@.BB0_2\n\tcontext.get_context_u128\tr1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_2\n\tsub.s\t4, r0, r1\n\tadd\tstack[@calldatasize], r1, r1\n\tadd\t@CPI0_2[0], r0, r2\n\tsub.s!\t32, r1, r3\n\tadd\tr0, r0, r3\n\tadd.lt\tr2, r0, r3\n\tand\t@CPI0_2[0], r1, r1\n\tsub!\tr1, r0, r4\n\tadd.le\tr0, r0, r2\n\tsub.s!\t@CPI0_2[0], r1, r1\n\tadd\tr3, r0, r1\n\tadd.eq\tr2, r0, r1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_2\n\tadd\t4, r0, r1\n\tptr.add\tstack[@ptr_calldata], r1, r1\n\tld\tr1, r1\n\tnear_call\tr0, @fun_emergencyWithdraw, @DEFAULT_UNWIND\n\tadd\t@CPI0_0[0], r0, r1\n\tld.1\t64, r2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_1:\n\tcontext.get_context_u128\tr1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_2\n\tadd\tstack[@calldatasize], r0, r2\n\tadd\t31, r2, r1\n\tsub.s\t32, r0, r3\n\tand\tr1, r3, r4\n\tld.1\t64, r1\n\tadd\tr4, r1, r3\n\tsub!\tr3, r4, r4\n\tadd\t0, r0, r4\n\tadd.lt\t1, r0, r4\n\tsub.s!\t@CPI0_1[0], r3, r5\n\tjump.gt\t@.BB0_5\n\tand!\t1, r4, r4\n\tjump.ne\t@.BB0_5\n\tst.1\t64, r3\n\tand\t31, r2, r3\n\tptr.add\tstack[@ptr_calldata], r0, r4\n\tshr.s!\t5, r2, r5\n\tjump.eq\t@.BB0_120\n\tadd\tr0, r0, r6\n.BB0_8:\n\tshl.s\t5, r6, r7\n\tadd\tr1, r7, r8\n\tptr.add\tr4, r7, r7\n\tld\tr7, r7\n\tst.1\tr8, r7\n\tadd\t1, r6, r6\n\tsub!\tr6, r5, r7\n\tjump.lt\t@.BB0_8\n.BB0_120:\n\tsub!\tr3, r0, r6\n\tjump.eq\t@.BB0_10\n\tshl.s\t5, r5, r5\n\tptr.add\tr4, r5, r4\n\tadd\tr1, r5, r5\n\tshl.s\t3, r3, r3\n\tld.1\tr5, r6\n\tshl\tr6, r3, r6\n\tshr\tr6, r3, r6\n\tld\tr4, r4\n\tsub\t256, r3, r3\n\tshr\tr4, r3, r4\n\tshl\tr4, r3, r3\n\tor\tr3, r6, r3\n\tst.1\tr5, r3\n.BB0_10:\n\tadd\t@CPI0_2[0], r0, r3\n\tsub.s!\t128, r2, r4\n\tadd\tr0, r0, r4\n\tadd.lt\tr3, r0, r4\n\tand\t@CPI0_2[0], r2, r2\n\tsub!\tr2, r0, r5\n\tadd.le\tr0, r0, r3\n\tsub.s!\t@CPI0_2[0], r2, r2\n\tadd\tr4, r0, r2\n\tadd.eq\tr3, r0, r2\n\tsub!\tr2, r0, r2\n\tjump.ne\t@.BB0_2\n\tld.1.inc\tr1, r4, r2\n\tsub.s!\t@CPI0_3[0], r4, r3\n\tjump.gt\t@.BB0_2\n\tld.1\tr2, r5\n\tsub.s!\t@CPI0_3[0], r5, r2\n\tjump.gt\t@.BB0_2\n\tsload\tr0, r2\n\tand\t@CPI0_4[0], r2, r3\n\tcontext.caller\tr6\n\tor\tr3, r6, r3\n\tadd\tr4, r0, stack-[6]\n\tadd\t96, r1, r4\n\tld.1\tr4, r4\n\tadd\tr4, r0, stack-[4]\n\tadd\t64, r1, r1\n\tld.1\tr1, r1\n\tadd\tr1, r0, stack-[3]\n\tsstore\tr0, r3\n\tld.1\t64, r1\n\tadd\t@CPI0_0[0], r0, r3\n\tcontext.gas_left\tr4\n\tadd\tr5, r0, stack-[5]\n\tsub.s!\t@CPI0_0[0], r4, r5\n\tadd.ge\tr3, r0, r4\n\tsub.s!\t@CPI0_0[0], r1, r5\n\tadd.ge\tr3, r0, r1\n\tshl.s\t64, r1, r1\n\tshl.s\t192, r4, r3\n\tor\tr3, r1, r1\n\tand\t@CPI0_3[0], r2, r5\n\tor\t@CPI0_5[0], r1, r1\n\tadd\t32781, r0, r2\n\tadd\t3, r0, r3\n\tadd\t@CPI0_6[0], r0, r4\n\tadd\tr3, r0, stack-[2]\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tadd\tstack-[5], r0, r4\n\tadd\tstack-[6], r0, r3\n\tand!\t1, r2, r1\n\tjump.eq\t@.BB0_2\n\tadd\t1, r0, r1\n\tadd\t4, r0, r2\n\tsstore\tr2, r1\n\tadd\t7, r0, r2\n\tadd\tr2, r0, stack-[1]\n\tsstore\tr2, r0\n\tsload\tr1, r2\n\tand\t@CPI0_4[0], r2, r2\n\tor\tr2, r3, r2\n\tsstore\tr1, r2\n\tadd\t2, r0, r1\n\tsload\tr1, r2\n\tand\t@CPI0_4[0], r2, r2\n\tor\tr2, r4, r2\n\tsstore\tr1, r2\n\tadd\tstack-[3], r0, r1\n\tadd\tstack-[2], r0, r2\n\tsstore\tr2, r1\n\tadd\t8, r0, r1\n\tadd\tstack-[4], r0, r2\n\tsstore\tr1, r2\n\tsload\tr1, r1\n\tadd\tr1, r0, stack-[5]\n\tnear_call\tr0, @allocate_memory_1234, @DEFAULT_UNWIND\n\tadd\t64, r1, r2\n\tadd\tstack-[5], r0, r3\n\tst.1\tr2, r3\n\tadd\tstack-[6], r0, r2\n\tst.1.inc\tr1, r2, r2\n\tadd\t1000, r0, r3\n\tadd\tr3, r0, stack-[6]\n\tst.1\tr2, r3\n\tadd\t128, r1, r2\n\tst.1\tr2, r0\n\tadd\t96, r1, r2\n\tst.1\tr2, r0\n\tnear_call\tr0, @array_push_from_struct_PoolInfo_to_array_struct_PoolInfo_storage_dyn_ptr, @DEFAULT_UNWIND\n\tadd\tstack-[1], r0, r1\n\tadd\tstack-[6], r0, r2\n\tsstore\tr1, r2\n\tadd\t32, r0, r1\n\tst.2\t256, r1\n\tst.2\t288, r0\n\tadd\t@CPI0_7[0], r0, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_34:\n\tsub.s!\t@CPI0_11[0], r1, r2\n\tjump.le\t@.BB0_35\n\tsub.s!\t@CPI0_12[0], r1, r2\n\tjump.le\t@.BB0_43\n\tsub.s!\t@CPI0_13[0], r1, r2\n\tjump.gt\t@.BB0_49\n\tsub.s!\t@CPI0_16[0], r1, r2\n\tjump.eq\t@.BB0_111\n\tsub.s!\t@CPI0_17[0], r1, r1\n\tjump.ne\t@.BB0_2\n\tcontext.get_context_u128\tr1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_2\n\tsub.s\t4, r0, r1\n\tadd\tstack[@calldatasize], r1, r1\n\tadd\t@CPI0_2[0], r0, r2\n\tsub!\tr1, r0, r3\n\tadd\tr0, r0, r3\n\tadd.lt\tr2, r0, r3\n\tand\t@CPI0_2[0], r1, r1\n\tsub!\tr1, r0, r4\n\tadd.le\tr0, r0, r2\n\tsub.s!\t@CPI0_2[0], r1, r1\n\tadd\tr3, r0, r1\n\tadd.eq\tr2, r0, r1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_2\n\tadd\t1, r0, r1\n\tsload\tr1, r1\n\tand\t@CPI0_3[0], r1, r1\n\tld.1\t64, r2\n\tst.1\tr2, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI0_45[0], r1, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_5:\n\tadd\t@CPI0_8[0], r0, r1\n\tst.1\t0, r1\n\tadd\t65, r0, r1\n\tst.1\t4, r1\n\tadd\t@CPI0_9[0], r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB0_18:\n\tsub.s!\t@CPI0_38[0], r1, r2\n\tjump.gt\t@.BB0_22\n\tsub.s!\t@CPI0_42[0], r1, r2\n\tjump.eq\t@.BB0_51\n\tsub.s!\t@CPI0_43[0], r1, r2\n\tjump.eq\t@.BB0_54\n\tsub.s!\t@CPI0_44[0], r1, r1\n\tjump.ne\t@.BB0_2\n\tcontext.get_context_u128\tr1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_2\n\tsub.s\t4, r0, r1\n\tadd\tstack[@calldatasize], r1, r1\n\tadd\t@CPI0_2[0], r0, r2\n\tsub.s!\t32, r1, r3\n\tadd\tr0, r0, r3\n\tadd.lt\tr2, r0, r3\n\tand\t@CPI0_2[0], r1, r1\n\tsub!\tr1, r0, r4\n\tadd.le\tr0, r0, r2\n\tsub.s!\t@CPI0_2[0], r1, r1\n\tadd\tr3, r0, r1\n\tadd.eq\tr2, r0, r1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_2\n\tadd\t4, r0, r1\n\tptr.add\tstack[@ptr_calldata], r1, r1\n\tld\tr1, r1\n\tnear_call\tr0, @getter_fun_poolInfo, @DEFAULT_UNWIND\n\tadd\tr1, r0, r6\n\tadd\tr2, r0, r7\n\tadd\tr3, r0, r8\n\tadd\tr4, r0, r9\n\tadd\tr5, r0, r10\n\tld.1\t64, r1\n\tadd\tr1, r0, stack-[6]\n\tadd\tr6, r0, r2\n\tadd\tr7, r0, r3\n\tadd\tr8, r0, r4\n\tadd\tr9, r0, r5\n\tadd\tr10, r0, r6\n\tnear_call\tr0, @abi_encode_contract_IERC20_uint256_uint256_uint256_uint256, @DEFAULT_UNWIND\n\tadd\tstack-[6], r0, r4\n\tsub\tr1, r4, r1\n\tadd\t@CPI0_0[0], r0, r2\n\tsub.s!\t@CPI0_0[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tsub.s!\t@CPI0_0[0], r4, r3\n\tadd.lt\tr4, r0, r2\n\tshl.s\t64, r2, r2\n\tshl.s\t96, r1, r1\n\tor\tr1, r2, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_35:\n\tsub.s!\t@CPI0_21[0], r1, r2\n\tjump.gt\t@.BB0_39\n\tsub.s!\t@CPI0_25[0], r1, r2\n\tjump.eq\t@.BB0_88\n\tsub.s!\t@CPI0_26[0], r1, r2\n\tjump.eq\t@.BB0_91\n\tsub.s!\t@CPI0_27[0], r1, r1\n\tjump.ne\t@.BB0_2\n\tcontext.get_context_u128\tr1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_2\n\tsub.s\t4, r0, r1\n\tadd\tstack[@calldatasize], r1, r1\n\tadd\t@CPI0_2[0], r0, r2\n\tsub!\tr1, r0, r3\n\tadd\tr0, r0, r3\n\tadd.lt\tr2, r0, r3\n\tand\t@CPI0_2[0], r1, r1\n\tsub!\tr1, r0, r4\n\tadd.le\tr0, r0, r2\n\tsub.s!\t@CPI0_2[0], r1, r1\n\tadd\tr3, r0, r1\n\tadd.eq\tr2, r0, r1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_2\n\tnear_call\tr0, @modifier_onlyOwner, @DEFAULT_UNWIND\n\tadd\t@CPI0_0[0], r0, r1\n\tld.1\t64, r2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_26:\n\tsub.s!\t@CPI0_35[0], r1, r2\n\tjump.eq\t@.BB0_68\n\tsub.s!\t@CPI0_36[0], r1, r2\n\tjump.eq\t@.BB0_71\n\tsub.s!\t@CPI0_37[0], r1, r1\n\tjump.ne\t@.BB0_2\n\tcontext.get_context_u128\tr1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_2\n\tsub.s\t4, r0, r1\n\tadd\tstack[@calldatasize], r1, r1\n\tadd\t@CPI0_2[0], r0, r2\n\tsub!\tr1, r0, r3\n\tadd\tr0, r0, r3\n\tadd.lt\tr2, r0, r3\n\tand\t@CPI0_2[0], r1, r1\n\tsub!\tr1, r0, r4\n\tadd.le\tr0, r0, r2\n\tsub.s!\t@CPI0_2[0], r1, r1\n\tadd\tr3, r0, r1\n\tadd.eq\tr2, r0, r1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_2\n\tadd\t8, r0, r1\n\tsload\tr1, r1\n\tld.1\t64, r2\n\tst.1\tr2, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI0_45[0], r1, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_43:\n\tsub.s!\t@CPI0_18[0], r1, r2\n\tjump.eq\t@.BB0_104\n\tsub.s!\t@CPI0_19[0], r1, r2\n\tjump.eq\t@.BB0_106\n\tsub.s!\t@CPI0_20[0], r1, r1\n\tjump.ne\t@.BB0_2\n\tcontext.get_context_u128\tr1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_2\n\tsub.s\t4, r0, r1\n\tadd\tstack[@calldatasize], r1, r1\n\tadd\t@CPI0_2[0], r0, r2\n\tsub!\tr1, r0, r3\n\tadd\tr0, r0, r3\n\tadd.lt\tr2, r0, r3\n\tand\t@CPI0_2[0], r1, r1\n\tsub!\tr1, r0, r4\n\tadd.le\tr0, r0, r2\n\tsub.s!\t@CPI0_2[0], r1, r1\n\tadd\tr3, r0, r1\n\tadd.eq\tr2, r0, r1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_2\n\tadd\t3, r0, r1\n\tsload\tr1, r1\n\tld.1\t64, r2\n\tst.1\tr2, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI0_45[0], r1, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_22:\n\tsub.s!\t@CPI0_39[0], r1, r2\n\tjump.eq\t@.BB0_60\n\tsub.s!\t@CPI0_40[0], r1, r2\n\tjump.eq\t@.BB0_63\n\tsub.s!\t@CPI0_41[0], r1, r1\n\tjump.ne\t@.BB0_2\n\tcontext.get_context_u128\tr1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_2\n\tadd\tstack[@calldatasize], r0, r1\n\tnear_call\tr0, @abi_decode_uint256t_contract_IERC20t_bool, @DEFAULT_UNWIND\n\tnear_call\tr0, @modifier_onlyOwner_2130, @DEFAULT_UNWIND\n\tadd\t@CPI0_0[0], r0, r1\n\tld.1\t64, r2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_39:\n\tsub.s!\t@CPI0_22[0], r1, r2\n\tjump.eq\t@.BB0_96\n\tsub.s!\t@CPI0_23[0], r1, r2\n\tjump.eq\t@.BB0_99\n\tsub.s!\t@CPI0_24[0], r1, r1\n\tjump.ne\t@.BB0_2\n\tcontext.get_context_u128\tr1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_2\n\tsub.s\t4, r0, r1\n\tadd\tstack[@calldatasize], r1, r1\n\tadd\t@CPI0_2[0], r0, r2\n\tsub!\tr1, r0, r3\n\tadd\tr0, r0, r3\n\tadd.lt\tr2, r0, r3\n\tand\t@CPI0_2[0], r1, r1\n\tsub!\tr1, r0, r4\n\tadd.le\tr0, r0, r2\n\tsub.s!\t@CPI0_2[0], r1, r1\n\tadd\tr3, r0, r1\n\tadd.eq\tr2, r0, r1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_2\n\tsload\tr0, r1\n\tand\t@CPI0_3[0], r1, r1\n\tld.1\t64, r2\n\tst.1\tr2, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI0_45[0], r1, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_32:\n\tsub.s!\t@CPI0_31[0], r1, r2\n\tjump.eq\t@.BB0_82\n\tsub.s!\t@CPI0_32[0], r1, r1\n\tjump.ne\t@.BB0_2\n\tcontext.get_context_u128\tr1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_2\n\tsub.s\t4, r0, r1\n\tadd\tstack[@calldatasize], r1, r1\n\tadd\t@CPI0_2[0], r0, r2\n\tsub.s!\t32, r1, r3\n\tadd\tr0, r0, r3\n\tadd.lt\tr2, r0, r3\n\tand\t@CPI0_2[0], r1, r1\n\tsub!\tr1, r0, r4\n\tadd.le\tr0, r0, r2\n\tsub.s!\t@CPI0_2[0], r1, r1\n\tadd\tr3, r0, r1\n\tadd.eq\tr2, r0, r1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_2\n\tadd\t4, r0, r1\n\tptr.add\tstack[@ptr_calldata], r1, r1\n\tld\tr1, r1\n\tnear_call\tr0, @modifier_onlyOwner_2095, @DEFAULT_UNWIND\n\tadd\t@CPI0_0[0], r0, r1\n\tld.1\t64, r2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_49:\n\tsub.s!\t@CPI0_14[0], r1, r2\n\tjump.eq\t@.BB0_116\n\tsub.s!\t@CPI0_15[0], r1, r1\n\tjump.ne\t@.BB0_2\n\tcontext.get_context_u128\tr1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_2\n\tadd\tstack[@calldatasize], r0, r1\n\tnear_call\tr0, @abi_decode_address, @DEFAULT_UNWIND\n\tnear_call\tr0, @modifier_onlyOwner_74, @DEFAULT_UNWIND\n\tadd\t@CPI0_0[0], r0, r1\n\tld.1\t64, r2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_76:\n\tcontext.get_context_u128\tr1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_2\n\tsub.s\t4, r0, r1\n\tadd\tstack[@calldatasize], r1, r1\n\tadd\t@CPI0_2[0], r0, r2\n\tsub.s!\t32, r1, r3\n\tadd\tr0, r0, r3\n\tadd.lt\tr2, r0, r3\n\tand\t@CPI0_2[0], r1, r1\n\tsub!\tr1, r0, r4\n\tadd.le\tr0, r0, r2\n\tsub.s!\t@CPI0_2[0], r1, r1\n\tadd\tr3, r0, r1\n\tadd.eq\tr2, r0, r1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_2\n\tadd\t4, r0, r1\n\tptr.add\tstack[@ptr_calldata], r1, r1\n\tld\tr1, r1\n\tnear_call\tr0, @fun_updatePool, @DEFAULT_UNWIND\n\tadd\t@CPI0_0[0], r0, r1\n\tld.1\t64, r2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_111:\n\tcontext.get_context_u128\tr1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_2\n\tadd\tstack[@calldatasize], r0, r1\n\tnear_call\tr0, @abi_decode_uint256t_address, @DEFAULT_UNWIND\n\tnear_call\tr0, @fun_pendingSoba, @DEFAULT_UNWIND\n\tld.1\t64, r2\n\tst.1\tr2, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI0_45[0], r1, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_51:\n\tcontext.get_context_u128\tr1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_2\n\tsub.s\t4, r0, r1\n\tadd\tstack[@calldatasize], r1, r1\n\tadd\t@CPI0_2[0], r0, r2\n\tsub!\tr1, r0, r3\n\tadd\tr0, r0, r3\n\tadd.lt\tr2, r0, r3\n\tand\t@CPI0_2[0], r1, r1\n\tsub!\tr1, r0, r4\n\tadd.le\tr0, r0, r2\n\tsub.s!\t@CPI0_2[0], r1, r1\n\tadd\tr3, r0, r1\n\tadd.eq\tr2, r0, r1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_2\n\tadd\t5, r0, r1\n\tsload\tr1, r1\n\tst.1\t128, r1\n\tadd\t@CPI0_48[0], r0, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_88:\n\tcontext.get_context_u128\tr1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_2\n\tsub.s\t4, r0, r1\n\tadd\tstack[@calldatasize], r1, r1\n\tadd\t@CPI0_2[0], r0, r2\n\tsub!\tr1, r0, r3\n\tadd\tr0, r0, r3\n\tadd.lt\tr2, r0, r3\n\tand\t@CPI0_2[0], r1, r1\n\tsub!\tr1, r0, r4\n\tadd.le\tr0, r0, r2\n\tsub.s!\t@CPI0_2[0], r1, r1\n\tadd\tr3, r0, r1\n\tadd.eq\tr2, r0, r1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_2\n\tnear_call\tr0, @fun_massUpdatePools, @DEFAULT_UNWIND\n\tadd\t@CPI0_0[0], r0, r1\n\tld.1\t64, r2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_68:\n\tcontext.get_context_u128\tr1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_2\n\tsub.s\t4, r0, r1\n\tadd\tstack[@calldatasize], r1, r1\n\tadd\t@CPI0_2[0], r0, r2\n\tsub!\tr1, r0, r3\n\tadd\tr0, r0, r3\n\tadd.lt\tr2, r0, r3\n\tand\t@CPI0_2[0], r1, r1\n\tsub!\tr1, r0, r4\n\tadd.le\tr0, r0, r2\n\tsub.s!\t@CPI0_2[0], r1, r1\n\tadd\tr3, r0, r1\n\tadd.eq\tr2, r0, r1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_2\n\tadd\t2, r0, r1\n\tsload\tr1, r1\n\tand\t@CPI0_3[0], r1, r1\n\tld.1\t64, r2\n\tst.1\tr2, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI0_45[0], r1, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_71:\n\tcontext.get_context_u128\tr1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_2\n\tadd\tstack[@calldatasize], r0, r1\n\tnear_call\tr0, @abi_decode_uint256t_uint256, @DEFAULT_UNWIND\n\tnear_call\tr0, @fun_withdraw, @DEFAULT_UNWIND\n\tadd\t@CPI0_0[0], r0, r1\n\tld.1\t64, r2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_104:\n\tcontext.get_context_u128\tr1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_2\n\tadd\tstack[@calldatasize], r0, r1\n\tnear_call\tr0, @abi_decode_uint256t_uint256, @DEFAULT_UNWIND\n\tnear_call\tr0, @fun_getMultiplier, @DEFAULT_UNWIND\n\tld.1\t64, r2\n\tst.1\tr2, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI0_45[0], r1, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_106:\n\tcontext.get_context_u128\tr1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_2\n\tadd\tstack[@calldatasize], r0, r1\n\tnear_call\tr0, @abi_decode_uint256t_address, @DEFAULT_UNWIND\n\tnear_call\tr0, @getter_fun_userInfo, @DEFAULT_UNWIND\n\tld.1\t64, r3\n\tadd\t32, r3, r4\n\tst.1\tr4, r2\n\tst.1\tr3, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tsub.s!\t@CPI0_0[0], r3, r2\n\tadd.lt\tr3, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI0_46[0], r1, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_60:\n\tcontext.get_context_u128\tr1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_2\n\tsub.s\t4, r0, r1\n\tadd\tstack[@calldatasize], r1, r1\n\tadd\t@CPI0_2[0], r0, r2\n\tsub!\tr1, r0, r3\n\tadd\tr0, r0, r3\n\tadd.lt\tr2, r0, r3\n\tand\t@CPI0_2[0], r1, r1\n\tsub!\tr1, r0, r4\n\tadd.le\tr0, r0, r2\n\tsub.s!\t@CPI0_2[0], r1, r1\n\tadd\tr3, r0, r1\n\tadd.eq\tr2, r0, r1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_2\n\tadd\t7, r0, r1\n\tsload\tr1, r1\n\tld.1\t64, r2\n\tst.1\tr2, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI0_45[0], r1, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_96:\n\tcontext.get_context_u128\tr1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_2\n\tsub.s\t4, r0, r1\n\tadd\tstack[@calldatasize], r1, r1\n\tadd\t@CPI0_2[0], r0, r2\n\tsub!\tr1, r0, r3\n\tadd\tr0, r0, r3\n\tadd.lt\tr2, r0, r3\n\tand\t@CPI0_2[0], r1, r1\n\tsub!\tr1, r0, r4\n\tadd.le\tr0, r0, r2\n\tsub.s!\t@CPI0_2[0], r1, r1\n\tadd\tr3, r0, r1\n\tadd.eq\tr2, r0, r1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_2\n\tadd\t4, r0, r1\n\tsload\tr1, r1\n\tld.1\t64, r2\n\tst.1\tr2, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI0_45[0], r1, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_82:\n\tcontext.get_context_u128\tr1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_2\n\tsub.s\t4, r0, r1\n\tadd\tstack[@calldatasize], r1, r1\n\tadd\t@CPI0_2[0], r0, r2\n\tsub!\tr1, r0, r3\n\tadd\tr0, r0, r3\n\tadd.lt\tr2, r0, r3\n\tand\t@CPI0_2[0], r1, r1\n\tsub!\tr1, r0, r4\n\tadd.le\tr0, r0, r2\n\tsub.s!\t@CPI0_2[0], r1, r1\n\tadd\tr3, r0, r1\n\tadd.eq\tr2, r0, r1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_2\n\tld.1\t64, r1\n\tadd\tr1, r0, stack-[6]\n\tadd\t@CPI0_47[0], r0, r1\n\tst.2\t0, r1\n\tadd\t32779, r0, r1\n\tadd\t4, r0, r2\n\tnear_call\tr0, @__system_request, @DEFAULT_UNWIND\n\tadd\tstack-[6], r0, r3\n\tst.1\tr3, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tsub.s!\t@CPI0_0[0], r3, r2\n\tadd.lt\tr3, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI0_45[0], r1, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_116:\n\tcontext.get_context_u128\tr1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_2\n\tadd\tstack[@calldatasize], r0, r1\n\tnear_call\tr0, @abi_decode_uint256t_uint256, @DEFAULT_UNWIND\n\tnear_call\tr0, @fun_deposit, @DEFAULT_UNWIND\n\tadd\t@CPI0_0[0], r0, r1\n\tld.1\t64, r2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_54:\n\tcontext.get_context_u128\tr1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_2\n\tsub.s\t4, r0, r1\n\tadd\tstack[@calldatasize], r1, r1\n\tadd\t@CPI0_2[0], r0, r2\n\tsub.s!\t32, r1, r3\n\tadd\tr0, r0, r3\n\tadd.lt\tr2, r0, r3\n\tand\t@CPI0_2[0], r1, r1\n\tsub!\tr1, r0, r4\n\tadd.le\tr0, r0, r2\n\tsub.s!\t@CPI0_2[0], r1, r1\n\tadd\tr3, r0, r1\n\tadd.eq\tr2, r0, r1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_2\n\tadd\t4, r0, r1\n\tptr.add\tstack[@ptr_calldata], r1, r1\n\tld\tr1, r1\n\tnear_call\tr0, @fun_leaveStaking, @DEFAULT_UNWIND\n\tadd\t@CPI0_0[0], r0, r1\n\tld.1\t64, r2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_91:\n\tcontext.get_context_u128\tr1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_2\n\tadd\tstack[@calldatasize], r0, r1\n\tnear_call\tr0, @abi_decode_uint256t_uint256t_bool, @DEFAULT_UNWIND\n\tnear_call\tr0, @modifier_onlyOwner_2181, @DEFAULT_UNWIND\n\tadd\t@CPI0_0[0], r0, r1\n\tld.1\t64, r2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_63:\n\tcontext.get_context_u128\tr1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_2\n\tsub.s\t4, r0, r1\n\tadd\tstack[@calldatasize], r1, r1\n\tadd\t@CPI0_2[0], r0, r2\n\tsub.s!\t32, r1, r3\n\tadd\tr0, r0, r3\n\tadd.lt\tr2, r0, r3\n\tand\t@CPI0_2[0], r1, r1\n\tsub!\tr1, r0, r4\n\tadd.le\tr0, r0, r2\n\tsub.s!\t@CPI0_2[0], r1, r1\n\tadd\tr3, r0, r1\n\tadd.eq\tr2, r0, r1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_2\n\tadd\t4, r0, r1\n\tptr.add\tstack[@ptr_calldata], r1, r1\n\tld\tr1, r1\n\tnear_call\tr0, @fun_staking, @DEFAULT_UNWIND\n\tadd\t@CPI0_0[0], r0, r1\n\tld.1\t64, r2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_99:\n\tcontext.get_context_u128\tr1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_2\n\tadd\tstack[@calldatasize], r0, r1\n\tnear_call\tr0, @abi_decode_address, @DEFAULT_UNWIND\n\tnear_call\tr0, @fun_dev, @DEFAULT_UNWIND\n\tadd\t@CPI0_0[0], r0, r1\n\tld.1\t64, r2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_2:\n\tadd\tr0, r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.func_end0:\n\n__system_request:\n.func_begin1:\n\tadd\tr1, r0, r3\n\tadd\t@CPI1_0[0], r0, r1\n\tcontext.gas_left\tr4\n\tsub.s!\t@CPI1_0[0], r4, r5\n\tadd.lt\tr4, r0, r1\n\tshl.s\t192, r1, r1\n\tshl.s\t96, r2, r2\n\tadd\tr2, r1, r1\n\tadd\t@CPI1_1[0], r1, r1\n\tadd\tr3, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB1_2\n\tld\tr1, r1\n\tret\n.BB1_2:\n\tadd\tr0, r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.func_end1:\n\nallocate_memory_1234:\n.func_begin2:\n\tld.1\t64, r1\n\tsub.s!\t@CPI2_0[0], r1, r2\n\tjump.ge\t@.BB2_1\n\tadd\t160, r1, r2\n\tst.1\t64, r2\n\tret\n.BB2_1:\n\tadd\t@CPI2_1[0], r0, r1\n\tst.1\t0, r1\n\tadd\t65, r0, r1\n\tst.1\t4, r1\n\tadd\t@CPI2_2[0], r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.func_end2:\n\narray_push_from_struct_PoolInfo_to_array_struct_PoolInfo_storage_dyn_ptr:\n.func_begin3:\n\tnop\tstack+=[2]\n\tadd\tr1, r0, stack-[2]\n\tadd\t5, r0, r1\n\tsload\tr1, r3\n\tsub.s!\t@CPI3_0[0], r3, r2\n\tjump.ge\t@.BB3_1\n\tadd\tr3, r0, stack-[1]\n\tadd\t1, r3, r2\n\tsstore\tr1, r2\n\tst.1\t0, r1\n\tadd\t@CPI3_1[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI3_1[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI3_2[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB3_3\n\tadd\tstack-[1], r0, r2\n\tmul\t5, r2, r2, r3\n\tld\tr1, r1\n\tadd\tr1, r2, r1\n\tsload\tr1, r2\n\tand\t@CPI3_3[0], r2, r2\n\tadd\tstack-[2], r0, r5\n\tld.1.inc\tr5, r3, r4\n\tand\t@CPI3_4[0], r3, r3\n\tor\tr2, r3, r2\n\tsstore\tr1, r2\n\tld.1\tr4, r2\n\tadd\t1, r1, r3\n\tsstore\tr3, r2\n\tadd\t64, r5, r2\n\tld.1\tr2, r2\n\tadd\t2, r1, r3\n\tsstore\tr3, r2\n\tadd\t96, r5, r2\n\tld.1\tr2, r2\n\tadd\t3, r1, r3\n\tsstore\tr3, r2\n\tadd\t4, r1, r1\n\tadd\t128, r5, r2\n\tld.1\tr2, r2\n\tsstore\tr1, r2\n\tret\n.BB3_1:\n\tadd\t@CPI3_5[0], r0, r1\n\tst.1\t0, r1\n\tadd\t65, r0, r1\n\tst.1\t4, r1\n\tadd\t@CPI3_6[0], r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB3_3:\n\tadd\tr0, r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.func_end3:\n\ngetter_fun_poolInfo:\n.func_begin4:\n\tadd\t5, r0, r2\n\tsload\tr2, r3\n\tsub!\tr3, r1, r3\n\tjump.le\t@.BB4_1\n\tst.1\t0, r2\n\tmul\t5, r1, r1, r2\n\tadd\t@CPI4_0[0], r1, r2\n\tsload\tr2, r2\n\tadd\t@CPI4_1[0], r1, r3\n\tsload\tr3, r3\n\tadd\t@CPI4_2[0], r1, r4\n\tsload\tr4, r4\n\tadd\t@CPI4_3[0], r1, r5\n\tsload\tr5, r5\n\tadd\t@CPI4_4[0], r1, r1\n\tsload\tr1, r1\n\tand\t@CPI4_5[0], r1, r1\n\tret\n.BB4_1:\n\tadd\tr0, r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.func_end4:\n\nabi_encode_contract_IERC20_uint256_uint256_uint256_uint256:\n.func_begin5:\n\tadd\t128, r1, r7\n\tst.1\tr7, r6\n\tadd\t96, r1, r6\n\tst.1\tr6, r5\n\tadd\t64, r1, r5\n\tst.1\tr5, r4\n\tadd\t32, r1, r4\n\tst.1\tr4, r3\n\tand\t@CPI5_0[0], r2, r2\n\tst.1\tr1, r2\n\tadd\t160, r1, r1\n\tret\n.func_end5:\n\nabi_decode_uint256t_contract_IERC20t_bool:\n.func_begin6:\n\tsub.s\t4, r1, r1\n\tadd\t@CPI6_0[0], r0, r2\n\tsub.s!\t95, r1, r3\n\tadd\tr0, r0, r3\n\tadd.gt\tr2, r0, r3\n\tand\t@CPI6_0[0], r1, r1\n\tsub!\tr1, r0, r4\n\tadd.ge\tr0, r0, r2\n\tsub.s!\t@CPI6_0[0], r1, r1\n\tadd\tr3, r0, r1\n\tadd.eq\tr2, r0, r1\n\tsub!\tr1, r0, r1\n\tjump.eq\t@.BB6_1\n\tptr.add\tstack[@ptr_calldata], r0, r3\n\tptr.add.s\t4, r3, r1\n\tld\tr1, r1\n\tptr.add.s\t36, r3, r2\n\tld\tr2, r2\n\tsub.s!\t@CPI6_1[0], r2, r4\n\tjump.gt\t@.BB6_1\n\tptr.add.s\t68, r3, r3\n\tld\tr3, r3\n\tsub!\tr3, r0, r4\n\tadd\t0, r0, r4\n\tadd.ne\t1, r0, r4\n\tsub!\tr3, r4, r4\n\tjump.ne\t@.BB6_1\n\tret\n.BB6_1:\n\tadd\tr0, r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.func_end6:\n\nabi_decode_uint256t_uint256:\n.func_begin7:\n\tsub.s\t4, r1, r1\n\tadd\t@CPI7_0[0], r0, r2\n\tsub.s!\t63, r1, r3\n\tadd\tr0, r0, r3\n\tadd.gt\tr2, r0, r3\n\tand\t@CPI7_0[0], r1, r1\n\tsub!\tr1, r0, r4\n\tadd.ge\tr0, r0, r2\n\tsub.s!\t@CPI7_0[0], r1, r1\n\tadd\tr3, r0, r1\n\tadd.eq\tr2, r0, r1\n\tsub!\tr1, r0, r1\n\tjump.eq\t@.BB7_1\n\tptr.add\tstack[@ptr_calldata], r0, r2\n\tptr.add.s\t4, r2, r1\n\tld\tr1, r1\n\tptr.add.s\t36, r2, r2\n\tld\tr2, r2\n\tret\n.BB7_1:\n\tadd\tr0, r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.func_end7:\n\nabi_decode_uint256t_uint256t_bool:\n.func_begin8:\n\tsub.s\t4, r1, r1\n\tadd\t@CPI8_0[0], r0, r2\n\tsub.s!\t95, r1, r3\n\tadd\tr0, r0, r3\n\tadd.gt\tr2, r0, r3\n\tand\t@CPI8_0[0], r1, r1\n\tsub!\tr1, r0, r4\n\tadd.ge\tr0, r0, r2\n\tsub.s!\t@CPI8_0[0], r1, r1\n\tadd\tr3, r0, r1\n\tadd.eq\tr2, r0, r1\n\tsub!\tr1, r0, r1\n\tjump.eq\t@.BB8_1\n\tptr.add\tstack[@ptr_calldata], r0, r2\n\tptr.add.s\t68, r2, r1\n\tld\tr1, r3\n\tsub!\tr3, r0, r1\n\tadd\t0, r0, r1\n\tadd.ne\t1, r0, r1\n\tsub!\tr3, r1, r1\n\tjump.ne\t@.BB8_1\n\tptr.add.s\t4, r2, r1\n\tld\tr1, r1\n\tptr.add.s\t36, r2, r2\n\tld\tr2, r2\n\tret\n.BB8_1:\n\tadd\tr0, r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.func_end8:\n\nabi_decode_address:\n.func_begin9:\n\tsub.s\t4, r1, r1\n\tadd\t@CPI9_0[0], r0, r2\n\tsub.s!\t31, r1, r3\n\tadd\tr0, r0, r3\n\tadd.gt\tr2, r0, r3\n\tand\t@CPI9_0[0], r1, r1\n\tsub!\tr1, r0, r4\n\tadd.ge\tr0, r0, r2\n\tsub.s!\t@CPI9_0[0], r1, r1\n\tadd\tr3, r0, r1\n\tadd.eq\tr2, r0, r1\n\tsub!\tr1, r0, r1\n\tjump.eq\t@.BB9_1\n\tadd\t4, r0, r1\n\tptr.add\tstack[@ptr_calldata], r1, r1\n\tld\tr1, r1\n\tsub.s!\t@CPI9_1[0], r1, r2\n\tjump.gt\t@.BB9_1\n\tret\n.BB9_1:\n\tadd\tr0, r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.func_end9:\n\nabi_decode_uint256t_address:\n.func_begin10:\n\tsub.s\t4, r1, r1\n\tadd\t@CPI10_0[0], r0, r2\n\tsub.s!\t63, r1, r3\n\tadd\tr0, r0, r3\n\tadd.gt\tr2, r0, r3\n\tand\t@CPI10_0[0], r1, r1\n\tsub!\tr1, r0, r4\n\tadd.ge\tr0, r0, r2\n\tsub.s!\t@CPI10_0[0], r1, r1\n\tadd\tr3, r0, r1\n\tadd.eq\tr2, r0, r1\n\tsub!\tr1, r0, r1\n\tjump.eq\t@.BB10_1\n\tptr.add\tstack[@ptr_calldata], r0, r1\n\tptr.add.s\t36, r1, r2\n\tld\tr2, r2\n\tsub.s!\t@CPI10_1[0], r2, r3\n\tjump.gt\t@.BB10_1\n\tptr.add.s\t4, r1, r1\n\tld\tr1, r1\n\tret\n.BB10_1:\n\tadd\tr0, r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.func_end10:\n\ngetter_fun_userInfo:\n.func_begin11:\n\tnop\tstack+=[1]\n\tadd\tr2, r0, stack-[1]\n\tst.1\t0, r1\n\tadd\t6, r0, r1\n\tst.1\t32, r1\n\tadd\t@CPI11_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI11_0[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI11_1[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB11_1\n\tld\tr1, r1\n\tadd\tstack-[1], r0, r2\n\tand\t@CPI11_2[0], r2, r2\n\tst.1\t0, r2\n\tst.1\t32, r1\n\tadd\t@CPI11_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI11_0[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI11_1[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB11_1\n\tld\tr1, r2\n\tsload\tr2, r1\n\tadd\t1, r2, r2\n\tsload\tr2, r2\n\tret\n.BB11_1:\n\tadd\tr0, r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.func_end11:\n\nmodifier_onlyOwner:\n.func_begin12:\n\tsload\tr0, r1\n\tand\t@CPI12_0[0], r1, r5\n\tcontext.caller\tr2\n\tsub!\tr5, r2, r2\n\tjump.ne\t@.BB12_1\n\tand\t@CPI12_5[0], r1, r1\n\tsstore\tr0, r1\n\tld.1\t64, r1\n\tadd\t@CPI12_3[0], r0, r2\n\tcontext.gas_left\tr3\n\tsub.s!\t@CPI12_3[0], r3, r4\n\tadd.ge\tr2, r0, r3\n\tsub.s!\t@CPI12_3[0], r1, r4\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tshl.s\t192, r3, r2\n\tor\tr2, r1, r1\n\tor\t@CPI12_6[0], r1, r1\n\tadd\t32781, r0, r2\n\tadd\t3, r0, r3\n\tadd\t@CPI12_7[0], r0, r4\n\tadd\tr0, r0, r6\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r1\n\tjump.eq\t@.BB12_3\n\tret\n.BB12_1:\n\tld.1\t64, r1\n\tadd\t68, r1, r2\n\tadd\t@CPI12_1[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI12_2[0], r0, r2\n\tst.1\tr1, r2\n\tadd\t36, r1, r2\n\tadd\t32, r0, r3\n\tst.1\tr2, r3\n\tadd\t4, r1, r2\n\tst.1\tr2, r3\n\tadd\t@CPI12_3[0], r0, r2\n\tsub.s!\t@CPI12_3[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI12_4[0], r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB12_3:\n\tadd\tr0, r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.func_end12:\n\nmodifier_onlyOwner_74:\n.func_begin13:\n\tadd\tr1, r0, r6\n\tsload\tr0, r1\n\tand\t@CPI13_0[0], r1, r5\n\tcontext.caller\tr2\n\tsub!\tr5, r2, r2\n\tjump.ne\t@.BB13_1\n\tand!\t@CPI13_0[0], r6, r2\n\tjump.eq\t@.BB13_3\n\tand\t@CPI13_5[0], r1, r1\n\tor\tr1, r2, r1\n\tsstore\tr0, r1\n\tld.1\t64, r1\n\tadd\t@CPI13_3[0], r0, r2\n\tcontext.gas_left\tr3\n\tsub.s!\t@CPI13_3[0], r3, r4\n\tadd.ge\tr2, r0, r3\n\tsub.s!\t@CPI13_3[0], r1, r4\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tshl.s\t192, r3, r2\n\tor\tr2, r1, r1\n\tor\t@CPI13_6[0], r1, r1\n\tadd\t32781, r0, r2\n\tadd\t3, r0, r3\n\tadd\t@CPI13_7[0], r0, r4\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r1\n\tjump.eq\t@.BB13_5\n\tret\n.BB13_1:\n\tld.1\t64, r1\n\tadd\t68, r1, r2\n\tadd\t@CPI13_1[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI13_2[0], r0, r2\n\tst.1\tr1, r2\n\tadd\t36, r1, r2\n\tadd\t32, r0, r3\n\tst.1\tr2, r3\n\tadd\t4, r1, r2\n\tst.1\tr2, r3\n\tadd\t@CPI13_3[0], r0, r2\n\tsub.s!\t@CPI13_3[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI13_4[0], r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB13_3:\n\tld.1\t64, r1\n\tadd\t100, r1, r2\n\tadd\t@CPI13_8[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t68, r1, r2\n\tadd\t@CPI13_9[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t36, r1, r2\n\tadd\t38, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI13_2[0], r0, r2\n\tst.1\tr1, r2\n\tadd\t4, r1, r2\n\tadd\t32, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI13_3[0], r0, r2\n\tsub.s!\t@CPI13_3[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI13_10[0], r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB13_5:\n\tadd\tr0, r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.func_end13:\n\nmodifier_onlyOwner_2095:\n.func_begin14:\n\tsload\tr0, r2\n\tand\t@CPI14_0[0], r2, r2\n\tcontext.caller\tr3\n\tsub!\tr2, r3, r2\n\tjump.ne\t@.BB14_1\n\tadd\t4, r0, r2\n\tsstore\tr2, r1\n\tret\n.BB14_1:\n\tld.1\t64, r1\n\tadd\t68, r1, r2\n\tadd\t@CPI14_1[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI14_2[0], r0, r2\n\tst.1\tr1, r2\n\tadd\t36, r1, r2\n\tadd\t32, r0, r3\n\tst.1\tr2, r3\n\tadd\t4, r1, r2\n\tst.1\tr2, r3\n\tadd\t@CPI14_3[0], r0, r2\n\tsub.s!\t@CPI14_3[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI14_4[0], r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.func_end14:\n\nmodifier_onlyOwner_2130:\n.func_begin15:\n\tnop\tstack+=[18]\n\tadd\tr2, r0, stack-[1]\n\tadd\tr1, r0, stack-[2]\n\tsload\tr0, r1\n\tand\t@CPI15_0[0], r1, r1\n\tcontext.caller\tr2\n\tsub!\tr1, r2, r1\n\tjump.ne\t@.BB15_1\n\tsub!\tr3, r0, r1\n\tjump.eq\t@.BB15_72\n\tadd\t5, r0, r2\n\tsload\tr2, r1\n\tadd\tr1, r0, stack-[13]\n\tsub!\tr1, r0, r1\n\tjump.eq\t@.BB15_72\n\tadd\t32779, r0, r1\n\tadd\tr1, r0, stack-[12]\n\tadd\t32770, r0, r1\n\tadd\tr1, r0, stack-[3]\n\tadd\tr0, r0, r3\n\tadd\tr2, r0, stack-[11]\n\tjump\t@.BB15_5\n.BB15_30:\n\tsub!\tr2, r0, r2\n\tjump.eq\t@.BB15_8\n.BB15_10:\n\tld\tr1, r1\n\tadd\tstack-[15], r0, r2\n\tsstore\tr2, r1\n.BB15_71:\n\tadd\tstack-[16], r0, r3\n\tadd\t1, r3, r3\n\tadd\tstack-[13], r0, r1\n\tsub!\tr3, r1, r1\n\tadd\tstack-[11], r0, r2\n\tjump.ge\t@.BB15_72\n.BB15_5:\n\tsload\tr2, r1\n\tsub!\tr1, r3, r1\n\tjump.le\t@.BB15_6\n\tst.1\t0, r2\n\tadd\tr3, r0, stack-[16]\n\tmul\t5, r3, r2, r1\n\tadd\tr2, r0, stack-[18]\n\tadd\t@CPI15_5[0], r2, r1\n\tadd\tr1, r0, stack-[15]\n\tsload\tr1, r1\n\tadd\tr1, r0, stack-[17]\n\tadd\t@CPI15_6[0], r0, r1\n\tst.2\t0, r1\n\tadd\t@CPI15_3[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI15_3[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI15_7[0], r1, r1\n\tadd\tstack-[12], r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tadd\tstack-[18], r0, r3\n\tadd\t@CPI15_8[0], r3, r3\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB15_8\n\tld\tr1, r1\n\tadd\tstack-[17], r0, r2\n\tsub!\tr1, r2, r1\n\tjump.le\t@.BB15_71\n\tsload\tr3, r1\n\tadd\t@CPI15_9[0], r0, r2\n\tst.2\t0, r2\n\tand\t@CPI15_0[0], r1, r1\n\tadd\tr1, r0, stack-[17]\n\tst.2\t4, r1\n\tadd\t@CPI15_3[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI15_3[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI15_10[0], r1, r1\n\tadd\tstack-[3], r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB15_8\n\tld\tr1, r1\n\tsub!\tr1, r0, r1\n\tjump.eq\t@.BB15_8\n\tld.1\t64, r9\n\tadd\t@CPI15_11[0], r0, r1\n\tst.1\tr9, r1\n\tcontext.this\tr1\n\tand\t@CPI15_0[0], r1, r2\n\tadd\t4, r9, r1\n\tadd\tr2, r0, stack-[9]\n\tst.1\tr1, r2\n\tcontext.gas_left\tr1\n\tadd\tstack-[17], r0, r2\n\tsub.s!\t4, r2, r3\n\tjump.ne\t@.BB15_15\n\tadd\tstack[@returndatasize], r0, r3\n\tjump\t@.BB15_25\n.BB15_15:\n\tadd\t@CPI15_3[0], r0, r4\n\tsub.s!\t@CPI15_3[0], r1, r3\n\tadd.ge\tr4, r0, r1\n\tsub.s!\t@CPI15_3[0], r9, r3\n\tadd\tr4, r0, r3\n\tadd.lt\tr9, r0, r3\n\tshl.s\t64, r3, r3\n\tshl.s\t192, r1, r1\n\tor\tr1, r3, r1\n\tor\t@CPI15_12[0], r1, r1\n\tadd\tr9, r0, stack-[17]\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tadd\tstack-[17], r0, r9\n\tadd\tr1, r0, r3\n\tshr.s\t96, r3, r3\n\tand\t@CPI15_3[0], r3, r3\n\tsub.s!\t32, r3, r4\n\tadd\t32, r0, r5\n\tadd.lt\tr3, r0, r5\n\tshr.s!\t5, r5, r4\n\tjump.eq\t@.BB15_95\n\tadd\tr0, r0, r6\n.BB15_17:\n\tshl.s\t5, r6, r7\n\tadd\tr9, r7, r8\n\tptr.add\tr1, r7, r7\n\tld\tr7, r7\n\tst.1\tr8, r7\n\tadd\t1, r6, r6\n\tsub!\tr6, r4, r7\n\tjump.lt\t@.BB15_17\n.BB15_95:\n\tand!\t31, r5, r5\n\tjump.eq\t@.BB15_19\n\tshl.s\t5, r4, r4\n\tptr.add\tr1, r4, r6\n\tadd\tr9, r4, r4\n\tshl.s\t3, r5, r5\n\tld.1\tr4, r7\n\tshl\tr7, r5, r7\n\tshr\tr7, r5, r7\n\tld\tr6, r6\n\tsub\t256, r5, r5\n\tshr\tr6, r5, r6\n\tshl\tr6, r5, r5\n\tor\tr5, r7, r5\n\tst.1\tr4, r5\n.BB15_19:\n\tadd\tr3, r0, stack[@returndatasize]\n\tptr.add\tr1, r0, stack[@ptr_return_data]\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB15_20\n.BB15_25:\n\tadd\t31, r3, r1\n\tsub.s\t32, r0, r2\n\tadd\tr2, r0, stack-[14]\n\tand\tr1, r2, r2\n\tadd\tr2, r9, r1\n\tsub!\tr1, r2, r2\n\tadd\t0, r0, r2\n\tadd.lt\t1, r0, r2\n\tsub.s!\t@CPI15_13[0], r1, r3\n\tjump.gt\t@.BB15_27\n\tand!\t1, r2, r2\n\tjump.ne\t@.BB15_27\n\tst.1\t64, r1\n\tadd\t@CPI15_14[0], r0, r1\n\tadd\tstack[@returndatasize], r0, r2\n\tsub.s!\t32, r2, r3\n\tadd\tr0, r0, r3\n\tadd.lt\tr1, r0, r3\n\tand\t@CPI15_14[0], r2, r2\n\tsub!\tr2, r0, r4\n\tadd.le\tr0, r0, r1\n\tsub.s!\t@CPI15_14[0], r2, r2\n\tadd.ne\tr3, r0, r1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB15_8\n\tld.1\tr9, r1\n\tadd\tr1, r0, stack-[17]\n\tadd\t@CPI15_6[0], r0, r1\n\tst.2\t0, r1\n\tadd\t@CPI15_3[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI15_3[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI15_7[0], r1, r1\n\tadd\t32779, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tadd\tstack-[17], r0, r3\n\tsub!\tr3, r0, r3\n\tand\t1, r2, r2\n\tjump.eq\t@.BB15_30\n\tsub!\tr2, r0, r2\n\tjump.eq\t@.BB15_8\n\tadd\tstack-[15], r0, r2\n\tsload\tr2, r3\n\tld\tr1, r4\n\tsub!\tr4, r3, r1\n\tjump.lt\t@.BB15_33\n\tsub\tr4, r3, r1\n\tadd\t4, r0, r2\n\tsload\tr2, r2\n\tsub!\tr4, r3, r3\n\tjump.eq\t@.BB15_36\n\tsub.s\t1, r0, r3\n\tdiv\tr3, r1, r3, r4\n\tsub!\tr3, r2, r3\n\tjump.lt\t@.BB15_33\n.BB15_36:\n\tmul!\tr2, r1, r1, r2\n\tadd\t3, r0, r2\n\tsload\tr2, r2\n\tjump.eq\t@.BB15_38\n\tsub.s\t1, r0, r3\n\tdiv\tr3, r1, r3, r4\n\tsub!\tr3, r2, r3\n\tjump.lt\t@.BB15_33\n.BB15_38:\n\tmul!\tr2, r1, r3, r1\n\tadd\tstack-[18], r0, r1\n\tadd\t@CPI15_15[0], r1, r1\n\tsload\tr1, r4\n\tjump.eq\t@.BB15_40\n\tsub.s\t1, r0, r1\n\tdiv\tr1, r3, r1, r2\n\tsub!\tr1, r4, r1\n\tjump.lt\t@.BB15_33\n.BB15_40:\n\tadd\tr4, r0, stack-[7]\n\tadd\tr3, r0, stack-[8]\n\tadd\t7, r0, r1\n\tsload\tr1, r1\n\tadd\tr1, r0, stack-[6]\n\tsub!\tr1, r0, r1\n\tjump.eq\t@.BB15_41\n\tadd\t2, r0, r1\n\tsload\tr1, r1\n\tadd\tr1, r0, stack-[10]\n\tadd\t1, r0, r1\n\tadd\tr1, r0, stack-[4]\n\tsload\tr1, r1\n\tadd\t@CPI15_9[0], r0, r2\n\tst.2\t0, r2\n\tand\t@CPI15_0[0], r1, r1\n\tadd\tr1, r0, stack-[5]\n\tst.2\t4, r1\n\tadd\t@CPI15_3[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI15_3[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI15_10[0], r1, r1\n\tadd\t32770, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tadd\tstack-[10], r0, r3\n\tand\t@CPI15_0[0], r3, r3\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB15_8\n\tld\tr1, r1\n\tsub!\tr1, r0, r1\n\tjump.eq\t@.BB15_8\n\tadd\tstack-[8], r0, r1\n\tadd\tstack-[7], r0, r2\n\tmul\tr2, r1, r1, r2\n\tadd\tstack-[6], r0, r2\n\tdiv\tr1, r2, r2, r1\n\tadd\tr2, r0, stack-[10]\n\tdiv.s\t10, r2, r1, r2\n\tld.1\t64, r5\n\tadd\t36, r5, r2\n\tst.1\tr2, r1\n\tadd\t@CPI15_16[0], r0, r1\n\tst.1\tr5, r1\n\tadd\t4, r5, r1\n\tst.1\tr1, r3\n\tcontext.gas_left\tr1\n\tadd\tstack-[5], r0, r2\n\tsub.s!\t4, r2, r3\n\tjump.ne\t@.BB15_46\n\tadd\tstack[@returndatasize], r0, r4\n\tjump\t@.BB15_52\n.BB15_46:\n\tadd\t@CPI15_3[0], r0, r4\n\tsub.s!\t@CPI15_3[0], r1, r3\n\tadd.ge\tr4, r0, r1\n\tsub.s!\t@CPI15_3[0], r5, r3\n\tadd\tr4, r0, r3\n\tadd.lt\tr5, r0, r3\n\tshl.s\t64, r3, r3\n\tshl.s\t192, r1, r1\n\tor\tr1, r3, r1\n\tor\t@CPI15_17[0], r1, r1\n\tadd\tr5, r0, stack-[8]\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tadd\tstack-[8], r0, r5\n\tadd\tr1, r0, r3\n\tshr.s\t96, r3, r3\n\tand\t@CPI15_3[0], r3, stack[@returndatasize]\n\tand\t@CPI15_3[0], r3, r4\n\tptr.add\tr1, r0, stack[@ptr_return_data]\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB15_47\n.BB15_52:\n\tadd\t31, r4, r1\n\tadd\tstack-[14], r0, r2\n\tand\tr1, r2, r2\n\tadd\tr2, r5, r1\n\tsub!\tr1, r2, r2\n\tadd\t0, r0, r2\n\tadd.lt\t1, r0, r2\n\tsub.s!\t@CPI15_13[0], r1, r3\n\tjump.gt\t@.BB15_27\n\tand!\t1, r2, r2\n\tjump.ne\t@.BB15_27\n\tst.1\t64, r1\n\tadd\t@CPI15_14[0], r0, r1\n\tadd\tstack[@returndatasize], r0, r2\n\tsub!\tr2, r0, r3\n\tadd\tr0, r0, r3\n\tadd.lt\tr1, r0, r3\n\tand\t@CPI15_14[0], r2, r2\n\tsub!\tr2, r0, r4\n\tadd.le\tr0, r0, r1\n\tsub.s!\t@CPI15_14[0], r2, r2\n\tadd.ne\tr3, r0, r1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB15_8\n\tadd\tstack-[4], r0, r1\n\tsload\tr1, r1\n\tadd\t@CPI15_9[0], r0, r2\n\tst.2\t0, r2\n\tand\t@CPI15_0[0], r1, r1\n\tadd\tr1, r0, stack-[8]\n\tst.2\t4, r1\n\tadd\t@CPI15_3[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI15_3[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI15_10[0], r1, r1\n\tadd\t32770, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB15_8\n\tld\tr1, r1\n\tsub!\tr1, r0, r1\n\tjump.eq\t@.BB15_8\n\tld.1\t64, r5\n\tadd\t36, r5, r1\n\tadd\tstack-[10], r0, r2\n\tst.1\tr1, r2\n\tadd\t@CPI15_16[0], r0, r1\n\tst.1\tr5, r1\n\tadd\t4, r5, r1\n\tadd\tstack-[9], r0, r2\n\tst.1\tr1, r2\n\tcontext.gas_left\tr1\n\tadd\tstack-[8], r0, r2\n\tsub.s!\t4, r2, r3\n\tjump.ne\t@.BB15_59\n\tadd\tstack[@returndatasize], r0, r4\n\tjump\t@.BB15_65\n.BB15_59:\n\tadd\t@CPI15_3[0], r0, r4\n\tsub.s!\t@CPI15_3[0], r1, r3\n\tadd.ge\tr4, r0, r1\n\tsub.s!\t@CPI15_3[0], r5, r3\n\tadd\tr4, r0, r3\n\tadd.lt\tr5, r0, r3\n\tshl.s\t64, r3, r3\n\tshl.s\t192, r1, r1\n\tor\tr1, r3, r1\n\tor\t@CPI15_17[0], r1, r1\n\tadd\tr5, r0, stack-[9]\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tadd\tstack-[9], r0, r5\n\tadd\tr1, r0, r3\n\tshr.s\t96, r3, r3\n\tand\t@CPI15_3[0], r3, stack[@returndatasize]\n\tand\t@CPI15_3[0], r3, r4\n\tptr.add\tr1, r0, stack[@ptr_return_data]\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB15_60\n.BB15_65:\n\tadd\t31, r4, r1\n\tadd\tstack-[14], r0, r2\n\tand\tr1, r2, r2\n\tadd\tr2, r5, r1\n\tsub!\tr1, r2, r2\n\tadd\t0, r0, r2\n\tadd.lt\t1, r0, r2\n\tsub.s!\t@CPI15_13[0], r1, r3\n\tjump.gt\t@.BB15_27\n\tand!\t1, r2, r2\n\tjump.ne\t@.BB15_27\n\tst.1\t64, r1\n\tadd\t@CPI15_14[0], r0, r1\n\tadd\tstack[@returndatasize], r0, r2\n\tsub!\tr2, r0, r3\n\tadd\tr0, r0, r3\n\tadd.lt\tr1, r0, r3\n\tand\t@CPI15_14[0], r2, r2\n\tsub!\tr2, r0, r4\n\tadd.le\tr0, r0, r1\n\tsub.s!\t@CPI15_14[0], r2, r2\n\tadd.ne\tr3, r0, r1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB15_8\n\tadd\tstack-[18], r0, r1\n\tadd\t@CPI15_18[0], r1, r1\n\tsload\tr1, r2\n\tadd\tstack-[10], r0, r4\n\tsub.s!\t@CPI15_19[0], r4, r3\n\tjump.gt\t@.BB15_33\n\tmul\t@CPI15_20[0], r4, r3, r4\n\tadd\tstack-[17], r0, r4\n\tdiv\tr3, r4, r3, r4\n\tsub.s\t1, r0, r4\n\txor\tr3, r4, r4\n\tsub!\tr2, r4, r4\n\tjump.gt\t@.BB15_33\n\tadd\tr3, r2, r2\n\tsstore\tr1, r2\n\tadd\t@CPI15_6[0], r0, r1\n\tst.2\t0, r1\n\tadd\t@CPI15_3[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI15_3[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI15_7[0], r1, r1\n\tadd\t32779, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.ne\t@.BB15_10\n\tjump\t@.BB15_8\n.BB15_72:\n\tadd\t8, r0, r1\n\tsload\tr1, r1\n\tadd\tr1, r0, stack-[18]\n\tadd\t@CPI15_6[0], r0, r1\n\tst.2\t0, r1\n\tadd\t@CPI15_3[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI15_3[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI15_7[0], r1, r1\n\tadd\t32779, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB15_8\n\tld\tr1, r1\n\tadd\tstack-[18], r0, r7\n\tsub!\tr1, r7, r1\n\tjump.le\t@.BB15_74\n\tadd\t@CPI15_6[0], r0, r1\n\tst.2\t0, r1\n\tadd\t@CPI15_3[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI15_3[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI15_7[0], r1, r1\n\tadd\t32779, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB15_8\n\tld\tr1, r7\n.BB15_74:\n\tsub.s\t1, r0, r2\n\tadd\tstack-[2], r0, r1\n\txor\tr1, r2, r4\n\tadd\t7, r0, r1\n\tsload\tr1, r3\n\tsub!\tr3, r4, r4\n\tjump.gt\t@.BB15_33\n\tadd\tstack-[2], r0, r4\n\tadd\tr3, r4, r3\n\tsstore\tr1, r3\n\tld.1\t64, r6\n\tsub.s!\t@CPI15_22[0], r6, r3\n\tjump.gt\t@.BB15_27\n\tadd\t160, r6, r3\n\tst.1\t64, r3\n\tadd\t64, r6, r5\n\tst.1\tr5, r7\n\tadd\t32, r6, r7\n\tadd\tstack-[2], r0, r3\n\tst.1\tr7, r3\n\tadd\tstack-[1], r0, r3\n\tand\t@CPI15_0[0], r3, r3\n\tst.1\tr6, r3\n\tadd\t128, r6, r4\n\tst.1\tr4, r0\n\tadd\t96, r6, r8\n\tst.1\tr8, r0\n\tadd\t5, r0, r3\n\tsload\tr3, r9\n\tsub.s!\t@CPI15_13[0], r9, r10\n\tjump.gt\t@.BB15_27\n\tadd\t1, r9, r10\n\tsstore\tr3, r10\n\tsload\tr3, r10\n\tsub!\tr10, r9, r10\n\tjump.le\t@.BB15_6\n\tst.1\t0, r3\n\tld.1\tr6, r6\n\tand\t@CPI15_0[0], r6, r6\n\tmul\t5, r9, r9, r10\n\tadd\t@CPI15_8[0], r9, r10\n\tsload\tr10, r11\n\tand\t@CPI15_23[0], r11, r11\n\tor\tr11, r6, r6\n\tsstore\tr10, r6\n\tld.1\tr7, r6\n\tadd\t@CPI15_15[0], r9, r7\n\tsstore\tr7, r6\n\tld.1\tr5, r5\n\tadd\t@CPI15_5[0], r9, r6\n\tsstore\tr6, r5\n\tld.1\tr8, r5\n\tadd\t@CPI15_18[0], r9, r6\n\tsstore\tr6, r5\n\tadd\t@CPI15_24[0], r9, r5\n\tld.1\tr4, r4\n\tsstore\tr5, r4\n\tsload\tr3, r5\n\tsub.s!\t2, r5, r4\n\tjump.lt\t@.BB15_91\n\tadd\t1, r0, r6\n\tadd\tr0, r0, r4\n.BB15_82:\n\tsload\tr3, r7\n\tsub!\tr7, r6, r7\n\tjump.le\t@.BB15_6\n\tst.1\t0, r3\n\tmul\t5, r6, r7, r8\n\tadd\t@CPI15_15[0], r7, r7\n\tsload\tr7, r7\n\txor\tr7, r2, r8\n\tsub!\tr4, r8, r8\n\tjump.gt\t@.BB15_33\n\tadd\tr7, r4, r4\n\tadd\t1, r6, r6\n\tsub!\tr6, r5, r7\n\tjump.lt\t@.BB15_82\n\tsub!\tr4, r0, r5\n\tjump.eq\t@.BB15_91\n\tsload\tr1, r5\n\tsload\tr3, r6\n\tsub!\tr6, r0, r6\n\tjump.eq\t@.BB15_6\n\tadd\t@CPI15_15[0], r0, r6\n\tsload\tr6, r6\n\tsub!\tr5, r6, r7\n\tjump.lt\t@.BB15_33\n\tdiv.s\t3, r4, r4, r7\n\tsub\tr5, r6, r5\n\txor\tr4, r2, r2\n\tsub!\tr5, r2, r2\n\tjump.gt\t@.BB15_33\n\tadd\tr5, r4, r2\n\tsstore\tr1, r2\n\tsload\tr3, r1\n\tsub!\tr1, r0, r1\n\tjump.eq\t@.BB15_6\n\tst.1\t0, r3\n\tadd\t@CPI15_15[0], r0, r1\n\tsstore\tr1, r4\n.BB15_91:\n\tret\n.BB15_8:\n\tadd\tr0, r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB15_33:\n\tadd\t@CPI15_21[0], r0, r1\n\tst.1\t0, r1\n\tadd\t17, r0, r1\n\tst.1\t4, r1\n\tadd\t@CPI15_12[0], r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB15_6:\n\tadd\t@CPI15_21[0], r0, r1\n\tst.1\t0, r1\n\tadd\t50, r0, r1\n\tst.1\t4, r1\n\tadd\t@CPI15_12[0], r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB15_27:\n\tadd\t@CPI15_21[0], r0, r1\n\tst.1\t0, r1\n\tadd\t65, r0, r1\n\tst.1\t4, r1\n\tadd\t@CPI15_12[0], r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB15_41:\n\tadd\t@CPI15_21[0], r0, r1\n\tst.1\t0, r1\n\tadd\t18, r0, r1\n\tst.1\t4, r1\n\tadd\t@CPI15_12[0], r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB15_20:\n\tld.1\t64, r2\n\tand\t31, r3, r4\n\tshr.s!\t5, r3, r3\n\tjump.eq\t@.BB15_94\n\tadd\tr0, r0, r5\n.BB15_22:\n\tshl.s\t5, r5, r6\n\tadd\tr2, r6, r7\n\tptr.add\tr1, r6, r6\n\tld\tr6, r6\n\tst.1\tr7, r6\n\tadd\t1, r5, r5\n\tsub!\tr5, r3, r6\n\tjump.lt\t@.BB15_22\n.BB15_94:\n\tsub!\tr4, r0, r5\n\tjump.eq\t@.BB15_24\n\tshl.s\t5, r3, r3\n\tptr.add\tr1, r3, r1\n\tadd\tr2, r3, r3\n\tshl.s\t3, r4, r4\n\tld.1\tr3, r5\n\tshl\tr5, r4, r5\n\tshr\tr5, r4, r5\n\tld\tr1, r1\n\tsub\t256, r4, r4\n\tshr\tr1, r4, r1\n\tshl\tr1, r4, r1\n\tor\tr1, r5, r1\n\tst.1\tr3, r1\n.BB15_24:\n\tadd\t@CPI15_3[0], r0, r1\n\tadd\tstack[@returndatasize], r0, r3\n\tsub.s!\t@CPI15_3[0], r3, r4\n\tadd.ge\tr1, r0, r3\n\tsub.s!\t@CPI15_3[0], r2, r4\n\tadd.lt\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tshl.s\t96, r3, r2\n\tor\tr2, r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB15_47:\n\tld.1\t64, r2\n\tand\t31, r4, r3\n\tshr.s!\t5, r4, r4\n\tjump.eq\t@.BB15_93\n\tadd\tr0, r0, r5\n.BB15_49:\n\tshl.s\t5, r5, r6\n\tadd\tr2, r6, r7\n\tptr.add\tr1, r6, r6\n\tld\tr6, r6\n\tst.1\tr7, r6\n\tadd\t1, r5, r5\n\tsub!\tr5, r4, r6\n\tjump.lt\t@.BB15_49\n.BB15_93:\n\tsub!\tr3, r0, r5\n\tjump.eq\t@.BB15_51\n\tshl.s\t5, r4, r4\n\tptr.add\tr1, r4, r1\n\tadd\tr2, r4, r4\n\tshl.s\t3, r3, r3\n\tld.1\tr4, r5\n\tshl\tr5, r3, r5\n\tshr\tr5, r3, r5\n\tld\tr1, r1\n\tsub\t256, r3, r3\n\tshr\tr1, r3, r1\n\tshl\tr1, r3, r1\n\tor\tr1, r5, r1\n\tst.1\tr4, r1\n.BB15_51:\n\tadd\t@CPI15_3[0], r0, r1\n\tadd\tstack[@returndatasize], r0, r3\n\tsub.s!\t@CPI15_3[0], r3, r4\n\tadd.ge\tr1, r0, r3\n\tsub.s!\t@CPI15_3[0], r2, r4\n\tadd.lt\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tshl.s\t96, r3, r2\n\tor\tr2, r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB15_60:\n\tld.1\t64, r2\n\tand\t31, r4, r3\n\tshr.s!\t5, r4, r4\n\tjump.eq\t@.BB15_92\n\tadd\tr0, r0, r5\n.BB15_62:\n\tshl.s\t5, r5, r6\n\tadd\tr2, r6, r7\n\tptr.add\tr1, r6, r6\n\tld\tr6, r6\n\tst.1\tr7, r6\n\tadd\t1, r5, r5\n\tsub!\tr5, r4, r6\n\tjump.lt\t@.BB15_62\n.BB15_92:\n\tsub!\tr3, r0, r5\n\tjump.eq\t@.BB15_64\n\tshl.s\t5, r4, r4\n\tptr.add\tr1, r4, r1\n\tadd\tr2, r4, r4\n\tshl.s\t3, r3, r3\n\tld.1\tr4, r5\n\tshl\tr5, r3, r5\n\tshr\tr5, r3, r5\n\tld\tr1, r1\n\tsub\t256, r3, r3\n\tshr\tr1, r3, r1\n\tshl\tr1, r3, r1\n\tor\tr1, r5, r1\n\tst.1\tr4, r1\n.BB15_64:\n\tadd\t@CPI15_3[0], r0, r1\n\tadd\tstack[@returndatasize], r0, r3\n\tsub.s!\t@CPI15_3[0], r3, r4\n\tadd.ge\tr1, r0, r3\n\tsub.s!\t@CPI15_3[0], r2, r4\n\tadd.lt\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tshl.s\t96, r3, r2\n\tor\tr2, r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB15_1:\n\tld.1\t64, r1\n\tadd\t68, r1, r2\n\tadd\t@CPI15_1[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI15_2[0], r0, r2\n\tst.1\tr1, r2\n\tadd\t36, r1, r2\n\tadd\t32, r0, r3\n\tst.1\tr2, r3\n\tadd\t4, r1, r2\n\tst.1\tr2, r3\n\tadd\t@CPI15_3[0], r0, r2\n\tsub.s!\t@CPI15_3[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI15_4[0], r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.func_end15:\n\nmodifier_onlyOwner_2181:\n.func_begin16:\n\tnop\tstack+=[18]\n\tadd\tr2, r0, stack-[1]\n\tadd\tr1, r0, stack-[2]\n\tsload\tr0, r1\n\tand\t@CPI16_0[0], r1, r1\n\tcontext.caller\tr2\n\tsub!\tr1, r2, r1\n\tjump.ne\t@.BB16_1\n\tsub!\tr3, r0, r1\n\tjump.eq\t@.BB16_72\n\tadd\t5, r0, r2\n\tsload\tr2, r1\n\tadd\tr1, r0, stack-[13]\n\tsub!\tr1, r0, r1\n\tjump.eq\t@.BB16_72\n\tadd\t32779, r0, r1\n\tadd\tr1, r0, stack-[12]\n\tadd\t32770, r0, r1\n\tadd\tr1, r0, stack-[3]\n\tadd\tr0, r0, r3\n\tadd\tr2, r0, stack-[11]\n\tjump\t@.BB16_5\n.BB16_30:\n\tsub!\tr2, r0, r2\n\tjump.eq\t@.BB16_8\n.BB16_10:\n\tld\tr1, r1\n\tadd\tstack-[15], r0, r2\n\tsstore\tr2, r1\n.BB16_71:\n\tadd\tstack-[16], r0, r3\n\tadd\t1, r3, r3\n\tadd\tstack-[13], r0, r1\n\tsub!\tr3, r1, r1\n\tadd\tstack-[11], r0, r2\n\tjump.ge\t@.BB16_72\n.BB16_5:\n\tsload\tr2, r1\n\tsub!\tr1, r3, r1\n\tjump.le\t@.BB16_6\n\tst.1\t0, r2\n\tadd\tr3, r0, stack-[16]\n\tmul\t5, r3, r2, r1\n\tadd\tr2, r0, stack-[18]\n\tadd\t@CPI16_5[0], r2, r1\n\tadd\tr1, r0, stack-[15]\n\tsload\tr1, r1\n\tadd\tr1, r0, stack-[17]\n\tadd\t@CPI16_6[0], r0, r1\n\tst.2\t0, r1\n\tadd\t@CPI16_3[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI16_3[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI16_7[0], r1, r1\n\tadd\tstack-[12], r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tadd\tstack-[18], r0, r3\n\tadd\t@CPI16_8[0], r3, r3\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB16_8\n\tld\tr1, r1\n\tadd\tstack-[17], r0, r2\n\tsub!\tr1, r2, r1\n\tjump.le\t@.BB16_71\n\tsload\tr3, r1\n\tadd\t@CPI16_9[0], r0, r2\n\tst.2\t0, r2\n\tand\t@CPI16_0[0], r1, r1\n\tadd\tr1, r0, stack-[17]\n\tst.2\t4, r1\n\tadd\t@CPI16_3[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI16_3[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI16_10[0], r1, r1\n\tadd\tstack-[3], r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB16_8\n\tld\tr1, r1\n\tsub!\tr1, r0, r1\n\tjump.eq\t@.BB16_8\n\tld.1\t64, r9\n\tadd\t@CPI16_11[0], r0, r1\n\tst.1\tr9, r1\n\tcontext.this\tr1\n\tand\t@CPI16_0[0], r1, r2\n\tadd\t4, r9, r1\n\tadd\tr2, r0, stack-[9]\n\tst.1\tr1, r2\n\tcontext.gas_left\tr1\n\tadd\tstack-[17], r0, r2\n\tsub.s!\t4, r2, r3\n\tjump.ne\t@.BB16_15\n\tadd\tstack[@returndatasize], r0, r3\n\tjump\t@.BB16_25\n.BB16_15:\n\tadd\t@CPI16_3[0], r0, r4\n\tsub.s!\t@CPI16_3[0], r1, r3\n\tadd.ge\tr4, r0, r1\n\tsub.s!\t@CPI16_3[0], r9, r3\n\tadd\tr4, r0, r3\n\tadd.lt\tr9, r0, r3\n\tshl.s\t64, r3, r3\n\tshl.s\t192, r1, r1\n\tor\tr1, r3, r1\n\tor\t@CPI16_12[0], r1, r1\n\tadd\tr9, r0, stack-[17]\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tadd\tstack-[17], r0, r9\n\tadd\tr1, r0, r3\n\tshr.s\t96, r3, r3\n\tand\t@CPI16_3[0], r3, r3\n\tsub.s!\t32, r3, r4\n\tadd\t32, r0, r5\n\tadd.lt\tr3, r0, r5\n\tshr.s!\t5, r5, r4\n\tjump.eq\t@.BB16_92\n\tadd\tr0, r0, r6\n.BB16_17:\n\tshl.s\t5, r6, r7\n\tadd\tr9, r7, r8\n\tptr.add\tr1, r7, r7\n\tld\tr7, r7\n\tst.1\tr8, r7\n\tadd\t1, r6, r6\n\tsub!\tr6, r4, r7\n\tjump.lt\t@.BB16_17\n.BB16_92:\n\tand!\t31, r5, r5\n\tjump.eq\t@.BB16_19\n\tshl.s\t5, r4, r4\n\tptr.add\tr1, r4, r6\n\tadd\tr9, r4, r4\n\tshl.s\t3, r5, r5\n\tld.1\tr4, r7\n\tshl\tr7, r5, r7\n\tshr\tr7, r5, r7\n\tld\tr6, r6\n\tsub\t256, r5, r5\n\tshr\tr6, r5, r6\n\tshl\tr6, r5, r5\n\tor\tr5, r7, r5\n\tst.1\tr4, r5\n.BB16_19:\n\tadd\tr3, r0, stack[@returndatasize]\n\tptr.add\tr1, r0, stack[@ptr_return_data]\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB16_20\n.BB16_25:\n\tadd\t31, r3, r1\n\tsub.s\t32, r0, r2\n\tadd\tr2, r0, stack-[14]\n\tand\tr1, r2, r2\n\tadd\tr2, r9, r1\n\tsub!\tr1, r2, r2\n\tadd\t0, r0, r2\n\tadd.lt\t1, r0, r2\n\tsub.s!\t@CPI16_13[0], r1, r3\n\tjump.gt\t@.BB16_27\n\tand!\t1, r2, r2\n\tjump.ne\t@.BB16_27\n\tst.1\t64, r1\n\tadd\t@CPI16_14[0], r0, r1\n\tadd\tstack[@returndatasize], r0, r2\n\tsub.s!\t32, r2, r3\n\tadd\tr0, r0, r3\n\tadd.lt\tr1, r0, r3\n\tand\t@CPI16_14[0], r2, r2\n\tsub!\tr2, r0, r4\n\tadd.le\tr0, r0, r1\n\tsub.s!\t@CPI16_14[0], r2, r2\n\tadd.ne\tr3, r0, r1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB16_8\n\tld.1\tr9, r1\n\tadd\tr1, r0, stack-[17]\n\tadd\t@CPI16_6[0], r0, r1\n\tst.2\t0, r1\n\tadd\t@CPI16_3[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI16_3[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI16_7[0], r1, r1\n\tadd\t32779, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tadd\tstack-[17], r0, r3\n\tsub!\tr3, r0, r3\n\tand\t1, r2, r2\n\tjump.eq\t@.BB16_30\n\tsub!\tr2, r0, r2\n\tjump.eq\t@.BB16_8\n\tadd\tstack-[15], r0, r2\n\tsload\tr2, r3\n\tld\tr1, r4\n\tsub!\tr4, r3, r1\n\tjump.lt\t@.BB16_33\n\tsub\tr4, r3, r1\n\tadd\t4, r0, r2\n\tsload\tr2, r2\n\tsub!\tr4, r3, r3\n\tjump.eq\t@.BB16_36\n\tsub.s\t1, r0, r3\n\tdiv\tr3, r1, r3, r4\n\tsub!\tr3, r2, r3\n\tjump.lt\t@.BB16_33\n.BB16_36:\n\tmul!\tr2, r1, r1, r2\n\tadd\t3, r0, r2\n\tsload\tr2, r2\n\tjump.eq\t@.BB16_38\n\tsub.s\t1, r0, r3\n\tdiv\tr3, r1, r3, r4\n\tsub!\tr3, r2, r3\n\tjump.lt\t@.BB16_33\n.BB16_38:\n\tmul!\tr2, r1, r3, r1\n\tadd\tstack-[18], r0, r1\n\tadd\t@CPI16_15[0], r1, r1\n\tsload\tr1, r4\n\tjump.eq\t@.BB16_40\n\tsub.s\t1, r0, r1\n\tdiv\tr1, r3, r1, r2\n\tsub!\tr1, r4, r1\n\tjump.lt\t@.BB16_33\n.BB16_40:\n\tadd\tr4, r0, stack-[7]\n\tadd\tr3, r0, stack-[8]\n\tadd\t7, r0, r1\n\tsload\tr1, r1\n\tadd\tr1, r0, stack-[6]\n\tsub!\tr1, r0, r1\n\tjump.eq\t@.BB16_41\n\tadd\t2, r0, r1\n\tsload\tr1, r1\n\tadd\tr1, r0, stack-[10]\n\tadd\t1, r0, r1\n\tadd\tr1, r0, stack-[4]\n\tsload\tr1, r1\n\tadd\t@CPI16_9[0], r0, r2\n\tst.2\t0, r2\n\tand\t@CPI16_0[0], r1, r1\n\tadd\tr1, r0, stack-[5]\n\tst.2\t4, r1\n\tadd\t@CPI16_3[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI16_3[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI16_10[0], r1, r1\n\tadd\t32770, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tadd\tstack-[10], r0, r3\n\tand\t@CPI16_0[0], r3, r3\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB16_8\n\tld\tr1, r1\n\tsub!\tr1, r0, r1\n\tjump.eq\t@.BB16_8\n\tadd\tstack-[8], r0, r1\n\tadd\tstack-[7], r0, r2\n\tmul\tr2, r1, r1, r2\n\tadd\tstack-[6], r0, r2\n\tdiv\tr1, r2, r2, r1\n\tadd\tr2, r0, stack-[10]\n\tdiv.s\t10, r2, r1, r2\n\tld.1\t64, r5\n\tadd\t36, r5, r2\n\tst.1\tr2, r1\n\tadd\t@CPI16_16[0], r0, r1\n\tst.1\tr5, r1\n\tadd\t4, r5, r1\n\tst.1\tr1, r3\n\tcontext.gas_left\tr1\n\tadd\tstack-[5], r0, r2\n\tsub.s!\t4, r2, r3\n\tjump.ne\t@.BB16_46\n\tadd\tstack[@returndatasize], r0, r4\n\tjump\t@.BB16_52\n.BB16_46:\n\tadd\t@CPI16_3[0], r0, r4\n\tsub.s!\t@CPI16_3[0], r1, r3\n\tadd.ge\tr4, r0, r1\n\tsub.s!\t@CPI16_3[0], r5, r3\n\tadd\tr4, r0, r3\n\tadd.lt\tr5, r0, r3\n\tshl.s\t64, r3, r3\n\tshl.s\t192, r1, r1\n\tor\tr1, r3, r1\n\tor\t@CPI16_17[0], r1, r1\n\tadd\tr5, r0, stack-[8]\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tadd\tstack-[8], r0, r5\n\tadd\tr1, r0, r3\n\tshr.s\t96, r3, r3\n\tand\t@CPI16_3[0], r3, stack[@returndatasize]\n\tand\t@CPI16_3[0], r3, r4\n\tptr.add\tr1, r0, stack[@ptr_return_data]\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB16_47\n.BB16_52:\n\tadd\t31, r4, r1\n\tadd\tstack-[14], r0, r2\n\tand\tr1, r2, r2\n\tadd\tr2, r5, r1\n\tsub!\tr1, r2, r2\n\tadd\t0, r0, r2\n\tadd.lt\t1, r0, r2\n\tsub.s!\t@CPI16_13[0], r1, r3\n\tjump.gt\t@.BB16_27\n\tand!\t1, r2, r2\n\tjump.ne\t@.BB16_27\n\tst.1\t64, r1\n\tadd\t@CPI16_14[0], r0, r1\n\tadd\tstack[@returndatasize], r0, r2\n\tsub!\tr2, r0, r3\n\tadd\tr0, r0, r3\n\tadd.lt\tr1, r0, r3\n\tand\t@CPI16_14[0], r2, r2\n\tsub!\tr2, r0, r4\n\tadd.le\tr0, r0, r1\n\tsub.s!\t@CPI16_14[0], r2, r2\n\tadd.ne\tr3, r0, r1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB16_8\n\tadd\tstack-[4], r0, r1\n\tsload\tr1, r1\n\tadd\t@CPI16_9[0], r0, r2\n\tst.2\t0, r2\n\tand\t@CPI16_0[0], r1, r1\n\tadd\tr1, r0, stack-[8]\n\tst.2\t4, r1\n\tadd\t@CPI16_3[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI16_3[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI16_10[0], r1, r1\n\tadd\t32770, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB16_8\n\tld\tr1, r1\n\tsub!\tr1, r0, r1\n\tjump.eq\t@.BB16_8\n\tld.1\t64, r5\n\tadd\t36, r5, r1\n\tadd\tstack-[10], r0, r2\n\tst.1\tr1, r2\n\tadd\t@CPI16_16[0], r0, r1\n\tst.1\tr5, r1\n\tadd\t4, r5, r1\n\tadd\tstack-[9], r0, r2\n\tst.1\tr1, r2\n\tcontext.gas_left\tr1\n\tadd\tstack-[8], r0, r2\n\tsub.s!\t4, r2, r3\n\tjump.ne\t@.BB16_59\n\tadd\tstack[@returndatasize], r0, r4\n\tjump\t@.BB16_65\n.BB16_59:\n\tadd\t@CPI16_3[0], r0, r4\n\tsub.s!\t@CPI16_3[0], r1, r3\n\tadd.ge\tr4, r0, r1\n\tsub.s!\t@CPI16_3[0], r5, r3\n\tadd\tr4, r0, r3\n\tadd.lt\tr5, r0, r3\n\tshl.s\t64, r3, r3\n\tshl.s\t192, r1, r1\n\tor\tr1, r3, r1\n\tor\t@CPI16_17[0], r1, r1\n\tadd\tr5, r0, stack-[9]\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tadd\tstack-[9], r0, r5\n\tadd\tr1, r0, r3\n\tshr.s\t96, r3, r3\n\tand\t@CPI16_3[0], r3, stack[@returndatasize]\n\tand\t@CPI16_3[0], r3, r4\n\tptr.add\tr1, r0, stack[@ptr_return_data]\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB16_60\n.BB16_65:\n\tadd\t31, r4, r1\n\tadd\tstack-[14], r0, r2\n\tand\tr1, r2, r2\n\tadd\tr2, r5, r1\n\tsub!\tr1, r2, r2\n\tadd\t0, r0, r2\n\tadd.lt\t1, r0, r2\n\tsub.s!\t@CPI16_13[0], r1, r3\n\tjump.gt\t@.BB16_27\n\tand!\t1, r2, r2\n\tjump.ne\t@.BB16_27\n\tst.1\t64, r1\n\tadd\t@CPI16_14[0], r0, r1\n\tadd\tstack[@returndatasize], r0, r2\n\tsub!\tr2, r0, r3\n\tadd\tr0, r0, r3\n\tadd.lt\tr1, r0, r3\n\tand\t@CPI16_14[0], r2, r2\n\tsub!\tr2, r0, r4\n\tadd.le\tr0, r0, r1\n\tsub.s!\t@CPI16_14[0], r2, r2\n\tadd.ne\tr3, r0, r1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB16_8\n\tadd\tstack-[18], r0, r1\n\tadd\t@CPI16_18[0], r1, r1\n\tsload\tr1, r2\n\tadd\tstack-[10], r0, r4\n\tsub.s!\t@CPI16_19[0], r4, r3\n\tjump.gt\t@.BB16_33\n\tmul\t@CPI16_20[0], r4, r3, r4\n\tadd\tstack-[17], r0, r4\n\tdiv\tr3, r4, r3, r4\n\tsub.s\t1, r0, r4\n\txor\tr3, r4, r4\n\tsub!\tr2, r4, r4\n\tjump.gt\t@.BB16_33\n\tadd\tr3, r2, r2\n\tsstore\tr1, r2\n\tadd\t@CPI16_6[0], r0, r1\n\tst.2\t0, r1\n\tadd\t@CPI16_3[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI16_3[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI16_7[0], r1, r1\n\tadd\t32779, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.ne\t@.BB16_10\n.BB16_8:\n\tadd\tr0, r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB16_72:\n\tadd\t5, r0, r1\n\tsload\tr1, r2\n\tadd\tstack-[2], r0, r3\n\tsub!\tr2, r3, r2\n\tjump.le\t@.BB16_6\n\tst.1\t0, r1\n\tadd\tstack-[2], r0, r5\n\tmul\t5, r5, r2, r3\n\tadd\t@CPI16_15[0], r2, r2\n\tsload\tr2, r3\n\tsload\tr1, r4\n\tsub!\tr4, r5, r4\n\tjump.le\t@.BB16_6\n\tadd\tstack-[1], r0, r4\n\tsstore\tr2, r4\n\tsub!\tr3, r4, r2\n\tjump.eq\t@.BB16_76\n\tadd\t7, r0, r2\n\tsload\tr2, r4\n\tsub!\tr4, r3, r5\n\tjump.lt\t@.BB16_33\n\tsub\tr4, r3, r4\n\tsub.s\t1, r0, r3\n\tadd\tstack-[1], r0, r5\n\txor\tr5, r3, r5\n\tsub!\tr4, r5, r5\n\tjump.gt\t@.BB16_33\n\tadd\tstack-[1], r0, r5\n\tadd\tr4, r5, r4\n\tsstore\tr2, r4\n\tsload\tr1, r5\n\tsub.s!\t2, r5, r4\n\tjump.lt\t@.BB16_76\n\tadd\t1, r0, r6\n\tadd\tr0, r0, r4\n.BB16_80:\n\tsload\tr1, r7\n\tsub!\tr7, r6, r7\n\tjump.le\t@.BB16_6\n\tst.1\t0, r1\n\tmul\t5, r6, r7, r8\n\tadd\t@CPI16_15[0], r7, r7\n\tsload\tr7, r7\n\txor\tr7, r3, r8\n\tsub!\tr4, r8, r8\n\tjump.gt\t@.BB16_33\n\tadd\tr7, r4, r4\n\tadd\t1, r6, r6\n\tsub!\tr6, r5, r7\n\tjump.lt\t@.BB16_80\n\tsub!\tr4, r0, r5\n\tjump.eq\t@.BB16_76\n\tsload\tr2, r5\n\tsload\tr1, r6\n\tsub!\tr6, r0, r6\n\tjump.eq\t@.BB16_6\n\tadd\t@CPI16_15[0], r0, r6\n\tsload\tr6, r6\n\tsub!\tr5, r6, r7\n\tjump.lt\t@.BB16_33\n\tdiv.s\t3, r4, r4, r7\n\tsub\tr5, r6, r5\n\txor\tr4, r3, r3\n\tsub!\tr5, r3, r3\n\tjump.gt\t@.BB16_33\n\tadd\tr5, r4, r3\n\tsstore\tr2, r3\n\tsload\tr1, r2\n\tsub!\tr2, r0, r2\n\tjump.eq\t@.BB16_6\n\tst.1\t0, r1\n\tadd\t@CPI16_15[0], r0, r1\n\tsstore\tr1, r4\n.BB16_76:\n\tret\n.BB16_33:\n\tadd\t@CPI16_21[0], r0, r1\n\tst.1\t0, r1\n\tadd\t17, r0, r1\n\tst.1\t4, r1\n\tadd\t@CPI16_12[0], r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB16_6:\n\tadd\t@CPI16_21[0], r0, r1\n\tst.1\t0, r1\n\tadd\t50, r0, r1\n\tst.1\t4, r1\n\tadd\t@CPI16_12[0], r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB16_27:\n\tadd\t@CPI16_21[0], r0, r1\n\tst.1\t0, r1\n\tadd\t65, r0, r1\n\tst.1\t4, r1\n\tadd\t@CPI16_12[0], r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB16_41:\n\tadd\t@CPI16_21[0], r0, r1\n\tst.1\t0, r1\n\tadd\t18, r0, r1\n\tst.1\t4, r1\n\tadd\t@CPI16_12[0], r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB16_20:\n\tld.1\t64, r2\n\tand\t31, r3, r4\n\tshr.s!\t5, r3, r3\n\tjump.eq\t@.BB16_91\n\tadd\tr0, r0, r5\n.BB16_22:\n\tshl.s\t5, r5, r6\n\tadd\tr2, r6, r7\n\tptr.add\tr1, r6, r6\n\tld\tr6, r6\n\tst.1\tr7, r6\n\tadd\t1, r5, r5\n\tsub!\tr5, r3, r6\n\tjump.lt\t@.BB16_22\n.BB16_91:\n\tsub!\tr4, r0, r5\n\tjump.eq\t@.BB16_24\n\tshl.s\t5, r3, r3\n\tptr.add\tr1, r3, r1\n\tadd\tr2, r3, r3\n\tshl.s\t3, r4, r4\n\tld.1\tr3, r5\n\tshl\tr5, r4, r5\n\tshr\tr5, r4, r5\n\tld\tr1, r1\n\tsub\t256, r4, r4\n\tshr\tr1, r4, r1\n\tshl\tr1, r4, r1\n\tor\tr1, r5, r1\n\tst.1\tr3, r1\n.BB16_24:\n\tadd\t@CPI16_3[0], r0, r1\n\tadd\tstack[@returndatasize], r0, r3\n\tsub.s!\t@CPI16_3[0], r3, r4\n\tadd.ge\tr1, r0, r3\n\tsub.s!\t@CPI16_3[0], r2, r4\n\tadd.lt\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tshl.s\t96, r3, r2\n\tor\tr2, r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB16_47:\n\tld.1\t64, r2\n\tand\t31, r4, r3\n\tshr.s!\t5, r4, r4\n\tjump.eq\t@.BB16_90\n\tadd\tr0, r0, r5\n.BB16_49:\n\tshl.s\t5, r5, r6\n\tadd\tr2, r6, r7\n\tptr.add\tr1, r6, r6\n\tld\tr6, r6\n\tst.1\tr7, r6\n\tadd\t1, r5, r5\n\tsub!\tr5, r4, r6\n\tjump.lt\t@.BB16_49\n.BB16_90:\n\tsub!\tr3, r0, r5\n\tjump.eq\t@.BB16_51\n\tshl.s\t5, r4, r4\n\tptr.add\tr1, r4, r1\n\tadd\tr2, r4, r4\n\tshl.s\t3, r3, r3\n\tld.1\tr4, r5\n\tshl\tr5, r3, r5\n\tshr\tr5, r3, r5\n\tld\tr1, r1\n\tsub\t256, r3, r3\n\tshr\tr1, r3, r1\n\tshl\tr1, r3, r1\n\tor\tr1, r5, r1\n\tst.1\tr4, r1\n.BB16_51:\n\tadd\t@CPI16_3[0], r0, r1\n\tadd\tstack[@returndatasize], r0, r3\n\tsub.s!\t@CPI16_3[0], r3, r4\n\tadd.ge\tr1, r0, r3\n\tsub.s!\t@CPI16_3[0], r2, r4\n\tadd.lt\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tshl.s\t96, r3, r2\n\tor\tr2, r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB16_60:\n\tld.1\t64, r2\n\tand\t31, r4, r3\n\tshr.s!\t5, r4, r4\n\tjump.eq\t@.BB16_89\n\tadd\tr0, r0, r5\n.BB16_62:\n\tshl.s\t5, r5, r6\n\tadd\tr2, r6, r7\n\tptr.add\tr1, r6, r6\n\tld\tr6, r6\n\tst.1\tr7, r6\n\tadd\t1, r5, r5\n\tsub!\tr5, r4, r6\n\tjump.lt\t@.BB16_62\n.BB16_89:\n\tsub!\tr3, r0, r5\n\tjump.eq\t@.BB16_64\n\tshl.s\t5, r4, r4\n\tptr.add\tr1, r4, r1\n\tadd\tr2, r4, r4\n\tshl.s\t3, r3, r3\n\tld.1\tr4, r5\n\tshl\tr5, r3, r5\n\tshr\tr5, r3, r5\n\tld\tr1, r1\n\tsub\t256, r3, r3\n\tshr\tr1, r3, r1\n\tshl\tr1, r3, r1\n\tor\tr1, r5, r1\n\tst.1\tr4, r1\n.BB16_64:\n\tadd\t@CPI16_3[0], r0, r1\n\tadd\tstack[@returndatasize], r0, r3\n\tsub.s!\t@CPI16_3[0], r3, r4\n\tadd.ge\tr1, r0, r3\n\tsub.s!\t@CPI16_3[0], r2, r4\n\tadd.lt\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tshl.s\t96, r3, r2\n\tor\tr2, r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB16_1:\n\tld.1\t64, r1\n\tadd\t68, r1, r2\n\tadd\t@CPI16_1[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI16_2[0], r0, r2\n\tst.1\tr1, r2\n\tadd\t36, r1, r2\n\tadd\t32, r0, r3\n\tst.1\tr2, r3\n\tadd\t4, r1, r2\n\tst.1\tr2, r3\n\tadd\t@CPI16_3[0], r0, r2\n\tsub.s!\t@CPI16_3[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI16_4[0], r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.func_end16:\n\nfun_getMultiplier:\n.func_begin17:\n\tsub!\tr2, r1, r3\n\tjump.lt\t@.BB17_1\n\tsub\tr2, r1, r3\n\tadd\t4, r0, r4\n\tsload\tr4, r4\n\tsub!\tr2, r1, r1\n\tjump.eq\t@.BB17_4\n\tsub.s\t1, r0, r1\n\tdiv\tr1, r3, r1, r2\n\tsub!\tr1, r4, r1\n\tjump.lt\t@.BB17_1\n.BB17_4:\n\tmul\tr4, r3, r1, r2\n\tret\n.BB17_1:\n\tadd\t@CPI17_0[0], r0, r1\n\tst.1\t0, r1\n\tadd\t17, r0, r1\n\tst.1\t4, r1\n\tadd\t@CPI17_1[0], r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.func_end17:\n\nfun_pendingSoba:\n.func_begin18:\n\tnop\tstack+=[5]\n\tadd\tr2, r0, stack-[4]\n\tadd\t5, r0, r2\n\tsload\tr2, r2\n\tsub!\tr2, r1, r2\n\tjump.le\t@.BB18_1\n\tst.1\t0, r1\n\tadd\t6, r0, r2\n\tst.1\t32, r2\n\tadd\t@CPI18_2[0], r0, r4\n\tadd\tr1, r0, stack-[5]\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI18_2[0], r2, r3\n\tadd\tr4, r0, r1\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI18_3[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tadd\tstack-[5], r0, r3\n\tmul\t5, r3, r4, r3\n\tadd\tr4, r0, stack-[5]\n\tadd\t@CPI18_4[0], r4, r3\n\tadd\tr3, r0, stack-[2]\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB18_3\n\tld\tr1, r1\n\tadd\tstack-[4], r0, r2\n\tand\t@CPI18_5[0], r2, r2\n\tst.1\t0, r2\n\tst.1\t32, r1\n\tadd\t@CPI18_2[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI18_2[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI18_3[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB18_3\n\tld\tr1, r1\n\tadd\tr1, r0, stack-[3]\n\tadd\tstack-[5], r0, r1\n\tadd\t@CPI18_6[0], r1, r1\n\tsload\tr1, r1\n\tadd\tr1, r0, stack-[4]\n\tadd\tstack-[2], r0, r1\n\tsload\tr1, r1\n\tadd\t@CPI18_7[0], r0, r2\n\tst.2\t0, r2\n\tand\t@CPI18_5[0], r1, r1\n\tadd\tr1, r0, stack-[2]\n\tst.2\t4, r1\n\tadd\t@CPI18_2[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI18_2[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI18_8[0], r1, r1\n\tadd\t32770, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB18_3\n\tld\tr1, r1\n\tsub!\tr1, r0, r1\n\tjump.eq\t@.BB18_3\n\tld.1\t64, r9\n\tadd\t@CPI18_9[0], r0, r1\n\tst.1\tr9, r1\n\tcontext.this\tr1\n\tand\t@CPI18_5[0], r1, r1\n\tadd\t4, r9, r2\n\tst.1\tr2, r1\n\tcontext.gas_left\tr1\n\tadd\tstack-[2], r0, r2\n\tsub.s!\t4, r2, r3\n\tjump.ne\t@.BB18_9\n\tadd\tstack[@returndatasize], r0, r3\n\tjump\t@.BB18_19\n.BB18_9:\n\tadd\t@CPI18_2[0], r0, r4\n\tsub.s!\t@CPI18_2[0], r1, r3\n\tadd.ge\tr4, r0, r1\n\tsub.s!\t@CPI18_2[0], r9, r3\n\tadd\tr4, r0, r3\n\tadd.lt\tr9, r0, r3\n\tshl.s\t64, r3, r3\n\tshl.s\t192, r1, r1\n\tor\tr1, r3, r1\n\tor\t@CPI18_1[0], r1, r1\n\tadd\tr9, r0, stack-[2]\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tadd\tstack-[2], r0, r9\n\tadd\tr1, r0, r3\n\tshr.s\t96, r3, r3\n\tand\t@CPI18_2[0], r3, r3\n\tsub.s!\t32, r3, r4\n\tadd\t32, r0, r5\n\tadd.lt\tr3, r0, r5\n\tand\t31, r5, r4\n\tshr.s!\t5, r5, r5\n\tjump.eq\t@.BB18_45\n\tadd\tr0, r0, r6\n.BB18_11:\n\tshl.s\t5, r6, r7\n\tadd\tr9, r7, r8\n\tptr.add\tr1, r7, r7\n\tld\tr7, r7\n\tst.1\tr8, r7\n\tadd\t1, r6, r6\n\tsub!\tr6, r5, r7\n\tjump.lt\t@.BB18_11\n.BB18_45:\n\tsub!\tr4, r0, r6\n\tjump.eq\t@.BB18_13\n\tshl.s\t5, r5, r5\n\tptr.add\tr1, r5, r6\n\tadd\tr9, r5, r5\n\tshl.s\t3, r4, r4\n\tld.1\tr5, r7\n\tshl\tr7, r4, r7\n\tshr\tr7, r4, r7\n\tld\tr6, r6\n\tsub\t256, r4, r4\n\tshr\tr6, r4, r6\n\tshl\tr6, r4, r4\n\tor\tr4, r7, r4\n\tst.1\tr5, r4\n.BB18_13:\n\tadd\tr3, r0, stack[@returndatasize]\n\tptr.add\tr1, r0, stack[@ptr_return_data]\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB18_14\n.BB18_19:\n\tadd\t31, r3, r1\n\tsub.s\t32, r0, r2\n\tand\tr1, r2, r2\n\tadd\tr2, r9, r1\n\tsub!\tr1, r2, r2\n\tadd\t0, r0, r2\n\tadd.lt\t1, r0, r2\n\tsub.s!\t@CPI18_10[0], r1, r3\n\tjump.gt\t@.BB18_21\n\tand!\t1, r2, r2\n\tjump.ne\t@.BB18_21\n\tst.1\t64, r1\n\tadd\t@CPI18_11[0], r0, r1\n\tadd\tstack[@returndatasize], r0, r2\n\tsub.s!\t32, r2, r3\n\tadd\tr0, r0, r3\n\tadd.lt\tr1, r0, r3\n\tand\t@CPI18_11[0], r2, r2\n\tsub!\tr2, r0, r4\n\tadd.le\tr0, r0, r1\n\tsub.s!\t@CPI18_11[0], r2, r2\n\tadd.ne\tr3, r0, r1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB18_3\n\tld.1\tr9, r1\n\tadd\tr1, r0, stack-[1]\n\tadd\tstack-[5], r0, r1\n\tadd\t@CPI18_12[0], r1, r1\n\tsload\tr1, r1\n\tadd\tr1, r0, stack-[2]\n\tadd\t@CPI18_13[0], r0, r1\n\tst.2\t0, r1\n\tadd\t@CPI18_2[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI18_2[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI18_14[0], r1, r1\n\tadd\t32779, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB18_3\n\tld\tr1, r1\n\tadd\tstack-[2], r0, r4\n\tsub!\tr1, r4, r1\n\tjump.le\t@.BB18_40\n\tadd\tstack-[1], r0, r1\n\tsub!\tr1, r0, r1\n\tjump.eq\t@.BB18_40\n\tadd\t@CPI18_13[0], r0, r1\n\tst.2\t0, r1\n\tadd\t@CPI18_2[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI18_2[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI18_14[0], r1, r1\n\tadd\t32779, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB18_3\n\tld\tr1, r3\n\tadd\tstack-[2], r0, r4\n\tsub!\tr3, r4, r1\n\tadd\tstack-[4], r0, r5\n\tjump.lt\t@.BB18_28\n\tsub\tr3, r4, r1\n\tadd\t4, r0, r2\n\tsload\tr2, r2\n\tsub!\tr3, r4, r3\n\tjump.eq\t@.BB18_31\n\tsub.s\t1, r0, r3\n\tdiv\tr3, r1, r3, r4\n\tsub!\tr3, r2, r3\n\tjump.lt\t@.BB18_28\n.BB18_31:\n\tmul!\tr2, r1, r1, r2\n\tadd\t3, r0, r2\n\tsload\tr2, r2\n\tjump.eq\t@.BB18_33\n\tsub.s\t1, r0, r3\n\tdiv\tr3, r1, r3, r4\n\tsub!\tr3, r2, r3\n\tjump.lt\t@.BB18_28\n.BB18_33:\n\tmul!\tr2, r1, r1, r2\n\tadd\tstack-[5], r0, r2\n\tadd\t@CPI18_15[0], r2, r2\n\tsload\tr2, r2\n\tjump.eq\t@.BB18_35\n\tsub.s\t1, r0, r3\n\tdiv\tr3, r1, r3, r4\n\tsub!\tr3, r2, r3\n\tjump.lt\t@.BB18_28\n.BB18_35:\n\tadd\t7, r0, r3\n\tsload\tr3, r3\n\tsub!\tr3, r0, r4\n\tjump.eq\t@.BB18_36\n\tmul\tr2, r1, r1, r2\n\tdiv\tr1, r3, r1, r2\n\tsub.s!\t@CPI18_16[0], r1, r2\n\tjump.gt\t@.BB18_28\n\tmul\t@CPI18_17[0], r1, r1, r2\n\tadd\tstack-[1], r0, r2\n\tdiv\tr1, r2, r1, r2\n\tsub.s\t1, r0, r2\n\txor\tr1, r2, r2\n\tsub!\tr5, r2, r2\n\tjump.gt\t@.BB18_28\n\tadd\tr1, r5, r5\n\tadd\tr5, r0, stack-[4]\n.BB18_40:\n\tadd\tstack-[3], r0, r1\n\tsload\tr1, r1\n\tsub!\tr1, r0, r2\n\tadd\tstack-[4], r0, r4\n\tjump.eq\t@.BB18_42\n\tsub.s\t1, r0, r2\n\tdiv\tr2, r1, r2, r3\n\tsub!\tr2, r4, r2\n\tjump.lt\t@.BB18_28\n.BB18_42:\n\tmul\tr1, r4, r1, r2\n\tdiv.s\t@CPI18_17[0], r1, r1, r2\n\tadd\tstack-[3], r0, r2\n\tadd\t1, r2, r2\n\tsload\tr2, r2\n\tsub!\tr1, r2, r3\n\tjump.lt\t@.BB18_28\n\tsub\tr1, r2, r1\n\tret\n.BB18_3:\n\tadd\tr0, r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB18_28:\n\tadd\t@CPI18_0[0], r0, r1\n\tst.1\t0, r1\n\tadd\t17, r0, r1\n\tst.1\t4, r1\n\tadd\t@CPI18_1[0], r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB18_1:\n\tadd\t@CPI18_0[0], r0, r1\n\tst.1\t0, r1\n\tadd\t50, r0, r1\n\tst.1\t4, r1\n\tadd\t@CPI18_1[0], r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB18_21:\n\tadd\t@CPI18_0[0], r0, r1\n\tst.1\t0, r1\n\tadd\t65, r0, r1\n\tst.1\t4, r1\n\tadd\t@CPI18_1[0], r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB18_14:\n\tld.1\t64, r2\n\tand\t31, r3, r4\n\tshr.s!\t5, r3, r3\n\tjump.eq\t@.BB18_44\n\tadd\tr0, r0, r5\n.BB18_16:\n\tshl.s\t5, r5, r6\n\tadd\tr2, r6, r7\n\tptr.add\tr1, r6, r6\n\tld\tr6, r6\n\tst.1\tr7, r6\n\tadd\t1, r5, r5\n\tsub!\tr5, r3, r6\n\tjump.lt\t@.BB18_16\n.BB18_44:\n\tsub!\tr4, r0, r5\n\tjump.eq\t@.BB18_18\n\tshl.s\t5, r3, r3\n\tptr.add\tr1, r3, r1\n\tadd\tr2, r3, r3\n\tshl.s\t3, r4, r4\n\tld.1\tr3, r5\n\tshl\tr5, r4, r5\n\tshr\tr5, r4, r5\n\tld\tr1, r1\n\tsub\t256, r4, r4\n\tshr\tr1, r4, r1\n\tshl\tr1, r4, r1\n\tor\tr1, r5, r1\n\tst.1\tr3, r1\n.BB18_18:\n\tadd\t@CPI18_2[0], r0, r1\n\tadd\tstack[@returndatasize], r0, r3\n\tsub.s!\t@CPI18_2[0], r3, r4\n\tadd.ge\tr1, r0, r3\n\tsub.s!\t@CPI18_2[0], r2, r4\n\tadd.lt\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tshl.s\t96, r3, r2\n\tor\tr2, r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB18_36:\n\tadd\t@CPI18_0[0], r0, r1\n\tst.1\t0, r1\n\tadd\t18, r0, r1\n\tst.1\t4, r1\n\tadd\t@CPI18_1[0], r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.func_end18:\n\nfun_massUpdatePools:\n.func_begin19:\n\tnop\tstack+=[16]\n\tadd\t5, r0, r2\n\tsload\tr2, r1\n\tadd\tr1, r0, stack-[11]\n\tsub!\tr1, r0, r1\n\tjump.eq\t@.BB19_69\n\tadd\t32779, r0, r1\n\tadd\tr1, r0, stack-[10]\n\tadd\t32770, r0, r1\n\tadd\tr1, r0, stack-[1]\n\tadd\tr0, r0, r3\n\tadd\tr2, r0, stack-[9]\n\tjump\t@.BB19_2\n.BB19_27:\n\tsub!\tr2, r0, r2\n\tjump.eq\t@.BB19_5\n.BB19_7:\n\tld\tr1, r1\n\tadd\tstack-[13], r0, r2\n\tsstore\tr2, r1\n.BB19_68:\n\tadd\tstack-[14], r0, r3\n\tadd\t1, r3, r3\n\tadd\tstack-[11], r0, r1\n\tsub!\tr3, r1, r1\n\tadd\tstack-[9], r0, r2\n\tjump.ge\t@.BB19_69\n.BB19_2:\n\tsload\tr2, r1\n\tsub!\tr1, r3, r1\n\tjump.le\t@.BB19_3\n\tst.1\t0, r2\n\tadd\tr3, r0, stack-[14]\n\tmul\t5, r3, r2, r1\n\tadd\tr2, r0, stack-[16]\n\tadd\t@CPI19_2[0], r2, r1\n\tadd\tr1, r0, stack-[13]\n\tsload\tr1, r1\n\tadd\tr1, r0, stack-[15]\n\tadd\t@CPI19_3[0], r0, r1\n\tst.2\t0, r1\n\tadd\t@CPI19_4[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI19_4[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI19_5[0], r1, r1\n\tadd\tstack-[10], r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tadd\tstack-[16], r0, r3\n\tadd\t@CPI19_6[0], r3, r3\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB19_5\n\tld\tr1, r1\n\tadd\tstack-[15], r0, r2\n\tsub!\tr1, r2, r1\n\tjump.le\t@.BB19_68\n\tsload\tr3, r1\n\tadd\t@CPI19_7[0], r0, r2\n\tst.2\t0, r2\n\tand\t@CPI19_8[0], r1, r1\n\tadd\tr1, r0, stack-[15]\n\tst.2\t4, r1\n\tadd\t@CPI19_4[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI19_4[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI19_9[0], r1, r1\n\tadd\tstack-[1], r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB19_5\n\tld\tr1, r1\n\tsub!\tr1, r0, r1\n\tjump.eq\t@.BB19_5\n\tld.1\t64, r9\n\tadd\t@CPI19_10[0], r0, r1\n\tst.1\tr9, r1\n\tcontext.this\tr1\n\tand\t@CPI19_8[0], r1, r2\n\tadd\t4, r9, r1\n\tadd\tr2, r0, stack-[7]\n\tst.1\tr1, r2\n\tcontext.gas_left\tr1\n\tadd\tstack-[15], r0, r2\n\tsub.s!\t4, r2, r3\n\tjump.ne\t@.BB19_12\n\tadd\tstack[@returndatasize], r0, r3\n\tjump\t@.BB19_22\n.BB19_12:\n\tadd\t@CPI19_4[0], r0, r4\n\tsub.s!\t@CPI19_4[0], r1, r3\n\tadd.ge\tr4, r0, r1\n\tsub.s!\t@CPI19_4[0], r9, r3\n\tadd\tr4, r0, r3\n\tadd.lt\tr9, r0, r3\n\tshl.s\t64, r3, r3\n\tshl.s\t192, r1, r1\n\tor\tr1, r3, r1\n\tor\t@CPI19_1[0], r1, r1\n\tadd\tr9, r0, stack-[15]\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tadd\tstack-[15], r0, r9\n\tadd\tr1, r0, r3\n\tshr.s\t96, r3, r3\n\tand\t@CPI19_4[0], r3, r3\n\tsub.s!\t32, r3, r4\n\tadd\t32, r0, r5\n\tadd.lt\tr3, r0, r5\n\tshr.s!\t5, r5, r4\n\tjump.eq\t@.BB19_73\n\tadd\tr0, r0, r6\n.BB19_14:\n\tshl.s\t5, r6, r7\n\tadd\tr9, r7, r8\n\tptr.add\tr1, r7, r7\n\tld\tr7, r7\n\tst.1\tr8, r7\n\tadd\t1, r6, r6\n\tsub!\tr6, r4, r7\n\tjump.lt\t@.BB19_14\n.BB19_73:\n\tand!\t31, r5, r5\n\tjump.eq\t@.BB19_16\n\tshl.s\t5, r4, r4\n\tptr.add\tr1, r4, r6\n\tadd\tr9, r4, r4\n\tshl.s\t3, r5, r5\n\tld.1\tr4, r7\n\tshl\tr7, r5, r7\n\tshr\tr7, r5, r7\n\tld\tr6, r6\n\tsub\t256, r5, r5\n\tshr\tr6, r5, r6\n\tshl\tr6, r5, r5\n\tor\tr5, r7, r5\n\tst.1\tr4, r5\n.BB19_16:\n\tadd\tr3, r0, stack[@returndatasize]\n\tptr.add\tr1, r0, stack[@ptr_return_data]\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB19_17\n.BB19_22:\n\tadd\t31, r3, r1\n\tsub.s\t32, r0, r2\n\tadd\tr2, r0, stack-[12]\n\tand\tr1, r2, r2\n\tadd\tr2, r9, r1\n\tsub!\tr1, r2, r2\n\tadd\t0, r0, r2\n\tadd.lt\t1, r0, r2\n\tsub.s!\t@CPI19_11[0], r1, r3\n\tjump.gt\t@.BB19_24\n\tand!\t1, r2, r2\n\tjump.ne\t@.BB19_24\n\tst.1\t64, r1\n\tadd\t@CPI19_12[0], r0, r1\n\tadd\tstack[@returndatasize], r0, r2\n\tsub.s!\t32, r2, r3\n\tadd\tr0, r0, r3\n\tadd.lt\tr1, r0, r3\n\tand\t@CPI19_12[0], r2, r2\n\tsub!\tr2, r0, r4\n\tadd.le\tr0, r0, r1\n\tsub.s!\t@CPI19_12[0], r2, r2\n\tadd.ne\tr3, r0, r1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB19_5\n\tld.1\tr9, r1\n\tadd\tr1, r0, stack-[15]\n\tadd\t@CPI19_3[0], r0, r1\n\tst.2\t0, r1\n\tadd\t@CPI19_4[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI19_4[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI19_5[0], r1, r1\n\tadd\t32779, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tadd\tstack-[15], r0, r3\n\tsub!\tr3, r0, r3\n\tand\t1, r2, r2\n\tjump.eq\t@.BB19_27\n\tsub!\tr2, r0, r2\n\tjump.eq\t@.BB19_5\n\tadd\tstack-[13], r0, r2\n\tsload\tr2, r3\n\tld\tr1, r4\n\tsub!\tr4, r3, r1\n\tjump.lt\t@.BB19_30\n\tsub\tr4, r3, r1\n\tadd\t4, r0, r2\n\tsload\tr2, r2\n\tsub!\tr4, r3, r3\n\tjump.eq\t@.BB19_33\n\tsub.s\t1, r0, r3\n\tdiv\tr3, r1, r3, r4\n\tsub!\tr3, r2, r3\n\tjump.lt\t@.BB19_30\n.BB19_33:\n\tmul!\tr2, r1, r1, r2\n\tadd\t3, r0, r2\n\tsload\tr2, r2\n\tjump.eq\t@.BB19_35\n\tsub.s\t1, r0, r3\n\tdiv\tr3, r1, r3, r4\n\tsub!\tr3, r2, r3\n\tjump.lt\t@.BB19_30\n.BB19_35:\n\tmul!\tr2, r1, r3, r1\n\tadd\tstack-[16], r0, r1\n\tadd\t@CPI19_13[0], r1, r1\n\tsload\tr1, r4\n\tjump.eq\t@.BB19_37\n\tsub.s\t1, r0, r1\n\tdiv\tr1, r3, r1, r2\n\tsub!\tr1, r4, r1\n\tjump.lt\t@.BB19_30\n.BB19_37:\n\tadd\tr4, r0, stack-[5]\n\tadd\tr3, r0, stack-[6]\n\tadd\t7, r0, r1\n\tsload\tr1, r1\n\tadd\tr1, r0, stack-[4]\n\tsub!\tr1, r0, r1\n\tjump.eq\t@.BB19_38\n\tadd\t2, r0, r1\n\tsload\tr1, r1\n\tadd\tr1, r0, stack-[8]\n\tadd\t1, r0, r1\n\tadd\tr1, r0, stack-[2]\n\tsload\tr1, r1\n\tadd\t@CPI19_7[0], r0, r2\n\tst.2\t0, r2\n\tand\t@CPI19_8[0], r1, r1\n\tadd\tr1, r0, stack-[3]\n\tst.2\t4, r1\n\tadd\t@CPI19_4[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI19_4[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI19_9[0], r1, r1\n\tadd\t32770, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tadd\tstack-[8], r0, r3\n\tand\t@CPI19_8[0], r3, r3\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB19_5\n\tld\tr1, r1\n\tsub!\tr1, r0, r1\n\tjump.eq\t@.BB19_5\n\tadd\tstack-[6], r0, r1\n\tadd\tstack-[5], r0, r2\n\tmul\tr2, r1, r1, r2\n\tadd\tstack-[4], r0, r2\n\tdiv\tr1, r2, r2, r1\n\tadd\tr2, r0, stack-[8]\n\tdiv.s\t10, r2, r1, r2\n\tld.1\t64, r5\n\tadd\t36, r5, r2\n\tst.1\tr2, r1\n\tadd\t@CPI19_14[0], r0, r1\n\tst.1\tr5, r1\n\tadd\t4, r5, r1\n\tst.1\tr1, r3\n\tcontext.gas_left\tr1\n\tadd\tstack-[3], r0, r2\n\tsub.s!\t4, r2, r3\n\tjump.ne\t@.BB19_43\n\tadd\tstack[@returndatasize], r0, r4\n\tjump\t@.BB19_49\n.BB19_43:\n\tadd\t@CPI19_4[0], r0, r4\n\tsub.s!\t@CPI19_4[0], r1, r3\n\tadd.ge\tr4, r0, r1\n\tsub.s!\t@CPI19_4[0], r5, r3\n\tadd\tr4, r0, r3\n\tadd.lt\tr5, r0, r3\n\tshl.s\t64, r3, r3\n\tshl.s\t192, r1, r1\n\tor\tr1, r3, r1\n\tor\t@CPI19_15[0], r1, r1\n\tadd\tr5, r0, stack-[6]\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tadd\tstack-[6], r0, r5\n\tadd\tr1, r0, r3\n\tshr.s\t96, r3, r3\n\tand\t@CPI19_4[0], r3, stack[@returndatasize]\n\tand\t@CPI19_4[0], r3, r4\n\tptr.add\tr1, r0, stack[@ptr_return_data]\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB19_44\n.BB19_49:\n\tadd\t31, r4, r1\n\tadd\tstack-[12], r0, r2\n\tand\tr1, r2, r2\n\tadd\tr2, r5, r1\n\tsub!\tr1, r2, r2\n\tadd\t0, r0, r2\n\tadd.lt\t1, r0, r2\n\tsub.s!\t@CPI19_11[0], r1, r3\n\tjump.gt\t@.BB19_24\n\tand!\t1, r2, r2\n\tjump.ne\t@.BB19_24\n\tst.1\t64, r1\n\tadd\t@CPI19_12[0], r0, r1\n\tadd\tstack[@returndatasize], r0, r2\n\tsub!\tr2, r0, r3\n\tadd\tr0, r0, r3\n\tadd.lt\tr1, r0, r3\n\tand\t@CPI19_12[0], r2, r2\n\tsub!\tr2, r0, r4\n\tadd.le\tr0, r0, r1\n\tsub.s!\t@CPI19_12[0], r2, r2\n\tadd.ne\tr3, r0, r1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB19_5\n\tadd\tstack-[2], r0, r1\n\tsload\tr1, r1\n\tadd\t@CPI19_7[0], r0, r2\n\tst.2\t0, r2\n\tand\t@CPI19_8[0], r1, r1\n\tadd\tr1, r0, stack-[6]\n\tst.2\t4, r1\n\tadd\t@CPI19_4[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI19_4[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI19_9[0], r1, r1\n\tadd\t32770, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB19_5\n\tld\tr1, r1\n\tsub!\tr1, r0, r1\n\tjump.eq\t@.BB19_5\n\tld.1\t64, r5\n\tadd\t36, r5, r1\n\tadd\tstack-[8], r0, r2\n\tst.1\tr1, r2\n\tadd\t@CPI19_14[0], r0, r1\n\tst.1\tr5, r1\n\tadd\t4, r5, r1\n\tadd\tstack-[7], r0, r2\n\tst.1\tr1, r2\n\tcontext.gas_left\tr1\n\tadd\tstack-[6], r0, r2\n\tsub.s!\t4, r2, r3\n\tjump.ne\t@.BB19_56\n\tadd\tstack[@returndatasize], r0, r4\n\tjump\t@.BB19_62\n.BB19_56:\n\tadd\t@CPI19_4[0], r0, r4\n\tsub.s!\t@CPI19_4[0], r1, r3\n\tadd.ge\tr4, r0, r1\n\tsub.s!\t@CPI19_4[0], r5, r3\n\tadd\tr4, r0, r3\n\tadd.lt\tr5, r0, r3\n\tshl.s\t64, r3, r3\n\tshl.s\t192, r1, r1\n\tor\tr1, r3, r1\n\tor\t@CPI19_15[0], r1, r1\n\tadd\tr5, r0, stack-[7]\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tadd\tstack-[7], r0, r5\n\tadd\tr1, r0, r3\n\tshr.s\t96, r3, r3\n\tand\t@CPI19_4[0], r3, stack[@returndatasize]\n\tand\t@CPI19_4[0], r3, r4\n\tptr.add\tr1, r0, stack[@ptr_return_data]\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB19_57\n.BB19_62:\n\tadd\t31, r4, r1\n\tadd\tstack-[12], r0, r2\n\tand\tr1, r2, r2\n\tadd\tr2, r5, r1\n\tsub!\tr1, r2, r2\n\tadd\t0, r0, r2\n\tadd.lt\t1, r0, r2\n\tsub.s!\t@CPI19_11[0], r1, r3\n\tjump.gt\t@.BB19_24\n\tand!\t1, r2, r2\n\tjump.ne\t@.BB19_24\n\tst.1\t64, r1\n\tadd\t@CPI19_12[0], r0, r1\n\tadd\tstack[@returndatasize], r0, r2\n\tsub!\tr2, r0, r3\n\tadd\tr0, r0, r3\n\tadd.lt\tr1, r0, r3\n\tand\t@CPI19_12[0], r2, r2\n\tsub!\tr2, r0, r4\n\tadd.le\tr0, r0, r1\n\tsub.s!\t@CPI19_12[0], r2, r2\n\tadd.ne\tr3, r0, r1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB19_5\n\tadd\tstack-[16], r0, r1\n\tadd\t@CPI19_16[0], r1, r1\n\tsload\tr1, r2\n\tadd\tstack-[8], r0, r4\n\tsub.s!\t@CPI19_17[0], r4, r3\n\tjump.gt\t@.BB19_30\n\tmul\t@CPI19_18[0], r4, r3, r4\n\tadd\tstack-[15], r0, r4\n\tdiv\tr3, r4, r3, r4\n\tsub.s\t1, r0, r4\n\txor\tr3, r4, r4\n\tsub!\tr2, r4, r4\n\tjump.gt\t@.BB19_30\n\tadd\tr3, r2, r2\n\tsstore\tr1, r2\n\tadd\t@CPI19_3[0], r0, r1\n\tst.2\t0, r1\n\tadd\t@CPI19_4[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI19_4[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI19_5[0], r1, r1\n\tadd\t32779, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.ne\t@.BB19_7\n.BB19_5:\n\tadd\tr0, r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB19_69:\n\tret\n.BB19_30:\n\tadd\t@CPI19_0[0], r0, r1\n\tst.1\t0, r1\n\tadd\t17, r0, r1\n\tst.1\t4, r1\n\tadd\t@CPI19_1[0], r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB19_24:\n\tadd\t@CPI19_0[0], r0, r1\n\tst.1\t0, r1\n\tadd\t65, r0, r1\n\tst.1\t4, r1\n\tadd\t@CPI19_1[0], r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB19_3:\n\tadd\t@CPI19_0[0], r0, r1\n\tst.1\t0, r1\n\tadd\t50, r0, r1\n\tst.1\t4, r1\n\tadd\t@CPI19_1[0], r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB19_38:\n\tadd\t@CPI19_0[0], r0, r1\n\tst.1\t0, r1\n\tadd\t18, r0, r1\n\tst.1\t4, r1\n\tadd\t@CPI19_1[0], r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB19_17:\n\tld.1\t64, r2\n\tand\t31, r3, r4\n\tshr.s!\t5, r3, r3\n\tjump.eq\t@.BB19_72\n\tadd\tr0, r0, r5\n.BB19_19:\n\tshl.s\t5, r5, r6\n\tadd\tr2, r6, r7\n\tptr.add\tr1, r6, r6\n\tld\tr6, r6\n\tst.1\tr7, r6\n\tadd\t1, r5, r5\n\tsub!\tr5, r3, r6\n\tjump.lt\t@.BB19_19\n.BB19_72:\n\tsub!\tr4, r0, r5\n\tjump.eq\t@.BB19_21\n\tshl.s\t5, r3, r3\n\tptr.add\tr1, r3, r1\n\tadd\tr2, r3, r3\n\tshl.s\t3, r4, r4\n\tld.1\tr3, r5\n\tshl\tr5, r4, r5\n\tshr\tr5, r4, r5\n\tld\tr1, r1\n\tsub\t256, r4, r4\n\tshr\tr1, r4, r1\n\tshl\tr1, r4, r1\n\tor\tr1, r5, r1\n\tst.1\tr3, r1\n.BB19_21:\n\tadd\t@CPI19_4[0], r0, r1\n\tadd\tstack[@returndatasize], r0, r3\n\tsub.s!\t@CPI19_4[0], r3, r4\n\tadd.ge\tr1, r0, r3\n\tsub.s!\t@CPI19_4[0], r2, r4\n\tadd.lt\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tshl.s\t96, r3, r2\n\tor\tr2, r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB19_57:\n\tld.1\t64, r2\n\tand\t31, r4, r3\n\tshr.s!\t5, r4, r4\n\tjump.eq\t@.BB19_70\n\tadd\tr0, r0, r5\n.BB19_59:\n\tshl.s\t5, r5, r6\n\tadd\tr2, r6, r7\n\tptr.add\tr1, r6, r6\n\tld\tr6, r6\n\tst.1\tr7, r6\n\tadd\t1, r5, r5\n\tsub!\tr5, r4, r6\n\tjump.lt\t@.BB19_59\n.BB19_70:\n\tsub!\tr3, r0, r5\n\tjump.eq\t@.BB19_61\n\tshl.s\t5, r4, r4\n\tptr.add\tr1, r4, r1\n\tadd\tr2, r4, r4\n\tshl.s\t3, r3, r3\n\tld.1\tr4, r5\n\tshl\tr5, r3, r5\n\tshr\tr5, r3, r5\n\tld\tr1, r1\n\tsub\t256, r3, r3\n\tshr\tr1, r3, r1\n\tshl\tr1, r3, r1\n\tor\tr1, r5, r1\n\tst.1\tr4, r1\n.BB19_61:\n\tadd\t@CPI19_4[0], r0, r1\n\tadd\tstack[@returndatasize], r0, r3\n\tsub.s!\t@CPI19_4[0], r3, r4\n\tadd.ge\tr1, r0, r3\n\tsub.s!\t@CPI19_4[0], r2, r4\n\tadd.lt\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tshl.s\t96, r3, r2\n\tor\tr2, r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB19_44:\n\tld.1\t64, r2\n\tand\t31, r4, r3\n\tshr.s!\t5, r4, r4\n\tjump.eq\t@.BB19_71\n\tadd\tr0, r0, r5\n.BB19_46:\n\tshl.s\t5, r5, r6\n\tadd\tr2, r6, r7\n\tptr.add\tr1, r6, r6\n\tld\tr6, r6\n\tst.1\tr7, r6\n\tadd\t1, r5, r5\n\tsub!\tr5, r4, r6\n\tjump.lt\t@.BB19_46\n.BB19_71:\n\tsub!\tr3, r0, r5\n\tjump.eq\t@.BB19_48\n\tshl.s\t5, r4, r4\n\tptr.add\tr1, r4, r1\n\tadd\tr2, r4, r4\n\tshl.s\t3, r3, r3\n\tld.1\tr4, r5\n\tshl\tr5, r3, r5\n\tshr\tr5, r3, r5\n\tld\tr1, r1\n\tsub\t256, r3, r3\n\tshr\tr1, r3, r1\n\tshl\tr1, r3, r1\n\tor\tr1, r5, r1\n\tst.1\tr4, r1\n.BB19_48:\n\tadd\t@CPI19_4[0], r0, r1\n\tadd\tstack[@returndatasize], r0, r3\n\tsub.s!\t@CPI19_4[0], r3, r4\n\tadd.ge\tr1, r0, r3\n\tsub.s!\t@CPI19_4[0], r2, r4\n\tadd.lt\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tshl.s\t96, r3, r2\n\tor\tr2, r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.func_end19:\n\nfun_updatePool:\n.func_begin20:\n\tnop\tstack+=[11]\n\tadd\t5, r0, r2\n\tsload\tr2, r3\n\tsub!\tr3, r1, r3\n\tjump.le\t@.BB20_1\n\tst.1\t0, r2\n\tmul\t5, r1, r2, r1\n\tadd\tr2, r0, stack-[11]\n\tadd\t@CPI20_2[0], r2, r1\n\tadd\tr1, r0, stack-[9]\n\tsload\tr1, r1\n\tadd\tr1, r0, stack-[10]\n\tadd\t@CPI20_3[0], r0, r1\n\tst.2\t0, r1\n\tadd\t@CPI20_4[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI20_4[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI20_5[0], r1, r1\n\tadd\t32779, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tadd\tstack-[11], r0, r3\n\tadd\t@CPI20_6[0], r3, r3\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB20_3\n\tld\tr1, r1\n\tadd\tstack-[10], r0, r2\n\tsub!\tr1, r2, r1\n\tjump.le\t@.BB20_6\n\tsload\tr3, r1\n\tadd\t@CPI20_7[0], r0, r2\n\tst.2\t0, r2\n\tand\t@CPI20_8[0], r1, r1\n\tadd\tr1, r0, stack-[10]\n\tst.2\t4, r1\n\tadd\t@CPI20_4[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI20_4[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI20_9[0], r1, r1\n\tadd\t32770, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB20_3\n\tld\tr1, r1\n\tsub!\tr1, r0, r1\n\tjump.eq\t@.BB20_3\n\tld.1\t64, r9\n\tadd\t@CPI20_10[0], r0, r1\n\tst.1\tr9, r1\n\tcontext.this\tr1\n\tand\t@CPI20_8[0], r1, r2\n\tadd\t4, r9, r1\n\tadd\tr2, r0, stack-[6]\n\tst.1\tr1, r2\n\tcontext.gas_left\tr1\n\tadd\tstack-[10], r0, r2\n\tsub.s!\t4, r2, r3\n\tjump.ne\t@.BB20_11\n\tadd\tstack[@returndatasize], r0, r3\n\tjump\t@.BB20_21\n.BB20_11:\n\tadd\t@CPI20_4[0], r0, r4\n\tsub.s!\t@CPI20_4[0], r1, r3\n\tadd.ge\tr4, r0, r1\n\tsub.s!\t@CPI20_4[0], r9, r3\n\tadd\tr4, r0, r3\n\tadd.lt\tr9, r0, r3\n\tshl.s\t64, r3, r3\n\tshl.s\t192, r1, r1\n\tor\tr1, r3, r1\n\tor\t@CPI20_1[0], r1, r1\n\tadd\tr9, r0, stack-[10]\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tadd\tstack-[10], r0, r9\n\tadd\tr1, r0, r3\n\tshr.s\t96, r3, r3\n\tand\t@CPI20_4[0], r3, r3\n\tsub.s!\t32, r3, r4\n\tadd\t32, r0, r5\n\tadd.lt\tr3, r0, r5\n\tand\t31, r5, r4\n\tshr.s!\t5, r5, r5\n\tjump.eq\t@.BB20_70\n\tadd\tr0, r0, r6\n.BB20_13:\n\tshl.s\t5, r6, r7\n\tadd\tr9, r7, r8\n\tptr.add\tr1, r7, r7\n\tld\tr7, r7\n\tst.1\tr8, r7\n\tadd\t1, r6, r6\n\tsub!\tr6, r5, r7\n\tjump.lt\t@.BB20_13\n.BB20_70:\n\tsub!\tr4, r0, r6\n\tjump.eq\t@.BB20_15\n\tshl.s\t5, r5, r5\n\tptr.add\tr1, r5, r6\n\tadd\tr9, r5, r5\n\tshl.s\t3, r4, r4\n\tld.1\tr5, r7\n\tshl\tr7, r4, r7\n\tshr\tr7, r4, r7\n\tld\tr6, r6\n\tsub\t256, r4, r4\n\tshr\tr6, r4, r6\n\tshl\tr6, r4, r4\n\tor\tr4, r7, r4\n\tst.1\tr5, r4\n.BB20_15:\n\tadd\tr3, r0, stack[@returndatasize]\n\tptr.add\tr1, r0, stack[@ptr_return_data]\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB20_16\n.BB20_21:\n\tadd\t31, r3, r1\n\tsub.s\t32, r0, r2\n\tadd\tr2, r0, stack-[8]\n\tand\tr1, r2, r2\n\tadd\tr2, r9, r1\n\tsub!\tr1, r2, r2\n\tadd\t0, r0, r2\n\tadd.lt\t1, r0, r2\n\tsub.s!\t@CPI20_11[0], r1, r3\n\tjump.gt\t@.BB20_23\n\tand!\t1, r2, r2\n\tjump.ne\t@.BB20_23\n\tst.1\t64, r1\n\tadd\t@CPI20_12[0], r0, r1\n\tadd\tstack[@returndatasize], r0, r2\n\tsub.s!\t32, r2, r3\n\tadd\tr0, r0, r3\n\tadd.lt\tr1, r0, r3\n\tand\t@CPI20_12[0], r2, r2\n\tsub!\tr2, r0, r4\n\tadd.le\tr0, r0, r1\n\tsub.s!\t@CPI20_12[0], r2, r2\n\tadd.ne\tr3, r0, r1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB20_3\n\tld.1\tr9, r1\n\tadd\tr1, r0, stack-[10]\n\tadd\t@CPI20_3[0], r0, r1\n\tst.2\t0, r1\n\tadd\t@CPI20_4[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI20_4[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI20_5[0], r1, r1\n\tadd\t32779, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tadd\tstack-[10], r0, r3\n\tsub!\tr3, r0, r3\n\tand\t1, r2, r2\n\tjump.eq\t@.BB20_26\n\tsub!\tr2, r0, r2\n\tjump.eq\t@.BB20_3\n\tadd\tstack-[9], r0, r2\n\tsload\tr2, r3\n\tld\tr1, r4\n\tsub!\tr4, r3, r1\n\tjump.lt\t@.BB20_29\n\tsub\tr4, r3, r1\n\tadd\t4, r0, r2\n\tsload\tr2, r2\n\tsub!\tr4, r3, r3\n\tjump.eq\t@.BB20_32\n\tsub.s\t1, r0, r3\n\tdiv\tr3, r1, r3, r4\n\tsub!\tr3, r2, r3\n\tjump.lt\t@.BB20_29\n.BB20_32:\n\tmul!\tr2, r1, r1, r2\n\tadd\t3, r0, r2\n\tsload\tr2, r2\n\tjump.eq\t@.BB20_34\n\tsub.s\t1, r0, r3\n\tdiv\tr3, r1, r3, r4\n\tsub!\tr3, r2, r3\n\tjump.lt\t@.BB20_29\n.BB20_34:\n\tmul!\tr2, r1, r3, r1\n\tadd\tstack-[11], r0, r1\n\tadd\t@CPI20_13[0], r1, r1\n\tsload\tr1, r4\n\tjump.eq\t@.BB20_36\n\tsub.s\t1, r0, r1\n\tdiv\tr1, r3, r1, r2\n\tsub!\tr1, r4, r1\n\tjump.lt\t@.BB20_29\n.BB20_36:\n\tadd\tr4, r0, stack-[4]\n\tadd\tr3, r0, stack-[5]\n\tadd\t7, r0, r1\n\tsload\tr1, r1\n\tadd\tr1, r0, stack-[3]\n\tsub!\tr1, r0, r1\n\tjump.eq\t@.BB20_37\n\tadd\t2, r0, r1\n\tsload\tr1, r1\n\tadd\tr1, r0, stack-[7]\n\tadd\t1, r0, r1\n\tadd\tr1, r0, stack-[1]\n\tsload\tr1, r1\n\tadd\t@CPI20_7[0], r0, r2\n\tst.2\t0, r2\n\tand\t@CPI20_8[0], r1, r1\n\tadd\tr1, r0, stack-[2]\n\tst.2\t4, r1\n\tadd\t@CPI20_4[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI20_4[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI20_9[0], r1, r1\n\tadd\t32770, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tadd\tstack-[7], r0, r3\n\tand\t@CPI20_8[0], r3, r3\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB20_3\n\tld\tr1, r1\n\tsub!\tr1, r0, r1\n\tjump.eq\t@.BB20_3\n\tadd\tstack-[5], r0, r1\n\tadd\tstack-[4], r0, r2\n\tmul\tr2, r1, r1, r2\n\tadd\tstack-[3], r0, r2\n\tdiv\tr1, r2, r2, r1\n\tadd\tr2, r0, stack-[7]\n\tdiv.s\t10, r2, r1, r2\n\tld.1\t64, r5\n\tadd\t36, r5, r2\n\tst.1\tr2, r1\n\tadd\t@CPI20_14[0], r0, r1\n\tst.1\tr5, r1\n\tadd\t4, r5, r1\n\tst.1\tr1, r3\n\tcontext.gas_left\tr1\n\tadd\tstack-[2], r0, r2\n\tsub.s!\t4, r2, r3\n\tjump.ne\t@.BB20_42\n\tadd\tstack[@returndatasize], r0, r4\n\tjump\t@.BB20_48\n.BB20_26:\n\tsub!\tr2, r0, r2\n\tjump.ne\t@.BB20_5\n\tjump\t@.BB20_3\n.BB20_42:\n\tadd\t@CPI20_4[0], r0, r4\n\tsub.s!\t@CPI20_4[0], r1, r3\n\tadd.ge\tr4, r0, r1\n\tsub.s!\t@CPI20_4[0], r5, r3\n\tadd\tr4, r0, r3\n\tadd.lt\tr5, r0, r3\n\tshl.s\t64, r3, r3\n\tshl.s\t192, r1, r1\n\tor\tr1, r3, r1\n\tor\t@CPI20_15[0], r1, r1\n\tadd\tr5, r0, stack-[5]\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tadd\tstack-[5], r0, r5\n\tadd\tr1, r0, r3\n\tshr.s\t96, r3, r3\n\tand\t@CPI20_4[0], r3, stack[@returndatasize]\n\tand\t@CPI20_4[0], r3, r4\n\tptr.add\tr1, r0, stack[@ptr_return_data]\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB20_43\n.BB20_48:\n\tadd\t31, r4, r1\n\tadd\tstack-[8], r0, r2\n\tand\tr1, r2, r2\n\tadd\tr2, r5, r1\n\tsub!\tr1, r2, r2\n\tadd\t0, r0, r2\n\tadd.lt\t1, r0, r2\n\tsub.s!\t@CPI20_11[0], r1, r3\n\tjump.gt\t@.BB20_23\n\tand!\t1, r2, r2\n\tjump.ne\t@.BB20_23\n\tst.1\t64, r1\n\tadd\t@CPI20_12[0], r0, r1\n\tadd\tstack[@returndatasize], r0, r2\n\tsub!\tr2, r0, r3\n\tadd\tr0, r0, r3\n\tadd.lt\tr1, r0, r3\n\tand\t@CPI20_12[0], r2, r2\n\tsub!\tr2, r0, r4\n\tadd.le\tr0, r0, r1\n\tsub.s!\t@CPI20_12[0], r2, r2\n\tadd.ne\tr3, r0, r1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB20_3\n\tadd\tstack-[1], r0, r1\n\tsload\tr1, r1\n\tadd\t@CPI20_7[0], r0, r2\n\tst.2\t0, r2\n\tand\t@CPI20_8[0], r1, r1\n\tadd\tr1, r0, stack-[5]\n\tst.2\t4, r1\n\tadd\t@CPI20_4[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI20_4[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI20_9[0], r1, r1\n\tadd\t32770, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB20_3\n\tld\tr1, r1\n\tsub!\tr1, r0, r1\n\tjump.eq\t@.BB20_3\n\tld.1\t64, r5\n\tadd\t36, r5, r1\n\tadd\tstack-[7], r0, r2\n\tst.1\tr1, r2\n\tadd\t@CPI20_14[0], r0, r1\n\tst.1\tr5, r1\n\tadd\t4, r5, r1\n\tadd\tstack-[6], r0, r2\n\tst.1\tr1, r2\n\tcontext.gas_left\tr1\n\tadd\tstack-[5], r0, r2\n\tsub.s!\t4, r2, r3\n\tjump.ne\t@.BB20_55\n\tadd\tstack[@returndatasize], r0, r4\n\tjump\t@.BB20_61\n.BB20_55:\n\tadd\t@CPI20_4[0], r0, r4\n\tsub.s!\t@CPI20_4[0], r1, r3\n\tadd.ge\tr4, r0, r1\n\tsub.s!\t@CPI20_4[0], r5, r3\n\tadd\tr4, r0, r3\n\tadd.lt\tr5, r0, r3\n\tshl.s\t64, r3, r3\n\tshl.s\t192, r1, r1\n\tor\tr1, r3, r1\n\tor\t@CPI20_15[0], r1, r1\n\tadd\tr5, r0, stack-[6]\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tadd\tstack-[6], r0, r5\n\tadd\tr1, r0, r3\n\tshr.s\t96, r3, r3\n\tand\t@CPI20_4[0], r3, stack[@returndatasize]\n\tand\t@CPI20_4[0], r3, r4\n\tptr.add\tr1, r0, stack[@ptr_return_data]\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB20_56\n.BB20_61:\n\tadd\t31, r4, r1\n\tadd\tstack-[8], r0, r2\n\tand\tr1, r2, r2\n\tadd\tr2, r5, r1\n\tsub!\tr1, r2, r2\n\tadd\t0, r0, r2\n\tadd.lt\t1, r0, r2\n\tsub.s!\t@CPI20_11[0], r1, r3\n\tjump.gt\t@.BB20_23\n\tand!\t1, r2, r2\n\tjump.ne\t@.BB20_23\n\tst.1\t64, r1\n\tadd\t@CPI20_12[0], r0, r1\n\tadd\tstack[@returndatasize], r0, r2\n\tsub!\tr2, r0, r3\n\tadd\tr0, r0, r3\n\tadd.lt\tr1, r0, r3\n\tand\t@CPI20_12[0], r2, r2\n\tsub!\tr2, r0, r4\n\tadd.le\tr0, r0, r1\n\tsub.s!\t@CPI20_12[0], r2, r2\n\tadd.ne\tr3, r0, r1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB20_3\n\tadd\tstack-[11], r0, r1\n\tadd\t@CPI20_16[0], r1, r1\n\tsload\tr1, r2\n\tadd\tstack-[7], r0, r4\n\tsub.s!\t@CPI20_17[0], r4, r3\n\tjump.gt\t@.BB20_29\n\tmul\t@CPI20_18[0], r4, r3, r4\n\tadd\tstack-[10], r0, r4\n\tdiv\tr3, r4, r3, r4\n\tsub.s\t1, r0, r4\n\txor\tr3, r4, r4\n\tsub!\tr2, r4, r4\n\tjump.gt\t@.BB20_29\n\tadd\tr3, r2, r2\n\tsstore\tr1, r2\n\tadd\t@CPI20_3[0], r0, r1\n\tst.2\t0, r1\n\tadd\t@CPI20_4[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI20_4[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI20_5[0], r1, r1\n\tadd\t32779, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB20_3\n.BB20_5:\n\tld\tr1, r1\n\tadd\tstack-[9], r0, r2\n\tsstore\tr2, r1\n.BB20_6:\n\tret\n.BB20_3:\n\tadd\tr0, r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB20_29:\n\tadd\t@CPI20_0[0], r0, r1\n\tst.1\t0, r1\n\tadd\t17, r0, r1\n\tst.1\t4, r1\n\tadd\t@CPI20_1[0], r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB20_23:\n\tadd\t@CPI20_0[0], r0, r1\n\tst.1\t0, r1\n\tadd\t65, r0, r1\n\tst.1\t4, r1\n\tadd\t@CPI20_1[0], r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB20_1:\n\tadd\t@CPI20_0[0], r0, r1\n\tst.1\t0, r1\n\tadd\t50, r0, r1\n\tst.1\t4, r1\n\tadd\t@CPI20_1[0], r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB20_37:\n\tadd\t@CPI20_0[0], r0, r1\n\tst.1\t0, r1\n\tadd\t18, r0, r1\n\tst.1\t4, r1\n\tadd\t@CPI20_1[0], r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB20_16:\n\tld.1\t64, r2\n\tand\t31, r3, r4\n\tshr.s!\t5, r3, r3\n\tjump.eq\t@.BB20_69\n\tadd\tr0, r0, r5\n.BB20_18:\n\tshl.s\t5, r5, r6\n\tadd\tr2, r6, r7\n\tptr.add\tr1, r6, r6\n\tld\tr6, r6\n\tst.1\tr7, r6\n\tadd\t1, r5, r5\n\tsub!\tr5, r3, r6\n\tjump.lt\t@.BB20_18\n.BB20_69:\n\tsub!\tr4, r0, r5\n\tjump.eq\t@.BB20_20\n\tshl.s\t5, r3, r3\n\tptr.add\tr1, r3, r1\n\tadd\tr2, r3, r3\n\tshl.s\t3, r4, r4\n\tld.1\tr3, r5\n\tshl\tr5, r4, r5\n\tshr\tr5, r4, r5\n\tld\tr1, r1\n\tsub\t256, r4, r4\n\tshr\tr1, r4, r1\n\tshl\tr1, r4, r1\n\tor\tr1, r5, r1\n\tst.1\tr3, r1\n.BB20_20:\n\tadd\t@CPI20_4[0], r0, r1\n\tadd\tstack[@returndatasize], r0, r3\n\tsub.s!\t@CPI20_4[0], r3, r4\n\tadd.ge\tr1, r0, r3\n\tsub.s!\t@CPI20_4[0], r2, r4\n\tadd.lt\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tshl.s\t96, r3, r2\n\tor\tr2, r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB20_43:\n\tld.1\t64, r2\n\tand\t31, r4, r3\n\tshr.s!\t5, r4, r4\n\tjump.eq\t@.BB20_68\n\tadd\tr0, r0, r5\n.BB20_45:\n\tshl.s\t5, r5, r6\n\tadd\tr2, r6, r7\n\tptr.add\tr1, r6, r6\n\tld\tr6, r6\n\tst.1\tr7, r6\n\tadd\t1, r5, r5\n\tsub!\tr5, r4, r6\n\tjump.lt\t@.BB20_45\n.BB20_68:\n\tsub!\tr3, r0, r5\n\tjump.eq\t@.BB20_47\n\tshl.s\t5, r4, r4\n\tptr.add\tr1, r4, r1\n\tadd\tr2, r4, r4\n\tshl.s\t3, r3, r3\n\tld.1\tr4, r5\n\tshl\tr5, r3, r5\n\tshr\tr5, r3, r5\n\tld\tr1, r1\n\tsub\t256, r3, r3\n\tshr\tr1, r3, r1\n\tshl\tr1, r3, r1\n\tor\tr1, r5, r1\n\tst.1\tr4, r1\n.BB20_47:\n\tadd\t@CPI20_4[0], r0, r1\n\tadd\tstack[@returndatasize], r0, r3\n\tsub.s!\t@CPI20_4[0], r3, r4\n\tadd.ge\tr1, r0, r3\n\tsub.s!\t@CPI20_4[0], r2, r4\n\tadd.lt\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tshl.s\t96, r3, r2\n\tor\tr2, r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB20_56:\n\tld.1\t64, r2\n\tand\t31, r4, r3\n\tshr.s!\t5, r4, r4\n\tjump.eq\t@.BB20_67\n\tadd\tr0, r0, r5\n.BB20_58:\n\tshl.s\t5, r5, r6\n\tadd\tr2, r6, r7\n\tptr.add\tr1, r6, r6\n\tld\tr6, r6\n\tst.1\tr7, r6\n\tadd\t1, r5, r5\n\tsub!\tr5, r4, r6\n\tjump.lt\t@.BB20_58\n.BB20_67:\n\tsub!\tr3, r0, r5\n\tjump.eq\t@.BB20_60\n\tshl.s\t5, r4, r4\n\tptr.add\tr1, r4, r1\n\tadd\tr2, r4, r4\n\tshl.s\t3, r3, r3\n\tld.1\tr4, r5\n\tshl\tr5, r3, r5\n\tshr\tr5, r3, r5\n\tld\tr1, r1\n\tsub\t256, r3, r3\n\tshr\tr1, r3, r1\n\tshl\tr1, r3, r1\n\tor\tr1, r5, r1\n\tst.1\tr4, r1\n.BB20_60:\n\tadd\t@CPI20_4[0], r0, r1\n\tadd\tstack[@returndatasize], r0, r3\n\tsub.s!\t@CPI20_4[0], r3, r4\n\tadd.ge\tr1, r0, r3\n\tsub.s!\t@CPI20_4[0], r2, r4\n\tadd.lt\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tshl.s\t96, r3, r2\n\tor\tr2, r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.func_end20:\n\nfun_deposit:\n.func_begin21:\n\tnop\tstack+=[17]\n\tadd\tr2, r0, stack-[16]\n\tsub!\tr1, r0, r2\n\tjump.eq\t@.BB21_1\n\tadd\t5, r0, r3\n\tsload\tr3, r2\n\tsub!\tr2, r1, r2\n\tjump.le\t@.BB21_3\n\tadd\tr3, r0, stack-[13]\n\tst.1\t0, r1\n\tadd\t6, r0, r2\n\tst.1\t32, r2\n\tadd\t@CPI21_0[0], r0, r4\n\tadd\tr1, r0, stack-[14]\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI21_0[0], r2, r3\n\tadd\tr4, r0, r1\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI21_1[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tadd\tstack-[14], r0, r3\n\tmul\t5, r3, r4, r3\n\tadd\tr4, r0, stack-[17]\n\tadd\t@CPI21_2[0], r4, r3\n\tadd\tr3, r0, stack-[12]\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB21_5\n\tld\tr1, r1\n\tcontext.caller\tr2\n\tadd\tr2, r0, stack-[11]\n\tand\t@CPI21_3[0], r2, r2\n\tadd\tr2, r0, stack-[10]\n\tst.1\t0, r2\n\tst.1\t32, r1\n\tadd\t@CPI21_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI21_0[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI21_1[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB21_5\n\tld\tr1, r1\n\tadd\tr1, r0, stack-[15]\n\tadd\tstack-[13], r0, r3\n\tsload\tr3, r1\n\tadd\tstack-[14], r0, r2\n\tsub!\tr1, r2, r1\n\tjump.le\t@.BB21_3\n\tst.1\t0, r3\n\tadd\tstack-[17], r0, r1\n\tadd\t@CPI21_6[0], r1, r1\n\tadd\tr1, r0, stack-[9]\n\tsload\tr1, r1\n\tadd\tr1, r0, stack-[13]\n\tadd\t@CPI21_7[0], r0, r1\n\tst.2\t0, r1\n\tadd\t@CPI21_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI21_0[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI21_8[0], r1, r1\n\tadd\t32779, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB21_5\n\tld\tr1, r1\n\tadd\tstack-[13], r0, r2\n\tsub!\tr1, r2, r1\n\tjump.le\t@.BB21_71\n\tadd\tstack-[12], r0, r1\n\tsload\tr1, r1\n\tadd\t@CPI21_9[0], r0, r2\n\tst.2\t0, r2\n\tand\t@CPI21_3[0], r1, r1\n\tadd\tr1, r0, stack-[13]\n\tst.2\t4, r1\n\tadd\t@CPI21_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI21_0[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI21_10[0], r1, r1\n\tadd\t32770, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB21_5\n\tld\tr1, r1\n\tsub!\tr1, r0, r1\n\tjump.eq\t@.BB21_5\n\tld.1\t64, r9\n\tadd\t@CPI21_11[0], r0, r1\n\tst.1\tr9, r1\n\tcontext.this\tr1\n\tand\t@CPI21_3[0], r1, r2\n\tadd\t4, r9, r1\n\tadd\tr2, r0, stack-[6]\n\tst.1\tr1, r2\n\tcontext.gas_left\tr1\n\tadd\tstack-[13], r0, r2\n\tsub.s!\t4, r2, r3\n\tjump.ne\t@.BB21_15\n\tadd\tstack[@returndatasize], r0, r3\n\tjump\t@.BB21_25\n.BB21_15:\n\tadd\t@CPI21_0[0], r0, r4\n\tsub.s!\t@CPI21_0[0], r1, r3\n\tadd.ge\tr4, r0, r1\n\tsub.s!\t@CPI21_0[0], r9, r3\n\tadd\tr4, r0, r3\n\tadd.lt\tr9, r0, r3\n\tshl.s\t64, r3, r3\n\tshl.s\t192, r1, r1\n\tor\tr1, r3, r1\n\tor\t@CPI21_5[0], r1, r1\n\tadd\tr9, r0, stack-[13]\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tadd\tstack-[13], r0, r9\n\tadd\tr1, r0, r3\n\tshr.s\t96, r3, r3\n\tand\t@CPI21_0[0], r3, r3\n\tsub.s!\t32, r3, r4\n\tadd\t32, r0, r5\n\tadd.lt\tr3, r0, r5\n\tand\t31, r5, r4\n\tshr.s!\t5, r5, r5\n\tjump.eq\t@.BB21_177\n\tadd\tr0, r0, r6\n.BB21_17:\n\tshl.s\t5, r6, r7\n\tadd\tr9, r7, r8\n\tptr.add\tr1, r7, r7\n\tld\tr7, r7\n\tst.1\tr8, r7\n\tadd\t1, r6, r6\n\tsub!\tr6, r5, r7\n\tjump.lt\t@.BB21_17\n.BB21_177:\n\tsub!\tr4, r0, r6\n\tjump.eq\t@.BB21_19\n\tshl.s\t5, r5, r5\n\tptr.add\tr1, r5, r6\n\tadd\tr9, r5, r5\n\tshl.s\t3, r4, r4\n\tld.1\tr5, r7\n\tshl\tr7, r4, r7\n\tshr\tr7, r4, r7\n\tld\tr6, r6\n\tsub\t256, r4, r4\n\tshr\tr6, r4, r6\n\tshl\tr6, r4, r4\n\tor\tr4, r7, r4\n\tst.1\tr5, r4\n.BB21_19:\n\tadd\tr3, r0, stack[@returndatasize]\n\tptr.add\tr1, r0, stack[@ptr_return_data]\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB21_20\n.BB21_25:\n\tadd\t31, r3, r1\n\tsub.s\t32, r0, r2\n\tadd\tr2, r0, stack-[8]\n\tand\tr1, r2, r2\n\tadd\tr2, r9, r1\n\tsub!\tr1, r2, r2\n\tadd\t0, r0, r2\n\tadd.lt\t1, r0, r2\n\tsub.s!\t@CPI21_12[0], r1, r3\n\tjump.gt\t@.BB21_27\n\tand!\t1, r2, r2\n\tjump.ne\t@.BB21_27\n\tst.1\t64, r1\n\tadd\t@CPI21_13[0], r0, r1\n\tadd\tstack[@returndatasize], r0, r2\n\tsub.s!\t32, r2, r3\n\tadd\tr0, r0, r3\n\tadd.lt\tr1, r0, r3\n\tand\t@CPI21_13[0], r2, r2\n\tsub!\tr2, r0, r4\n\tadd.le\tr0, r0, r1\n\tsub.s!\t@CPI21_13[0], r2, r2\n\tadd.ne\tr3, r0, r1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB21_5\n\tld.1\tr9, r1\n\tadd\tr1, r0, stack-[13]\n\tadd\t@CPI21_7[0], r0, r1\n\tst.2\t0, r1\n\tadd\t@CPI21_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI21_0[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI21_8[0], r1, r1\n\tadd\t32779, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tadd\tstack-[13], r0, r3\n\tsub!\tr3, r0, r3\n\tand\t1, r2, r2\n\tjump.eq\t@.BB21_30\n\tsub!\tr2, r0, r2\n\tjump.eq\t@.BB21_5\n\tadd\tstack-[9], r0, r2\n\tsload\tr2, r3\n\tld\tr1, r4\n\tsub!\tr4, r3, r1\n\tjump.lt\t@.BB21_33\n\tsub\tr4, r3, r1\n\tadd\t4, r0, r2\n\tsload\tr2, r2\n\tsub!\tr4, r3, r3\n\tjump.eq\t@.BB21_36\n\tsub.s\t1, r0, r3\n\tdiv\tr3, r1, r3, r4\n\tsub!\tr3, r2, r3\n\tjump.lt\t@.BB21_33\n.BB21_36:\n\tmul!\tr2, r1, r1, r2\n\tadd\t3, r0, r2\n\tsload\tr2, r2\n\tjump.eq\t@.BB21_38\n\tsub.s\t1, r0, r3\n\tdiv\tr3, r1, r3, r4\n\tsub!\tr3, r2, r3\n\tjump.lt\t@.BB21_33\n.BB21_38:\n\tmul!\tr2, r1, r3, r1\n\tadd\tstack-[17], r0, r1\n\tadd\t@CPI21_14[0], r1, r1\n\tsload\tr1, r4\n\tjump.eq\t@.BB21_40\n\tsub.s\t1, r0, r1\n\tdiv\tr1, r3, r1, r2\n\tsub!\tr1, r4, r1\n\tjump.lt\t@.BB21_33\n.BB21_40:\n\tadd\tr4, r0, stack-[4]\n\tadd\tr3, r0, stack-[5]\n\tadd\t7, r0, r1\n\tsload\tr1, r1\n\tadd\tr1, r0, stack-[3]\n\tsub!\tr1, r0, r1\n\tjump.eq\t@.BB21_41\n\tadd\t2, r0, r1\n\tsload\tr1, r1\n\tadd\tr1, r0, stack-[7]\n\tadd\t1, r0, r1\n\tadd\tr1, r0, stack-[1]\n\tsload\tr1, r1\n\tadd\t@CPI21_9[0], r0, r2\n\tst.2\t0, r2\n\tand\t@CPI21_3[0], r1, r1\n\tadd\tr1, r0, stack-[2]\n\tst.2\t4, r1\n\tadd\t@CPI21_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI21_0[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI21_10[0], r1, r1\n\tadd\t32770, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tadd\tstack-[7], r0, r3\n\tand\t@CPI21_3[0], r3, r3\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB21_5\n\tld\tr1, r1\n\tsub!\tr1, r0, r1\n\tjump.eq\t@.BB21_5\n\tadd\tstack-[5], r0, r1\n\tadd\tstack-[4], r0, r2\n\tmul\tr2, r1, r1, r2\n\tadd\tstack-[3], r0, r2\n\tdiv\tr1, r2, r2, r1\n\tadd\tr2, r0, stack-[7]\n\tdiv.s\t10, r2, r1, r2\n\tld.1\t64, r5\n\tadd\t36, r5, r2\n\tst.1\tr2, r1\n\tadd\t@CPI21_15[0], r0, r1\n\tst.1\tr5, r1\n\tadd\t4, r5, r1\n\tst.1\tr1, r3\n\tcontext.gas_left\tr1\n\tadd\tstack-[2], r0, r2\n\tsub.s!\t4, r2, r3\n\tjump.ne\t@.BB21_46\n\tadd\tstack[@returndatasize], r0, r4\n\tjump\t@.BB21_52\n.BB21_30:\n\tsub!\tr2, r0, r2\n\tjump.ne\t@.BB21_10\n\tjump\t@.BB21_5\n.BB21_46:\n\tadd\t@CPI21_0[0], r0, r4\n\tsub.s!\t@CPI21_0[0], r1, r3\n\tadd.ge\tr4, r0, r1\n\tsub.s!\t@CPI21_0[0], r5, r3\n\tadd\tr4, r0, r3\n\tadd.lt\tr5, r0, r3\n\tshl.s\t64, r3, r3\n\tshl.s\t192, r1, r1\n\tor\tr1, r3, r1\n\tor\t@CPI21_16[0], r1, r1\n\tadd\tr5, r0, stack-[5]\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tadd\tstack-[5], r0, r5\n\tadd\tr1, r0, r3\n\tshr.s\t96, r3, r3\n\tand\t@CPI21_0[0], r3, stack[@returndatasize]\n\tand\t@CPI21_0[0], r3, r4\n\tptr.add\tr1, r0, stack[@ptr_return_data]\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB21_47\n.BB21_52:\n\tadd\t31, r4, r1\n\tadd\tstack-[8], r0, r2\n\tand\tr1, r2, r2\n\tadd\tr2, r5, r1\n\tsub!\tr1, r2, r2\n\tadd\t0, r0, r2\n\tadd.lt\t1, r0, r2\n\tsub.s!\t@CPI21_12[0], r1, r3\n\tjump.gt\t@.BB21_27\n\tand!\t1, r2, r2\n\tjump.ne\t@.BB21_27\n\tst.1\t64, r1\n\tadd\t@CPI21_13[0], r0, r1\n\tadd\tstack[@returndatasize], r0, r2\n\tsub!\tr2, r0, r3\n\tadd\tr0, r0, r3\n\tadd.lt\tr1, r0, r3\n\tand\t@CPI21_13[0], r2, r2\n\tsub!\tr2, r0, r4\n\tadd.le\tr0, r0, r1\n\tsub.s!\t@CPI21_13[0], r2, r2\n\tadd.ne\tr3, r0, r1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB21_5\n\tadd\tstack-[1], r0, r1\n\tsload\tr1, r1\n\tadd\t@CPI21_9[0], r0, r2\n\tst.2\t0, r2\n\tand\t@CPI21_3[0], r1, r1\n\tadd\tr1, r0, stack-[5]\n\tst.2\t4, r1\n\tadd\t@CPI21_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI21_0[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI21_10[0], r1, r1\n\tadd\t32770, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB21_5\n\tld\tr1, r1\n\tsub!\tr1, r0, r1\n\tjump.eq\t@.BB21_5\n\tld.1\t64, r5\n\tadd\t36, r5, r1\n\tadd\tstack-[7], r0, r2\n\tst.1\tr1, r2\n\tadd\t@CPI21_15[0], r0, r1\n\tst.1\tr5, r1\n\tadd\t4, r5, r1\n\tadd\tstack-[6], r0, r2\n\tst.1\tr1, r2\n\tcontext.gas_left\tr1\n\tadd\tstack-[5], r0, r2\n\tsub.s!\t4, r2, r3\n\tjump.ne\t@.BB21_59\n\tadd\tstack[@returndatasize], r0, r4\n\tjump\t@.BB21_65\n.BB21_59:\n\tadd\t@CPI21_0[0], r0, r4\n\tsub.s!\t@CPI21_0[0], r1, r3\n\tadd.ge\tr4, r0, r1\n\tsub.s!\t@CPI21_0[0], r5, r3\n\tadd\tr4, r0, r3\n\tadd.lt\tr5, r0, r3\n\tshl.s\t64, r3, r3\n\tshl.s\t192, r1, r1\n\tor\tr1, r3, r1\n\tor\t@CPI21_16[0], r1, r1\n\tadd\tr5, r0, stack-[6]\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tadd\tstack-[6], r0, r5\n\tadd\tr1, r0, r3\n\tshr.s\t96, r3, r3\n\tand\t@CPI21_0[0], r3, stack[@returndatasize]\n\tand\t@CPI21_0[0], r3, r4\n\tptr.add\tr1, r0, stack[@ptr_return_data]\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB21_60\n.BB21_65:\n\tadd\t31, r4, r1\n\tadd\tstack-[8], r0, r2\n\tand\tr1, r2, r2\n\tadd\tr2, r5, r1\n\tsub!\tr1, r2, r2\n\tadd\t0, r0, r2\n\tadd.lt\t1, r0, r2\n\tsub.s!\t@CPI21_12[0], r1, r3\n\tjump.gt\t@.BB21_27\n\tand!\t1, r2, r2\n\tjump.ne\t@.BB21_27\n\tst.1\t64, r1\n\tadd\t@CPI21_13[0], r0, r1\n\tadd\tstack[@returndatasize], r0, r2\n\tsub!\tr2, r0, r3\n\tadd\tr0, r0, r3\n\tadd.lt\tr1, r0, r3\n\tand\t@CPI21_13[0], r2, r2\n\tsub!\tr2, r0, r4\n\tadd.le\tr0, r0, r1\n\tsub.s!\t@CPI21_13[0], r2, r2\n\tadd.ne\tr3, r0, r1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB21_5\n\tadd\tstack-[17], r0, r1\n\tadd\t@CPI21_17[0], r1, r1\n\tsload\tr1, r2\n\tadd\tstack-[7], r0, r4\n\tsub.s!\t@CPI21_18[0], r4, r3\n\tjump.gt\t@.BB21_33\n\tmul\t@CPI21_19[0], r4, r3, r4\n\tadd\tstack-[13], r0, r4\n\tdiv\tr3, r4, r3, r4\n\tsub.s\t1, r0, r4\n\txor\tr3, r4, r4\n\tsub!\tr2, r4, r4\n\tjump.gt\t@.BB21_33\n\tadd\tr3, r2, r2\n\tsstore\tr1, r2\n\tadd\t@CPI21_7[0], r0, r1\n\tst.2\t0, r1\n\tadd\t@CPI21_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI21_0[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI21_8[0], r1, r1\n\tadd\t32779, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB21_5\n.BB21_10:\n\tld\tr1, r1\n\tadd\tstack-[9], r0, r2\n\tsstore\tr2, r1\n.BB21_71:\n\tadd\tstack-[15], r0, r3\n\tsload\tr3, r1\n\tsub!\tr1, r0, r2\n\tadd\t1, r3, r2\n\tadd\tr2, r0, stack-[13]\n\tjump.eq\t@.BB21_75\n\tsub.s\t1, r0, r2\n\tdiv\tr2, r1, r3, r2\n\tadd\tstack-[17], r0, r2\n\tadd\t@CPI21_17[0], r2, r2\n\tsload\tr2, r2\n\tsub!\tr3, r2, r3\n\tjump.lt\t@.BB21_33\n\tmul\tr2, r1, r1, r2\n\tdiv.s\t@CPI21_19[0], r1, r2, r1\n\tadd\tstack-[13], r0, r1\n\tsload\tr1, r3\n\tsub!\tr2, r3, r1\n\tjump.lt\t@.BB21_33\n\tadd\tr2, r0, stack-[8]\n\tadd\tr3, r0, stack-[7]\n\tsub!\tr2, r3, r1\n\tjump.eq\t@.BB21_75\n\tadd\t1, r0, r1\n\tadd\tr1, r0, stack-[5]\n\tsload\tr1, r1\n\tadd\t@CPI21_9[0], r0, r2\n\tst.2\t0, r2\n\tand\t@CPI21_3[0], r1, r1\n\tadd\tr1, r0, stack-[9]\n\tst.2\t4, r1\n\tadd\t@CPI21_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI21_0[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI21_10[0], r1, r1\n\tadd\t32770, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tadd\tstack-[9], r0, r5\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB21_5\n\tld\tr1, r1\n\tsub!\tr1, r0, r1\n\tjump.eq\t@.BB21_5\n\tld.1\t64, r9\n\tadd\t@CPI21_11[0], r0, r1\n\tst.1\tr9, r1\n\tcontext.this\tr1\n\tand\t@CPI21_3[0], r1, r1\n\tadd\t4, r9, r2\n\tst.1\tr2, r1\n\tcontext.gas_left\tr1\n\tsub.s!\t4, r5, r2\n\tjump.ne\t@.BB21_80\n\tadd\tstack[@returndatasize], r0, r3\n\tjump\t@.BB21_90\n.BB21_80:\n\tadd\t@CPI21_0[0], r0, r2\n\tsub.s!\t@CPI21_0[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tsub.s!\t@CPI21_0[0], r9, r3\n\tadd.lt\tr9, r0, r2\n\tshl.s\t64, r2, r2\n\tshl.s\t192, r1, r1\n\tor\tr1, r2, r1\n\tor\t@CPI21_5[0], r1, r1\n\tadd\tr5, r0, r2\n\tadd\tr9, r0, stack-[6]\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tadd\tstack-[6], r0, r9\n\tadd\tr1, r0, r3\n\tshr.s\t96, r3, r3\n\tand\t@CPI21_0[0], r3, r3\n\tsub.s!\t32, r3, r4\n\tadd\t32, r0, r5\n\tadd.lt\tr3, r0, r5\n\tand\t31, r5, r4\n\tshr.s!\t5, r5, r5\n\tjump.eq\t@.BB21_173\n\tadd\tr0, r0, r6\n.BB21_82:\n\tshl.s\t5, r6, r7\n\tadd\tr9, r7, r8\n\tptr.add\tr1, r7, r7\n\tld\tr7, r7\n\tst.1\tr8, r7\n\tadd\t1, r6, r6\n\tsub!\tr6, r5, r7\n\tjump.lt\t@.BB21_82\n.BB21_173:\n\tsub!\tr4, r0, r6\n\tjump.eq\t@.BB21_84\n\tshl.s\t5, r5, r5\n\tptr.add\tr1, r5, r6\n\tadd\tr9, r5, r5\n\tshl.s\t3, r4, r4\n\tld.1\tr5, r7\n\tshl\tr7, r4, r7\n\tshr\tr7, r4, r7\n\tld\tr6, r6\n\tsub\t256, r4, r4\n\tshr\tr6, r4, r6\n\tshl\tr6, r4, r4\n\tor\tr4, r7, r4\n\tst.1\tr5, r4\n.BB21_84:\n\tadd\tr3, r0, stack[@returndatasize]\n\tptr.add\tr1, r0, stack[@ptr_return_data]\n\tand!\t1, r2, r2\n\tadd\tstack-[9], r0, r5\n\tjump.eq\t@.BB21_85\n.BB21_90:\n\tadd\t31, r3, r1\n\tsub.s\t32, r0, r2\n\tadd\tr2, r0, stack-[6]\n\tand\tr1, r2, r2\n\tadd\tr2, r9, r1\n\tsub!\tr1, r2, r2\n\tadd\t0, r0, r2\n\tadd.lt\t1, r0, r2\n\tsub.s!\t@CPI21_12[0], r1, r3\n\tjump.gt\t@.BB21_27\n\tand!\t1, r2, r2\n\tjump.ne\t@.BB21_27\n\tst.1\t64, r1\n\tadd\t@CPI21_13[0], r0, r1\n\tadd\tstack[@returndatasize], r0, r2\n\tsub.s!\t32, r2, r3\n\tadd\tr0, r0, r3\n\tadd.lt\tr1, r0, r3\n\tand\t@CPI21_13[0], r2, r2\n\tsub!\tr2, r0, r4\n\tadd.le\tr0, r0, r1\n\tsub.s!\t@CPI21_13[0], r2, r2\n\tadd.ne\tr3, r0, r1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB21_5\n\tadd\tstack-[8], r0, r1\n\tadd\tstack-[7], r0, r2\n\tsub\tr1, r2, r3\n\tld.1\tr9, r2\n\tsub!\tr2, r3, r1\n\tjump.ge\t@.BB21_94\n\tadd\tr2, r0, stack-[8]\n\tadd\tstack-[5], r0, r1\n\tsload\tr1, r1\n\tadd\t@CPI21_9[0], r0, r2\n\tst.2\t0, r2\n\tand\t@CPI21_3[0], r1, r1\n\tadd\tr1, r0, stack-[9]\n\tst.2\t4, r1\n\tadd\t@CPI21_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI21_0[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI21_10[0], r1, r1\n\tadd\t32770, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB21_5\n\tld\tr1, r1\n\tsub!\tr1, r0, r1\n\tjump.eq\t@.BB21_5\n\tld.1\t64, r9\n\tadd\t36, r9, r1\n\tadd\tstack-[8], r0, r2\n\tst.1\tr1, r2\n\tadd\t@CPI21_20[0], r0, r1\n\tst.1\tr9, r1\n\tadd\t4, r9, r1\n\tadd\tstack-[10], r0, r2\n\tst.1\tr1, r2\n\tcontext.gas_left\tr1\n\tadd\tstack-[9], r0, r2\n\tsub.s!\t4, r2, r3\n\tjump.ne\t@.BB21_116\n\tadd\tstack[@returndatasize], r0, r3\n\tjump\t@.BB21_126\n.BB21_94:\n\tadd\tr3, r0, stack-[8]\n\tadd\t@CPI21_9[0], r0, r1\n\tst.2\t0, r1\n\tst.2\t4, r5\n\tadd\t@CPI21_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI21_0[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI21_10[0], r1, r1\n\tadd\t32770, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tadd\tstack-[9], r0, r4\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB21_5\n\tld\tr1, r1\n\tsub!\tr1, r0, r1\n\tjump.eq\t@.BB21_5\n\tld.1\t64, r9\n\tadd\t36, r9, r1\n\tadd\tstack-[8], r0, r2\n\tst.1\tr1, r2\n\tadd\t@CPI21_20[0], r0, r1\n\tst.1\tr9, r1\n\tadd\t4, r9, r1\n\tadd\tstack-[10], r0, r2\n\tst.1\tr1, r2\n\tcontext.gas_left\tr1\n\tsub.s!\t4, r4, r2\n\tjump.ne\t@.BB21_98\n\tadd\tstack[@returndatasize], r0, r3\n\tjump\t@.BB21_108\n.BB21_116:\n\tadd\t@CPI21_0[0], r0, r4\n\tsub.s!\t@CPI21_0[0], r1, r3\n\tadd.ge\tr4, r0, r1\n\tsub.s!\t@CPI21_0[0], r9, r3\n\tadd\tr4, r0, r3\n\tadd.lt\tr9, r0, r3\n\tshl.s\t64, r3, r3\n\tshl.s\t192, r1, r1\n\tor\tr1, r3, r1\n\tor\t@CPI21_16[0], r1, r1\n\tadd\tr9, r0, stack-[9]\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tadd\tstack-[9], r0, r9\n\tadd\tr1, r0, r3\n\tshr.s\t96, r3, r3\n\tand\t@CPI21_0[0], r3, r3\n\tsub.s!\t32, r3, r4\n\tadd\t32, r0, r5\n\tadd.lt\tr3, r0, r5\n\tand\t31, r5, r4\n\tshr.s!\t5, r5, r5\n\tjump.eq\t@.BB21_169\n\tadd\tr0, r0, r6\n.BB21_118:\n\tshl.s\t5, r6, r7\n\tadd\tr9, r7, r8\n\tptr.add\tr1, r7, r7\n\tld\tr7, r7\n\tst.1\tr8, r7\n\tadd\t1, r6, r6\n\tsub!\tr6, r5, r7\n\tjump.lt\t@.BB21_118\n.BB21_169:\n\tsub!\tr4, r0, r6\n\tjump.eq\t@.BB21_120\n\tshl.s\t5, r5, r5\n\tptr.add\tr1, r5, r6\n\tadd\tr9, r5, r5\n\tshl.s\t3, r4, r4\n\tld.1\tr5, r7\n\tshl\tr7, r4, r7\n\tshr\tr7, r4, r7\n\tld\tr6, r6\n\tsub\t256, r4, r4\n\tshr\tr6, r4, r6\n\tshl\tr6, r4, r4\n\tor\tr4, r7, r4\n\tst.1\tr5, r4\n.BB21_120:\n\tadd\tr3, r0, stack[@returndatasize]\n\tptr.add\tr1, r0, stack[@ptr_return_data]\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB21_121\n.BB21_126:\n\tadd\t31, r3, r1\n\tadd\tstack-[6], r0, r2\n\tand\tr1, r2, r2\n\tadd\tr2, r9, r1\n\tsub!\tr1, r2, r2\n\tadd\t0, r0, r2\n\tadd.lt\t1, r0, r2\n\tsub.s!\t@CPI21_12[0], r1, r3\n\tjump.gt\t@.BB21_27\n\tand!\t1, r2, r2\n\tjump.ne\t@.BB21_27\n\tst.1\t64, r1\n\tadd\t@CPI21_13[0], r0, r1\n\tadd\tstack[@returndatasize], r0, r2\n\tsub.s!\t32, r2, r3\n\tadd\tr0, r0, r3\n\tadd.lt\tr1, r0, r3\n\tand\t@CPI21_13[0], r2, r2\n\tsub!\tr2, r0, r4\n\tadd.le\tr0, r0, r1\n\tsub.s!\t@CPI21_13[0], r2, r2\n\tadd.ne\tr3, r0, r1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB21_5\n\tld.1\tr9, r1\n\tsub!\tr1, r0, r2\n\tadd\t0, r0, r2\n\tadd.ne\t1, r0, r2\n\tsub!\tr1, r2, r1\n\tjump.eq\t@.BB21_75\n\tjump\t@.BB21_5\n.BB21_98:\n\tadd\t@CPI21_0[0], r0, r2\n\tsub.s!\t@CPI21_0[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tsub.s!\t@CPI21_0[0], r9, r3\n\tadd.lt\tr9, r0, r2\n\tshl.s\t64, r2, r2\n\tshl.s\t192, r1, r1\n\tor\tr1, r2, r1\n\tor\t@CPI21_16[0], r1, r1\n\tadd\tr4, r0, r2\n\tadd\tr9, r0, stack-[9]\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tadd\tstack-[9], r0, r9\n\tadd\tr1, r0, r3\n\tshr.s\t96, r3, r3\n\tand\t@CPI21_0[0], r3, r3\n\tsub.s!\t32, r3, r4\n\tadd\t32, r0, r5\n\tadd.lt\tr3, r0, r5\n\tand\t31, r5, r4\n\tshr.s!\t5, r5, r5\n\tjump.eq\t@.BB21_171\n\tadd\tr0, r0, r6\n.BB21_100:\n\tshl.s\t5, r6, r7\n\tadd\tr9, r7, r8\n\tptr.add\tr1, r7, r7\n\tld\tr7, r7\n\tst.1\tr8, r7\n\tadd\t1, r6, r6\n\tsub!\tr6, r5, r7\n\tjump.lt\t@.BB21_100\n.BB21_171:\n\tsub!\tr4, r0, r6\n\tjump.eq\t@.BB21_102\n\tshl.s\t5, r5, r5\n\tptr.add\tr1, r5, r6\n\tadd\tr9, r5, r5\n\tshl.s\t3, r4, r4\n\tld.1\tr5, r7\n\tshl\tr7, r4, r7\n\tshr\tr7, r4, r7\n\tld\tr6, r6\n\tsub\t256, r4, r4\n\tshr\tr6, r4, r6\n\tshl\tr6, r4, r4\n\tor\tr4, r7, r4\n\tst.1\tr5, r4\n.BB21_102:\n\tadd\tr3, r0, stack[@returndatasize]\n\tptr.add\tr1, r0, stack[@ptr_return_data]\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB21_103\n.BB21_108:\n\tadd\t31, r3, r1\n\tadd\tstack-[6], r0, r2\n\tand\tr1, r2, r2\n\tadd\tr2, r9, r1\n\tsub!\tr1, r2, r2\n\tadd\t0, r0, r2\n\tadd.lt\t1, r0, r2\n\tsub.s!\t@CPI21_12[0], r1, r3\n\tjump.gt\t@.BB21_27\n\tand!\t1, r2, r2\n\tjump.ne\t@.BB21_27\n\tst.1\t64, r1\n\tadd\t@CPI21_13[0], r0, r1\n\tadd\tstack[@returndatasize], r0, r2\n\tsub.s!\t32, r2, r3\n\tadd\tr0, r0, r3\n\tadd.lt\tr1, r0, r3\n\tand\t@CPI21_13[0], r2, r2\n\tsub!\tr2, r0, r4\n\tadd.le\tr0, r0, r1\n\tsub.s!\t@CPI21_13[0], r2, r2\n\tadd.ne\tr3, r0, r1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB21_5\n\tld.1\tr9, r1\n\tsub!\tr1, r0, r2\n\tadd\t0, r0, r2\n\tadd.ne\t1, r0, r2\n\tsub!\tr1, r2, r1\n\tjump.ne\t@.BB21_5\n.BB21_75:\n\tadd\tstack-[16], r0, r4\n\tsub!\tr4, r0, r1\n\tjump.eq\t@.BB21_163\n\tadd\tstack-[12], r0, r1\n\tsload\tr1, r3\n\tld.1\t64, r2\n\tadd\t100, r2, r1\n\tst.1\tr1, r4\n\tcontext.this\tr1\n\tand\t@CPI21_3[0], r1, r1\n\tadd\t68, r2, r4\n\tst.1\tr4, r1\n\tadd\t32, r2, r1\n\tadd\t@CPI21_21[0], r0, r4\n\tst.1\tr1, r4\n\tadd\t36, r2, r4\n\tadd\tstack-[10], r0, r5\n\tst.1\tr4, r5\n\tadd\t100, r0, r4\n\tst.1\tr2, r4\n\tand\t@CPI21_3[0], r3, r10\n\tsub.s!\t@CPI21_22[0], r2, r3\n\tjump.gt\t@.BB21_27\n\tadd\t160, r2, r9\n\tst.1\t64, r9\n\tsub.s!\t@CPI21_23[0], r2, r3\n\tjump.gt\t@.BB21_27\n\tadd\t224, r2, r3\n\tst.1\t64, r3\n\tadd\t32, r0, r3\n\tadd\tr3, r0, stack-[12]\n\tst.1\tr9, r3\n\tadd\t192, r2, r3\n\tadd\t@CPI21_24[0], r0, r4\n\tst.1\tr3, r4\n\tld.1\tr2, r3\n\tcontext.gas_left\tr2\n\tsub.s!\t4, r10, r4\n\tjump.ne\t@.BB21_133\n\tadd\t1, r0, r2\n\tadd\tstack[@returndatasize], r0, r1\n\tjump\t@.BB21_135\n.BB21_133:\n\tadd\t@CPI21_0[0], r0, r4\n\tsub.s!\t@CPI21_0[0], r1, r5\n\tadd.ge\tr4, r0, r1\n\tshl.s\t64, r1, r1\n\tsub.s!\t@CPI21_0[0], r3, r5\n\tadd.ge\tr4, r0, r3\n\tshl.s\t96, r3, r3\n\tor\tr3, r1, r1\n\tsub.s!\t@CPI21_0[0], r2, r3\n\tadd.ge\tr4, r0, r2\n\tshl.s\t192, r2, r2\n\tor\tr1, r2, r1\n\tadd\tr10, r0, r2\n\tadd\tr9, r0, stack-[10]\n\tadd\tr10, r0, stack-[9]\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tadd\tstack-[9], r0, r10\n\tadd\tstack-[10], r0, r9\n\tand\t1, r2, r2\n\tptr.add\tr1, r0, stack[@ptr_return_data]\n\tshr.s\t96, r1, r1\n\tand\t@CPI21_0[0], r1, stack[@returndatasize]\n\tand\t@CPI21_0[0], r1, r1\n.BB21_135:\n\tadd\t96, r0, r11\n\tsub!\tr1, r0, r3\n\tjump.eq\t@.BB21_136\n\tadd\t63, r1, r3\n\tsub.s\t32, r0, r4\n\tand\tr3, r4, r3\n\tld.1\t64, r11\n\tadd\tr11, r3, r3\n\tsub!\tr3, r11, r4\n\tadd\t0, r0, r4\n\tadd.lt\t1, r0, r4\n\tsub.s!\t@CPI21_12[0], r3, r5\n\tjump.gt\t@.BB21_27\n\tand!\t1, r4, r4\n\tjump.ne\t@.BB21_27\n\tst.1\t64, r3\n\tst.1.inc\tr11, r1, r1\n\tptr.add\tstack[@ptr_return_data], r0, r3\n\tadd\tstack[@returndatasize], r0, r5\n\tand\t31, r5, r4\n\tshr.s!\t5, r5, r5\n\tjump.eq\t@.BB21_167\n\tadd\tr0, r0, r6\n.BB21_154:\n\tshl.s\t5, r6, r7\n\tadd\tr1, r7, r8\n\tptr.add\tr3, r7, r7\n\tld\tr7, r7\n\tst.1\tr8, r7\n\tadd\t1, r6, r6\n\tsub!\tr6, r5, r7\n\tjump.lt\t@.BB21_154\n.BB21_167:\n\tsub!\tr4, r0, r6\n\tjump.eq\t@.BB21_136\n\tshl.s\t5, r5, r5\n\tptr.add\tr3, r5, r3\n\tadd\tr1, r5, r1\n\tshl.s\t3, r4, r4\n\tld.1\tr1, r5\n\tshl\tr5, r4, r5\n\tshr\tr5, r4, r5\n\tld\tr3, r3\n\tsub\t256, r4, r4\n\tshr\tr3, r4, r3\n\tshl\tr3, r4, r3\n\tor\tr3, r5, r3\n\tst.1\tr1, r3\n.BB21_136:\n\tld.1.inc\tr11, r1, r5\n\tsub!\tr2, r0, r2\n\tjump.eq\t@.BB21_137\n\tsub!\tr1, r0, r2\n\tjump.ne\t@.BB21_156\n\tadd\tr11, r0, stack-[9]\n\tadd\t@CPI21_9[0], r0, r1\n\tst.2\t0, r1\n\tst.2\t4, r10\n\tadd\t@CPI21_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI21_0[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI21_10[0], r1, r1\n\tadd\t32770, r0, r2\n\tadd\tr5, r0, stack-[10]\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tadd\tstack-[10], r0, r5\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB21_5\n\tld\tr1, r1\n\tsub!\tr1, r0, r1\n\tadd\tstack-[9], r0, r1\n\tjump.eq\t@.BB21_148\n\tld.1\tr1, r1\n\tsub!\tr1, r0, r2\n\tjump.eq\t@.BB21_160\n.BB21_156:\n\tadd\t@CPI21_13[0], r0, r2\n\tsub.s!\t32, r1, r3\n\tadd\tr0, r0, r3\n\tadd.lt\tr2, r0, r3\n\tand\t@CPI21_13[0], r1, r1\n\tsub!\tr1, r0, r4\n\tadd.le\tr0, r0, r2\n\tsub.s!\t@CPI21_13[0], r1, r1\n\tadd\tr3, r0, r1\n\tadd.eq\tr2, r0, r1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB21_5\n\tld.1\tr5, r1\n\tsub!\tr1, r0, r2\n\tadd\t0, r0, r2\n\tadd.ne\t1, r0, r2\n\tsub!\tr1, r2, r2\n\tjump.ne\t@.BB21_5\n\tsub!\tr1, r0, r1\n\tjump.eq\t@.BB21_159\n.BB21_160:\n\tsub.s\t1, r0, r1\n\tadd\tstack-[16], r0, r2\n\txor\tr2, r1, r1\n\tadd\tstack-[15], r0, r2\n\tsload\tr2, r2\n\tsub!\tr2, r1, r3\n\tjump.gt\t@.BB21_33\n\tadd\tstack-[16], r0, r3\n\tadd\tr2, r3, r2\n\tadd\tstack-[15], r0, r3\n\tsstore\tr3, r2\n\tadd\tstack-[17], r0, r2\n\tadd\t@CPI21_29[0], r2, r2\n\tsload\tr2, r3\n\tsub!\tr3, r1, r1\n\tjump.gt\t@.BB21_33\n\tadd\tstack-[16], r0, r1\n\tadd\tr3, r1, r1\n\tsstore\tr2, r1\n.BB21_163:\n\tadd\tstack-[17], r0, r1\n\tadd\t@CPI21_17[0], r1, r1\n\tsload\tr1, r1\n\tadd\tstack-[15], r0, r2\n\tsload\tr2, r2\n\tsub!\tr2, r0, r3\n\tjump.eq\t@.BB21_165\n\tsub.s\t1, r0, r3\n\tdiv\tr3, r2, r3, r4\n\tsub!\tr3, r1, r3\n\tjump.lt\t@.BB21_33\n.BB21_165:\n\tmul\tr1, r2, r1, r2\n\tdiv.s\t@CPI21_19[0], r1, r1, r2\n\tadd\tstack-[13], r0, r2\n\tsstore\tr2, r1\n\tld.1\t64, r1\n\tadd\t@CPI21_0[0], r0, r2\n\tcontext.gas_left\tr3\n\tsub.s!\t@CPI21_0[0], r3, r4\n\tadd.ge\tr2, r0, r3\n\tsub.s!\t@CPI21_0[0], r1, r4\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tshl.s\t192, r3, r2\n\tor\tr2, r1, r1\n\tor\t@CPI21_32[0], r1, r1\n\tadd\t32781, r0, r2\n\tadd\t4, r0, r3\n\tadd\t@CPI21_33[0], r0, r4\n\tadd\tstack-[11], r0, r5\n\tadd\tstack-[14], r0, r6\n\tadd\tstack-[16], r0, r7\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r1\n\tjump.eq\t@.BB21_5\n\tret\n.BB21_5:\n\tadd\tr0, r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB21_33:\n\tadd\t@CPI21_4[0], r0, r1\n\tst.1\t0, r1\n\tadd\t17, r0, r1\n\tst.1\t4, r1\n\tadd\t@CPI21_5[0], r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB21_27:\n\tadd\t@CPI21_4[0], r0, r1\n\tst.1\t0, r1\n\tadd\t65, r0, r1\n\tst.1\t4, r1\n\tadd\t@CPI21_5[0], r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB21_3:\n\tadd\t@CPI21_4[0], r0, r1\n\tst.1\t0, r1\n\tadd\t50, r0, r1\n\tst.1\t4, r1\n\tadd\t@CPI21_5[0], r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB21_1:\n\tld.1\t64, r1\n\tadd\t68, r1, r2\n\tadd\t@CPI21_34[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t36, r1, r2\n\tadd\t15, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI21_27[0], r0, r2\n\tst.1\tr1, r2\n\tadd\t4, r1, r2\n\tadd\t32, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI21_0[0], r0, r2\n\tsub.s!\t@CPI21_0[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI21_31[0], r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB21_137:\n\tsub!\tr1, r0, r2\n\tjump.ne\t@.BB21_144\n\tld.1\t64, r1\n\tadd\t@CPI21_27[0], r0, r2\n\tst.1\tr1, r2\n\tadd\t4, r1, r2\n\tadd\tstack-[12], r0, r3\n\tst.1\tr2, r3\n\tld.1\tr9, r2\n\tadd\t36, r1, r3\n\tst.1\tr3, r2\n\tsub!\tr2, r0, r3\n\tjump.eq\t@.BB21_143\n\tadd\t68, r1, r3\n\tadd\tr0, r0, r4\n.BB21_140:\n\tadd\tr4, r3, r5\n\tadd\t32, r4, r4\n\tadd\tr4, r9, r6\n\tld.1\tr6, r6\n\tst.1\tr5, r6\n\tsub!\tr4, r2, r5\n\tjump.lt\t@.BB21_140\n\tsub!\tr4, r2, r4\n\tjump.le\t@.BB21_143\n\tadd\tr2, r3, r3\n\tst.1\tr3, r0\n.BB21_143:\n\tadd\t31, r2, r2\n\tsub.s\t32, r0, r3\n\tand\tr2, r3, r2\n\tadd\t68, r2, r2\n\tadd\t@CPI21_0[0], r0, r3\n\tsub.s!\t@CPI21_0[0], r2, r4\n\tadd.ge\tr3, r0, r2\n\tsub.s!\t@CPI21_0[0], r1, r4\n\tadd.ge\tr3, r0, r1\n\tshl.s\t64, r1, r1\n\tshl.s\t96, r2, r2\n\tor\tr2, r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB21_159:\n\tld.1\t64, r1\n\tadd\t100, r1, r2\n\tadd\t@CPI21_25[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t68, r1, r2\n\tadd\t@CPI21_26[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t36, r1, r2\n\tadd\t42, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI21_27[0], r0, r2\n\tst.1\tr1, r2\n\tadd\t4, r1, r2\n\tadd\tstack-[12], r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI21_0[0], r0, r2\n\tsub.s!\t@CPI21_0[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI21_28[0], r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB21_41:\n\tadd\t@CPI21_4[0], r0, r1\n\tst.1\t0, r1\n\tadd\t18, r0, r1\n\tst.1\t4, r1\n\tadd\t@CPI21_5[0], r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB21_144:\n\tadd\t@CPI21_0[0], r0, r2\n\tsub.s!\t@CPI21_0[0], r5, r3\n\tadd\tr2, r0, r3\n\tadd.lt\tr5, r0, r3\n\tsub.s!\t@CPI21_0[0], r1, r4\n\tadd.ge\tr2, r0, r1\n\tshl.s\t96, r1, r1\n\tshl.s\t64, r3, r2\n\tor\tr1, r2, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB21_20:\n\tld.1\t64, r2\n\tand\t31, r3, r4\n\tshr.s!\t5, r3, r3\n\tjump.eq\t@.BB21_176\n\tadd\tr0, r0, r5\n.BB21_22:\n\tshl.s\t5, r5, r6\n\tadd\tr2, r6, r7\n\tptr.add\tr1, r6, r6\n\tld\tr6, r6\n\tst.1\tr7, r6\n\tadd\t1, r5, r5\n\tsub!\tr5, r3, r6\n\tjump.lt\t@.BB21_22\n.BB21_176:\n\tsub!\tr4, r0, r5\n\tjump.eq\t@.BB21_24\n\tshl.s\t5, r3, r3\n\tptr.add\tr1, r3, r1\n\tadd\tr2, r3, r3\n\tshl.s\t3, r4, r4\n\tld.1\tr3, r5\n\tshl\tr5, r4, r5\n\tshr\tr5, r4, r5\n\tld\tr1, r1\n\tsub\t256, r4, r4\n\tshr\tr1, r4, r1\n\tshl\tr1, r4, r1\n\tor\tr1, r5, r1\n\tst.1\tr3, r1\n.BB21_24:\n\tadd\t@CPI21_0[0], r0, r1\n\tadd\tstack[@returndatasize], r0, r3\n\tsub.s!\t@CPI21_0[0], r3, r4\n\tadd.ge\tr1, r0, r3\n\tsub.s!\t@CPI21_0[0], r2, r4\n\tadd.lt\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tshl.s\t96, r3, r2\n\tor\tr2, r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB21_148:\n\tld.1\t64, r1\n\tadd\t68, r1, r2\n\tadd\t@CPI21_30[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t36, r1, r2\n\tadd\t29, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI21_27[0], r0, r2\n\tst.1\tr1, r2\n\tadd\t4, r1, r2\n\tadd\tstack-[12], r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI21_0[0], r0, r2\n\tsub.s!\t@CPI21_0[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI21_31[0], r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB21_47:\n\tld.1\t64, r2\n\tand\t31, r4, r3\n\tshr.s!\t5, r4, r4\n\tjump.eq\t@.BB21_175\n\tadd\tr0, r0, r5\n.BB21_49:\n\tshl.s\t5, r5, r6\n\tadd\tr2, r6, r7\n\tptr.add\tr1, r6, r6\n\tld\tr6, r6\n\tst.1\tr7, r6\n\tadd\t1, r5, r5\n\tsub!\tr5, r4, r6\n\tjump.lt\t@.BB21_49\n.BB21_175:\n\tsub!\tr3, r0, r5\n\tjump.eq\t@.BB21_51\n\tshl.s\t5, r4, r4\n\tptr.add\tr1, r4, r1\n\tadd\tr2, r4, r4\n\tshl.s\t3, r3, r3\n\tld.1\tr4, r5\n\tshl\tr5, r3, r5\n\tshr\tr5, r3, r5\n\tld\tr1, r1\n\tsub\t256, r3, r3\n\tshr\tr1, r3, r1\n\tshl\tr1, r3, r1\n\tor\tr1, r5, r1\n\tst.1\tr4, r1\n.BB21_51:\n\tadd\t@CPI21_0[0], r0, r1\n\tadd\tstack[@returndatasize], r0, r3\n\tsub.s!\t@CPI21_0[0], r3, r4\n\tadd.ge\tr1, r0, r3\n\tsub.s!\t@CPI21_0[0], r2, r4\n\tadd.lt\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tshl.s\t96, r3, r2\n\tor\tr2, r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB21_60:\n\tld.1\t64, r2\n\tand\t31, r4, r3\n\tshr.s!\t5, r4, r4\n\tjump.eq\t@.BB21_174\n\tadd\tr0, r0, r5\n.BB21_62:\n\tshl.s\t5, r5, r6\n\tadd\tr2, r6, r7\n\tptr.add\tr1, r6, r6\n\tld\tr6, r6\n\tst.1\tr7, r6\n\tadd\t1, r5, r5\n\tsub!\tr5, r4, r6\n\tjump.lt\t@.BB21_62\n.BB21_174:\n\tsub!\tr3, r0, r5\n\tjump.eq\t@.BB21_64\n\tshl.s\t5, r4, r4\n\tptr.add\tr1, r4, r1\n\tadd\tr2, r4, r4\n\tshl.s\t3, r3, r3\n\tld.1\tr4, r5\n\tshl\tr5, r3, r5\n\tshr\tr5, r3, r5\n\tld\tr1, r1\n\tsub\t256, r3, r3\n\tshr\tr1, r3, r1\n\tshl\tr1, r3, r1\n\tor\tr1, r5, r1\n\tst.1\tr4, r1\n.BB21_64:\n\tadd\t@CPI21_0[0], r0, r1\n\tadd\tstack[@returndatasize], r0, r3\n\tsub.s!\t@CPI21_0[0], r3, r4\n\tadd.ge\tr1, r0, r3\n\tsub.s!\t@CPI21_0[0], r2, r4\n\tadd.lt\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tshl.s\t96, r3, r2\n\tor\tr2, r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB21_85:\n\tld.1\t64, r2\n\tand\t31, r3, r4\n\tshr.s!\t5, r3, r3\n\tjump.eq\t@.BB21_172\n\tadd\tr0, r0, r5\n.BB21_87:\n\tshl.s\t5, r5, r6\n\tadd\tr2, r6, r7\n\tptr.add\tr1, r6, r6\n\tld\tr6, r6\n\tst.1\tr7, r6\n\tadd\t1, r5, r5\n\tsub!\tr5, r3, r6\n\tjump.lt\t@.BB21_87\n.BB21_172:\n\tsub!\tr4, r0, r5\n\tjump.eq\t@.BB21_89\n\tshl.s\t5, r3, r3\n\tptr.add\tr1, r3, r1\n\tadd\tr2, r3, r3\n\tshl.s\t3, r4, r4\n\tld.1\tr3, r5\n\tshl\tr5, r4, r5\n\tshr\tr5, r4, r5\n\tld\tr1, r1\n\tsub\t256, r4, r4\n\tshr\tr1, r4, r1\n\tshl\tr1, r4, r1\n\tor\tr1, r5, r1\n\tst.1\tr3, r1\n.BB21_89:\n\tadd\t@CPI21_0[0], r0, r1\n\tadd\tstack[@returndatasize], r0, r3\n\tsub.s!\t@CPI21_0[0], r3, r4\n\tadd.ge\tr1, r0, r3\n\tsub.s!\t@CPI21_0[0], r2, r4\n\tadd.lt\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tshl.s\t96, r3, r2\n\tor\tr2, r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB21_121:\n\tld.1\t64, r2\n\tand\t31, r3, r4\n\tshr.s!\t5, r3, r3\n\tjump.eq\t@.BB21_168\n\tadd\tr0, r0, r5\n.BB21_123:\n\tshl.s\t5, r5, r6\n\tadd\tr2, r6, r7\n\tptr.add\tr1, r6, r6\n\tld\tr6, r6\n\tst.1\tr7, r6\n\tadd\t1, r5, r5\n\tsub!\tr5, r3, r6\n\tjump.lt\t@.BB21_123\n.BB21_168:\n\tsub!\tr4, r0, r5\n\tjump.eq\t@.BB21_125\n\tshl.s\t5, r3, r3\n\tptr.add\tr1, r3, r1\n\tadd\tr2, r3, r3\n\tshl.s\t3, r4, r4\n\tld.1\tr3, r5\n\tshl\tr5, r4, r5\n\tshr\tr5, r4, r5\n\tld\tr1, r1\n\tsub\t256, r4, r4\n\tshr\tr1, r4, r1\n\tshl\tr1, r4, r1\n\tor\tr1, r5, r1\n\tst.1\tr3, r1\n.BB21_125:\n\tadd\t@CPI21_0[0], r0, r1\n\tadd\tstack[@returndatasize], r0, r3\n\tsub.s!\t@CPI21_0[0], r3, r4\n\tadd.ge\tr1, r0, r3\n\tsub.s!\t@CPI21_0[0], r2, r4\n\tadd.lt\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tshl.s\t96, r3, r2\n\tor\tr2, r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB21_103:\n\tld.1\t64, r2\n\tand\t31, r3, r4\n\tshr.s!\t5, r3, r3\n\tjump.eq\t@.BB21_170\n\tadd\tr0, r0, r5\n.BB21_105:\n\tshl.s\t5, r5, r6\n\tadd\tr2, r6, r7\n\tptr.add\tr1, r6, r6\n\tld\tr6, r6\n\tst.1\tr7, r6\n\tadd\t1, r5, r5\n\tsub!\tr5, r3, r6\n\tjump.lt\t@.BB21_105\n.BB21_170:\n\tsub!\tr4, r0, r5\n\tjump.eq\t@.BB21_107\n\tshl.s\t5, r3, r3\n\tptr.add\tr1, r3, r1\n\tadd\tr2, r3, r3\n\tshl.s\t3, r4, r4\n\tld.1\tr3, r5\n\tshl\tr5, r4, r5\n\tshr\tr5, r4, r5\n\tld\tr1, r1\n\tsub\t256, r4, r4\n\tshr\tr1, r4, r1\n\tshl\tr1, r4, r1\n\tor\tr1, r5, r1\n\tst.1\tr3, r1\n.BB21_107:\n\tadd\t@CPI21_0[0], r0, r1\n\tadd\tstack[@returndatasize], r0, r3\n\tsub.s!\t@CPI21_0[0], r3, r4\n\tadd.ge\tr1, r0, r3\n\tsub.s!\t@CPI21_0[0], r2, r4\n\tadd.lt\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tshl.s\t96, r3, r2\n\tor\tr2, r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.func_end21:\n\nfun_withdraw:\n.func_begin22:\n\tnop\tstack+=[17]\n\tadd\tr2, r0, stack-[17]\n\tsub!\tr1, r0, r2\n\tjump.eq\t@.BB22_1\n\tadd\t5, r0, r3\n\tsload\tr3, r2\n\tsub!\tr2, r1, r2\n\tjump.le\t@.BB22_3\n\tadd\tr3, r0, stack-[11]\n\tst.1\t0, r1\n\tadd\t6, r0, r2\n\tadd\tr2, r0, stack-[9]\n\tst.1\t32, r2\n\tadd\t@CPI22_0[0], r0, r4\n\tadd\tr1, r0, stack-[14]\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI22_0[0], r2, r3\n\tadd\tr4, r0, r1\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI22_1[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tadd\tstack-[14], r0, r3\n\tmul\t5, r3, r4, r3\n\tadd\tr4, r0, stack-[15]\n\tadd\t@CPI22_2[0], r4, r3\n\tadd\tr3, r0, stack-[13]\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB22_5\n\tld\tr1, r1\n\tcontext.caller\tr2\n\tadd\tr2, r0, stack-[10]\n\tand\t@CPI22_3[0], r2, r2\n\tadd\tr2, r0, stack-[12]\n\tst.1\t0, r2\n\tst.1\t32, r1\n\tadd\t@CPI22_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI22_0[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI22_1[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB22_5\n\tld\tr1, r1\n\tadd\tr1, r0, stack-[16]\n\tsload\tr1, r1\n\tadd\tstack-[17], r0, r2\n\tsub!\tr1, r2, r1\n\tadd\tstack-[11], r0, r3\n\tjump.lt\t@.BB22_8\n\tsload\tr3, r1\n\tadd\tstack-[14], r0, r2\n\tsub!\tr1, r2, r1\n\tjump.le\t@.BB22_3\n\tst.1\t0, r3\n\tadd\tstack-[15], r0, r1\n\tadd\t@CPI22_6[0], r1, r1\n\tadd\tr1, r0, stack-[9]\n\tsload\tr1, r1\n\tadd\tr1, r0, stack-[11]\n\tadd\t@CPI22_7[0], r0, r1\n\tst.2\t0, r1\n\tadd\t@CPI22_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI22_0[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI22_8[0], r1, r1\n\tadd\t32779, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB22_5\n\tld\tr1, r1\n\tadd\tstack-[11], r0, r2\n\tsub!\tr1, r2, r1\n\tjump.le\t@.BB22_73\n\tadd\tstack-[13], r0, r1\n\tsload\tr1, r1\n\tadd\t@CPI22_9[0], r0, r2\n\tst.2\t0, r2\n\tand\t@CPI22_3[0], r1, r1\n\tadd\tr1, r0, stack-[11]\n\tst.2\t4, r1\n\tadd\t@CPI22_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI22_0[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI22_10[0], r1, r1\n\tadd\t32770, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB22_5\n\tld\tr1, r1\n\tsub!\tr1, r0, r1\n\tjump.eq\t@.BB22_5\n\tld.1\t64, r9\n\tadd\t@CPI22_11[0], r0, r1\n\tst.1\tr9, r1\n\tcontext.this\tr1\n\tand\t@CPI22_3[0], r1, r2\n\tadd\t4, r9, r1\n\tadd\tr2, r0, stack-[6]\n\tst.1\tr1, r2\n\tcontext.gas_left\tr1\n\tadd\tstack-[11], r0, r2\n\tsub.s!\t4, r2, r3\n\tjump.ne\t@.BB22_17\n\tadd\tstack[@returndatasize], r0, r3\n\tjump\t@.BB22_27\n.BB22_17:\n\tadd\t@CPI22_0[0], r0, r4\n\tsub.s!\t@CPI22_0[0], r1, r3\n\tadd.ge\tr4, r0, r1\n\tsub.s!\t@CPI22_0[0], r9, r3\n\tadd\tr4, r0, r3\n\tadd.lt\tr9, r0, r3\n\tshl.s\t64, r3, r3\n\tshl.s\t192, r1, r1\n\tor\tr1, r3, r1\n\tor\t@CPI22_5[0], r1, r1\n\tadd\tr9, r0, stack-[11]\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tadd\tstack-[11], r0, r9\n\tadd\tr1, r0, r3\n\tshr.s\t96, r3, r3\n\tand\t@CPI22_0[0], r3, r3\n\tsub.s!\t32, r3, r4\n\tadd\t32, r0, r5\n\tadd.lt\tr3, r0, r5\n\tand\t31, r5, r4\n\tshr.s!\t5, r5, r5\n\tjump.eq\t@.BB22_178\n\tadd\tr0, r0, r6\n.BB22_19:\n\tshl.s\t5, r6, r7\n\tadd\tr9, r7, r8\n\tptr.add\tr1, r7, r7\n\tld\tr7, r7\n\tst.1\tr8, r7\n\tadd\t1, r6, r6\n\tsub!\tr6, r5, r7\n\tjump.lt\t@.BB22_19\n.BB22_178:\n\tsub!\tr4, r0, r6\n\tjump.eq\t@.BB22_21\n\tshl.s\t5, r5, r5\n\tptr.add\tr1, r5, r6\n\tadd\tr9, r5, r5\n\tshl.s\t3, r4, r4\n\tld.1\tr5, r7\n\tshl\tr7, r4, r7\n\tshr\tr7, r4, r7\n\tld\tr6, r6\n\tsub\t256, r4, r4\n\tshr\tr6, r4, r6\n\tshl\tr6, r4, r4\n\tor\tr4, r7, r4\n\tst.1\tr5, r4\n.BB22_21:\n\tadd\tr3, r0, stack[@returndatasize]\n\tptr.add\tr1, r0, stack[@ptr_return_data]\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB22_22\n.BB22_27:\n\tadd\t31, r3, r1\n\tsub.s\t32, r0, r2\n\tadd\tr2, r0, stack-[8]\n\tand\tr1, r2, r2\n\tadd\tr2, r9, r1\n\tsub!\tr1, r2, r2\n\tadd\t0, r0, r2\n\tadd.lt\t1, r0, r2\n\tsub.s!\t@CPI22_12[0], r1, r3\n\tjump.gt\t@.BB22_29\n\tand!\t1, r2, r2\n\tjump.ne\t@.BB22_29\n\tst.1\t64, r1\n\tadd\t@CPI22_13[0], r0, r1\n\tadd\tstack[@returndatasize], r0, r2\n\tsub.s!\t32, r2, r3\n\tadd\tr0, r0, r3\n\tadd.lt\tr1, r0, r3\n\tand\t@CPI22_13[0], r2, r2\n\tsub!\tr2, r0, r4\n\tadd.le\tr0, r0, r1\n\tsub.s!\t@CPI22_13[0], r2, r2\n\tadd.ne\tr3, r0, r1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB22_5\n\tld.1\tr9, r1\n\tadd\tr1, r0, stack-[11]\n\tadd\t@CPI22_7[0], r0, r1\n\tst.2\t0, r1\n\tadd\t@CPI22_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI22_0[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI22_8[0], r1, r1\n\tadd\t32779, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tadd\tstack-[11], r0, r3\n\tsub!\tr3, r0, r3\n\tjump.eq\t@.BB22_32\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB22_5\n\tadd\tstack-[9], r0, r2\n\tsload\tr2, r3\n\tld\tr1, r4\n\tsub!\tr4, r3, r1\n\tjump.lt\t@.BB22_35\n\tsub\tr4, r3, r1\n\tadd\t4, r0, r2\n\tsload\tr2, r2\n\tsub!\tr4, r3, r3\n\tjump.eq\t@.BB22_38\n\tsub.s\t1, r0, r3\n\tdiv\tr3, r1, r3, r4\n\tsub!\tr3, r2, r3\n\tjump.lt\t@.BB22_35\n.BB22_38:\n\tmul!\tr2, r1, r1, r2\n\tadd\t3, r0, r2\n\tsload\tr2, r2\n\tjump.eq\t@.BB22_40\n\tsub.s\t1, r0, r3\n\tdiv\tr3, r1, r3, r4\n\tsub!\tr3, r2, r3\n\tjump.lt\t@.BB22_35\n.BB22_40:\n\tmul!\tr2, r1, r3, r1\n\tadd\tstack-[15], r0, r1\n\tadd\t@CPI22_14[0], r1, r1\n\tsload\tr1, r4\n\tjump.eq\t@.BB22_42\n\tsub.s\t1, r0, r1\n\tdiv\tr1, r3, r1, r2\n\tsub!\tr1, r4, r1\n\tjump.lt\t@.BB22_35\n.BB22_42:\n\tadd\tr4, r0, stack-[4]\n\tadd\tr3, r0, stack-[5]\n\tadd\t7, r0, r1\n\tsload\tr1, r1\n\tadd\tr1, r0, stack-[3]\n\tsub!\tr1, r0, r1\n\tjump.eq\t@.BB22_43\n\tadd\t2, r0, r1\n\tsload\tr1, r1\n\tadd\tr1, r0, stack-[7]\n\tadd\t1, r0, r1\n\tadd\tr1, r0, stack-[1]\n\tsload\tr1, r1\n\tadd\t@CPI22_9[0], r0, r2\n\tst.2\t0, r2\n\tand\t@CPI22_3[0], r1, r1\n\tadd\tr1, r0, stack-[2]\n\tst.2\t4, r1\n\tadd\t@CPI22_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI22_0[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI22_10[0], r1, r1\n\tadd\t32770, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tadd\tstack-[7], r0, r3\n\tand\t@CPI22_3[0], r3, r3\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB22_5\n\tld\tr1, r1\n\tsub!\tr1, r0, r1\n\tjump.eq\t@.BB22_5\n\tadd\tstack-[5], r0, r1\n\tadd\tstack-[4], r0, r2\n\tmul\tr2, r1, r1, r2\n\tadd\tstack-[3], r0, r2\n\tdiv\tr1, r2, r2, r1\n\tadd\tr2, r0, stack-[7]\n\tdiv.s\t10, r2, r1, r2\n\tld.1\t64, r5\n\tadd\t36, r5, r2\n\tst.1\tr2, r1\n\tadd\t@CPI22_15[0], r0, r1\n\tst.1\tr5, r1\n\tadd\t4, r5, r1\n\tst.1\tr1, r3\n\tcontext.gas_left\tr1\n\tadd\tstack-[2], r0, r2\n\tsub.s!\t4, r2, r3\n\tjump.ne\t@.BB22_48\n\tadd\tstack[@returndatasize], r0, r4\n\tjump\t@.BB22_54\n.BB22_32:\n\tand!\t1, r2, r2\n\tjump.ne\t@.BB22_12\n\tjump\t@.BB22_5\n.BB22_48:\n\tadd\t@CPI22_0[0], r0, r4\n\tsub.s!\t@CPI22_0[0], r1, r3\n\tadd.ge\tr4, r0, r1\n\tsub.s!\t@CPI22_0[0], r5, r3\n\tadd\tr4, r0, r3\n\tadd.lt\tr5, r0, r3\n\tshl.s\t64, r3, r3\n\tshl.s\t192, r1, r1\n\tor\tr1, r3, r1\n\tor\t@CPI22_16[0], r1, r1\n\tadd\tr5, r0, stack-[5]\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tadd\tstack-[5], r0, r5\n\tadd\tr1, r0, r3\n\tshr.s\t96, r3, r3\n\tand\t@CPI22_0[0], r3, stack[@returndatasize]\n\tand\t@CPI22_0[0], r3, r4\n\tptr.add\tr1, r0, stack[@ptr_return_data]\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB22_49\n.BB22_54:\n\tadd\t31, r4, r1\n\tadd\tstack-[8], r0, r2\n\tand\tr1, r2, r2\n\tadd\tr2, r5, r1\n\tsub!\tr1, r2, r2\n\tadd\t0, r0, r2\n\tadd.lt\t1, r0, r2\n\tsub.s!\t@CPI22_12[0], r1, r3\n\tjump.gt\t@.BB22_29\n\tand!\t1, r2, r2\n\tjump.ne\t@.BB22_29\n\tst.1\t64, r1\n\tadd\t@CPI22_13[0], r0, r1\n\tadd\tstack[@returndatasize], r0, r2\n\tsub!\tr2, r0, r3\n\tadd\tr0, r0, r3\n\tadd.lt\tr1, r0, r3\n\tand\t@CPI22_13[0], r2, r2\n\tsub!\tr2, r0, r4\n\tadd.le\tr0, r0, r1\n\tsub.s!\t@CPI22_13[0], r2, r2\n\tadd.ne\tr3, r0, r1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB22_5\n\tadd\tstack-[1], r0, r1\n\tsload\tr1, r1\n\tadd\t@CPI22_9[0], r0, r2\n\tst.2\t0, r2\n\tand\t@CPI22_3[0], r1, r1\n\tadd\tr1, r0, stack-[5]\n\tst.2\t4, r1\n\tadd\t@CPI22_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI22_0[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI22_10[0], r1, r1\n\tadd\t32770, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB22_5\n\tld\tr1, r1\n\tsub!\tr1, r0, r1\n\tjump.eq\t@.BB22_5\n\tld.1\t64, r5\n\tadd\t36, r5, r1\n\tadd\tstack-[7], r0, r2\n\tst.1\tr1, r2\n\tadd\t@CPI22_15[0], r0, r1\n\tst.1\tr5, r1\n\tadd\t4, r5, r1\n\tadd\tstack-[6], r0, r2\n\tst.1\tr1, r2\n\tcontext.gas_left\tr1\n\tadd\tstack-[5], r0, r2\n\tsub.s!\t4, r2, r3\n\tjump.ne\t@.BB22_61\n\tadd\tstack[@returndatasize], r0, r4\n\tjump\t@.BB22_67\n.BB22_61:\n\tadd\t@CPI22_0[0], r0, r4\n\tsub.s!\t@CPI22_0[0], r1, r3\n\tadd.ge\tr4, r0, r1\n\tsub.s!\t@CPI22_0[0], r5, r3\n\tadd\tr4, r0, r3\n\tadd.lt\tr5, r0, r3\n\tshl.s\t64, r3, r3\n\tshl.s\t192, r1, r1\n\tor\tr1, r3, r1\n\tor\t@CPI22_16[0], r1, r1\n\tadd\tr5, r0, stack-[6]\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tadd\tstack-[6], r0, r5\n\tadd\tr1, r0, r3\n\tshr.s\t96, r3, r3\n\tand\t@CPI22_0[0], r3, stack[@returndatasize]\n\tand\t@CPI22_0[0], r3, r4\n\tptr.add\tr1, r0, stack[@ptr_return_data]\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB22_62\n.BB22_67:\n\tadd\t31, r4, r1\n\tadd\tstack-[8], r0, r2\n\tand\tr1, r2, r2\n\tadd\tr2, r5, r1\n\tsub!\tr1, r2, r2\n\tadd\t0, r0, r2\n\tadd.lt\t1, r0, r2\n\tsub.s!\t@CPI22_12[0], r1, r3\n\tjump.gt\t@.BB22_29\n\tand!\t1, r2, r2\n\tjump.ne\t@.BB22_29\n\tst.1\t64, r1\n\tadd\t@CPI22_13[0], r0, r1\n\tadd\tstack[@returndatasize], r0, r2\n\tsub!\tr2, r0, r3\n\tadd\tr0, r0, r3\n\tadd.lt\tr1, r0, r3\n\tand\t@CPI22_13[0], r2, r2\n\tsub!\tr2, r0, r4\n\tadd.le\tr0, r0, r1\n\tsub.s!\t@CPI22_13[0], r2, r2\n\tadd.ne\tr3, r0, r1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB22_5\n\tadd\tstack-[15], r0, r1\n\tadd\t@CPI22_17[0], r1, r1\n\tsload\tr1, r2\n\tadd\tstack-[7], r0, r4\n\tsub.s!\t@CPI22_18[0], r4, r3\n\tjump.gt\t@.BB22_35\n\tmul\t@CPI22_19[0], r4, r3, r4\n\tadd\tstack-[11], r0, r4\n\tdiv\tr3, r4, r3, r4\n\tsub.s\t1, r0, r4\n\txor\tr3, r4, r4\n\tsub!\tr2, r4, r4\n\tjump.gt\t@.BB22_35\n\tadd\tr3, r2, r2\n\tsstore\tr1, r2\n\tadd\t@CPI22_7[0], r0, r1\n\tst.2\t0, r1\n\tadd\t@CPI22_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI22_0[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI22_8[0], r1, r1\n\tadd\t32779, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB22_5\n.BB22_12:\n\tld\tr1, r1\n\tadd\tstack-[9], r0, r2\n\tsstore\tr2, r1\n.BB22_73:\n\tadd\tstack-[15], r0, r1\n\tadd\t@CPI22_17[0], r1, r1\n\tadd\tr1, r0, stack-[11]\n\tsload\tr1, r1\n\tadd\tstack-[16], r0, r2\n\tsload\tr2, r2\n\tsub!\tr2, r0, r3\n\tjump.eq\t@.BB22_75\n\tsub.s\t1, r0, r3\n\tdiv\tr3, r2, r3, r4\n\tsub!\tr3, r1, r3\n\tjump.lt\t@.BB22_35\n.BB22_75:\n\tmul\tr1, r2, r1, r2\n\tdiv.s\t@CPI22_19[0], r1, r2, r1\n\tadd\tstack-[16], r0, r1\n\tadd\t1, r1, r1\n\tadd\tr1, r0, stack-[9]\n\tsload\tr1, r3\n\tsub!\tr2, r3, r1\n\tjump.lt\t@.BB22_35\n\tadd\tr2, r0, stack-[7]\n\tadd\tr3, r0, stack-[6]\n\tsub!\tr2, r3, r1\n\tjump.eq\t@.BB22_131\n\tadd\t1, r0, r1\n\tadd\tr1, r0, stack-[4]\n\tsload\tr1, r1\n\tadd\t@CPI22_9[0], r0, r2\n\tst.2\t0, r2\n\tand\t@CPI22_3[0], r1, r1\n\tadd\tr1, r0, stack-[8]\n\tst.2\t4, r1\n\tadd\t@CPI22_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI22_0[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI22_10[0], r1, r1\n\tadd\t32770, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tadd\tstack-[8], r0, r5\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB22_5\n\tld\tr1, r1\n\tsub!\tr1, r0, r1\n\tjump.eq\t@.BB22_5\n\tld.1\t64, r9\n\tadd\t@CPI22_11[0], r0, r1\n\tst.1\tr9, r1\n\tcontext.this\tr1\n\tand\t@CPI22_3[0], r1, r1\n\tadd\t4, r9, r2\n\tst.1\tr2, r1\n\tcontext.gas_left\tr1\n\tsub.s!\t4, r5, r2\n\tjump.ne\t@.BB22_81\n\tadd\tstack[@returndatasize], r0, r3\n\tjump\t@.BB22_91\n.BB22_81:\n\tadd\t@CPI22_0[0], r0, r2\n\tsub.s!\t@CPI22_0[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tsub.s!\t@CPI22_0[0], r9, r3\n\tadd.lt\tr9, r0, r2\n\tshl.s\t64, r2, r2\n\tshl.s\t192, r1, r1\n\tor\tr1, r2, r1\n\tor\t@CPI22_5[0], r1, r1\n\tadd\tr5, r0, r2\n\tadd\tr9, r0, stack-[5]\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tadd\tstack-[5], r0, r9\n\tadd\tr1, r0, r3\n\tshr.s\t96, r3, r3\n\tand\t@CPI22_0[0], r3, r3\n\tsub.s!\t32, r3, r4\n\tadd\t32, r0, r5\n\tadd.lt\tr3, r0, r5\n\tand\t31, r5, r4\n\tshr.s!\t5, r5, r5\n\tjump.eq\t@.BB22_174\n\tadd\tr0, r0, r6\n.BB22_83:\n\tshl.s\t5, r6, r7\n\tadd\tr9, r7, r8\n\tptr.add\tr1, r7, r7\n\tld\tr7, r7\n\tst.1\tr8, r7\n\tadd\t1, r6, r6\n\tsub!\tr6, r5, r7\n\tjump.lt\t@.BB22_83\n.BB22_174:\n\tsub!\tr4, r0, r6\n\tjump.eq\t@.BB22_85\n\tshl.s\t5, r5, r5\n\tptr.add\tr1, r5, r6\n\tadd\tr9, r5, r5\n\tshl.s\t3, r4, r4\n\tld.1\tr5, r7\n\tshl\tr7, r4, r7\n\tshr\tr7, r4, r7\n\tld\tr6, r6\n\tsub\t256, r4, r4\n\tshr\tr6, r4, r6\n\tshl\tr6, r4, r4\n\tor\tr4, r7, r4\n\tst.1\tr5, r4\n.BB22_85:\n\tadd\tr3, r0, stack[@returndatasize]\n\tptr.add\tr1, r0, stack[@ptr_return_data]\n\tand!\t1, r2, r2\n\tadd\tstack-[8], r0, r5\n\tjump.eq\t@.BB22_86\n.BB22_91:\n\tadd\t31, r3, r1\n\tsub.s\t32, r0, r2\n\tadd\tr2, r0, stack-[5]\n\tand\tr1, r2, r2\n\tadd\tr2, r9, r1\n\tsub!\tr1, r2, r2\n\tadd\t0, r0, r2\n\tadd.lt\t1, r0, r2\n\tsub.s!\t@CPI22_12[0], r1, r3\n\tjump.gt\t@.BB22_29\n\tand!\t1, r2, r2\n\tjump.ne\t@.BB22_29\n\tst.1\t64, r1\n\tadd\t@CPI22_13[0], r0, r1\n\tadd\tstack[@returndatasize], r0, r2\n\tsub.s!\t32, r2, r3\n\tadd\tr0, r0, r3\n\tadd.lt\tr1, r0, r3\n\tand\t@CPI22_13[0], r2, r2\n\tsub!\tr2, r0, r4\n\tadd.le\tr0, r0, r1\n\tsub.s!\t@CPI22_13[0], r2, r2\n\tadd.ne\tr3, r0, r1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB22_5\n\tadd\tstack-[7], r0, r1\n\tadd\tstack-[6], r0, r2\n\tsub\tr1, r2, r3\n\tld.1\tr9, r2\n\tsub!\tr2, r3, r1\n\tjump.ge\t@.BB22_95\n\tadd\tr2, r0, stack-[7]\n\tadd\tstack-[4], r0, r1\n\tsload\tr1, r1\n\tadd\t@CPI22_9[0], r0, r2\n\tst.2\t0, r2\n\tand\t@CPI22_3[0], r1, r1\n\tadd\tr1, r0, stack-[8]\n\tst.2\t4, r1\n\tadd\t@CPI22_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI22_0[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI22_10[0], r1, r1\n\tadd\t32770, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB22_5\n\tld\tr1, r1\n\tsub!\tr1, r0, r1\n\tjump.eq\t@.BB22_5\n\tld.1\t64, r9\n\tadd\t36, r9, r1\n\tadd\tstack-[7], r0, r2\n\tst.1\tr1, r2\n\tadd\t@CPI22_20[0], r0, r1\n\tst.1\tr9, r1\n\tadd\t4, r9, r1\n\tadd\tstack-[12], r0, r2\n\tst.1\tr1, r2\n\tcontext.gas_left\tr1\n\tadd\tstack-[8], r0, r2\n\tsub.s!\t4, r2, r3\n\tjump.ne\t@.BB22_117\n\tadd\tstack[@returndatasize], r0, r3\n\tjump\t@.BB22_127\n.BB22_95:\n\tadd\tr3, r0, stack-[7]\n\tadd\t@CPI22_9[0], r0, r1\n\tst.2\t0, r1\n\tst.2\t4, r5\n\tadd\t@CPI22_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI22_0[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI22_10[0], r1, r1\n\tadd\t32770, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tadd\tstack-[8], r0, r4\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB22_5\n\tld\tr1, r1\n\tsub!\tr1, r0, r1\n\tjump.eq\t@.BB22_5\n\tld.1\t64, r9\n\tadd\t36, r9, r1\n\tadd\tstack-[7], r0, r2\n\tst.1\tr1, r2\n\tadd\t@CPI22_20[0], r0, r1\n\tst.1\tr9, r1\n\tadd\t4, r9, r1\n\tadd\tstack-[12], r0, r2\n\tst.1\tr1, r2\n\tcontext.gas_left\tr1\n\tsub.s!\t4, r4, r2\n\tjump.ne\t@.BB22_99\n\tadd\tstack[@returndatasize], r0, r3\n\tjump\t@.BB22_109\n.BB22_117:\n\tadd\t@CPI22_0[0], r0, r4\n\tsub.s!\t@CPI22_0[0], r1, r3\n\tadd.ge\tr4, r0, r1\n\tsub.s!\t@CPI22_0[0], r9, r3\n\tadd\tr4, r0, r3\n\tadd.lt\tr9, r0, r3\n\tshl.s\t64, r3, r3\n\tshl.s\t192, r1, r1\n\tor\tr1, r3, r1\n\tor\t@CPI22_16[0], r1, r1\n\tadd\tr9, r0, stack-[8]\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tadd\tstack-[8], r0, r9\n\tadd\tr1, r0, r3\n\tshr.s\t96, r3, r3\n\tand\t@CPI22_0[0], r3, r3\n\tsub.s!\t32, r3, r4\n\tadd\t32, r0, r5\n\tadd.lt\tr3, r0, r5\n\tand\t31, r5, r4\n\tshr.s!\t5, r5, r5\n\tjump.eq\t@.BB22_170\n\tadd\tr0, r0, r6\n.BB22_119:\n\tshl.s\t5, r6, r7\n\tadd\tr9, r7, r8\n\tptr.add\tr1, r7, r7\n\tld\tr7, r7\n\tst.1\tr8, r7\n\tadd\t1, r6, r6\n\tsub!\tr6, r5, r7\n\tjump.lt\t@.BB22_119\n.BB22_170:\n\tsub!\tr4, r0, r6\n\tjump.eq\t@.BB22_121\n\tshl.s\t5, r5, r5\n\tptr.add\tr1, r5, r6\n\tadd\tr9, r5, r5\n\tshl.s\t3, r4, r4\n\tld.1\tr5, r7\n\tshl\tr7, r4, r7\n\tshr\tr7, r4, r7\n\tld\tr6, r6\n\tsub\t256, r4, r4\n\tshr\tr6, r4, r6\n\tshl\tr6, r4, r4\n\tor\tr4, r7, r4\n\tst.1\tr5, r4\n.BB22_121:\n\tadd\tr3, r0, stack[@returndatasize]\n\tptr.add\tr1, r0, stack[@ptr_return_data]\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB22_122\n.BB22_127:\n\tadd\t31, r3, r1\n\tadd\tstack-[5], r0, r2\n\tand\tr1, r2, r2\n\tadd\tr2, r9, r1\n\tsub!\tr1, r2, r2\n\tadd\t0, r0, r2\n\tadd.lt\t1, r0, r2\n\tsub.s!\t@CPI22_12[0], r1, r3\n\tjump.gt\t@.BB22_29\n\tand!\t1, r2, r2\n\tjump.ne\t@.BB22_29\n\tst.1\t64, r1\n\tadd\t@CPI22_13[0], r0, r1\n\tadd\tstack[@returndatasize], r0, r2\n\tsub.s!\t32, r2, r3\n\tadd\tr0, r0, r3\n\tadd.lt\tr1, r0, r3\n\tand\t@CPI22_13[0], r2, r2\n\tsub!\tr2, r0, r4\n\tadd.le\tr0, r0, r1\n\tsub.s!\t@CPI22_13[0], r2, r2\n\tadd.ne\tr3, r0, r1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB22_5\n\tld.1\tr9, r1\n\tsub!\tr1, r0, r2\n\tadd\t0, r0, r2\n\tadd.ne\t1, r0, r2\n\tsub!\tr1, r2, r1\n\tjump.eq\t@.BB22_131\n\tjump\t@.BB22_5\n.BB22_99:\n\tadd\t@CPI22_0[0], r0, r2\n\tsub.s!\t@CPI22_0[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tsub.s!\t@CPI22_0[0], r9, r3\n\tadd.lt\tr9, r0, r2\n\tshl.s\t64, r2, r2\n\tshl.s\t192, r1, r1\n\tor\tr1, r2, r1\n\tor\t@CPI22_16[0], r1, r1\n\tadd\tr4, r0, r2\n\tadd\tr9, r0, stack-[8]\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tadd\tstack-[8], r0, r9\n\tadd\tr1, r0, r3\n\tshr.s\t96, r3, r3\n\tand\t@CPI22_0[0], r3, r3\n\tsub.s!\t32, r3, r4\n\tadd\t32, r0, r5\n\tadd.lt\tr3, r0, r5\n\tand\t31, r5, r4\n\tshr.s!\t5, r5, r5\n\tjump.eq\t@.BB22_172\n\tadd\tr0, r0, r6\n.BB22_101:\n\tshl.s\t5, r6, r7\n\tadd\tr9, r7, r8\n\tptr.add\tr1, r7, r7\n\tld\tr7, r7\n\tst.1\tr8, r7\n\tadd\t1, r6, r6\n\tsub!\tr6, r5, r7\n\tjump.lt\t@.BB22_101\n.BB22_172:\n\tsub!\tr4, r0, r6\n\tjump.eq\t@.BB22_103\n\tshl.s\t5, r5, r5\n\tptr.add\tr1, r5, r6\n\tadd\tr9, r5, r5\n\tshl.s\t3, r4, r4\n\tld.1\tr5, r7\n\tshl\tr7, r4, r7\n\tshr\tr7, r4, r7\n\tld\tr6, r6\n\tsub\t256, r4, r4\n\tshr\tr6, r4, r6\n\tshl\tr6, r4, r4\n\tor\tr4, r7, r4\n\tst.1\tr5, r4\n.BB22_103:\n\tadd\tr3, r0, stack[@returndatasize]\n\tptr.add\tr1, r0, stack[@ptr_return_data]\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB22_104\n.BB22_109:\n\tadd\t31, r3, r1\n\tadd\tstack-[5], r0, r2\n\tand\tr1, r2, r2\n\tadd\tr2, r9, r1\n\tsub!\tr1, r2, r2\n\tadd\t0, r0, r2\n\tadd.lt\t1, r0, r2\n\tsub.s!\t@CPI22_12[0], r1, r3\n\tjump.gt\t@.BB22_29\n\tand!\t1, r2, r2\n\tjump.ne\t@.BB22_29\n\tst.1\t64, r1\n\tadd\t@CPI22_13[0], r0, r1\n\tadd\tstack[@returndatasize], r0, r2\n\tsub.s!\t32, r2, r3\n\tadd\tr0, r0, r3\n\tadd.lt\tr1, r0, r3\n\tand\t@CPI22_13[0], r2, r2\n\tsub!\tr2, r0, r4\n\tadd.le\tr0, r0, r1\n\tsub.s!\t@CPI22_13[0], r2, r2\n\tadd.ne\tr3, r0, r1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB22_5\n\tld.1\tr9, r1\n\tsub!\tr1, r0, r2\n\tadd\t0, r0, r2\n\tadd.ne\t1, r0, r2\n\tsub!\tr1, r2, r1\n\tjump.ne\t@.BB22_5\n.BB22_131:\n\tadd\tstack-[17], r0, r1\n\tsub!\tr1, r0, r1\n\tjump.eq\t@.BB22_164\n\tadd\tstack-[16], r0, r1\n\tsload\tr1, r1\n\tadd\tstack-[17], r0, r2\n\tsub!\tr1, r2, r2\n\tjump.lt\t@.BB22_35\n\tadd\tstack-[17], r0, r3\n\tsub\tr1, r3, r1\n\tadd\tstack-[16], r0, r2\n\tsstore\tr2, r1\n\tadd\tstack-[15], r0, r1\n\tadd\t@CPI22_21[0], r1, r1\n\tsload\tr1, r2\n\tsub!\tr2, r3, r3\n\tjump.lt\t@.BB22_35\n\tadd\tstack-[17], r0, r4\n\tsub\tr2, r4, r2\n\tsstore\tr1, r2\n\tadd\tstack-[13], r0, r1\n\tsload\tr1, r3\n\tld.1\t64, r2\n\tadd\t68, r2, r1\n\tst.1\tr1, r4\n\tadd\t32, r2, r1\n\tadd\t@CPI22_20[0], r0, r4\n\tst.1\tr1, r4\n\tadd\t36, r2, r4\n\tadd\tstack-[12], r0, r5\n\tst.1\tr4, r5\n\tadd\t68, r0, r4\n\tst.1\tr2, r4\n\tand\t@CPI22_3[0], r3, r10\n\tsub.s!\t@CPI22_22[0], r2, r3\n\tjump.gt\t@.BB22_29\n\tadd\t128, r2, r9\n\tst.1\t64, r9\n\tsub.s!\t@CPI22_23[0], r9, r3\n\tjump.gt\t@.BB22_29\n\tadd\t192, r2, r3\n\tst.1\t64, r3\n\tadd\t32, r0, r3\n\tadd\tr3, r0, stack-[15]\n\tst.1\tr9, r3\n\tadd\t160, r2, r3\n\tadd\t@CPI22_24[0], r0, r4\n\tst.1\tr3, r4\n\tld.1\tr2, r3\n\tcontext.gas_left\tr2\n\tsub.s!\t4, r10, r4\n\tjump.ne\t@.BB22_137\n\tadd\t1, r0, r2\n\tadd\tstack[@returndatasize], r0, r1\n\tjump\t@.BB22_139\n.BB22_137:\n\tadd\t@CPI22_0[0], r0, r4\n\tsub.s!\t@CPI22_0[0], r1, r5\n\tadd.ge\tr4, r0, r1\n\tshl.s\t64, r1, r1\n\tsub.s!\t@CPI22_0[0], r3, r5\n\tadd.ge\tr4, r0, r3\n\tshl.s\t96, r3, r3\n\tor\tr3, r1, r1\n\tsub.s!\t@CPI22_0[0], r2, r3\n\tadd.ge\tr4, r0, r2\n\tshl.s\t192, r2, r2\n\tor\tr1, r2, r1\n\tadd\tr10, r0, r2\n\tadd\tr9, r0, stack-[13]\n\tadd\tr10, r0, stack-[12]\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tadd\tstack-[12], r0, r10\n\tadd\tstack-[13], r0, r9\n\tand\t1, r2, r2\n\tptr.add\tr1, r0, stack[@ptr_return_data]\n\tshr.s\t96, r1, r1\n\tand\t@CPI22_0[0], r1, stack[@returndatasize]\n\tand\t@CPI22_0[0], r1, r1\n.BB22_139:\n\tadd\t96, r0, r11\n\tsub!\tr1, r0, r3\n\tjump.eq\t@.BB22_140\n\tadd\t63, r1, r3\n\tsub.s\t32, r0, r4\n\tand\tr3, r4, r3\n\tld.1\t64, r11\n\tadd\tr11, r3, r3\n\tsub!\tr3, r11, r4\n\tadd\t0, r0, r4\n\tadd.lt\t1, r0, r4\n\tsub.s!\t@CPI22_12[0], r3, r5\n\tjump.gt\t@.BB22_29\n\tand!\t1, r4, r4\n\tjump.ne\t@.BB22_29\n\tst.1\t64, r3\n\tst.1.inc\tr11, r1, r1\n\tptr.add\tstack[@ptr_return_data], r0, r3\n\tadd\tstack[@returndatasize], r0, r5\n\tand\t31, r5, r4\n\tshr.s!\t5, r5, r5\n\tjump.eq\t@.BB22_168\n\tadd\tr0, r0, r6\n.BB22_158:\n\tshl.s\t5, r6, r7\n\tadd\tr1, r7, r8\n\tptr.add\tr3, r7, r7\n\tld\tr7, r7\n\tst.1\tr8, r7\n\tadd\t1, r6, r6\n\tsub!\tr6, r5, r7\n\tjump.lt\t@.BB22_158\n.BB22_168:\n\tsub!\tr4, r0, r6\n\tjump.eq\t@.BB22_140\n\tshl.s\t5, r5, r5\n\tptr.add\tr3, r5, r3\n\tadd\tr1, r5, r1\n\tshl.s\t3, r4, r4\n\tld.1\tr1, r5\n\tshl\tr5, r4, r5\n\tshr\tr5, r4, r5\n\tld\tr3, r3\n\tsub\t256, r4, r4\n\tshr\tr3, r4, r3\n\tshl\tr3, r4, r3\n\tor\tr3, r5, r3\n\tst.1\tr1, r3\n.BB22_140:\n\tld.1.inc\tr11, r1, r5\n\tsub!\tr2, r0, r2\n\tjump.eq\t@.BB22_141\n\tsub!\tr1, r0, r2\n\tjump.ne\t@.BB22_160\n\tadd\tr11, r0, stack-[12]\n\tadd\t@CPI22_9[0], r0, r1\n\tst.2\t0, r1\n\tst.2\t4, r10\n\tadd\t@CPI22_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI22_0[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI22_10[0], r1, r1\n\tadd\t32770, r0, r2\n\tadd\tr5, r0, stack-[13]\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tadd\tstack-[13], r0, r5\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB22_5\n\tld\tr1, r1\n\tsub!\tr1, r0, r1\n\tadd\tstack-[12], r0, r1\n\tjump.eq\t@.BB22_152\n\tld.1\tr1, r1\n\tsub!\tr1, r0, r2\n\tjump.eq\t@.BB22_164\n.BB22_160:\n\tadd\t@CPI22_13[0], r0, r2\n\tsub.s!\t32, r1, r3\n\tadd\tr0, r0, r3\n\tadd.lt\tr2, r0, r3\n\tand\t@CPI22_13[0], r1, r1\n\tsub!\tr1, r0, r4\n\tadd.le\tr0, r0, r2\n\tsub.s!\t@CPI22_13[0], r1, r1\n\tadd\tr3, r0, r1\n\tadd.eq\tr2, r0, r1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB22_5\n\tld.1\tr5, r1\n\tsub!\tr1, r0, r2\n\tadd\t0, r0, r2\n\tadd.ne\t1, r0, r2\n\tsub!\tr1, r2, r2\n\tjump.ne\t@.BB22_5\n\tsub!\tr1, r0, r1\n\tjump.eq\t@.BB22_163\n.BB22_164:\n\tadd\tstack-[11], r0, r1\n\tsload\tr1, r1\n\tadd\tstack-[16], r0, r2\n\tsload\tr2, r2\n\tsub!\tr2, r0, r3\n\tjump.eq\t@.BB22_166\n\tsub.s\t1, r0, r3\n\tdiv\tr3, r2, r3, r4\n\tsub!\tr3, r1, r3\n\tjump.lt\t@.BB22_35\n.BB22_166:\n\tmul\tr1, r2, r1, r2\n\tdiv.s\t@CPI22_19[0], r1, r1, r2\n\tadd\tstack-[9], r0, r2\n\tsstore\tr2, r1\n\tld.1\t64, r1\n\tadd\tstack-[17], r0, r2\n\tst.1\tr1, r2\n\tadd\t@CPI22_0[0], r0, r2\n\tcontext.gas_left\tr3\n\tsub.s!\t@CPI22_0[0], r3, r4\n\tadd.ge\tr2, r0, r3\n\tsub.s!\t@CPI22_0[0], r1, r4\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tshl.s\t192, r3, r2\n\tor\tr2, r1, r1\n\tor\t@CPI22_31[0], r1, r1\n\tadd\t32781, r0, r2\n\tadd\t3, r0, r3\n\tadd\t@CPI22_32[0], r0, r4\n\tadd\tstack-[10], r0, r5\n\tadd\tstack-[14], r0, r6\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r1\n\tjump.eq\t@.BB22_5\n\tret\n.BB22_5:\n\tadd\tr0, r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB22_35:\n\tadd\t@CPI22_4[0], r0, r1\n\tst.1\t0, r1\n\tadd\t17, r0, r1\n\tst.1\t4, r1\n\tadd\t@CPI22_5[0], r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB22_29:\n\tadd\t@CPI22_4[0], r0, r1\n\tst.1\t0, r1\n\tadd\t65, r0, r1\n\tst.1\t4, r1\n\tadd\t@CPI22_5[0], r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB22_3:\n\tadd\t@CPI22_4[0], r0, r1\n\tst.1\t0, r1\n\tadd\t50, r0, r1\n\tst.1\t4, r1\n\tadd\t@CPI22_5[0], r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB22_1:\n\tld.1\t64, r1\n\tadd\t68, r1, r2\n\tadd\t@CPI22_34[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t36, r1, r2\n\tadd\t15, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI22_27[0], r0, r2\n\tst.1\tr1, r2\n\tadd\t4, r1, r2\n\tadd\t32, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI22_0[0], r0, r2\n\tsub.s!\t@CPI22_0[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI22_30[0], r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB22_8:\n\tld.1\t64, r1\n\tadd\t68, r1, r2\n\tadd\t@CPI22_33[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t36, r1, r2\n\tadd\tstack-[9], r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI22_27[0], r0, r2\n\tst.1\tr1, r2\n\tadd\t4, r1, r2\n\tadd\t32, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI22_0[0], r0, r2\n\tsub.s!\t@CPI22_0[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI22_30[0], r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB22_141:\n\tsub!\tr1, r0, r2\n\tjump.ne\t@.BB22_148\n\tld.1\t64, r1\n\tadd\t@CPI22_27[0], r0, r2\n\tst.1\tr1, r2\n\tadd\t4, r1, r2\n\tadd\tstack-[15], r0, r3\n\tst.1\tr2, r3\n\tld.1\tr9, r2\n\tadd\t36, r1, r3\n\tst.1\tr3, r2\n\tsub!\tr2, r0, r3\n\tjump.eq\t@.BB22_147\n\tadd\t68, r1, r3\n\tadd\tr0, r0, r4\n.BB22_144:\n\tadd\tr4, r3, r5\n\tadd\t32, r4, r4\n\tadd\tr4, r9, r6\n\tld.1\tr6, r6\n\tst.1\tr5, r6\n\tsub!\tr4, r2, r5\n\tjump.lt\t@.BB22_144\n\tsub!\tr4, r2, r4\n\tjump.le\t@.BB22_147\n\tadd\tr2, r3, r3\n\tst.1\tr3, r0\n.BB22_147:\n\tadd\t31, r2, r2\n\tsub.s\t32, r0, r3\n\tand\tr2, r3, r2\n\tadd\t68, r2, r2\n\tadd\t@CPI22_0[0], r0, r3\n\tsub.s!\t@CPI22_0[0], r2, r4\n\tadd.ge\tr3, r0, r2\n\tsub.s!\t@CPI22_0[0], r1, r4\n\tadd.ge\tr3, r0, r1\n\tshl.s\t64, r1, r1\n\tshl.s\t96, r2, r2\n\tor\tr2, r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB22_163:\n\tld.1\t64, r1\n\tadd\t100, r1, r2\n\tadd\t@CPI22_25[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t68, r1, r2\n\tadd\t@CPI22_26[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t36, r1, r2\n\tadd\t42, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI22_27[0], r0, r2\n\tst.1\tr1, r2\n\tadd\t4, r1, r2\n\tadd\tstack-[15], r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI22_0[0], r0, r2\n\tsub.s!\t@CPI22_0[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI22_28[0], r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB22_43:\n\tadd\t@CPI22_4[0], r0, r1\n\tst.1\t0, r1\n\tadd\t18, r0, r1\n\tst.1\t4, r1\n\tadd\t@CPI22_5[0], r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB22_148:\n\tadd\t@CPI22_0[0], r0, r2\n\tsub.s!\t@CPI22_0[0], r5, r3\n\tadd\tr2, r0, r3\n\tadd.lt\tr5, r0, r3\n\tsub.s!\t@CPI22_0[0], r1, r4\n\tadd.ge\tr2, r0, r1\n\tshl.s\t96, r1, r1\n\tshl.s\t64, r3, r2\n\tor\tr1, r2, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB22_22:\n\tld.1\t64, r2\n\tand\t31, r3, r4\n\tshr.s!\t5, r3, r3\n\tjump.eq\t@.BB22_177\n\tadd\tr0, r0, r5\n.BB22_24:\n\tshl.s\t5, r5, r6\n\tadd\tr2, r6, r7\n\tptr.add\tr1, r6, r6\n\tld\tr6, r6\n\tst.1\tr7, r6\n\tadd\t1, r5, r5\n\tsub!\tr5, r3, r6\n\tjump.lt\t@.BB22_24\n.BB22_177:\n\tsub!\tr4, r0, r5\n\tjump.eq\t@.BB22_26\n\tshl.s\t5, r3, r3\n\tptr.add\tr1, r3, r1\n\tadd\tr2, r3, r3\n\tshl.s\t3, r4, r4\n\tld.1\tr3, r5\n\tshl\tr5, r4, r5\n\tshr\tr5, r4, r5\n\tld\tr1, r1\n\tsub\t256, r4, r4\n\tshr\tr1, r4, r1\n\tshl\tr1, r4, r1\n\tor\tr1, r5, r1\n\tst.1\tr3, r1\n.BB22_26:\n\tadd\t@CPI22_0[0], r0, r1\n\tadd\tstack[@returndatasize], r0, r3\n\tsub.s!\t@CPI22_0[0], r3, r4\n\tadd.ge\tr1, r0, r3\n\tsub.s!\t@CPI22_0[0], r2, r4\n\tadd.lt\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tshl.s\t96, r3, r2\n\tor\tr2, r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB22_86:\n\tld.1\t64, r2\n\tand\t31, r3, r4\n\tshr.s!\t5, r3, r3\n\tjump.eq\t@.BB22_173\n\tadd\tr0, r0, r5\n.BB22_88:\n\tshl.s\t5, r5, r6\n\tadd\tr2, r6, r7\n\tptr.add\tr1, r6, r6\n\tld\tr6, r6\n\tst.1\tr7, r6\n\tadd\t1, r5, r5\n\tsub!\tr5, r3, r6\n\tjump.lt\t@.BB22_88\n.BB22_173:\n\tsub!\tr4, r0, r5\n\tjump.eq\t@.BB22_90\n\tshl.s\t5, r3, r3\n\tptr.add\tr1, r3, r1\n\tadd\tr2, r3, r3\n\tshl.s\t3, r4, r4\n\tld.1\tr3, r5\n\tshl\tr5, r4, r5\n\tshr\tr5, r4, r5\n\tld\tr1, r1\n\tsub\t256, r4, r4\n\tshr\tr1, r4, r1\n\tshl\tr1, r4, r1\n\tor\tr1, r5, r1\n\tst.1\tr3, r1\n.BB22_90:\n\tadd\t@CPI22_0[0], r0, r1\n\tadd\tstack[@returndatasize], r0, r3\n\tsub.s!\t@CPI22_0[0], r3, r4\n\tadd.ge\tr1, r0, r3\n\tsub.s!\t@CPI22_0[0], r2, r4\n\tadd.lt\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tshl.s\t96, r3, r2\n\tor\tr2, r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB22_152:\n\tld.1\t64, r1\n\tadd\t68, r1, r2\n\tadd\t@CPI22_29[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t36, r1, r2\n\tadd\t29, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI22_27[0], r0, r2\n\tst.1\tr1, r2\n\tadd\t4, r1, r2\n\tadd\tstack-[15], r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI22_0[0], r0, r2\n\tsub.s!\t@CPI22_0[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI22_30[0], r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB22_49:\n\tld.1\t64, r2\n\tand\t31, r4, r3\n\tshr.s!\t5, r4, r4\n\tjump.eq\t@.BB22_176\n\tadd\tr0, r0, r5\n.BB22_51:\n\tshl.s\t5, r5, r6\n\tadd\tr2, r6, r7\n\tptr.add\tr1, r6, r6\n\tld\tr6, r6\n\tst.1\tr7, r6\n\tadd\t1, r5, r5\n\tsub!\tr5, r4, r6\n\tjump.lt\t@.BB22_51\n.BB22_176:\n\tsub!\tr3, r0, r5\n\tjump.eq\t@.BB22_53\n\tshl.s\t5, r4, r4\n\tptr.add\tr1, r4, r1\n\tadd\tr2, r4, r4\n\tshl.s\t3, r3, r3\n\tld.1\tr4, r5\n\tshl\tr5, r3, r5\n\tshr\tr5, r3, r5\n\tld\tr1, r1\n\tsub\t256, r3, r3\n\tshr\tr1, r3, r1\n\tshl\tr1, r3, r1\n\tor\tr1, r5, r1\n\tst.1\tr4, r1\n.BB22_53:\n\tadd\t@CPI22_0[0], r0, r1\n\tadd\tstack[@returndatasize], r0, r3\n\tsub.s!\t@CPI22_0[0], r3, r4\n\tadd.ge\tr1, r0, r3\n\tsub.s!\t@CPI22_0[0], r2, r4\n\tadd.lt\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tshl.s\t96, r3, r2\n\tor\tr2, r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB22_62:\n\tld.1\t64, r2\n\tand\t31, r4, r3\n\tshr.s!\t5, r4, r4\n\tjump.eq\t@.BB22_175\n\tadd\tr0, r0, r5\n.BB22_64:\n\tshl.s\t5, r5, r6\n\tadd\tr2, r6, r7\n\tptr.add\tr1, r6, r6\n\tld\tr6, r6\n\tst.1\tr7, r6\n\tadd\t1, r5, r5\n\tsub!\tr5, r4, r6\n\tjump.lt\t@.BB22_64\n.BB22_175:\n\tsub!\tr3, r0, r5\n\tjump.eq\t@.BB22_66\n\tshl.s\t5, r4, r4\n\tptr.add\tr1, r4, r1\n\tadd\tr2, r4, r4\n\tshl.s\t3, r3, r3\n\tld.1\tr4, r5\n\tshl\tr5, r3, r5\n\tshr\tr5, r3, r5\n\tld\tr1, r1\n\tsub\t256, r3, r3\n\tshr\tr1, r3, r1\n\tshl\tr1, r3, r1\n\tor\tr1, r5, r1\n\tst.1\tr4, r1\n.BB22_66:\n\tadd\t@CPI22_0[0], r0, r1\n\tadd\tstack[@returndatasize], r0, r3\n\tsub.s!\t@CPI22_0[0], r3, r4\n\tadd.ge\tr1, r0, r3\n\tsub.s!\t@CPI22_0[0], r2, r4\n\tadd.lt\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tshl.s\t96, r3, r2\n\tor\tr2, r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB22_122:\n\tld.1\t64, r2\n\tand\t31, r3, r4\n\tshr.s!\t5, r3, r3\n\tjump.eq\t@.BB22_169\n\tadd\tr0, r0, r5\n.BB22_124:\n\tshl.s\t5, r5, r6\n\tadd\tr2, r6, r7\n\tptr.add\tr1, r6, r6\n\tld\tr6, r6\n\tst.1\tr7, r6\n\tadd\t1, r5, r5\n\tsub!\tr5, r3, r6\n\tjump.lt\t@.BB22_124\n.BB22_169:\n\tsub!\tr4, r0, r5\n\tjump.eq\t@.BB22_126\n\tshl.s\t5, r3, r3\n\tptr.add\tr1, r3, r1\n\tadd\tr2, r3, r3\n\tshl.s\t3, r4, r4\n\tld.1\tr3, r5\n\tshl\tr5, r4, r5\n\tshr\tr5, r4, r5\n\tld\tr1, r1\n\tsub\t256, r4, r4\n\tshr\tr1, r4, r1\n\tshl\tr1, r4, r1\n\tor\tr1, r5, r1\n\tst.1\tr3, r1\n.BB22_126:\n\tadd\t@CPI22_0[0], r0, r1\n\tadd\tstack[@returndatasize], r0, r3\n\tsub.s!\t@CPI22_0[0], r3, r4\n\tadd.ge\tr1, r0, r3\n\tsub.s!\t@CPI22_0[0], r2, r4\n\tadd.lt\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tshl.s\t96, r3, r2\n\tor\tr2, r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB22_104:\n\tld.1\t64, r2\n\tand\t31, r3, r4\n\tshr.s!\t5, r3, r3\n\tjump.eq\t@.BB22_171\n\tadd\tr0, r0, r5\n.BB22_106:\n\tshl.s\t5, r5, r6\n\tadd\tr2, r6, r7\n\tptr.add\tr1, r6, r6\n\tld\tr6, r6\n\tst.1\tr7, r6\n\tadd\t1, r5, r5\n\tsub!\tr5, r3, r6\n\tjump.lt\t@.BB22_106\n.BB22_171:\n\tsub!\tr4, r0, r5\n\tjump.eq\t@.BB22_108\n\tshl.s\t5, r3, r3\n\tptr.add\tr1, r3, r1\n\tadd\tr2, r3, r3\n\tshl.s\t3, r4, r4\n\tld.1\tr3, r5\n\tshl\tr5, r4, r5\n\tshr\tr5, r4, r5\n\tld\tr1, r1\n\tsub\t256, r4, r4\n\tshr\tr1, r4, r1\n\tshl\tr1, r4, r1\n\tor\tr1, r5, r1\n\tst.1\tr3, r1\n.BB22_108:\n\tadd\t@CPI22_0[0], r0, r1\n\tadd\tstack[@returndatasize], r0, r3\n\tsub.s!\t@CPI22_0[0], r3, r4\n\tadd.ge\tr1, r0, r3\n\tsub.s!\t@CPI22_0[0], r2, r4\n\tadd.lt\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tshl.s\t96, r3, r2\n\tor\tr2, r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.func_end22:\n\nfun_staking:\n.func_begin23:\n\tnop\tstack+=[13]\n\tadd\tr1, r0, stack-[13]\n\tadd\t5, r0, r2\n\tsload\tr2, r1\n\tsub!\tr1, r0, r1\n\tjump.eq\t@.BB23_1\n\tadd\tr2, r0, stack-[11]\n\tst.1\t0, r0\n\tadd\t6, r0, r1\n\tst.1\t32, r1\n\tadd\t@CPI23_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI23_0[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI23_1[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB23_3\n\tld\tr1, r1\n\tcontext.caller\tr2\n\tadd\tr2, r0, stack-[10]\n\tand\t@CPI23_2[0], r2, r2\n\tadd\tr2, r0, stack-[9]\n\tst.1\t0, r2\n\tst.1\t32, r1\n\tadd\t@CPI23_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI23_0[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI23_1[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB23_3\n\tld\tr1, r1\n\tadd\tr1, r0, stack-[12]\n\tadd\tstack-[11], r0, r2\n\tsload\tr2, r1\n\tsub!\tr1, r0, r1\n\tjump.eq\t@.BB23_1\n\tst.1\t0, r2\n\tadd\t@CPI23_3[0], r0, r1\n\tsload\tr1, r1\n\tadd\tr1, r0, stack-[11]\n\tadd\t@CPI23_4[0], r0, r1\n\tst.2\t0, r1\n\tadd\t@CPI23_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI23_0[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI23_5[0], r1, r1\n\tadd\t32779, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB23_3\n\tld\tr1, r1\n\tadd\tstack-[11], r0, r2\n\tsub!\tr1, r2, r1\n\tjump.le\t@.BB23_69\n\tadd\t@CPI23_6[0], r0, r1\n\tsload\tr1, r1\n\tadd\t@CPI23_7[0], r0, r2\n\tst.2\t0, r2\n\tand\t@CPI23_2[0], r1, r1\n\tadd\tr1, r0, stack-[11]\n\tst.2\t4, r1\n\tadd\t@CPI23_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI23_0[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI23_8[0], r1, r1\n\tadd\t32770, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB23_3\n\tld\tr1, r1\n\tsub!\tr1, r0, r1\n\tjump.eq\t@.BB23_3\n\tld.1\t64, r9\n\tadd\t@CPI23_9[0], r0, r1\n\tst.1\tr9, r1\n\tcontext.this\tr1\n\tand\t@CPI23_2[0], r1, r2\n\tadd\t4, r9, r1\n\tadd\tr2, r0, stack-[6]\n\tst.1\tr1, r2\n\tcontext.gas_left\tr1\n\tadd\tstack-[11], r0, r2\n\tsub.s!\t4, r2, r3\n\tjump.ne\t@.BB23_13\n\tadd\tstack[@returndatasize], r0, r3\n\tjump\t@.BB23_23\n.BB23_13:\n\tadd\t@CPI23_0[0], r0, r4\n\tsub.s!\t@CPI23_0[0], r1, r3\n\tadd.ge\tr4, r0, r1\n\tsub.s!\t@CPI23_0[0], r9, r3\n\tadd\tr4, r0, r3\n\tadd.lt\tr9, r0, r3\n\tshl.s\t64, r3, r3\n\tshl.s\t192, r1, r1\n\tor\tr1, r3, r1\n\tor\t@CPI23_10[0], r1, r1\n\tadd\tr9, r0, stack-[11]\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tadd\tstack-[11], r0, r9\n\tadd\tr1, r0, r3\n\tshr.s\t96, r3, r3\n\tand\t@CPI23_0[0], r3, r3\n\tsub.s!\t32, r3, r4\n\tadd\t32, r0, r5\n\tadd.lt\tr3, r0, r5\n\tand\t31, r5, r4\n\tshr.s!\t5, r5, r5\n\tjump.eq\t@.BB23_175\n\tadd\tr0, r0, r6\n.BB23_15:\n\tshl.s\t5, r6, r7\n\tadd\tr9, r7, r8\n\tptr.add\tr1, r7, r7\n\tld\tr7, r7\n\tst.1\tr8, r7\n\tadd\t1, r6, r6\n\tsub!\tr6, r5, r7\n\tjump.lt\t@.BB23_15\n.BB23_175:\n\tsub!\tr4, r0, r6\n\tjump.eq\t@.BB23_17\n\tshl.s\t5, r5, r5\n\tptr.add\tr1, r5, r6\n\tadd\tr9, r5, r5\n\tshl.s\t3, r4, r4\n\tld.1\tr5, r7\n\tshl\tr7, r4, r7\n\tshr\tr7, r4, r7\n\tld\tr6, r6\n\tsub\t256, r4, r4\n\tshr\tr6, r4, r6\n\tshl\tr6, r4, r4\n\tor\tr4, r7, r4\n\tst.1\tr5, r4\n.BB23_17:\n\tadd\tr3, r0, stack[@returndatasize]\n\tptr.add\tr1, r0, stack[@ptr_return_data]\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB23_18\n.BB23_23:\n\tadd\t31, r3, r1\n\tsub.s\t32, r0, r2\n\tadd\tr2, r0, stack-[8]\n\tand\tr1, r2, r2\n\tadd\tr2, r9, r1\n\tsub!\tr1, r2, r2\n\tadd\t0, r0, r2\n\tadd.lt\t1, r0, r2\n\tsub.s!\t@CPI23_11[0], r1, r3\n\tjump.gt\t@.BB23_25\n\tand!\t1, r2, r2\n\tjump.ne\t@.BB23_25\n\tst.1\t64, r1\n\tadd\t@CPI23_12[0], r0, r1\n\tadd\tstack[@returndatasize], r0, r2\n\tsub.s!\t32, r2, r3\n\tadd\tr0, r0, r3\n\tadd.lt\tr1, r0, r3\n\tand\t@CPI23_12[0], r2, r2\n\tsub!\tr2, r0, r4\n\tadd.le\tr0, r0, r1\n\tsub.s!\t@CPI23_12[0], r2, r2\n\tadd.ne\tr3, r0, r1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB23_3\n\tld.1\tr9, r1\n\tadd\tr1, r0, stack-[11]\n\tadd\t@CPI23_4[0], r0, r1\n\tst.2\t0, r1\n\tadd\t@CPI23_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI23_0[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI23_5[0], r1, r1\n\tadd\t32779, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tadd\tstack-[11], r0, r3\n\tsub!\tr3, r0, r3\n\tand\t1, r2, r2\n\tjump.eq\t@.BB23_28\n\tsub!\tr2, r0, r2\n\tjump.eq\t@.BB23_3\n\tadd\t@CPI23_3[0], r0, r2\n\tsload\tr2, r3\n\tld\tr1, r4\n\tsub!\tr4, r3, r1\n\tjump.lt\t@.BB23_31\n\tsub\tr4, r3, r1\n\tadd\t4, r0, r2\n\tsload\tr2, r2\n\tsub!\tr4, r3, r3\n\tjump.eq\t@.BB23_34\n\tsub.s\t1, r0, r3\n\tdiv\tr3, r1, r3, r4\n\tsub!\tr3, r2, r3\n\tjump.lt\t@.BB23_31\n.BB23_34:\n\tmul!\tr2, r1, r1, r2\n\tadd\t3, r0, r2\n\tsload\tr2, r2\n\tjump.eq\t@.BB23_36\n\tsub.s\t1, r0, r3\n\tdiv\tr3, r1, r3, r4\n\tsub!\tr3, r2, r3\n\tjump.lt\t@.BB23_31\n.BB23_36:\n\tmul!\tr2, r1, r3, r1\n\tadd\t@CPI23_13[0], r0, r1\n\tsload\tr1, r4\n\tjump.eq\t@.BB23_38\n\tsub.s\t1, r0, r1\n\tdiv\tr1, r3, r1, r2\n\tsub!\tr1, r4, r1\n\tjump.lt\t@.BB23_31\n.BB23_38:\n\tadd\tr4, r0, stack-[4]\n\tadd\tr3, r0, stack-[5]\n\tadd\t7, r0, r1\n\tsload\tr1, r1\n\tadd\tr1, r0, stack-[3]\n\tsub!\tr1, r0, r1\n\tjump.eq\t@.BB23_39\n\tadd\t2, r0, r1\n\tsload\tr1, r1\n\tadd\tr1, r0, stack-[7]\n\tadd\t1, r0, r1\n\tadd\tr1, r0, stack-[1]\n\tsload\tr1, r1\n\tadd\t@CPI23_7[0], r0, r2\n\tst.2\t0, r2\n\tand\t@CPI23_2[0], r1, r1\n\tadd\tr1, r0, stack-[2]\n\tst.2\t4, r1\n\tadd\t@CPI23_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI23_0[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI23_8[0], r1, r1\n\tadd\t32770, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tadd\tstack-[7], r0, r3\n\tand\t@CPI23_2[0], r3, r3\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB23_3\n\tld\tr1, r1\n\tsub!\tr1, r0, r1\n\tjump.eq\t@.BB23_3\n\tadd\tstack-[5], r0, r1\n\tadd\tstack-[4], r0, r2\n\tmul\tr2, r1, r1, r2\n\tadd\tstack-[3], r0, r2\n\tdiv\tr1, r2, r2, r1\n\tadd\tr2, r0, stack-[7]\n\tdiv.s\t10, r2, r1, r2\n\tld.1\t64, r5\n\tadd\t36, r5, r2\n\tst.1\tr2, r1\n\tadd\t@CPI23_14[0], r0, r1\n\tst.1\tr5, r1\n\tadd\t4, r5, r1\n\tst.1\tr1, r3\n\tcontext.gas_left\tr1\n\tadd\tstack-[2], r0, r2\n\tsub.s!\t4, r2, r3\n\tjump.ne\t@.BB23_44\n\tadd\tstack[@returndatasize], r0, r4\n\tjump\t@.BB23_50\n.BB23_28:\n\tsub!\tr2, r0, r2\n\tjump.ne\t@.BB23_8\n\tjump\t@.BB23_3\n.BB23_44:\n\tadd\t@CPI23_0[0], r0, r4\n\tsub.s!\t@CPI23_0[0], r1, r3\n\tadd.ge\tr4, r0, r1\n\tsub.s!\t@CPI23_0[0], r5, r3\n\tadd\tr4, r0, r3\n\tadd.lt\tr5, r0, r3\n\tshl.s\t64, r3, r3\n\tshl.s\t192, r1, r1\n\tor\tr1, r3, r1\n\tor\t@CPI23_15[0], r1, r1\n\tadd\tr5, r0, stack-[5]\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tadd\tstack-[5], r0, r5\n\tadd\tr1, r0, r3\n\tshr.s\t96, r3, r3\n\tand\t@CPI23_0[0], r3, stack[@returndatasize]\n\tand\t@CPI23_0[0], r3, r4\n\tptr.add\tr1, r0, stack[@ptr_return_data]\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB23_45\n.BB23_50:\n\tadd\t31, r4, r1\n\tadd\tstack-[8], r0, r2\n\tand\tr1, r2, r2\n\tadd\tr2, r5, r1\n\tsub!\tr1, r2, r2\n\tadd\t0, r0, r2\n\tadd.lt\t1, r0, r2\n\tsub.s!\t@CPI23_11[0], r1, r3\n\tjump.gt\t@.BB23_25\n\tand!\t1, r2, r2\n\tjump.ne\t@.BB23_25\n\tst.1\t64, r1\n\tadd\t@CPI23_12[0], r0, r1\n\tadd\tstack[@returndatasize], r0, r2\n\tsub!\tr2, r0, r3\n\tadd\tr0, r0, r3\n\tadd.lt\tr1, r0, r3\n\tand\t@CPI23_12[0], r2, r2\n\tsub!\tr2, r0, r4\n\tadd.le\tr0, r0, r1\n\tsub.s!\t@CPI23_12[0], r2, r2\n\tadd.ne\tr3, r0, r1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB23_3\n\tadd\tstack-[1], r0, r1\n\tsload\tr1, r1\n\tadd\t@CPI23_7[0], r0, r2\n\tst.2\t0, r2\n\tand\t@CPI23_2[0], r1, r1\n\tadd\tr1, r0, stack-[5]\n\tst.2\t4, r1\n\tadd\t@CPI23_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI23_0[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI23_8[0], r1, r1\n\tadd\t32770, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB23_3\n\tld\tr1, r1\n\tsub!\tr1, r0, r1\n\tjump.eq\t@.BB23_3\n\tld.1\t64, r5\n\tadd\t36, r5, r1\n\tadd\tstack-[7], r0, r2\n\tst.1\tr1, r2\n\tadd\t@CPI23_14[0], r0, r1\n\tst.1\tr5, r1\n\tadd\t4, r5, r1\n\tadd\tstack-[6], r0, r2\n\tst.1\tr1, r2\n\tcontext.gas_left\tr1\n\tadd\tstack-[5], r0, r2\n\tsub.s!\t4, r2, r3\n\tjump.ne\t@.BB23_57\n\tadd\tstack[@returndatasize], r0, r4\n\tjump\t@.BB23_63\n.BB23_57:\n\tadd\t@CPI23_0[0], r0, r4\n\tsub.s!\t@CPI23_0[0], r1, r3\n\tadd.ge\tr4, r0, r1\n\tsub.s!\t@CPI23_0[0], r5, r3\n\tadd\tr4, r0, r3\n\tadd.lt\tr5, r0, r3\n\tshl.s\t64, r3, r3\n\tshl.s\t192, r1, r1\n\tor\tr1, r3, r1\n\tor\t@CPI23_15[0], r1, r1\n\tadd\tr5, r0, stack-[6]\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tadd\tstack-[6], r0, r5\n\tadd\tr1, r0, r3\n\tshr.s\t96, r3, r3\n\tand\t@CPI23_0[0], r3, stack[@returndatasize]\n\tand\t@CPI23_0[0], r3, r4\n\tptr.add\tr1, r0, stack[@ptr_return_data]\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB23_58\n.BB23_63:\n\tadd\t31, r4, r1\n\tadd\tstack-[8], r0, r2\n\tand\tr1, r2, r2\n\tadd\tr2, r5, r1\n\tsub!\tr1, r2, r2\n\tadd\t0, r0, r2\n\tadd.lt\t1, r0, r2\n\tsub.s!\t@CPI23_11[0], r1, r3\n\tjump.gt\t@.BB23_25\n\tand!\t1, r2, r2\n\tjump.ne\t@.BB23_25\n\tst.1\t64, r1\n\tadd\t@CPI23_12[0], r0, r1\n\tadd\tstack[@returndatasize], r0, r2\n\tsub!\tr2, r0, r3\n\tadd\tr0, r0, r3\n\tadd.lt\tr1, r0, r3\n\tand\t@CPI23_12[0], r2, r2\n\tsub!\tr2, r0, r4\n\tadd.le\tr0, r0, r1\n\tsub.s!\t@CPI23_12[0], r2, r2\n\tadd.ne\tr3, r0, r1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB23_3\n\tadd\t@CPI23_16[0], r0, r1\n\tsload\tr1, r1\n\tadd\tstack-[7], r0, r3\n\tsub.s!\t@CPI23_17[0], r3, r2\n\tjump.gt\t@.BB23_31\n\tmul\t@CPI23_18[0], r3, r2, r3\n\tadd\tstack-[11], r0, r3\n\tdiv\tr2, r3, r2, r3\n\tsub.s\t1, r0, r3\n\txor\tr2, r3, r3\n\tsub!\tr1, r3, r3\n\tjump.gt\t@.BB23_31\n\tadd\tr2, r1, r1\n\tadd\t@CPI23_16[0], r0, r2\n\tsstore\tr2, r1\n\tadd\t@CPI23_4[0], r0, r1\n\tst.2\t0, r1\n\tadd\t@CPI23_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI23_0[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI23_5[0], r1, r1\n\tadd\t32779, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB23_3\n.BB23_8:\n\tld\tr1, r1\n\tadd\t@CPI23_3[0], r0, r2\n\tsstore\tr2, r1\n.BB23_69:\n\tadd\tstack-[12], r0, r3\n\tsload\tr3, r1\n\tsub!\tr1, r0, r2\n\tadd\t1, r3, r2\n\tadd\tr2, r0, stack-[11]\n\tjump.eq\t@.BB23_73\n\tsub.s\t1, r0, r2\n\tdiv\tr2, r1, r3, r2\n\tadd\t@CPI23_16[0], r0, r2\n\tsload\tr2, r2\n\tsub!\tr3, r2, r3\n\tjump.lt\t@.BB23_31\n\tmul\tr2, r1, r1, r2\n\tdiv.s\t@CPI23_18[0], r1, r2, r1\n\tadd\tstack-[11], r0, r1\n\tsload\tr1, r3\n\tsub!\tr2, r3, r1\n\tjump.lt\t@.BB23_31\n\tadd\tr2, r0, stack-[7]\n\tadd\tr3, r0, stack-[6]\n\tsub!\tr2, r3, r1\n\tjump.eq\t@.BB23_73\n\tadd\t1, r0, r1\n\tadd\tr1, r0, stack-[4]\n\tsload\tr1, r1\n\tadd\t@CPI23_7[0], r0, r2\n\tst.2\t0, r2\n\tand\t@CPI23_2[0], r1, r1\n\tadd\tr1, r0, stack-[8]\n\tst.2\t4, r1\n\tadd\t@CPI23_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI23_0[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI23_8[0], r1, r1\n\tadd\t32770, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tadd\tstack-[8], r0, r5\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB23_3\n\tld\tr1, r1\n\tsub!\tr1, r0, r1\n\tjump.eq\t@.BB23_3\n\tld.1\t64, r9\n\tadd\t@CPI23_9[0], r0, r1\n\tst.1\tr9, r1\n\tcontext.this\tr1\n\tand\t@CPI23_2[0], r1, r1\n\tadd\t4, r9, r2\n\tst.1\tr2, r1\n\tcontext.gas_left\tr1\n\tsub.s!\t4, r5, r2\n\tjump.ne\t@.BB23_78\n\tadd\tstack[@returndatasize], r0, r3\n\tjump\t@.BB23_88\n.BB23_78:\n\tadd\t@CPI23_0[0], r0, r2\n\tsub.s!\t@CPI23_0[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tsub.s!\t@CPI23_0[0], r9, r3\n\tadd.lt\tr9, r0, r2\n\tshl.s\t64, r2, r2\n\tshl.s\t192, r1, r1\n\tor\tr1, r2, r1\n\tor\t@CPI23_10[0], r1, r1\n\tadd\tr5, r0, r2\n\tadd\tr9, r0, stack-[5]\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tadd\tstack-[5], r0, r9\n\tadd\tr1, r0, r3\n\tshr.s\t96, r3, r3\n\tand\t@CPI23_0[0], r3, r3\n\tsub.s!\t32, r3, r4\n\tadd\t32, r0, r5\n\tadd.lt\tr3, r0, r5\n\tand\t31, r5, r4\n\tshr.s!\t5, r5, r5\n\tjump.eq\t@.BB23_171\n\tadd\tr0, r0, r6\n.BB23_80:\n\tshl.s\t5, r6, r7\n\tadd\tr9, r7, r8\n\tptr.add\tr1, r7, r7\n\tld\tr7, r7\n\tst.1\tr8, r7\n\tadd\t1, r6, r6\n\tsub!\tr6, r5, r7\n\tjump.lt\t@.BB23_80\n.BB23_171:\n\tsub!\tr4, r0, r6\n\tjump.eq\t@.BB23_82\n\tshl.s\t5, r5, r5\n\tptr.add\tr1, r5, r6\n\tadd\tr9, r5, r5\n\tshl.s\t3, r4, r4\n\tld.1\tr5, r7\n\tshl\tr7, r4, r7\n\tshr\tr7, r4, r7\n\tld\tr6, r6\n\tsub\t256, r4, r4\n\tshr\tr6, r4, r6\n\tshl\tr6, r4, r4\n\tor\tr4, r7, r4\n\tst.1\tr5, r4\n.BB23_82:\n\tadd\tr3, r0, stack[@returndatasize]\n\tptr.add\tr1, r0, stack[@ptr_return_data]\n\tand!\t1, r2, r2\n\tadd\tstack-[8], r0, r5\n\tjump.eq\t@.BB23_83\n.BB23_88:\n\tadd\t31, r3, r1\n\tsub.s\t32, r0, r2\n\tadd\tr2, r0, stack-[5]\n\tand\tr1, r2, r2\n\tadd\tr2, r9, r1\n\tsub!\tr1, r2, r2\n\tadd\t0, r0, r2\n\tadd.lt\t1, r0, r2\n\tsub.s!\t@CPI23_11[0], r1, r3\n\tjump.gt\t@.BB23_25\n\tand!\t1, r2, r2\n\tjump.ne\t@.BB23_25\n\tst.1\t64, r1\n\tadd\t@CPI23_12[0], r0, r1\n\tadd\tstack[@returndatasize], r0, r2\n\tsub.s!\t32, r2, r3\n\tadd\tr0, r0, r3\n\tadd.lt\tr1, r0, r3\n\tand\t@CPI23_12[0], r2, r2\n\tsub!\tr2, r0, r4\n\tadd.le\tr0, r0, r1\n\tsub.s!\t@CPI23_12[0], r2, r2\n\tadd.ne\tr3, r0, r1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB23_3\n\tadd\tstack-[7], r0, r1\n\tadd\tstack-[6], r0, r2\n\tsub\tr1, r2, r3\n\tld.1\tr9, r2\n\tsub!\tr2, r3, r1\n\tjump.ge\t@.BB23_92\n\tadd\tr2, r0, stack-[7]\n\tadd\tstack-[4], r0, r1\n\tsload\tr1, r1\n\tadd\t@CPI23_7[0], r0, r2\n\tst.2\t0, r2\n\tand\t@CPI23_2[0], r1, r1\n\tadd\tr1, r0, stack-[8]\n\tst.2\t4, r1\n\tadd\t@CPI23_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI23_0[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI23_8[0], r1, r1\n\tadd\t32770, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB23_3\n\tld\tr1, r1\n\tsub!\tr1, r0, r1\n\tjump.eq\t@.BB23_3\n\tld.1\t64, r9\n\tadd\t36, r9, r1\n\tadd\tstack-[7], r0, r2\n\tst.1\tr1, r2\n\tadd\t@CPI23_20[0], r0, r1\n\tst.1\tr9, r1\n\tadd\t4, r9, r1\n\tadd\tstack-[9], r0, r2\n\tst.1\tr1, r2\n\tcontext.gas_left\tr1\n\tadd\tstack-[8], r0, r2\n\tsub.s!\t4, r2, r3\n\tjump.ne\t@.BB23_114\n\tadd\tstack[@returndatasize], r0, r3\n\tjump\t@.BB23_124\n.BB23_92:\n\tadd\tr3, r0, stack-[7]\n\tadd\t@CPI23_7[0], r0, r1\n\tst.2\t0, r1\n\tst.2\t4, r5\n\tadd\t@CPI23_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI23_0[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI23_8[0], r1, r1\n\tadd\t32770, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tadd\tstack-[8], r0, r4\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB23_3\n\tld\tr1, r1\n\tsub!\tr1, r0, r1\n\tjump.eq\t@.BB23_3\n\tld.1\t64, r9\n\tadd\t36, r9, r1\n\tadd\tstack-[7], r0, r2\n\tst.1\tr1, r2\n\tadd\t@CPI23_20[0], r0, r1\n\tst.1\tr9, r1\n\tadd\t4, r9, r1\n\tadd\tstack-[9], r0, r2\n\tst.1\tr1, r2\n\tcontext.gas_left\tr1\n\tsub.s!\t4, r4, r2\n\tjump.ne\t@.BB23_96\n\tadd\tstack[@returndatasize], r0, r3\n\tjump\t@.BB23_106\n.BB23_114:\n\tadd\t@CPI23_0[0], r0, r4\n\tsub.s!\t@CPI23_0[0], r1, r3\n\tadd.ge\tr4, r0, r1\n\tsub.s!\t@CPI23_0[0], r9, r3\n\tadd\tr4, r0, r3\n\tadd.lt\tr9, r0, r3\n\tshl.s\t64, r3, r3\n\tshl.s\t192, r1, r1\n\tor\tr1, r3, r1\n\tor\t@CPI23_15[0], r1, r1\n\tadd\tr9, r0, stack-[8]\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tadd\tstack-[8], r0, r9\n\tadd\tr1, r0, r3\n\tshr.s\t96, r3, r3\n\tand\t@CPI23_0[0], r3, r3\n\tsub.s!\t32, r3, r4\n\tadd\t32, r0, r5\n\tadd.lt\tr3, r0, r5\n\tand\t31, r5, r4\n\tshr.s!\t5, r5, r5\n\tjump.eq\t@.BB23_167\n\tadd\tr0, r0, r6\n.BB23_116:\n\tshl.s\t5, r6, r7\n\tadd\tr9, r7, r8\n\tptr.add\tr1, r7, r7\n\tld\tr7, r7\n\tst.1\tr8, r7\n\tadd\t1, r6, r6\n\tsub!\tr6, r5, r7\n\tjump.lt\t@.BB23_116\n.BB23_167:\n\tsub!\tr4, r0, r6\n\tjump.eq\t@.BB23_118\n\tshl.s\t5, r5, r5\n\tptr.add\tr1, r5, r6\n\tadd\tr9, r5, r5\n\tshl.s\t3, r4, r4\n\tld.1\tr5, r7\n\tshl\tr7, r4, r7\n\tshr\tr7, r4, r7\n\tld\tr6, r6\n\tsub\t256, r4, r4\n\tshr\tr6, r4, r6\n\tshl\tr6, r4, r4\n\tor\tr4, r7, r4\n\tst.1\tr5, r4\n.BB23_118:\n\tadd\tr3, r0, stack[@returndatasize]\n\tptr.add\tr1, r0, stack[@ptr_return_data]\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB23_119\n.BB23_124:\n\tadd\t31, r3, r1\n\tadd\tstack-[5], r0, r2\n\tand\tr1, r2, r2\n\tadd\tr2, r9, r1\n\tsub!\tr1, r2, r2\n\tadd\t0, r0, r2\n\tadd.lt\t1, r0, r2\n\tsub.s!\t@CPI23_11[0], r1, r3\n\tjump.gt\t@.BB23_25\n\tand!\t1, r2, r2\n\tjump.ne\t@.BB23_25\n\tst.1\t64, r1\n\tadd\t@CPI23_12[0], r0, r1\n\tadd\tstack[@returndatasize], r0, r2\n\tsub.s!\t32, r2, r3\n\tadd\tr0, r0, r3\n\tadd.lt\tr1, r0, r3\n\tand\t@CPI23_12[0], r2, r2\n\tsub!\tr2, r0, r4\n\tadd.le\tr0, r0, r1\n\tsub.s!\t@CPI23_12[0], r2, r2\n\tadd.ne\tr3, r0, r1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB23_3\n\tld.1\tr9, r1\n\tsub!\tr1, r0, r2\n\tadd\t0, r0, r2\n\tadd.ne\t1, r0, r2\n\tsub!\tr1, r2, r1\n\tjump.eq\t@.BB23_73\n\tjump\t@.BB23_3\n.BB23_96:\n\tadd\t@CPI23_0[0], r0, r2\n\tsub.s!\t@CPI23_0[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tsub.s!\t@CPI23_0[0], r9, r3\n\tadd.lt\tr9, r0, r2\n\tshl.s\t64, r2, r2\n\tshl.s\t192, r1, r1\n\tor\tr1, r2, r1\n\tor\t@CPI23_15[0], r1, r1\n\tadd\tr4, r0, r2\n\tadd\tr9, r0, stack-[8]\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tadd\tstack-[8], r0, r9\n\tadd\tr1, r0, r3\n\tshr.s\t96, r3, r3\n\tand\t@CPI23_0[0], r3, r3\n\tsub.s!\t32, r3, r4\n\tadd\t32, r0, r5\n\tadd.lt\tr3, r0, r5\n\tand\t31, r5, r4\n\tshr.s!\t5, r5, r5\n\tjump.eq\t@.BB23_169\n\tadd\tr0, r0, r6\n.BB23_98:\n\tshl.s\t5, r6, r7\n\tadd\tr9, r7, r8\n\tptr.add\tr1, r7, r7\n\tld\tr7, r7\n\tst.1\tr8, r7\n\tadd\t1, r6, r6\n\tsub!\tr6, r5, r7\n\tjump.lt\t@.BB23_98\n.BB23_169:\n\tsub!\tr4, r0, r6\n\tjump.eq\t@.BB23_100\n\tshl.s\t5, r5, r5\n\tptr.add\tr1, r5, r6\n\tadd\tr9, r5, r5\n\tshl.s\t3, r4, r4\n\tld.1\tr5, r7\n\tshl\tr7, r4, r7\n\tshr\tr7, r4, r7\n\tld\tr6, r6\n\tsub\t256, r4, r4\n\tshr\tr6, r4, r6\n\tshl\tr6, r4, r4\n\tor\tr4, r7, r4\n\tst.1\tr5, r4\n.BB23_100:\n\tadd\tr3, r0, stack[@returndatasize]\n\tptr.add\tr1, r0, stack[@ptr_return_data]\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB23_101\n.BB23_106:\n\tadd\t31, r3, r1\n\tadd\tstack-[5], r0, r2\n\tand\tr1, r2, r2\n\tadd\tr2, r9, r1\n\tsub!\tr1, r2, r2\n\tadd\t0, r0, r2\n\tadd.lt\t1, r0, r2\n\tsub.s!\t@CPI23_11[0], r1, r3\n\tjump.gt\t@.BB23_25\n\tand!\t1, r2, r2\n\tjump.ne\t@.BB23_25\n\tst.1\t64, r1\n\tadd\t@CPI23_12[0], r0, r1\n\tadd\tstack[@returndatasize], r0, r2\n\tsub.s!\t32, r2, r3\n\tadd\tr0, r0, r3\n\tadd.lt\tr1, r0, r3\n\tand\t@CPI23_12[0], r2, r2\n\tsub!\tr2, r0, r4\n\tadd.le\tr0, r0, r1\n\tsub.s!\t@CPI23_12[0], r2, r2\n\tadd.ne\tr3, r0, r1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB23_3\n\tld.1\tr9, r1\n\tsub!\tr1, r0, r2\n\tadd\t0, r0, r2\n\tadd.ne\t1, r0, r2\n\tsub!\tr1, r2, r1\n\tjump.ne\t@.BB23_3\n.BB23_73:\n\tadd\tstack-[13], r0, r4\n\tsub!\tr4, r0, r1\n\tjump.eq\t@.BB23_161\n\tadd\t@CPI23_6[0], r0, r1\n\tsload\tr1, r3\n\tld.1\t64, r2\n\tadd\t100, r2, r1\n\tst.1\tr1, r4\n\tcontext.this\tr1\n\tand\t@CPI23_2[0], r1, r1\n\tadd\t68, r2, r4\n\tst.1\tr4, r1\n\tadd\t32, r2, r1\n\tadd\t@CPI23_21[0], r0, r4\n\tst.1\tr1, r4\n\tadd\t36, r2, r4\n\tadd\tstack-[9], r0, r5\n\tst.1\tr4, r5\n\tadd\t100, r0, r4\n\tst.1\tr2, r4\n\tand\t@CPI23_2[0], r3, r10\n\tsub.s!\t@CPI23_22[0], r2, r3\n\tjump.gt\t@.BB23_25\n\tadd\t160, r2, r9\n\tst.1\t64, r9\n\tsub.s!\t@CPI23_23[0], r2, r3\n\tjump.gt\t@.BB23_25\n\tadd\t224, r2, r3\n\tst.1\t64, r3\n\tadd\t32, r0, r3\n\tadd\tr3, r0, stack-[9]\n\tst.1\tr9, r3\n\tadd\t192, r2, r3\n\tadd\t@CPI23_24[0], r0, r4\n\tst.1\tr3, r4\n\tld.1\tr2, r3\n\tcontext.gas_left\tr2\n\tsub.s!\t4, r10, r4\n\tjump.ne\t@.BB23_131\n\tadd\t1, r0, r2\n\tadd\tstack[@returndatasize], r0, r1\n\tjump\t@.BB23_133\n.BB23_131:\n\tadd\t@CPI23_0[0], r0, r4\n\tsub.s!\t@CPI23_0[0], r1, r5\n\tadd.ge\tr4, r0, r1\n\tshl.s\t64, r1, r1\n\tsub.s!\t@CPI23_0[0], r3, r5\n\tadd.ge\tr4, r0, r3\n\tshl.s\t96, r3, r3\n\tor\tr3, r1, r1\n\tsub.s!\t@CPI23_0[0], r2, r3\n\tadd.ge\tr4, r0, r2\n\tshl.s\t192, r2, r2\n\tor\tr1, r2, r1\n\tadd\tr10, r0, r2\n\tadd\tr9, r0, stack-[8]\n\tadd\tr10, r0, stack-[7]\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tadd\tstack-[7], r0, r10\n\tadd\tstack-[8], r0, r9\n\tand\t1, r2, r2\n\tptr.add\tr1, r0, stack[@ptr_return_data]\n\tshr.s\t96, r1, r1\n\tand\t@CPI23_0[0], r1, stack[@returndatasize]\n\tand\t@CPI23_0[0], r1, r1\n.BB23_133:\n\tadd\t96, r0, r11\n\tsub!\tr1, r0, r3\n\tjump.eq\t@.BB23_134\n\tadd\t63, r1, r3\n\tsub.s\t32, r0, r4\n\tand\tr3, r4, r3\n\tld.1\t64, r11\n\tadd\tr11, r3, r3\n\tsub!\tr3, r11, r4\n\tadd\t0, r0, r4\n\tadd.lt\t1, r0, r4\n\tsub.s!\t@CPI23_11[0], r3, r5\n\tjump.gt\t@.BB23_25\n\tand!\t1, r4, r4\n\tjump.ne\t@.BB23_25\n\tst.1\t64, r3\n\tst.1.inc\tr11, r1, r1\n\tptr.add\tstack[@ptr_return_data], r0, r3\n\tadd\tstack[@returndatasize], r0, r5\n\tand\t31, r5, r4\n\tshr.s!\t5, r5, r5\n\tjump.eq\t@.BB23_165\n\tadd\tr0, r0, r6\n.BB23_152:\n\tshl.s\t5, r6, r7\n\tadd\tr1, r7, r8\n\tptr.add\tr3, r7, r7\n\tld\tr7, r7\n\tst.1\tr8, r7\n\tadd\t1, r6, r6\n\tsub!\tr6, r5, r7\n\tjump.lt\t@.BB23_152\n.BB23_165:\n\tsub!\tr4, r0, r6\n\tjump.eq\t@.BB23_134\n\tshl.s\t5, r5, r5\n\tptr.add\tr3, r5, r3\n\tadd\tr1, r5, r1\n\tshl.s\t3, r4, r4\n\tld.1\tr1, r5\n\tshl\tr5, r4, r5\n\tshr\tr5, r4, r5\n\tld\tr3, r3\n\tsub\t256, r4, r4\n\tshr\tr3, r4, r3\n\tshl\tr3, r4, r3\n\tor\tr3, r5, r3\n\tst.1\tr1, r3\n.BB23_134:\n\tld.1.inc\tr11, r1, r5\n\tsub!\tr2, r0, r2\n\tjump.eq\t@.BB23_135\n\tsub!\tr1, r0, r2\n\tjump.ne\t@.BB23_154\n\tadd\tr11, r0, stack-[7]\n\tadd\t@CPI23_7[0], r0, r1\n\tst.2\t0, r1\n\tst.2\t4, r10\n\tadd\t@CPI23_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI23_0[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI23_8[0], r1, r1\n\tadd\t32770, r0, r2\n\tadd\tr5, r0, stack-[8]\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tadd\tstack-[8], r0, r5\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB23_3\n\tld\tr1, r1\n\tsub!\tr1, r0, r1\n\tadd\tstack-[7], r0, r1\n\tjump.eq\t@.BB23_146\n\tld.1\tr1, r1\n\tsub!\tr1, r0, r2\n\tjump.eq\t@.BB23_158\n.BB23_154:\n\tadd\t@CPI23_12[0], r0, r2\n\tsub.s!\t32, r1, r3\n\tadd\tr0, r0, r3\n\tadd.lt\tr2, r0, r3\n\tand\t@CPI23_12[0], r1, r1\n\tsub!\tr1, r0, r4\n\tadd.le\tr0, r0, r2\n\tsub.s!\t@CPI23_12[0], r1, r1\n\tadd\tr3, r0, r1\n\tadd.eq\tr2, r0, r1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB23_3\n\tld.1\tr5, r1\n\tsub!\tr1, r0, r2\n\tadd\t0, r0, r2\n\tadd.ne\t1, r0, r2\n\tsub!\tr1, r2, r2\n\tjump.ne\t@.BB23_3\n\tsub!\tr1, r0, r1\n\tjump.eq\t@.BB23_157\n.BB23_158:\n\tsub.s\t1, r0, r1\n\tadd\tstack-[13], r0, r2\n\txor\tr2, r1, r1\n\tadd\t@CPI23_29[0], r0, r2\n\tsload\tr2, r2\n\tsub!\tr2, r1, r3\n\tjump.gt\t@.BB23_31\n\tadd\tstack-[13], r0, r3\n\tadd\tr2, r3, r2\n\tadd\t@CPI23_29[0], r0, r3\n\tsstore\tr3, r2\n\tadd\tstack-[12], r0, r2\n\tsload\tr2, r2\n\tsub!\tr2, r1, r1\n\tjump.gt\t@.BB23_31\n\tadd\tstack-[13], r0, r1\n\tadd\tr2, r1, r1\n\tadd\tstack-[12], r0, r2\n\tsstore\tr2, r1\n.BB23_161:\n\tadd\t@CPI23_16[0], r0, r1\n\tsload\tr1, r1\n\tadd\tstack-[12], r0, r2\n\tsload\tr2, r2\n\tsub!\tr2, r0, r3\n\tjump.eq\t@.BB23_163\n\tsub.s\t1, r0, r3\n\tdiv\tr3, r2, r3, r4\n\tsub!\tr3, r1, r3\n\tjump.lt\t@.BB23_31\n.BB23_163:\n\tmul\tr1, r2, r1, r2\n\tdiv.s\t@CPI23_18[0], r1, r1, r2\n\tadd\tstack-[11], r0, r2\n\tsstore\tr2, r1\n\tld.1\t64, r1\n\tadd\t@CPI23_0[0], r0, r2\n\tcontext.gas_left\tr3\n\tsub.s!\t@CPI23_0[0], r3, r4\n\tadd.ge\tr2, r0, r3\n\tsub.s!\t@CPI23_0[0], r1, r4\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tshl.s\t192, r3, r2\n\tor\tr2, r1, r1\n\tor\t@CPI23_32[0], r1, r1\n\tadd\t32781, r0, r2\n\tadd\t4, r0, r3\n\tadd\t@CPI23_33[0], r0, r4\n\tadd\tstack-[10], r0, r5\n\tadd\tr0, r0, r6\n\tadd\tstack-[13], r0, r7\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r1\n\tjump.eq\t@.BB23_3\n\tret\n.BB23_3:\n\tadd\tr0, r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB23_31:\n\tadd\t@CPI23_19[0], r0, r1\n\tst.1\t0, r1\n\tadd\t17, r0, r1\n\tst.1\t4, r1\n\tadd\t@CPI23_10[0], r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB23_25:\n\tadd\t@CPI23_19[0], r0, r1\n\tst.1\t0, r1\n\tadd\t65, r0, r1\n\tst.1\t4, r1\n\tadd\t@CPI23_10[0], r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB23_1:\n\tadd\t@CPI23_19[0], r0, r1\n\tst.1\t0, r1\n\tadd\t50, r0, r1\n\tst.1\t4, r1\n\tadd\t@CPI23_10[0], r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB23_135:\n\tsub!\tr1, r0, r2\n\tjump.ne\t@.BB23_142\n\tld.1\t64, r1\n\tadd\t@CPI23_27[0], r0, r2\n\tst.1\tr1, r2\n\tadd\t4, r1, r2\n\tadd\tstack-[9], r0, r3\n\tst.1\tr2, r3\n\tld.1\tr9, r2\n\tadd\t36, r1, r3\n\tst.1\tr3, r2\n\tsub!\tr2, r0, r3\n\tjump.eq\t@.BB23_141\n\tadd\t68, r1, r3\n\tadd\tr0, r0, r4\n.BB23_138:\n\tadd\tr4, r3, r5\n\tadd\t32, r4, r4\n\tadd\tr4, r9, r6\n\tld.1\tr6, r6\n\tst.1\tr5, r6\n\tsub!\tr4, r2, r5\n\tjump.lt\t@.BB23_138\n\tsub!\tr4, r2, r4\n\tjump.le\t@.BB23_141\n\tadd\tr2, r3, r3\n\tst.1\tr3, r0\n.BB23_141:\n\tadd\t31, r2, r2\n\tsub.s\t32, r0, r3\n\tand\tr2, r3, r2\n\tadd\t68, r2, r2\n\tadd\t@CPI23_0[0], r0, r3\n\tsub.s!\t@CPI23_0[0], r2, r4\n\tadd.ge\tr3, r0, r2\n\tsub.s!\t@CPI23_0[0], r1, r4\n\tadd.ge\tr3, r0, r1\n\tshl.s\t64, r1, r1\n\tshl.s\t96, r2, r2\n\tor\tr2, r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB23_157:\n\tld.1\t64, r1\n\tadd\t100, r1, r2\n\tadd\t@CPI23_25[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t68, r1, r2\n\tadd\t@CPI23_26[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t36, r1, r2\n\tadd\t42, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI23_27[0], r0, r2\n\tst.1\tr1, r2\n\tadd\t4, r1, r2\n\tadd\tstack-[9], r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI23_0[0], r0, r2\n\tsub.s!\t@CPI23_0[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI23_28[0], r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB23_39:\n\tadd\t@CPI23_19[0], r0, r1\n\tst.1\t0, r1\n\tadd\t18, r0, r1\n\tst.1\t4, r1\n\tadd\t@CPI23_10[0], r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB23_142:\n\tadd\t@CPI23_0[0], r0, r2\n\tsub.s!\t@CPI23_0[0], r5, r3\n\tadd\tr2, r0, r3\n\tadd.lt\tr5, r0, r3\n\tsub.s!\t@CPI23_0[0], r1, r4\n\tadd.ge\tr2, r0, r1\n\tshl.s\t96, r1, r1\n\tshl.s\t64, r3, r2\n\tor\tr1, r2, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB23_18:\n\tld.1\t64, r2\n\tand\t31, r3, r4\n\tshr.s!\t5, r3, r3\n\tjump.eq\t@.BB23_174\n\tadd\tr0, r0, r5\n.BB23_20:\n\tshl.s\t5, r5, r6\n\tadd\tr2, r6, r7\n\tptr.add\tr1, r6, r6\n\tld\tr6, r6\n\tst.1\tr7, r6\n\tadd\t1, r5, r5\n\tsub!\tr5, r3, r6\n\tjump.lt\t@.BB23_20\n.BB23_174:\n\tsub!\tr4, r0, r5\n\tjump.eq\t@.BB23_22\n\tshl.s\t5, r3, r3\n\tptr.add\tr1, r3, r1\n\tadd\tr2, r3, r3\n\tshl.s\t3, r4, r4\n\tld.1\tr3, r5\n\tshl\tr5, r4, r5\n\tshr\tr5, r4, r5\n\tld\tr1, r1\n\tsub\t256, r4, r4\n\tshr\tr1, r4, r1\n\tshl\tr1, r4, r1\n\tor\tr1, r5, r1\n\tst.1\tr3, r1\n.BB23_22:\n\tadd\t@CPI23_0[0], r0, r1\n\tadd\tstack[@returndatasize], r0, r3\n\tsub.s!\t@CPI23_0[0], r3, r4\n\tadd.ge\tr1, r0, r3\n\tsub.s!\t@CPI23_0[0], r2, r4\n\tadd.lt\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tshl.s\t96, r3, r2\n\tor\tr2, r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB23_146:\n\tld.1\t64, r1\n\tadd\t68, r1, r2\n\tadd\t@CPI23_30[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t36, r1, r2\n\tadd\t29, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI23_27[0], r0, r2\n\tst.1\tr1, r2\n\tadd\t4, r1, r2\n\tadd\tstack-[9], r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI23_0[0], r0, r2\n\tsub.s!\t@CPI23_0[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI23_31[0], r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB23_45:\n\tld.1\t64, r2\n\tand\t31, r4, r3\n\tshr.s!\t5, r4, r4\n\tjump.eq\t@.BB23_173\n\tadd\tr0, r0, r5\n.BB23_47:\n\tshl.s\t5, r5, r6\n\tadd\tr2, r6, r7\n\tptr.add\tr1, r6, r6\n\tld\tr6, r6\n\tst.1\tr7, r6\n\tadd\t1, r5, r5\n\tsub!\tr5, r4, r6\n\tjump.lt\t@.BB23_47\n.BB23_173:\n\tsub!\tr3, r0, r5\n\tjump.eq\t@.BB23_49\n\tshl.s\t5, r4, r4\n\tptr.add\tr1, r4, r1\n\tadd\tr2, r4, r4\n\tshl.s\t3, r3, r3\n\tld.1\tr4, r5\n\tshl\tr5, r3, r5\n\tshr\tr5, r3, r5\n\tld\tr1, r1\n\tsub\t256, r3, r3\n\tshr\tr1, r3, r1\n\tshl\tr1, r3, r1\n\tor\tr1, r5, r1\n\tst.1\tr4, r1\n.BB23_49:\n\tadd\t@CPI23_0[0], r0, r1\n\tadd\tstack[@returndatasize], r0, r3\n\tsub.s!\t@CPI23_0[0], r3, r4\n\tadd.ge\tr1, r0, r3\n\tsub.s!\t@CPI23_0[0], r2, r4\n\tadd.lt\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tshl.s\t96, r3, r2\n\tor\tr2, r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB23_58:\n\tld.1\t64, r2\n\tand\t31, r4, r3\n\tshr.s!\t5, r4, r4\n\tjump.eq\t@.BB23_172\n\tadd\tr0, r0, r5\n.BB23_60:\n\tshl.s\t5, r5, r6\n\tadd\tr2, r6, r7\n\tptr.add\tr1, r6, r6\n\tld\tr6, r6\n\tst.1\tr7, r6\n\tadd\t1, r5, r5\n\tsub!\tr5, r4, r6\n\tjump.lt\t@.BB23_60\n.BB23_172:\n\tsub!\tr3, r0, r5\n\tjump.eq\t@.BB23_62\n\tshl.s\t5, r4, r4\n\tptr.add\tr1, r4, r1\n\tadd\tr2, r4, r4\n\tshl.s\t3, r3, r3\n\tld.1\tr4, r5\n\tshl\tr5, r3, r5\n\tshr\tr5, r3, r5\n\tld\tr1, r1\n\tsub\t256, r3, r3\n\tshr\tr1, r3, r1\n\tshl\tr1, r3, r1\n\tor\tr1, r5, r1\n\tst.1\tr4, r1\n.BB23_62:\n\tadd\t@CPI23_0[0], r0, r1\n\tadd\tstack[@returndatasize], r0, r3\n\tsub.s!\t@CPI23_0[0], r3, r4\n\tadd.ge\tr1, r0, r3\n\tsub.s!\t@CPI23_0[0], r2, r4\n\tadd.lt\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tshl.s\t96, r3, r2\n\tor\tr2, r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB23_83:\n\tld.1\t64, r2\n\tand\t31, r3, r4\n\tshr.s!\t5, r3, r3\n\tjump.eq\t@.BB23_170\n\tadd\tr0, r0, r5\n.BB23_85:\n\tshl.s\t5, r5, r6\n\tadd\tr2, r6, r7\n\tptr.add\tr1, r6, r6\n\tld\tr6, r6\n\tst.1\tr7, r6\n\tadd\t1, r5, r5\n\tsub!\tr5, r3, r6\n\tjump.lt\t@.BB23_85\n.BB23_170:\n\tsub!\tr4, r0, r5\n\tjump.eq\t@.BB23_87\n\tshl.s\t5, r3, r3\n\tptr.add\tr1, r3, r1\n\tadd\tr2, r3, r3\n\tshl.s\t3, r4, r4\n\tld.1\tr3, r5\n\tshl\tr5, r4, r5\n\tshr\tr5, r4, r5\n\tld\tr1, r1\n\tsub\t256, r4, r4\n\tshr\tr1, r4, r1\n\tshl\tr1, r4, r1\n\tor\tr1, r5, r1\n\tst.1\tr3, r1\n.BB23_87:\n\tadd\t@CPI23_0[0], r0, r1\n\tadd\tstack[@returndatasize], r0, r3\n\tsub.s!\t@CPI23_0[0], r3, r4\n\tadd.ge\tr1, r0, r3\n\tsub.s!\t@CPI23_0[0], r2, r4\n\tadd.lt\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tshl.s\t96, r3, r2\n\tor\tr2, r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB23_119:\n\tld.1\t64, r2\n\tand\t31, r3, r4\n\tshr.s!\t5, r3, r3\n\tjump.eq\t@.BB23_166\n\tadd\tr0, r0, r5\n.BB23_121:\n\tshl.s\t5, r5, r6\n\tadd\tr2, r6, r7\n\tptr.add\tr1, r6, r6\n\tld\tr6, r6\n\tst.1\tr7, r6\n\tadd\t1, r5, r5\n\tsub!\tr5, r3, r6\n\tjump.lt\t@.BB23_121\n.BB23_166:\n\tsub!\tr4, r0, r5\n\tjump.eq\t@.BB23_123\n\tshl.s\t5, r3, r3\n\tptr.add\tr1, r3, r1\n\tadd\tr2, r3, r3\n\tshl.s\t3, r4, r4\n\tld.1\tr3, r5\n\tshl\tr5, r4, r5\n\tshr\tr5, r4, r5\n\tld\tr1, r1\n\tsub\t256, r4, r4\n\tshr\tr1, r4, r1\n\tshl\tr1, r4, r1\n\tor\tr1, r5, r1\n\tst.1\tr3, r1\n.BB23_123:\n\tadd\t@CPI23_0[0], r0, r1\n\tadd\tstack[@returndatasize], r0, r3\n\tsub.s!\t@CPI23_0[0], r3, r4\n\tadd.ge\tr1, r0, r3\n\tsub.s!\t@CPI23_0[0], r2, r4\n\tadd.lt\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tshl.s\t96, r3, r2\n\tor\tr2, r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB23_101:\n\tld.1\t64, r2\n\tand\t31, r3, r4\n\tshr.s!\t5, r3, r3\n\tjump.eq\t@.BB23_168\n\tadd\tr0, r0, r5\n.BB23_103:\n\tshl.s\t5, r5, r6\n\tadd\tr2, r6, r7\n\tptr.add\tr1, r6, r6\n\tld\tr6, r6\n\tst.1\tr7, r6\n\tadd\t1, r5, r5\n\tsub!\tr5, r3, r6\n\tjump.lt\t@.BB23_103\n.BB23_168:\n\tsub!\tr4, r0, r5\n\tjump.eq\t@.BB23_105\n\tshl.s\t5, r3, r3\n\tptr.add\tr1, r3, r1\n\tadd\tr2, r3, r3\n\tshl.s\t3, r4, r4\n\tld.1\tr3, r5\n\tshl\tr5, r4, r5\n\tshr\tr5, r4, r5\n\tld\tr1, r1\n\tsub\t256, r4, r4\n\tshr\tr1, r4, r1\n\tshl\tr1, r4, r1\n\tor\tr1, r5, r1\n\tst.1\tr3, r1\n.BB23_105:\n\tadd\t@CPI23_0[0], r0, r1\n\tadd\tstack[@returndatasize], r0, r3\n\tsub.s!\t@CPI23_0[0], r3, r4\n\tadd.ge\tr1, r0, r3\n\tsub.s!\t@CPI23_0[0], r2, r4\n\tadd.lt\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tshl.s\t96, r3, r2\n\tor\tr2, r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.func_end23:\n\nfun_leaveStaking:\n.func_begin24:\n\tnop\tstack+=[13]\n\tadd\tr1, r0, stack-[13]\n\tadd\t5, r0, r2\n\tsload\tr2, r1\n\tsub!\tr1, r0, r1\n\tjump.eq\t@.BB24_1\n\tadd\tr2, r0, stack-[10]\n\tst.1\t0, r0\n\tadd\t6, r0, r1\n\tadd\tr1, r0, stack-[8]\n\tst.1\t32, r1\n\tadd\t@CPI24_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI24_0[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI24_1[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB24_3\n\tld\tr1, r1\n\tcontext.caller\tr2\n\tadd\tr2, r0, stack-[9]\n\tand\t@CPI24_2[0], r2, r2\n\tadd\tr2, r0, stack-[11]\n\tst.1\t0, r2\n\tst.1\t32, r1\n\tadd\t@CPI24_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI24_0[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI24_1[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB24_3\n\tld\tr1, r1\n\tadd\tr1, r0, stack-[12]\n\tsload\tr1, r1\n\tadd\tstack-[13], r0, r2\n\tsub!\tr1, r2, r1\n\tjump.lt\t@.BB24_6\n\tadd\tstack-[10], r0, r2\n\tsload\tr2, r1\n\tsub!\tr1, r0, r1\n\tjump.eq\t@.BB24_1\n\tst.1\t0, r2\n\tadd\t@CPI24_3[0], r0, r1\n\tsload\tr1, r1\n\tadd\tr1, r0, stack-[10]\n\tadd\t@CPI24_4[0], r0, r1\n\tst.2\t0, r1\n\tadd\t@CPI24_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI24_0[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI24_5[0], r1, r1\n\tadd\t32779, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB24_3\n\tld\tr1, r1\n\tadd\tstack-[10], r0, r2\n\tsub!\tr1, r2, r1\n\tjump.le\t@.BB24_71\n\tadd\t@CPI24_6[0], r0, r1\n\tsload\tr1, r1\n\tadd\t@CPI24_7[0], r0, r2\n\tst.2\t0, r2\n\tand\t@CPI24_2[0], r1, r1\n\tadd\tr1, r0, stack-[10]\n\tst.2\t4, r1\n\tadd\t@CPI24_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI24_0[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI24_8[0], r1, r1\n\tadd\t32770, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB24_3\n\tld\tr1, r1\n\tsub!\tr1, r0, r1\n\tjump.eq\t@.BB24_3\n\tld.1\t64, r9\n\tadd\t@CPI24_9[0], r0, r1\n\tst.1\tr9, r1\n\tcontext.this\tr1\n\tand\t@CPI24_2[0], r1, r2\n\tadd\t4, r9, r1\n\tadd\tr2, r0, stack-[6]\n\tst.1\tr1, r2\n\tcontext.gas_left\tr1\n\tadd\tstack-[10], r0, r2\n\tsub.s!\t4, r2, r3\n\tjump.ne\t@.BB24_15\n\tadd\tstack[@returndatasize], r0, r3\n\tjump\t@.BB24_25\n.BB24_15:\n\tadd\t@CPI24_0[0], r0, r4\n\tsub.s!\t@CPI24_0[0], r1, r3\n\tadd.ge\tr4, r0, r1\n\tsub.s!\t@CPI24_0[0], r9, r3\n\tadd\tr4, r0, r3\n\tadd.lt\tr9, r0, r3\n\tshl.s\t64, r3, r3\n\tshl.s\t192, r1, r1\n\tor\tr1, r3, r1\n\tor\t@CPI24_10[0], r1, r1\n\tadd\tr9, r0, stack-[10]\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tadd\tstack-[10], r0, r9\n\tadd\tr1, r0, r3\n\tshr.s\t96, r3, r3\n\tand\t@CPI24_0[0], r3, r3\n\tsub.s!\t32, r3, r4\n\tadd\t32, r0, r5\n\tadd.lt\tr3, r0, r5\n\tand\t31, r5, r4\n\tshr.s!\t5, r5, r5\n\tjump.eq\t@.BB24_176\n\tadd\tr0, r0, r6\n.BB24_17:\n\tshl.s\t5, r6, r7\n\tadd\tr9, r7, r8\n\tptr.add\tr1, r7, r7\n\tld\tr7, r7\n\tst.1\tr8, r7\n\tadd\t1, r6, r6\n\tsub!\tr6, r5, r7\n\tjump.lt\t@.BB24_17\n.BB24_176:\n\tsub!\tr4, r0, r6\n\tjump.eq\t@.BB24_19\n\tshl.s\t5, r5, r5\n\tptr.add\tr1, r5, r6\n\tadd\tr9, r5, r5\n\tshl.s\t3, r4, r4\n\tld.1\tr5, r7\n\tshl\tr7, r4, r7\n\tshr\tr7, r4, r7\n\tld\tr6, r6\n\tsub\t256, r4, r4\n\tshr\tr6, r4, r6\n\tshl\tr6, r4, r4\n\tor\tr4, r7, r4\n\tst.1\tr5, r4\n.BB24_19:\n\tadd\tr3, r0, stack[@returndatasize]\n\tptr.add\tr1, r0, stack[@ptr_return_data]\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB24_20\n.BB24_25:\n\tadd\t31, r3, r1\n\tsub.s\t32, r0, r2\n\tadd\tr2, r0, stack-[8]\n\tand\tr1, r2, r2\n\tadd\tr2, r9, r1\n\tsub!\tr1, r2, r2\n\tadd\t0, r0, r2\n\tadd.lt\t1, r0, r2\n\tsub.s!\t@CPI24_11[0], r1, r3\n\tjump.gt\t@.BB24_27\n\tand!\t1, r2, r2\n\tjump.ne\t@.BB24_27\n\tst.1\t64, r1\n\tadd\t@CPI24_12[0], r0, r1\n\tadd\tstack[@returndatasize], r0, r2\n\tsub.s!\t32, r2, r3\n\tadd\tr0, r0, r3\n\tadd.lt\tr1, r0, r3\n\tand\t@CPI24_12[0], r2, r2\n\tsub!\tr2, r0, r4\n\tadd.le\tr0, r0, r1\n\tsub.s!\t@CPI24_12[0], r2, r2\n\tadd.ne\tr3, r0, r1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB24_3\n\tld.1\tr9, r1\n\tadd\tr1, r0, stack-[10]\n\tadd\t@CPI24_4[0], r0, r1\n\tst.2\t0, r1\n\tadd\t@CPI24_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI24_0[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI24_5[0], r1, r1\n\tadd\t32779, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tadd\tstack-[10], r0, r3\n\tsub!\tr3, r0, r3\n\tjump.eq\t@.BB24_30\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB24_3\n\tadd\t@CPI24_3[0], r0, r2\n\tsload\tr2, r3\n\tld\tr1, r4\n\tsub!\tr4, r3, r1\n\tjump.lt\t@.BB24_33\n\tsub\tr4, r3, r1\n\tadd\t4, r0, r2\n\tsload\tr2, r2\n\tsub!\tr4, r3, r3\n\tjump.eq\t@.BB24_36\n\tsub.s\t1, r0, r3\n\tdiv\tr3, r1, r3, r4\n\tsub!\tr3, r2, r3\n\tjump.lt\t@.BB24_33\n.BB24_36:\n\tmul!\tr2, r1, r1, r2\n\tadd\t3, r0, r2\n\tsload\tr2, r2\n\tjump.eq\t@.BB24_38\n\tsub.s\t1, r0, r3\n\tdiv\tr3, r1, r3, r4\n\tsub!\tr3, r2, r3\n\tjump.lt\t@.BB24_33\n.BB24_38:\n\tmul!\tr2, r1, r3, r1\n\tadd\t@CPI24_13[0], r0, r1\n\tsload\tr1, r4\n\tjump.eq\t@.BB24_40\n\tsub.s\t1, r0, r1\n\tdiv\tr1, r3, r1, r2\n\tsub!\tr1, r4, r1\n\tjump.lt\t@.BB24_33\n.BB24_40:\n\tadd\tr4, r0, stack-[4]\n\tadd\tr3, r0, stack-[5]\n\tadd\t7, r0, r1\n\tsload\tr1, r1\n\tadd\tr1, r0, stack-[3]\n\tsub!\tr1, r0, r1\n\tjump.eq\t@.BB24_41\n\tadd\t2, r0, r1\n\tsload\tr1, r1\n\tadd\tr1, r0, stack-[7]\n\tadd\t1, r0, r1\n\tadd\tr1, r0, stack-[1]\n\tsload\tr1, r1\n\tadd\t@CPI24_7[0], r0, r2\n\tst.2\t0, r2\n\tand\t@CPI24_2[0], r1, r1\n\tadd\tr1, r0, stack-[2]\n\tst.2\t4, r1\n\tadd\t@CPI24_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI24_0[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI24_8[0], r1, r1\n\tadd\t32770, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tadd\tstack-[7], r0, r3\n\tand\t@CPI24_2[0], r3, r3\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB24_3\n\tld\tr1, r1\n\tsub!\tr1, r0, r1\n\tjump.eq\t@.BB24_3\n\tadd\tstack-[5], r0, r1\n\tadd\tstack-[4], r0, r2\n\tmul\tr2, r1, r1, r2\n\tadd\tstack-[3], r0, r2\n\tdiv\tr1, r2, r2, r1\n\tadd\tr2, r0, stack-[7]\n\tdiv.s\t10, r2, r1, r2\n\tld.1\t64, r5\n\tadd\t36, r5, r2\n\tst.1\tr2, r1\n\tadd\t@CPI24_14[0], r0, r1\n\tst.1\tr5, r1\n\tadd\t4, r5, r1\n\tst.1\tr1, r3\n\tcontext.gas_left\tr1\n\tadd\tstack-[2], r0, r2\n\tsub.s!\t4, r2, r3\n\tjump.ne\t@.BB24_46\n\tadd\tstack[@returndatasize], r0, r4\n\tjump\t@.BB24_52\n.BB24_30:\n\tand!\t1, r2, r2\n\tjump.ne\t@.BB24_10\n\tjump\t@.BB24_3\n.BB24_46:\n\tadd\t@CPI24_0[0], r0, r4\n\tsub.s!\t@CPI24_0[0], r1, r3\n\tadd.ge\tr4, r0, r1\n\tsub.s!\t@CPI24_0[0], r5, r3\n\tadd\tr4, r0, r3\n\tadd.lt\tr5, r0, r3\n\tshl.s\t64, r3, r3\n\tshl.s\t192, r1, r1\n\tor\tr1, r3, r1\n\tor\t@CPI24_15[0], r1, r1\n\tadd\tr5, r0, stack-[5]\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tadd\tstack-[5], r0, r5\n\tadd\tr1, r0, r3\n\tshr.s\t96, r3, r3\n\tand\t@CPI24_0[0], r3, stack[@returndatasize]\n\tand\t@CPI24_0[0], r3, r4\n\tptr.add\tr1, r0, stack[@ptr_return_data]\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB24_47\n.BB24_52:\n\tadd\t31, r4, r1\n\tadd\tstack-[8], r0, r2\n\tand\tr1, r2, r2\n\tadd\tr2, r5, r1\n\tsub!\tr1, r2, r2\n\tadd\t0, r0, r2\n\tadd.lt\t1, r0, r2\n\tsub.s!\t@CPI24_11[0], r1, r3\n\tjump.gt\t@.BB24_27\n\tand!\t1, r2, r2\n\tjump.ne\t@.BB24_27\n\tst.1\t64, r1\n\tadd\t@CPI24_12[0], r0, r1\n\tadd\tstack[@returndatasize], r0, r2\n\tsub!\tr2, r0, r3\n\tadd\tr0, r0, r3\n\tadd.lt\tr1, r0, r3\n\tand\t@CPI24_12[0], r2, r2\n\tsub!\tr2, r0, r4\n\tadd.le\tr0, r0, r1\n\tsub.s!\t@CPI24_12[0], r2, r2\n\tadd.ne\tr3, r0, r1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB24_3\n\tadd\tstack-[1], r0, r1\n\tsload\tr1, r1\n\tadd\t@CPI24_7[0], r0, r2\n\tst.2\t0, r2\n\tand\t@CPI24_2[0], r1, r1\n\tadd\tr1, r0, stack-[5]\n\tst.2\t4, r1\n\tadd\t@CPI24_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI24_0[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI24_8[0], r1, r1\n\tadd\t32770, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB24_3\n\tld\tr1, r1\n\tsub!\tr1, r0, r1\n\tjump.eq\t@.BB24_3\n\tld.1\t64, r5\n\tadd\t36, r5, r1\n\tadd\tstack-[7], r0, r2\n\tst.1\tr1, r2\n\tadd\t@CPI24_14[0], r0, r1\n\tst.1\tr5, r1\n\tadd\t4, r5, r1\n\tadd\tstack-[6], r0, r2\n\tst.1\tr1, r2\n\tcontext.gas_left\tr1\n\tadd\tstack-[5], r0, r2\n\tsub.s!\t4, r2, r3\n\tjump.ne\t@.BB24_59\n\tadd\tstack[@returndatasize], r0, r4\n\tjump\t@.BB24_65\n.BB24_59:\n\tadd\t@CPI24_0[0], r0, r4\n\tsub.s!\t@CPI24_0[0], r1, r3\n\tadd.ge\tr4, r0, r1\n\tsub.s!\t@CPI24_0[0], r5, r3\n\tadd\tr4, r0, r3\n\tadd.lt\tr5, r0, r3\n\tshl.s\t64, r3, r3\n\tshl.s\t192, r1, r1\n\tor\tr1, r3, r1\n\tor\t@CPI24_15[0], r1, r1\n\tadd\tr5, r0, stack-[6]\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tadd\tstack-[6], r0, r5\n\tadd\tr1, r0, r3\n\tshr.s\t96, r3, r3\n\tand\t@CPI24_0[0], r3, stack[@returndatasize]\n\tand\t@CPI24_0[0], r3, r4\n\tptr.add\tr1, r0, stack[@ptr_return_data]\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB24_60\n.BB24_65:\n\tadd\t31, r4, r1\n\tadd\tstack-[8], r0, r2\n\tand\tr1, r2, r2\n\tadd\tr2, r5, r1\n\tsub!\tr1, r2, r2\n\tadd\t0, r0, r2\n\tadd.lt\t1, r0, r2\n\tsub.s!\t@CPI24_11[0], r1, r3\n\tjump.gt\t@.BB24_27\n\tand!\t1, r2, r2\n\tjump.ne\t@.BB24_27\n\tst.1\t64, r1\n\tadd\t@CPI24_12[0], r0, r1\n\tadd\tstack[@returndatasize], r0, r2\n\tsub!\tr2, r0, r3\n\tadd\tr0, r0, r3\n\tadd.lt\tr1, r0, r3\n\tand\t@CPI24_12[0], r2, r2\n\tsub!\tr2, r0, r4\n\tadd.le\tr0, r0, r1\n\tsub.s!\t@CPI24_12[0], r2, r2\n\tadd.ne\tr3, r0, r1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB24_3\n\tadd\t@CPI24_16[0], r0, r1\n\tsload\tr1, r1\n\tadd\tstack-[7], r0, r3\n\tsub.s!\t@CPI24_17[0], r3, r2\n\tjump.gt\t@.BB24_33\n\tmul\t@CPI24_18[0], r3, r2, r3\n\tadd\tstack-[10], r0, r3\n\tdiv\tr2, r3, r2, r3\n\tsub.s\t1, r0, r3\n\txor\tr2, r3, r3\n\tsub!\tr1, r3, r3\n\tjump.gt\t@.BB24_33\n\tadd\tr2, r1, r1\n\tadd\t@CPI24_16[0], r0, r2\n\tsstore\tr2, r1\n\tadd\t@CPI24_4[0], r0, r1\n\tst.2\t0, r1\n\tadd\t@CPI24_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI24_0[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI24_5[0], r1, r1\n\tadd\t32779, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB24_3\n.BB24_10:\n\tld\tr1, r1\n\tadd\t@CPI24_3[0], r0, r2\n\tsstore\tr2, r1\n.BB24_71:\n\tadd\t@CPI24_16[0], r0, r1\n\tsload\tr1, r1\n\tadd\tstack-[12], r0, r2\n\tsload\tr2, r2\n\tsub!\tr2, r0, r3\n\tjump.eq\t@.BB24_73\n\tsub.s\t1, r0, r3\n\tdiv\tr3, r2, r3, r4\n\tsub!\tr3, r1, r3\n\tjump.lt\t@.BB24_33\n.BB24_73:\n\tmul\tr1, r2, r1, r2\n\tdiv.s\t@CPI24_18[0], r1, r2, r1\n\tadd\tstack-[12], r0, r1\n\tadd\t1, r1, r1\n\tadd\tr1, r0, stack-[10]\n\tsload\tr1, r3\n\tsub!\tr2, r3, r1\n\tjump.lt\t@.BB24_33\n\tadd\tr2, r0, stack-[7]\n\tadd\tr3, r0, stack-[6]\n\tsub!\tr2, r3, r1\n\tjump.eq\t@.BB24_129\n\tadd\t1, r0, r1\n\tadd\tr1, r0, stack-[4]\n\tsload\tr1, r1\n\tadd\t@CPI24_7[0], r0, r2\n\tst.2\t0, r2\n\tand\t@CPI24_2[0], r1, r1\n\tadd\tr1, r0, stack-[8]\n\tst.2\t4, r1\n\tadd\t@CPI24_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI24_0[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI24_8[0], r1, r1\n\tadd\t32770, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tadd\tstack-[8], r0, r5\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB24_3\n\tld\tr1, r1\n\tsub!\tr1, r0, r1\n\tjump.eq\t@.BB24_3\n\tld.1\t64, r9\n\tadd\t@CPI24_9[0], r0, r1\n\tst.1\tr9, r1\n\tcontext.this\tr1\n\tand\t@CPI24_2[0], r1, r1\n\tadd\t4, r9, r2\n\tst.1\tr2, r1\n\tcontext.gas_left\tr1\n\tsub.s!\t4, r5, r2\n\tjump.ne\t@.BB24_79\n\tadd\tstack[@returndatasize], r0, r3\n\tjump\t@.BB24_89\n.BB24_79:\n\tadd\t@CPI24_0[0], r0, r2\n\tsub.s!\t@CPI24_0[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tsub.s!\t@CPI24_0[0], r9, r3\n\tadd.lt\tr9, r0, r2\n\tshl.s\t64, r2, r2\n\tshl.s\t192, r1, r1\n\tor\tr1, r2, r1\n\tor\t@CPI24_10[0], r1, r1\n\tadd\tr5, r0, r2\n\tadd\tr9, r0, stack-[5]\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tadd\tstack-[5], r0, r9\n\tadd\tr1, r0, r3\n\tshr.s\t96, r3, r3\n\tand\t@CPI24_0[0], r3, r3\n\tsub.s!\t32, r3, r4\n\tadd\t32, r0, r5\n\tadd.lt\tr3, r0, r5\n\tand\t31, r5, r4\n\tshr.s!\t5, r5, r5\n\tjump.eq\t@.BB24_172\n\tadd\tr0, r0, r6\n.BB24_81:\n\tshl.s\t5, r6, r7\n\tadd\tr9, r7, r8\n\tptr.add\tr1, r7, r7\n\tld\tr7, r7\n\tst.1\tr8, r7\n\tadd\t1, r6, r6\n\tsub!\tr6, r5, r7\n\tjump.lt\t@.BB24_81\n.BB24_172:\n\tsub!\tr4, r0, r6\n\tjump.eq\t@.BB24_83\n\tshl.s\t5, r5, r5\n\tptr.add\tr1, r5, r6\n\tadd\tr9, r5, r5\n\tshl.s\t3, r4, r4\n\tld.1\tr5, r7\n\tshl\tr7, r4, r7\n\tshr\tr7, r4, r7\n\tld\tr6, r6\n\tsub\t256, r4, r4\n\tshr\tr6, r4, r6\n\tshl\tr6, r4, r4\n\tor\tr4, r7, r4\n\tst.1\tr5, r4\n.BB24_83:\n\tadd\tr3, r0, stack[@returndatasize]\n\tptr.add\tr1, r0, stack[@ptr_return_data]\n\tand!\t1, r2, r2\n\tadd\tstack-[8], r0, r5\n\tjump.eq\t@.BB24_84\n.BB24_89:\n\tadd\t31, r3, r1\n\tsub.s\t32, r0, r2\n\tadd\tr2, r0, stack-[5]\n\tand\tr1, r2, r2\n\tadd\tr2, r9, r1\n\tsub!\tr1, r2, r2\n\tadd\t0, r0, r2\n\tadd.lt\t1, r0, r2\n\tsub.s!\t@CPI24_11[0], r1, r3\n\tjump.gt\t@.BB24_27\n\tand!\t1, r2, r2\n\tjump.ne\t@.BB24_27\n\tst.1\t64, r1\n\tadd\t@CPI24_12[0], r0, r1\n\tadd\tstack[@returndatasize], r0, r2\n\tsub.s!\t32, r2, r3\n\tadd\tr0, r0, r3\n\tadd.lt\tr1, r0, r3\n\tand\t@CPI24_12[0], r2, r2\n\tsub!\tr2, r0, r4\n\tadd.le\tr0, r0, r1\n\tsub.s!\t@CPI24_12[0], r2, r2\n\tadd.ne\tr3, r0, r1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB24_3\n\tadd\tstack-[7], r0, r1\n\tadd\tstack-[6], r0, r2\n\tsub\tr1, r2, r3\n\tld.1\tr9, r2\n\tsub!\tr2, r3, r1\n\tjump.ge\t@.BB24_93\n\tadd\tr2, r0, stack-[7]\n\tadd\tstack-[4], r0, r1\n\tsload\tr1, r1\n\tadd\t@CPI24_7[0], r0, r2\n\tst.2\t0, r2\n\tand\t@CPI24_2[0], r1, r1\n\tadd\tr1, r0, stack-[8]\n\tst.2\t4, r1\n\tadd\t@CPI24_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI24_0[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI24_8[0], r1, r1\n\tadd\t32770, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB24_3\n\tld\tr1, r1\n\tsub!\tr1, r0, r1\n\tjump.eq\t@.BB24_3\n\tld.1\t64, r9\n\tadd\t36, r9, r1\n\tadd\tstack-[7], r0, r2\n\tst.1\tr1, r2\n\tadd\t@CPI24_20[0], r0, r1\n\tst.1\tr9, r1\n\tadd\t4, r9, r1\n\tadd\tstack-[11], r0, r2\n\tst.1\tr1, r2\n\tcontext.gas_left\tr1\n\tadd\tstack-[8], r0, r2\n\tsub.s!\t4, r2, r3\n\tjump.ne\t@.BB24_115\n\tadd\tstack[@returndatasize], r0, r3\n\tjump\t@.BB24_125\n.BB24_93:\n\tadd\tr3, r0, stack-[7]\n\tadd\t@CPI24_7[0], r0, r1\n\tst.2\t0, r1\n\tst.2\t4, r5\n\tadd\t@CPI24_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI24_0[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI24_8[0], r1, r1\n\tadd\t32770, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tadd\tstack-[8], r0, r4\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB24_3\n\tld\tr1, r1\n\tsub!\tr1, r0, r1\n\tjump.eq\t@.BB24_3\n\tld.1\t64, r9\n\tadd\t36, r9, r1\n\tadd\tstack-[7], r0, r2\n\tst.1\tr1, r2\n\tadd\t@CPI24_20[0], r0, r1\n\tst.1\tr9, r1\n\tadd\t4, r9, r1\n\tadd\tstack-[11], r0, r2\n\tst.1\tr1, r2\n\tcontext.gas_left\tr1\n\tsub.s!\t4, r4, r2\n\tjump.ne\t@.BB24_97\n\tadd\tstack[@returndatasize], r0, r3\n\tjump\t@.BB24_107\n.BB24_115:\n\tadd\t@CPI24_0[0], r0, r4\n\tsub.s!\t@CPI24_0[0], r1, r3\n\tadd.ge\tr4, r0, r1\n\tsub.s!\t@CPI24_0[0], r9, r3\n\tadd\tr4, r0, r3\n\tadd.lt\tr9, r0, r3\n\tshl.s\t64, r3, r3\n\tshl.s\t192, r1, r1\n\tor\tr1, r3, r1\n\tor\t@CPI24_15[0], r1, r1\n\tadd\tr9, r0, stack-[8]\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tadd\tstack-[8], r0, r9\n\tadd\tr1, r0, r3\n\tshr.s\t96, r3, r3\n\tand\t@CPI24_0[0], r3, r3\n\tsub.s!\t32, r3, r4\n\tadd\t32, r0, r5\n\tadd.lt\tr3, r0, r5\n\tand\t31, r5, r4\n\tshr.s!\t5, r5, r5\n\tjump.eq\t@.BB24_168\n\tadd\tr0, r0, r6\n.BB24_117:\n\tshl.s\t5, r6, r7\n\tadd\tr9, r7, r8\n\tptr.add\tr1, r7, r7\n\tld\tr7, r7\n\tst.1\tr8, r7\n\tadd\t1, r6, r6\n\tsub!\tr6, r5, r7\n\tjump.lt\t@.BB24_117\n.BB24_168:\n\tsub!\tr4, r0, r6\n\tjump.eq\t@.BB24_119\n\tshl.s\t5, r5, r5\n\tptr.add\tr1, r5, r6\n\tadd\tr9, r5, r5\n\tshl.s\t3, r4, r4\n\tld.1\tr5, r7\n\tshl\tr7, r4, r7\n\tshr\tr7, r4, r7\n\tld\tr6, r6\n\tsub\t256, r4, r4\n\tshr\tr6, r4, r6\n\tshl\tr6, r4, r4\n\tor\tr4, r7, r4\n\tst.1\tr5, r4\n.BB24_119:\n\tadd\tr3, r0, stack[@returndatasize]\n\tptr.add\tr1, r0, stack[@ptr_return_data]\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB24_120\n.BB24_125:\n\tadd\t31, r3, r1\n\tadd\tstack-[5], r0, r2\n\tand\tr1, r2, r2\n\tadd\tr2, r9, r1\n\tsub!\tr1, r2, r2\n\tadd\t0, r0, r2\n\tadd.lt\t1, r0, r2\n\tsub.s!\t@CPI24_11[0], r1, r3\n\tjump.gt\t@.BB24_27\n\tand!\t1, r2, r2\n\tjump.ne\t@.BB24_27\n\tst.1\t64, r1\n\tadd\t@CPI24_12[0], r0, r1\n\tadd\tstack[@returndatasize], r0, r2\n\tsub.s!\t32, r2, r3\n\tadd\tr0, r0, r3\n\tadd.lt\tr1, r0, r3\n\tand\t@CPI24_12[0], r2, r2\n\tsub!\tr2, r0, r4\n\tadd.le\tr0, r0, r1\n\tsub.s!\t@CPI24_12[0], r2, r2\n\tadd.ne\tr3, r0, r1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB24_3\n\tld.1\tr9, r1\n\tsub!\tr1, r0, r2\n\tadd\t0, r0, r2\n\tadd.ne\t1, r0, r2\n\tsub!\tr1, r2, r1\n\tjump.eq\t@.BB24_129\n\tjump\t@.BB24_3\n.BB24_97:\n\tadd\t@CPI24_0[0], r0, r2\n\tsub.s!\t@CPI24_0[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tsub.s!\t@CPI24_0[0], r9, r3\n\tadd.lt\tr9, r0, r2\n\tshl.s\t64, r2, r2\n\tshl.s\t192, r1, r1\n\tor\tr1, r2, r1\n\tor\t@CPI24_15[0], r1, r1\n\tadd\tr4, r0, r2\n\tadd\tr9, r0, stack-[8]\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tadd\tstack-[8], r0, r9\n\tadd\tr1, r0, r3\n\tshr.s\t96, r3, r3\n\tand\t@CPI24_0[0], r3, r3\n\tsub.s!\t32, r3, r4\n\tadd\t32, r0, r5\n\tadd.lt\tr3, r0, r5\n\tand\t31, r5, r4\n\tshr.s!\t5, r5, r5\n\tjump.eq\t@.BB24_170\n\tadd\tr0, r0, r6\n.BB24_99:\n\tshl.s\t5, r6, r7\n\tadd\tr9, r7, r8\n\tptr.add\tr1, r7, r7\n\tld\tr7, r7\n\tst.1\tr8, r7\n\tadd\t1, r6, r6\n\tsub!\tr6, r5, r7\n\tjump.lt\t@.BB24_99\n.BB24_170:\n\tsub!\tr4, r0, r6\n\tjump.eq\t@.BB24_101\n\tshl.s\t5, r5, r5\n\tptr.add\tr1, r5, r6\n\tadd\tr9, r5, r5\n\tshl.s\t3, r4, r4\n\tld.1\tr5, r7\n\tshl\tr7, r4, r7\n\tshr\tr7, r4, r7\n\tld\tr6, r6\n\tsub\t256, r4, r4\n\tshr\tr6, r4, r6\n\tshl\tr6, r4, r4\n\tor\tr4, r7, r4\n\tst.1\tr5, r4\n.BB24_101:\n\tadd\tr3, r0, stack[@returndatasize]\n\tptr.add\tr1, r0, stack[@ptr_return_data]\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB24_102\n.BB24_107:\n\tadd\t31, r3, r1\n\tadd\tstack-[5], r0, r2\n\tand\tr1, r2, r2\n\tadd\tr2, r9, r1\n\tsub!\tr1, r2, r2\n\tadd\t0, r0, r2\n\tadd.lt\t1, r0, r2\n\tsub.s!\t@CPI24_11[0], r1, r3\n\tjump.gt\t@.BB24_27\n\tand!\t1, r2, r2\n\tjump.ne\t@.BB24_27\n\tst.1\t64, r1\n\tadd\t@CPI24_12[0], r0, r1\n\tadd\tstack[@returndatasize], r0, r2\n\tsub.s!\t32, r2, r3\n\tadd\tr0, r0, r3\n\tadd.lt\tr1, r0, r3\n\tand\t@CPI24_12[0], r2, r2\n\tsub!\tr2, r0, r4\n\tadd.le\tr0, r0, r1\n\tsub.s!\t@CPI24_12[0], r2, r2\n\tadd.ne\tr3, r0, r1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB24_3\n\tld.1\tr9, r1\n\tsub!\tr1, r0, r2\n\tadd\t0, r0, r2\n\tadd.ne\t1, r0, r2\n\tsub!\tr1, r2, r1\n\tjump.ne\t@.BB24_3\n.BB24_129:\n\tadd\tstack-[13], r0, r1\n\tsub!\tr1, r0, r1\n\tjump.eq\t@.BB24_162\n\tadd\t@CPI24_21[0], r0, r1\n\tsload\tr1, r1\n\tadd\tstack-[13], r0, r2\n\tsub!\tr1, r2, r2\n\tjump.lt\t@.BB24_33\n\tadd\tstack-[13], r0, r3\n\tsub\tr1, r3, r1\n\tadd\t@CPI24_21[0], r0, r2\n\tsstore\tr2, r1\n\tadd\tstack-[12], r0, r1\n\tsload\tr1, r1\n\tsub!\tr1, r3, r2\n\tjump.lt\t@.BB24_33\n\tadd\tstack-[13], r0, r4\n\tsub\tr1, r4, r1\n\tadd\tstack-[12], r0, r2\n\tsstore\tr2, r1\n\tadd\t@CPI24_6[0], r0, r1\n\tsload\tr1, r3\n\tld.1\t64, r2\n\tadd\t68, r2, r1\n\tst.1\tr1, r4\n\tadd\t32, r2, r1\n\tadd\t@CPI24_20[0], r0, r4\n\tst.1\tr1, r4\n\tadd\t36, r2, r4\n\tadd\tstack-[11], r0, r5\n\tst.1\tr4, r5\n\tadd\t68, r0, r4\n\tst.1\tr2, r4\n\tand\t@CPI24_2[0], r3, r10\n\tsub.s!\t@CPI24_22[0], r2, r3\n\tjump.gt\t@.BB24_27\n\tadd\t128, r2, r9\n\tst.1\t64, r9\n\tsub.s!\t@CPI24_23[0], r9, r3\n\tjump.gt\t@.BB24_27\n\tadd\t192, r2, r3\n\tst.1\t64, r3\n\tadd\t32, r0, r3\n\tadd\tr3, r0, stack-[11]\n\tst.1\tr9, r3\n\tadd\t160, r2, r3\n\tadd\t@CPI24_24[0], r0, r4\n\tst.1\tr3, r4\n\tld.1\tr2, r3\n\tcontext.gas_left\tr2\n\tsub.s!\t4, r10, r4\n\tjump.ne\t@.BB24_135\n\tadd\t1, r0, r2\n\tadd\tstack[@returndatasize], r0, r1\n\tjump\t@.BB24_137\n.BB24_135:\n\tadd\t@CPI24_0[0], r0, r4\n\tsub.s!\t@CPI24_0[0], r1, r5\n\tadd.ge\tr4, r0, r1\n\tshl.s\t64, r1, r1\n\tsub.s!\t@CPI24_0[0], r3, r5\n\tadd.ge\tr4, r0, r3\n\tshl.s\t96, r3, r3\n\tor\tr3, r1, r1\n\tsub.s!\t@CPI24_0[0], r2, r3\n\tadd.ge\tr4, r0, r2\n\tshl.s\t192, r2, r2\n\tor\tr1, r2, r1\n\tadd\tr10, r0, r2\n\tadd\tr9, r0, stack-[8]\n\tadd\tr10, r0, stack-[7]\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tadd\tstack-[7], r0, r10\n\tadd\tstack-[8], r0, r9\n\tand\t1, r2, r2\n\tptr.add\tr1, r0, stack[@ptr_return_data]\n\tshr.s\t96, r1, r1\n\tand\t@CPI24_0[0], r1, stack[@returndatasize]\n\tand\t@CPI24_0[0], r1, r1\n.BB24_137:\n\tadd\t96, r0, r11\n\tsub!\tr1, r0, r3\n\tjump.eq\t@.BB24_138\n\tadd\t63, r1, r3\n\tsub.s\t32, r0, r4\n\tand\tr3, r4, r3\n\tld.1\t64, r11\n\tadd\tr11, r3, r3\n\tsub!\tr3, r11, r4\n\tadd\t0, r0, r4\n\tadd.lt\t1, r0, r4\n\tsub.s!\t@CPI24_11[0], r3, r5\n\tjump.gt\t@.BB24_27\n\tand!\t1, r4, r4\n\tjump.ne\t@.BB24_27\n\tst.1\t64, r3\n\tst.1.inc\tr11, r1, r1\n\tptr.add\tstack[@ptr_return_data], r0, r3\n\tadd\tstack[@returndatasize], r0, r5\n\tand\t31, r5, r4\n\tshr.s!\t5, r5, r5\n\tjump.eq\t@.BB24_166\n\tadd\tr0, r0, r6\n.BB24_156:\n\tshl.s\t5, r6, r7\n\tadd\tr1, r7, r8\n\tptr.add\tr3, r7, r7\n\tld\tr7, r7\n\tst.1\tr8, r7\n\tadd\t1, r6, r6\n\tsub!\tr6, r5, r7\n\tjump.lt\t@.BB24_156\n.BB24_166:\n\tsub!\tr4, r0, r6\n\tjump.eq\t@.BB24_138\n\tshl.s\t5, r5, r5\n\tptr.add\tr3, r5, r3\n\tadd\tr1, r5, r1\n\tshl.s\t3, r4, r4\n\tld.1\tr1, r5\n\tshl\tr5, r4, r5\n\tshr\tr5, r4, r5\n\tld\tr3, r3\n\tsub\t256, r4, r4\n\tshr\tr3, r4, r3\n\tshl\tr3, r4, r3\n\tor\tr3, r5, r3\n\tst.1\tr1, r3\n.BB24_138:\n\tld.1.inc\tr11, r1, r5\n\tsub!\tr2, r0, r2\n\tjump.eq\t@.BB24_139\n\tsub!\tr1, r0, r2\n\tjump.ne\t@.BB24_158\n\tadd\tr11, r0, stack-[7]\n\tadd\t@CPI24_7[0], r0, r1\n\tst.2\t0, r1\n\tst.2\t4, r10\n\tadd\t@CPI24_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI24_0[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI24_8[0], r1, r1\n\tadd\t32770, r0, r2\n\tadd\tr5, r0, stack-[8]\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tadd\tstack-[8], r0, r5\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB24_3\n\tld\tr1, r1\n\tsub!\tr1, r0, r1\n\tadd\tstack-[7], r0, r1\n\tjump.eq\t@.BB24_150\n\tld.1\tr1, r1\n\tsub!\tr1, r0, r2\n\tjump.eq\t@.BB24_162\n.BB24_158:\n\tadd\t@CPI24_12[0], r0, r2\n\tsub.s!\t32, r1, r3\n\tadd\tr0, r0, r3\n\tadd.lt\tr2, r0, r3\n\tand\t@CPI24_12[0], r1, r1\n\tsub!\tr1, r0, r4\n\tadd.le\tr0, r0, r2\n\tsub.s!\t@CPI24_12[0], r1, r1\n\tadd\tr3, r0, r1\n\tadd.eq\tr2, r0, r1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB24_3\n\tld.1\tr5, r1\n\tsub!\tr1, r0, r2\n\tadd\t0, r0, r2\n\tadd.ne\t1, r0, r2\n\tsub!\tr1, r2, r2\n\tjump.ne\t@.BB24_3\n\tsub!\tr1, r0, r1\n\tjump.eq\t@.BB24_161\n.BB24_162:\n\tadd\t@CPI24_16[0], r0, r1\n\tsload\tr1, r1\n\tadd\tstack-[12], r0, r2\n\tsload\tr2, r2\n\tsub!\tr2, r0, r3\n\tjump.eq\t@.BB24_164\n\tsub.s\t1, r0, r3\n\tdiv\tr3, r2, r3, r4\n\tsub!\tr3, r1, r3\n\tjump.lt\t@.BB24_33\n.BB24_164:\n\tmul\tr1, r2, r1, r2\n\tdiv.s\t@CPI24_18[0], r1, r1, r2\n\tadd\tstack-[10], r0, r2\n\tsstore\tr2, r1\n\tld.1\t64, r1\n\tadd\tstack-[13], r0, r2\n\tst.1\tr1, r2\n\tadd\t@CPI24_0[0], r0, r2\n\tcontext.gas_left\tr3\n\tsub.s!\t@CPI24_0[0], r3, r4\n\tadd.ge\tr2, r0, r3\n\tsub.s!\t@CPI24_0[0], r1, r4\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tshl.s\t192, r3, r2\n\tor\tr2, r1, r1\n\tor\t@CPI24_31[0], r1, r1\n\tadd\t32781, r0, r2\n\tadd\t3, r0, r3\n\tadd\t@CPI24_32[0], r0, r4\n\tadd\tstack-[9], r0, r5\n\tadd\tr0, r0, r6\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r1\n\tjump.eq\t@.BB24_3\n\tret\n.BB24_3:\n\tadd\tr0, r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB24_33:\n\tadd\t@CPI24_19[0], r0, r1\n\tst.1\t0, r1\n\tadd\t17, r0, r1\n\tst.1\t4, r1\n\tadd\t@CPI24_10[0], r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB24_27:\n\tadd\t@CPI24_19[0], r0, r1\n\tst.1\t0, r1\n\tadd\t65, r0, r1\n\tst.1\t4, r1\n\tadd\t@CPI24_10[0], r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB24_1:\n\tadd\t@CPI24_19[0], r0, r1\n\tst.1\t0, r1\n\tadd\t50, r0, r1\n\tst.1\t4, r1\n\tadd\t@CPI24_10[0], r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB24_6:\n\tld.1\t64, r1\n\tadd\t68, r1, r2\n\tadd\t@CPI24_33[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t36, r1, r2\n\tadd\tstack-[8], r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI24_27[0], r0, r2\n\tst.1\tr1, r2\n\tadd\t4, r1, r2\n\tadd\t32, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI24_0[0], r0, r2\n\tsub.s!\t@CPI24_0[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI24_30[0], r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB24_139:\n\tsub!\tr1, r0, r2\n\tjump.ne\t@.BB24_146\n\tld.1\t64, r1\n\tadd\t@CPI24_27[0], r0, r2\n\tst.1\tr1, r2\n\tadd\t4, r1, r2\n\tadd\tstack-[11], r0, r3\n\tst.1\tr2, r3\n\tld.1\tr9, r2\n\tadd\t36, r1, r3\n\tst.1\tr3, r2\n\tsub!\tr2, r0, r3\n\tjump.eq\t@.BB24_145\n\tadd\t68, r1, r3\n\tadd\tr0, r0, r4\n.BB24_142:\n\tadd\tr4, r3, r5\n\tadd\t32, r4, r4\n\tadd\tr4, r9, r6\n\tld.1\tr6, r6\n\tst.1\tr5, r6\n\tsub!\tr4, r2, r5\n\tjump.lt\t@.BB24_142\n\tsub!\tr4, r2, r4\n\tjump.le\t@.BB24_145\n\tadd\tr2, r3, r3\n\tst.1\tr3, r0\n.BB24_145:\n\tadd\t31, r2, r2\n\tsub.s\t32, r0, r3\n\tand\tr2, r3, r2\n\tadd\t68, r2, r2\n\tadd\t@CPI24_0[0], r0, r3\n\tsub.s!\t@CPI24_0[0], r2, r4\n\tadd.ge\tr3, r0, r2\n\tsub.s!\t@CPI24_0[0], r1, r4\n\tadd.ge\tr3, r0, r1\n\tshl.s\t64, r1, r1\n\tshl.s\t96, r2, r2\n\tor\tr2, r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB24_161:\n\tld.1\t64, r1\n\tadd\t100, r1, r2\n\tadd\t@CPI24_25[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t68, r1, r2\n\tadd\t@CPI24_26[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t36, r1, r2\n\tadd\t42, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI24_27[0], r0, r2\n\tst.1\tr1, r2\n\tadd\t4, r1, r2\n\tadd\tstack-[11], r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI24_0[0], r0, r2\n\tsub.s!\t@CPI24_0[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI24_28[0], r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB24_41:\n\tadd\t@CPI24_19[0], r0, r1\n\tst.1\t0, r1\n\tadd\t18, r0, r1\n\tst.1\t4, r1\n\tadd\t@CPI24_10[0], r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB24_146:\n\tadd\t@CPI24_0[0], r0, r2\n\tsub.s!\t@CPI24_0[0], r5, r3\n\tadd\tr2, r0, r3\n\tadd.lt\tr5, r0, r3\n\tsub.s!\t@CPI24_0[0], r1, r4\n\tadd.ge\tr2, r0, r1\n\tshl.s\t96, r1, r1\n\tshl.s\t64, r3, r2\n\tor\tr1, r2, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB24_20:\n\tld.1\t64, r2\n\tand\t31, r3, r4\n\tshr.s!\t5, r3, r3\n\tjump.eq\t@.BB24_175\n\tadd\tr0, r0, r5\n.BB24_22:\n\tshl.s\t5, r5, r6\n\tadd\tr2, r6, r7\n\tptr.add\tr1, r6, r6\n\tld\tr6, r6\n\tst.1\tr7, r6\n\tadd\t1, r5, r5\n\tsub!\tr5, r3, r6\n\tjump.lt\t@.BB24_22\n.BB24_175:\n\tsub!\tr4, r0, r5\n\tjump.eq\t@.BB24_24\n\tshl.s\t5, r3, r3\n\tptr.add\tr1, r3, r1\n\tadd\tr2, r3, r3\n\tshl.s\t3, r4, r4\n\tld.1\tr3, r5\n\tshl\tr5, r4, r5\n\tshr\tr5, r4, r5\n\tld\tr1, r1\n\tsub\t256, r4, r4\n\tshr\tr1, r4, r1\n\tshl\tr1, r4, r1\n\tor\tr1, r5, r1\n\tst.1\tr3, r1\n.BB24_24:\n\tadd\t@CPI24_0[0], r0, r1\n\tadd\tstack[@returndatasize], r0, r3\n\tsub.s!\t@CPI24_0[0], r3, r4\n\tadd.ge\tr1, r0, r3\n\tsub.s!\t@CPI24_0[0], r2, r4\n\tadd.lt\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tshl.s\t96, r3, r2\n\tor\tr2, r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB24_84:\n\tld.1\t64, r2\n\tand\t31, r3, r4\n\tshr.s!\t5, r3, r3\n\tjump.eq\t@.BB24_171\n\tadd\tr0, r0, r5\n.BB24_86:\n\tshl.s\t5, r5, r6\n\tadd\tr2, r6, r7\n\tptr.add\tr1, r6, r6\n\tld\tr6, r6\n\tst.1\tr7, r6\n\tadd\t1, r5, r5\n\tsub!\tr5, r3, r6\n\tjump.lt\t@.BB24_86\n.BB24_171:\n\tsub!\tr4, r0, r5\n\tjump.eq\t@.BB24_88\n\tshl.s\t5, r3, r3\n\tptr.add\tr1, r3, r1\n\tadd\tr2, r3, r3\n\tshl.s\t3, r4, r4\n\tld.1\tr3, r5\n\tshl\tr5, r4, r5\n\tshr\tr5, r4, r5\n\tld\tr1, r1\n\tsub\t256, r4, r4\n\tshr\tr1, r4, r1\n\tshl\tr1, r4, r1\n\tor\tr1, r5, r1\n\tst.1\tr3, r1\n.BB24_88:\n\tadd\t@CPI24_0[0], r0, r1\n\tadd\tstack[@returndatasize], r0, r3\n\tsub.s!\t@CPI24_0[0], r3, r4\n\tadd.ge\tr1, r0, r3\n\tsub.s!\t@CPI24_0[0], r2, r4\n\tadd.lt\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tshl.s\t96, r3, r2\n\tor\tr2, r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB24_150:\n\tld.1\t64, r1\n\tadd\t68, r1, r2\n\tadd\t@CPI24_29[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t36, r1, r2\n\tadd\t29, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI24_27[0], r0, r2\n\tst.1\tr1, r2\n\tadd\t4, r1, r2\n\tadd\tstack-[11], r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI24_0[0], r0, r2\n\tsub.s!\t@CPI24_0[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI24_30[0], r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB24_47:\n\tld.1\t64, r2\n\tand\t31, r4, r3\n\tshr.s!\t5, r4, r4\n\tjump.eq\t@.BB24_174\n\tadd\tr0, r0, r5\n.BB24_49:\n\tshl.s\t5, r5, r6\n\tadd\tr2, r6, r7\n\tptr.add\tr1, r6, r6\n\tld\tr6, r6\n\tst.1\tr7, r6\n\tadd\t1, r5, r5\n\tsub!\tr5, r4, r6\n\tjump.lt\t@.BB24_49\n.BB24_174:\n\tsub!\tr3, r0, r5\n\tjump.eq\t@.BB24_51\n\tshl.s\t5, r4, r4\n\tptr.add\tr1, r4, r1\n\tadd\tr2, r4, r4\n\tshl.s\t3, r3, r3\n\tld.1\tr4, r5\n\tshl\tr5, r3, r5\n\tshr\tr5, r3, r5\n\tld\tr1, r1\n\tsub\t256, r3, r3\n\tshr\tr1, r3, r1\n\tshl\tr1, r3, r1\n\tor\tr1, r5, r1\n\tst.1\tr4, r1\n.BB24_51:\n\tadd\t@CPI24_0[0], r0, r1\n\tadd\tstack[@returndatasize], r0, r3\n\tsub.s!\t@CPI24_0[0], r3, r4\n\tadd.ge\tr1, r0, r3\n\tsub.s!\t@CPI24_0[0], r2, r4\n\tadd.lt\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tshl.s\t96, r3, r2\n\tor\tr2, r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB24_60:\n\tld.1\t64, r2\n\tand\t31, r4, r3\n\tshr.s!\t5, r4, r4\n\tjump.eq\t@.BB24_173\n\tadd\tr0, r0, r5\n.BB24_62:\n\tshl.s\t5, r5, r6\n\tadd\tr2, r6, r7\n\tptr.add\tr1, r6, r6\n\tld\tr6, r6\n\tst.1\tr7, r6\n\tadd\t1, r5, r5\n\tsub!\tr5, r4, r6\n\tjump.lt\t@.BB24_62\n.BB24_173:\n\tsub!\tr3, r0, r5\n\tjump.eq\t@.BB24_64\n\tshl.s\t5, r4, r4\n\tptr.add\tr1, r4, r1\n\tadd\tr2, r4, r4\n\tshl.s\t3, r3, r3\n\tld.1\tr4, r5\n\tshl\tr5, r3, r5\n\tshr\tr5, r3, r5\n\tld\tr1, r1\n\tsub\t256, r3, r3\n\tshr\tr1, r3, r1\n\tshl\tr1, r3, r1\n\tor\tr1, r5, r1\n\tst.1\tr4, r1\n.BB24_64:\n\tadd\t@CPI24_0[0], r0, r1\n\tadd\tstack[@returndatasize], r0, r3\n\tsub.s!\t@CPI24_0[0], r3, r4\n\tadd.ge\tr1, r0, r3\n\tsub.s!\t@CPI24_0[0], r2, r4\n\tadd.lt\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tshl.s\t96, r3, r2\n\tor\tr2, r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB24_120:\n\tld.1\t64, r2\n\tand\t31, r3, r4\n\tshr.s!\t5, r3, r3\n\tjump.eq\t@.BB24_167\n\tadd\tr0, r0, r5\n.BB24_122:\n\tshl.s\t5, r5, r6\n\tadd\tr2, r6, r7\n\tptr.add\tr1, r6, r6\n\tld\tr6, r6\n\tst.1\tr7, r6\n\tadd\t1, r5, r5\n\tsub!\tr5, r3, r6\n\tjump.lt\t@.BB24_122\n.BB24_167:\n\tsub!\tr4, r0, r5\n\tjump.eq\t@.BB24_124\n\tshl.s\t5, r3, r3\n\tptr.add\tr1, r3, r1\n\tadd\tr2, r3, r3\n\tshl.s\t3, r4, r4\n\tld.1\tr3, r5\n\tshl\tr5, r4, r5\n\tshr\tr5, r4, r5\n\tld\tr1, r1\n\tsub\t256, r4, r4\n\tshr\tr1, r4, r1\n\tshl\tr1, r4, r1\n\tor\tr1, r5, r1\n\tst.1\tr3, r1\n.BB24_124:\n\tadd\t@CPI24_0[0], r0, r1\n\tadd\tstack[@returndatasize], r0, r3\n\tsub.s!\t@CPI24_0[0], r3, r4\n\tadd.ge\tr1, r0, r3\n\tsub.s!\t@CPI24_0[0], r2, r4\n\tadd.lt\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tshl.s\t96, r3, r2\n\tor\tr2, r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB24_102:\n\tld.1\t64, r2\n\tand\t31, r3, r4\n\tshr.s!\t5, r3, r3\n\tjump.eq\t@.BB24_169\n\tadd\tr0, r0, r5\n.BB24_104:\n\tshl.s\t5, r5, r6\n\tadd\tr2, r6, r7\n\tptr.add\tr1, r6, r6\n\tld\tr6, r6\n\tst.1\tr7, r6\n\tadd\t1, r5, r5\n\tsub!\tr5, r3, r6\n\tjump.lt\t@.BB24_104\n.BB24_169:\n\tsub!\tr4, r0, r5\n\tjump.eq\t@.BB24_106\n\tshl.s\t5, r3, r3\n\tptr.add\tr1, r3, r1\n\tadd\tr2, r3, r3\n\tshl.s\t3, r4, r4\n\tld.1\tr3, r5\n\tshl\tr5, r4, r5\n\tshr\tr5, r4, r5\n\tld\tr1, r1\n\tsub\t256, r4, r4\n\tshr\tr1, r4, r1\n\tshl\tr1, r4, r1\n\tor\tr1, r5, r1\n\tst.1\tr3, r1\n.BB24_106:\n\tadd\t@CPI24_0[0], r0, r1\n\tadd\tstack[@returndatasize], r0, r3\n\tsub.s!\t@CPI24_0[0], r3, r4\n\tadd.ge\tr1, r0, r3\n\tsub.s!\t@CPI24_0[0], r2, r4\n\tadd.lt\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tshl.s\t96, r3, r2\n\tor\tr2, r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.func_end24:\n\nfun_emergencyWithdraw:\n.func_begin25:\n\tnop\tstack+=[7]\n\tadd\t5, r0, r2\n\tsload\tr2, r2\n\tsub!\tr2, r1, r2\n\tjump.le\t@.BB25_1\n\tst.1\t0, r1\n\tadd\t6, r0, r2\n\tst.1\t32, r2\n\tadd\t@CPI25_2[0], r0, r4\n\tadd\tr1, r0, stack-[7]\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI25_2[0], r2, r3\n\tadd\tr4, r0, r1\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI25_3[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tadd\tstack-[7], r0, r3\n\tmul\t5, r3, r4, r3\n\tadd\tr4, r0, stack-[4]\n\tadd\t@CPI25_4[0], r4, r3\n\tadd\tr3, r0, stack-[6]\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB25_3\n\tld\tr1, r1\n\tcontext.caller\tr2\n\tadd\tr2, r0, stack-[3]\n\tand\t@CPI25_5[0], r2, r2\n\tadd\tr2, r0, stack-[5]\n\tst.1\t0, r2\n\tst.1\t32, r1\n\tadd\t@CPI25_2[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI25_2[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI25_3[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB25_3\n\tadd\tstack-[6], r0, r2\n\tsload\tr2, r3\n\tld\tr1, r9\n\tsload\tr9, r1\n\tld.1\t64, r2\n\tadd\t68, r2, r4\n\tst.1\tr4, r1\n\tadd\t32, r2, r1\n\tadd\t@CPI25_6[0], r0, r4\n\tst.1\tr1, r4\n\tadd\t36, r2, r4\n\tadd\tstack-[5], r0, r5\n\tst.1\tr4, r5\n\tadd\t68, r0, r4\n\tst.1\tr2, r4\n\tand\t@CPI25_5[0], r3, r11\n\tsub.s!\t@CPI25_7[0], r2, r3\n\tjump.ge\t@.BB25_6\n\tadd\t128, r2, r10\n\tst.1\t64, r10\n\tsub.s!\t@CPI25_8[0], r10, r3\n\tjump.gt\t@.BB25_6\n\tadd\t192, r2, r3\n\tst.1\t64, r3\n\tadd\t32, r0, r3\n\tadd\tr3, r0, stack-[5]\n\tst.1\tr10, r3\n\tadd\t160, r2, r3\n\tadd\t@CPI25_9[0], r0, r4\n\tst.1\tr3, r4\n\tld.1\tr2, r3\n\tcontext.gas_left\tr2\n\tsub.s!\t4, r11, r4\n\tadd\tr9, r0, stack-[6]\n\tjump.ne\t@.BB25_9\n\tadd\t1, r0, r2\n\tadd\tstack[@returndatasize], r0, r1\n\tjump\t@.BB25_11\n.BB25_9:\n\tadd\t@CPI25_2[0], r0, r4\n\tsub.s!\t@CPI25_2[0], r1, r5\n\tadd.ge\tr4, r0, r1\n\tshl.s\t64, r1, r1\n\tsub.s!\t@CPI25_2[0], r3, r5\n\tadd.ge\tr4, r0, r3\n\tshl.s\t96, r3, r3\n\tor\tr3, r1, r1\n\tsub.s!\t@CPI25_2[0], r2, r3\n\tadd.ge\tr4, r0, r2\n\tshl.s\t192, r2, r2\n\tor\tr1, r2, r1\n\tadd\tr11, r0, r2\n\tadd\tr10, r0, stack-[2]\n\tadd\tr11, r0, stack-[1]\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tadd\tstack-[1], r0, r11\n\tadd\tstack-[2], r0, r10\n\tadd\tstack-[6], r0, r9\n\tand\t1, r2, r2\n\tptr.add\tr1, r0, stack[@ptr_return_data]\n\tshr.s\t96, r1, r1\n\tand\t@CPI25_2[0], r1, stack[@returndatasize]\n\tand\t@CPI25_2[0], r1, r1\n.BB25_11:\n\tadd\t96, r0, r12\n\tsub!\tr1, r0, r3\n\tjump.eq\t@.BB25_12\n\tadd\t63, r1, r3\n\tsub.s\t32, r0, r4\n\tand\tr3, r4, r3\n\tld.1\t64, r12\n\tadd\tr12, r3, r3\n\tsub!\tr3, r12, r4\n\tadd\t0, r0, r4\n\tadd.lt\t1, r0, r4\n\tsub.s!\t@CPI25_10[0], r3, r5\n\tjump.gt\t@.BB25_6\n\tand!\t1, r4, r4\n\tjump.ne\t@.BB25_6\n\tst.1\t64, r3\n\tst.1.inc\tr12, r1, r1\n\tptr.add\tstack[@ptr_return_data], r0, r3\n\tadd\tstack[@returndatasize], r0, r5\n\tand\t31, r5, r4\n\tshr.s!\t5, r5, r5\n\tjump.eq\t@.BB25_40\n\tadd\tr0, r0, r6\n.BB25_30:\n\tshl.s\t5, r6, r7\n\tadd\tr1, r7, r8\n\tptr.add\tr3, r7, r7\n\tld\tr7, r7\n\tst.1\tr8, r7\n\tadd\t1, r6, r6\n\tsub!\tr6, r5, r7\n\tjump.lt\t@.BB25_30\n.BB25_40:\n\tsub!\tr4, r0, r6\n\tjump.eq\t@.BB25_12\n\tshl.s\t5, r5, r5\n\tptr.add\tr3, r5, r3\n\tadd\tr1, r5, r1\n\tshl.s\t3, r4, r4\n\tld.1\tr1, r5\n\tshl\tr5, r4, r5\n\tshr\tr5, r4, r5\n\tld\tr3, r3\n\tsub\t256, r4, r4\n\tshr\tr3, r4, r3\n\tshl\tr3, r4, r3\n\tor\tr3, r5, r3\n\tst.1\tr1, r3\n.BB25_12:\n\tld.1.inc\tr12, r1, r5\n\tsub!\tr2, r0, r2\n\tjump.eq\t@.BB25_13\n\tsub!\tr1, r0, r2\n\tjump.ne\t@.BB25_32\n\tadd\tr12, r0, stack-[1]\n\tadd\t@CPI25_11[0], r0, r1\n\tst.2\t0, r1\n\tst.2\t4, r11\n\tadd\t@CPI25_2[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI25_2[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI25_12[0], r1, r1\n\tadd\t32770, r0, r2\n\tadd\tr5, r0, stack-[2]\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tadd\tstack-[2], r0, r5\n\tadd\tstack-[6], r0, r9\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB25_3\n\tld\tr1, r1\n\tsub!\tr1, r0, r1\n\tadd\tstack-[1], r0, r1\n\tjump.eq\t@.BB25_24\n\tld.1\tr1, r1\n\tsub!\tr1, r0, r2\n\tjump.eq\t@.BB25_36\n.BB25_32:\n\tadd\t@CPI25_13[0], r0, r2\n\tsub.s!\t32, r1, r3\n\tadd\tr0, r0, r3\n\tadd.lt\tr2, r0, r3\n\tand\t@CPI25_13[0], r1, r1\n\tsub!\tr1, r0, r4\n\tadd.le\tr0, r0, r2\n\tsub.s!\t@CPI25_13[0], r1, r1\n\tadd\tr3, r0, r1\n\tadd.eq\tr2, r0, r1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB25_3\n\tld.1\tr5, r1\n\tsub!\tr1, r0, r2\n\tadd\t0, r0, r2\n\tadd.ne\t1, r0, r2\n\tsub!\tr1, r2, r2\n\tjump.ne\t@.BB25_3\n\tsub!\tr1, r0, r1\n\tjump.eq\t@.BB25_35\n.BB25_36:\n\tsload\tr9, r1\n\tadd\tstack-[4], r0, r2\n\tadd\t@CPI25_18[0], r2, r2\n\tsload\tr2, r3\n\tsub!\tr3, r1, r4\n\tjump.lt\t@.BB25_37\n\tsub\tr3, r1, r1\n\tsstore\tr2, r1\n\tsload\tr9, r1\n\tld.1\t64, r2\n\tst.1\tr2, r1\n\tadd\t@CPI25_2[0], r0, r1\n\tcontext.gas_left\tr3\n\tsub.s!\t@CPI25_2[0], r3, r4\n\tadd.ge\tr1, r0, r3\n\tsub.s!\t@CPI25_2[0], r2, r4\n\tadd.lt\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tshl.s\t192, r3, r2\n\tor\tr2, r1, r1\n\tor\t@CPI25_19[0], r1, r1\n\tadd\t32781, r0, r2\n\tadd\t3, r0, r3\n\tadd\t@CPI25_20[0], r0, r4\n\tadd\tstack-[3], r0, r5\n\tadd\tstack-[7], r0, r6\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tadd\tstack-[6], r0, r3\n\tand!\t1, r2, r1\n\tjump.eq\t@.BB25_3\n\tsstore\tr3, r0\n\tadd\t1, r3, r1\n\tsstore\tr1, r0\n\tret\n.BB25_3:\n\tadd\tr0, r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB25_6:\n\tadd\t@CPI25_0[0], r0, r1\n\tst.1\t0, r1\n\tadd\t65, r0, r1\n\tst.1\t4, r1\n\tadd\t@CPI25_1[0], r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB25_1:\n\tadd\t@CPI25_0[0], r0, r1\n\tst.1\t0, r1\n\tadd\t50, r0, r1\n\tst.1\t4, r1\n\tadd\t@CPI25_1[0], r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB25_13:\n\tsub!\tr1, r0, r2\n\tjump.ne\t@.BB25_20\n\tld.1\t64, r1\n\tadd\t@CPI25_16[0], r0, r2\n\tst.1\tr1, r2\n\tadd\t4, r1, r2\n\tadd\tstack-[5], r0, r3\n\tst.1\tr2, r3\n\tld.1\tr10, r2\n\tadd\t36, r1, r3\n\tst.1\tr3, r2\n\tsub!\tr2, r0, r3\n\tjump.eq\t@.BB25_19\n\tadd\t68, r1, r3\n\tadd\tr0, r0, r4\n.BB25_16:\n\tadd\tr4, r3, r5\n\tadd\t32, r4, r4\n\tadd\tr4, r10, r6\n\tld.1\tr6, r6\n\tst.1\tr5, r6\n\tsub!\tr4, r2, r5\n\tjump.lt\t@.BB25_16\n\tsub!\tr4, r2, r4\n\tjump.le\t@.BB25_19\n\tadd\tr2, r3, r3\n\tst.1\tr3, r0\n.BB25_19:\n\tadd\t31, r2, r2\n\tsub.s\t32, r0, r3\n\tand\tr2, r3, r2\n\tadd\t68, r2, r2\n\tadd\t@CPI25_2[0], r0, r3\n\tsub.s!\t@CPI25_2[0], r2, r4\n\tadd.ge\tr3, r0, r2\n\tsub.s!\t@CPI25_2[0], r1, r4\n\tadd.ge\tr3, r0, r1\n\tshl.s\t64, r1, r1\n\tshl.s\t96, r2, r2\n\tor\tr2, r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB25_37:\n\tadd\t@CPI25_0[0], r0, r1\n\tst.1\t0, r1\n\tadd\t17, r0, r1\n\tst.1\t4, r1\n\tadd\t@CPI25_1[0], r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB25_35:\n\tld.1\t64, r1\n\tadd\t100, r1, r2\n\tadd\t@CPI25_14[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t68, r1, r2\n\tadd\t@CPI25_15[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t36, r1, r2\n\tadd\t42, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI25_16[0], r0, r2\n\tst.1\tr1, r2\n\tadd\t4, r1, r2\n\tadd\tstack-[5], r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI25_2[0], r0, r2\n\tsub.s!\t@CPI25_2[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI25_17[0], r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB25_20:\n\tadd\t@CPI25_2[0], r0, r2\n\tsub.s!\t@CPI25_2[0], r5, r3\n\tadd\tr2, r0, r3\n\tadd.lt\tr5, r0, r3\n\tsub.s!\t@CPI25_2[0], r1, r4\n\tadd.ge\tr2, r0, r1\n\tshl.s\t96, r1, r1\n\tshl.s\t64, r3, r2\n\tor\tr1, r2, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB25_24:\n\tld.1\t64, r1\n\tadd\t68, r1, r2\n\tadd\t@CPI25_21[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t36, r1, r2\n\tadd\t29, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI25_16[0], r0, r2\n\tst.1\tr1, r2\n\tadd\t4, r1, r2\n\tadd\tstack-[5], r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI25_2[0], r0, r2\n\tsub.s!\t@CPI25_2[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI25_22[0], r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.func_end25:\n\nfun_dev:\n.func_begin26:\n\tadd\t2, r0, r2\n\tsload\tr2, r3\n\tand\t@CPI26_0[0], r3, r4\n\tcontext.caller\tr5\n\tsub!\tr5, r4, r4\n\tjump.ne\t@.BB26_1\n\tand\t@CPI26_0[0], r1, r1\n\tand\t@CPI26_5[0], r3, r3\n\tor\tr3, r1, r1\n\tsstore\tr2, r1\n\tret\n.BB26_1:\n\tld.1\t64, r1\n\tadd\t68, r1, r2\n\tadd\t@CPI26_1[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t36, r1, r2\n\tadd\t19, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI26_2[0], r0, r2\n\tst.1\tr1, r2\n\tadd\t4, r1, r2\n\tadd\t32, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI26_3[0], r0, r2\n\tsub.s!\t@CPI26_3[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI26_4[0], r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.func_end26:\n\n__farcall:\n.func_begin27:\n.tmp0:\n\tfar_call\tr1, r2, @.BB27_2\n.tmp1:\n\tadd\t1, r0, r2\n\tret\n.BB27_2:\n.tmp2:\n\tadd\tr0, r0, r2\n\tret\n.func_end27:\n\n__staticcall:\n.func_begin28:\n.tmp3:\n\tfar_call.static\tr1, r2, @.BB28_2\n.tmp4:\n\tadd\t1, r0, r2\n\tret\n.BB28_2:\n.tmp5:\n\tadd\tr0, r0, r2\n\tret\n.func_end28:\n\n\t.data\n\t.p2align\t5\ncalldatasize:\n\t.cell 0\n\n\t.p2align\t5\nreturndatasize:\n\t.cell 0\n\n\t.p2align\t5\nptr_calldata:\n.cell\t0\n\n\t.p2align\t5\nptr_return_data:\n.cell\t0\n\n\t.note.GNU-stack\n\t.rodata\nCPI0_0:\nCPI1_0:\nCPI3_1:\nCPI11_0:\nCPI12_3:\nCPI13_3:\nCPI14_3:\nCPI15_3:\nCPI16_3:\nCPI18_2:\nCPI19_4:\nCPI20_4:\nCPI21_0:\nCPI22_0:\nCPI23_0:\nCPI24_0:\nCPI25_2:\nCPI26_3:\n\t.cell 4294967295\nCPI0_1:\nCPI15_13:\nCPI16_13:\nCPI18_10:\nCPI19_11:\nCPI20_11:\nCPI21_12:\nCPI22_12:\nCPI23_11:\nCPI24_11:\nCPI25_10:\n\t.cell 18446744073709551615\nCPI0_2:\nCPI6_0:\nCPI7_0:\nCPI8_0:\nCPI9_0:\nCPI10_0:\nCPI15_14:\nCPI16_14:\nCPI18_11:\nCPI19_12:\nCPI20_12:\nCPI21_13:\nCPI22_13:\nCPI23_12:\nCPI24_12:\nCPI25_13:\n\t.cell -57896044618658097711785492504343953926634992332820282019728792003956564819968\nCPI0_3:\nCPI3_4:\nCPI4_5:\nCPI5_0:\nCPI6_1:\nCPI9_1:\nCPI10_1:\nCPI11_2:\nCPI12_0:\nCPI13_0:\nCPI14_0:\nCPI15_0:\nCPI16_0:\nCPI18_5:\nCPI19_8:\nCPI20_8:\nCPI21_3:\nCPI22_3:\nCPI23_2:\nCPI24_2:\nCPI25_5:\nCPI26_0:\n\t.cell 1461501637330902918203684832716283019655932542975\nCPI0_4:\nCPI3_3:\nCPI12_5:\nCPI13_5:\nCPI15_23:\nCPI26_5:\n\t.cell -1461501637330902918203684832716283019655932542976\nCPI0_5:\nCPI12_6:\nCPI13_6:\nCPI21_32:\nCPI23_32:\n\t.cell 904625697166532776746648320380374280103671755200316906558262375061821325312\nCPI0_6:\nCPI12_7:\nCPI13_7:\n\t.cell -52524777015005588113349992707137368332388074750292320778649315033004770043936\nCPI0_7:\n\t.cell 53919893334301279589334030174039261352344891250716429051063678533632\nCPI0_8:\nCPI2_1:\nCPI3_5:\nCPI15_21:\nCPI16_21:\nCPI17_0:\nCPI18_0:\nCPI19_0:\nCPI20_0:\nCPI21_4:\nCPI22_4:\nCPI23_19:\nCPI24_19:\nCPI25_0:\n\t.cell 35408467139433450592217433187231851964531694900788300625387963629091585785856\nCPI0_9:\nCPI2_2:\nCPI3_6:\nCPI15_12:\nCPI16_12:\nCPI17_1:\nCPI18_1:\nCPI19_1:\nCPI20_1:\nCPI21_5:\nCPI22_5:\nCPI23_10:\nCPI24_10:\nCPI25_1:\n\t.cell 2852213850513516153367582212096\nCPI0_10:\n\t.cell 1661688736\nCPI0_11:\n\t.cell 2377850425\nCPI0_12:\n\t.cell 3409692381\nCPI0_13:\n\t.cell 3803951447\nCPI0_14:\n\t.cell 3803951448\nCPI0_15:\n\t.cell 4076725131\nCPI0_16:\n\t.cell 3409692382\nCPI0_17:\n\t.cell 3644580295\nCPI0_18:\n\t.cell 2377850426\nCPI0_19:\n\t.cell 2482086923\nCPI0_20:\n\t.cell 2895849749\nCPI0_21:\n\t.cell 2325906767\nCPI0_22:\n\t.cell 2325906768\nCPI0_23:\n\t.cell 2374543630\nCPI0_24:\n\t.cell 2376452955\nCPI0_25:\n\t.cell 1661688737\nCPI0_26:\n\t.cell 1682452345\nCPI0_27:\n\t.cell 1901074598\nCPI0_28:\n\t.cell 986779381\nCPI0_29:\n\t.cell 1374356901\nCPI0_30:\n\t.cell 1465692405\nCPI0_31:\n\t.cell 1465692406\nCPI0_32:\n\t.cell 1610506566\nCPI0_33:\n\t.cell 1374356902\nCPI0_34:\n\t.cell 1393748622\nCPI0_35:\n\t.cell 986779382\nCPI0_36:\n\t.cell 1142570608\nCPI0_37:\n\t.cell 1221414065\nCPI0_38:\n\t.cell 399177456\nCPI0_39:\n\t.cell 399177457\nCPI0_40:\n\t.cell 498805282\nCPI0_41:\n\t.cell 514498629\nCPI0_42:\n\t.cell 136199898\nCPI0_43:\n\t.cell 274256513\nCPI0_44:\n\t.cell 354876967\nCPI0_45:\n\t.cell 2535301200456458802993406410752\nCPI0_46:\n\t.cell 5070602400912917605986812821504\nCPI0_47:\nCPI15_6:\nCPI16_6:\nCPI18_13:\nCPI19_3:\nCPI20_3:\nCPI21_7:\nCPI22_7:\nCPI23_4:\nCPI24_4:\n\t.cell 30212542071733633044144396051920796812958444182406851663962835650539531164625\nCPI0_48:\n\t.cell 2535301202817642044428229017600\nCPI1_1:\n\t.cell 904625751086426111047927909714404454142933102474605751639407337269041823744\nCPI2_0:\n\t.cell 18446744073709551456\nCPI3_0:\n\t.cell 18446744073709551616\nCPI3_2:\nCPI22_31:\nCPI24_31:\nCPI25_19:\n\t.cell 904625697166532776746648320380374280103671757735618107014721178055227736064\nCPI4_0:\nCPI15_15:\nCPI16_15:\nCPI18_15:\nCPI19_13:\nCPI20_13:\nCPI21_14:\nCPI22_14:\nCPI23_13:\nCPI24_13:\n\t.cell 1546678032441257452667456735582814959992782782816731922691272282333561699761\nCPI4_1:\nCPI15_5:\nCPI16_5:\nCPI18_12:\nCPI19_2:\nCPI20_2:\nCPI21_6:\nCPI22_6:\nCPI23_3:\nCPI24_3:\n\t.cell 1546678032441257452667456735582814959992782782816731922691272282333561699762\nCPI4_2:\nCPI15_18:\nCPI16_18:\nCPI18_6:\nCPI19_16:\nCPI20_16:\nCPI21_17:\nCPI22_17:\nCPI23_16:\nCPI24_16:\n\t.cell 1546678032441257452667456735582814959992782782816731922691272282333561699763\nCPI4_3:\nCPI15_24:\nCPI21_29:\nCPI22_21:\nCPI23_29:\nCPI24_21:\nCPI25_18:\n\t.cell 1546678032441257452667456735582814959992782782816731922691272282333561699764\nCPI4_4:\nCPI15_8:\nCPI16_8:\nCPI18_4:\nCPI19_6:\nCPI20_6:\nCPI21_2:\nCPI22_2:\nCPI23_6:\nCPI24_6:\nCPI25_4:\n\t.cell 1546678032441257452667456735582814959992782782816731922691272282333561699760\nCPI11_1:\nCPI18_3:\nCPI21_1:\nCPI22_1:\nCPI23_1:\nCPI24_1:\nCPI25_3:\n\t.cell 904625697166532776746648320380374280103671760270919307471179981048634146816\nCPI12_1:\nCPI13_1:\nCPI14_1:\nCPI15_1:\nCPI16_1:\n\t.cell 35943731656364841964516503116990081338611484598491072354577564874054038349170\nCPI12_2:\nCPI13_2:\nCPI14_2:\nCPI15_2:\nCPI16_2:\nCPI21_27:\nCPI22_27:\nCPI23_27:\nCPI24_27:\nCPI25_16:\nCPI26_2:\n\t.cell 3963877391197344453575983046348115674221700746820753546331534351508065746944\nCPI12_4:\nCPI13_4:\nCPI14_4:\nCPI15_4:\nCPI16_4:\nCPI21_31:\nCPI22_30:\nCPI23_31:\nCPI24_30:\nCPI25_22:\nCPI26_4:\n\t.cell 7922816251426433759354395033600\nCPI13_8:\n\t.cell 45408759099000846574684193736602357774271237157169010951590501707763511459840\nCPI13_9:\n\t.cell 35943731656364841964517558219894961445653631979235167635064085396828900499553\nCPI13_10:\nCPI21_28:\nCPI22_28:\nCPI23_28:\nCPI24_28:\nCPI25_17:\n\t.cell 10458117451882892562347801444352\nCPI15_7:\nCPI16_7:\nCPI18_14:\nCPI19_5:\nCPI20_5:\nCPI21_8:\nCPI22_8:\nCPI23_5:\nCPI24_5:\n\t.cell 904625751086426111047927909714404454142933102791518401696464687643217625088\nCPI15_9:\nCPI16_9:\nCPI18_7:\nCPI19_7:\nCPI20_7:\nCPI21_9:\nCPI22_9:\nCPI23_7:\nCPI24_7:\nCPI25_11:\n\t.cell 10867283408178898638301172343726954674910073630256871736220740970449699113859\nCPI15_10:\nCPI16_10:\nCPI18_8:\nCPI19_9:\nCPI20_9:\nCPI21_10:\nCPI22_10:\nCPI23_8:\nCPI24_8:\nCPI25_12:\n\t.cell 904625751086426111047927909714404454142933105326819602152923490636624035840\nCPI15_11:\nCPI16_11:\nCPI18_9:\nCPI19_10:\nCPI20_10:\nCPI21_11:\nCPI22_11:\nCPI23_9:\nCPI24_9:\n\t.cell 50942633119752846454219349998365661925608737367104304655302372697894809501696\nCPI15_16:\nCPI16_16:\nCPI19_14:\nCPI20_14:\nCPI21_15:\nCPI22_15:\nCPI23_14:\nCPI24_14:\n\t.cell 29289127993025145568725129057828671567744754166070328588094505464281371246592\nCPI15_17:\nCPI16_17:\nCPI19_15:\nCPI20_15:\nCPI21_16:\nCPI22_16:\nCPI23_15:\nCPI24_15:\n\t.cell 5387515050969974956360988622848\nCPI15_19:\nCPI16_19:\nCPI18_16:\nCPI19_17:\nCPI20_17:\nCPI21_18:\nCPI22_18:\nCPI23_17:\nCPI24_17:\n\t.cell 115792089237316195423570985008687907853269984665640564039457\nCPI15_20:\nCPI16_20:\nCPI18_17:\nCPI19_18:\nCPI20_18:\nCPI21_19:\nCPI22_19:\nCPI23_18:\nCPI24_18:\n\t.cell 1000000000000000000\nCPI15_22:\nCPI21_22:\nCPI23_22:\n\t.cell 18446744073709551455\nCPI21_20:\nCPI22_20:\nCPI23_20:\nCPI24_20:\nCPI25_6:\n\t.cell -39341301877480157781710804024396230103289065588583741745104145964028735258624\nCPI21_21:\nCPI23_21:\n\t.cell 16156842317565293874272834530371880720966471053262404558597773956279093428224\nCPI21_23:\nCPI23_23:\n\t.cell 18446744073709551391\nCPI21_24:\nCPI22_24:\nCPI23_24:\nCPI24_24:\nCPI25_9:\n\t.cell 37714057306076988483118529490347679105585116642029194716945419020321082336612\nCPI21_25:\nCPI22_25:\nCPI23_25:\nCPI24_25:\nCPI25_14:\n\t.cell 50411904420896249798390057088552747694053213439589473829759729709664159399936\nCPI21_26:\nCPI22_26:\nCPI23_26:\nCPI24_26:\nCPI25_15:\n\t.cell 37714057306076988483118529433182395293628422681814405642689417129066110394478\nCPI21_30:\nCPI22_29:\nCPI23_30:\nCPI24_29:\nCPI25_21:\n\t.cell 29577713123142787666064487680123823951345158729797978021083438401868913442816\nCPI21_33:\nCPI23_33:\n\t.cell -50416925515954125712902479513714981708697134119002059318863190090123713045995\nCPI21_34:\nCPI22_34:\n\t.cell 36381916919785467604345307309545774882155299258101790893122500285898600480768\nCPI22_22:\nCPI24_22:\n\t.cell 18446744073709551487\nCPI22_23:\nCPI24_23:\nCPI25_8:\n\t.cell 18446744073709551551\nCPI22_32:\nCPI24_32:\n\t.cell -6116999617221423143306666619552877372318735432152700305865106915521926679192\nCPI22_33:\nCPI24_33:\n\t.cell 31422294206539411637796244062954547125593111746008812128197726098419865354240\nCPI25_7:\n\t.cell 18446744073709551488\nCPI25_20:\n\t.cell -31002090515413820819693746282746859664763185746936276214475542018239598033515\nCPI26_1:\n\t.cell 29577713123142787504773553364437654825755053680814010752540555947022013693952\n","bytecode":{"object":""},"methodIdentifiers":{"BONUS_MULTIPLIER()":"8aa28550","add(uint256,address,bool)":"1eaaa045","block()":"575cb0f6","deposit(uint256,uint256)":"e2bbb158","dev(address)":"8d88a90e","devAddress()":"3ad10ef6","emergencyWithdraw(uint256)":"5312ea8e","getMultiplier(uint256,uint256)":"8dbb1e3a","leaveStaking(uint256)":"1058d281","massUpdatePools()":"630b5ba1","owner()":"8da5cb5b","pendingSoba(uint256,address)":"cb3bc6de","poolInfo(uint256)":"1526fe27","poolLength()":"081e3eda","renounceOwnership()":"715018a6","set(uint256,uint256,bool)":"64482f79","sobaPerBlock()":"ac9b2915","sobaja()":"d93be1c7","staking(uint256)":"1dbb2a22","startBlock()":"48cd4cb1","totalAllocPoint()":"17caf6f1","transferOwnership(address)":"f2fde38b","updateMultiplier(uint256)":"5ffe6146","updatePool(uint256)":"51eb05a6","userInfo(uint256,address)":"93f1a40b","withdraw(uint256,uint256)":"441a3e70"}},"irOptimized":"/*=====================================================*\n *                       WARNING                       *\n *  Solidity to Yul compilation is still EXPERIMENTAL  *\n *       It can result in LOSS OF FUNDS or worse       *\n *                !USE AT YOUR OWN RISK!               *\n *=====================================================*/\n\n/// @use-src 0:\"@openzeppelin/contracts/access/Ownable.sol\", 7:\"@openzeppelin/contracts/utils/Context.sol\", 11:\"contracts/YieldFarm.sol\"\nobject \"YieldFarm_3156\" {\n    code {\n        {\n            /// @src 11:382:13176  \"contract YieldFarm is Ownable {...\"\n            mstore(64, 128)\n            if callvalue() { revert(0, 0) }\n            let programSize := datasize(\"YieldFarm_3156\")\n            let argSize := sub(codesize(), programSize)\n            let memoryDataOffset := allocate_memory(argSize)\n            codecopy(memoryDataOffset, programSize, argSize)\n            if slt(sub(add(memoryDataOffset, argSize), memoryDataOffset), 128)\n            {\n                revert(/** @src -1:-1:-1 */ 0, 0)\n            }\n            /// @src 11:382:13176  \"contract YieldFarm is Ownable {...\"\n            let value := mload(memoryDataOffset)\n            validator_revert_contract_SobaToken(value)\n            let value_1 := mload(add(memoryDataOffset, 32))\n            validator_revert_contract_SobaToken(value_1)\n            let value2 := mload(add(memoryDataOffset, 64))\n            let value3 := mload(add(memoryDataOffset, 96))\n            let _1 := sload(/** @src -1:-1:-1 */ 0)\n            /// @src 11:382:13176  \"contract YieldFarm is Ownable {...\"\n            let _2 := sub(shl(160, 1), 1)\n            sstore(/** @src -1:-1:-1 */ 0, /** @src 11:382:13176  \"contract YieldFarm is Ownable {...\" */ or(and(_1, not(sub(shl(160, 1), 1))), /** @src 7:719:729  \"msg.sender\" */ caller()))\n            /// @src 0:2566:2606  \"OwnershipTransferred(oldOwner, newOwner)\"\n            log3(/** @src 11:382:13176  \"contract YieldFarm is Ownable {...\" */ mload(64), /** @src -1:-1:-1 */ 0, /** @src 0:2566:2606  \"OwnershipTransferred(oldOwner, newOwner)\" */ 0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0, /** @src 11:382:13176  \"contract YieldFarm is Ownable {...\" */ and(_1, _2), /** @src 7:719:729  \"msg.sender\" */ caller())\n            /// @src 11:2091:2092  \"1\"\n            update_storage_value_offsett_rational_by_to_uint256_1228()\n            /// @src 11:2456:2457  \"0\"\n            update_storage_value_offsett_rational_by_to_uint256_1229()\n            /// @src 11:3189:3205  \"sobaja = _sobaja\"\n            update_storage_value_offsett_contract_SobaToken_to_contract_SobaToken_1230(value)\n            /// @src 11:3215:3236  \"devAddress = _devaddr\"\n            update_storage_value_offsett_contract_SobaToken_to_contract_SobaToken_1231(value_1)\n            /// @src 11:3246:3274  \"sobaPerBlock = _sobaPerBlock\"\n            update_storage_value_offsett_rational_by_to_uint256(value2)\n            /// @src 11:3284:3308  \"startBlock = _startBlock\"\n            update_storage_value_offsett_rational_by_to_uint256_1233(value3)\n            /// @src 11:382:13176  \"contract YieldFarm is Ownable {...\"\n            let _3 := sload(/** @src 11:3284:3308  \"startBlock = _startBlock\" */ 0x08)\n            /// @src 11:3399:3604  \"PoolInfo({...\"\n            let expr_mpos := /** @src 11:382:13176  \"contract YieldFarm is Ownable {...\" */ allocate_memory_1234()\n            /// @src 11:3399:3604  \"PoolInfo({...\"\n            write_to_memory_contract_IERC20(expr_mpos, /** @src 11:382:13176  \"contract YieldFarm is Ownable {...\" */ and(/** @src 11:3399:3604  \"PoolInfo({...\" */ value, /** @src 11:382:13176  \"contract YieldFarm is Ownable {...\" */ _2))\n            mstore(/** @src 11:3399:3604  \"PoolInfo({...\" */ add(expr_mpos, /** @src 11:382:13176  \"contract YieldFarm is Ownable {...\" */ 32), /** @src 11:3472:3476  \"1000\" */ 0x03e8)\n            /// @src 11:382:13176  \"contract YieldFarm is Ownable {...\"\n            mstore(/** @src 11:3399:3604  \"PoolInfo({...\" */ add(expr_mpos, /** @src 11:382:13176  \"contract YieldFarm is Ownable {...\" */ 64), _3)\n            mstore(/** @src 11:3399:3604  \"PoolInfo({...\" */ add(expr_mpos, /** @src 11:382:13176  \"contract YieldFarm is Ownable {...\" */ 96), /** @src -1:-1:-1 */ 0)\n            /// @src 11:382:13176  \"contract YieldFarm is Ownable {...\"\n            mstore(/** @src 11:3399:3604  \"PoolInfo({...\" */ add(expr_mpos, /** @src 11:382:13176  \"contract YieldFarm is Ownable {...\" */ 128), /** @src -1:-1:-1 */ 0)\n            /// @src 11:3372:3614  \"poolInfo.push(...\"\n            array_push_from_struct_PoolInfo_to_array_struct_PoolInfo_storage_dyn_ptr(expr_mpos)\n            /// @src 11:3625:3647  \"totalAllocPoint = 1000\"\n            update_storage_value_offsett_rational_by_to_uint256_1236()\n            /// @src 11:382:13176  \"contract YieldFarm is Ownable {...\"\n            let _4 := mload(64)\n            let _5 := datasize(\"YieldFarm_3156_deployed\")\n            codecopy(_4, dataoffset(\"YieldFarm_3156_deployed\"), _5)\n            return(_4, _5)\n        }\n        function panic_error_0x41()\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x41)\n            revert(0, 0x24)\n        }\n        function allocate_memory_1234() -> memPtr\n        {\n            memPtr := mload(64)\n            let newFreePtr := add(memPtr, 160)\n            if or(gt(newFreePtr, sub(shl(64, 1), 1)), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n            mstore(64, newFreePtr)\n        }\n        function allocate_memory(size) -> memPtr\n        {\n            memPtr := mload(64)\n            let newFreePtr := add(memPtr, and(add(size, 31), not(31)))\n            if or(gt(newFreePtr, sub(shl(64, 1), 1)), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n            mstore(64, newFreePtr)\n        }\n        function validator_revert_contract_SobaToken(value)\n        {\n            if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n        }\n        function update_storage_value_offsett_rational_by_to_uint256_1228()\n        {\n            sstore(/** @src 11:2091:2092  \"1\" */ 0x04, 0x01)\n        }\n        /// @src 11:382:13176  \"contract YieldFarm is Ownable {...\"\n        function update_storage_value_offsett_rational_by_to_uint256_1229()\n        {\n            sstore(/** @src 11:2456:2457  \"0\" */ 0x07, /** @src 0:2518:2524  \"_owner\" */ 0x00)\n        }\n        /// @src 11:382:13176  \"contract YieldFarm is Ownable {...\"\n        function update_storage_value_offsett_rational_by_to_uint256(value)\n        {\n            sstore(/** @src 11:3246:3274  \"sobaPerBlock = _sobaPerBlock\" */ 0x03, /** @src 11:382:13176  \"contract YieldFarm is Ownable {...\" */ value)\n        }\n        function update_storage_value_offsett_rational_by_to_uint256_1233(value)\n        {\n            sstore(/** @src 11:3284:3308  \"startBlock = _startBlock\" */ 0x08, /** @src 11:382:13176  \"contract YieldFarm is Ownable {...\" */ value)\n        }\n        function update_storage_value_offsett_rational_by_to_uint256_1236()\n        {\n            sstore(/** @src 11:2456:2457  \"0\" */ 0x07, /** @src 11:3472:3476  \"1000\" */ 0x03e8)\n        }\n        /// @src 11:382:13176  \"contract YieldFarm is Ownable {...\"\n        function update_storage_value_offsett_contract_SobaToken_to_contract_SobaToken_1230(value)\n        {\n            sstore(/** @src 11:2091:2092  \"1\" */ 0x01, /** @src 11:382:13176  \"contract YieldFarm is Ownable {...\" */ or(and(sload(/** @src 11:2091:2092  \"1\" */ 0x01), /** @src 11:382:13176  \"contract YieldFarm is Ownable {...\" */ not(sub(shl(160, 1), 1))), and(value, sub(shl(160, 1), 1))))\n        }\n        function update_storage_value_offsett_contract_SobaToken_to_contract_SobaToken_1231(value)\n        {\n            sstore(/** @src 11:3215:3236  \"devAddress = _devaddr\" */ 0x02, /** @src 11:382:13176  \"contract YieldFarm is Ownable {...\" */ or(and(sload(/** @src 11:3215:3236  \"devAddress = _devaddr\" */ 0x02), /** @src 11:382:13176  \"contract YieldFarm is Ownable {...\" */ not(sub(shl(160, 1), 1))), and(value, sub(shl(160, 1), 1))))\n        }\n        function update_storage_value_offsett_contract_SobaToken_to_contract_SobaToken(slot, value)\n        {\n            sstore(slot, or(and(sload(slot), not(sub(shl(160, 1), 1))), and(value, sub(shl(160, 1), 1))))\n        }\n        function write_to_memory_contract_IERC20(memPtr, value)\n        {\n            mstore(memPtr, and(value, sub(shl(160, 1), 1)))\n        }\n        function array_push_from_struct_PoolInfo_to_array_struct_PoolInfo_storage_dyn_ptr(value0)\n        {\n            let oldLen := sload(/** @src 11:3372:3380  \"poolInfo\" */ 0x05)\n            /// @src 11:382:13176  \"contract YieldFarm is Ownable {...\"\n            if iszero(lt(oldLen, 18446744073709551616)) { panic_error_0x41() }\n            let _1 := add(oldLen, 1)\n            sstore(/** @src 11:3372:3380  \"poolInfo\" */ 0x05, /** @src 11:382:13176  \"contract YieldFarm is Ownable {...\" */ _1)\n            if iszero(lt(oldLen, _1))\n            {\n                mstore(/** @src -1:-1:-1 */ 0, /** @src 11:382:13176  \"contract YieldFarm is Ownable {...\" */ shl(224, 0x4e487b71))\n                mstore(4, 0x32)\n                revert(/** @src -1:-1:-1 */ 0, /** @src 11:382:13176  \"contract YieldFarm is Ownable {...\" */ 0x24)\n            }\n            mstore(/** @src -1:-1:-1 */ 0, /** @src 11:3372:3380  \"poolInfo\" */ 0x05)\n            /// @src 11:382:13176  \"contract YieldFarm is Ownable {...\"\n            let data := keccak256(/** @src -1:-1:-1 */ 0, /** @src 11:382:13176  \"contract YieldFarm is Ownable {...\" */ 0x20)\n            let slot := add(data, mul(oldLen, /** @src 11:3372:3380  \"poolInfo\" */ 0x05))\n            /// @src 11:382:13176  \"contract YieldFarm is Ownable {...\"\n            update_storage_value_offsett_contract_SobaToken_to_contract_SobaToken(slot, and(mload(value0), sub(shl(160, 1), 1)))\n            sstore(add(slot, 1), mload(add(value0, 0x20)))\n            sstore(add(slot, 2), mload(add(value0, 64)))\n            sstore(add(slot, 3), mload(add(value0, 96)))\n            sstore(add(slot, 4), mload(add(value0, 128)))\n        }\n    }\n    /// @use-src 0:\"@openzeppelin/contracts/access/Ownable.sol\", 5:\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\", 6:\"@openzeppelin/contracts/utils/Address.sol\", 7:\"@openzeppelin/contracts/utils/Context.sol\", 8:\"@openzeppelin/contracts/utils/math/SafeMath.sol\", 11:\"contracts/YieldFarm.sol\"\n    object \"YieldFarm_3156_deployed\" {\n        code {\n            {\n                /// @src 11:382:13176  \"contract YieldFarm is Ownable {...\"\n                let _1 := 64\n                mstore(_1, 128)\n                if iszero(lt(calldatasize(), 4))\n                {\n                    let _2 := 0\n                    switch shr(224, calldataload(_2))\n                    case 0x081e3eda {\n                        if callvalue() { revert(_2, _2) }\n                        abi_decode_6905(calldatasize())\n                        return(128, add(abi_encode_uint256_6906(sload(/** @src 11:3934:3942  \"poolInfo\" */ 0x05)), /** @src 11:382:13176  \"contract YieldFarm is Ownable {...\" */ not(127)))\n                    }\n                    case 0x1058d281 {\n                        if callvalue() { revert(_2, _2) }\n                        fun_leaveStaking(abi_decode_uint256(calldatasize()))\n                        return(mload(_1), _2)\n                    }\n                    case 0x1526fe27 {\n                        if callvalue() { revert(_2, _2) }\n                        let ret, ret_1, ret_2, ret_3, ret_4 := getter_fun_poolInfo(abi_decode_uint256(calldatasize()))\n                        let memPos := mload(_1)\n                        return(memPos, sub(abi_encode_contract_IERC20_uint256_uint256_uint256_uint256(memPos, ret, ret_1, ret_2, ret_3, ret_4), memPos))\n                    }\n                    case 0x17caf6f1 {\n                        if callvalue() { revert(_2, _2) }\n                        abi_decode_6905(calldatasize())\n                        let ret_5 := sload(/** @src 11:2423:2457  \"uint256 public totalAllocPoint = 0\" */ 7)\n                        /// @src 11:382:13176  \"contract YieldFarm is Ownable {...\"\n                        let memPos_1 := mload(_1)\n                        return(memPos_1, sub(abi_encode_uint256(memPos_1, ret_5), memPos_1))\n                    }\n                    case 0x1dbb2a22 {\n                        if callvalue() { revert(_2, _2) }\n                        fun_staking(abi_decode_uint256(calldatasize()))\n                        return(mload(_1), _2)\n                    }\n                    case 0x1eaaa045 {\n                        if callvalue() { revert(_2, _2) }\n                        let param, param_1, param_2 := abi_decode_uint256t_contract_IERC20t_bool(calldatasize())\n                        /// @src 11:4092:4941  \"function add(...\"\n                        modifier_onlyOwner_2130(param, param_1, param_2)\n                        /// @src 11:382:13176  \"contract YieldFarm is Ownable {...\"\n                        return(mload(_1), _2)\n                    }\n                    case 0x3ad10ef6 {\n                        if callvalue() { revert(_2, _2) }\n                        abi_decode_6905(calldatasize())\n                        let ret_6 := and(sload(/** @src 11:1910:1935  \"address public devAddress\" */ 2), /** @src 11:382:13176  \"contract YieldFarm is Ownable {...\" */ sub(shl(160, 1), 1))\n                        let memPos_2 := mload(_1)\n                        return(memPos_2, sub(abi_encode_address(memPos_2, ret_6), memPos_2))\n                    }\n                    case 0x441a3e70 {\n                        if callvalue() { revert(_2, _2) }\n                        let param_3, param_4 := abi_decode_uint256t_uint256(calldatasize())\n                        fun_withdraw(param_3, param_4)\n                        return(mload(_1), _2)\n                    }\n                    case 0x48cd4cb1 {\n                        if callvalue() { revert(_2, _2) }\n                        abi_decode_6905(calldatasize())\n                        let ret_7 := sload(/** @src 11:2643:2668  \"uint256 public startBlock\" */ 8)\n                        /// @src 11:382:13176  \"contract YieldFarm is Ownable {...\"\n                        let memPos_3 := mload(_1)\n                        return(memPos_3, sub(abi_encode_uint256(memPos_3, ret_7), memPos_3))\n                    }\n                    case 0x51eb05a6 {\n                        if callvalue() { revert(_2, _2) }\n                        fun_updatePool(abi_decode_uint256(calldatasize()))\n                        return(mload(_1), _2)\n                    }\n                    case 0x5312ea8e {\n                        if callvalue() { revert(_2, _2) }\n                        fun_emergencyWithdraw(abi_decode_uint256(calldatasize()))\n                        return(mload(_1), _2)\n                    }\n                    case 0x575cb0f6 {\n                        if callvalue() { revert(_2, _2) }\n                        abi_decode_6905(calldatasize())\n                        let memPos_4 := mload(_1)\n                        return(memPos_4, sub(abi_encode_uint256(memPos_4, /** @src 11:4025:4037  \"block.number\" */ number()), /** @src 11:382:13176  \"contract YieldFarm is Ownable {...\" */ memPos_4))\n                    }\n                    case 0x5ffe6146 {\n                        if callvalue() { revert(_2, _2) }\n                        /// @src 11:3736:3857  \"function updateMultiplier(uint256 multiplierNumber) public onlyOwner {...\"\n                        modifier_onlyOwner_2095(/** @src 11:382:13176  \"contract YieldFarm is Ownable {...\" */ abi_decode_uint256(calldatasize()))\n                        return(mload(_1), _2)\n                    }\n                    case 0x630b5ba1 {\n                        if callvalue() { revert(_2, _2) }\n                        abi_decode_6905(calldatasize())\n                        fun_massUpdatePools()\n                        return(mload(_1), _2)\n                    }\n                    case 0x64482f79 {\n                        if callvalue() { revert(_2, _2) }\n                        let param_5, param_6, param_7 := abi_decode_uint256t_uint256t_bool(calldatasize())\n                        /// @src 11:5021:5529  \"function set(...\"\n                        modifier_onlyOwner_2181(param_5, param_6, param_7)\n                        /// @src 11:382:13176  \"contract YieldFarm is Ownable {...\"\n                        return(mload(_1), _2)\n                    }\n                    case 0x715018a6 {\n                        if callvalue() { revert(_2, _2) }\n                        abi_decode_6905(calldatasize())\n                        /// @src 0:1824:1925  \"function renounceOwnership() public virtual onlyOwner {...\"\n                        modifier_onlyOwner()\n                        /// @src 11:382:13176  \"contract YieldFarm is Ownable {...\"\n                        return(mload(_1), _2)\n                    }\n                    case 0x8aa28550 {\n                        if callvalue() { revert(_2, _2) }\n                        abi_decode_6905(calldatasize())\n                        let ret_8 := sload(4)\n                        let memPos_5 := mload(_1)\n                        return(memPos_5, sub(abi_encode_uint256(memPos_5, ret_8), memPos_5))\n                    }\n                    case 0x8d88a90e {\n                        if callvalue() { revert(_2, _2) }\n                        fun_dev(abi_decode_address(calldatasize()))\n                        return(mload(_1), _2)\n                    }\n                    case 0x8da5cb5b {\n                        if callvalue() { revert(_2, _2) }\n                        abi_decode_6905(calldatasize())\n                        let ret_9 := and(sload(_2), sub(shl(160, 1), 1))\n                        let memPos_6 := mload(_1)\n                        return(memPos_6, sub(abi_encode_address(memPos_6, ret_9), memPos_6))\n                    }\n                    case 0x8dbb1e3a {\n                        if callvalue() { revert(_2, _2) }\n                        let param_8, param_9 := abi_decode_uint256t_uint256(calldatasize())\n                        let ret_10 := fun_getMultiplier(param_8, param_9)\n                        let memPos_7 := mload(_1)\n                        return(memPos_7, sub(abi_encode_uint256(memPos_7, ret_10), memPos_7))\n                    }\n                    case 0x93f1a40b {\n                        if callvalue() { revert(_2, _2) }\n                        let param_10, param_11 := abi_decode_uint256t_address(calldatasize())\n                        let ret_11, ret_12 := getter_fun_userInfo(param_10, param_11)\n                        let memPos_8 := mload(_1)\n                        return(memPos_8, sub(abi_encode_uint256_uint256(memPos_8, ret_11, ret_12), memPos_8))\n                    }\n                    case 0xac9b2915 {\n                        if callvalue() { revert(_2, _2) }\n                        abi_decode_6905(calldatasize())\n                        let ret_13 := sload(/** @src 11:1990:2017  \"uint256 public sobaPerBlock\" */ 3)\n                        /// @src 11:382:13176  \"contract YieldFarm is Ownable {...\"\n                        let memPos_9 := mload(_1)\n                        return(memPos_9, sub(abi_encode_uint256(memPos_9, ret_13), memPos_9))\n                    }\n                    case 0xcb3bc6de {\n                        if callvalue() { revert(_2, _2) }\n                        let param_12, param_13 := abi_decode_uint256t_address(calldatasize())\n                        let ret_14 := fun_pendingSoba(param_12, param_13)\n                        let memPos_10 := mload(_1)\n                        return(memPos_10, sub(abi_encode_uint256(memPos_10, ret_14), memPos_10))\n                    }\n                    case 0xd93be1c7 {\n                        if callvalue() { revert(_2, _2) }\n                        abi_decode_6905(calldatasize())\n                        let ret_15 := and(sload(/** @src 11:1880:1903  \"SobaToken public sobaja\" */ 1), /** @src 11:382:13176  \"contract YieldFarm is Ownable {...\" */ sub(shl(160, 1), 1))\n                        let memPos_11 := mload(_1)\n                        return(memPos_11, sub(abi_encode_address(memPos_11, ret_15), memPos_11))\n                    }\n                    case 0xe2bbb158 {\n                        if callvalue() { revert(_2, _2) }\n                        let param_14, param_15 := abi_decode_uint256t_uint256(calldatasize())\n                        fun_deposit(param_14, param_15)\n                        return(mload(_1), _2)\n                    }\n                    case 0xf2fde38b {\n                        if callvalue() { revert(_2, _2) }\n                        /// @src 0:2074:2272  \"function transferOwnership(address newOwner) public virtual onlyOwner {...\"\n                        modifier_onlyOwner_74(/** @src 11:382:13176  \"contract YieldFarm is Ownable {...\" */ abi_decode_address(calldatasize()))\n                        return(mload(_1), _2)\n                    }\n                }\n                revert(0, 0)\n            }\n            function abi_decode_6905(dataEnd)\n            {\n                if slt(add(dataEnd, not(3)), 0) { revert(0, 0) }\n            }\n            function abi_decode(headStart, dataEnd)\n            {\n                if slt(sub(dataEnd, headStart), 0) { revert(0, 0) }\n            }\n            function abi_encode_uint256_6906(value0) -> tail\n            {\n                tail := 160\n                mstore(128, value0)\n            }\n            function abi_encode_uint256(headStart, value0) -> tail\n            {\n                tail := add(headStart, 32)\n                mstore(headStart, value0)\n            }\n            function abi_decode_uint256(dataEnd) -> value0\n            {\n                if slt(add(dataEnd, not(3)), 32) { revert(0, 0) }\n                value0 := calldataload(4)\n            }\n            function panic_error_0x32()\n            {\n                mstore(0, shl(224, 0x4e487b71))\n                mstore(4, 0x32)\n                revert(0, 0x24)\n            }\n            function storage_array_index_access_struct_PoolInfo_storage_dyn() -> slot, offset\n            {\n                if iszero(sload(/** @src 11:4650:4658  \"poolInfo\" */ 0x05))\n                /// @src 11:382:13176  \"contract YieldFarm is Ownable {...\"\n                { panic_error_0x32() }\n                mstore(/** @src 11:10612:10613  \"0\" */ 0x00, /** @src 11:4650:4658  \"poolInfo\" */ 0x05)\n                /// @src 11:382:13176  \"contract YieldFarm is Ownable {...\"\n                slot := 1546678032441257452667456735582814959992782782816731922691272282333561699760\n                offset := /** @src 11:10612:10613  \"0\" */ 0x00\n            }\n            /// @src 11:382:13176  \"contract YieldFarm is Ownable {...\"\n            function storage_array_index_access_struct_PoolInfo__dyn(index) -> slot, offset\n            {\n                if iszero(lt(index, sload(/** @src 11:4650:4658  \"poolInfo\" */ 0x05)))\n                /// @src 11:382:13176  \"contract YieldFarm is Ownable {...\"\n                { panic_error_0x32() }\n                mstore(/** @src -1:-1:-1 */ 0, /** @src 11:4650:4658  \"poolInfo\" */ 0x05)\n                /// @src 11:382:13176  \"contract YieldFarm is Ownable {...\"\n                slot := add(1546678032441257452667456735582814959992782782816731922691272282333561699760, mul(index, /** @src 11:4650:4658  \"poolInfo\" */ 0x05))\n                /// @src 11:382:13176  \"contract YieldFarm is Ownable {...\"\n                offset := /** @src -1:-1:-1 */ 0\n            }\n            /// @src 11:382:13176  \"contract YieldFarm is Ownable {...\"\n            function extract_from_storage_value_offsett_contract_IERC20(slot_value) -> value\n            {\n                value := and(slot_value, sub(shl(160, 1), 1))\n            }\n            /// @ast-id 2009 @src 11:2169:2195  \"PoolInfo[] public poolInfo\"\n            function getter_fun_poolInfo(key) -> ret_address, ret, ret_1, ret_2, ret_3\n            {\n                if iszero(lt(key, /** @src 11:382:13176  \"contract YieldFarm is Ownable {...\" */ sload(/** @src 11:2169:2195  \"PoolInfo[] public poolInfo\" */ 5))) { revert(0, 0) }\n                /// @src 11:382:13176  \"contract YieldFarm is Ownable {...\"\n                mstore(/** @src -1:-1:-1 */ 0, /** @src 11:2169:2195  \"PoolInfo[] public poolInfo\" */ 5)\n                /// @src 11:382:13176  \"contract YieldFarm is Ownable {...\"\n                let _1 := mul(key, /** @src 11:2169:2195  \"PoolInfo[] public poolInfo\" */ 5)\n                ret_address := /** @src 11:382:13176  \"contract YieldFarm is Ownable {...\" */ and(sload(add(1546678032441257452667456735582814959992782782816731922691272282333561699760, _1)), sub(shl(160, 1), 1))\n                /// @src 11:2169:2195  \"PoolInfo[] public poolInfo\"\n                ret := /** @src 11:382:13176  \"contract YieldFarm is Ownable {...\" */ sload(/** @src 11:2169:2195  \"PoolInfo[] public poolInfo\" */ add(/** @src 11:382:13176  \"contract YieldFarm is Ownable {...\" */ _1, /** @src 11:2169:2195  \"PoolInfo[] public poolInfo\" */ 0x036b6384b5eca791c62761152d0c79bb0604c104a5fb6f4eb0703f3154bb3db1))\n                ret_1 := /** @src 11:382:13176  \"contract YieldFarm is Ownable {...\" */ sload(/** @src 11:2169:2195  \"PoolInfo[] public poolInfo\" */ add(/** @src 11:382:13176  \"contract YieldFarm is Ownable {...\" */ _1, /** @src 11:2169:2195  \"PoolInfo[] public poolInfo\" */ 0x036b6384b5eca791c62761152d0c79bb0604c104a5fb6f4eb0703f3154bb3db2))\n                ret_2 := /** @src 11:382:13176  \"contract YieldFarm is Ownable {...\" */ sload(/** @src 11:2169:2195  \"PoolInfo[] public poolInfo\" */ add(/** @src 11:382:13176  \"contract YieldFarm is Ownable {...\" */ _1, /** @src 11:2169:2195  \"PoolInfo[] public poolInfo\" */ 0x036b6384b5eca791c62761152d0c79bb0604c104a5fb6f4eb0703f3154bb3db3))\n                ret_3 := /** @src 11:382:13176  \"contract YieldFarm is Ownable {...\" */ sload(/** @src 11:2169:2195  \"PoolInfo[] public poolInfo\" */ add(/** @src 11:382:13176  \"contract YieldFarm is Ownable {...\" */ _1, /** @src 11:2169:2195  \"PoolInfo[] public poolInfo\" */ 0x036b6384b5eca791c62761152d0c79bb0604c104a5fb6f4eb0703f3154bb3db4))\n            }\n            /// @src 11:382:13176  \"contract YieldFarm is Ownable {...\"\n            function abi_encode_contract_IERC20_uint256_uint256_uint256_uint256(headStart, value0, value1, value2, value3, value4) -> tail\n            {\n                tail := add(headStart, 160)\n                mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n                mstore(add(headStart, 32), value1)\n                mstore(add(headStart, 64), value2)\n                mstore(add(headStart, 96), value3)\n                mstore(add(headStart, 128), value4)\n            }\n            function validator_revert_contract_IERC20(value)\n            {\n                if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n            }\n            function validator_revert_bool(value)\n            {\n                if iszero(eq(value, iszero(iszero(value)))) { revert(0, 0) }\n            }\n            function abi_decode_uint256t_contract_IERC20t_bool(dataEnd) -> value0, value1, value2\n            {\n                if slt(add(dataEnd, not(3)), 96) { revert(0, 0) }\n                value0 := calldataload(4)\n                let value := calldataload(36)\n                validator_revert_contract_IERC20(value)\n                value1 := value\n                let value_1 := calldataload(68)\n                validator_revert_bool(value_1)\n                value2 := value_1\n            }\n            function abi_encode_address(headStart, value0) -> tail\n            {\n                tail := add(headStart, 32)\n                mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n            }\n            function abi_decode_uint256t_uint256(dataEnd) -> value0, value1\n            {\n                if slt(add(dataEnd, not(3)), 64) { revert(0, 0) }\n                value0 := calldataload(4)\n                value1 := calldataload(36)\n            }\n            function abi_decode_uint256t_uint256t_bool(dataEnd) -> value0, value1, value2\n            {\n                if slt(add(dataEnd, not(3)), 96) { revert(0, 0) }\n                value0 := calldataload(4)\n                value1 := calldataload(36)\n                let value := calldataload(68)\n                validator_revert_bool(value)\n                value2 := value\n            }\n            function abi_decode_address(dataEnd) -> value0\n            {\n                if slt(add(dataEnd, not(3)), 32) { revert(0, 0) }\n                let value := calldataload(4)\n                validator_revert_contract_IERC20(value)\n                value0 := value\n            }\n            function abi_decode_uint256t_address(dataEnd) -> value0, value1\n            {\n                if slt(add(dataEnd, not(3)), 64) { revert(0, 0) }\n                value0 := calldataload(4)\n                let value := calldataload(36)\n                validator_revert_contract_IERC20(value)\n                value1 := value\n            }\n            function mapping_index_access_mapping_uint256_mapping_address_struct_UserInfo_storage__of_uint256(key) -> dataSlot\n            {\n                mstore(0, key)\n                mstore(0x20, /** @src 11:6632:6640  \"userInfo\" */ 0x06)\n                /// @src 11:382:13176  \"contract YieldFarm is Ownable {...\"\n                dataSlot := keccak256(0, 0x40)\n            }\n            function mapping_index_access_mapping_uint256_mapping_address_struct_UserInfo_storage_of_uint256() -> dataSlot\n            {\n                mstore(/** @src 11:10612:10613  \"0\" */ 0x00, 0x00)\n                /// @src 11:382:13176  \"contract YieldFarm is Ownable {...\"\n                mstore(0x20, /** @src 11:10648:10656  \"userInfo\" */ 0x06)\n                /// @src 11:382:13176  \"contract YieldFarm is Ownable {...\"\n                dataSlot := keccak256(/** @src 11:10612:10613  \"0\" */ 0x00, /** @src 11:382:13176  \"contract YieldFarm is Ownable {...\" */ 0x40)\n            }\n            function mapping_index_access_mapping_address_struct_UserInfo_storage_of_address(slot, key) -> dataSlot\n            {\n                mstore(0, and(key, sub(shl(160, 1), 1)))\n                mstore(0x20, slot)\n                dataSlot := keccak256(0, 0x40)\n            }\n            /// @ast-id 2016 @src 11:2249:2313  \"mapping(uint256 => mapping(address => UserInfo)) public userInfo\"\n            function getter_fun_userInfo(key, key_1) -> ret, ret_1\n            {\n                /// @src 11:382:13176  \"contract YieldFarm is Ownable {...\"\n                mstore(/** @src -1:-1:-1 */ 0, /** @src 11:382:13176  \"contract YieldFarm is Ownable {...\" */ key)\n                mstore(0x20, /** @src 11:2249:2313  \"mapping(uint256 => mapping(address => UserInfo)) public userInfo\" */ 6)\n                let slot := mapping_index_access_mapping_address_struct_UserInfo_storage_of_address(/** @src 11:382:13176  \"contract YieldFarm is Ownable {...\" */ keccak256(/** @src -1:-1:-1 */ 0, /** @src 11:382:13176  \"contract YieldFarm is Ownable {...\" */ 0x40), /** @src 11:2249:2313  \"mapping(uint256 => mapping(address => UserInfo)) public userInfo\" */ key_1)\n                ret := /** @src 11:382:13176  \"contract YieldFarm is Ownable {...\" */ sload(/** @src 11:2249:2313  \"mapping(uint256 => mapping(address => UserInfo)) public userInfo\" */ slot)\n                ret_1 := /** @src 11:382:13176  \"contract YieldFarm is Ownable {...\" */ sload(/** @src 11:2249:2313  \"mapping(uint256 => mapping(address => UserInfo)) public userInfo\" */ add(slot, 1))\n            }\n            /// @src 11:382:13176  \"contract YieldFarm is Ownable {...\"\n            function abi_encode_uint256_uint256(headStart, value0, value1) -> tail\n            {\n                tail := add(headStart, 64)\n                mstore(headStart, value0)\n                mstore(add(headStart, 32), value1)\n            }\n            /// @ast-id 31 @src 0:1063:1125  \"modifier onlyOwner() {...\"\n            function modifier_onlyOwner()\n            {\n                fun_checkOwner()\n                /// @src 11:382:13176  \"contract YieldFarm is Ownable {...\"\n                let _1 := sload(0)\n                sstore(0, and(_1, shl(160, 0xffffffffffffffffffffffff)))\n                /// @src 0:2566:2606  \"OwnershipTransferred(oldOwner, newOwner)\"\n                log3(/** @src 11:382:13176  \"contract YieldFarm is Ownable {...\" */ mload(64), 0, /** @src 0:2566:2606  \"OwnershipTransferred(oldOwner, newOwner)\" */ 0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0, /** @src 11:382:13176  \"contract YieldFarm is Ownable {...\" */ and(_1, sub(shl(160, 1), 1)), 0)\n            }\n            /// @ast-id 54 @src 0:1359:1489  \"function _checkOwner() internal view virtual {...\"\n            function fun_checkOwner()\n            {\n                /// @src 11:382:13176  \"contract YieldFarm is Ownable {...\"\n                let value := and(sload(/** @src 0:1273:1279  \"_owner\" */ 0x00), /** @src 11:382:13176  \"contract YieldFarm is Ownable {...\" */ sub(shl(160, 1), 1))\n                if iszero(/** @src 0:1422:1445  \"owner() == _msgSender()\" */ eq(/** @src 11:382:13176  \"contract YieldFarm is Ownable {...\" */ value, /** @src 7:719:729  \"msg.sender\" */ caller()))\n                /// @src 11:382:13176  \"contract YieldFarm is Ownable {...\"\n                {\n                    let memPtr := mload(64)\n                    mstore(memPtr, shl(229, 4594637))\n                    mstore(add(memPtr, 4), 32)\n                    mstore(add(memPtr, 36), 32)\n                    mstore(add(memPtr, 68), \"Ownable: caller is not the owner\")\n                    revert(memPtr, 100)\n                }\n            }\n            /// @ast-id 31 @src 0:1063:1125  \"modifier onlyOwner() {...\"\n            function modifier_onlyOwner_74(var_newOwner)\n            {\n                fun_checkOwner()\n                /// @src 11:382:13176  \"contract YieldFarm is Ownable {...\"\n                let _1 := sub(shl(160, 1), 1)\n                let _2 := and(/** @src 0:2162:2184  \"newOwner != address(0)\" */ var_newOwner, /** @src 11:382:13176  \"contract YieldFarm is Ownable {...\" */ _1)\n                if /** @src 0:2162:2184  \"newOwner != address(0)\" */ iszero(/** @src 11:382:13176  \"contract YieldFarm is Ownable {...\" */ _2)\n                {\n                    let memPtr := mload(64)\n                    mstore(memPtr, shl(229, 4594637))\n                    mstore(add(memPtr, 4), 32)\n                    mstore(add(memPtr, 36), 38)\n                    mstore(add(memPtr, 68), \"Ownable: new owner is the zero a\")\n                    mstore(add(memPtr, 100), \"ddress\")\n                    revert(memPtr, 132)\n                }\n                let _3 := sload(/** @src 0:2518:2524  \"_owner\" */ 0x00)\n                /// @src 11:382:13176  \"contract YieldFarm is Ownable {...\"\n                sstore(/** @src 0:2518:2524  \"_owner\" */ 0x00, /** @src 11:382:13176  \"contract YieldFarm is Ownable {...\" */ or(and(_3, shl(160, 0xffffffffffffffffffffffff)), _2))\n                /// @src 0:2566:2606  \"OwnershipTransferred(oldOwner, newOwner)\"\n                log3(/** @src 11:382:13176  \"contract YieldFarm is Ownable {...\" */ mload(64), /** @src 0:2518:2524  \"_owner\" */ 0x00, /** @src 0:2566:2606  \"OwnershipTransferred(oldOwner, newOwner)\" */ 0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0, /** @src 11:382:13176  \"contract YieldFarm is Ownable {...\" */ and(_3, _1), /** @src 0:2566:2606  \"OwnershipTransferred(oldOwner, newOwner)\" */ var_newOwner)\n            }\n            /// @src 11:382:13176  \"contract YieldFarm is Ownable {...\"\n            function update_storage_value_offsett_address_to_address(slot, value)\n            {\n                sstore(slot, or(and(sload(slot), shl(160, 0xffffffffffffffffffffffff)), and(value, sub(shl(160, 1), 1))))\n            }\n            /// @ast-id 31 @src 0:1063:1125  \"modifier onlyOwner() {...\"\n            function modifier_onlyOwner_2095(var_multiplierNumber)\n            {\n                fun_checkOwner()\n                /// @src 11:382:13176  \"contract YieldFarm is Ownable {...\"\n                sstore(/** @src 11:3815:3850  \"BONUS_MULTIPLIER = multiplierNumber\" */ 0x04, /** @src 11:382:13176  \"contract YieldFarm is Ownable {...\" */ var_multiplierNumber)\n            }\n            /// @ast-id 31 @src 0:1063:1125  \"modifier onlyOwner() {...\"\n            function modifier_onlyOwner_2130(var_allocPoint, var_lpToken_address, var_withUpdate)\n            {\n                fun_checkOwner()\n                /// @src 11:4305:4364  \"if (_withUpdate) {...\"\n                if var_withUpdate { fun_massUpdatePools() }\n                /// @src 11:382:13176  \"contract YieldFarm is Ownable {...\"\n                let _1 := sload(/** @src 11:4517:4527  \"startBlock\" */ 0x08)\n                /// @src 11:4502:4579  \"block.number > startBlock...\"\n                let expr := /** @src -1:-1:-1 */ 0\n                /// @src 11:4502:4579  \"block.number > startBlock...\"\n                switch /** @src 11:4502:4527  \"block.number > startBlock\" */ gt(/** @src 11:4502:4514  \"block.number\" */ number(), /** @src 11:4502:4527  \"block.number > startBlock\" */ _1)\n                case /** @src 11:4502:4579  \"block.number > startBlock...\" */ 0 { expr := _1 }\n                default {\n                    expr := /** @src 11:4502:4514  \"block.number\" */ number()\n                }\n                /// @src 11:382:13176  \"contract YieldFarm is Ownable {...\"\n                sstore(/** @src 11:4608:4623  \"totalAllocPoint\" */ 0x07, /** @src 8:2839:2844  \"a + b\" */ checked_add_uint256(/** @src 11:382:13176  \"contract YieldFarm is Ownable {...\" */ sload(/** @src 11:4608:4623  \"totalAllocPoint\" */ 0x07), /** @src 8:2839:2844  \"a + b\" */ var_allocPoint))\n                /// @src 11:382:13176  \"contract YieldFarm is Ownable {...\"\n                let memPtr := mload(64)\n                finalize_allocation_6943(memPtr)\n                let _2 := sub(shl(160, 1), 1)\n                mstore(memPtr, and(var_lpToken_address, _2))\n                /// @src 11:4677:4895  \"PoolInfo({...\"\n                let _3 := add(memPtr, 32)\n                /// @src 11:382:13176  \"contract YieldFarm is Ownable {...\"\n                mstore(_3, var_allocPoint)\n                /// @src 11:4677:4895  \"PoolInfo({...\"\n                let _4 := add(memPtr, /** @src 11:382:13176  \"contract YieldFarm is Ownable {...\" */ 64)\n                mstore(_4, expr)\n                /// @src 11:4677:4895  \"PoolInfo({...\"\n                let _5 := add(memPtr, 96)\n                /// @src 11:382:13176  \"contract YieldFarm is Ownable {...\"\n                mstore(_5, /** @src -1:-1:-1 */ 0)\n                /// @src 11:4677:4895  \"PoolInfo({...\"\n                let _6 := add(memPtr, 128)\n                /// @src 11:382:13176  \"contract YieldFarm is Ownable {...\"\n                mstore(_6, /** @src -1:-1:-1 */ 0)\n                /// @src 11:382:13176  \"contract YieldFarm is Ownable {...\"\n                let oldLen := sload(/** @src 11:4650:4658  \"poolInfo\" */ 0x05)\n                /// @src 11:382:13176  \"contract YieldFarm is Ownable {...\"\n                if iszero(lt(oldLen, 18446744073709551616)) { panic_error_0x41() }\n                sstore(/** @src 11:4650:4658  \"poolInfo\" */ 0x05, /** @src 11:382:13176  \"contract YieldFarm is Ownable {...\" */ add(oldLen, 1))\n                let slot, offset := storage_array_index_access_struct_PoolInfo__dyn(oldLen)\n                if offset\n                {\n                    mstore(/** @src -1:-1:-1 */ 0, /** @src 11:382:13176  \"contract YieldFarm is Ownable {...\" */ shl(224, 0x4e487b71))\n                    mstore(4, /** @src -1:-1:-1 */ 0)\n                    /// @src 11:382:13176  \"contract YieldFarm is Ownable {...\"\n                    revert(/** @src -1:-1:-1 */ 0, /** @src 11:382:13176  \"contract YieldFarm is Ownable {...\" */ 0x24)\n                }\n                update_storage_value_offsett_address_to_address(slot, and(mload(memPtr), _2))\n                sstore(add(slot, 1), mload(_3))\n                sstore(add(slot, 2), mload(_4))\n                sstore(add(slot, 3), mload(_5))\n                sstore(add(slot, 4), mload(_6))\n                /// @src 11:4650:4905  \"poolInfo.push(...\"\n                fun_updateStakingPool()\n            }\n            /// @src 11:382:13176  \"contract YieldFarm is Ownable {...\"\n            function panic_error_0x41()\n            {\n                mstore(0, shl(224, 0x4e487b71))\n                mstore(4, 0x41)\n                revert(0, 0x24)\n            }\n            function finalize_allocation_6943(memPtr)\n            {\n                let newFreePtr := add(memPtr, 160)\n                if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n                mstore(64, newFreePtr)\n            }\n            function finalize_allocation_11296(memPtr)\n            {\n                let newFreePtr := add(memPtr, 64)\n                if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n                mstore(64, newFreePtr)\n            }\n            function finalize_allocation(memPtr, size)\n            {\n                let newFreePtr := add(memPtr, and(add(size, 31), not(31)))\n                if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n                mstore(64, newFreePtr)\n            }\n            function panic_error_0x11()\n            {\n                mstore(0, shl(224, 0x4e487b71))\n                mstore(4, 0x11)\n                revert(0, 0x24)\n            }\n            function checked_add_uint256(x, y) -> sum\n            {\n                if gt(x, not(y)) { panic_error_0x11() }\n                sum := add(x, y)\n            }\n            /// @ast-id 31 @src 0:1063:1125  \"modifier onlyOwner() {...\"\n            function modifier_onlyOwner_2181(var_poolId, var__allocPoint, var_withUpdate)\n            {\n                fun_checkOwner()\n                /// @src 11:5147:5206  \"if (_withUpdate) {...\"\n                if var_withUpdate { fun_massUpdatePools() }\n                /// @src 11:5240:5257  \"poolInfo[_poolId]\"\n                let _1, _2 := storage_array_index_access_struct_PoolInfo__dyn(var_poolId)\n                /// @src 11:382:13176  \"contract YieldFarm is Ownable {...\"\n                let _3 := sload(/** @src 11:5240:5268  \"poolInfo[_poolId].allocPoint\" */ add(_1, 1))\n                /// @src 11:5278:5295  \"poolInfo[_poolId]\"\n                let _4, _5 := storage_array_index_access_struct_PoolInfo__dyn(var_poolId)\n                /// @src 11:382:13176  \"contract YieldFarm is Ownable {...\"\n                sstore(/** @src 11:5278:5306  \"poolInfo[_poolId].allocPoint\" */ add(_4, /** @src 11:5240:5268  \"poolInfo[_poolId].allocPoint\" */ 1), /** @src 11:382:13176  \"contract YieldFarm is Ownable {...\" */ var__allocPoint)\n                /// @src 11:5330:5523  \"if (prevAllocPoint != _allocPoint) {...\"\n                if /** @src 11:5334:5363  \"prevAllocPoint != _allocPoint\" */ iszero(eq(_3, var__allocPoint))\n                /// @src 11:5330:5523  \"if (prevAllocPoint != _allocPoint) {...\"\n                {\n                    /// @src 11:382:13176  \"contract YieldFarm is Ownable {...\"\n                    let _6 := sload(/** @src 11:5397:5412  \"totalAllocPoint\" */ 0x07)\n                    /// @src 11:382:13176  \"contract YieldFarm is Ownable {...\"\n                    if lt(_6, _3) { panic_error_0x11() }\n                    sstore(/** @src 11:5397:5412  \"totalAllocPoint\" */ 0x07, /** @src 8:2839:2844  \"a + b\" */ checked_add_uint256(/** @src 11:382:13176  \"contract YieldFarm is Ownable {...\" */ sub(_6, _3), /** @src 8:2839:2844  \"a + b\" */ var__allocPoint))\n                    /// @src 11:5379:5479  \"totalAllocPoint = totalAllocPoint.sub(prevAllocPoint).add(...\"\n                    fun_updateStakingPool()\n                }\n            }\n            /// @src 11:382:13176  \"contract YieldFarm is Ownable {...\"\n            function checked_sub_uint256(x, y) -> diff\n            {\n                if lt(x, y) { panic_error_0x11() }\n                diff := sub(x, y)\n            }\n            function increment_uint256(value) -> ret\n            {\n                if eq(value, not(0)) { panic_error_0x11() }\n                ret := add(value, 1)\n            }\n            /// @ast-id 2289 @src 11:5636:6165  \"function updateStakingPool() internal {...\"\n            function fun_updateStakingPool()\n            {\n                /// @src 11:5701:5716  \"poolInfo.length\"\n                let expr := /** @src 11:382:13176  \"contract YieldFarm is Ownable {...\" */ sload(/** @src 11:5701:5709  \"poolInfo\" */ 0x05)\n                /// @src 11:5726:5744  \"uint256 points = 0\"\n                let var_points := /** @src 11:5743:5744  \"0\" */ 0x00\n                /// @src 11:5787:5805  \"uint256 poolId = 1\"\n                let var_poolId := /** @src 11:5804:5805  \"1\" */ 0x01\n                /// @src 11:5782:5907  \"for (uint256 poolId = 1; poolId < length; ++poolId) {...\"\n                for { }\n                /** @src 11:5807:5822  \"poolId < length\" */ lt(var_poolId, expr)\n                /// @src 11:5787:5805  \"uint256 poolId = 1\"\n                {\n                    /// @src 11:5824:5832  \"++poolId\"\n                    var_poolId := increment_uint256(var_poolId)\n                }\n                {\n                    /// @src 11:5868:5884  \"poolInfo[poolId]\"\n                    let _1, _2 := storage_array_index_access_struct_PoolInfo__dyn(var_poolId)\n                    /// @src 11:5848:5896  \"points = points.add(poolInfo[poolId].allocPoint)\"\n                    var_points := /** @src 8:2839:2844  \"a + b\" */ checked_add_uint256(var_points, /** @src 11:382:13176  \"contract YieldFarm is Ownable {...\" */ sload(/** @src 11:5868:5895  \"poolInfo[poolId].allocPoint\" */ add(_1, /** @src 11:5804:5805  \"1\" */ 0x01)))\n                }\n                /// @src 11:5916:6159  \"if (points != 0) {...\"\n                if /** @src 11:5920:5931  \"points != 0\" */ iszero(iszero(var_points))\n                /// @src 11:5916:6159  \"if (points != 0) {...\"\n                {\n                    /// @src 11:382:13176  \"contract YieldFarm is Ownable {...\"\n                    let r := div(var_points, /** @src 11:5967:5968  \"3\" */ 0x03)\n                    /// @src 11:382:13176  \"contract YieldFarm is Ownable {...\"\n                    let _3 := sload(/** @src 11:6018:6033  \"totalAllocPoint\" */ 0x07)\n                    /// @src 11:6038:6049  \"poolInfo[0]\"\n                    let _4, _5 := storage_array_index_access_struct_PoolInfo_storage_dyn()\n                    /// @src 11:382:13176  \"contract YieldFarm is Ownable {...\"\n                    let _6 := sload(/** @src 11:6038:6060  \"poolInfo[0].allocPoint\" */ add(_4, /** @src 11:5804:5805  \"1\" */ 0x01))\n                    /// @src 11:382:13176  \"contract YieldFarm is Ownable {...\"\n                    if lt(_3, _6) { panic_error_0x11() }\n                    sstore(/** @src 11:6018:6033  \"totalAllocPoint\" */ 0x07, /** @src 8:2839:2844  \"a + b\" */ checked_add_uint256(/** @src 11:382:13176  \"contract YieldFarm is Ownable {...\" */ sub(_3, _6), /** @src 8:2839:2844  \"a + b\" */ r))\n                    /// @src 11:6117:6128  \"poolInfo[0]\"\n                    let _7, _8 := storage_array_index_access_struct_PoolInfo_storage_dyn()\n                    /// @src 11:382:13176  \"contract YieldFarm is Ownable {...\"\n                    sstore(/** @src 11:6117:6139  \"poolInfo[0].allocPoint\" */ add(_7, /** @src 11:5804:5805  \"1\" */ 0x01), /** @src 11:382:13176  \"contract YieldFarm is Ownable {...\" */ r)\n                }\n            }\n            function checked_div_uint256_6962(x) -> r\n            {\n                r := div(x, /** @src 11:7315:7319  \"1e18\" */ 0x0de0b6b3a7640000)\n            }\n            /// @src 11:382:13176  \"contract YieldFarm is Ownable {...\"\n            function checked_div_uint256(x, y) -> r\n            {\n                if iszero(y)\n                {\n                    mstore(0, shl(224, 0x4e487b71))\n                    mstore(4, 0x12)\n                    revert(0, 0x24)\n                }\n                r := div(x, y)\n            }\n            /// @ast-id 2307 @src 11:6238:6401  \"function getMultiplier(...\"\n            function fun_getMultiplier(var_from, var__to) -> var\n            {\n                /// @src 11:382:13176  \"contract YieldFarm is Ownable {...\"\n                if lt(var__to, var_from) { panic_error_0x11() }\n                /// @src 11:6351:6394  \"return _to.sub(_from).mul(BONUS_MULTIPLIER)\"\n                var := /** @src 8:3549:3554  \"a * b\" */ checked_mul_uint256(/** @src 11:382:13176  \"contract YieldFarm is Ownable {...\" */ sub(var__to, var_from), sload(/** @src 11:6377:6393  \"BONUS_MULTIPLIER\" */ 0x04))\n            }\n            /// @src 11:382:13176  \"contract YieldFarm is Ownable {...\"\n            function checked_mul_uint256_6961(x) -> product\n            {\n                /// @src 11:7218:7222  \"1e18\"\n                let _1 := 0x0de0b6b3a7640000\n                /// @src 11:382:13176  \"contract YieldFarm is Ownable {...\"\n                if and(iszero(iszero(x)), gt(/** @src 11:7218:7222  \"1e18\" */ _1, /** @src 11:382:13176  \"contract YieldFarm is Ownable {...\" */ div(not(0), x))) { panic_error_0x11() }\n                product := mul(x, /** @src 11:7218:7222  \"1e18\" */ _1)\n            }\n            /// @src 11:382:13176  \"contract YieldFarm is Ownable {...\"\n            function checked_mul_uint256(x, y) -> product\n            {\n                if and(iszero(iszero(x)), gt(y, div(not(0), x))) { panic_error_0x11() }\n                product := mul(x, y)\n            }\n            function abi_decode_uint256_fromMemory(headStart, dataEnd) -> value0\n            {\n                if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n                value0 := mload(headStart)\n            }\n            function revert_forward()\n            {\n                let pos := mload(64)\n                returndatacopy(pos, 0, returndatasize())\n                revert(pos, returndatasize())\n            }\n            /// @ast-id 2409 @src 11:6440:7348  \"function pendingSoba(...\"\n            function fun_pendingSoba(var_poolId, var_user) -> var\n            {\n                /// @src 11:6581:6598  \"poolInfo[_poolId]\"\n                let _1, _2 := storage_array_index_access_struct_PoolInfo__dyn(var_poolId)\n                /// @src 11:6632:6656  \"userInfo[_poolId][_user]\"\n                let _3 := mapping_index_access_mapping_address_struct_UserInfo_storage_of_address(/** @src 11:6632:6649  \"userInfo[_poolId]\" */ mapping_index_access_mapping_uint256_mapping_address_struct_UserInfo_storage__of_uint256(var_poolId), /** @src 11:6632:6656  \"userInfo[_poolId][_user]\" */ var_user)\n                /// @src 11:6667:6713  \"uint256 accSobaPerShare = pool.accSobaPerShare\"\n                let var_accSobaPerShare := /** @src 11:382:13176  \"contract YieldFarm is Ownable {...\" */ sload(/** @src 11:6693:6713  \"pool.accSobaPerShare\" */ add(_1, 3))\n                /// @src 11:6742:6764  \"pool.lpToken.balanceOf\"\n                let expr_2341_address := extract_from_storage_value_offsett_contract_IERC20(/** @src 11:382:13176  \"contract YieldFarm is Ownable {...\" */ extract_from_storage_value_offsett_contract_IERC20(sload(/** @src 11:6742:6754  \"pool.lpToken\" */ _1)))\n                /// @src 11:6742:6779  \"pool.lpToken.balanceOf(address(this))\"\n                if iszero(extcodesize(expr_2341_address))\n                {\n                    /// @src 11:382:13176  \"contract YieldFarm is Ownable {...\"\n                    revert(/** @src -1:-1:-1 */ 0, 0)\n                }\n                /// @src 11:6742:6779  \"pool.lpToken.balanceOf(address(this))\"\n                let _4 := /** @src 11:382:13176  \"contract YieldFarm is Ownable {...\" */ mload(64)\n                /// @src 11:6742:6779  \"pool.lpToken.balanceOf(address(this))\"\n                mstore(_4, /** @src 11:382:13176  \"contract YieldFarm is Ownable {...\" */ shl(224, 0x70a08231))\n                /// @src 11:6742:6779  \"pool.lpToken.balanceOf(address(this))\"\n                let _5 := staticcall(gas(), expr_2341_address, _4, sub(abi_encode_address(add(_4, 4), /** @src 11:6773:6777  \"this\" */ address()), /** @src 11:6742:6779  \"pool.lpToken.balanceOf(address(this))\" */ _4), _4, 32)\n                if iszero(_5) { revert_forward() }\n                let expr := /** @src -1:-1:-1 */ 0\n                /// @src 11:6742:6779  \"pool.lpToken.balanceOf(address(this))\"\n                if _5\n                {\n                    finalize_allocation(_4, returndatasize())\n                    expr := abi_decode_uint256_fromMemory(_4, add(_4, returndatasize()))\n                }\n                /// @src 11:382:13176  \"contract YieldFarm is Ownable {...\"\n                let _6 := sload(/** @src 11:6808:6828  \"pool.lastRewardBlock\" */ add(_1, 2))\n                /// @src 11:6793:6845  \"block.number > pool.lastRewardBlock && lpSupply != 0\"\n                let expr_1 := /** @src 11:6793:6828  \"block.number > pool.lastRewardBlock\" */ gt(/** @src 11:6793:6805  \"block.number\" */ number(), /** @src 11:6793:6828  \"block.number > pool.lastRewardBlock\" */ _6)\n                /// @src 11:6793:6845  \"block.number > pool.lastRewardBlock && lpSupply != 0\"\n                if expr_1\n                {\n                    expr_1 := /** @src 11:6832:6845  \"lpSupply != 0\" */ iszero(iszero(expr))\n                }\n                /// @src 11:6789:7262  \"if (block.number > pool.lastRewardBlock && lpSupply != 0) {...\"\n                if expr_1\n                {\n                    /// @src 11:6882:6977  \"getMultiplier(...\"\n                    let expr_2 := fun_getMultiplier(/** @src 11:382:13176  \"contract YieldFarm is Ownable {...\" */ _6, /** @src 11:6793:6805  \"block.number\" */ number())\n                    /// @src 8:3542:3554  \"return a * b\"\n                    let var_1 := /** @src 8:3549:3554  \"a * b\" */ checked_mul_uint256(expr_2, /** @src 11:382:13176  \"contract YieldFarm is Ownable {...\" */ sload(/** @src 11:6693:6713  \"pool.accSobaPerShare\" */ 3))\n                    /// @src 8:3542:3554  \"return a * b\"\n                    let var_2 := /** @src 8:3549:3554  \"a * b\" */ checked_mul_uint256(var_1, /** @src 11:382:13176  \"contract YieldFarm is Ownable {...\" */ sload(/** @src 11:7079:7094  \"pool.allocPoint\" */ add(_1, 1)))\n                    /// @src 11:7148:7251  \"accSobaPerShare = accSobaPerShare.add(...\"\n                    var_accSobaPerShare := /** @src 8:2839:2844  \"a + b\" */ checked_add_uint256(var_accSobaPerShare, /** @src 8:3934:3939  \"a / b\" */ checked_div_uint256(/** @src 8:3549:3554  \"a * b\" */ checked_mul_uint256_6961(/** @src 8:3934:3939  \"a / b\" */ checked_div_uint256(var_2, /** @src 11:382:13176  \"contract YieldFarm is Ownable {...\" */ sload(/** @src 11:7117:7132  \"totalAllocPoint\" */ 0x07))), /** @src 8:3934:3939  \"a / b\" */ expr))\n                }\n                /// @src 11:7278:7320  \"user.amount.mul(accSobaPerShare).div(1e18)\"\n                let expr_3 := /** @src 8:3934:3939  \"a / b\" */ checked_div_uint256_6962(/** @src 8:3549:3554  \"a * b\" */ checked_mul_uint256(/** @src 11:382:13176  \"contract YieldFarm is Ownable {...\" */ sload(/** @src 11:7278:7289  \"user.amount\" */ _3), /** @src 8:3549:3554  \"a * b\" */ var_accSobaPerShare))\n                /// @src 11:7271:7341  \"return user.amount.mul(accSobaPerShare).div(1e18).sub(user.rewardDebt)\"\n                var := /** @src 8:3206:3211  \"a - b\" */ checked_sub_uint256(expr_3, /** @src 11:382:13176  \"contract YieldFarm is Ownable {...\" */ sload(/** @src 11:7325:7340  \"user.rewardDebt\" */ add(_3, 1)))\n            }\n            /// @ast-id 2434 @src 11:7399:7586  \"function massUpdatePools() public {...\"\n            function fun_massUpdatePools()\n            {\n                /// @src 11:7460:7475  \"poolInfo.length\"\n                let expr := /** @src 11:382:13176  \"contract YieldFarm is Ownable {...\" */ sload(/** @src 11:7460:7468  \"poolInfo\" */ 0x05)\n                /// @src 11:7490:7508  \"uint256 poolId = 0\"\n                let var_poolId := /** @src 11:7507:7508  \"0\" */ 0x00\n                /// @src 11:7485:7580  \"for (uint256 poolId = 0; poolId < length; ++poolId) {...\"\n                for { }\n                /** @src 11:7510:7525  \"poolId < length\" */ lt(var_poolId, expr)\n                /// @src 11:7490:7508  \"uint256 poolId = 0\"\n                {\n                    /// @src 11:7527:7535  \"++poolId\"\n                    var_poolId := increment_uint256(var_poolId)\n                }\n                {\n                    /// @src 11:7562:7568  \"poolId\"\n                    fun_updatePool(var_poolId)\n                }\n            }\n            /// @src 11:382:13176  \"contract YieldFarm is Ownable {...\"\n            function abi_encode_address_uint256(headStart, value0, value1) -> tail\n            {\n                tail := add(headStart, 64)\n                mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n                mstore(add(headStart, 32), value1)\n            }\n            /// @ast-id 2545 @src 11:7641:8579  \"function updatePool(uint256 _poolId) public {...\"\n            function fun_updatePool_6978()\n            {\n                /// @src 11:7719:7736  \"poolInfo[_poolId]\"\n                let _1, _2 := storage_array_index_access_struct_PoolInfo_storage_dyn()\n                /// @src 11:7807:7827  \"pool.lastRewardBlock\"\n                let _3 := add(_1, 2)\n                /// @src 11:7787:7860  \"if (block.number <= pool.lastRewardBlock) {...\"\n                if /** @src 11:7791:7827  \"block.number <= pool.lastRewardBlock\" */ iszero(gt(/** @src 11:7791:7803  \"block.number\" */ number(), /** @src 11:382:13176  \"contract YieldFarm is Ownable {...\" */ sload(/** @src 11:7807:7827  \"pool.lastRewardBlock\" */ _3)))\n                /// @src 11:7787:7860  \"if (block.number <= pool.lastRewardBlock) {...\"\n                {\n                    /// @src 11:7843:7850  \"return;\"\n                    leave\n                }\n                /// @src 11:7889:7911  \"pool.lpToken.balanceOf\"\n                let expr_address := extract_from_storage_value_offsett_contract_IERC20(/** @src 11:382:13176  \"contract YieldFarm is Ownable {...\" */ extract_from_storage_value_offsett_contract_IERC20(sload(/** @src 11:7889:7901  \"pool.lpToken\" */ _1)))\n                /// @src 11:7889:7926  \"pool.lpToken.balanceOf(address(this))\"\n                if iszero(extcodesize(expr_address))\n                {\n                    /// @src 11:382:13176  \"contract YieldFarm is Ownable {...\"\n                    revert(/** @src 11:10612:10613  \"0\" */ 0x00, 0x00)\n                }\n                /// @src 11:7889:7926  \"pool.lpToken.balanceOf(address(this))\"\n                let _4 := /** @src 11:382:13176  \"contract YieldFarm is Ownable {...\" */ mload(64)\n                /// @src 11:7889:7926  \"pool.lpToken.balanceOf(address(this))\"\n                mstore(_4, /** @src 11:382:13176  \"contract YieldFarm is Ownable {...\" */ shl(224, 0x70a08231))\n                /// @src 11:7889:7926  \"pool.lpToken.balanceOf(address(this))\"\n                let _5 := staticcall(gas(), expr_address, _4, sub(abi_encode_address(add(_4, 4), /** @src 11:7920:7924  \"this\" */ address()), /** @src 11:7889:7926  \"pool.lpToken.balanceOf(address(this))\" */ _4), _4, 32)\n                if iszero(_5) { revert_forward() }\n                let expr := /** @src 11:10612:10613  \"0\" */ 0x00\n                /// @src 11:7889:7926  \"pool.lpToken.balanceOf(address(this))\"\n                if _5\n                {\n                    finalize_allocation(_4, returndatasize())\n                    expr := abi_decode_uint256_fromMemory(_4, add(_4, returndatasize()))\n                }\n                /// @src 11:7936:8035  \"if (lpSupply == 0) {...\"\n                if /** @src 11:7940:7953  \"lpSupply == 0\" */ iszero(expr)\n                /// @src 11:7936:8035  \"if (lpSupply == 0) {...\"\n                {\n                    /// @src 11:382:13176  \"contract YieldFarm is Ownable {...\"\n                    sstore(_3, /** @src 11:7791:7803  \"block.number\" */ number())\n                    /// @src 11:8018:8025  \"return;\"\n                    leave\n                }\n                /// @src 11:8093:8142  \"getMultiplier(pool.lastRewardBlock, block.number)\"\n                let expr_1 := fun_getMultiplier(/** @src 11:382:13176  \"contract YieldFarm is Ownable {...\" */ sload(/** @src 11:8107:8127  \"pool.lastRewardBlock\" */ _3), /** @src 11:7791:7803  \"block.number\" */ number())\n                /// @src 8:3542:3554  \"return a * b\"\n                let var := /** @src 8:3549:3554  \"a * b\" */ checked_mul_uint256(expr_1, /** @src 11:382:13176  \"contract YieldFarm is Ownable {...\" */ sload(/** @src 11:8202:8214  \"sobaPerBlock\" */ 0x03))\n                /// @src 8:3542:3554  \"return a * b\"\n                let var_1 := /** @src 8:3549:3554  \"a * b\" */ checked_mul_uint256(var, /** @src 11:382:13176  \"contract YieldFarm is Ownable {...\" */ sload(/** @src 11:8233:8248  \"pool.allocPoint\" */ add(_1, 1)))\n                /// @src 8:3927:3939  \"return a / b\"\n                let var_2 := /** @src 8:3934:3939  \"a / b\" */ checked_div_uint256(var_1, /** @src 11:382:13176  \"contract YieldFarm is Ownable {...\" */ sload(/** @src 11:8267:8282  \"totalAllocPoint\" */ 0x07))\n                /// @src 11:8294:8305  \"sobaja.mint\"\n                let expr_address_1 := extract_from_storage_value_offsett_contract_IERC20(/** @src 11:382:13176  \"contract YieldFarm is Ownable {...\" */ extract_from_storage_value_offsett_contract_IERC20(sload(/** @src 11:8233:8248  \"pool.allocPoint\" */ 1)))\n                /// @src 11:8306:8316  \"devAddress\"\n                let _6 := /** @src 11:382:13176  \"contract YieldFarm is Ownable {...\" */ extract_from_storage_value_offsett_contract_IERC20(sload(/** @src 11:7807:7827  \"pool.lastRewardBlock\" */ 2))\n                /// @src 11:8294:8337  \"sobaja.mint(devAddress, sobaReward.div(10))\"\n                if iszero(extcodesize(expr_address_1))\n                {\n                    /// @src 11:382:13176  \"contract YieldFarm is Ownable {...\"\n                    revert(/** @src 11:10612:10613  \"0\" */ 0x00, 0x00)\n                }\n                /// @src 11:8294:8337  \"sobaja.mint(devAddress, sobaReward.div(10))\"\n                let _7 := /** @src 11:382:13176  \"contract YieldFarm is Ownable {...\" */ mload(64)\n                let _8 := shl(224, 0x40c10f19)\n                /// @src 11:8294:8337  \"sobaja.mint(devAddress, sobaReward.div(10))\"\n                mstore(_7, /** @src 11:382:13176  \"contract YieldFarm is Ownable {...\" */ _8)\n                /// @src 11:8294:8337  \"sobaja.mint(devAddress, sobaReward.div(10))\"\n                let _9 := call(gas(), expr_address_1, /** @src 11:10612:10613  \"0\" */ 0x00, /** @src 11:8294:8337  \"sobaja.mint(devAddress, sobaReward.div(10))\" */ _7, sub(abi_encode_address_uint256(add(_7, /** @src 11:7889:7926  \"pool.lpToken.balanceOf(address(this))\" */ 4), /** @src 11:8294:8337  \"sobaja.mint(devAddress, sobaReward.div(10))\" */ _6, /** @src 11:382:13176  \"contract YieldFarm is Ownable {...\" */ div(/** @src 11:8318:8336  \"sobaReward.div(10)\" */ var_2, /** @src 11:8333:8335  \"10\" */ 0x0a)), /** @src 11:8294:8337  \"sobaja.mint(devAddress, sobaReward.div(10))\" */ _7), _7, /** @src 11:10612:10613  \"0\" */ 0x00)\n                /// @src 11:8294:8337  \"sobaja.mint(devAddress, sobaReward.div(10))\"\n                if iszero(_9) { revert_forward() }\n                if _9\n                {\n                    finalize_allocation(_7, returndatasize())\n                    abi_decode(_7, add(_7, returndatasize()))\n                }\n                /// @src 11:8374:8385  \"sobaja.mint\"\n                let expr_address_2 := extract_from_storage_value_offsett_contract_IERC20(/** @src 11:382:13176  \"contract YieldFarm is Ownable {...\" */ extract_from_storage_value_offsett_contract_IERC20(sload(/** @src 11:8233:8248  \"pool.allocPoint\" */ 1)))\n                /// @src 11:8374:8412  \"sobaja.mint(address(this), sobaReward)\"\n                if iszero(extcodesize(expr_address_2))\n                {\n                    /// @src 11:382:13176  \"contract YieldFarm is Ownable {...\"\n                    revert(/** @src 11:10612:10613  \"0\" */ 0x00, 0x00)\n                }\n                /// @src 11:8374:8412  \"sobaja.mint(address(this), sobaReward)\"\n                let _10 := /** @src 11:382:13176  \"contract YieldFarm is Ownable {...\" */ mload(64)\n                /// @src 11:8374:8412  \"sobaja.mint(address(this), sobaReward)\"\n                mstore(_10, /** @src 11:382:13176  \"contract YieldFarm is Ownable {...\" */ _8)\n                /// @src 11:8374:8412  \"sobaja.mint(address(this), sobaReward)\"\n                let _11 := call(gas(), expr_address_2, /** @src 11:10612:10613  \"0\" */ 0x00, /** @src 11:8374:8412  \"sobaja.mint(address(this), sobaReward)\" */ _10, sub(abi_encode_address_uint256(add(_10, /** @src 11:7889:7926  \"pool.lpToken.balanceOf(address(this))\" */ 4), /** @src 11:7920:7924  \"this\" */ address(), /** @src 11:8374:8412  \"sobaja.mint(address(this), sobaReward)\" */ var_2), _10), _10, /** @src 11:10612:10613  \"0\" */ 0x00)\n                /// @src 11:8374:8412  \"sobaja.mint(address(this), sobaReward)\"\n                if iszero(_11) { revert_forward() }\n                if _11\n                {\n                    finalize_allocation(_10, returndatasize())\n                    abi_decode(_10, add(_10, returndatasize()))\n                }\n                /// @src 11:8445:8465  \"pool.accSobaPerShare\"\n                let _12 := add(_1, /** @src 11:8202:8214  \"sobaPerBlock\" */ 0x03)\n                /// @src 11:382:13176  \"contract YieldFarm is Ownable {...\"\n                let _13 := sload(/** @src 11:8445:8465  \"pool.accSobaPerShare\" */ _12)\n                /// @src 11:382:13176  \"contract YieldFarm is Ownable {...\"\n                sstore(_12, /** @src 8:2839:2844  \"a + b\" */ checked_add_uint256(_13, /** @src 8:3934:3939  \"a / b\" */ checked_div_uint256(/** @src 8:3549:3554  \"a * b\" */ checked_mul_uint256_6961(/** @src 11:8483:8503  \"sobaReward.mul(1e18)\" */ var_2), /** @src 8:3934:3939  \"a / b\" */ expr)))\n                /// @src 11:382:13176  \"contract YieldFarm is Ownable {...\"\n                sstore(_3, /** @src 11:7791:7803  \"block.number\" */ number())\n            }\n            /// @ast-id 2545 @src 11:7641:8579  \"function updatePool(uint256 _poolId) public {...\"\n            function fun_updatePool(var_poolId)\n            {\n                /// @src 11:7719:7736  \"poolInfo[_poolId]\"\n                let _1, _2 := storage_array_index_access_struct_PoolInfo__dyn(var_poolId)\n                /// @src 11:7807:7827  \"pool.lastRewardBlock\"\n                let _3 := add(_1, 2)\n                /// @src 11:7787:7860  \"if (block.number <= pool.lastRewardBlock) {...\"\n                if /** @src 11:7791:7827  \"block.number <= pool.lastRewardBlock\" */ iszero(gt(/** @src 11:7791:7803  \"block.number\" */ number(), /** @src 11:382:13176  \"contract YieldFarm is Ownable {...\" */ sload(/** @src 11:7807:7827  \"pool.lastRewardBlock\" */ _3)))\n                /// @src 11:7787:7860  \"if (block.number <= pool.lastRewardBlock) {...\"\n                {\n                    /// @src 11:7843:7850  \"return;\"\n                    leave\n                }\n                /// @src 11:7889:7911  \"pool.lpToken.balanceOf\"\n                let expr_address := extract_from_storage_value_offsett_contract_IERC20(/** @src 11:382:13176  \"contract YieldFarm is Ownable {...\" */ extract_from_storage_value_offsett_contract_IERC20(sload(/** @src 11:7889:7901  \"pool.lpToken\" */ _1)))\n                /// @src 11:7889:7926  \"pool.lpToken.balanceOf(address(this))\"\n                if iszero(extcodesize(expr_address))\n                {\n                    /// @src 11:382:13176  \"contract YieldFarm is Ownable {...\"\n                    revert(/** @src -1:-1:-1 */ 0, 0)\n                }\n                /// @src 11:7889:7926  \"pool.lpToken.balanceOf(address(this))\"\n                let _4 := /** @src 11:382:13176  \"contract YieldFarm is Ownable {...\" */ mload(64)\n                /// @src 11:7889:7926  \"pool.lpToken.balanceOf(address(this))\"\n                mstore(_4, /** @src 11:382:13176  \"contract YieldFarm is Ownable {...\" */ shl(224, 0x70a08231))\n                /// @src 11:7889:7926  \"pool.lpToken.balanceOf(address(this))\"\n                let _5 := staticcall(gas(), expr_address, _4, sub(abi_encode_address(add(_4, 4), /** @src 11:7920:7924  \"this\" */ address()), /** @src 11:7889:7926  \"pool.lpToken.balanceOf(address(this))\" */ _4), _4, 32)\n                if iszero(_5) { revert_forward() }\n                let expr := /** @src -1:-1:-1 */ 0\n                /// @src 11:7889:7926  \"pool.lpToken.balanceOf(address(this))\"\n                if _5\n                {\n                    finalize_allocation(_4, returndatasize())\n                    expr := abi_decode_uint256_fromMemory(_4, add(_4, returndatasize()))\n                }\n                /// @src 11:7936:8035  \"if (lpSupply == 0) {...\"\n                if /** @src 11:7940:7953  \"lpSupply == 0\" */ iszero(expr)\n                /// @src 11:7936:8035  \"if (lpSupply == 0) {...\"\n                {\n                    /// @src 11:382:13176  \"contract YieldFarm is Ownable {...\"\n                    sstore(_3, /** @src 11:7791:7803  \"block.number\" */ number())\n                    /// @src 11:8018:8025  \"return;\"\n                    leave\n                }\n                /// @src 11:8093:8142  \"getMultiplier(pool.lastRewardBlock, block.number)\"\n                let expr_1 := fun_getMultiplier(/** @src 11:382:13176  \"contract YieldFarm is Ownable {...\" */ sload(/** @src 11:8107:8127  \"pool.lastRewardBlock\" */ _3), /** @src 11:7791:7803  \"block.number\" */ number())\n                /// @src 8:3542:3554  \"return a * b\"\n                let var := /** @src 8:3549:3554  \"a * b\" */ checked_mul_uint256(expr_1, /** @src 11:382:13176  \"contract YieldFarm is Ownable {...\" */ sload(/** @src 11:8202:8214  \"sobaPerBlock\" */ 0x03))\n                /// @src 8:3542:3554  \"return a * b\"\n                let var_1 := /** @src 8:3549:3554  \"a * b\" */ checked_mul_uint256(var, /** @src 11:382:13176  \"contract YieldFarm is Ownable {...\" */ sload(/** @src 11:8233:8248  \"pool.allocPoint\" */ add(_1, 1)))\n                /// @src 8:3927:3939  \"return a / b\"\n                let var_2 := /** @src 8:3934:3939  \"a / b\" */ checked_div_uint256(var_1, /** @src 11:382:13176  \"contract YieldFarm is Ownable {...\" */ sload(/** @src 11:8267:8282  \"totalAllocPoint\" */ 0x07))\n                /// @src 11:8294:8305  \"sobaja.mint\"\n                let expr_2503_address := extract_from_storage_value_offsett_contract_IERC20(/** @src 11:382:13176  \"contract YieldFarm is Ownable {...\" */ extract_from_storage_value_offsett_contract_IERC20(sload(/** @src 11:8233:8248  \"pool.allocPoint\" */ 1)))\n                /// @src 11:8306:8316  \"devAddress\"\n                let _6 := /** @src 11:382:13176  \"contract YieldFarm is Ownable {...\" */ extract_from_storage_value_offsett_contract_IERC20(sload(/** @src 11:7807:7827  \"pool.lastRewardBlock\" */ 2))\n                /// @src 11:8294:8337  \"sobaja.mint(devAddress, sobaReward.div(10))\"\n                if iszero(extcodesize(expr_2503_address))\n                {\n                    /// @src 11:382:13176  \"contract YieldFarm is Ownable {...\"\n                    revert(/** @src -1:-1:-1 */ 0, 0)\n                }\n                /// @src 11:8294:8337  \"sobaja.mint(devAddress, sobaReward.div(10))\"\n                let _7 := /** @src 11:382:13176  \"contract YieldFarm is Ownable {...\" */ mload(64)\n                let _8 := shl(224, 0x40c10f19)\n                /// @src 11:8294:8337  \"sobaja.mint(devAddress, sobaReward.div(10))\"\n                mstore(_7, /** @src 11:382:13176  \"contract YieldFarm is Ownable {...\" */ _8)\n                /// @src 11:8294:8337  \"sobaja.mint(devAddress, sobaReward.div(10))\"\n                let _9 := call(gas(), expr_2503_address, /** @src -1:-1:-1 */ 0, /** @src 11:8294:8337  \"sobaja.mint(devAddress, sobaReward.div(10))\" */ _7, sub(abi_encode_address_uint256(add(_7, /** @src 11:7889:7926  \"pool.lpToken.balanceOf(address(this))\" */ 4), /** @src 11:8294:8337  \"sobaja.mint(devAddress, sobaReward.div(10))\" */ _6, /** @src 11:382:13176  \"contract YieldFarm is Ownable {...\" */ div(/** @src 11:8318:8336  \"sobaReward.div(10)\" */ var_2, /** @src 11:8333:8335  \"10\" */ 0x0a)), /** @src 11:8294:8337  \"sobaja.mint(devAddress, sobaReward.div(10))\" */ _7), _7, /** @src -1:-1:-1 */ 0)\n                /// @src 11:8294:8337  \"sobaja.mint(devAddress, sobaReward.div(10))\"\n                if iszero(_9) { revert_forward() }\n                if _9\n                {\n                    finalize_allocation(_7, returndatasize())\n                    abi_decode(_7, add(_7, returndatasize()))\n                }\n                /// @src 11:8374:8385  \"sobaja.mint\"\n                let expr_2513_address := extract_from_storage_value_offsett_contract_IERC20(/** @src 11:382:13176  \"contract YieldFarm is Ownable {...\" */ extract_from_storage_value_offsett_contract_IERC20(sload(/** @src 11:8233:8248  \"pool.allocPoint\" */ 1)))\n                /// @src 11:8374:8412  \"sobaja.mint(address(this), sobaReward)\"\n                if iszero(extcodesize(expr_2513_address))\n                {\n                    /// @src 11:382:13176  \"contract YieldFarm is Ownable {...\"\n                    revert(/** @src -1:-1:-1 */ 0, 0)\n                }\n                /// @src 11:8374:8412  \"sobaja.mint(address(this), sobaReward)\"\n                let _10 := /** @src 11:382:13176  \"contract YieldFarm is Ownable {...\" */ mload(64)\n                /// @src 11:8374:8412  \"sobaja.mint(address(this), sobaReward)\"\n                mstore(_10, /** @src 11:382:13176  \"contract YieldFarm is Ownable {...\" */ _8)\n                /// @src 11:8374:8412  \"sobaja.mint(address(this), sobaReward)\"\n                let _11 := call(gas(), expr_2513_address, /** @src -1:-1:-1 */ 0, /** @src 11:8374:8412  \"sobaja.mint(address(this), sobaReward)\" */ _10, sub(abi_encode_address_uint256(add(_10, /** @src 11:7889:7926  \"pool.lpToken.balanceOf(address(this))\" */ 4), /** @src 11:7920:7924  \"this\" */ address(), /** @src 11:8374:8412  \"sobaja.mint(address(this), sobaReward)\" */ var_2), _10), _10, /** @src -1:-1:-1 */ 0)\n                /// @src 11:8374:8412  \"sobaja.mint(address(this), sobaReward)\"\n                if iszero(_11) { revert_forward() }\n                if _11\n                {\n                    finalize_allocation(_10, returndatasize())\n                    abi_decode(_10, add(_10, returndatasize()))\n                }\n                /// @src 11:8445:8465  \"pool.accSobaPerShare\"\n                let _12 := add(_1, /** @src 11:8202:8214  \"sobaPerBlock\" */ 0x03)\n                /// @src 11:382:13176  \"contract YieldFarm is Ownable {...\"\n                let _13 := sload(/** @src 11:8445:8465  \"pool.accSobaPerShare\" */ _12)\n                /// @src 11:382:13176  \"contract YieldFarm is Ownable {...\"\n                sstore(_12, /** @src 8:2839:2844  \"a + b\" */ checked_add_uint256(_13, /** @src 8:3934:3939  \"a / b\" */ checked_div_uint256(/** @src 8:3549:3554  \"a * b\" */ checked_mul_uint256_6961(/** @src 11:8483:8503  \"sobaReward.mul(1e18)\" */ var_2), /** @src 8:3934:3939  \"a / b\" */ expr)))\n                /// @src 11:382:13176  \"contract YieldFarm is Ownable {...\"\n                sstore(_3, /** @src 11:7791:7803  \"block.number\" */ number())\n            }\n            /// @src 11:382:13176  \"contract YieldFarm is Ownable {...\"\n            function require_helper_stringliteral_e0ef(condition)\n            {\n                if iszero(condition)\n                {\n                    let memPtr := mload(64)\n                    mstore(memPtr, shl(229, 4594637))\n                    mstore(add(memPtr, 4), 32)\n                    mstore(add(memPtr, 36), 15)\n                    mstore(add(memPtr, 68), \"Pool must exist\")\n                    revert(memPtr, 100)\n                }\n            }\n            /// @ast-id 2673 @src 11:8603:9659  \"function deposit(uint256 _poolId, uint256 _amount) public {...\"\n            function fun_deposit(var_poolId, var_amount)\n            {\n                /// @src 11:8671:8711  \"require(_poolId != 0, \\\"Pool must exist\\\")\"\n                require_helper_stringliteral_e0ef(/** @src 11:8679:8691  \"_poolId != 0\" */ iszero(iszero(var_poolId)))\n                /// @src 11:8746:8763  \"poolInfo[_poolId]\"\n                let _1, _2 := storage_array_index_access_struct_PoolInfo__dyn(var_poolId)\n                /// @src 11:8797:8814  \"userInfo[_poolId]\"\n                let _3 := mapping_index_access_mapping_uint256_mapping_address_struct_UserInfo_storage__of_uint256(var_poolId)\n                /// @src 11:8797:8826  \"userInfo[_poolId][msg.sender]\"\n                let _4 := mapping_index_access_mapping_address_struct_UserInfo_storage_of_address(_3, /** @src 11:8815:8825  \"msg.sender\" */ caller())\n                /// @src 11:8847:8854  \"_poolId\"\n                fun_updatePool(var_poolId)\n                /// @src 11:382:13176  \"contract YieldFarm is Ownable {...\"\n                let _5 := sload(/** @src 11:8950:8961  \"user.amount\" */ _4)\n                /// @src 11:8946:9246  \"if (user.amount > 0) {...\"\n                if /** @src 11:8950:8965  \"user.amount > 0\" */ iszero(iszero(_5))\n                /// @src 11:8946:9246  \"if (user.amount > 0) {...\"\n                {\n                    /// @src 11:8999:9097  \"user...\"\n                    let expr := /** @src 8:3934:3939  \"a / b\" */ checked_div_uint256_6962(/** @src 8:3549:3554  \"a * b\" */ checked_mul_uint256(_5, /** @src 11:382:13176  \"contract YieldFarm is Ownable {...\" */ sload(/** @src 11:9049:9069  \"pool.accSobaPerShare\" */ add(_1, 3))))\n                    /// @src 8:3199:3211  \"return a - b\"\n                    let var := /** @src 8:3206:3211  \"a - b\" */ checked_sub_uint256(expr, /** @src 11:382:13176  \"contract YieldFarm is Ownable {...\" */ sload(/** @src 11:9119:9134  \"user.rewardDebt\" */ add(_4, 1)))\n                    /// @src 11:9149:9236  \"if (pending > 0) {...\"\n                    if /** @src 11:9153:9164  \"pending > 0\" */ iszero(iszero(var))\n                    /// @src 11:9149:9236  \"if (pending > 0) {...\"\n                    {\n                        /// @src 11:9213:9220  \"pending\"\n                        fun_safeSobaTransfer(/** @src 11:8815:8825  \"msg.sender\" */ caller(), /** @src 11:9213:9220  \"pending\" */ var)\n                    }\n                }\n                /// @src 11:9255:9526  \"if (_amount > 0) {...\"\n                if /** @src 11:9259:9270  \"_amount > 0\" */ iszero(iszero(var_amount))\n                /// @src 11:9255:9526  \"if (_amount > 0) {...\"\n                {\n                    /// @src 11:9286:9298  \"pool.lpToken\"\n                    let _address := /** @src 11:382:13176  \"contract YieldFarm is Ownable {...\" */ extract_from_storage_value_offsett_contract_IERC20(sload(/** @src 11:9286:9298  \"pool.lpToken\" */ _1))\n                    /// @src 11:9401:9408  \"_amount\"\n                    fun_safeTransferFrom(_address, /** @src 11:8815:8825  \"msg.sender\" */ caller(), /** @src 11:9378:9382  \"this\" */ address(), /** @src 11:9401:9408  \"_amount\" */ var_amount)\n                    /// @src 11:382:13176  \"contract YieldFarm is Ownable {...\"\n                    sstore(_4, /** @src 8:2839:2844  \"a + b\" */ checked_add_uint256(/** @src 11:382:13176  \"contract YieldFarm is Ownable {...\" */ sload(/** @src 11:9450:9461  \"user.amount\" */ _4), /** @src 8:2839:2844  \"a + b\" */ var_amount))\n                    /// @src 11:9488:9504  \"pool.totalStaked\"\n                    let _6 := add(_1, 4)\n                    /// @src 11:382:13176  \"contract YieldFarm is Ownable {...\"\n                    sstore(_6, /** @src 11:9488:9515  \"pool.totalStaked += _amount\" */ checked_add_uint256(/** @src 11:382:13176  \"contract YieldFarm is Ownable {...\" */ sload(/** @src 11:9488:9515  \"pool.totalStaked += _amount\" */ _6), var_amount))\n                }\n                /// @src 11:382:13176  \"contract YieldFarm is Ownable {...\"\n                let _7 := sload(/** @src 11:9553:9564  \"user.amount\" */ _4)\n                /// @src 11:382:13176  \"contract YieldFarm is Ownable {...\"\n                sstore(/** @src 11:9535:9550  \"user.rewardDebt\" */ add(_4, 1), /** @src 8:3934:3939  \"a / b\" */ checked_div_uint256_6962(/** @src 8:3549:3554  \"a * b\" */ checked_mul_uint256(_7, /** @src 11:382:13176  \"contract YieldFarm is Ownable {...\" */ sload(/** @src 11:9569:9589  \"pool.accSobaPerShare\" */ add(_1, 3)))))\n                /// @src 11:9615:9652  \"Deposit(msg.sender, _poolId, _amount)\"\n                log4(/** @src 11:382:13176  \"contract YieldFarm is Ownable {...\" */ mload(64), /** @src 11:8690:8691  \"0\" */ 0x00, /** @src 11:9615:9652  \"Deposit(msg.sender, _poolId, _amount)\" */ 0x90890809c654f11d6e72a28fa60149770a0d11ec6c92319d6ceb2bb0a4ea1a15, /** @src 11:8815:8825  \"msg.sender\" */ caller(), /** @src 11:9615:9652  \"Deposit(msg.sender, _poolId, _amount)\" */ var_poolId, var_amount)\n            }\n            /// @ast-id 898 @src 5:1355:1558  \"function safeTransferFrom(IERC20 token, address from, address to, uint256 value) internal {...\"\n            function fun_safeTransferFrom(var_token_875_address, var_from, var_to, var_value)\n            {\n                /// @src 5:1482:1550  \"abi.encodeWithSelector(token.transferFrom.selector, from, to, value)\"\n                let expr_894_mpos := /** @src 11:382:13176  \"contract YieldFarm is Ownable {...\" */ mload(64)\n                /// @src 5:1482:1550  \"abi.encodeWithSelector(token.transferFrom.selector, from, to, value)\"\n                mstore(add(expr_894_mpos, 0x20), /** @src 11:382:13176  \"contract YieldFarm is Ownable {...\" */ shl(224, 0x23b872dd))\n                let _1 := sub(shl(160, 1), 1)\n                mstore(/** @src 5:1482:1550  \"abi.encodeWithSelector(token.transferFrom.selector, from, to, value)\" */ add(expr_894_mpos, 36), /** @src 11:382:13176  \"contract YieldFarm is Ownable {...\" */ and(var_from, _1))\n                mstore(add(/** @src 5:1482:1550  \"abi.encodeWithSelector(token.transferFrom.selector, from, to, value)\" */ expr_894_mpos, /** @src 11:382:13176  \"contract YieldFarm is Ownable {...\" */ 68), and(var_to, _1))\n                mstore(add(/** @src 5:1482:1550  \"abi.encodeWithSelector(token.transferFrom.selector, from, to, value)\" */ expr_894_mpos, /** @src 11:382:13176  \"contract YieldFarm is Ownable {...\" */ 100), var_value)\n                /// @src 5:1482:1550  \"abi.encodeWithSelector(token.transferFrom.selector, from, to, value)\"\n                mstore(expr_894_mpos, /** @src 11:382:13176  \"contract YieldFarm is Ownable {...\" */ 100)\n                /// @src 5:1482:1550  \"abi.encodeWithSelector(token.transferFrom.selector, from, to, value)\"\n                finalize_allocation_6943(expr_894_mpos)\n                fun_callOptionalReturn(var_token_875_address, expr_894_mpos)\n            }\n            /// @src 11:382:13176  \"contract YieldFarm is Ownable {...\"\n            function abi_decode_bool_fromMemory(headStart, dataEnd) -> value0\n            {\n                if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n                let value := mload(headStart)\n                validator_revert_bool(value)\n                value0 := value\n            }\n            function require_helper_stringliteral_e11a(condition)\n            {\n                if iszero(condition)\n                {\n                    let memPtr := mload(64)\n                    mstore(memPtr, shl(229, 4594637))\n                    mstore(add(memPtr, 4), 32)\n                    mstore(add(memPtr, 36), 42)\n                    mstore(add(memPtr, 68), \"SafeERC20: ERC20 operation did n\")\n                    mstore(add(memPtr, 100), \"ot succeed\")\n                    revert(memPtr, 132)\n                }\n            }\n            /// @ast-id 1165 @src 5:5173:5815  \"function _callOptionalReturn(IERC20 token, bytes memory data) private {...\"\n            function fun_callOptionalReturn(var_token_address, var_data_mpos)\n            {\n                /// @src 11:382:13176  \"contract YieldFarm is Ownable {...\"\n                let _1 := and(/** @src 5:5618:5632  \"address(token)\" */ var_token_address, /** @src 11:382:13176  \"contract YieldFarm is Ownable {...\" */ sub(shl(160, 1), 1))\n                let memPtr := mload(64)\n                finalize_allocation_11296(memPtr)\n                let _2 := 32\n                mstore(memPtr, _2)\n                mstore(add(memPtr, _2), \"SafeERC20: low-level call failed\")\n                /// @src 6:5487:5518  \"target.call{value: value}(data)\"\n                let expr_component := call(gas(), _1, /** @src -1:-1:-1 */ 0, /** @src 6:5487:5518  \"target.call{value: value}(data)\" */ add(var_data_mpos, /** @src 11:382:13176  \"contract YieldFarm is Ownable {...\" */ _2), /** @src 6:5487:5518  \"target.call{value: value}(data)\" */ mload(var_data_mpos), /** @src -1:-1:-1 */ 0, 0)\n                /// @src 6:5487:5518  \"target.call{value: value}(data)\"\n                let data := /** @src -1:-1:-1 */ 0\n                /// @src 11:382:13176  \"contract YieldFarm is Ownable {...\"\n                switch returndatasize()\n                case 0 { data := 96 }\n                default {\n                    let _3 := returndatasize()\n                    if gt(_3, 0xffffffffffffffff) { panic_error_0x41() }\n                    let memPtr_1 := mload(64)\n                    finalize_allocation(memPtr_1, add(and(add(_3, 31), not(31)), _2))\n                    mstore(memPtr_1, _3)\n                    data := memPtr_1\n                    returndatacopy(add(memPtr_1, _2), /** @src -1:-1:-1 */ 0, /** @src 11:382:13176  \"contract YieldFarm is Ownable {...\" */ returndatasize())\n                }\n                /// @src 6:5528:5604  \"return verifyCallResultFromTarget(target, success, returndata, errorMessage)\"\n                let var_mpos := /** @src 6:5535:5604  \"verifyCallResultFromTarget(target, success, returndata, errorMessage)\" */ fun_verifyCallResultFromTarget(_1, expr_component, /** @src 6:5487:5518  \"target.call{value: value}(data)\" */ data, /** @src 6:5535:5604  \"verifyCallResultFromTarget(target, success, returndata, errorMessage)\" */ memPtr)\n                /// @src 5:5705:5722  \"returndata.length\"\n                let expr := /** @src 11:382:13176  \"contract YieldFarm is Ownable {...\" */ mload(/** @src 5:5705:5722  \"returndata.length\" */ var_mpos)\n                /// @src 5:5705:5761  \"returndata.length == 0 || abi.decode(returndata, (bool))\"\n                let expr_1 := /** @src 5:5705:5727  \"returndata.length == 0\" */ iszero(expr)\n                /// @src 5:5705:5761  \"returndata.length == 0 || abi.decode(returndata, (bool))\"\n                if iszero(expr_1)\n                {\n                    expr_1 := /** @src 5:5731:5761  \"abi.decode(returndata, (bool))\" */ abi_decode_bool_fromMemory(add(var_mpos, /** @src 11:382:13176  \"contract YieldFarm is Ownable {...\" */ _2), /** @src 5:5731:5761  \"abi.decode(returndata, (bool))\" */ add(add(var_mpos, expr), /** @src 11:382:13176  \"contract YieldFarm is Ownable {...\" */ _2))\n                }\n                /// @src 5:5697:5808  \"require(returndata.length == 0 || abi.decode(returndata, (bool)), \\\"SafeERC20: ERC20 operation did not succeed\\\")\"\n                require_helper_stringliteral_e11a(expr_1)\n            }\n            /// @src 11:382:13176  \"contract YieldFarm is Ownable {...\"\n            function require_helper_stringliteral_cc2e(condition)\n            {\n                if iszero(condition)\n                {\n                    let memPtr := mload(64)\n                    mstore(memPtr, shl(229, 4594637))\n                    mstore(add(memPtr, 4), 32)\n                    mstore(add(memPtr, 36), 29)\n                    mstore(add(memPtr, 68), \"Address: call to non-contract\")\n                    revert(memPtr, 100)\n                }\n            }\n            /// @ast-id 1499 @src 6:7671:8299  \"function verifyCallResultFromTarget(...\"\n            function fun_verifyCallResultFromTarget(var_target, var_success, var_returndata_mpos, var_errorMessage_mpos) -> var_mpos\n            {\n                /// @src 6:7851:7863  \"bytes memory\"\n                var_mpos := /** @src 11:382:13176  \"contract YieldFarm is Ownable {...\" */ 96\n                /// @src 6:7875:8293  \"if (success) {...\"\n                switch var_success\n                case 0 {\n                    /// @src 6:8976:9355  \"if (returndata.length > 0) {...\"\n                    switch /** @src 6:8980:9001  \"returndata.length > 0\" */ iszero(iszero(/** @src 11:382:13176  \"contract YieldFarm is Ownable {...\" */ mload(/** @src 6:8980:8997  \"returndata.length\" */ var_returndata_mpos)))\n                    case /** @src 6:8976:9355  \"if (returndata.length > 0) {...\" */ 0 {\n                        /// @src 6:9324:9344  \"revert(errorMessage)\"\n                        let _1 := /** @src 11:382:13176  \"contract YieldFarm is Ownable {...\" */ mload(64)\n                        /// @src 6:9324:9344  \"revert(errorMessage)\"\n                        mstore(_1, /** @src 11:382:13176  \"contract YieldFarm is Ownable {...\" */ shl(229, 4594637))\n                        let _2 := 32\n                        mstore(/** @src 6:9324:9344  \"revert(errorMessage)\" */ add(_1, 4), /** @src 11:382:13176  \"contract YieldFarm is Ownable {...\" */ _2)\n                        let length := mload(var_errorMessage_mpos)\n                        mstore(add(/** @src 6:9324:9344  \"revert(errorMessage)\" */ _1, /** @src 11:382:13176  \"contract YieldFarm is Ownable {...\" */ 36), length)\n                        let i := /** @src 6:9000:9001  \"0\" */ 0x00\n                        /// @src 11:382:13176  \"contract YieldFarm is Ownable {...\"\n                        for { } lt(i, length) { i := add(i, _2) }\n                        {\n                            mstore(add(add(/** @src 6:9324:9344  \"revert(errorMessage)\" */ _1, /** @src 11:382:13176  \"contract YieldFarm is Ownable {...\" */ i), 68), mload(add(add(var_errorMessage_mpos, i), _2)))\n                        }\n                        if gt(i, length)\n                        {\n                            mstore(add(add(/** @src 6:9324:9344  \"revert(errorMessage)\" */ _1, /** @src 11:382:13176  \"contract YieldFarm is Ownable {...\" */ length), 68), /** @src 6:9000:9001  \"0\" */ 0x00)\n                        }\n                        /// @src 6:9324:9344  \"revert(errorMessage)\"\n                        revert(_1, add(sub(/** @src 11:382:13176  \"contract YieldFarm is Ownable {...\" */ add(/** @src 6:9324:9344  \"revert(errorMessage)\" */ _1, /** @src 11:382:13176  \"contract YieldFarm is Ownable {...\" */ and(add(length, 31), not(31))), /** @src 6:9324:9344  \"revert(errorMessage)\" */ _1), /** @src 11:382:13176  \"contract YieldFarm is Ownable {...\" */ 68))\n                    }\n                    default /// @src 6:8976:9355  \"if (returndata.length > 0) {...\"\n                    {\n                        /// @src 6:9152:9294  \"assembly {...\"\n                        revert(add(32, var_returndata_mpos), mload(var_returndata_mpos))\n                    }\n                }\n                default /// @src 6:7875:8293  \"if (success) {...\"\n                {\n                    /// @src 6:7902:8188  \"if (returndata.length == 0) {...\"\n                    if /** @src 6:7906:7928  \"returndata.length == 0\" */ iszero(/** @src 11:382:13176  \"contract YieldFarm is Ownable {...\" */ mload(/** @src 6:7906:7923  \"returndata.length\" */ var_returndata_mpos))\n                    /// @src 6:7902:8188  \"if (returndata.length == 0) {...\"\n                    {\n                        /// @src 6:8113:8173  \"require(isContract(target), \\\"Address: call to non-contract\\\")\"\n                        require_helper_stringliteral_cc2e(/** @src 6:1702:1725  \"account.code.length > 0\" */ iszero(iszero(/** @src 6:1702:1721  \"account.code.length\" */ extcodesize(/** @src 6:8121:8139  \"isContract(target)\" */ var_target))))\n                    }\n                    /// @src 6:8201:8218  \"return returndata\"\n                    var_mpos := var_returndata_mpos\n                    leave\n                }\n            }\n            /// @src 11:382:13176  \"contract YieldFarm is Ownable {...\"\n            function require_helper_stringliteral_320d(condition)\n            {\n                if iszero(condition)\n                {\n                    let memPtr := mload(64)\n                    mstore(memPtr, shl(229, 4594637))\n                    mstore(add(memPtr, 4), 32)\n                    mstore(add(memPtr, 36), 6)\n                    mstore(add(memPtr, 68), \"Exceed\")\n                    revert(memPtr, 100)\n                }\n            }\n            /// @ast-id 2799 @src 11:9665:10509  \"function withdraw(uint256 _poolId, uint256 _amount) public {...\"\n            function fun_withdraw(var_poolId, var_amount)\n            {\n                /// @src 11:9734:9774  \"require(_poolId != 0, \\\"Pool must exist\\\")\"\n                require_helper_stringliteral_e0ef(/** @src 11:9742:9754  \"_poolId != 0\" */ iszero(iszero(var_poolId)))\n                /// @src 11:9808:9825  \"poolInfo[_poolId]\"\n                let _1, _2 := storage_array_index_access_struct_PoolInfo__dyn(var_poolId)\n                /// @src 11:9859:9876  \"userInfo[_poolId]\"\n                let _3 := mapping_index_access_mapping_uint256_mapping_address_struct_UserInfo_storage__of_uint256(var_poolId)\n                /// @src 11:9859:9888  \"userInfo[_poolId][msg.sender]\"\n                let _4 := mapping_index_access_mapping_address_struct_UserInfo_storage_of_address(_3, /** @src 11:9877:9887  \"msg.sender\" */ caller())\n                /// @src 11:9898:9939  \"require(user.amount >= _amount, \\\"Exceed\\\")\"\n                require_helper_stringliteral_320d(/** @src 11:9906:9928  \"user.amount >= _amount\" */ iszero(lt(/** @src 11:382:13176  \"contract YieldFarm is Ownable {...\" */ sload(/** @src 11:9906:9917  \"user.amount\" */ _4), /** @src 11:9906:9928  \"user.amount >= _amount\" */ var_amount)))\n                /// @src 11:9961:9968  \"_poolId\"\n                fun_updatePool(var_poolId)\n                /// @src 11:382:13176  \"contract YieldFarm is Ownable {...\"\n                let _5 := sload(/** @src 11:9997:10008  \"user.amount\" */ _4)\n                /// @src 11:10013:10033  \"pool.accSobaPerShare\"\n                let _6 := add(_1, 3)\n                /// @src 11:9997:10044  \"user.amount.mul(pool.accSobaPerShare).div(1e18)\"\n                let expr := /** @src 8:3934:3939  \"a / b\" */ checked_div_uint256_6962(/** @src 8:3549:3554  \"a * b\" */ checked_mul_uint256(_5, /** @src 11:382:13176  \"contract YieldFarm is Ownable {...\" */ sload(/** @src 11:10013:10033  \"pool.accSobaPerShare\" */ _6)))\n                /// @src 11:10062:10077  \"user.rewardDebt\"\n                let _7 := add(_4, 1)\n                /// @src 8:3199:3211  \"return a - b\"\n                let var := /** @src 8:3206:3211  \"a - b\" */ checked_sub_uint256(expr, /** @src 11:382:13176  \"contract YieldFarm is Ownable {...\" */ sload(/** @src 11:10062:10077  \"user.rewardDebt\" */ _7))\n                /// @src 11:10097:10176  \"if (pending > 0) {...\"\n                if /** @src 11:10101:10112  \"pending > 0\" */ iszero(iszero(var))\n                /// @src 11:10097:10176  \"if (pending > 0) {...\"\n                {\n                    /// @src 11:10157:10164  \"pending\"\n                    fun_safeSobaTransfer(/** @src 11:9877:9887  \"msg.sender\" */ caller(), /** @src 11:10157:10164  \"pending\" */ var)\n                }\n                /// @src 11:10185:10375  \"if (_amount > 0) {...\"\n                if /** @src 11:10189:10200  \"_amount > 0\" */ iszero(iszero(var_amount))\n                /// @src 11:10185:10375  \"if (_amount > 0) {...\"\n                {\n                    /// @src 11:382:13176  \"contract YieldFarm is Ownable {...\"\n                    sstore(_4, /** @src 8:3206:3211  \"a - b\" */ checked_sub_uint256(/** @src 11:382:13176  \"contract YieldFarm is Ownable {...\" */ sload(/** @src 11:10230:10241  \"user.amount\" */ _4), /** @src 8:3206:3211  \"a - b\" */ var_amount))\n                    /// @src 11:10268:10284  \"pool.totalStaked\"\n                    let _8 := add(_1, 4)\n                    /// @src 11:382:13176  \"contract YieldFarm is Ownable {...\"\n                    sstore(_8, /** @src 11:10268:10295  \"pool.totalStaked -= _amount\" */ checked_sub_uint256(/** @src 11:382:13176  \"contract YieldFarm is Ownable {...\" */ sload(/** @src 11:10268:10295  \"pool.totalStaked -= _amount\" */ _8), var_amount))\n                    /// @src 11:10356:10363  \"_amount\"\n                    fun_safeTransfer(/** @src 11:382:13176  \"contract YieldFarm is Ownable {...\" */ extract_from_storage_value_offsett_contract_IERC20(sload(/** @src 11:10309:10321  \"pool.lpToken\" */ _1)), /** @src 11:9877:9887  \"msg.sender\" */ caller(), /** @src 11:10356:10363  \"_amount\" */ var_amount)\n                }\n                /// @src 11:382:13176  \"contract YieldFarm is Ownable {...\"\n                let _9 := sload(/** @src 11:10402:10413  \"user.amount\" */ _4)\n                /// @src 11:382:13176  \"contract YieldFarm is Ownable {...\"\n                sstore(_7, /** @src 8:3934:3939  \"a / b\" */ checked_div_uint256_6962(/** @src 8:3549:3554  \"a * b\" */ checked_mul_uint256(_9, /** @src 11:382:13176  \"contract YieldFarm is Ownable {...\" */ sload(/** @src 11:10418:10438  \"pool.accSobaPerShare\" */ _6))))\n                /// @src 11:10464:10502  \"Withdraw(msg.sender, _poolId, _amount)\"\n                let _10 := /** @src 11:382:13176  \"contract YieldFarm is Ownable {...\" */ mload(64)\n                /// @src 11:10464:10502  \"Withdraw(msg.sender, _poolId, _amount)\"\n                log3(_10, sub(abi_encode_uint256(_10, var_amount), _10), 0xf279e6a1f5e320cca91135676d9cb6e44ca8a08c0b88342bcdb1144f6511b568, /** @src 11:9877:9887  \"msg.sender\" */ caller(), /** @src 11:10464:10502  \"Withdraw(msg.sender, _poolId, _amount)\" */ var_poolId)\n            }\n            /// @ast-id 871 @src 5:941:1116  \"function safeTransfer(IERC20 token, address to, uint256 value) internal {...\"\n            function fun_safeTransfer(var_token_851_address, var_to, var_value)\n            {\n                /// @src 5:1050:1108  \"abi.encodeWithSelector(token.transfer.selector, to, value)\"\n                let expr_mpos := /** @src 11:382:13176  \"contract YieldFarm is Ownable {...\" */ mload(64)\n                /// @src 5:1050:1108  \"abi.encodeWithSelector(token.transfer.selector, to, value)\"\n                mstore(add(expr_mpos, 0x20), /** @src 11:382:13176  \"contract YieldFarm is Ownable {...\" */ shl(224, 0xa9059cbb))\n                /// @src 5:1050:1108  \"abi.encodeWithSelector(token.transfer.selector, to, value)\"\n                let _1 := sub(abi_encode_address_uint256(add(expr_mpos, 36), var_to, var_value), expr_mpos)\n                mstore(expr_mpos, add(_1, /** @src 11:382:13176  \"contract YieldFarm is Ownable {...\" */ not(31)))\n                /// @src 5:1050:1108  \"abi.encodeWithSelector(token.transfer.selector, to, value)\"\n                finalize_allocation(expr_mpos, _1)\n                fun_callOptionalReturn(var_token_851_address, expr_mpos)\n            }\n            /// @ast-id 2918 @src 11:10528:11412  \"function staking(uint256 _amount) public {...\"\n            function fun_staking(var_amount)\n            {\n                /// @src 11:10603:10614  \"poolInfo[0]\"\n                let _1, _2 := storage_array_index_access_struct_PoolInfo_storage_dyn()\n                /// @src 11:10648:10659  \"userInfo[0]\"\n                let _3 := mapping_index_access_mapping_uint256_mapping_address_struct_UserInfo_storage_of_uint256()\n                /// @src 11:10648:10671  \"userInfo[0][msg.sender]\"\n                let _4 := mapping_index_access_mapping_address_struct_UserInfo_storage_of_address(_3, /** @src 11:10660:10670  \"msg.sender\" */ caller())\n                /// @src 11:10682:10695  \"updatePool(0)\"\n                fun_updatePool_6978()\n                /// @src 11:382:13176  \"contract YieldFarm is Ownable {...\"\n                let _5 := sload(/** @src 11:10709:10720  \"user.amount\" */ _4)\n                /// @src 11:10705:11005  \"if (user.amount > 0) {...\"\n                if /** @src 11:10709:10724  \"user.amount > 0\" */ iszero(iszero(_5))\n                /// @src 11:10705:11005  \"if (user.amount > 0) {...\"\n                {\n                    /// @src 11:10758:10856  \"user...\"\n                    let expr := /** @src 8:3934:3939  \"a / b\" */ checked_div_uint256_6962(/** @src 8:3549:3554  \"a * b\" */ checked_mul_uint256(_5, /** @src 11:382:13176  \"contract YieldFarm is Ownable {...\" */ sload(/** @src 11:10808:10828  \"pool.accSobaPerShare\" */ add(_1, 3))))\n                    /// @src 8:3199:3211  \"return a - b\"\n                    let var := /** @src 8:3206:3211  \"a - b\" */ checked_sub_uint256(expr, /** @src 11:382:13176  \"contract YieldFarm is Ownable {...\" */ sload(/** @src 11:10878:10893  \"user.rewardDebt\" */ add(_4, 1)))\n                    /// @src 11:10908:10995  \"if (pending > 0) {...\"\n                    if /** @src 11:10912:10923  \"pending > 0\" */ iszero(iszero(var))\n                    /// @src 11:10908:10995  \"if (pending > 0) {...\"\n                    {\n                        /// @src 11:10972:10979  \"pending\"\n                        fun_safeSobaTransfer(/** @src 11:10660:10670  \"msg.sender\" */ caller(), /** @src 11:10972:10979  \"pending\" */ var)\n                    }\n                }\n                /// @src 11:11014:11285  \"if (_amount > 0) {...\"\n                if /** @src 11:11018:11029  \"_amount > 0\" */ iszero(iszero(var_amount))\n                /// @src 11:11014:11285  \"if (_amount > 0) {...\"\n                {\n                    /// @src 11:11045:11057  \"pool.lpToken\"\n                    let _385_address := /** @src 11:382:13176  \"contract YieldFarm is Ownable {...\" */ extract_from_storage_value_offsett_contract_IERC20(sload(/** @src 11:11045:11057  \"pool.lpToken\" */ _1))\n                    /// @src 11:11160:11167  \"_amount\"\n                    fun_safeTransferFrom(_385_address, /** @src 11:10660:10670  \"msg.sender\" */ caller(), /** @src 11:11137:11141  \"this\" */ address(), /** @src 11:11160:11167  \"_amount\" */ var_amount)\n                    /// @src 11:11195:11211  \"pool.totalStaked\"\n                    let _6 := add(_1, 4)\n                    /// @src 11:382:13176  \"contract YieldFarm is Ownable {...\"\n                    sstore(_6, /** @src 11:11195:11222  \"pool.totalStaked += _amount\" */ checked_add_uint256(/** @src 11:382:13176  \"contract YieldFarm is Ownable {...\" */ sload(/** @src 11:11195:11222  \"pool.totalStaked += _amount\" */ _6), var_amount))\n                    /// @src 11:382:13176  \"contract YieldFarm is Ownable {...\"\n                    sstore(_4, /** @src 8:2839:2844  \"a + b\" */ checked_add_uint256(/** @src 11:382:13176  \"contract YieldFarm is Ownable {...\" */ sload(/** @src 11:11250:11261  \"user.amount\" */ _4), /** @src 8:2839:2844  \"a + b\" */ var_amount))\n                }\n                /// @src 11:382:13176  \"contract YieldFarm is Ownable {...\"\n                let _7 := sload(/** @src 11:11312:11323  \"user.amount\" */ _4)\n                /// @src 11:382:13176  \"contract YieldFarm is Ownable {...\"\n                sstore(/** @src 11:11294:11309  \"user.rewardDebt\" */ add(_4, 1), /** @src 8:3934:3939  \"a / b\" */ checked_div_uint256_6962(/** @src 8:3549:3554  \"a * b\" */ checked_mul_uint256(_7, /** @src 11:382:13176  \"contract YieldFarm is Ownable {...\" */ sload(/** @src 11:11328:11348  \"pool.accSobaPerShare\" */ add(_1, 3)))))\n                /// @src 11:11374:11405  \"Deposit(msg.sender, 0, _amount)\"\n                log4(/** @src 11:382:13176  \"contract YieldFarm is Ownable {...\" */ mload(64), /** @src 11:10612:10613  \"0\" */ 0x00, /** @src 11:11374:11405  \"Deposit(msg.sender, 0, _amount)\" */ 0x90890809c654f11d6e72a28fa60149770a0d11ec6c92319d6ceb2bb0a4ea1a15, /** @src 11:10660:10670  \"msg.sender\" */ caller(), /** @src 11:10612:10613  \"0\" */ 0x00, /** @src 11:11374:11405  \"Deposit(msg.sender, 0, _amount)\" */ var_amount)\n            }\n            /// @ast-id 3035 @src 11:11445:12202  \"function leaveStaking(uint256 _amount) public {...\"\n            function fun_leaveStaking(var__amount)\n            {\n                /// @src 11:11525:11536  \"poolInfo[0]\"\n                let _1, _2 := storage_array_index_access_struct_PoolInfo_storage_dyn()\n                /// @src 11:11570:11581  \"userInfo[0]\"\n                let _3 := mapping_index_access_mapping_uint256_mapping_address_struct_UserInfo_storage_of_uint256()\n                /// @src 11:11570:11593  \"userInfo[0][msg.sender]\"\n                let _4 := mapping_index_access_mapping_address_struct_UserInfo_storage_of_address(_3, /** @src 11:11582:11592  \"msg.sender\" */ caller())\n                /// @src 11:11603:11644  \"require(user.amount >= _amount, \\\"Exceed\\\")\"\n                require_helper_stringliteral_320d(/** @src 11:11611:11633  \"user.amount >= _amount\" */ iszero(lt(/** @src 11:382:13176  \"contract YieldFarm is Ownable {...\" */ sload(/** @src 11:11611:11622  \"user.amount\" */ _4), /** @src 11:11611:11633  \"user.amount >= _amount\" */ var__amount)))\n                /// @src 11:11654:11667  \"updatePool(0)\"\n                fun_updatePool_6978()\n                /// @src 11:382:13176  \"contract YieldFarm is Ownable {...\"\n                let _5 := sload(/** @src 11:11695:11706  \"user.amount\" */ _4)\n                /// @src 11:11711:11731  \"pool.accSobaPerShare\"\n                let _6 := add(_1, 3)\n                /// @src 11:11695:11742  \"user.amount.mul(pool.accSobaPerShare).div(1e18)\"\n                let expr := /** @src 8:3934:3939  \"a / b\" */ checked_div_uint256_6962(/** @src 8:3549:3554  \"a * b\" */ checked_mul_uint256(_5, /** @src 11:382:13176  \"contract YieldFarm is Ownable {...\" */ sload(/** @src 11:11711:11731  \"pool.accSobaPerShare\" */ _6)))\n                /// @src 11:11760:11775  \"user.rewardDebt\"\n                let _7 := add(_4, 1)\n                /// @src 8:3199:3211  \"return a - b\"\n                let var := /** @src 8:3206:3211  \"a - b\" */ checked_sub_uint256(expr, /** @src 11:382:13176  \"contract YieldFarm is Ownable {...\" */ sload(/** @src 11:11760:11775  \"user.rewardDebt\" */ _7))\n                /// @src 11:11795:11874  \"if (pending > 0) {...\"\n                if /** @src 11:11799:11810  \"pending > 0\" */ iszero(iszero(var))\n                /// @src 11:11795:11874  \"if (pending > 0) {...\"\n                {\n                    /// @src 11:11855:11862  \"pending\"\n                    fun_safeSobaTransfer(/** @src 11:11582:11592  \"msg.sender\" */ caller(), /** @src 11:11855:11862  \"pending\" */ var)\n                }\n                /// @src 11:11884:12074  \"if (_amount > 0) {...\"\n                if /** @src 11:11888:11899  \"_amount > 0\" */ iszero(iszero(var__amount))\n                /// @src 11:11884:12074  \"if (_amount > 0) {...\"\n                {\n                    /// @src 11:11915:11931  \"pool.totalStaked\"\n                    let _8 := add(_1, 4)\n                    /// @src 11:382:13176  \"contract YieldFarm is Ownable {...\"\n                    sstore(_8, /** @src 11:11915:11942  \"pool.totalStaked -= _amount\" */ checked_sub_uint256(/** @src 11:382:13176  \"contract YieldFarm is Ownable {...\" */ sload(/** @src 11:11915:11942  \"pool.totalStaked -= _amount\" */ _8), var__amount))\n                    /// @src 11:382:13176  \"contract YieldFarm is Ownable {...\"\n                    sstore(_4, /** @src 8:3206:3211  \"a - b\" */ checked_sub_uint256(/** @src 11:382:13176  \"contract YieldFarm is Ownable {...\" */ sload(/** @src 11:11970:11981  \"user.amount\" */ _4), /** @src 8:3206:3211  \"a - b\" */ var__amount))\n                    /// @src 11:12055:12062  \"_amount\"\n                    fun_safeTransfer(/** @src 11:382:13176  \"contract YieldFarm is Ownable {...\" */ extract_from_storage_value_offsett_contract_IERC20(sload(/** @src 11:12008:12020  \"pool.lpToken\" */ _1)), /** @src 11:11582:11592  \"msg.sender\" */ caller(), /** @src 11:12055:12062  \"_amount\" */ var__amount)\n                }\n                /// @src 11:382:13176  \"contract YieldFarm is Ownable {...\"\n                let _9 := sload(/** @src 11:12101:12112  \"user.amount\" */ _4)\n                /// @src 11:382:13176  \"contract YieldFarm is Ownable {...\"\n                sstore(_7, /** @src 8:3934:3939  \"a / b\" */ checked_div_uint256_6962(/** @src 8:3549:3554  \"a * b\" */ checked_mul_uint256(_9, /** @src 11:382:13176  \"contract YieldFarm is Ownable {...\" */ sload(/** @src 11:12117:12137  \"pool.accSobaPerShare\" */ _6))))\n                /// @src 11:12163:12195  \"Withdraw(msg.sender, 0, _amount)\"\n                let _10 := /** @src 11:382:13176  \"contract YieldFarm is Ownable {...\" */ mload(64)\n                /// @src 11:12163:12195  \"Withdraw(msg.sender, 0, _amount)\"\n                log3(_10, sub(abi_encode_uint256(_10, var__amount), _10), 0xf279e6a1f5e320cca91135676d9cb6e44ca8a08c0b88342bcdb1144f6511b568, /** @src 11:11582:11592  \"msg.sender\" */ caller(), /** @src 11:11534:11535  \"0\" */ 0x00)\n            }\n            /// @ast-id 3099 @src 11:12268:12670  \"function emergencyWithdraw(uint256 _poolId) public {...\"\n            function fun_emergencyWithdraw(var_poolId)\n            {\n                /// @src 11:12353:12370  \"poolInfo[_poolId]\"\n                let _1, _2 := storage_array_index_access_struct_PoolInfo__dyn(var_poolId)\n                /// @src 11:382:13176  \"contract YieldFarm is Ownable {...\"\n                mstore(/** @src -1:-1:-1 */ 0, /** @src 11:382:13176  \"contract YieldFarm is Ownable {...\" */ var_poolId)\n                mstore(0x20, /** @src 11:12404:12412  \"userInfo\" */ 0x06)\n                /// @src 11:382:13176  \"contract YieldFarm is Ownable {...\"\n                let dataSlot := keccak256(/** @src -1:-1:-1 */ 0, /** @src 11:382:13176  \"contract YieldFarm is Ownable {...\" */ 0x40)\n                /// @src 11:12404:12433  \"userInfo[_poolId][msg.sender]\"\n                let _3 := mapping_index_access_mapping_address_struct_UserInfo_storage_of_address(dataSlot, /** @src 11:12422:12432  \"msg.sender\" */ caller())\n                /// @src 11:382:13176  \"contract YieldFarm is Ownable {...\"\n                let value := and(sload(/** @src 11:12443:12455  \"pool.lpToken\" */ _1), /** @src 11:382:13176  \"contract YieldFarm is Ownable {...\" */ sub(shl(160, 1), 1))\n                /// @src 11:12490:12501  \"user.amount\"\n                fun_safeTransfer(value, /** @src 11:12422:12432  \"msg.sender\" */ caller(), /** @src 11:382:13176  \"contract YieldFarm is Ownable {...\" */ sload(/** @src 11:12490:12501  \"user.amount\" */ _3))\n                /// @src 11:382:13176  \"contract YieldFarm is Ownable {...\"\n                let _4 := sload(/** @src 11:12532:12543  \"user.amount\" */ _3)\n                /// @src 11:12512:12528  \"pool.totalStaked\"\n                let _5 := add(_1, 4)\n                /// @src 11:382:13176  \"contract YieldFarm is Ownable {...\"\n                let _6 := sload(/** @src 11:12512:12543  \"pool.totalStaked -= user.amount\" */ _5)\n                /// @src 11:382:13176  \"contract YieldFarm is Ownable {...\"\n                if lt(_6, _4) { panic_error_0x11() }\n                sstore(_5, sub(_6, _4))\n                let _7 := sload(/** @src 11:12597:12608  \"user.amount\" */ _3)\n                /// @src 11:12558:12609  \"EmergencyWithdraw(msg.sender, _poolId, user.amount)\"\n                let _8 := /** @src 11:382:13176  \"contract YieldFarm is Ownable {...\" */ mload(0x40)\n                mstore(_8, _7)\n                /// @src 11:12558:12609  \"EmergencyWithdraw(msg.sender, _poolId, user.amount)\"\n                log3(_8, /** @src 11:382:13176  \"contract YieldFarm is Ownable {...\" */ 0x20, /** @src 11:12558:12609  \"EmergencyWithdraw(msg.sender, _poolId, user.amount)\" */ 0xbb757047c2b5f3974fe26b7c10f732e7bce710b0952a71082702781e62ae0595, /** @src 11:12422:12432  \"msg.sender\" */ caller(), /** @src 11:12558:12609  \"EmergencyWithdraw(msg.sender, _poolId, user.amount)\" */ var_poolId)\n                /// @src 11:382:13176  \"contract YieldFarm is Ownable {...\"\n                sstore(_3, /** @src -1:-1:-1 */ 0)\n                /// @src 11:382:13176  \"contract YieldFarm is Ownable {...\"\n                sstore(/** @src 11:12644:12659  \"user.rewardDebt\" */ add(_3, 1), /** @src -1:-1:-1 */ 0)\n            }\n            /// @ast-id 3137 @src 11:12711:13000  \"function safeSobaTransfer(address _to, uint256 _amount) internal {...\"\n            function fun_safeSobaTransfer(var_to, var_amount)\n            {\n                /// @src 11:12808:12824  \"sobaja.balanceOf\"\n                let expr_3109_address := extract_from_storage_value_offsett_contract_IERC20(/** @src 11:382:13176  \"contract YieldFarm is Ownable {...\" */ extract_from_storage_value_offsett_contract_IERC20(sload(/** @src 11:12808:12814  \"sobaja\" */ 0x01)))\n                /// @src 11:12808:12839  \"sobaja.balanceOf(address(this))\"\n                if iszero(extcodesize(expr_3109_address))\n                {\n                    /// @src 11:382:13176  \"contract YieldFarm is Ownable {...\"\n                    revert(0, 0)\n                }\n                /// @src 11:12808:12839  \"sobaja.balanceOf(address(this))\"\n                let _1 := /** @src 11:382:13176  \"contract YieldFarm is Ownable {...\" */ mload(64)\n                /// @src 11:12808:12839  \"sobaja.balanceOf(address(this))\"\n                mstore(_1, /** @src 11:382:13176  \"contract YieldFarm is Ownable {...\" */ shl(224, 0x70a08231))\n                /// @src 11:12808:12839  \"sobaja.balanceOf(address(this))\"\n                let _2 := staticcall(gas(), expr_3109_address, _1, sub(abi_encode_address(add(_1, 4), /** @src 11:12833:12837  \"this\" */ address()), /** @src 11:12808:12839  \"sobaja.balanceOf(address(this))\" */ _1), _1, 32)\n                if iszero(_2) { revert_forward() }\n                let expr := /** @src -1:-1:-1 */ 0\n                /// @src 11:12808:12839  \"sobaja.balanceOf(address(this))\"\n                if _2\n                {\n                    finalize_allocation(_1, returndatasize())\n                    expr := abi_decode_uint256_fromMemory(_1, add(_1, returndatasize()))\n                }\n                /// @src 11:12849:12994  \"if (_amount > sobaBalance) {...\"\n                switch /** @src 11:12853:12874  \"_amount > sobaBalance\" */ gt(var_amount, expr)\n                case /** @src 11:12849:12994  \"if (_amount > sobaBalance) {...\" */ 0 {\n                    /// @src 11:12954:12983  \"sobaja.transfer(_to, _amount)\"\n                    if iszero(extcodesize(expr_3109_address))\n                    {\n                        /// @src 11:382:13176  \"contract YieldFarm is Ownable {...\"\n                        revert(/** @src -1:-1:-1 */ 0, 0)\n                    }\n                    /// @src 11:12954:12983  \"sobaja.transfer(_to, _amount)\"\n                    let _3 := /** @src 11:382:13176  \"contract YieldFarm is Ownable {...\" */ mload(64)\n                    /// @src 11:12954:12983  \"sobaja.transfer(_to, _amount)\"\n                    mstore(_3, /** @src 11:382:13176  \"contract YieldFarm is Ownable {...\" */ shl(224, 0xa9059cbb))\n                    /// @src 11:12954:12983  \"sobaja.transfer(_to, _amount)\"\n                    let _4 := call(gas(), expr_3109_address, /** @src -1:-1:-1 */ 0, /** @src 11:12954:12983  \"sobaja.transfer(_to, _amount)\" */ _3, sub(abi_encode_address_uint256(add(_3, /** @src 11:12808:12839  \"sobaja.balanceOf(address(this))\" */ 4), /** @src 11:12954:12983  \"sobaja.transfer(_to, _amount)\" */ var_to, var_amount), _3), _3, /** @src 11:12808:12839  \"sobaja.balanceOf(address(this))\" */ 32)\n                    /// @src 11:12954:12983  \"sobaja.transfer(_to, _amount)\"\n                    if iszero(_4) { revert_forward() }\n                    if _4\n                    {\n                        finalize_allocation(_3, returndatasize())\n                        pop(abi_decode_bool_fromMemory(_3, add(_3, returndatasize())))\n                    }\n                }\n                default /// @src 11:12849:12994  \"if (_amount > sobaBalance) {...\"\n                {\n                    /// @src 11:12890:12905  \"sobaja.transfer\"\n                    let expr_3121_address := extract_from_storage_value_offsett_contract_IERC20(/** @src 11:382:13176  \"contract YieldFarm is Ownable {...\" */ extract_from_storage_value_offsett_contract_IERC20(sload(/** @src 11:12808:12814  \"sobaja\" */ 0x01)))\n                    /// @src 11:12890:12923  \"sobaja.transfer(_to, sobaBalance)\"\n                    if iszero(extcodesize(expr_3121_address))\n                    {\n                        /// @src 11:382:13176  \"contract YieldFarm is Ownable {...\"\n                        revert(/** @src -1:-1:-1 */ 0, 0)\n                    }\n                    /// @src 11:12890:12923  \"sobaja.transfer(_to, sobaBalance)\"\n                    let _5 := /** @src 11:382:13176  \"contract YieldFarm is Ownable {...\" */ mload(64)\n                    /// @src 11:12890:12923  \"sobaja.transfer(_to, sobaBalance)\"\n                    mstore(_5, /** @src 11:382:13176  \"contract YieldFarm is Ownable {...\" */ shl(224, 0xa9059cbb))\n                    /// @src 11:12890:12923  \"sobaja.transfer(_to, sobaBalance)\"\n                    let _6 := call(gas(), expr_3121_address, /** @src -1:-1:-1 */ 0, /** @src 11:12890:12923  \"sobaja.transfer(_to, sobaBalance)\" */ _5, sub(abi_encode_address_uint256(add(_5, /** @src 11:12808:12839  \"sobaja.balanceOf(address(this))\" */ 4), /** @src 11:12890:12923  \"sobaja.transfer(_to, sobaBalance)\" */ var_to, expr), _5), _5, /** @src 11:12808:12839  \"sobaja.balanceOf(address(this))\" */ 32)\n                    /// @src 11:12890:12923  \"sobaja.transfer(_to, sobaBalance)\"\n                    if iszero(_6) { revert_forward() }\n                    if _6\n                    {\n                        finalize_allocation(_5, returndatasize())\n                        pop(abi_decode_bool_fromMemory(_5, add(_5, returndatasize())))\n                    }\n                }\n            }\n            /// @ast-id 3155 @src 11:13032:13174  \"function dev(address _devaddr) public {...\"\n            function fun_dev(var_devaddr)\n            {\n                /// @src 11:382:13176  \"contract YieldFarm is Ownable {...\"\n                let _1 := sload(/** @src 11:13102:13112  \"devAddress\" */ 0x02)\n                /// @src 11:382:13176  \"contract YieldFarm is Ownable {...\"\n                let _2 := sub(shl(160, 1), 1)\n                if iszero(/** @src 11:13088:13112  \"msg.sender == devAddress\" */ eq(/** @src 11:13088:13098  \"msg.sender\" */ caller(), /** @src 11:382:13176  \"contract YieldFarm is Ownable {...\" */ and(_1, _2)))\n                {\n                    let memPtr := mload(64)\n                    mstore(memPtr, shl(229, 4594637))\n                    mstore(add(memPtr, 4), 32)\n                    mstore(add(memPtr, 36), 19)\n                    mstore(add(memPtr, 68), \"Address not satisfy\")\n                    revert(memPtr, 100)\n                }\n                sstore(/** @src 11:13102:13112  \"devAddress\" */ 0x02, /** @src 11:382:13176  \"contract YieldFarm is Ownable {...\" */ or(and(_1, shl(160, 0xffffffffffffffffffffffff)), and(var_devaddr, _2)))\n            }\n        }\n        data \".metadata\" hex\"a3646970667358221220e4d0bdf3a39af210971d4da11b8bf100665ceae5b22608362bbb82c9938e73a76c6578706572696d656e74616cf564736f6c63430008090041\"\n    }\n}\n","hash":"01000a0d02910a18473f64b11f1fb026f29a8840bc68674b554a44345d887e3d","factoryDependencies":{}}}}}}
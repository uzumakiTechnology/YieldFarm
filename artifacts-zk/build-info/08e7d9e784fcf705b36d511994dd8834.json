{"id":"08e7d9e784fcf705b36d511994dd8834","_format":"hh-sol-build-info-1","solcVersion":"0.8.9","solcLongVersion":"0.8.9+commit.e5eed63a","input":{"language":"Solidity","sources":{"@openzeppelin/contracts/access/AccessControl.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (access/AccessControl.sol)\n\npragma solidity ^0.8.0;\n\nimport \"./IAccessControl.sol\";\nimport \"../utils/Context.sol\";\nimport \"../utils/Strings.sol\";\nimport \"../utils/introspection/ERC165.sol\";\n\n/**\n * @dev Contract module that allows children to implement role-based access\n * control mechanisms. This is a lightweight version that doesn't allow enumerating role\n * members except through off-chain means by accessing the contract event logs. Some\n * applications may benefit from on-chain enumerability, for those cases see\n * {AccessControlEnumerable}.\n *\n * Roles are referred to by their `bytes32` identifier. These should be exposed\n * in the external API and be unique. The best way to achieve this is by\n * using `public constant` hash digests:\n *\n * ```solidity\n * bytes32 public constant MY_ROLE = keccak256(\"MY_ROLE\");\n * ```\n *\n * Roles can be used to represent a set of permissions. To restrict access to a\n * function call, use {hasRole}:\n *\n * ```solidity\n * function foo() public {\n *     require(hasRole(MY_ROLE, msg.sender));\n *     ...\n * }\n * ```\n *\n * Roles can be granted and revoked dynamically via the {grantRole} and\n * {revokeRole} functions. Each role has an associated admin role, and only\n * accounts that have a role's admin role can call {grantRole} and {revokeRole}.\n *\n * By default, the admin role for all roles is `DEFAULT_ADMIN_ROLE`, which means\n * that only accounts with this role will be able to grant or revoke other\n * roles. More complex role relationships can be created by using\n * {_setRoleAdmin}.\n *\n * WARNING: The `DEFAULT_ADMIN_ROLE` is also its own admin: it has permission to\n * grant and revoke this role. Extra precautions should be taken to secure\n * accounts that have been granted it. We recommend using {AccessControlDefaultAdminRules}\n * to enforce additional security measures for this role.\n */\nabstract contract AccessControl is Context, IAccessControl, ERC165 {\n    struct RoleData {\n        mapping(address => bool) members;\n        bytes32 adminRole;\n    }\n\n    mapping(bytes32 => RoleData) private _roles;\n\n    bytes32 public constant DEFAULT_ADMIN_ROLE = 0x00;\n\n    /**\n     * @dev Modifier that checks that an account has a specific role. Reverts\n     * with a standardized message including the required role.\n     *\n     * The format of the revert reason is given by the following regular expression:\n     *\n     *  /^AccessControl: account (0x[0-9a-f]{40}) is missing role (0x[0-9a-f]{64})$/\n     *\n     * _Available since v4.1._\n     */\n    modifier onlyRole(bytes32 role) {\n        _checkRole(role);\n        _;\n    }\n\n    /**\n     * @dev See {IERC165-supportsInterface}.\n     */\n    function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n        return interfaceId == type(IAccessControl).interfaceId || super.supportsInterface(interfaceId);\n    }\n\n    /**\n     * @dev Returns `true` if `account` has been granted `role`.\n     */\n    function hasRole(bytes32 role, address account) public view virtual override returns (bool) {\n        return _roles[role].members[account];\n    }\n\n    /**\n     * @dev Revert with a standard message if `_msgSender()` is missing `role`.\n     * Overriding this function changes the behavior of the {onlyRole} modifier.\n     *\n     * Format of the revert message is described in {_checkRole}.\n     *\n     * _Available since v4.6._\n     */\n    function _checkRole(bytes32 role) internal view virtual {\n        _checkRole(role, _msgSender());\n    }\n\n    /**\n     * @dev Revert with a standard message if `account` is missing `role`.\n     *\n     * The format of the revert reason is given by the following regular expression:\n     *\n     *  /^AccessControl: account (0x[0-9a-f]{40}) is missing role (0x[0-9a-f]{64})$/\n     */\n    function _checkRole(bytes32 role, address account) internal view virtual {\n        if (!hasRole(role, account)) {\n            revert(\n                string(\n                    abi.encodePacked(\n                        \"AccessControl: account \",\n                        Strings.toHexString(account),\n                        \" is missing role \",\n                        Strings.toHexString(uint256(role), 32)\n                    )\n                )\n            );\n        }\n    }\n\n    /**\n     * @dev Returns the admin role that controls `role`. See {grantRole} and\n     * {revokeRole}.\n     *\n     * To change a role's admin, use {_setRoleAdmin}.\n     */\n    function getRoleAdmin(bytes32 role) public view virtual override returns (bytes32) {\n        return _roles[role].adminRole;\n    }\n\n    /**\n     * @dev Grants `role` to `account`.\n     *\n     * If `account` had not been already granted `role`, emits a {RoleGranted}\n     * event.\n     *\n     * Requirements:\n     *\n     * - the caller must have ``role``'s admin role.\n     *\n     * May emit a {RoleGranted} event.\n     */\n    function grantRole(bytes32 role, address account) public virtual override onlyRole(getRoleAdmin(role)) {\n        _grantRole(role, account);\n    }\n\n    /**\n     * @dev Revokes `role` from `account`.\n     *\n     * If `account` had been granted `role`, emits a {RoleRevoked} event.\n     *\n     * Requirements:\n     *\n     * - the caller must have ``role``'s admin role.\n     *\n     * May emit a {RoleRevoked} event.\n     */\n    function revokeRole(bytes32 role, address account) public virtual override onlyRole(getRoleAdmin(role)) {\n        _revokeRole(role, account);\n    }\n\n    /**\n     * @dev Revokes `role` from the calling account.\n     *\n     * Roles are often managed via {grantRole} and {revokeRole}: this function's\n     * purpose is to provide a mechanism for accounts to lose their privileges\n     * if they are compromised (such as when a trusted device is misplaced).\n     *\n     * If the calling account had been revoked `role`, emits a {RoleRevoked}\n     * event.\n     *\n     * Requirements:\n     *\n     * - the caller must be `account`.\n     *\n     * May emit a {RoleRevoked} event.\n     */\n    function renounceRole(bytes32 role, address account) public virtual override {\n        require(account == _msgSender(), \"AccessControl: can only renounce roles for self\");\n\n        _revokeRole(role, account);\n    }\n\n    /**\n     * @dev Grants `role` to `account`.\n     *\n     * If `account` had not been already granted `role`, emits a {RoleGranted}\n     * event. Note that unlike {grantRole}, this function doesn't perform any\n     * checks on the calling account.\n     *\n     * May emit a {RoleGranted} event.\n     *\n     * [WARNING]\n     * ====\n     * This function should only be called from the constructor when setting\n     * up the initial roles for the system.\n     *\n     * Using this function in any other way is effectively circumventing the admin\n     * system imposed by {AccessControl}.\n     * ====\n     *\n     * NOTE: This function is deprecated in favor of {_grantRole}.\n     */\n    function _setupRole(bytes32 role, address account) internal virtual {\n        _grantRole(role, account);\n    }\n\n    /**\n     * @dev Sets `adminRole` as ``role``'s admin role.\n     *\n     * Emits a {RoleAdminChanged} event.\n     */\n    function _setRoleAdmin(bytes32 role, bytes32 adminRole) internal virtual {\n        bytes32 previousAdminRole = getRoleAdmin(role);\n        _roles[role].adminRole = adminRole;\n        emit RoleAdminChanged(role, previousAdminRole, adminRole);\n    }\n\n    /**\n     * @dev Grants `role` to `account`.\n     *\n     * Internal function without access restriction.\n     *\n     * May emit a {RoleGranted} event.\n     */\n    function _grantRole(bytes32 role, address account) internal virtual {\n        if (!hasRole(role, account)) {\n            _roles[role].members[account] = true;\n            emit RoleGranted(role, account, _msgSender());\n        }\n    }\n\n    /**\n     * @dev Revokes `role` from `account`.\n     *\n     * Internal function without access restriction.\n     *\n     * May emit a {RoleRevoked} event.\n     */\n    function _revokeRole(bytes32 role, address account) internal virtual {\n        if (hasRole(role, account)) {\n            _roles[role].members[account] = false;\n            emit RoleRevoked(role, account, _msgSender());\n        }\n    }\n}\n"},"@openzeppelin/contracts/access/IAccessControl.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (access/IAccessControl.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev External interface of AccessControl declared to support ERC165 detection.\n */\ninterface IAccessControl {\n    /**\n     * @dev Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole`\n     *\n     * `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite\n     * {RoleAdminChanged} not being emitted signaling this.\n     *\n     * _Available since v3.1._\n     */\n    event RoleAdminChanged(bytes32 indexed role, bytes32 indexed previousAdminRole, bytes32 indexed newAdminRole);\n\n    /**\n     * @dev Emitted when `account` is granted `role`.\n     *\n     * `sender` is the account that originated the contract call, an admin role\n     * bearer except when using {AccessControl-_setupRole}.\n     */\n    event RoleGranted(bytes32 indexed role, address indexed account, address indexed sender);\n\n    /**\n     * @dev Emitted when `account` is revoked `role`.\n     *\n     * `sender` is the account that originated the contract call:\n     *   - if using `revokeRole`, it is the admin role bearer\n     *   - if using `renounceRole`, it is the role bearer (i.e. `account`)\n     */\n    event RoleRevoked(bytes32 indexed role, address indexed account, address indexed sender);\n\n    /**\n     * @dev Returns `true` if `account` has been granted `role`.\n     */\n    function hasRole(bytes32 role, address account) external view returns (bool);\n\n    /**\n     * @dev Returns the admin role that controls `role`. See {grantRole} and\n     * {revokeRole}.\n     *\n     * To change a role's admin, use {AccessControl-_setRoleAdmin}.\n     */\n    function getRoleAdmin(bytes32 role) external view returns (bytes32);\n\n    /**\n     * @dev Grants `role` to `account`.\n     *\n     * If `account` had not been already granted `role`, emits a {RoleGranted}\n     * event.\n     *\n     * Requirements:\n     *\n     * - the caller must have ``role``'s admin role.\n     */\n    function grantRole(bytes32 role, address account) external;\n\n    /**\n     * @dev Revokes `role` from `account`.\n     *\n     * If `account` had been granted `role`, emits a {RoleRevoked} event.\n     *\n     * Requirements:\n     *\n     * - the caller must have ``role``'s admin role.\n     */\n    function revokeRole(bytes32 role, address account) external;\n\n    /**\n     * @dev Revokes `role` from the calling account.\n     *\n     * Roles are often managed via {grantRole} and {revokeRole}: this function's\n     * purpose is to provide a mechanism for accounts to lose their privileges\n     * if they are compromised (such as when a trusted device is misplaced).\n     *\n     * If the calling account had been granted `role`, emits a {RoleRevoked}\n     * event.\n     *\n     * Requirements:\n     *\n     * - the caller must be `account`.\n     */\n    function renounceRole(bytes32 role, address account) external;\n}\n"},"@openzeppelin/contracts/access/Ownable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (access/Ownable.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../utils/Context.sol\";\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * By default, the owner account will be the one that deploys the contract. This\n * can later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract Ownable is Context {\n    address private _owner;\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the deployer as the initial owner.\n     */\n    constructor() {\n        _transferOwnership(_msgSender());\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        _checkOwner();\n        _;\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if the sender is not the owner.\n     */\n    function _checkOwner() internal view virtual {\n        require(owner() == _msgSender(), \"Ownable: caller is not the owner\");\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby disabling any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        require(newOwner != address(0), \"Ownable: new owner is the zero address\");\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        address oldOwner = _owner;\n        _owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n}\n"},"@openzeppelin/contracts/token/ERC20/ERC20.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (token/ERC20/ERC20.sol)\n\npragma solidity ^0.8.0;\n\nimport \"./IERC20.sol\";\nimport \"./extensions/IERC20Metadata.sol\";\nimport \"../../utils/Context.sol\";\n\n/**\n * @dev Implementation of the {IERC20} interface.\n *\n * This implementation is agnostic to the way tokens are created. This means\n * that a supply mechanism has to be added in a derived contract using {_mint}.\n * For a generic mechanism see {ERC20PresetMinterPauser}.\n *\n * TIP: For a detailed writeup see our guide\n * https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n * to implement supply mechanisms].\n *\n * The default value of {decimals} is 18. To change this, you should override\n * this function so it returns a different value.\n *\n * We have followed general OpenZeppelin Contracts guidelines: functions revert\n * instead returning `false` on failure. This behavior is nonetheless\n * conventional and does not conflict with the expectations of ERC20\n * applications.\n *\n * Additionally, an {Approval} event is emitted on calls to {transferFrom}.\n * This allows applications to reconstruct the allowance for all accounts just\n * by listening to said events. Other implementations of the EIP may not emit\n * these events, as it isn't required by the specification.\n *\n * Finally, the non-standard {decreaseAllowance} and {increaseAllowance}\n * functions have been added to mitigate the well-known issues around setting\n * allowances. See {IERC20-approve}.\n */\ncontract ERC20 is Context, IERC20, IERC20Metadata {\n    mapping(address => uint256) private _balances;\n\n    mapping(address => mapping(address => uint256)) private _allowances;\n\n    uint256 private _totalSupply;\n\n    string private _name;\n    string private _symbol;\n\n    /**\n     * @dev Sets the values for {name} and {symbol}.\n     *\n     * All two of these values are immutable: they can only be set once during\n     * construction.\n     */\n    constructor(string memory name_, string memory symbol_) {\n        _name = name_;\n        _symbol = symbol_;\n    }\n\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() public view virtual override returns (string memory) {\n        return _name;\n    }\n\n    /**\n     * @dev Returns the symbol of the token, usually a shorter version of the\n     * name.\n     */\n    function symbol() public view virtual override returns (string memory) {\n        return _symbol;\n    }\n\n    /**\n     * @dev Returns the number of decimals used to get its user representation.\n     * For example, if `decimals` equals `2`, a balance of `505` tokens should\n     * be displayed to a user as `5.05` (`505 / 10 ** 2`).\n     *\n     * Tokens usually opt for a value of 18, imitating the relationship between\n     * Ether and Wei. This is the default value returned by this function, unless\n     * it's overridden.\n     *\n     * NOTE: This information is only used for _display_ purposes: it in\n     * no way affects any of the arithmetic of the contract, including\n     * {IERC20-balanceOf} and {IERC20-transfer}.\n     */\n    function decimals() public view virtual override returns (uint8) {\n        return 18;\n    }\n\n    /**\n     * @dev See {IERC20-totalSupply}.\n     */\n    function totalSupply() public view virtual override returns (uint256) {\n        return _totalSupply;\n    }\n\n    /**\n     * @dev See {IERC20-balanceOf}.\n     */\n    function balanceOf(address account) public view virtual override returns (uint256) {\n        return _balances[account];\n    }\n\n    /**\n     * @dev See {IERC20-transfer}.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - the caller must have a balance of at least `amount`.\n     */\n    function transfer(address to, uint256 amount) public virtual override returns (bool) {\n        address owner = _msgSender();\n        _transfer(owner, to, amount);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-allowance}.\n     */\n    function allowance(address owner, address spender) public view virtual override returns (uint256) {\n        return _allowances[owner][spender];\n    }\n\n    /**\n     * @dev See {IERC20-approve}.\n     *\n     * NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on\n     * `transferFrom`. This is semantically equivalent to an infinite approval.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     */\n    function approve(address spender, uint256 amount) public virtual override returns (bool) {\n        address owner = _msgSender();\n        _approve(owner, spender, amount);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-transferFrom}.\n     *\n     * Emits an {Approval} event indicating the updated allowance. This is not\n     * required by the EIP. See the note at the beginning of {ERC20}.\n     *\n     * NOTE: Does not update the allowance if the current allowance\n     * is the maximum `uint256`.\n     *\n     * Requirements:\n     *\n     * - `from` and `to` cannot be the zero address.\n     * - `from` must have a balance of at least `amount`.\n     * - the caller must have allowance for ``from``'s tokens of at least\n     * `amount`.\n     */\n    function transferFrom(address from, address to, uint256 amount) public virtual override returns (bool) {\n        address spender = _msgSender();\n        _spendAllowance(from, spender, amount);\n        _transfer(from, to, amount);\n        return true;\n    }\n\n    /**\n     * @dev Atomically increases the allowance granted to `spender` by the caller.\n     *\n     * This is an alternative to {approve} that can be used as a mitigation for\n     * problems described in {IERC20-approve}.\n     *\n     * Emits an {Approval} event indicating the updated allowance.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     */\n    function increaseAllowance(address spender, uint256 addedValue) public virtual returns (bool) {\n        address owner = _msgSender();\n        _approve(owner, spender, allowance(owner, spender) + addedValue);\n        return true;\n    }\n\n    /**\n     * @dev Atomically decreases the allowance granted to `spender` by the caller.\n     *\n     * This is an alternative to {approve} that can be used as a mitigation for\n     * problems described in {IERC20-approve}.\n     *\n     * Emits an {Approval} event indicating the updated allowance.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     * - `spender` must have allowance for the caller of at least\n     * `subtractedValue`.\n     */\n    function decreaseAllowance(address spender, uint256 subtractedValue) public virtual returns (bool) {\n        address owner = _msgSender();\n        uint256 currentAllowance = allowance(owner, spender);\n        require(currentAllowance >= subtractedValue, \"ERC20: decreased allowance below zero\");\n        unchecked {\n            _approve(owner, spender, currentAllowance - subtractedValue);\n        }\n\n        return true;\n    }\n\n    /**\n     * @dev Moves `amount` of tokens from `from` to `to`.\n     *\n     * This internal function is equivalent to {transfer}, and can be used to\n     * e.g. implement automatic token fees, slashing mechanisms, etc.\n     *\n     * Emits a {Transfer} event.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `from` must have a balance of at least `amount`.\n     */\n    function _transfer(address from, address to, uint256 amount) internal virtual {\n        require(from != address(0), \"ERC20: transfer from the zero address\");\n        require(to != address(0), \"ERC20: transfer to the zero address\");\n\n        _beforeTokenTransfer(from, to, amount);\n\n        uint256 fromBalance = _balances[from];\n        require(fromBalance >= amount, \"ERC20: transfer amount exceeds balance\");\n        unchecked {\n            _balances[from] = fromBalance - amount;\n            // Overflow not possible: the sum of all balances is capped by totalSupply, and the sum is preserved by\n            // decrementing then incrementing.\n            _balances[to] += amount;\n        }\n\n        emit Transfer(from, to, amount);\n\n        _afterTokenTransfer(from, to, amount);\n    }\n\n    /** @dev Creates `amount` tokens and assigns them to `account`, increasing\n     * the total supply.\n     *\n     * Emits a {Transfer} event with `from` set to the zero address.\n     *\n     * Requirements:\n     *\n     * - `account` cannot be the zero address.\n     */\n    function _mint(address account, uint256 amount) internal virtual {\n        require(account != address(0), \"ERC20: mint to the zero address\");\n\n        _beforeTokenTransfer(address(0), account, amount);\n\n        _totalSupply += amount;\n        unchecked {\n            // Overflow not possible: balance + amount is at most totalSupply + amount, which is checked above.\n            _balances[account] += amount;\n        }\n        emit Transfer(address(0), account, amount);\n\n        _afterTokenTransfer(address(0), account, amount);\n    }\n\n    /**\n     * @dev Destroys `amount` tokens from `account`, reducing the\n     * total supply.\n     *\n     * Emits a {Transfer} event with `to` set to the zero address.\n     *\n     * Requirements:\n     *\n     * - `account` cannot be the zero address.\n     * - `account` must have at least `amount` tokens.\n     */\n    function _burn(address account, uint256 amount) internal virtual {\n        require(account != address(0), \"ERC20: burn from the zero address\");\n\n        _beforeTokenTransfer(account, address(0), amount);\n\n        uint256 accountBalance = _balances[account];\n        require(accountBalance >= amount, \"ERC20: burn amount exceeds balance\");\n        unchecked {\n            _balances[account] = accountBalance - amount;\n            // Overflow not possible: amount <= accountBalance <= totalSupply.\n            _totalSupply -= amount;\n        }\n\n        emit Transfer(account, address(0), amount);\n\n        _afterTokenTransfer(account, address(0), amount);\n    }\n\n    /**\n     * @dev Sets `amount` as the allowance of `spender` over the `owner` s tokens.\n     *\n     * This internal function is equivalent to `approve`, and can be used to\n     * e.g. set automatic allowances for certain subsystems, etc.\n     *\n     * Emits an {Approval} event.\n     *\n     * Requirements:\n     *\n     * - `owner` cannot be the zero address.\n     * - `spender` cannot be the zero address.\n     */\n    function _approve(address owner, address spender, uint256 amount) internal virtual {\n        require(owner != address(0), \"ERC20: approve from the zero address\");\n        require(spender != address(0), \"ERC20: approve to the zero address\");\n\n        _allowances[owner][spender] = amount;\n        emit Approval(owner, spender, amount);\n    }\n\n    /**\n     * @dev Updates `owner` s allowance for `spender` based on spent `amount`.\n     *\n     * Does not update the allowance amount in case of infinite allowance.\n     * Revert if not enough allowance is available.\n     *\n     * Might emit an {Approval} event.\n     */\n    function _spendAllowance(address owner, address spender, uint256 amount) internal virtual {\n        uint256 currentAllowance = allowance(owner, spender);\n        if (currentAllowance != type(uint256).max) {\n            require(currentAllowance >= amount, \"ERC20: insufficient allowance\");\n            unchecked {\n                _approve(owner, spender, currentAllowance - amount);\n            }\n        }\n    }\n\n    /**\n     * @dev Hook that is called before any transfer of tokens. This includes\n     * minting and burning.\n     *\n     * Calling conditions:\n     *\n     * - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\n     * will be transferred to `to`.\n     * - when `from` is zero, `amount` tokens will be minted for `to`.\n     * - when `to` is zero, `amount` of ``from``'s tokens will be burned.\n     * - `from` and `to` are never both zero.\n     *\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\n     */\n    function _beforeTokenTransfer(address from, address to, uint256 amount) internal virtual {}\n\n    /**\n     * @dev Hook that is called after any transfer of tokens. This includes\n     * minting and burning.\n     *\n     * Calling conditions:\n     *\n     * - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\n     * has been transferred to `to`.\n     * - when `from` is zero, `amount` tokens have been minted for `to`.\n     * - when `to` is zero, `amount` of ``from``'s tokens have been burned.\n     * - `from` and `to` are never both zero.\n     *\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\n     */\n    function _afterTokenTransfer(address from, address to, uint256 amount) internal virtual {}\n}\n"},"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (token/ERC20/extensions/IERC20Metadata.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../IERC20.sol\";\n\n/**\n * @dev Interface for the optional metadata functions from the ERC20 standard.\n *\n * _Available since v4.1._\n */\ninterface IERC20Metadata is IERC20 {\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() external view returns (string memory);\n\n    /**\n     * @dev Returns the symbol of the token.\n     */\n    function symbol() external view returns (string memory);\n\n    /**\n     * @dev Returns the decimals places of the token.\n     */\n    function decimals() external view returns (uint8);\n}\n"},"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (token/ERC20/extensions/IERC20Permit.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Interface of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in\n * https://eips.ethereum.org/EIPS/eip-2612[EIP-2612].\n *\n * Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by\n * presenting a message signed by the account. By not relying on {IERC20-approve}, the token holder account doesn't\n * need to send a transaction, and thus is not required to hold Ether at all.\n */\ninterface IERC20Permit {\n    /**\n     * @dev Sets `value` as the allowance of `spender` over ``owner``'s tokens,\n     * given ``owner``'s signed approval.\n     *\n     * IMPORTANT: The same issues {IERC20-approve} has related to transaction\n     * ordering also apply here.\n     *\n     * Emits an {Approval} event.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     * - `deadline` must be a timestamp in the future.\n     * - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner`\n     * over the EIP712-formatted function arguments.\n     * - the signature must use ``owner``'s current nonce (see {nonces}).\n     *\n     * For more information on the signature format, see the\n     * https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP\n     * section].\n     */\n    function permit(\n        address owner,\n        address spender,\n        uint256 value,\n        uint256 deadline,\n        uint8 v,\n        bytes32 r,\n        bytes32 s\n    ) external;\n\n    /**\n     * @dev Returns the current nonce for `owner`. This value must be\n     * included whenever a signature is generated for {permit}.\n     *\n     * Every successful call to {permit} increases ``owner``'s nonce by one. This\n     * prevents a signature from being used multiple times.\n     */\n    function nonces(address owner) external view returns (uint256);\n\n    /**\n     * @dev Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}.\n     */\n    // solhint-disable-next-line func-name-mixedcase\n    function DOMAIN_SEPARATOR() external view returns (bytes32);\n}\n"},"@openzeppelin/contracts/token/ERC20/IERC20.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Interface of the ERC20 standard as defined in the EIP.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the amount of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the amount of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves `amount` tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Moves `amount` tokens from `from` to `to` using the\n     * allowance mechanism. `amount` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 amount) external returns (bool);\n}\n"},"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (token/ERC20/utils/SafeERC20.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../IERC20.sol\";\nimport \"../extensions/IERC20Permit.sol\";\nimport \"../../../utils/Address.sol\";\n\n/**\n * @title SafeERC20\n * @dev Wrappers around ERC20 operations that throw on failure (when the token\n * contract returns false). Tokens that return no value (and instead revert or\n * throw on failure) are also supported, non-reverting calls are assumed to be\n * successful.\n * To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,\n * which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\n */\nlibrary SafeERC20 {\n    using Address for address;\n\n    /**\n     * @dev Transfer `value` amount of `token` from the calling contract to `to`. If `token` returns no value,\n     * non-reverting calls are assumed to be successful.\n     */\n    function safeTransfer(IERC20 token, address to, uint256 value) internal {\n        _callOptionalReturn(token, abi.encodeWithSelector(token.transfer.selector, to, value));\n    }\n\n    /**\n     * @dev Transfer `value` amount of `token` from `from` to `to`, spending the approval given by `from` to the\n     * calling contract. If `token` returns no value, non-reverting calls are assumed to be successful.\n     */\n    function safeTransferFrom(IERC20 token, address from, address to, uint256 value) internal {\n        _callOptionalReturn(token, abi.encodeWithSelector(token.transferFrom.selector, from, to, value));\n    }\n\n    /**\n     * @dev Deprecated. This function has issues similar to the ones found in\n     * {IERC20-approve}, and its usage is discouraged.\n     *\n     * Whenever possible, use {safeIncreaseAllowance} and\n     * {safeDecreaseAllowance} instead.\n     */\n    function safeApprove(IERC20 token, address spender, uint256 value) internal {\n        // safeApprove should only be called when setting an initial allowance,\n        // or when resetting it to zero. To increase and decrease it, use\n        // 'safeIncreaseAllowance' and 'safeDecreaseAllowance'\n        require(\n            (value == 0) || (token.allowance(address(this), spender) == 0),\n            \"SafeERC20: approve from non-zero to non-zero allowance\"\n        );\n        _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, value));\n    }\n\n    /**\n     * @dev Increase the calling contract's allowance toward `spender` by `value`. If `token` returns no value,\n     * non-reverting calls are assumed to be successful.\n     */\n    function safeIncreaseAllowance(IERC20 token, address spender, uint256 value) internal {\n        uint256 oldAllowance = token.allowance(address(this), spender);\n        _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, oldAllowance + value));\n    }\n\n    /**\n     * @dev Decrease the calling contract's allowance toward `spender` by `value`. If `token` returns no value,\n     * non-reverting calls are assumed to be successful.\n     */\n    function safeDecreaseAllowance(IERC20 token, address spender, uint256 value) internal {\n        unchecked {\n            uint256 oldAllowance = token.allowance(address(this), spender);\n            require(oldAllowance >= value, \"SafeERC20: decreased allowance below zero\");\n            _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, oldAllowance - value));\n        }\n    }\n\n    /**\n     * @dev Set the calling contract's allowance toward `spender` to `value`. If `token` returns no value,\n     * non-reverting calls are assumed to be successful. Compatible with tokens that require the approval to be set to\n     * 0 before setting it to a non-zero value.\n     */\n    function forceApprove(IERC20 token, address spender, uint256 value) internal {\n        bytes memory approvalCall = abi.encodeWithSelector(token.approve.selector, spender, value);\n\n        if (!_callOptionalReturnBool(token, approvalCall)) {\n            _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, 0));\n            _callOptionalReturn(token, approvalCall);\n        }\n    }\n\n    /**\n     * @dev Use a ERC-2612 signature to set the `owner` approval toward `spender` on `token`.\n     * Revert on invalid signature.\n     */\n    function safePermit(\n        IERC20Permit token,\n        address owner,\n        address spender,\n        uint256 value,\n        uint256 deadline,\n        uint8 v,\n        bytes32 r,\n        bytes32 s\n    ) internal {\n        uint256 nonceBefore = token.nonces(owner);\n        token.permit(owner, spender, value, deadline, v, r, s);\n        uint256 nonceAfter = token.nonces(owner);\n        require(nonceAfter == nonceBefore + 1, \"SafeERC20: permit did not succeed\");\n    }\n\n    /**\n     * @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n     * on the return value: the return value is optional (but if data is returned, it must not be false).\n     * @param token The token targeted by the call.\n     * @param data The call data (encoded using abi.encode or one of its variants).\n     */\n    function _callOptionalReturn(IERC20 token, bytes memory data) private {\n        // We need to perform a low level call here, to bypass Solidity's return data size checking mechanism, since\n        // we're implementing it ourselves. We use {Address-functionCall} to perform this call, which verifies that\n        // the target address contains contract code and also asserts for success in the low-level call.\n\n        bytes memory returndata = address(token).functionCall(data, \"SafeERC20: low-level call failed\");\n        require(returndata.length == 0 || abi.decode(returndata, (bool)), \"SafeERC20: ERC20 operation did not succeed\");\n    }\n\n    /**\n     * @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n     * on the return value: the return value is optional (but if data is returned, it must not be false).\n     * @param token The token targeted by the call.\n     * @param data The call data (encoded using abi.encode or one of its variants).\n     *\n     * This is a variant of {_callOptionalReturn} that silents catches all reverts and returns a bool instead.\n     */\n    function _callOptionalReturnBool(IERC20 token, bytes memory data) private returns (bool) {\n        // We need to perform a low level call here, to bypass Solidity's return data size checking mechanism, since\n        // we're implementing it ourselves. We cannot use {Address-functionCall} here since this should return false\n        // and not revert is the subcall reverts.\n\n        (bool success, bytes memory returndata) = address(token).call(data);\n        return\n            success && (returndata.length == 0 || abi.decode(returndata, (bool))) && Address.isContract(address(token));\n    }\n}\n"},"@openzeppelin/contracts/utils/Address.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (utils/Address.sol)\n\npragma solidity ^0.8.1;\n\n/**\n * @dev Collection of functions related to the address type\n */\nlibrary Address {\n    /**\n     * @dev Returns true if `account` is a contract.\n     *\n     * [IMPORTANT]\n     * ====\n     * It is unsafe to assume that an address for which this function returns\n     * false is an externally-owned account (EOA) and not a contract.\n     *\n     * Among others, `isContract` will return false for the following\n     * types of addresses:\n     *\n     *  - an externally-owned account\n     *  - a contract in construction\n     *  - an address where a contract will be created\n     *  - an address where a contract lived, but was destroyed\n     *\n     * Furthermore, `isContract` will also return true if the target contract within\n     * the same transaction is already scheduled for destruction by `SELFDESTRUCT`,\n     * which only has an effect at the end of a transaction.\n     * ====\n     *\n     * [IMPORTANT]\n     * ====\n     * You shouldn't rely on `isContract` to protect against flash loan attacks!\n     *\n     * Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\n     * like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\n     * constructor.\n     * ====\n     */\n    function isContract(address account) internal view returns (bool) {\n        // This method relies on extcodesize/address.code.length, which returns 0\n        // for contracts in construction, since the code is only stored at the end\n        // of the constructor execution.\n\n        return account.code.length > 0;\n    }\n\n    /**\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n     * `recipient`, forwarding all available gas and reverting on errors.\n     *\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\n     * imposed by `transfer`, making them unable to receive funds via\n     * `transfer`. {sendValue} removes this limitation.\n     *\n     * https://consensys.net/diligence/blog/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n     *\n     * IMPORTANT: because control is transferred to `recipient`, care must be\n     * taken to not create reentrancy vulnerabilities. Consider using\n     * {ReentrancyGuard} or the\n     * https://solidity.readthedocs.io/en/v0.8.0/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\n     */\n    function sendValue(address payable recipient, uint256 amount) internal {\n        require(address(this).balance >= amount, \"Address: insufficient balance\");\n\n        (bool success, ) = recipient.call{value: amount}(\"\");\n        require(success, \"Address: unable to send value, recipient may have reverted\");\n    }\n\n    /**\n     * @dev Performs a Solidity function call using a low level `call`. A\n     * plain `call` is an unsafe replacement for a function call: use this\n     * function instead.\n     *\n     * If `target` reverts with a revert reason, it is bubbled up by this\n     * function (like regular Solidity function calls).\n     *\n     * Returns the raw returned data. To convert to the expected return value,\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n     *\n     * Requirements:\n     *\n     * - `target` must be a contract.\n     * - calling `target` with `data` must not revert.\n     *\n     * _Available since v3.1._\n     */\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, 0, \"Address: low-level call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\n     * `errorMessage` as a fallback revert reason when `target` reverts.\n     *\n     * _Available since v3.1._\n     */\n    function functionCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, 0, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but also transferring `value` wei to `target`.\n     *\n     * Requirements:\n     *\n     * - the calling contract must have an ETH balance of at least `value`.\n     * - the called Solidity function must be `payable`.\n     *\n     * _Available since v3.1._\n     */\n    function functionCallWithValue(address target, bytes memory data, uint256 value) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, value, \"Address: low-level call with value failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\n     *\n     * _Available since v3.1._\n     */\n    function functionCallWithValue(\n        address target,\n        bytes memory data,\n        uint256 value,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        require(address(this).balance >= value, \"Address: insufficient balance for call\");\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a static call.\n     *\n     * _Available since v3.3._\n     */\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\n        return functionStaticCall(target, data, \"Address: low-level static call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n     * but performing a static call.\n     *\n     * _Available since v3.3._\n     */\n    function functionStaticCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal view returns (bytes memory) {\n        (bool success, bytes memory returndata) = target.staticcall(data);\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a delegate call.\n     *\n     * _Available since v3.4._\n     */\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\n        return functionDelegateCall(target, data, \"Address: low-level delegate call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n     * but performing a delegate call.\n     *\n     * _Available since v3.4._\n     */\n    function functionDelegateCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        (bool success, bytes memory returndata) = target.delegatecall(data);\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Tool to verify that a low level call to smart-contract was successful, and revert (either by bubbling\n     * the revert reason or using the provided one) in case of unsuccessful call or if target was not a contract.\n     *\n     * _Available since v4.8._\n     */\n    function verifyCallResultFromTarget(\n        address target,\n        bool success,\n        bytes memory returndata,\n        string memory errorMessage\n    ) internal view returns (bytes memory) {\n        if (success) {\n            if (returndata.length == 0) {\n                // only check isContract if the call was successful and the return data is empty\n                // otherwise we already know that it was a contract\n                require(isContract(target), \"Address: call to non-contract\");\n            }\n            return returndata;\n        } else {\n            _revert(returndata, errorMessage);\n        }\n    }\n\n    /**\n     * @dev Tool to verify that a low level call was successful, and revert if it wasn't, either by bubbling the\n     * revert reason or using the provided one.\n     *\n     * _Available since v4.3._\n     */\n    function verifyCallResult(\n        bool success,\n        bytes memory returndata,\n        string memory errorMessage\n    ) internal pure returns (bytes memory) {\n        if (success) {\n            return returndata;\n        } else {\n            _revert(returndata, errorMessage);\n        }\n    }\n\n    function _revert(bytes memory returndata, string memory errorMessage) private pure {\n        // Look for revert reason and bubble it up if present\n        if (returndata.length > 0) {\n            // The easiest way to bubble the revert reason is using memory via assembly\n            /// @solidity memory-safe-assembly\n            assembly {\n                let returndata_size := mload(returndata)\n                revert(add(32, returndata), returndata_size)\n            }\n        } else {\n            revert(errorMessage);\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/Context.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n}\n"},"@openzeppelin/contracts/utils/introspection/ERC165.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/introspection/ERC165.sol)\n\npragma solidity ^0.8.0;\n\nimport \"./IERC165.sol\";\n\n/**\n * @dev Implementation of the {IERC165} interface.\n *\n * Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check\n * for the additional interface id that will be supported. For example:\n *\n * ```solidity\n * function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n *     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\n * }\n * ```\n *\n * Alternatively, {ERC165Storage} provides an easier to use but more expensive implementation.\n */\nabstract contract ERC165 is IERC165 {\n    /**\n     * @dev See {IERC165-supportsInterface}.\n     */\n    function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n        return interfaceId == type(IERC165).interfaceId;\n    }\n}\n"},"@openzeppelin/contracts/utils/introspection/IERC165.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/introspection/IERC165.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Interface of the ERC165 standard, as defined in the\n * https://eips.ethereum.org/EIPS/eip-165[EIP].\n *\n * Implementers can declare support of contract interfaces, which can then be\n * queried by others ({ERC165Checker}).\n *\n * For an implementation, see {ERC165}.\n */\ninterface IERC165 {\n    /**\n     * @dev Returns true if this contract implements the interface defined by\n     * `interfaceId`. See the corresponding\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\n     * to learn more about how these ids are created.\n     *\n     * This function call must use less than 30 000 gas.\n     */\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\n}\n"},"@openzeppelin/contracts/utils/math/Math.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (utils/math/Math.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Standard math utilities missing in the Solidity language.\n */\nlibrary Math {\n    enum Rounding {\n        Down, // Toward negative infinity\n        Up, // Toward infinity\n        Zero // Toward zero\n    }\n\n    /**\n     * @dev Returns the largest of two numbers.\n     */\n    function max(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a > b ? a : b;\n    }\n\n    /**\n     * @dev Returns the smallest of two numbers.\n     */\n    function min(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a < b ? a : b;\n    }\n\n    /**\n     * @dev Returns the average of two numbers. The result is rounded towards\n     * zero.\n     */\n    function average(uint256 a, uint256 b) internal pure returns (uint256) {\n        // (a + b) / 2 can overflow.\n        return (a & b) + (a ^ b) / 2;\n    }\n\n    /**\n     * @dev Returns the ceiling of the division of two numbers.\n     *\n     * This differs from standard division with `/` in that it rounds up instead\n     * of rounding down.\n     */\n    function ceilDiv(uint256 a, uint256 b) internal pure returns (uint256) {\n        // (a + b - 1) / b can overflow on addition, so we distribute.\n        return a == 0 ? 0 : (a - 1) / b + 1;\n    }\n\n    /**\n     * @notice Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or denominator == 0\n     * @dev Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv)\n     * with further edits by Uniswap Labs also under MIT license.\n     */\n    function mulDiv(uint256 x, uint256 y, uint256 denominator) internal pure returns (uint256 result) {\n        unchecked {\n            // 512-bit multiply [prod1 prod0] = x * y. Compute the product mod 2^256 and mod 2^256 - 1, then use\n            // use the Chinese Remainder Theorem to reconstruct the 512 bit result. The result is stored in two 256\n            // variables such that product = prod1 * 2^256 + prod0.\n            uint256 prod0; // Least significant 256 bits of the product\n            uint256 prod1; // Most significant 256 bits of the product\n            assembly {\n                let mm := mulmod(x, y, not(0))\n                prod0 := mul(x, y)\n                prod1 := sub(sub(mm, prod0), lt(mm, prod0))\n            }\n\n            // Handle non-overflow cases, 256 by 256 division.\n            if (prod1 == 0) {\n                // Solidity will revert if denominator == 0, unlike the div opcode on its own.\n                // The surrounding unchecked block does not change this fact.\n                // See https://docs.soliditylang.org/en/latest/control-structures.html#checked-or-unchecked-arithmetic.\n                return prod0 / denominator;\n            }\n\n            // Make sure the result is less than 2^256. Also prevents denominator == 0.\n            require(denominator > prod1, \"Math: mulDiv overflow\");\n\n            ///////////////////////////////////////////////\n            // 512 by 256 division.\n            ///////////////////////////////////////////////\n\n            // Make division exact by subtracting the remainder from [prod1 prod0].\n            uint256 remainder;\n            assembly {\n                // Compute remainder using mulmod.\n                remainder := mulmod(x, y, denominator)\n\n                // Subtract 256 bit number from 512 bit number.\n                prod1 := sub(prod1, gt(remainder, prod0))\n                prod0 := sub(prod0, remainder)\n            }\n\n            // Factor powers of two out of denominator and compute largest power of two divisor of denominator. Always >= 1.\n            // See https://cs.stackexchange.com/q/138556/92363.\n\n            // Does not overflow because the denominator cannot be zero at this stage in the function.\n            uint256 twos = denominator & (~denominator + 1);\n            assembly {\n                // Divide denominator by twos.\n                denominator := div(denominator, twos)\n\n                // Divide [prod1 prod0] by twos.\n                prod0 := div(prod0, twos)\n\n                // Flip twos such that it is 2^256 / twos. If twos is zero, then it becomes one.\n                twos := add(div(sub(0, twos), twos), 1)\n            }\n\n            // Shift in bits from prod1 into prod0.\n            prod0 |= prod1 * twos;\n\n            // Invert denominator mod 2^256. Now that denominator is an odd number, it has an inverse modulo 2^256 such\n            // that denominator * inv = 1 mod 2^256. Compute the inverse by starting with a seed that is correct for\n            // four bits. That is, denominator * inv = 1 mod 2^4.\n            uint256 inverse = (3 * denominator) ^ 2;\n\n            // Use the Newton-Raphson iteration to improve the precision. Thanks to Hensel's lifting lemma, this also works\n            // in modular arithmetic, doubling the correct bits in each step.\n            inverse *= 2 - denominator * inverse; // inverse mod 2^8\n            inverse *= 2 - denominator * inverse; // inverse mod 2^16\n            inverse *= 2 - denominator * inverse; // inverse mod 2^32\n            inverse *= 2 - denominator * inverse; // inverse mod 2^64\n            inverse *= 2 - denominator * inverse; // inverse mod 2^128\n            inverse *= 2 - denominator * inverse; // inverse mod 2^256\n\n            // Because the division is now exact we can divide by multiplying with the modular inverse of denominator.\n            // This will give us the correct result modulo 2^256. Since the preconditions guarantee that the outcome is\n            // less than 2^256, this is the final result. We don't need to compute the high bits of the result and prod1\n            // is no longer required.\n            result = prod0 * inverse;\n            return result;\n        }\n    }\n\n    /**\n     * @notice Calculates x * y / denominator with full precision, following the selected rounding direction.\n     */\n    function mulDiv(uint256 x, uint256 y, uint256 denominator, Rounding rounding) internal pure returns (uint256) {\n        uint256 result = mulDiv(x, y, denominator);\n        if (rounding == Rounding.Up && mulmod(x, y, denominator) > 0) {\n            result += 1;\n        }\n        return result;\n    }\n\n    /**\n     * @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded down.\n     *\n     * Inspired by Henry S. Warren, Jr.'s \"Hacker's Delight\" (Chapter 11).\n     */\n    function sqrt(uint256 a) internal pure returns (uint256) {\n        if (a == 0) {\n            return 0;\n        }\n\n        // For our first guess, we get the biggest power of 2 which is smaller than the square root of the target.\n        //\n        // We know that the \"msb\" (most significant bit) of our target number `a` is a power of 2 such that we have\n        // `msb(a) <= a < 2*msb(a)`. This value can be written `msb(a)=2**k` with `k=log2(a)`.\n        //\n        // This can be rewritten `2**log2(a) <= a < 2**(log2(a) + 1)`\n        // → `sqrt(2**k) <= sqrt(a) < sqrt(2**(k+1))`\n        // → `2**(k/2) <= sqrt(a) < 2**((k+1)/2) <= 2**(k/2 + 1)`\n        //\n        // Consequently, `2**(log2(a) / 2)` is a good first approximation of `sqrt(a)` with at least 1 correct bit.\n        uint256 result = 1 << (log2(a) >> 1);\n\n        // At this point `result` is an estimation with one bit of precision. We know the true value is a uint128,\n        // since it is the square root of a uint256. Newton's method converges quadratically (precision doubles at\n        // every iteration). We thus need at most 7 iteration to turn our partial result with one bit of precision\n        // into the expected uint128 result.\n        unchecked {\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            return min(result, a / result);\n        }\n    }\n\n    /**\n     * @notice Calculates sqrt(a), following the selected rounding direction.\n     */\n    function sqrt(uint256 a, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = sqrt(a);\n            return result + (rounding == Rounding.Up && result * result < a ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 2, rounded down, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log2(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >> 128 > 0) {\n                value >>= 128;\n                result += 128;\n            }\n            if (value >> 64 > 0) {\n                value >>= 64;\n                result += 64;\n            }\n            if (value >> 32 > 0) {\n                value >>= 32;\n                result += 32;\n            }\n            if (value >> 16 > 0) {\n                value >>= 16;\n                result += 16;\n            }\n            if (value >> 8 > 0) {\n                value >>= 8;\n                result += 8;\n            }\n            if (value >> 4 > 0) {\n                value >>= 4;\n                result += 4;\n            }\n            if (value >> 2 > 0) {\n                value >>= 2;\n                result += 2;\n            }\n            if (value >> 1 > 0) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 2, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log2(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log2(value);\n            return result + (rounding == Rounding.Up && 1 << result < value ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 10, rounded down, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log10(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >= 10 ** 64) {\n                value /= 10 ** 64;\n                result += 64;\n            }\n            if (value >= 10 ** 32) {\n                value /= 10 ** 32;\n                result += 32;\n            }\n            if (value >= 10 ** 16) {\n                value /= 10 ** 16;\n                result += 16;\n            }\n            if (value >= 10 ** 8) {\n                value /= 10 ** 8;\n                result += 8;\n            }\n            if (value >= 10 ** 4) {\n                value /= 10 ** 4;\n                result += 4;\n            }\n            if (value >= 10 ** 2) {\n                value /= 10 ** 2;\n                result += 2;\n            }\n            if (value >= 10 ** 1) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 10, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log10(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log10(value);\n            return result + (rounding == Rounding.Up && 10 ** result < value ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 256, rounded down, of a positive value.\n     * Returns 0 if given 0.\n     *\n     * Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string.\n     */\n    function log256(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >> 128 > 0) {\n                value >>= 128;\n                result += 16;\n            }\n            if (value >> 64 > 0) {\n                value >>= 64;\n                result += 8;\n            }\n            if (value >> 32 > 0) {\n                value >>= 32;\n                result += 4;\n            }\n            if (value >> 16 > 0) {\n                value >>= 16;\n                result += 2;\n            }\n            if (value >> 8 > 0) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 256, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log256(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log256(value);\n            return result + (rounding == Rounding.Up && 1 << (result << 3) < value ? 1 : 0);\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/math/SafeMath.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (utils/math/SafeMath.sol)\n\npragma solidity ^0.8.0;\n\n// CAUTION\n// This version of SafeMath should only be used with Solidity 0.8 or later,\n// because it relies on the compiler's built in overflow checks.\n\n/**\n * @dev Wrappers over Solidity's arithmetic operations.\n *\n * NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler\n * now has built in overflow checking.\n */\nlibrary SafeMath {\n    /**\n     * @dev Returns the addition of two unsigned integers, with an overflow flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryAdd(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            uint256 c = a + b;\n            if (c < a) return (false, 0);\n            return (true, c);\n        }\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, with an overflow flag.\n     *\n     * _Available since v3.4._\n     */\n    function trySub(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b > a) return (false, 0);\n            return (true, a - b);\n        }\n    }\n\n    /**\n     * @dev Returns the multiplication of two unsigned integers, with an overflow flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryMul(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            // Gas optimization: this is cheaper than requiring 'a' not being zero, but the\n            // benefit is lost if 'b' is also tested.\n            // See: https://github.com/OpenZeppelin/openzeppelin-contracts/pull/522\n            if (a == 0) return (true, 0);\n            uint256 c = a * b;\n            if (c / a != b) return (false, 0);\n            return (true, c);\n        }\n    }\n\n    /**\n     * @dev Returns the division of two unsigned integers, with a division by zero flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryDiv(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b == 0) return (false, 0);\n            return (true, a / b);\n        }\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryMod(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b == 0) return (false, 0);\n            return (true, a % b);\n        }\n    }\n\n    /**\n     * @dev Returns the addition of two unsigned integers, reverting on\n     * overflow.\n     *\n     * Counterpart to Solidity's `+` operator.\n     *\n     * Requirements:\n     *\n     * - Addition cannot overflow.\n     */\n    function add(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a + b;\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, reverting on\n     * overflow (when the result is negative).\n     *\n     * Counterpart to Solidity's `-` operator.\n     *\n     * Requirements:\n     *\n     * - Subtraction cannot overflow.\n     */\n    function sub(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a - b;\n    }\n\n    /**\n     * @dev Returns the multiplication of two unsigned integers, reverting on\n     * overflow.\n     *\n     * Counterpart to Solidity's `*` operator.\n     *\n     * Requirements:\n     *\n     * - Multiplication cannot overflow.\n     */\n    function mul(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a * b;\n    }\n\n    /**\n     * @dev Returns the integer division of two unsigned integers, reverting on\n     * division by zero. The result is rounded towards zero.\n     *\n     * Counterpart to Solidity's `/` operator.\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function div(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a / b;\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n     * reverting when dividing by zero.\n     *\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\n     * invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function mod(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a % b;\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, reverting with custom message on\n     * overflow (when the result is negative).\n     *\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\n     * message unnecessarily. For custom revert reasons use {trySub}.\n     *\n     * Counterpart to Solidity's `-` operator.\n     *\n     * Requirements:\n     *\n     * - Subtraction cannot overflow.\n     */\n    function sub(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\n        unchecked {\n            require(b <= a, errorMessage);\n            return a - b;\n        }\n    }\n\n    /**\n     * @dev Returns the integer division of two unsigned integers, reverting with custom message on\n     * division by zero. The result is rounded towards zero.\n     *\n     * Counterpart to Solidity's `/` operator. Note: this function uses a\n     * `revert` opcode (which leaves remaining gas untouched) while Solidity\n     * uses an invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function div(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\n        unchecked {\n            require(b > 0, errorMessage);\n            return a / b;\n        }\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n     * reverting with custom message when dividing by zero.\n     *\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\n     * message unnecessarily. For custom revert reasons use {tryMod}.\n     *\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\n     * invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function mod(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\n        unchecked {\n            require(b > 0, errorMessage);\n            return a % b;\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/math/SignedMath.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.8.0) (utils/math/SignedMath.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Standard signed math utilities missing in the Solidity language.\n */\nlibrary SignedMath {\n    /**\n     * @dev Returns the largest of two signed numbers.\n     */\n    function max(int256 a, int256 b) internal pure returns (int256) {\n        return a > b ? a : b;\n    }\n\n    /**\n     * @dev Returns the smallest of two signed numbers.\n     */\n    function min(int256 a, int256 b) internal pure returns (int256) {\n        return a < b ? a : b;\n    }\n\n    /**\n     * @dev Returns the average of two signed numbers without overflow.\n     * The result is rounded towards zero.\n     */\n    function average(int256 a, int256 b) internal pure returns (int256) {\n        // Formula from the book \"Hacker's Delight\"\n        int256 x = (a & b) + ((a ^ b) >> 1);\n        return x + (int256(uint256(x) >> 255) & (a ^ b));\n    }\n\n    /**\n     * @dev Returns the absolute unsigned value of a signed value.\n     */\n    function abs(int256 n) internal pure returns (uint256) {\n        unchecked {\n            // must be unchecked in order to support `n = type(int256).min`\n            return uint256(n >= 0 ? n : -n);\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/Strings.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (utils/Strings.sol)\n\npragma solidity ^0.8.0;\n\nimport \"./math/Math.sol\";\nimport \"./math/SignedMath.sol\";\n\n/**\n * @dev String operations.\n */\nlibrary Strings {\n    bytes16 private constant _SYMBOLS = \"0123456789abcdef\";\n    uint8 private constant _ADDRESS_LENGTH = 20;\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` decimal representation.\n     */\n    function toString(uint256 value) internal pure returns (string memory) {\n        unchecked {\n            uint256 length = Math.log10(value) + 1;\n            string memory buffer = new string(length);\n            uint256 ptr;\n            /// @solidity memory-safe-assembly\n            assembly {\n                ptr := add(buffer, add(32, length))\n            }\n            while (true) {\n                ptr--;\n                /// @solidity memory-safe-assembly\n                assembly {\n                    mstore8(ptr, byte(mod(value, 10), _SYMBOLS))\n                }\n                value /= 10;\n                if (value == 0) break;\n            }\n            return buffer;\n        }\n    }\n\n    /**\n     * @dev Converts a `int256` to its ASCII `string` decimal representation.\n     */\n    function toString(int256 value) internal pure returns (string memory) {\n        return string(abi.encodePacked(value < 0 ? \"-\" : \"\", toString(SignedMath.abs(value))));\n    }\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation.\n     */\n    function toHexString(uint256 value) internal pure returns (string memory) {\n        unchecked {\n            return toHexString(value, Math.log256(value) + 1);\n        }\n    }\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length.\n     */\n    function toHexString(uint256 value, uint256 length) internal pure returns (string memory) {\n        bytes memory buffer = new bytes(2 * length + 2);\n        buffer[0] = \"0\";\n        buffer[1] = \"x\";\n        for (uint256 i = 2 * length + 1; i > 1; --i) {\n            buffer[i] = _SYMBOLS[value & 0xf];\n            value >>= 4;\n        }\n        require(value == 0, \"Strings: hex length insufficient\");\n        return string(buffer);\n    }\n\n    /**\n     * @dev Converts an `address` with fixed length of 20 bytes to its not checksummed ASCII `string` hexadecimal representation.\n     */\n    function toHexString(address addr) internal pure returns (string memory) {\n        return toHexString(uint256(uint160(addr)), _ADDRESS_LENGTH);\n    }\n\n    /**\n     * @dev Returns true if the two strings are equal.\n     */\n    function equal(string memory a, string memory b) internal pure returns (bool) {\n        return keccak256(bytes(a)) == keccak256(bytes(b));\n    }\n}\n"},"contracts/ERC20Token.sol":{"content":"// SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.9;\n\nimport \"@openzeppelin/contracts/token/ERC20/ERC20.sol\";\n\ncontract ERC20Token is ERC20 {\n    constructor(string memory name, string memory symbol) ERC20(name, symbol) {\n        // Mint some initial supply of the token (optional)\n        _mint(msg.sender, 1_000_000_000 * 10 ** 18);\n    }\n}\n"},"contracts/interfaces/ERC20Token.sol":{"content":""},"contracts/SobaToken.sol":{"content":"// SPDX-License-Identifier: UNLICENSED\npragma solidity ^0.8.9;\n\nimport \"@openzeppelin/contracts/token/ERC20/ERC20.sol\";\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\nimport \"@openzeppelin/contracts/access/AccessControl.sol\";\n\ncontract SobaToken is ERC20, Ownable, AccessControl {\n    bytes32 public constant MINTER_ROLE = keccak256(\"MINTER_ROLE\");\n\n    constructor(string memory name, string memory symbol) ERC20(name, symbol) {\n        _mint(msg.sender, 1_000_000_000 * 10 ** 18);\n        _setupRole(DEFAULT_ADMIN_ROLE, msg.sender);\n        _setupRole(MINTER_ROLE, msg.sender);\n    }\n\n    function mint(address _to, uint256 _amount) public {\n        require(hasRole(MINTER_ROLE, msg.sender), \"Caller is not a minter\");\n        _mint(_to, _amount);\n    }\n\n    function decimals() public view virtual override returns (uint8) {\n        return 18;\n    }\n\n    function transferMinterRole(address newMinter) public onlyOwner {\n        require(hasRole(MINTER_ROLE, msg.sender), \"Caller is not a minter\");\n        revokeRole(MINTER_ROLE, msg.sender);\n        _grantRole(MINTER_ROLE, newMinter);\n    }\n}\n"},"contracts/YieldFarm.sol":{"content":"// SPDX-License-Identifier: UNLICENSED\npragma solidity ^0.8.9;\n\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\nimport \"@openzeppelin/contracts/utils/math/SafeMath.sol\";\nimport \"@openzeppelin/contracts/token/ERC20/ERC20.sol\";\nimport \"@openzeppelin/contracts/token/ERC20/IERC20.sol\";\nimport \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\";\n\nimport \"./SobaToken.sol\";\n\ncontract YieldFarm is Ownable {\n    using SafeMath for uint256;\n    using SafeERC20 for IERC20;\n\n    // Farm's user info\n    struct UserInfo {\n        uint256 amount; // LP tokens user provided\n        uint256 rewardDebt; //\n        /**\n            whenever a user deposits or withdraw LP tokens in a pool\n            the pool\n\n            the pool's accCakePerShare and lastRewardBlock gets updated\n            User receives the pending reward sent their address\n            User amount/rewardDebt gets updated\n\n            The term accCakePerShare mean keep track the amount of CAKE earned\n            per LP token(share) in specific pool\n            pending reward = (user.amount * pool.accCakePerShare) - user.rewardDebt\n\n            When a user claims their pending rewards, the following actions occur:\n            a. The pending reward is sent to the user's address.\n            b. The user's amount is updated to reflect the current number of LP tokens they have provided.\n            c. The user's rewardDebt is updated to the current value of (user.amount * pool.accSobaPerShare), \n            ensuring that any future pending rewards will be calculated accurately.\n        */\n    }\n\n    struct PoolInfo {\n        IERC20 lpToken; // address of LP token contract\n        uint256 allocPoint; // allocation point assign to the pool.\n        uint256 lastRewardBlock; // last time reward distritubed\n        uint256 accSobaPerShare;\n        uint256 totalStaked;\n    }\n\n    // Sobaja Token\n    SobaToken public sobaja;\n\n    address public devAddress; // for every 100 Soba, 10 is sent to dev address\n    uint256 public sobaPerBlock; // sobaja token created per block\n    uint256 public BONUS_MULTIPLIER = 1; // bonus mulitiplier for early sobaja makers\n\n    // info of each pool\n    PoolInfo[] public poolInfo;\n    // info of each user that stakes LP tokens.\n    mapping(uint256 => mapping(address => UserInfo)) public userInfo; // keep track based on poolID\n    // total Allocation points, sum of all allocation points in all pools\n    uint256 public totalAllocPoint = 0; // if a pool jave 10 allocation points, total allocations all pool is 100 then this pool will receive 10% of newly minted Soba token\n    // the block number when SOBA mining start\n    uint256 public startBlock;\n\n    /* EVENTS */\n\n    event Deposit(\n        address indexed user,\n        uint256 indexed poolId,\n        uint256 indexed amount\n    );\n\n    event Withdraw(\n        address indexed user,\n        uint256 indexed poolId,\n        uint256 amount\n    );\n\n    event EmergencyWithdraw(\n        address indexed user,\n        uint256 indexed poolId,\n        uint256 amount\n    );\n\n    constructor(\n        SobaToken _sobaja,\n        address _devaddr,\n        uint256 _sobaPerBlock,\n        uint256 _startBlock\n    ) {\n        sobaja = _sobaja;\n        devAddress = _devaddr;\n        sobaPerBlock = _sobaPerBlock;\n        startBlock = _startBlock;\n\n        // staking pool\n        // create first pool\n        poolInfo.push(\n            PoolInfo({\n                lpToken: _sobaja,\n                allocPoint: 1000,\n                lastRewardBlock: startBlock,\n                accSobaPerShare: 0,\n                totalStaked: 0\n            })\n        );\n\n        totalAllocPoint = 1000;\n    }\n\n    // for early user join the farm\n    // owner update the rate for reward\n    function updateMultiplier(uint256 multiplierNumber) public onlyOwner {\n        BONUS_MULTIPLIER = multiplierNumber;\n    }\n\n    function poolLength() external view returns (uint256) {\n        return poolInfo.length;\n    }\n\n    function block() external view returns (uint) {\n        return block.number;\n    }\n\n    // Add new LP to the pool, only owner\n    function add(\n        uint256 _allocPoint,\n        IERC20 _lpToken,\n        bool _withUpdate\n    ) public onlyOwner {\n        // when adding a new pool, ensure that all existing pools have up to date data\n        if (_withUpdate) {\n            massUpdatePools();\n        }\n        // if block at that present > startBlock so lastRewardBlock = block.number if not = startBlock\n        uint256 lastRewardBlock = block.number > startBlock\n            ? block.number\n            : startBlock;\n\n        totalAllocPoint = totalAllocPoint.add(_allocPoint);\n        poolInfo.push(\n            PoolInfo({\n                lpToken: _lpToken,\n                allocPoint: _allocPoint,\n                lastRewardBlock: lastRewardBlock,\n                accSobaPerShare: 0,\n                totalStaked: 0\n            })\n        );\n        updateStakingPool();\n    }\n\n    // update the give pool's Soba allocation point, only called by owner\n    function set(\n        uint256 _poolId,\n        uint256 _allocPoint,\n        bool _withUpdate\n    ) public onlyOwner {\n        if (_withUpdate) {\n            massUpdatePools();\n        }\n        uint256 prevAllocPoint = poolInfo[_poolId].allocPoint;\n        poolInfo[_poolId].allocPoint = _allocPoint;\n        if (prevAllocPoint != _allocPoint) {\n            totalAllocPoint = totalAllocPoint.sub(prevAllocPoint).add(\n                _allocPoint\n            );\n            updateStakingPool();\n        }\n    }\n\n    // update the allocation points and the allocation points for the first pool in poolInfo[] array\n    function updateStakingPool() internal {\n        uint256 length = poolInfo.length;\n        uint256 points = 0;\n        // from second pool\n        for (uint256 poolId = 1; poolId < length; ++poolId) {\n            points = points.add(poolInfo[poolId].allocPoint);\n        }\n        if (points != 0) {\n            points = points.div(3); // normalization\n            totalAllocPoint = totalAllocPoint.sub(poolInfo[0].allocPoint).add(\n                points\n            );\n            poolInfo[0].allocPoint = points;\n        }\n    }\n\n    // return reward mulitiplier over the given _from to _to block\n    function getMultiplier(\n        uint256 _from,\n        uint256 _to\n    ) public view returns (uint256) {\n        return _to.sub(_from).mul(BONUS_MULTIPLIER);\n    }\n\n    // pending SOBA on front-end\n    function pendingSoba(\n        uint256 _poolId,\n        address _user\n    ) external view returns (uint256) {\n        PoolInfo storage pool = poolInfo[_poolId];\n        UserInfo storage user = userInfo[_poolId][_user];\n\n        uint256 accSobaPerShare = pool.accSobaPerShare;\n        uint256 lpSupply = pool.lpToken.balanceOf(address(this));\n        if (block.number > pool.lastRewardBlock && lpSupply != 0) {\n            uint256 multiplier = getMultiplier(\n                pool.lastRewardBlock,\n                block.number\n            );\n            uint256 sobaReward = multiplier\n                .mul(sobaPerBlock)\n                .mul(pool.allocPoint)\n                .div(totalAllocPoint);\n\n            accSobaPerShare = accSobaPerShare.add(\n                sobaReward.mul(1e18).div(lpSupply)\n            );\n        }\n        return user.amount.mul(accSobaPerShare).div(1e18).sub(user.rewardDebt);\n    }\n\n    // update reward variables for all pools\n    function massUpdatePools() public {\n        uint256 length = poolInfo.length;\n        for (uint256 poolId = 0; poolId < length; ++poolId) {\n            updatePool(poolId);\n        }\n    }\n\n    // update reward variables of the given pool\n    function updatePool(uint256 _poolId) public {\n        PoolInfo storage pool = poolInfo[_poolId];\n\n        // if reward already up to date\n        if (block.number <= pool.lastRewardBlock) {\n            return;\n        }\n\n        uint256 lpSupply = pool.lpToken.balanceOf(address(this));\n        if (lpSupply == 0) {\n            pool.lastRewardBlock = block.number;\n            return;\n        }\n\n        // how many reward\n        uint256 multiplier = getMultiplier(pool.lastRewardBlock, block.number);\n\n        uint256 sobaReward = multiplier\n            .mul(sobaPerBlock)\n            .mul(pool.allocPoint)\n            .div(totalAllocPoint);\n\n        sobaja.mint(devAddress, sobaReward.div(10)); // send 10% to dev address\n        sobaja.mint(address(this), sobaReward);\n        pool.accSobaPerShare = pool.accSobaPerShare.add(\n            sobaReward.mul(1e18).div(lpSupply)\n        );\n        pool.lastRewardBlock = block.number;\n    }\n\n    // Deposit LP\n    function deposit(uint256 _poolId, uint256 _amount) public {\n        require(_poolId != 0, \"Pool must exist\");\n\n        PoolInfo storage pool = poolInfo[_poolId];\n        UserInfo storage user = userInfo[_poolId][msg.sender];\n        updatePool(_poolId);\n\n        // amount of Lp tokens that the users has previously staked in the pool\n        if (user.amount > 0) {\n            uint256 pending = user\n                .amount\n                .mul(pool.accSobaPerShare)\n                .div(1e18)\n                .sub(user.rewardDebt);\n            if (pending > 0) {\n                safeSobaTransfer(msg.sender, pending);\n            }\n        }\n        if (_amount > 0) {\n            pool.lpToken.safeTransferFrom(\n                address(msg.sender),\n                address(this),\n                _amount\n            );\n            user.amount = user.amount.add(_amount);\n            pool.totalStaked += _amount;\n        }\n        user.rewardDebt = user.amount.mul(pool.accSobaPerShare).div(1e18);\n        emit Deposit(msg.sender, _poolId, _amount);\n    }\n\n    function withdraw(uint256 _poolId, uint256 _amount) public {\n        require(_poolId != 0, \"Pool must exist\");\n        PoolInfo storage pool = poolInfo[_poolId];\n        UserInfo storage user = userInfo[_poolId][msg.sender];\n        require(user.amount >= _amount, \"Exceed\");\n\n        updatePool(_poolId);\n        uint256 pending = user.amount.mul(pool.accSobaPerShare).div(1e18).sub(\n            user.rewardDebt\n        );\n        if (pending > 0) {\n            safeSobaTransfer(msg.sender, pending);\n        }\n        if (_amount > 0) {\n            user.amount = user.amount.sub(_amount);\n            pool.totalStaked -= _amount;\n            pool.lpToken.safeTransfer(address(msg.sender), _amount);\n        }\n        user.rewardDebt = user.amount.mul(pool.accSobaPerShare).div(1e18);\n        emit Withdraw(msg.sender, _poolId, _amount);\n    }\n\n    // stake\n    function staking(uint256 _amount) public {\n        PoolInfo storage pool = poolInfo[0];\n        UserInfo storage user = userInfo[0][msg.sender];\n\n        updatePool(0); // at pool index 0\n        if (user.amount > 0) {\n            uint256 pending = user\n                .amount\n                .mul(pool.accSobaPerShare)\n                .div(1e18)\n                .sub(user.rewardDebt);\n            if (pending > 0) {\n                safeSobaTransfer(msg.sender, pending);\n            }\n        }\n        if (_amount > 0) {\n            pool.lpToken.safeTransferFrom(\n                address(msg.sender),\n                address(this),\n                _amount\n            );\n            pool.totalStaked += _amount;\n            user.amount = user.amount.add(_amount);\n        }\n        user.rewardDebt = user.amount.mul(pool.accSobaPerShare).div(1e18);\n        emit Deposit(msg.sender, 0, _amount);\n    }\n\n    // withdraw soba token\n    function leaveStaking(uint256 _amount) public {\n        PoolInfo storage pool = poolInfo[0]; // get first pool\n        UserInfo storage user = userInfo[0][msg.sender];\n        require(user.amount >= _amount, \"Exceed\");\n        updatePool(0);\n        uint256 pending = user.amount.mul(pool.accSobaPerShare).div(1e18).sub(\n            user.rewardDebt\n        );\n        if (pending > 0) {\n            safeSobaTransfer(msg.sender, pending);\n        }\n\n        if (_amount > 0) {\n            pool.totalStaked -= _amount;\n            user.amount = user.amount.sub(_amount);\n            pool.lpToken.safeTransfer(address(msg.sender), _amount);\n        }\n        user.rewardDebt = user.amount.mul(pool.accSobaPerShare).div(1e18);\n        emit Withdraw(msg.sender, 0, _amount);\n    }\n\n    // withdraw without caring about reward. Emergency only\n    function emergencyWithdraw(uint256 _poolId) public {\n        PoolInfo storage pool = poolInfo[_poolId];\n        UserInfo storage user = userInfo[_poolId][msg.sender];\n        pool.lpToken.safeTransfer(address(msg.sender), user.amount);\n        pool.totalStaked -= user.amount;\n        emit EmergencyWithdraw(msg.sender, _poolId, user.amount);\n        user.amount = 0;\n        user.rewardDebt = 0;\n    }\n\n    // safe Soba transfer function\n    function safeSobaTransfer(address _to, uint256 _amount) internal {\n        uint256 sobaBalance = sobaja.balanceOf(address(this));\n        if (_amount > sobaBalance) {\n            sobaja.transfer(_to, sobaBalance);\n        } else {\n            sobaja.transfer(_to, _amount);\n        }\n    }\n\n    // update dev address\n    function dev(address _devaddr) public {\n        require(msg.sender == devAddress, \"Address not satisfy\");\n        devAddress = _devaddr;\n    }\n}\n"}},"settings":{"optimizer":{"enabled":true,"mode":"3"},"outputSelection":{"*":{"*":["abi","evm.methodIdentifiers","metadata"],"":["ast"]}}}},"output":{"errors":[{"component":"general","errorCode":"1878","formattedMessage":"Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.\n--> contracts/interfaces/ERC20Token.sol\n\n","message":"SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.","severity":"warning","sourceLocation":{"file":"contracts/interfaces/ERC20Token.sol","start":-1,"end":-1},"type":"Warning"},{"component":"general","errorCode":"3420","formattedMessage":"Warning: Source file does not specify required compiler version! Consider adding \"pragma solidity ^0.8.9;\"\n--> contracts/interfaces/ERC20Token.sol\n\n","message":"Source file does not specify required compiler version! Consider adding \"pragma solidity ^0.8.9;\"","severity":"warning","sourceLocation":{"file":"contracts/interfaces/ERC20Token.sol","start":-1,"end":-1},"type":"Warning"},{"component":"general","errorCode":"2319","formattedMessage":"Warning: This declaration shadows a builtin symbol.\n   --> contracts/YieldFarm.sol:120:5:\n    |\n120 |     function block() external view returns (uint) {\n    |     ^ (Relevant source part starts here and spans across multiple lines).\n\n","message":"This declaration shadows a builtin symbol.","severity":"warning","sourceLocation":{"file":"contracts/YieldFarm.sol","start":3962,"end":4044},"type":"Warning"},{"component":"general","errorCode":null,"formattedMessage":"\n┌──────────────────────────────────────────────────────────────────────────────────────────────────┐\n│ Warning: You are using 'block.number' in your code which we are planning to change in the near   │\n│ future. 'block.number' currently returns the number of the L1 batch. After the changes it will   │\n│ be returning the number of the L2 block.                                                         │\n│ More information here:                                                                           │\n│ https://github.com/zkSync-Community-Hub/zkync-developers/discussions/32                          │\n└──────────────────────────────────────────────────────────────────────────────────────────────────┘\n--> contracts/YieldFarm.sol\n","message":"\n┌──────────────────────────────────────────────────────────────────────────────────────────────────┐\n│ Warning: You are using 'block.number' in your code which we are planning to change in the near   │\n│ future. 'block.number' currently returns the number of the L1 batch. After the changes it will   │\n│ be returning the number of the L2 block.                                                         │\n│ More information here:                                                                           │\n│ https://github.com/zkSync-Community-Hub/zkync-developers/discussions/32                          │\n└──────────────────────────────────────────────────────────────────────────────────────────────────┘","severity":"warning","sourceLocation":{"file":"18","start":4025,"end":4037},"type":"Warning"},{"component":"general","errorCode":null,"formattedMessage":"\n┌──────────────────────────────────────────────────────────────────────────────────────────────────┐\n│ Warning: You are using 'block.number' in your code which we are planning to change in the near   │\n│ future. 'block.number' currently returns the number of the L1 batch. After the changes it will   │\n│ be returning the number of the L2 block.                                                         │\n│ More information here:                                                                           │\n│ https://github.com/zkSync-Community-Hub/zkync-developers/discussions/32                          │\n└──────────────────────────────────────────────────────────────────────────────────────────────────┘\n--> contracts/YieldFarm.sol\n","message":"\n┌──────────────────────────────────────────────────────────────────────────────────────────────────┐\n│ Warning: You are using 'block.number' in your code which we are planning to change in the near   │\n│ future. 'block.number' currently returns the number of the L1 batch. After the changes it will   │\n│ be returning the number of the L2 block.                                                         │\n│ More information here:                                                                           │\n│ https://github.com/zkSync-Community-Hub/zkync-developers/discussions/32                          │\n└──────────────────────────────────────────────────────────────────────────────────────────────────┘","severity":"warning","sourceLocation":{"file":"18","start":4502,"end":4514},"type":"Warning"},{"component":"general","errorCode":null,"formattedMessage":"\n┌──────────────────────────────────────────────────────────────────────────────────────────────────┐\n│ Warning: You are using 'block.number' in your code which we are planning to change in the near   │\n│ future. 'block.number' currently returns the number of the L1 batch. After the changes it will   │\n│ be returning the number of the L2 block.                                                         │\n│ More information here:                                                                           │\n│ https://github.com/zkSync-Community-Hub/zkync-developers/discussions/32                          │\n└──────────────────────────────────────────────────────────────────────────────────────────────────┘\n--> contracts/YieldFarm.sol\n","message":"\n┌──────────────────────────────────────────────────────────────────────────────────────────────────┐\n│ Warning: You are using 'block.number' in your code which we are planning to change in the near   │\n│ future. 'block.number' currently returns the number of the L1 batch. After the changes it will   │\n│ be returning the number of the L2 block.                                                         │\n│ More information here:                                                                           │\n│ https://github.com/zkSync-Community-Hub/zkync-developers/discussions/32                          │\n└──────────────────────────────────────────────────────────────────────────────────────────────────┘","severity":"warning","sourceLocation":{"file":"18","start":4542,"end":4554},"type":"Warning"},{"component":"general","errorCode":null,"formattedMessage":"\n┌──────────────────────────────────────────────────────────────────────────────────────────────────┐\n│ Warning: You are using 'block.number' in your code which we are planning to change in the near   │\n│ future. 'block.number' currently returns the number of the L1 batch. After the changes it will   │\n│ be returning the number of the L2 block.                                                         │\n│ More information here:                                                                           │\n│ https://github.com/zkSync-Community-Hub/zkync-developers/discussions/32                          │\n└──────────────────────────────────────────────────────────────────────────────────────────────────┘\n--> contracts/YieldFarm.sol\n","message":"\n┌──────────────────────────────────────────────────────────────────────────────────────────────────┐\n│ Warning: You are using 'block.number' in your code which we are planning to change in the near   │\n│ future. 'block.number' currently returns the number of the L1 batch. After the changes it will   │\n│ be returning the number of the L2 block.                                                         │\n│ More information here:                                                                           │\n│ https://github.com/zkSync-Community-Hub/zkync-developers/discussions/32                          │\n└──────────────────────────────────────────────────────────────────────────────────────────────────┘","severity":"warning","sourceLocation":{"file":"18","start":6793,"end":6805},"type":"Warning"},{"component":"general","errorCode":null,"formattedMessage":"\n┌──────────────────────────────────────────────────────────────────────────────────────────────────┐\n│ Warning: You are using 'block.number' in your code which we are planning to change in the near   │\n│ future. 'block.number' currently returns the number of the L1 batch. After the changes it will   │\n│ be returning the number of the L2 block.                                                         │\n│ More information here:                                                                           │\n│ https://github.com/zkSync-Community-Hub/zkync-developers/discussions/32                          │\n└──────────────────────────────────────────────────────────────────────────────────────────────────┘\n--> contracts/YieldFarm.sol\n","message":"\n┌──────────────────────────────────────────────────────────────────────────────────────────────────┐\n│ Warning: You are using 'block.number' in your code which we are planning to change in the near   │\n│ future. 'block.number' currently returns the number of the L1 batch. After the changes it will   │\n│ be returning the number of the L2 block.                                                         │\n│ More information here:                                                                           │\n│ https://github.com/zkSync-Community-Hub/zkync-developers/discussions/32                          │\n└──────────────────────────────────────────────────────────────────────────────────────────────────┘","severity":"warning","sourceLocation":{"file":"18","start":6951,"end":6963},"type":"Warning"},{"component":"general","errorCode":null,"formattedMessage":"\n┌──────────────────────────────────────────────────────────────────────────────────────────────────┐\n│ Warning: You are using 'block.number' in your code which we are planning to change in the near   │\n│ future. 'block.number' currently returns the number of the L1 batch. After the changes it will   │\n│ be returning the number of the L2 block.                                                         │\n│ More information here:                                                                           │\n│ https://github.com/zkSync-Community-Hub/zkync-developers/discussions/32                          │\n└──────────────────────────────────────────────────────────────────────────────────────────────────┘\n--> contracts/YieldFarm.sol\n","message":"\n┌──────────────────────────────────────────────────────────────────────────────────────────────────┐\n│ Warning: You are using 'block.number' in your code which we are planning to change in the near   │\n│ future. 'block.number' currently returns the number of the L1 batch. After the changes it will   │\n│ be returning the number of the L2 block.                                                         │\n│ More information here:                                                                           │\n│ https://github.com/zkSync-Community-Hub/zkync-developers/discussions/32                          │\n└──────────────────────────────────────────────────────────────────────────────────────────────────┘","severity":"warning","sourceLocation":{"file":"18","start":7791,"end":7803},"type":"Warning"},{"component":"general","errorCode":null,"formattedMessage":"\n┌──────────────────────────────────────────────────────────────────────────────────────────────────┐\n│ Warning: You are using 'block.number' in your code which we are planning to change in the near   │\n│ future. 'block.number' currently returns the number of the L1 batch. After the changes it will   │\n│ be returning the number of the L2 block.                                                         │\n│ More information here:                                                                           │\n│ https://github.com/zkSync-Community-Hub/zkync-developers/discussions/32                          │\n└──────────────────────────────────────────────────────────────────────────────────────────────────┘\n--> contracts/YieldFarm.sol\n","message":"\n┌──────────────────────────────────────────────────────────────────────────────────────────────────┐\n│ Warning: You are using 'block.number' in your code which we are planning to change in the near   │\n│ future. 'block.number' currently returns the number of the L1 batch. After the changes it will   │\n│ be returning the number of the L2 block.                                                         │\n│ More information here:                                                                           │\n│ https://github.com/zkSync-Community-Hub/zkync-developers/discussions/32                          │\n└──────────────────────────────────────────────────────────────────────────────────────────────────┘","severity":"warning","sourceLocation":{"file":"18","start":7992,"end":8004},"type":"Warning"},{"component":"general","errorCode":null,"formattedMessage":"\n┌──────────────────────────────────────────────────────────────────────────────────────────────────┐\n│ Warning: You are using 'block.number' in your code which we are planning to change in the near   │\n│ future. 'block.number' currently returns the number of the L1 batch. After the changes it will   │\n│ be returning the number of the L2 block.                                                         │\n│ More information here:                                                                           │\n│ https://github.com/zkSync-Community-Hub/zkync-developers/discussions/32                          │\n└──────────────────────────────────────────────────────────────────────────────────────────────────┘\n--> contracts/YieldFarm.sol\n","message":"\n┌──────────────────────────────────────────────────────────────────────────────────────────────────┐\n│ Warning: You are using 'block.number' in your code which we are planning to change in the near   │\n│ future. 'block.number' currently returns the number of the L1 batch. After the changes it will   │\n│ be returning the number of the L2 block.                                                         │\n│ More information here:                                                                           │\n│ https://github.com/zkSync-Community-Hub/zkync-developers/discussions/32                          │\n└──────────────────────────────────────────────────────────────────────────────────────────────────┘","severity":"warning","sourceLocation":{"file":"18","start":8129,"end":8141},"type":"Warning"},{"component":"general","errorCode":null,"formattedMessage":"\n┌──────────────────────────────────────────────────────────────────────────────────────────────────┐\n│ Warning: You are using 'block.number' in your code which we are planning to change in the near   │\n│ future. 'block.number' currently returns the number of the L1 batch. After the changes it will   │\n│ be returning the number of the L2 block.                                                         │\n│ More information here:                                                                           │\n│ https://github.com/zkSync-Community-Hub/zkync-developers/discussions/32                          │\n└──────────────────────────────────────────────────────────────────────────────────────────────────┘\n--> contracts/YieldFarm.sol\n","message":"\n┌──────────────────────────────────────────────────────────────────────────────────────────────────┐\n│ Warning: You are using 'block.number' in your code which we are planning to change in the near   │\n│ future. 'block.number' currently returns the number of the L1 batch. After the changes it will   │\n│ be returning the number of the L2 block.                                                         │\n│ More information here:                                                                           │\n│ https://github.com/zkSync-Community-Hub/zkync-developers/discussions/32                          │\n└──────────────────────────────────────────────────────────────────────────────────────────────────┘","severity":"warning","sourceLocation":{"file":"18","start":8560,"end":8572},"type":"Warning"},{"component":"general","errorCode":null,"formattedMessage":"\n┌──────────────────────────────────────────────────────────────────────────────────────────────────┐\n│ Warning: It looks like you are using '<address payable>.send/transfer(<X>)' without providing    │\n│ the gas amount. Such calls will fail depending on the pubdata costs.                             │\n│ This might be a false positive if you are using an interface (like IERC20) instead of the        │\n│ native Solidity `send/transfer`.                                                                 │\n│ Please use 'payable(<address>).call{value: <X>}(\"\")' instead, but be careful with the reentrancy │\n│ attack. `send` and `transfer` send limited amount of gas that prevents reentrancy, whereas       │\n│ `<address>.call{value: <X>}` sends all gas to the callee. Learn more on                          │\n│ https://docs.soliditylang.org/en/latest/security-considerations.html#reentrancy                  │\n└──────────────────────────────────────────────────────────────────────────────────────────────────┘\n--> contracts/YieldFarm.sol\n","message":"\n┌──────────────────────────────────────────────────────────────────────────────────────────────────┐\n│ Warning: It looks like you are using '<address payable>.send/transfer(<X>)' without providing    │\n│ the gas amount. Such calls will fail depending on the pubdata costs.                             │\n│ This might be a false positive if you are using an interface (like IERC20) instead of the        │\n│ native Solidity `send/transfer`.                                                                 │\n│ Please use 'payable(<address>).call{value: <X>}(\"\")' instead, but be careful with the reentrancy │\n│ attack. `send` and `transfer` send limited amount of gas that prevents reentrancy, whereas       │\n│ `<address>.call{value: <X>}` sends all gas to the callee. Learn more on                          │\n│ https://docs.soliditylang.org/en/latest/security-considerations.html#reentrancy                  │\n└──────────────────────────────────────────────────────────────────────────────────────────────────┘","severity":"warning","sourceLocation":{"file":"18","start":12991,"end":13020},"type":"Warning"},{"component":"general","errorCode":null,"formattedMessage":"\n┌──────────────────────────────────────────────────────────────────────────────────────────────────┐\n│ Warning: It looks like you are using '<address payable>.send/transfer(<X>)' without providing    │\n│ the gas amount. Such calls will fail depending on the pubdata costs.                             │\n│ This might be a false positive if you are using an interface (like IERC20) instead of the        │\n│ native Solidity `send/transfer`.                                                                 │\n│ Please use 'payable(<address>).call{value: <X>}(\"\")' instead, but be careful with the reentrancy │\n│ attack. `send` and `transfer` send limited amount of gas that prevents reentrancy, whereas       │\n│ `<address>.call{value: <X>}` sends all gas to the callee. Learn more on                          │\n│ https://docs.soliditylang.org/en/latest/security-considerations.html#reentrancy                  │\n└──────────────────────────────────────────────────────────────────────────────────────────────────┘\n--> contracts/YieldFarm.sol\n","message":"\n┌──────────────────────────────────────────────────────────────────────────────────────────────────┐\n│ Warning: It looks like you are using '<address payable>.send/transfer(<X>)' without providing    │\n│ the gas amount. Such calls will fail depending on the pubdata costs.                             │\n│ This might be a false positive if you are using an interface (like IERC20) instead of the        │\n│ native Solidity `send/transfer`.                                                                 │\n│ Please use 'payable(<address>).call{value: <X>}(\"\")' instead, but be careful with the reentrancy │\n│ attack. `send` and `transfer` send limited amount of gas that prevents reentrancy, whereas       │\n│ `<address>.call{value: <X>}` sends all gas to the callee. Learn more on                          │\n│ https://docs.soliditylang.org/en/latest/security-considerations.html#reentrancy                  │\n└──────────────────────────────────────────────────────────────────────────────────────────────────┘","severity":"warning","sourceLocation":{"file":"18","start":12927,"end":12960},"type":"Warning"}],"version":"0.8.9","long_version":"0.8.9+commit.e5eed63a.Darwin.appleclang","zk_version":"1.3.13","sources":{"@openzeppelin/contracts/access/AccessControl.sol":{"id":0,"ast":{"absolutePath":"@openzeppelin/contracts/access/AccessControl.sol","exportedSymbols":{"AccessControl":[315],"Context":[1955],"ERC165":[2208],"IAccessControl":[388],"IERC165":[2220],"Math":[3086],"SignedMath":[3503],"Strings":[2184]},"id":316,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"108:23:0"},{"absolutePath":"@openzeppelin/contracts/access/IAccessControl.sol","file":"./IAccessControl.sol","id":2,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":316,"sourceUnit":389,"src":"133:30:0","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/Context.sol","file":"../utils/Context.sol","id":3,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":316,"sourceUnit":1956,"src":"164:30:0","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/Strings.sol","file":"../utils/Strings.sol","id":4,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":316,"sourceUnit":2185,"src":"195:30:0","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/introspection/ERC165.sol","file":"../utils/introspection/ERC165.sol","id":5,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":316,"sourceUnit":2209,"src":"226:43:0","symbolAliases":[],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":7,"name":"Context","nodeType":"IdentifierPath","referencedDeclaration":1955,"src":"1967:7:0"},"id":8,"nodeType":"InheritanceSpecifier","src":"1967:7:0"},{"baseName":{"id":9,"name":"IAccessControl","nodeType":"IdentifierPath","referencedDeclaration":388,"src":"1976:14:0"},"id":10,"nodeType":"InheritanceSpecifier","src":"1976:14:0"},{"baseName":{"id":11,"name":"ERC165","nodeType":"IdentifierPath","referencedDeclaration":2208,"src":"1992:6:0"},"id":12,"nodeType":"InheritanceSpecifier","src":"1992:6:0"}],"canonicalName":"AccessControl","contractDependencies":[],"contractKind":"contract","documentation":{"id":6,"nodeType":"StructuredDocumentation","src":"271:1660:0","text":" @dev Contract module that allows children to implement role-based access\n control mechanisms. This is a lightweight version that doesn't allow enumerating role\n members except through off-chain means by accessing the contract event logs. Some\n applications may benefit from on-chain enumerability, for those cases see\n {AccessControlEnumerable}.\n Roles are referred to by their `bytes32` identifier. These should be exposed\n in the external API and be unique. The best way to achieve this is by\n using `public constant` hash digests:\n ```solidity\n bytes32 public constant MY_ROLE = keccak256(\"MY_ROLE\");\n ```\n Roles can be used to represent a set of permissions. To restrict access to a\n function call, use {hasRole}:\n ```solidity\n function foo() public {\n     require(hasRole(MY_ROLE, msg.sender));\n     ...\n }\n ```\n Roles can be granted and revoked dynamically via the {grantRole} and\n {revokeRole} functions. Each role has an associated admin role, and only\n accounts that have a role's admin role can call {grantRole} and {revokeRole}.\n By default, the admin role for all roles is `DEFAULT_ADMIN_ROLE`, which means\n that only accounts with this role will be able to grant or revoke other\n roles. More complex role relationships can be created by using\n {_setRoleAdmin}.\n WARNING: The `DEFAULT_ADMIN_ROLE` is also its own admin: it has permission to\n grant and revoke this role. Extra precautions should be taken to secure\n accounts that have been granted it. We recommend using {AccessControlDefaultAdminRules}\n to enforce additional security measures for this role."},"fullyImplemented":true,"id":315,"linearizedBaseContracts":[315,2208,2220,388,1955],"name":"AccessControl","nameLocation":"1950:13:0","nodeType":"ContractDefinition","nodes":[{"canonicalName":"AccessControl.RoleData","id":19,"members":[{"constant":false,"id":16,"mutability":"mutable","name":"members","nameLocation":"2056:7:0","nodeType":"VariableDeclaration","scope":19,"src":"2031:32:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"},"typeName":{"id":15,"keyType":{"id":13,"name":"address","nodeType":"ElementaryTypeName","src":"2039:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"2031:24:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"},"valueType":{"id":14,"name":"bool","nodeType":"ElementaryTypeName","src":"2050:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}},"visibility":"internal"},{"constant":false,"id":18,"mutability":"mutable","name":"adminRole","nameLocation":"2081:9:0","nodeType":"VariableDeclaration","scope":19,"src":"2073:17:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":17,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2073:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"name":"RoleData","nameLocation":"2012:8:0","nodeType":"StructDefinition","scope":315,"src":"2005:92:0","visibility":"public"},{"constant":false,"id":24,"mutability":"mutable","name":"_roles","nameLocation":"2140:6:0","nodeType":"VariableDeclaration","scope":315,"src":"2103:43:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_RoleData_$19_storage_$","typeString":"mapping(bytes32 => struct AccessControl.RoleData)"},"typeName":{"id":23,"keyType":{"id":20,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2111:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Mapping","src":"2103:28:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_RoleData_$19_storage_$","typeString":"mapping(bytes32 => struct AccessControl.RoleData)"},"valueType":{"id":22,"nodeType":"UserDefinedTypeName","pathNode":{"id":21,"name":"RoleData","nodeType":"IdentifierPath","referencedDeclaration":19,"src":"2122:8:0"},"referencedDeclaration":19,"src":"2122:8:0","typeDescriptions":{"typeIdentifier":"t_struct$_RoleData_$19_storage_ptr","typeString":"struct AccessControl.RoleData"}}},"visibility":"private"},{"constant":true,"functionSelector":"a217fddf","id":27,"mutability":"constant","name":"DEFAULT_ADMIN_ROLE","nameLocation":"2177:18:0","nodeType":"VariableDeclaration","scope":315,"src":"2153:49:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":25,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2153:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"hexValue":"30783030","id":26,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2198:4:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0x00"},"visibility":"public"},{"body":{"id":37,"nodeType":"Block","src":"2621:44:0","statements":[{"expression":{"arguments":[{"id":33,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":30,"src":"2642:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":32,"name":"_checkRole","nodeType":"Identifier","overloadedDeclarations":[92,131],"referencedDeclaration":92,"src":"2631:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$returns$__$","typeString":"function (bytes32) view"}},"id":34,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2631:16:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":35,"nodeType":"ExpressionStatement","src":"2631:16:0"},{"id":36,"nodeType":"PlaceholderStatement","src":"2657:1:0"}]},"documentation":{"id":28,"nodeType":"StructuredDocumentation","src":"2209:375:0","text":" @dev Modifier that checks that an account has a specific role. Reverts\n with a standardized message including the required role.\n The format of the revert reason is given by the following regular expression:\n  /^AccessControl: account (0x[0-9a-f]{40}) is missing role (0x[0-9a-f]{64})$/\n _Available since v4.1._"},"id":38,"name":"onlyRole","nameLocation":"2598:8:0","nodeType":"ModifierDefinition","parameters":{"id":31,"nodeType":"ParameterList","parameters":[{"constant":false,"id":30,"mutability":"mutable","name":"role","nameLocation":"2615:4:0","nodeType":"VariableDeclaration","scope":38,"src":"2607:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":29,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2607:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2606:14:0"},"src":"2589:76:0","virtual":false,"visibility":"internal"},{"baseFunctions":[2207],"body":{"id":59,"nodeType":"Block","src":"2823:111:0","statements":[{"expression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":57,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"id":52,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":47,"name":"interfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":41,"src":"2840:11:0","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"arguments":[{"id":49,"name":"IAccessControl","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":388,"src":"2860:14:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IAccessControl_$388_$","typeString":"type(contract IAccessControl)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_contract$_IAccessControl_$388_$","typeString":"type(contract IAccessControl)"}],"id":48,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"2855:4:0","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":50,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2855:20:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_contract$_IAccessControl_$388","typeString":"type(contract IAccessControl)"}},"id":51,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"interfaceId","nodeType":"MemberAccess","src":"2855:32:0","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"src":"2840:47:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"arguments":[{"id":55,"name":"interfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":41,"src":"2915:11:0","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes4","typeString":"bytes4"}],"expression":{"id":53,"name":"super","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-25,"src":"2891:5:0","typeDescriptions":{"typeIdentifier":"t_type$_t_super$_AccessControl_$315_$","typeString":"type(contract super AccessControl)"}},"id":54,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"supportsInterface","nodeType":"MemberAccess","referencedDeclaration":2207,"src":"2891:23:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes4_$returns$_t_bool_$","typeString":"function (bytes4) view returns (bool)"}},"id":56,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2891:36:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"2840:87:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":46,"id":58,"nodeType":"Return","src":"2833:94:0"}]},"documentation":{"id":39,"nodeType":"StructuredDocumentation","src":"2671:56:0","text":" @dev See {IERC165-supportsInterface}."},"functionSelector":"01ffc9a7","id":60,"implemented":true,"kind":"function","modifiers":[],"name":"supportsInterface","nameLocation":"2741:17:0","nodeType":"FunctionDefinition","overrides":{"id":43,"nodeType":"OverrideSpecifier","overrides":[],"src":"2799:8:0"},"parameters":{"id":42,"nodeType":"ParameterList","parameters":[{"constant":false,"id":41,"mutability":"mutable","name":"interfaceId","nameLocation":"2766:11:0","nodeType":"VariableDeclaration","scope":60,"src":"2759:18:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":40,"name":"bytes4","nodeType":"ElementaryTypeName","src":"2759:6:0","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"2758:20:0"},"returnParameters":{"id":46,"nodeType":"ParameterList","parameters":[{"constant":false,"id":45,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":60,"src":"2817:4:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":44,"name":"bool","nodeType":"ElementaryTypeName","src":"2817:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2816:6:0"},"scope":315,"src":"2732:202:0","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[355],"body":{"id":78,"nodeType":"Block","src":"3113:53:0","statements":[{"expression":{"baseExpression":{"expression":{"baseExpression":{"id":71,"name":"_roles","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":24,"src":"3130:6:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_RoleData_$19_storage_$","typeString":"mapping(bytes32 => struct AccessControl.RoleData storage ref)"}},"id":73,"indexExpression":{"id":72,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":63,"src":"3137:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3130:12:0","typeDescriptions":{"typeIdentifier":"t_struct$_RoleData_$19_storage","typeString":"struct AccessControl.RoleData storage ref"}},"id":74,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"members","nodeType":"MemberAccess","referencedDeclaration":16,"src":"3130:20:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":76,"indexExpression":{"id":75,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":65,"src":"3151:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3130:29:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":70,"id":77,"nodeType":"Return","src":"3123:36:0"}]},"documentation":{"id":61,"nodeType":"StructuredDocumentation","src":"2940:76:0","text":" @dev Returns `true` if `account` has been granted `role`."},"functionSelector":"91d14854","id":79,"implemented":true,"kind":"function","modifiers":[],"name":"hasRole","nameLocation":"3030:7:0","nodeType":"FunctionDefinition","overrides":{"id":67,"nodeType":"OverrideSpecifier","overrides":[],"src":"3089:8:0"},"parameters":{"id":66,"nodeType":"ParameterList","parameters":[{"constant":false,"id":63,"mutability":"mutable","name":"role","nameLocation":"3046:4:0","nodeType":"VariableDeclaration","scope":79,"src":"3038:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":62,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3038:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":65,"mutability":"mutable","name":"account","nameLocation":"3060:7:0","nodeType":"VariableDeclaration","scope":79,"src":"3052:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":64,"name":"address","nodeType":"ElementaryTypeName","src":"3052:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3037:31:0"},"returnParameters":{"id":70,"nodeType":"ParameterList","parameters":[{"constant":false,"id":69,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":79,"src":"3107:4:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":68,"name":"bool","nodeType":"ElementaryTypeName","src":"3107:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"3106:6:0"},"scope":315,"src":"3021:145:0","stateMutability":"view","virtual":true,"visibility":"public"},{"body":{"id":91,"nodeType":"Block","src":"3516:47:0","statements":[{"expression":{"arguments":[{"id":86,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":82,"src":"3537:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"arguments":[],"expression":{"argumentTypes":[],"id":87,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1945,"src":"3543:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":88,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3543:12:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":85,"name":"_checkRole","nodeType":"Identifier","overloadedDeclarations":[92,131],"referencedDeclaration":131,"src":"3526:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$_t_address_$returns$__$","typeString":"function (bytes32,address) view"}},"id":89,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3526:30:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":90,"nodeType":"ExpressionStatement","src":"3526:30:0"}]},"documentation":{"id":80,"nodeType":"StructuredDocumentation","src":"3172:283:0","text":" @dev Revert with a standard message if `_msgSender()` is missing `role`.\n Overriding this function changes the behavior of the {onlyRole} modifier.\n Format of the revert message is described in {_checkRole}.\n _Available since v4.6._"},"id":92,"implemented":true,"kind":"function","modifiers":[],"name":"_checkRole","nameLocation":"3469:10:0","nodeType":"FunctionDefinition","parameters":{"id":83,"nodeType":"ParameterList","parameters":[{"constant":false,"id":82,"mutability":"mutable","name":"role","nameLocation":"3488:4:0","nodeType":"VariableDeclaration","scope":92,"src":"3480:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":81,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3480:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3479:14:0"},"returnParameters":{"id":84,"nodeType":"ParameterList","parameters":[],"src":"3516:0:0"},"scope":315,"src":"3460:103:0","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":130,"nodeType":"Block","src":"3917:406:0","statements":[{"condition":{"id":104,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"3931:23:0","subExpression":{"arguments":[{"id":101,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":95,"src":"3940:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":102,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":97,"src":"3946:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":100,"name":"hasRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":79,"src":"3932:7:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$","typeString":"function (bytes32,address) view returns (bool)"}},"id":103,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3932:22:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":129,"nodeType":"IfStatement","src":"3927:390:0","trueBody":{"id":128,"nodeType":"Block","src":"3956:361:0","statements":[{"expression":{"arguments":[{"arguments":[{"arguments":[{"hexValue":"416363657373436f6e74726f6c3a206163636f756e7420","id":110,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4064:25:0","typeDescriptions":{"typeIdentifier":"t_stringliteral_da0d07ce4a2849fbfc4cb9d6f939e9bd93016c372ca4a5ff14fe06caf3d67874","typeString":"literal_string \"AccessControl: account \""},"value":"AccessControl: account "},{"arguments":[{"id":113,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":97,"src":"4135:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":111,"name":"Strings","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2184,"src":"4115:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Strings_$2184_$","typeString":"type(library Strings)"}},"id":112,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"toHexString","nodeType":"MemberAccess","referencedDeclaration":2158,"src":"4115:19:0","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_address_$returns$_t_string_memory_ptr_$","typeString":"function (address) pure returns (string memory)"}},"id":114,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4115:28:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"hexValue":"206973206d697373696e6720726f6c6520","id":115,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4169:19:0","typeDescriptions":{"typeIdentifier":"t_stringliteral_f986ce851518a691bccd44ea42a5a185d1b866ef6cb07984a09b81694d20ab69","typeString":"literal_string \" is missing role \""},"value":" is missing role "},{"arguments":[{"arguments":[{"id":120,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":95,"src":"4242:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":119,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4234:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":118,"name":"uint256","nodeType":"ElementaryTypeName","src":"4234:7:0","typeDescriptions":{}}},"id":121,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4234:13:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"3332","id":122,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4249:2:0","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"}],"expression":{"id":116,"name":"Strings","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2184,"src":"4214:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Strings_$2184_$","typeString":"type(library Strings)"}},"id":117,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"toHexString","nodeType":"MemberAccess","referencedDeclaration":2138,"src":"4214:19:0","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256,uint256) pure returns (string memory)"}},"id":123,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4214:38:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_da0d07ce4a2849fbfc4cb9d6f939e9bd93016c372ca4a5ff14fe06caf3d67874","typeString":"literal_string \"AccessControl: account \""},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_stringliteral_f986ce851518a691bccd44ea42a5a185d1b866ef6cb07984a09b81694d20ab69","typeString":"literal_string \" is missing role \""},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"expression":{"id":108,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"4022:3:0","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":109,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"encodePacked","nodeType":"MemberAccess","src":"4022:16:0","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":124,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4022:252:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":107,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3994:6:0","typeDescriptions":{"typeIdentifier":"t_type$_t_string_storage_ptr_$","typeString":"type(string storage pointer)"},"typeName":{"id":106,"name":"string","nodeType":"ElementaryTypeName","src":"3994:6:0","typeDescriptions":{}}},"id":125,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3994:298:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":105,"name":"revert","nodeType":"Identifier","overloadedDeclarations":[-19,-19],"referencedDeclaration":-19,"src":"3970:6:0","typeDescriptions":{"typeIdentifier":"t_function_revert_pure$_t_string_memory_ptr_$returns$__$","typeString":"function (string memory) pure"}},"id":126,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3970:336:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":127,"nodeType":"ExpressionStatement","src":"3970:336:0"}]}}]},"documentation":{"id":93,"nodeType":"StructuredDocumentation","src":"3569:270:0","text":" @dev Revert with a standard message if `account` is missing `role`.\n The format of the revert reason is given by the following regular expression:\n  /^AccessControl: account (0x[0-9a-f]{40}) is missing role (0x[0-9a-f]{64})$/"},"id":131,"implemented":true,"kind":"function","modifiers":[],"name":"_checkRole","nameLocation":"3853:10:0","nodeType":"FunctionDefinition","parameters":{"id":98,"nodeType":"ParameterList","parameters":[{"constant":false,"id":95,"mutability":"mutable","name":"role","nameLocation":"3872:4:0","nodeType":"VariableDeclaration","scope":131,"src":"3864:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":94,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3864:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":97,"mutability":"mutable","name":"account","nameLocation":"3886:7:0","nodeType":"VariableDeclaration","scope":131,"src":"3878:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":96,"name":"address","nodeType":"ElementaryTypeName","src":"3878:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3863:31:0"},"returnParameters":{"id":99,"nodeType":"ParameterList","parameters":[],"src":"3917:0:0"},"scope":315,"src":"3844:479:0","stateMutability":"view","virtual":true,"visibility":"internal"},{"baseFunctions":[363],"body":{"id":145,"nodeType":"Block","src":"4587:46:0","statements":[{"expression":{"expression":{"baseExpression":{"id":140,"name":"_roles","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":24,"src":"4604:6:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_RoleData_$19_storage_$","typeString":"mapping(bytes32 => struct AccessControl.RoleData storage ref)"}},"id":142,"indexExpression":{"id":141,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":134,"src":"4611:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4604:12:0","typeDescriptions":{"typeIdentifier":"t_struct$_RoleData_$19_storage","typeString":"struct AccessControl.RoleData storage ref"}},"id":143,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"adminRole","nodeType":"MemberAccess","referencedDeclaration":18,"src":"4604:22:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":139,"id":144,"nodeType":"Return","src":"4597:29:0"}]},"documentation":{"id":132,"nodeType":"StructuredDocumentation","src":"4329:170:0","text":" @dev Returns the admin role that controls `role`. See {grantRole} and\n {revokeRole}.\n To change a role's admin, use {_setRoleAdmin}."},"functionSelector":"248a9ca3","id":146,"implemented":true,"kind":"function","modifiers":[],"name":"getRoleAdmin","nameLocation":"4513:12:0","nodeType":"FunctionDefinition","overrides":{"id":136,"nodeType":"OverrideSpecifier","overrides":[],"src":"4560:8:0"},"parameters":{"id":135,"nodeType":"ParameterList","parameters":[{"constant":false,"id":134,"mutability":"mutable","name":"role","nameLocation":"4534:4:0","nodeType":"VariableDeclaration","scope":146,"src":"4526:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":133,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4526:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"4525:14:0"},"returnParameters":{"id":139,"nodeType":"ParameterList","parameters":[{"constant":false,"id":138,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":146,"src":"4578:7:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":137,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4578:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"4577:9:0"},"scope":315,"src":"4504:129:0","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[371],"body":{"id":165,"nodeType":"Block","src":"5032:42:0","statements":[{"expression":{"arguments":[{"id":161,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":149,"src":"5053:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":162,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":151,"src":"5059:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":160,"name":"_grantRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":283,"src":"5042:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$__$","typeString":"function (bytes32,address)"}},"id":163,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5042:25:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":164,"nodeType":"ExpressionStatement","src":"5042:25:0"}]},"documentation":{"id":147,"nodeType":"StructuredDocumentation","src":"4639:285:0","text":" @dev Grants `role` to `account`.\n If `account` had not been already granted `role`, emits a {RoleGranted}\n event.\n Requirements:\n - the caller must have ``role``'s admin role.\n May emit a {RoleGranted} event."},"functionSelector":"2f2ff15d","id":166,"implemented":true,"kind":"function","modifiers":[{"arguments":[{"arguments":[{"id":156,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":149,"src":"5025:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":155,"name":"getRoleAdmin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":146,"src":"5012:12:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$returns$_t_bytes32_$","typeString":"function (bytes32) view returns (bytes32)"}},"id":157,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5012:18:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":158,"kind":"modifierInvocation","modifierName":{"id":154,"name":"onlyRole","nodeType":"IdentifierPath","referencedDeclaration":38,"src":"5003:8:0"},"nodeType":"ModifierInvocation","src":"5003:28:0"}],"name":"grantRole","nameLocation":"4938:9:0","nodeType":"FunctionDefinition","overrides":{"id":153,"nodeType":"OverrideSpecifier","overrides":[],"src":"4994:8:0"},"parameters":{"id":152,"nodeType":"ParameterList","parameters":[{"constant":false,"id":149,"mutability":"mutable","name":"role","nameLocation":"4956:4:0","nodeType":"VariableDeclaration","scope":166,"src":"4948:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":148,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4948:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":151,"mutability":"mutable","name":"account","nameLocation":"4970:7:0","nodeType":"VariableDeclaration","scope":166,"src":"4962:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":150,"name":"address","nodeType":"ElementaryTypeName","src":"4962:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4947:31:0"},"returnParameters":{"id":159,"nodeType":"ParameterList","parameters":[],"src":"5032:0:0"},"scope":315,"src":"4929:145:0","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"baseFunctions":[379],"body":{"id":185,"nodeType":"Block","src":"5458:43:0","statements":[{"expression":{"arguments":[{"id":181,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":169,"src":"5480:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":182,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":171,"src":"5486:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":180,"name":"_revokeRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":314,"src":"5468:11:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$__$","typeString":"function (bytes32,address)"}},"id":183,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5468:26:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":184,"nodeType":"ExpressionStatement","src":"5468:26:0"}]},"documentation":{"id":167,"nodeType":"StructuredDocumentation","src":"5080:269:0","text":" @dev Revokes `role` from `account`.\n If `account` had been granted `role`, emits a {RoleRevoked} event.\n Requirements:\n - the caller must have ``role``'s admin role.\n May emit a {RoleRevoked} event."},"functionSelector":"d547741f","id":186,"implemented":true,"kind":"function","modifiers":[{"arguments":[{"arguments":[{"id":176,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":169,"src":"5451:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":175,"name":"getRoleAdmin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":146,"src":"5438:12:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$returns$_t_bytes32_$","typeString":"function (bytes32) view returns (bytes32)"}},"id":177,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5438:18:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":178,"kind":"modifierInvocation","modifierName":{"id":174,"name":"onlyRole","nodeType":"IdentifierPath","referencedDeclaration":38,"src":"5429:8:0"},"nodeType":"ModifierInvocation","src":"5429:28:0"}],"name":"revokeRole","nameLocation":"5363:10:0","nodeType":"FunctionDefinition","overrides":{"id":173,"nodeType":"OverrideSpecifier","overrides":[],"src":"5420:8:0"},"parameters":{"id":172,"nodeType":"ParameterList","parameters":[{"constant":false,"id":169,"mutability":"mutable","name":"role","nameLocation":"5382:4:0","nodeType":"VariableDeclaration","scope":186,"src":"5374:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":168,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5374:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":171,"mutability":"mutable","name":"account","nameLocation":"5396:7:0","nodeType":"VariableDeclaration","scope":186,"src":"5388:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":170,"name":"address","nodeType":"ElementaryTypeName","src":"5388:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5373:31:0"},"returnParameters":{"id":179,"nodeType":"ParameterList","parameters":[],"src":"5458:0:0"},"scope":315,"src":"5354:147:0","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"baseFunctions":[387],"body":{"id":208,"nodeType":"Block","src":"6115:137:0","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":199,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":196,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":191,"src":"6133:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":197,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1945,"src":"6144:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":198,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6144:12:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"6133:23:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"416363657373436f6e74726f6c3a2063616e206f6e6c792072656e6f756e636520726f6c657320666f722073656c66","id":200,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"6158:49:0","typeDescriptions":{"typeIdentifier":"t_stringliteral_fb06fa8ff2141e8ed74502f6792273793f25f0e9d3cf15344f3f5a0d4948fd4b","typeString":"literal_string \"AccessControl: can only renounce roles for self\""},"value":"AccessControl: can only renounce roles for self"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_fb06fa8ff2141e8ed74502f6792273793f25f0e9d3cf15344f3f5a0d4948fd4b","typeString":"literal_string \"AccessControl: can only renounce roles for self\""}],"id":195,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"6125:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":201,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6125:83:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":202,"nodeType":"ExpressionStatement","src":"6125:83:0"},{"expression":{"arguments":[{"id":204,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":189,"src":"6231:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":205,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":191,"src":"6237:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":203,"name":"_revokeRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":314,"src":"6219:11:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$__$","typeString":"function (bytes32,address)"}},"id":206,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6219:26:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":207,"nodeType":"ExpressionStatement","src":"6219:26:0"}]},"documentation":{"id":187,"nodeType":"StructuredDocumentation","src":"5507:526:0","text":" @dev Revokes `role` from the calling account.\n Roles are often managed via {grantRole} and {revokeRole}: this function's\n purpose is to provide a mechanism for accounts to lose their privileges\n if they are compromised (such as when a trusted device is misplaced).\n If the calling account had been revoked `role`, emits a {RoleRevoked}\n event.\n Requirements:\n - the caller must be `account`.\n May emit a {RoleRevoked} event."},"functionSelector":"36568abe","id":209,"implemented":true,"kind":"function","modifiers":[],"name":"renounceRole","nameLocation":"6047:12:0","nodeType":"FunctionDefinition","overrides":{"id":193,"nodeType":"OverrideSpecifier","overrides":[],"src":"6106:8:0"},"parameters":{"id":192,"nodeType":"ParameterList","parameters":[{"constant":false,"id":189,"mutability":"mutable","name":"role","nameLocation":"6068:4:0","nodeType":"VariableDeclaration","scope":209,"src":"6060:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":188,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6060:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":191,"mutability":"mutable","name":"account","nameLocation":"6082:7:0","nodeType":"VariableDeclaration","scope":209,"src":"6074:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":190,"name":"address","nodeType":"ElementaryTypeName","src":"6074:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"6059:31:0"},"returnParameters":{"id":194,"nodeType":"ParameterList","parameters":[],"src":"6115:0:0"},"scope":315,"src":"6038:214:0","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":222,"nodeType":"Block","src":"7005:42:0","statements":[{"expression":{"arguments":[{"id":218,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":212,"src":"7026:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":219,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":214,"src":"7032:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":217,"name":"_grantRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":283,"src":"7015:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$__$","typeString":"function (bytes32,address)"}},"id":220,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7015:25:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":221,"nodeType":"ExpressionStatement","src":"7015:25:0"}]},"documentation":{"id":210,"nodeType":"StructuredDocumentation","src":"6258:674:0","text":" @dev Grants `role` to `account`.\n If `account` had not been already granted `role`, emits a {RoleGranted}\n event. Note that unlike {grantRole}, this function doesn't perform any\n checks on the calling account.\n May emit a {RoleGranted} event.\n [WARNING]\n ====\n This function should only be called from the constructor when setting\n up the initial roles for the system.\n Using this function in any other way is effectively circumventing the admin\n system imposed by {AccessControl}.\n ====\n NOTE: This function is deprecated in favor of {_grantRole}."},"id":223,"implemented":true,"kind":"function","modifiers":[],"name":"_setupRole","nameLocation":"6946:10:0","nodeType":"FunctionDefinition","parameters":{"id":215,"nodeType":"ParameterList","parameters":[{"constant":false,"id":212,"mutability":"mutable","name":"role","nameLocation":"6965:4:0","nodeType":"VariableDeclaration","scope":223,"src":"6957:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":211,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6957:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":214,"mutability":"mutable","name":"account","nameLocation":"6979:7:0","nodeType":"VariableDeclaration","scope":223,"src":"6971:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":213,"name":"address","nodeType":"ElementaryTypeName","src":"6971:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"6956:31:0"},"returnParameters":{"id":216,"nodeType":"ParameterList","parameters":[],"src":"7005:0:0"},"scope":315,"src":"6937:110:0","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":250,"nodeType":"Block","src":"7245:174:0","statements":[{"assignments":[232],"declarations":[{"constant":false,"id":232,"mutability":"mutable","name":"previousAdminRole","nameLocation":"7263:17:0","nodeType":"VariableDeclaration","scope":250,"src":"7255:25:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":231,"name":"bytes32","nodeType":"ElementaryTypeName","src":"7255:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":236,"initialValue":{"arguments":[{"id":234,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":226,"src":"7296:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":233,"name":"getRoleAdmin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":146,"src":"7283:12:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$returns$_t_bytes32_$","typeString":"function (bytes32) view returns (bytes32)"}},"id":235,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7283:18:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"7255:46:0"},{"expression":{"id":242,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"baseExpression":{"id":237,"name":"_roles","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":24,"src":"7311:6:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_RoleData_$19_storage_$","typeString":"mapping(bytes32 => struct AccessControl.RoleData storage ref)"}},"id":239,"indexExpression":{"id":238,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":226,"src":"7318:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"7311:12:0","typeDescriptions":{"typeIdentifier":"t_struct$_RoleData_$19_storage","typeString":"struct AccessControl.RoleData storage ref"}},"id":240,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberName":"adminRole","nodeType":"MemberAccess","referencedDeclaration":18,"src":"7311:22:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":241,"name":"adminRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":228,"src":"7336:9:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"7311:34:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":243,"nodeType":"ExpressionStatement","src":"7311:34:0"},{"eventCall":{"arguments":[{"id":245,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":226,"src":"7377:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":246,"name":"previousAdminRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":232,"src":"7383:17:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":247,"name":"adminRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":228,"src":"7402:9:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":244,"name":"RoleAdminChanged","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":327,"src":"7360:16:0","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_bytes32_$_t_bytes32_$_t_bytes32_$returns$__$","typeString":"function (bytes32,bytes32,bytes32)"}},"id":248,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7360:52:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":249,"nodeType":"EmitStatement","src":"7355:57:0"}]},"documentation":{"id":224,"nodeType":"StructuredDocumentation","src":"7053:114:0","text":" @dev Sets `adminRole` as ``role``'s admin role.\n Emits a {RoleAdminChanged} event."},"id":251,"implemented":true,"kind":"function","modifiers":[],"name":"_setRoleAdmin","nameLocation":"7181:13:0","nodeType":"FunctionDefinition","parameters":{"id":229,"nodeType":"ParameterList","parameters":[{"constant":false,"id":226,"mutability":"mutable","name":"role","nameLocation":"7203:4:0","nodeType":"VariableDeclaration","scope":251,"src":"7195:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":225,"name":"bytes32","nodeType":"ElementaryTypeName","src":"7195:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":228,"mutability":"mutable","name":"adminRole","nameLocation":"7217:9:0","nodeType":"VariableDeclaration","scope":251,"src":"7209:17:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":227,"name":"bytes32","nodeType":"ElementaryTypeName","src":"7209:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"7194:33:0"},"returnParameters":{"id":230,"nodeType":"ParameterList","parameters":[],"src":"7245:0:0"},"scope":315,"src":"7172:247:0","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":282,"nodeType":"Block","src":"7655:165:0","statements":[{"condition":{"id":263,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"7669:23:0","subExpression":{"arguments":[{"id":260,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":254,"src":"7678:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":261,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":256,"src":"7684:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":259,"name":"hasRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":79,"src":"7670:7:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$","typeString":"function (bytes32,address) view returns (bool)"}},"id":262,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7670:22:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":281,"nodeType":"IfStatement","src":"7665:149:0","trueBody":{"id":280,"nodeType":"Block","src":"7694:120:0","statements":[{"expression":{"id":271,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"expression":{"baseExpression":{"id":264,"name":"_roles","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":24,"src":"7708:6:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_RoleData_$19_storage_$","typeString":"mapping(bytes32 => struct AccessControl.RoleData storage ref)"}},"id":266,"indexExpression":{"id":265,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":254,"src":"7715:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"7708:12:0","typeDescriptions":{"typeIdentifier":"t_struct$_RoleData_$19_storage","typeString":"struct AccessControl.RoleData storage ref"}},"id":267,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"members","nodeType":"MemberAccess","referencedDeclaration":16,"src":"7708:20:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":269,"indexExpression":{"id":268,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":256,"src":"7729:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"7708:29:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":270,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"7740:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"7708:36:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":272,"nodeType":"ExpressionStatement","src":"7708:36:0"},{"eventCall":{"arguments":[{"id":274,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":254,"src":"7775:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":275,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":256,"src":"7781:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[],"expression":{"argumentTypes":[],"id":276,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1945,"src":"7790:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":277,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7790:12:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":273,"name":"RoleGranted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":336,"src":"7763:11:0","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_bytes32_$_t_address_$_t_address_$returns$__$","typeString":"function (bytes32,address,address)"}},"id":278,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7763:40:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":279,"nodeType":"EmitStatement","src":"7758:45:0"}]}}]},"documentation":{"id":252,"nodeType":"StructuredDocumentation","src":"7425:157:0","text":" @dev Grants `role` to `account`.\n Internal function without access restriction.\n May emit a {RoleGranted} event."},"id":283,"implemented":true,"kind":"function","modifiers":[],"name":"_grantRole","nameLocation":"7596:10:0","nodeType":"FunctionDefinition","parameters":{"id":257,"nodeType":"ParameterList","parameters":[{"constant":false,"id":254,"mutability":"mutable","name":"role","nameLocation":"7615:4:0","nodeType":"VariableDeclaration","scope":283,"src":"7607:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":253,"name":"bytes32","nodeType":"ElementaryTypeName","src":"7607:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":256,"mutability":"mutable","name":"account","nameLocation":"7629:7:0","nodeType":"VariableDeclaration","scope":283,"src":"7621:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":255,"name":"address","nodeType":"ElementaryTypeName","src":"7621:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"7606:31:0"},"returnParameters":{"id":258,"nodeType":"ParameterList","parameters":[],"src":"7655:0:0"},"scope":315,"src":"7587:233:0","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":313,"nodeType":"Block","src":"8060:165:0","statements":[{"condition":{"arguments":[{"id":292,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":286,"src":"8082:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":293,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":288,"src":"8088:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":291,"name":"hasRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":79,"src":"8074:7:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$","typeString":"function (bytes32,address) view returns (bool)"}},"id":294,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8074:22:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":312,"nodeType":"IfStatement","src":"8070:149:0","trueBody":{"id":311,"nodeType":"Block","src":"8098:121:0","statements":[{"expression":{"id":302,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"expression":{"baseExpression":{"id":295,"name":"_roles","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":24,"src":"8112:6:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_RoleData_$19_storage_$","typeString":"mapping(bytes32 => struct AccessControl.RoleData storage ref)"}},"id":297,"indexExpression":{"id":296,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":286,"src":"8119:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"8112:12:0","typeDescriptions":{"typeIdentifier":"t_struct$_RoleData_$19_storage","typeString":"struct AccessControl.RoleData storage ref"}},"id":298,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"members","nodeType":"MemberAccess","referencedDeclaration":16,"src":"8112:20:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":300,"indexExpression":{"id":299,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":288,"src":"8133:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"8112:29:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"66616c7365","id":301,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"8144:5:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"src":"8112:37:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":303,"nodeType":"ExpressionStatement","src":"8112:37:0"},{"eventCall":{"arguments":[{"id":305,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":286,"src":"8180:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":306,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":288,"src":"8186:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[],"expression":{"argumentTypes":[],"id":307,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1945,"src":"8195:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":308,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8195:12:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":304,"name":"RoleRevoked","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":345,"src":"8168:11:0","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_bytes32_$_t_address_$_t_address_$returns$__$","typeString":"function (bytes32,address,address)"}},"id":309,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8168:40:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":310,"nodeType":"EmitStatement","src":"8163:45:0"}]}}]},"documentation":{"id":284,"nodeType":"StructuredDocumentation","src":"7826:160:0","text":" @dev Revokes `role` from `account`.\n Internal function without access restriction.\n May emit a {RoleRevoked} event."},"id":314,"implemented":true,"kind":"function","modifiers":[],"name":"_revokeRole","nameLocation":"8000:11:0","nodeType":"FunctionDefinition","parameters":{"id":289,"nodeType":"ParameterList","parameters":[{"constant":false,"id":286,"mutability":"mutable","name":"role","nameLocation":"8020:4:0","nodeType":"VariableDeclaration","scope":314,"src":"8012:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":285,"name":"bytes32","nodeType":"ElementaryTypeName","src":"8012:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":288,"mutability":"mutable","name":"account","nameLocation":"8034:7:0","nodeType":"VariableDeclaration","scope":314,"src":"8026:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":287,"name":"address","nodeType":"ElementaryTypeName","src":"8026:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"8011:31:0"},"returnParameters":{"id":290,"nodeType":"ParameterList","parameters":[],"src":"8060:0:0"},"scope":315,"src":"7991:234:0","stateMutability":"nonpayable","virtual":true,"visibility":"internal"}],"scope":316,"src":"1932:6295:0","usedErrors":[]}],"src":"108:8120:0"}},"@openzeppelin/contracts/access/IAccessControl.sol":{"id":1,"ast":{"absolutePath":"@openzeppelin/contracts/access/IAccessControl.sol","exportedSymbols":{"IAccessControl":[388]},"id":389,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":317,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"94:23:1"},{"abstract":false,"baseContracts":[],"canonicalName":"IAccessControl","contractDependencies":[],"contractKind":"interface","documentation":{"id":318,"nodeType":"StructuredDocumentation","src":"119:89:1","text":" @dev External interface of AccessControl declared to support ERC165 detection."},"fullyImplemented":false,"id":388,"linearizedBaseContracts":[388],"name":"IAccessControl","nameLocation":"219:14:1","nodeType":"ContractDefinition","nodes":[{"anonymous":false,"documentation":{"id":319,"nodeType":"StructuredDocumentation","src":"240:292:1","text":" @dev Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole`\n `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite\n {RoleAdminChanged} not being emitted signaling this.\n _Available since v3.1._"},"id":327,"name":"RoleAdminChanged","nameLocation":"543:16:1","nodeType":"EventDefinition","parameters":{"id":326,"nodeType":"ParameterList","parameters":[{"constant":false,"id":321,"indexed":true,"mutability":"mutable","name":"role","nameLocation":"576:4:1","nodeType":"VariableDeclaration","scope":327,"src":"560:20:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":320,"name":"bytes32","nodeType":"ElementaryTypeName","src":"560:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":323,"indexed":true,"mutability":"mutable","name":"previousAdminRole","nameLocation":"598:17:1","nodeType":"VariableDeclaration","scope":327,"src":"582:33:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":322,"name":"bytes32","nodeType":"ElementaryTypeName","src":"582:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":325,"indexed":true,"mutability":"mutable","name":"newAdminRole","nameLocation":"633:12:1","nodeType":"VariableDeclaration","scope":327,"src":"617:28:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":324,"name":"bytes32","nodeType":"ElementaryTypeName","src":"617:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"559:87:1"},"src":"537:110:1"},{"anonymous":false,"documentation":{"id":328,"nodeType":"StructuredDocumentation","src":"653:212:1","text":" @dev Emitted when `account` is granted `role`.\n `sender` is the account that originated the contract call, an admin role\n bearer except when using {AccessControl-_setupRole}."},"id":336,"name":"RoleGranted","nameLocation":"876:11:1","nodeType":"EventDefinition","parameters":{"id":335,"nodeType":"ParameterList","parameters":[{"constant":false,"id":330,"indexed":true,"mutability":"mutable","name":"role","nameLocation":"904:4:1","nodeType":"VariableDeclaration","scope":336,"src":"888:20:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":329,"name":"bytes32","nodeType":"ElementaryTypeName","src":"888:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":332,"indexed":true,"mutability":"mutable","name":"account","nameLocation":"926:7:1","nodeType":"VariableDeclaration","scope":336,"src":"910:23:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":331,"name":"address","nodeType":"ElementaryTypeName","src":"910:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":334,"indexed":true,"mutability":"mutable","name":"sender","nameLocation":"951:6:1","nodeType":"VariableDeclaration","scope":336,"src":"935:22:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":333,"name":"address","nodeType":"ElementaryTypeName","src":"935:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"887:71:1"},"src":"870:89:1"},{"anonymous":false,"documentation":{"id":337,"nodeType":"StructuredDocumentation","src":"965:275:1","text":" @dev Emitted when `account` is revoked `role`.\n `sender` is the account that originated the contract call:\n   - if using `revokeRole`, it is the admin role bearer\n   - if using `renounceRole`, it is the role bearer (i.e. `account`)"},"id":345,"name":"RoleRevoked","nameLocation":"1251:11:1","nodeType":"EventDefinition","parameters":{"id":344,"nodeType":"ParameterList","parameters":[{"constant":false,"id":339,"indexed":true,"mutability":"mutable","name":"role","nameLocation":"1279:4:1","nodeType":"VariableDeclaration","scope":345,"src":"1263:20:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":338,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1263:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":341,"indexed":true,"mutability":"mutable","name":"account","nameLocation":"1301:7:1","nodeType":"VariableDeclaration","scope":345,"src":"1285:23:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":340,"name":"address","nodeType":"ElementaryTypeName","src":"1285:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":343,"indexed":true,"mutability":"mutable","name":"sender","nameLocation":"1326:6:1","nodeType":"VariableDeclaration","scope":345,"src":"1310:22:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":342,"name":"address","nodeType":"ElementaryTypeName","src":"1310:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1262:71:1"},"src":"1245:89:1"},{"documentation":{"id":346,"nodeType":"StructuredDocumentation","src":"1340:76:1","text":" @dev Returns `true` if `account` has been granted `role`."},"functionSelector":"91d14854","id":355,"implemented":false,"kind":"function","modifiers":[],"name":"hasRole","nameLocation":"1430:7:1","nodeType":"FunctionDefinition","parameters":{"id":351,"nodeType":"ParameterList","parameters":[{"constant":false,"id":348,"mutability":"mutable","name":"role","nameLocation":"1446:4:1","nodeType":"VariableDeclaration","scope":355,"src":"1438:12:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":347,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1438:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":350,"mutability":"mutable","name":"account","nameLocation":"1460:7:1","nodeType":"VariableDeclaration","scope":355,"src":"1452:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":349,"name":"address","nodeType":"ElementaryTypeName","src":"1452:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1437:31:1"},"returnParameters":{"id":354,"nodeType":"ParameterList","parameters":[{"constant":false,"id":353,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":355,"src":"1492:4:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":352,"name":"bool","nodeType":"ElementaryTypeName","src":"1492:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1491:6:1"},"scope":388,"src":"1421:77:1","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":356,"nodeType":"StructuredDocumentation","src":"1504:184:1","text":" @dev Returns the admin role that controls `role`. See {grantRole} and\n {revokeRole}.\n To change a role's admin, use {AccessControl-_setRoleAdmin}."},"functionSelector":"248a9ca3","id":363,"implemented":false,"kind":"function","modifiers":[],"name":"getRoleAdmin","nameLocation":"1702:12:1","nodeType":"FunctionDefinition","parameters":{"id":359,"nodeType":"ParameterList","parameters":[{"constant":false,"id":358,"mutability":"mutable","name":"role","nameLocation":"1723:4:1","nodeType":"VariableDeclaration","scope":363,"src":"1715:12:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":357,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1715:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"1714:14:1"},"returnParameters":{"id":362,"nodeType":"ParameterList","parameters":[{"constant":false,"id":361,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":363,"src":"1752:7:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":360,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1752:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"1751:9:1"},"scope":388,"src":"1693:68:1","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":364,"nodeType":"StructuredDocumentation","src":"1767:239:1","text":" @dev Grants `role` to `account`.\n If `account` had not been already granted `role`, emits a {RoleGranted}\n event.\n Requirements:\n - the caller must have ``role``'s admin role."},"functionSelector":"2f2ff15d","id":371,"implemented":false,"kind":"function","modifiers":[],"name":"grantRole","nameLocation":"2020:9:1","nodeType":"FunctionDefinition","parameters":{"id":369,"nodeType":"ParameterList","parameters":[{"constant":false,"id":366,"mutability":"mutable","name":"role","nameLocation":"2038:4:1","nodeType":"VariableDeclaration","scope":371,"src":"2030:12:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":365,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2030:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":368,"mutability":"mutable","name":"account","nameLocation":"2052:7:1","nodeType":"VariableDeclaration","scope":371,"src":"2044:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":367,"name":"address","nodeType":"ElementaryTypeName","src":"2044:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2029:31:1"},"returnParameters":{"id":370,"nodeType":"ParameterList","parameters":[],"src":"2069:0:1"},"scope":388,"src":"2011:59:1","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":372,"nodeType":"StructuredDocumentation","src":"2076:223:1","text":" @dev Revokes `role` from `account`.\n If `account` had been granted `role`, emits a {RoleRevoked} event.\n Requirements:\n - the caller must have ``role``'s admin role."},"functionSelector":"d547741f","id":379,"implemented":false,"kind":"function","modifiers":[],"name":"revokeRole","nameLocation":"2313:10:1","nodeType":"FunctionDefinition","parameters":{"id":377,"nodeType":"ParameterList","parameters":[{"constant":false,"id":374,"mutability":"mutable","name":"role","nameLocation":"2332:4:1","nodeType":"VariableDeclaration","scope":379,"src":"2324:12:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":373,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2324:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":376,"mutability":"mutable","name":"account","nameLocation":"2346:7:1","nodeType":"VariableDeclaration","scope":379,"src":"2338:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":375,"name":"address","nodeType":"ElementaryTypeName","src":"2338:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2323:31:1"},"returnParameters":{"id":378,"nodeType":"ParameterList","parameters":[],"src":"2363:0:1"},"scope":388,"src":"2304:60:1","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":380,"nodeType":"StructuredDocumentation","src":"2370:480:1","text":" @dev Revokes `role` from the calling account.\n Roles are often managed via {grantRole} and {revokeRole}: this function's\n purpose is to provide a mechanism for accounts to lose their privileges\n if they are compromised (such as when a trusted device is misplaced).\n If the calling account had been granted `role`, emits a {RoleRevoked}\n event.\n Requirements:\n - the caller must be `account`."},"functionSelector":"36568abe","id":387,"implemented":false,"kind":"function","modifiers":[],"name":"renounceRole","nameLocation":"2864:12:1","nodeType":"FunctionDefinition","parameters":{"id":385,"nodeType":"ParameterList","parameters":[{"constant":false,"id":382,"mutability":"mutable","name":"role","nameLocation":"2885:4:1","nodeType":"VariableDeclaration","scope":387,"src":"2877:12:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":381,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2877:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":384,"mutability":"mutable","name":"account","nameLocation":"2899:7:1","nodeType":"VariableDeclaration","scope":387,"src":"2891:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":383,"name":"address","nodeType":"ElementaryTypeName","src":"2891:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2876:31:1"},"returnParameters":{"id":386,"nodeType":"ParameterList","parameters":[],"src":"2916:0:1"},"scope":388,"src":"2855:62:1","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":389,"src":"209:2710:1","usedErrors":[]}],"src":"94:2826:1"}},"@openzeppelin/contracts/access/Ownable.sol":{"id":2,"ast":{"absolutePath":"@openzeppelin/contracts/access/Ownable.sol","exportedSymbols":{"Context":[1955],"Ownable":[501]},"id":502,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":390,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"102:23:2"},{"absolutePath":"@openzeppelin/contracts/utils/Context.sol","file":"../utils/Context.sol","id":391,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":502,"sourceUnit":1956,"src":"127:30:2","symbolAliases":[],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":393,"name":"Context","nodeType":"IdentifierPath","referencedDeclaration":1955,"src":"683:7:2"},"id":394,"nodeType":"InheritanceSpecifier","src":"683:7:2"}],"canonicalName":"Ownable","contractDependencies":[],"contractKind":"contract","documentation":{"id":392,"nodeType":"StructuredDocumentation","src":"159:494:2","text":" @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n By default, the owner account will be the one that deploys the contract. This\n can later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."},"fullyImplemented":true,"id":501,"linearizedBaseContracts":[501,1955],"name":"Ownable","nameLocation":"672:7:2","nodeType":"ContractDefinition","nodes":[{"constant":false,"id":396,"mutability":"mutable","name":"_owner","nameLocation":"713:6:2","nodeType":"VariableDeclaration","scope":501,"src":"697:22:2","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":395,"name":"address","nodeType":"ElementaryTypeName","src":"697:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"private"},{"anonymous":false,"id":402,"name":"OwnershipTransferred","nameLocation":"732:20:2","nodeType":"EventDefinition","parameters":{"id":401,"nodeType":"ParameterList","parameters":[{"constant":false,"id":398,"indexed":true,"mutability":"mutable","name":"previousOwner","nameLocation":"769:13:2","nodeType":"VariableDeclaration","scope":402,"src":"753:29:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":397,"name":"address","nodeType":"ElementaryTypeName","src":"753:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":400,"indexed":true,"mutability":"mutable","name":"newOwner","nameLocation":"800:8:2","nodeType":"VariableDeclaration","scope":402,"src":"784:24:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":399,"name":"address","nodeType":"ElementaryTypeName","src":"784:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"752:57:2"},"src":"726:84:2"},{"body":{"id":411,"nodeType":"Block","src":"926:49:2","statements":[{"expression":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":407,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1945,"src":"955:10:2","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":408,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"955:12:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":406,"name":"_transferOwnership","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":500,"src":"936:18:2","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":409,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"936:32:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":410,"nodeType":"ExpressionStatement","src":"936:32:2"}]},"documentation":{"id":403,"nodeType":"StructuredDocumentation","src":"816:91:2","text":" @dev Initializes the contract setting the deployer as the initial owner."},"id":412,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":404,"nodeType":"ParameterList","parameters":[],"src":"923:2:2"},"returnParameters":{"id":405,"nodeType":"ParameterList","parameters":[],"src":"926:0:2"},"scope":501,"src":"912:63:2","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":419,"nodeType":"Block","src":"1084:41:2","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":415,"name":"_checkOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":443,"src":"1094:11:2","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$__$","typeString":"function () view"}},"id":416,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1094:13:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":417,"nodeType":"ExpressionStatement","src":"1094:13:2"},{"id":418,"nodeType":"PlaceholderStatement","src":"1117:1:2"}]},"documentation":{"id":413,"nodeType":"StructuredDocumentation","src":"981:77:2","text":" @dev Throws if called by any account other than the owner."},"id":420,"name":"onlyOwner","nameLocation":"1072:9:2","nodeType":"ModifierDefinition","parameters":{"id":414,"nodeType":"ParameterList","parameters":[],"src":"1081:2:2"},"src":"1063:62:2","virtual":false,"visibility":"internal"},{"body":{"id":428,"nodeType":"Block","src":"1256:30:2","statements":[{"expression":{"id":426,"name":"_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":396,"src":"1273:6:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":425,"id":427,"nodeType":"Return","src":"1266:13:2"}]},"documentation":{"id":421,"nodeType":"StructuredDocumentation","src":"1131:65:2","text":" @dev Returns the address of the current owner."},"functionSelector":"8da5cb5b","id":429,"implemented":true,"kind":"function","modifiers":[],"name":"owner","nameLocation":"1210:5:2","nodeType":"FunctionDefinition","parameters":{"id":422,"nodeType":"ParameterList","parameters":[],"src":"1215:2:2"},"returnParameters":{"id":425,"nodeType":"ParameterList","parameters":[{"constant":false,"id":424,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":429,"src":"1247:7:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":423,"name":"address","nodeType":"ElementaryTypeName","src":"1247:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1246:9:2"},"scope":501,"src":"1201:85:2","stateMutability":"view","virtual":true,"visibility":"public"},{"body":{"id":442,"nodeType":"Block","src":"1404:85:2","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":438,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":434,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":429,"src":"1422:5:2","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":435,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1422:7:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":436,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1945,"src":"1433:10:2","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":437,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1433:12:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1422:23:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572","id":439,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1447:34:2","typeDescriptions":{"typeIdentifier":"t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe","typeString":"literal_string \"Ownable: caller is not the owner\""},"value":"Ownable: caller is not the owner"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe","typeString":"literal_string \"Ownable: caller is not the owner\""}],"id":433,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"1414:7:2","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":440,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1414:68:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":441,"nodeType":"ExpressionStatement","src":"1414:68:2"}]},"documentation":{"id":430,"nodeType":"StructuredDocumentation","src":"1292:62:2","text":" @dev Throws if the sender is not the owner."},"id":443,"implemented":true,"kind":"function","modifiers":[],"name":"_checkOwner","nameLocation":"1368:11:2","nodeType":"FunctionDefinition","parameters":{"id":431,"nodeType":"ParameterList","parameters":[],"src":"1379:2:2"},"returnParameters":{"id":432,"nodeType":"ParameterList","parameters":[],"src":"1404:0:2"},"scope":501,"src":"1359:130:2","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":456,"nodeType":"Block","src":"1878:47:2","statements":[{"expression":{"arguments":[{"arguments":[{"hexValue":"30","id":452,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1915:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":451,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1907:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":450,"name":"address","nodeType":"ElementaryTypeName","src":"1907:7:2","typeDescriptions":{}}},"id":453,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1907:10:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":449,"name":"_transferOwnership","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":500,"src":"1888:18:2","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":454,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1888:30:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":455,"nodeType":"ExpressionStatement","src":"1888:30:2"}]},"documentation":{"id":444,"nodeType":"StructuredDocumentation","src":"1495:324:2","text":" @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby disabling any functionality that is only available to the owner."},"functionSelector":"715018a6","id":457,"implemented":true,"kind":"function","modifiers":[{"id":447,"kind":"modifierInvocation","modifierName":{"id":446,"name":"onlyOwner","nodeType":"IdentifierPath","referencedDeclaration":420,"src":"1868:9:2"},"nodeType":"ModifierInvocation","src":"1868:9:2"}],"name":"renounceOwnership","nameLocation":"1833:17:2","nodeType":"FunctionDefinition","parameters":{"id":445,"nodeType":"ParameterList","parameters":[],"src":"1850:2:2"},"returnParameters":{"id":448,"nodeType":"ParameterList","parameters":[],"src":"1878:0:2"},"scope":501,"src":"1824:101:2","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":479,"nodeType":"Block","src":"2144:128:2","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":471,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":466,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":460,"src":"2162:8:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":469,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2182:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":468,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2174:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":467,"name":"address","nodeType":"ElementaryTypeName","src":"2174:7:2","typeDescriptions":{}}},"id":470,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2174:10:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2162:22:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373","id":472,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2186:40:2","typeDescriptions":{"typeIdentifier":"t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe","typeString":"literal_string \"Ownable: new owner is the zero address\""},"value":"Ownable: new owner is the zero address"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe","typeString":"literal_string \"Ownable: new owner is the zero address\""}],"id":465,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2154:7:2","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":473,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2154:73:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":474,"nodeType":"ExpressionStatement","src":"2154:73:2"},{"expression":{"arguments":[{"id":476,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":460,"src":"2256:8:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":475,"name":"_transferOwnership","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":500,"src":"2237:18:2","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":477,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2237:28:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":478,"nodeType":"ExpressionStatement","src":"2237:28:2"}]},"documentation":{"id":458,"nodeType":"StructuredDocumentation","src":"1931:138:2","text":" @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."},"functionSelector":"f2fde38b","id":480,"implemented":true,"kind":"function","modifiers":[{"id":463,"kind":"modifierInvocation","modifierName":{"id":462,"name":"onlyOwner","nodeType":"IdentifierPath","referencedDeclaration":420,"src":"2134:9:2"},"nodeType":"ModifierInvocation","src":"2134:9:2"}],"name":"transferOwnership","nameLocation":"2083:17:2","nodeType":"FunctionDefinition","parameters":{"id":461,"nodeType":"ParameterList","parameters":[{"constant":false,"id":460,"mutability":"mutable","name":"newOwner","nameLocation":"2109:8:2","nodeType":"VariableDeclaration","scope":480,"src":"2101:16:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":459,"name":"address","nodeType":"ElementaryTypeName","src":"2101:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2100:18:2"},"returnParameters":{"id":464,"nodeType":"ParameterList","parameters":[],"src":"2144:0:2"},"scope":501,"src":"2074:198:2","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":499,"nodeType":"Block","src":"2489:124:2","statements":[{"assignments":[487],"declarations":[{"constant":false,"id":487,"mutability":"mutable","name":"oldOwner","nameLocation":"2507:8:2","nodeType":"VariableDeclaration","scope":499,"src":"2499:16:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":486,"name":"address","nodeType":"ElementaryTypeName","src":"2499:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":489,"initialValue":{"id":488,"name":"_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":396,"src":"2518:6:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"2499:25:2"},{"expression":{"id":492,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":490,"name":"_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":396,"src":"2534:6:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":491,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":483,"src":"2543:8:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2534:17:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":493,"nodeType":"ExpressionStatement","src":"2534:17:2"},{"eventCall":{"arguments":[{"id":495,"name":"oldOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":487,"src":"2587:8:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":496,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":483,"src":"2597:8:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":494,"name":"OwnershipTransferred","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":402,"src":"2566:20:2","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$returns$__$","typeString":"function (address,address)"}},"id":497,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2566:40:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":498,"nodeType":"EmitStatement","src":"2561:45:2"}]},"documentation":{"id":481,"nodeType":"StructuredDocumentation","src":"2278:143:2","text":" @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."},"id":500,"implemented":true,"kind":"function","modifiers":[],"name":"_transferOwnership","nameLocation":"2435:18:2","nodeType":"FunctionDefinition","parameters":{"id":484,"nodeType":"ParameterList","parameters":[{"constant":false,"id":483,"mutability":"mutable","name":"newOwner","nameLocation":"2462:8:2","nodeType":"VariableDeclaration","scope":500,"src":"2454:16:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":482,"name":"address","nodeType":"ElementaryTypeName","src":"2454:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2453:18:2"},"returnParameters":{"id":485,"nodeType":"ParameterList","parameters":[],"src":"2489:0:2"},"scope":501,"src":"2426:187:2","stateMutability":"nonpayable","virtual":true,"visibility":"internal"}],"scope":502,"src":"654:1961:2","usedErrors":[]}],"src":"102:2514:2"}},"@openzeppelin/contracts/token/ERC20/ERC20.sol":{"id":3,"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC20/ERC20.sol","exportedSymbols":{"Context":[1955],"ERC20":[1088],"IERC20":[1166],"IERC20Metadata":[1191]},"id":1089,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":503,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"105:23:3"},{"absolutePath":"@openzeppelin/contracts/token/ERC20/IERC20.sol","file":"./IERC20.sol","id":504,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1089,"sourceUnit":1167,"src":"130:22:3","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol","file":"./extensions/IERC20Metadata.sol","id":505,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1089,"sourceUnit":1192,"src":"153:41:3","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/Context.sol","file":"../../utils/Context.sol","id":506,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1089,"sourceUnit":1956,"src":"195:33:3","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":508,"name":"Context","nodeType":"IdentifierPath","referencedDeclaration":1955,"src":"1550:7:3"},"id":509,"nodeType":"InheritanceSpecifier","src":"1550:7:3"},{"baseName":{"id":510,"name":"IERC20","nodeType":"IdentifierPath","referencedDeclaration":1166,"src":"1559:6:3"},"id":511,"nodeType":"InheritanceSpecifier","src":"1559:6:3"},{"baseName":{"id":512,"name":"IERC20Metadata","nodeType":"IdentifierPath","referencedDeclaration":1191,"src":"1567:14:3"},"id":513,"nodeType":"InheritanceSpecifier","src":"1567:14:3"}],"canonicalName":"ERC20","contractDependencies":[],"contractKind":"contract","documentation":{"id":507,"nodeType":"StructuredDocumentation","src":"230:1301:3","text":" @dev Implementation of the {IERC20} interface.\n This implementation is agnostic to the way tokens are created. This means\n that a supply mechanism has to be added in a derived contract using {_mint}.\n For a generic mechanism see {ERC20PresetMinterPauser}.\n TIP: For a detailed writeup see our guide\n https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n to implement supply mechanisms].\n The default value of {decimals} is 18. To change this, you should override\n this function so it returns a different value.\n We have followed general OpenZeppelin Contracts guidelines: functions revert\n instead returning `false` on failure. This behavior is nonetheless\n conventional and does not conflict with the expectations of ERC20\n applications.\n Additionally, an {Approval} event is emitted on calls to {transferFrom}.\n This allows applications to reconstruct the allowance for all accounts just\n by listening to said events. Other implementations of the EIP may not emit\n these events, as it isn't required by the specification.\n Finally, the non-standard {decreaseAllowance} and {increaseAllowance}\n functions have been added to mitigate the well-known issues around setting\n allowances. See {IERC20-approve}."},"fullyImplemented":true,"id":1088,"linearizedBaseContracts":[1088,1191,1166,1955],"name":"ERC20","nameLocation":"1541:5:3","nodeType":"ContractDefinition","nodes":[{"constant":false,"id":517,"mutability":"mutable","name":"_balances","nameLocation":"1624:9:3","nodeType":"VariableDeclaration","scope":1088,"src":"1588:45:3","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"typeName":{"id":516,"keyType":{"id":514,"name":"address","nodeType":"ElementaryTypeName","src":"1596:7:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1588:27:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"valueType":{"id":515,"name":"uint256","nodeType":"ElementaryTypeName","src":"1607:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},"visibility":"private"},{"constant":false,"id":523,"mutability":"mutable","name":"_allowances","nameLocation":"1696:11:3","nodeType":"VariableDeclaration","scope":1088,"src":"1640:67:3","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"},"typeName":{"id":522,"keyType":{"id":518,"name":"address","nodeType":"ElementaryTypeName","src":"1648:7:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1640:47:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"},"valueType":{"id":521,"keyType":{"id":519,"name":"address","nodeType":"ElementaryTypeName","src":"1667:7:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1659:27:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"valueType":{"id":520,"name":"uint256","nodeType":"ElementaryTypeName","src":"1678:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}}},"visibility":"private"},{"constant":false,"id":525,"mutability":"mutable","name":"_totalSupply","nameLocation":"1730:12:3","nodeType":"VariableDeclaration","scope":1088,"src":"1714:28:3","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":524,"name":"uint256","nodeType":"ElementaryTypeName","src":"1714:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"private"},{"constant":false,"id":527,"mutability":"mutable","name":"_name","nameLocation":"1764:5:3","nodeType":"VariableDeclaration","scope":1088,"src":"1749:20:3","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string"},"typeName":{"id":526,"name":"string","nodeType":"ElementaryTypeName","src":"1749:6:3","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"private"},{"constant":false,"id":529,"mutability":"mutable","name":"_symbol","nameLocation":"1790:7:3","nodeType":"VariableDeclaration","scope":1088,"src":"1775:22:3","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string"},"typeName":{"id":528,"name":"string","nodeType":"ElementaryTypeName","src":"1775:6:3","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"private"},{"body":{"id":545,"nodeType":"Block","src":"2036:57:3","statements":[{"expression":{"id":539,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":537,"name":"_name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":527,"src":"2046:5:3","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":538,"name":"name_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":532,"src":"2054:5:3","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"2046:13:3","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":540,"nodeType":"ExpressionStatement","src":"2046:13:3"},{"expression":{"id":543,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":541,"name":"_symbol","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":529,"src":"2069:7:3","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":542,"name":"symbol_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":534,"src":"2079:7:3","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"2069:17:3","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":544,"nodeType":"ExpressionStatement","src":"2069:17:3"}]},"documentation":{"id":530,"nodeType":"StructuredDocumentation","src":"1804:171:3","text":" @dev Sets the values for {name} and {symbol}.\n All two of these values are immutable: they can only be set once during\n construction."},"id":546,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":535,"nodeType":"ParameterList","parameters":[{"constant":false,"id":532,"mutability":"mutable","name":"name_","nameLocation":"2006:5:3","nodeType":"VariableDeclaration","scope":546,"src":"1992:19:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":531,"name":"string","nodeType":"ElementaryTypeName","src":"1992:6:3","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":534,"mutability":"mutable","name":"symbol_","nameLocation":"2027:7:3","nodeType":"VariableDeclaration","scope":546,"src":"2013:21:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":533,"name":"string","nodeType":"ElementaryTypeName","src":"2013:6:3","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1991:44:3"},"returnParameters":{"id":536,"nodeType":"ParameterList","parameters":[],"src":"2036:0:3"},"scope":1088,"src":"1980:113:3","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"baseFunctions":[1178],"body":{"id":555,"nodeType":"Block","src":"2227:29:3","statements":[{"expression":{"id":553,"name":"_name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":527,"src":"2244:5:3","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"functionReturnParameters":552,"id":554,"nodeType":"Return","src":"2237:12:3"}]},"documentation":{"id":547,"nodeType":"StructuredDocumentation","src":"2099:54:3","text":" @dev Returns the name of the token."},"functionSelector":"06fdde03","id":556,"implemented":true,"kind":"function","modifiers":[],"name":"name","nameLocation":"2167:4:3","nodeType":"FunctionDefinition","overrides":{"id":549,"nodeType":"OverrideSpecifier","overrides":[],"src":"2194:8:3"},"parameters":{"id":548,"nodeType":"ParameterList","parameters":[],"src":"2171:2:3"},"returnParameters":{"id":552,"nodeType":"ParameterList","parameters":[{"constant":false,"id":551,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":556,"src":"2212:13:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":550,"name":"string","nodeType":"ElementaryTypeName","src":"2212:6:3","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2211:15:3"},"scope":1088,"src":"2158:98:3","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[1184],"body":{"id":565,"nodeType":"Block","src":"2440:31:3","statements":[{"expression":{"id":563,"name":"_symbol","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":529,"src":"2457:7:3","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"functionReturnParameters":562,"id":564,"nodeType":"Return","src":"2450:14:3"}]},"documentation":{"id":557,"nodeType":"StructuredDocumentation","src":"2262:102:3","text":" @dev Returns the symbol of the token, usually a shorter version of the\n name."},"functionSelector":"95d89b41","id":566,"implemented":true,"kind":"function","modifiers":[],"name":"symbol","nameLocation":"2378:6:3","nodeType":"FunctionDefinition","overrides":{"id":559,"nodeType":"OverrideSpecifier","overrides":[],"src":"2407:8:3"},"parameters":{"id":558,"nodeType":"ParameterList","parameters":[],"src":"2384:2:3"},"returnParameters":{"id":562,"nodeType":"ParameterList","parameters":[{"constant":false,"id":561,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":566,"src":"2425:13:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":560,"name":"string","nodeType":"ElementaryTypeName","src":"2425:6:3","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2424:15:3"},"scope":1088,"src":"2369:102:3","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[1190],"body":{"id":575,"nodeType":"Block","src":"3169:26:3","statements":[{"expression":{"hexValue":"3138","id":573,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3186:2:3","typeDescriptions":{"typeIdentifier":"t_rational_18_by_1","typeString":"int_const 18"},"value":"18"},"functionReturnParameters":572,"id":574,"nodeType":"Return","src":"3179:9:3"}]},"documentation":{"id":567,"nodeType":"StructuredDocumentation","src":"2477:622:3","text":" @dev Returns the number of decimals used to get its user representation.\n For example, if `decimals` equals `2`, a balance of `505` tokens should\n be displayed to a user as `5.05` (`505 / 10 ** 2`).\n Tokens usually opt for a value of 18, imitating the relationship between\n Ether and Wei. This is the default value returned by this function, unless\n it's overridden.\n NOTE: This information is only used for _display_ purposes: it in\n no way affects any of the arithmetic of the contract, including\n {IERC20-balanceOf} and {IERC20-transfer}."},"functionSelector":"313ce567","id":576,"implemented":true,"kind":"function","modifiers":[],"name":"decimals","nameLocation":"3113:8:3","nodeType":"FunctionDefinition","overrides":{"id":569,"nodeType":"OverrideSpecifier","overrides":[],"src":"3144:8:3"},"parameters":{"id":568,"nodeType":"ParameterList","parameters":[],"src":"3121:2:3"},"returnParameters":{"id":572,"nodeType":"ParameterList","parameters":[{"constant":false,"id":571,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":576,"src":"3162:5:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":570,"name":"uint8","nodeType":"ElementaryTypeName","src":"3162:5:3","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"3161:7:3"},"scope":1088,"src":"3104:91:3","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[1115],"body":{"id":585,"nodeType":"Block","src":"3325:36:3","statements":[{"expression":{"id":583,"name":"_totalSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":525,"src":"3342:12:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":582,"id":584,"nodeType":"Return","src":"3335:19:3"}]},"documentation":{"id":577,"nodeType":"StructuredDocumentation","src":"3201:49:3","text":" @dev See {IERC20-totalSupply}."},"functionSelector":"18160ddd","id":586,"implemented":true,"kind":"function","modifiers":[],"name":"totalSupply","nameLocation":"3264:11:3","nodeType":"FunctionDefinition","overrides":{"id":579,"nodeType":"OverrideSpecifier","overrides":[],"src":"3298:8:3"},"parameters":{"id":578,"nodeType":"ParameterList","parameters":[],"src":"3275:2:3"},"returnParameters":{"id":582,"nodeType":"ParameterList","parameters":[{"constant":false,"id":581,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":586,"src":"3316:7:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":580,"name":"uint256","nodeType":"ElementaryTypeName","src":"3316:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3315:9:3"},"scope":1088,"src":"3255:106:3","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[1123],"body":{"id":599,"nodeType":"Block","src":"3502:42:3","statements":[{"expression":{"baseExpression":{"id":595,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":517,"src":"3519:9:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":597,"indexExpression":{"id":596,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":589,"src":"3529:7:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3519:18:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":594,"id":598,"nodeType":"Return","src":"3512:25:3"}]},"documentation":{"id":587,"nodeType":"StructuredDocumentation","src":"3367:47:3","text":" @dev See {IERC20-balanceOf}."},"functionSelector":"70a08231","id":600,"implemented":true,"kind":"function","modifiers":[],"name":"balanceOf","nameLocation":"3428:9:3","nodeType":"FunctionDefinition","overrides":{"id":591,"nodeType":"OverrideSpecifier","overrides":[],"src":"3475:8:3"},"parameters":{"id":590,"nodeType":"ParameterList","parameters":[{"constant":false,"id":589,"mutability":"mutable","name":"account","nameLocation":"3446:7:3","nodeType":"VariableDeclaration","scope":600,"src":"3438:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":588,"name":"address","nodeType":"ElementaryTypeName","src":"3438:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3437:17:3"},"returnParameters":{"id":594,"nodeType":"ParameterList","parameters":[{"constant":false,"id":593,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":600,"src":"3493:7:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":592,"name":"uint256","nodeType":"ElementaryTypeName","src":"3493:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3492:9:3"},"scope":1088,"src":"3419:125:3","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[1133],"body":{"id":624,"nodeType":"Block","src":"3825:104:3","statements":[{"assignments":[612],"declarations":[{"constant":false,"id":612,"mutability":"mutable","name":"owner","nameLocation":"3843:5:3","nodeType":"VariableDeclaration","scope":624,"src":"3835:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":611,"name":"address","nodeType":"ElementaryTypeName","src":"3835:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":615,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":613,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1945,"src":"3851:10:3","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":614,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3851:12:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"3835:28:3"},{"expression":{"arguments":[{"id":617,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":612,"src":"3883:5:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":618,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":603,"src":"3890:2:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":619,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":605,"src":"3894:6:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":616,"name":"_transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":848,"src":"3873:9:3","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":620,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3873:28:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":621,"nodeType":"ExpressionStatement","src":"3873:28:3"},{"expression":{"hexValue":"74727565","id":622,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"3918:4:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":610,"id":623,"nodeType":"Return","src":"3911:11:3"}]},"documentation":{"id":601,"nodeType":"StructuredDocumentation","src":"3550:185:3","text":" @dev See {IERC20-transfer}.\n Requirements:\n - `to` cannot be the zero address.\n - the caller must have a balance of at least `amount`."},"functionSelector":"a9059cbb","id":625,"implemented":true,"kind":"function","modifiers":[],"name":"transfer","nameLocation":"3749:8:3","nodeType":"FunctionDefinition","overrides":{"id":607,"nodeType":"OverrideSpecifier","overrides":[],"src":"3801:8:3"},"parameters":{"id":606,"nodeType":"ParameterList","parameters":[{"constant":false,"id":603,"mutability":"mutable","name":"to","nameLocation":"3766:2:3","nodeType":"VariableDeclaration","scope":625,"src":"3758:10:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":602,"name":"address","nodeType":"ElementaryTypeName","src":"3758:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":605,"mutability":"mutable","name":"amount","nameLocation":"3778:6:3","nodeType":"VariableDeclaration","scope":625,"src":"3770:14:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":604,"name":"uint256","nodeType":"ElementaryTypeName","src":"3770:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3757:28:3"},"returnParameters":{"id":610,"nodeType":"ParameterList","parameters":[{"constant":false,"id":609,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":625,"src":"3819:4:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":608,"name":"bool","nodeType":"ElementaryTypeName","src":"3819:4:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"3818:6:3"},"scope":1088,"src":"3740:189:3","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"baseFunctions":[1143],"body":{"id":642,"nodeType":"Block","src":"4085:51:3","statements":[{"expression":{"baseExpression":{"baseExpression":{"id":636,"name":"_allowances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":523,"src":"4102:11:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"}},"id":638,"indexExpression":{"id":637,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":628,"src":"4114:5:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4102:18:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":640,"indexExpression":{"id":639,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":630,"src":"4121:7:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4102:27:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":635,"id":641,"nodeType":"Return","src":"4095:34:3"}]},"documentation":{"id":626,"nodeType":"StructuredDocumentation","src":"3935:47:3","text":" @dev See {IERC20-allowance}."},"functionSelector":"dd62ed3e","id":643,"implemented":true,"kind":"function","modifiers":[],"name":"allowance","nameLocation":"3996:9:3","nodeType":"FunctionDefinition","overrides":{"id":632,"nodeType":"OverrideSpecifier","overrides":[],"src":"4058:8:3"},"parameters":{"id":631,"nodeType":"ParameterList","parameters":[{"constant":false,"id":628,"mutability":"mutable","name":"owner","nameLocation":"4014:5:3","nodeType":"VariableDeclaration","scope":643,"src":"4006:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":627,"name":"address","nodeType":"ElementaryTypeName","src":"4006:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":630,"mutability":"mutable","name":"spender","nameLocation":"4029:7:3","nodeType":"VariableDeclaration","scope":643,"src":"4021:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":629,"name":"address","nodeType":"ElementaryTypeName","src":"4021:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4005:32:3"},"returnParameters":{"id":635,"nodeType":"ParameterList","parameters":[{"constant":false,"id":634,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":643,"src":"4076:7:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":633,"name":"uint256","nodeType":"ElementaryTypeName","src":"4076:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4075:9:3"},"scope":1088,"src":"3987:149:3","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[1153],"body":{"id":667,"nodeType":"Block","src":"4533:108:3","statements":[{"assignments":[655],"declarations":[{"constant":false,"id":655,"mutability":"mutable","name":"owner","nameLocation":"4551:5:3","nodeType":"VariableDeclaration","scope":667,"src":"4543:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":654,"name":"address","nodeType":"ElementaryTypeName","src":"4543:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":658,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":656,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1945,"src":"4559:10:3","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":657,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4559:12:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"4543:28:3"},{"expression":{"arguments":[{"id":660,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":655,"src":"4590:5:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":661,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":646,"src":"4597:7:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":662,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":648,"src":"4606:6:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":659,"name":"_approve","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1022,"src":"4581:8:3","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":663,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4581:32:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":664,"nodeType":"ExpressionStatement","src":"4581:32:3"},{"expression":{"hexValue":"74727565","id":665,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"4630:4:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":653,"id":666,"nodeType":"Return","src":"4623:11:3"}]},"documentation":{"id":644,"nodeType":"StructuredDocumentation","src":"4142:297:3","text":" @dev See {IERC20-approve}.\n NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on\n `transferFrom`. This is semantically equivalent to an infinite approval.\n Requirements:\n - `spender` cannot be the zero address."},"functionSelector":"095ea7b3","id":668,"implemented":true,"kind":"function","modifiers":[],"name":"approve","nameLocation":"4453:7:3","nodeType":"FunctionDefinition","overrides":{"id":650,"nodeType":"OverrideSpecifier","overrides":[],"src":"4509:8:3"},"parameters":{"id":649,"nodeType":"ParameterList","parameters":[{"constant":false,"id":646,"mutability":"mutable","name":"spender","nameLocation":"4469:7:3","nodeType":"VariableDeclaration","scope":668,"src":"4461:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":645,"name":"address","nodeType":"ElementaryTypeName","src":"4461:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":648,"mutability":"mutable","name":"amount","nameLocation":"4486:6:3","nodeType":"VariableDeclaration","scope":668,"src":"4478:14:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":647,"name":"uint256","nodeType":"ElementaryTypeName","src":"4478:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4460:33:3"},"returnParameters":{"id":653,"nodeType":"ParameterList","parameters":[{"constant":false,"id":652,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":668,"src":"4527:4:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":651,"name":"bool","nodeType":"ElementaryTypeName","src":"4527:4:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"4526:6:3"},"scope":1088,"src":"4444:197:3","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"baseFunctions":[1165],"body":{"id":700,"nodeType":"Block","src":"5306:153:3","statements":[{"assignments":[682],"declarations":[{"constant":false,"id":682,"mutability":"mutable","name":"spender","nameLocation":"5324:7:3","nodeType":"VariableDeclaration","scope":700,"src":"5316:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":681,"name":"address","nodeType":"ElementaryTypeName","src":"5316:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":685,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":683,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1945,"src":"5334:10:3","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":684,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5334:12:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"5316:30:3"},{"expression":{"arguments":[{"id":687,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":671,"src":"5372:4:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":688,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":682,"src":"5378:7:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":689,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":675,"src":"5387:6:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":686,"name":"_spendAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1065,"src":"5356:15:3","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":690,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5356:38:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":691,"nodeType":"ExpressionStatement","src":"5356:38:3"},{"expression":{"arguments":[{"id":693,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":671,"src":"5414:4:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":694,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":673,"src":"5420:2:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":695,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":675,"src":"5424:6:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":692,"name":"_transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":848,"src":"5404:9:3","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":696,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5404:27:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":697,"nodeType":"ExpressionStatement","src":"5404:27:3"},{"expression":{"hexValue":"74727565","id":698,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"5448:4:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":680,"id":699,"nodeType":"Return","src":"5441:11:3"}]},"documentation":{"id":669,"nodeType":"StructuredDocumentation","src":"4647:551:3","text":" @dev See {IERC20-transferFrom}.\n Emits an {Approval} event indicating the updated allowance. This is not\n required by the EIP. See the note at the beginning of {ERC20}.\n NOTE: Does not update the allowance if the current allowance\n is the maximum `uint256`.\n Requirements:\n - `from` and `to` cannot be the zero address.\n - `from` must have a balance of at least `amount`.\n - the caller must have allowance for ``from``'s tokens of at least\n `amount`."},"functionSelector":"23b872dd","id":701,"implemented":true,"kind":"function","modifiers":[],"name":"transferFrom","nameLocation":"5212:12:3","nodeType":"FunctionDefinition","overrides":{"id":677,"nodeType":"OverrideSpecifier","overrides":[],"src":"5282:8:3"},"parameters":{"id":676,"nodeType":"ParameterList","parameters":[{"constant":false,"id":671,"mutability":"mutable","name":"from","nameLocation":"5233:4:3","nodeType":"VariableDeclaration","scope":701,"src":"5225:12:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":670,"name":"address","nodeType":"ElementaryTypeName","src":"5225:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":673,"mutability":"mutable","name":"to","nameLocation":"5247:2:3","nodeType":"VariableDeclaration","scope":701,"src":"5239:10:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":672,"name":"address","nodeType":"ElementaryTypeName","src":"5239:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":675,"mutability":"mutable","name":"amount","nameLocation":"5259:6:3","nodeType":"VariableDeclaration","scope":701,"src":"5251:14:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":674,"name":"uint256","nodeType":"ElementaryTypeName","src":"5251:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5224:42:3"},"returnParameters":{"id":680,"nodeType":"ParameterList","parameters":[{"constant":false,"id":679,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":701,"src":"5300:4:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":678,"name":"bool","nodeType":"ElementaryTypeName","src":"5300:4:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"5299:6:3"},"scope":1088,"src":"5203:256:3","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":729,"nodeType":"Block","src":"5948:140:3","statements":[{"assignments":[712],"declarations":[{"constant":false,"id":712,"mutability":"mutable","name":"owner","nameLocation":"5966:5:3","nodeType":"VariableDeclaration","scope":729,"src":"5958:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":711,"name":"address","nodeType":"ElementaryTypeName","src":"5958:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":715,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":713,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1945,"src":"5974:10:3","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":714,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5974:12:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"5958:28:3"},{"expression":{"arguments":[{"id":717,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":712,"src":"6005:5:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":718,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":704,"src":"6012:7:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":724,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":720,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":712,"src":"6031:5:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":721,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":704,"src":"6038:7:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":719,"name":"allowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":643,"src":"6021:9:3","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$","typeString":"function (address,address) view returns (uint256)"}},"id":722,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6021:25:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":723,"name":"addedValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":706,"src":"6049:10:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6021:38:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":716,"name":"_approve","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1022,"src":"5996:8:3","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":725,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5996:64:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":726,"nodeType":"ExpressionStatement","src":"5996:64:3"},{"expression":{"hexValue":"74727565","id":727,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"6077:4:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":710,"id":728,"nodeType":"Return","src":"6070:11:3"}]},"documentation":{"id":702,"nodeType":"StructuredDocumentation","src":"5465:384:3","text":" @dev Atomically increases the allowance granted to `spender` by the caller.\n This is an alternative to {approve} that can be used as a mitigation for\n problems described in {IERC20-approve}.\n Emits an {Approval} event indicating the updated allowance.\n Requirements:\n - `spender` cannot be the zero address."},"functionSelector":"39509351","id":730,"implemented":true,"kind":"function","modifiers":[],"name":"increaseAllowance","nameLocation":"5863:17:3","nodeType":"FunctionDefinition","parameters":{"id":707,"nodeType":"ParameterList","parameters":[{"constant":false,"id":704,"mutability":"mutable","name":"spender","nameLocation":"5889:7:3","nodeType":"VariableDeclaration","scope":730,"src":"5881:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":703,"name":"address","nodeType":"ElementaryTypeName","src":"5881:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":706,"mutability":"mutable","name":"addedValue","nameLocation":"5906:10:3","nodeType":"VariableDeclaration","scope":730,"src":"5898:18:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":705,"name":"uint256","nodeType":"ElementaryTypeName","src":"5898:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5880:37:3"},"returnParameters":{"id":710,"nodeType":"ParameterList","parameters":[{"constant":false,"id":709,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":730,"src":"5942:4:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":708,"name":"bool","nodeType":"ElementaryTypeName","src":"5942:4:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"5941:6:3"},"scope":1088,"src":"5854:234:3","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":770,"nodeType":"Block","src":"6674:328:3","statements":[{"assignments":[741],"declarations":[{"constant":false,"id":741,"mutability":"mutable","name":"owner","nameLocation":"6692:5:3","nodeType":"VariableDeclaration","scope":770,"src":"6684:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":740,"name":"address","nodeType":"ElementaryTypeName","src":"6684:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":744,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":742,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1945,"src":"6700:10:3","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":743,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6700:12:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"6684:28:3"},{"assignments":[746],"declarations":[{"constant":false,"id":746,"mutability":"mutable","name":"currentAllowance","nameLocation":"6730:16:3","nodeType":"VariableDeclaration","scope":770,"src":"6722:24:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":745,"name":"uint256","nodeType":"ElementaryTypeName","src":"6722:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":751,"initialValue":{"arguments":[{"id":748,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":741,"src":"6759:5:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":749,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":733,"src":"6766:7:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":747,"name":"allowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":643,"src":"6749:9:3","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$","typeString":"function (address,address) view returns (uint256)"}},"id":750,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6749:25:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"6722:52:3"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":755,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":753,"name":"currentAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":746,"src":"6792:16:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":754,"name":"subtractedValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":735,"src":"6812:15:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6792:35:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726f","id":756,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"6829:39:3","typeDescriptions":{"typeIdentifier":"t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8","typeString":"literal_string \"ERC20: decreased allowance below zero\""},"value":"ERC20: decreased allowance below zero"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8","typeString":"literal_string \"ERC20: decreased allowance below zero\""}],"id":752,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"6784:7:3","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":757,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6784:85:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":758,"nodeType":"ExpressionStatement","src":"6784:85:3"},{"id":767,"nodeType":"UncheckedBlock","src":"6879:95:3","statements":[{"expression":{"arguments":[{"id":760,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":741,"src":"6912:5:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":761,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":733,"src":"6919:7:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":764,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":762,"name":"currentAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":746,"src":"6928:16:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":763,"name":"subtractedValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":735,"src":"6947:15:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6928:34:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":759,"name":"_approve","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1022,"src":"6903:8:3","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":765,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6903:60:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":766,"nodeType":"ExpressionStatement","src":"6903:60:3"}]},{"expression":{"hexValue":"74727565","id":768,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"6991:4:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":739,"id":769,"nodeType":"Return","src":"6984:11:3"}]},"documentation":{"id":731,"nodeType":"StructuredDocumentation","src":"6094:476:3","text":" @dev Atomically decreases the allowance granted to `spender` by the caller.\n This is an alternative to {approve} that can be used as a mitigation for\n problems described in {IERC20-approve}.\n Emits an {Approval} event indicating the updated allowance.\n Requirements:\n - `spender` cannot be the zero address.\n - `spender` must have allowance for the caller of at least\n `subtractedValue`."},"functionSelector":"a457c2d7","id":771,"implemented":true,"kind":"function","modifiers":[],"name":"decreaseAllowance","nameLocation":"6584:17:3","nodeType":"FunctionDefinition","parameters":{"id":736,"nodeType":"ParameterList","parameters":[{"constant":false,"id":733,"mutability":"mutable","name":"spender","nameLocation":"6610:7:3","nodeType":"VariableDeclaration","scope":771,"src":"6602:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":732,"name":"address","nodeType":"ElementaryTypeName","src":"6602:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":735,"mutability":"mutable","name":"subtractedValue","nameLocation":"6627:15:3","nodeType":"VariableDeclaration","scope":771,"src":"6619:23:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":734,"name":"uint256","nodeType":"ElementaryTypeName","src":"6619:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6601:42:3"},"returnParameters":{"id":739,"nodeType":"ParameterList","parameters":[{"constant":false,"id":738,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":771,"src":"6668:4:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":737,"name":"bool","nodeType":"ElementaryTypeName","src":"6668:4:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"6667:6:3"},"scope":1088,"src":"6575:427:3","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":847,"nodeType":"Block","src":"7534:710:3","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":787,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":782,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":774,"src":"7552:4:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":785,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7568:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":784,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7560:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":783,"name":"address","nodeType":"ElementaryTypeName","src":"7560:7:3","typeDescriptions":{}}},"id":786,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7560:10:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"7552:18:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"45524332303a207472616e736665722066726f6d20746865207a65726f2061646472657373","id":788,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"7572:39:3","typeDescriptions":{"typeIdentifier":"t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea","typeString":"literal_string \"ERC20: transfer from the zero address\""},"value":"ERC20: transfer from the zero address"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea","typeString":"literal_string \"ERC20: transfer from the zero address\""}],"id":781,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"7544:7:3","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":789,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7544:68:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":790,"nodeType":"ExpressionStatement","src":"7544:68:3"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":797,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":792,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":776,"src":"7630:2:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":795,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7644:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":794,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7636:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":793,"name":"address","nodeType":"ElementaryTypeName","src":"7636:7:3","typeDescriptions":{}}},"id":796,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7636:10:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"7630:16:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"45524332303a207472616e7366657220746f20746865207a65726f2061646472657373","id":798,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"7648:37:3","typeDescriptions":{"typeIdentifier":"t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f","typeString":"literal_string \"ERC20: transfer to the zero address\""},"value":"ERC20: transfer to the zero address"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f","typeString":"literal_string \"ERC20: transfer to the zero address\""}],"id":791,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"7622:7:3","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":799,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7622:64:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":800,"nodeType":"ExpressionStatement","src":"7622:64:3"},{"expression":{"arguments":[{"id":802,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":774,"src":"7718:4:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":803,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":776,"src":"7724:2:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":804,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":778,"src":"7728:6:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":801,"name":"_beforeTokenTransfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1076,"src":"7697:20:3","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":805,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7697:38:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":806,"nodeType":"ExpressionStatement","src":"7697:38:3"},{"assignments":[808],"declarations":[{"constant":false,"id":808,"mutability":"mutable","name":"fromBalance","nameLocation":"7754:11:3","nodeType":"VariableDeclaration","scope":847,"src":"7746:19:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":807,"name":"uint256","nodeType":"ElementaryTypeName","src":"7746:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":812,"initialValue":{"baseExpression":{"id":809,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":517,"src":"7768:9:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":811,"indexExpression":{"id":810,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":774,"src":"7778:4:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"7768:15:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"7746:37:3"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":816,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":814,"name":"fromBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":808,"src":"7801:11:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":815,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":778,"src":"7816:6:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7801:21:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"45524332303a207472616e7366657220616d6f756e7420657863656564732062616c616e6365","id":817,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"7824:40:3","typeDescriptions":{"typeIdentifier":"t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6","typeString":"literal_string \"ERC20: transfer amount exceeds balance\""},"value":"ERC20: transfer amount exceeds balance"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6","typeString":"literal_string \"ERC20: transfer amount exceeds balance\""}],"id":813,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"7793:7:3","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":818,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7793:72:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":819,"nodeType":"ExpressionStatement","src":"7793:72:3"},{"id":834,"nodeType":"UncheckedBlock","src":"7875:273:3","statements":[{"expression":{"id":826,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":820,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":517,"src":"7899:9:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":822,"indexExpression":{"id":821,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":774,"src":"7909:4:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"7899:15:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":825,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":823,"name":"fromBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":808,"src":"7917:11:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":824,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":778,"src":"7931:6:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7917:20:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7899:38:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":827,"nodeType":"ExpressionStatement","src":"7899:38:3"},{"expression":{"id":832,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":828,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":517,"src":"8114:9:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":830,"indexExpression":{"id":829,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":776,"src":"8124:2:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"8114:13:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":831,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":778,"src":"8131:6:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8114:23:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":833,"nodeType":"ExpressionStatement","src":"8114:23:3"}]},{"eventCall":{"arguments":[{"id":836,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":774,"src":"8172:4:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":837,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":776,"src":"8178:2:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":838,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":778,"src":"8182:6:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":835,"name":"Transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1100,"src":"8163:8:3","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":839,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8163:26:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":840,"nodeType":"EmitStatement","src":"8158:31:3"},{"expression":{"arguments":[{"id":842,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":774,"src":"8220:4:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":843,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":776,"src":"8226:2:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":844,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":778,"src":"8230:6:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":841,"name":"_afterTokenTransfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1087,"src":"8200:19:3","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":845,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8200:37:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":846,"nodeType":"ExpressionStatement","src":"8200:37:3"}]},"documentation":{"id":772,"nodeType":"StructuredDocumentation","src":"7008:443:3","text":" @dev Moves `amount` of tokens from `from` to `to`.\n This internal function is equivalent to {transfer}, and can be used to\n e.g. implement automatic token fees, slashing mechanisms, etc.\n Emits a {Transfer} event.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `from` must have a balance of at least `amount`."},"id":848,"implemented":true,"kind":"function","modifiers":[],"name":"_transfer","nameLocation":"7465:9:3","nodeType":"FunctionDefinition","parameters":{"id":779,"nodeType":"ParameterList","parameters":[{"constant":false,"id":774,"mutability":"mutable","name":"from","nameLocation":"7483:4:3","nodeType":"VariableDeclaration","scope":848,"src":"7475:12:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":773,"name":"address","nodeType":"ElementaryTypeName","src":"7475:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":776,"mutability":"mutable","name":"to","nameLocation":"7497:2:3","nodeType":"VariableDeclaration","scope":848,"src":"7489:10:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":775,"name":"address","nodeType":"ElementaryTypeName","src":"7489:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":778,"mutability":"mutable","name":"amount","nameLocation":"7509:6:3","nodeType":"VariableDeclaration","scope":848,"src":"7501:14:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":777,"name":"uint256","nodeType":"ElementaryTypeName","src":"7501:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7474:42:3"},"returnParameters":{"id":780,"nodeType":"ParameterList","parameters":[],"src":"7534:0:3"},"scope":1088,"src":"7456:788:3","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":904,"nodeType":"Block","src":"8585:470:3","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":862,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":857,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":851,"src":"8603:7:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":860,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8622:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":859,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8614:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":858,"name":"address","nodeType":"ElementaryTypeName","src":"8614:7:3","typeDescriptions":{}}},"id":861,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8614:10:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"8603:21:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"45524332303a206d696e7420746f20746865207a65726f2061646472657373","id":863,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"8626:33:3","typeDescriptions":{"typeIdentifier":"t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e","typeString":"literal_string \"ERC20: mint to the zero address\""},"value":"ERC20: mint to the zero address"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e","typeString":"literal_string \"ERC20: mint to the zero address\""}],"id":856,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"8595:7:3","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":864,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8595:65:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":865,"nodeType":"ExpressionStatement","src":"8595:65:3"},{"expression":{"arguments":[{"arguments":[{"hexValue":"30","id":869,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8700:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":868,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8692:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":867,"name":"address","nodeType":"ElementaryTypeName","src":"8692:7:3","typeDescriptions":{}}},"id":870,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8692:10:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":871,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":851,"src":"8704:7:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":872,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":853,"src":"8713:6:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":866,"name":"_beforeTokenTransfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1076,"src":"8671:20:3","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":873,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8671:49:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":874,"nodeType":"ExpressionStatement","src":"8671:49:3"},{"expression":{"id":877,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":875,"name":"_totalSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":525,"src":"8731:12:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":876,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":853,"src":"8747:6:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8731:22:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":878,"nodeType":"ExpressionStatement","src":"8731:22:3"},{"id":885,"nodeType":"UncheckedBlock","src":"8763:175:3","statements":[{"expression":{"id":883,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":879,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":517,"src":"8899:9:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":881,"indexExpression":{"id":880,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":851,"src":"8909:7:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"8899:18:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":882,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":853,"src":"8921:6:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8899:28:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":884,"nodeType":"ExpressionStatement","src":"8899:28:3"}]},{"eventCall":{"arguments":[{"arguments":[{"hexValue":"30","id":889,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8969:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":888,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8961:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":887,"name":"address","nodeType":"ElementaryTypeName","src":"8961:7:3","typeDescriptions":{}}},"id":890,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8961:10:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":891,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":851,"src":"8973:7:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":892,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":853,"src":"8982:6:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":886,"name":"Transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1100,"src":"8952:8:3","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":893,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8952:37:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":894,"nodeType":"EmitStatement","src":"8947:42:3"},{"expression":{"arguments":[{"arguments":[{"hexValue":"30","id":898,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9028:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":897,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9020:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":896,"name":"address","nodeType":"ElementaryTypeName","src":"9020:7:3","typeDescriptions":{}}},"id":899,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9020:10:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":900,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":851,"src":"9032:7:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":901,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":853,"src":"9041:6:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":895,"name":"_afterTokenTransfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1087,"src":"9000:19:3","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":902,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9000:48:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":903,"nodeType":"ExpressionStatement","src":"9000:48:3"}]},"documentation":{"id":849,"nodeType":"StructuredDocumentation","src":"8250:265:3","text":"@dev Creates `amount` tokens and assigns them to `account`, increasing\n the total supply.\n Emits a {Transfer} event with `from` set to the zero address.\n Requirements:\n - `account` cannot be the zero address."},"id":905,"implemented":true,"kind":"function","modifiers":[],"name":"_mint","nameLocation":"8529:5:3","nodeType":"FunctionDefinition","parameters":{"id":854,"nodeType":"ParameterList","parameters":[{"constant":false,"id":851,"mutability":"mutable","name":"account","nameLocation":"8543:7:3","nodeType":"VariableDeclaration","scope":905,"src":"8535:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":850,"name":"address","nodeType":"ElementaryTypeName","src":"8535:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":853,"mutability":"mutable","name":"amount","nameLocation":"8560:6:3","nodeType":"VariableDeclaration","scope":905,"src":"8552:14:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":852,"name":"uint256","nodeType":"ElementaryTypeName","src":"8552:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8534:33:3"},"returnParameters":{"id":855,"nodeType":"ParameterList","parameters":[],"src":"8585:0:3"},"scope":1088,"src":"8520:535:3","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":976,"nodeType":"Block","src":"9440:594:3","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":919,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":914,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":908,"src":"9458:7:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":917,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9477:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":916,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9469:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":915,"name":"address","nodeType":"ElementaryTypeName","src":"9469:7:3","typeDescriptions":{}}},"id":918,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9469:10:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"9458:21:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"45524332303a206275726e2066726f6d20746865207a65726f2061646472657373","id":920,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"9481:35:3","typeDescriptions":{"typeIdentifier":"t_stringliteral_b16788493b576042bb52c50ed56189e0b250db113c7bfb1c3897d25cf9632d7f","typeString":"literal_string \"ERC20: burn from the zero address\""},"value":"ERC20: burn from the zero address"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_b16788493b576042bb52c50ed56189e0b250db113c7bfb1c3897d25cf9632d7f","typeString":"literal_string \"ERC20: burn from the zero address\""}],"id":913,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"9450:7:3","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":921,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9450:67:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":922,"nodeType":"ExpressionStatement","src":"9450:67:3"},{"expression":{"arguments":[{"id":924,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":908,"src":"9549:7:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"hexValue":"30","id":927,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9566:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":926,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9558:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":925,"name":"address","nodeType":"ElementaryTypeName","src":"9558:7:3","typeDescriptions":{}}},"id":928,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9558:10:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":929,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":910,"src":"9570:6:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":923,"name":"_beforeTokenTransfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1076,"src":"9528:20:3","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":930,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9528:49:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":931,"nodeType":"ExpressionStatement","src":"9528:49:3"},{"assignments":[933],"declarations":[{"constant":false,"id":933,"mutability":"mutable","name":"accountBalance","nameLocation":"9596:14:3","nodeType":"VariableDeclaration","scope":976,"src":"9588:22:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":932,"name":"uint256","nodeType":"ElementaryTypeName","src":"9588:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":937,"initialValue":{"baseExpression":{"id":934,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":517,"src":"9613:9:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":936,"indexExpression":{"id":935,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":908,"src":"9623:7:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"9613:18:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"9588:43:3"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":941,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":939,"name":"accountBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":933,"src":"9649:14:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":940,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":910,"src":"9667:6:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9649:24:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"45524332303a206275726e20616d6f756e7420657863656564732062616c616e6365","id":942,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"9675:36:3","typeDescriptions":{"typeIdentifier":"t_stringliteral_149b126e7125232b4200af45303d04fba8b74653b1a295a6a561a528c33fefdd","typeString":"literal_string \"ERC20: burn amount exceeds balance\""},"value":"ERC20: burn amount exceeds balance"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_149b126e7125232b4200af45303d04fba8b74653b1a295a6a561a528c33fefdd","typeString":"literal_string \"ERC20: burn amount exceeds balance\""}],"id":938,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"9641:7:3","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":943,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9641:71:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":944,"nodeType":"ExpressionStatement","src":"9641:71:3"},{"id":957,"nodeType":"UncheckedBlock","src":"9722:194:3","statements":[{"expression":{"id":951,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":945,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":517,"src":"9746:9:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":947,"indexExpression":{"id":946,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":908,"src":"9756:7:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"9746:18:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":950,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":948,"name":"accountBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":933,"src":"9767:14:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":949,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":910,"src":"9784:6:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9767:23:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9746:44:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":952,"nodeType":"ExpressionStatement","src":"9746:44:3"},{"expression":{"id":955,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":953,"name":"_totalSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":525,"src":"9883:12:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"-=","rightHandSide":{"id":954,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":910,"src":"9899:6:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9883:22:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":956,"nodeType":"ExpressionStatement","src":"9883:22:3"}]},{"eventCall":{"arguments":[{"id":959,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":908,"src":"9940:7:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"hexValue":"30","id":962,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9957:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":961,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9949:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":960,"name":"address","nodeType":"ElementaryTypeName","src":"9949:7:3","typeDescriptions":{}}},"id":963,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9949:10:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":964,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":910,"src":"9961:6:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":958,"name":"Transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1100,"src":"9931:8:3","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":965,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9931:37:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":966,"nodeType":"EmitStatement","src":"9926:42:3"},{"expression":{"arguments":[{"id":968,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":908,"src":"9999:7:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"hexValue":"30","id":971,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10016:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":970,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10008:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":969,"name":"address","nodeType":"ElementaryTypeName","src":"10008:7:3","typeDescriptions":{}}},"id":972,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"10008:10:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":973,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":910,"src":"10020:6:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":967,"name":"_afterTokenTransfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1087,"src":"9979:19:3","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":974,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9979:48:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":975,"nodeType":"ExpressionStatement","src":"9979:48:3"}]},"documentation":{"id":906,"nodeType":"StructuredDocumentation","src":"9061:309:3","text":" @dev Destroys `amount` tokens from `account`, reducing the\n total supply.\n Emits a {Transfer} event with `to` set to the zero address.\n Requirements:\n - `account` cannot be the zero address.\n - `account` must have at least `amount` tokens."},"id":977,"implemented":true,"kind":"function","modifiers":[],"name":"_burn","nameLocation":"9384:5:3","nodeType":"FunctionDefinition","parameters":{"id":911,"nodeType":"ParameterList","parameters":[{"constant":false,"id":908,"mutability":"mutable","name":"account","nameLocation":"9398:7:3","nodeType":"VariableDeclaration","scope":977,"src":"9390:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":907,"name":"address","nodeType":"ElementaryTypeName","src":"9390:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":910,"mutability":"mutable","name":"amount","nameLocation":"9415:6:3","nodeType":"VariableDeclaration","scope":977,"src":"9407:14:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":909,"name":"uint256","nodeType":"ElementaryTypeName","src":"9407:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9389:33:3"},"returnParameters":{"id":912,"nodeType":"ParameterList","parameters":[],"src":"9440:0:3"},"scope":1088,"src":"9375:659:3","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":1021,"nodeType":"Block","src":"10540:257:3","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":993,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":988,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":980,"src":"10558:5:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":991,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10575:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":990,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10567:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":989,"name":"address","nodeType":"ElementaryTypeName","src":"10567:7:3","typeDescriptions":{}}},"id":992,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"10567:10:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"10558:19:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"45524332303a20617070726f76652066726f6d20746865207a65726f2061646472657373","id":994,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"10579:38:3","typeDescriptions":{"typeIdentifier":"t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208","typeString":"literal_string \"ERC20: approve from the zero address\""},"value":"ERC20: approve from the zero address"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208","typeString":"literal_string \"ERC20: approve from the zero address\""}],"id":987,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"10550:7:3","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":995,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"10550:68:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":996,"nodeType":"ExpressionStatement","src":"10550:68:3"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1003,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":998,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":982,"src":"10636:7:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":1001,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10655:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1000,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10647:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":999,"name":"address","nodeType":"ElementaryTypeName","src":"10647:7:3","typeDescriptions":{}}},"id":1002,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"10647:10:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"10636:21:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"45524332303a20617070726f766520746f20746865207a65726f2061646472657373","id":1004,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"10659:36:3","typeDescriptions":{"typeIdentifier":"t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029","typeString":"literal_string \"ERC20: approve to the zero address\""},"value":"ERC20: approve to the zero address"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029","typeString":"literal_string \"ERC20: approve to the zero address\""}],"id":997,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"10628:7:3","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1005,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"10628:68:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1006,"nodeType":"ExpressionStatement","src":"10628:68:3"},{"expression":{"id":1013,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"baseExpression":{"id":1007,"name":"_allowances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":523,"src":"10707:11:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"}},"id":1010,"indexExpression":{"id":1008,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":980,"src":"10719:5:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"10707:18:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":1011,"indexExpression":{"id":1009,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":982,"src":"10726:7:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"10707:27:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1012,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":984,"src":"10737:6:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10707:36:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1014,"nodeType":"ExpressionStatement","src":"10707:36:3"},{"eventCall":{"arguments":[{"id":1016,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":980,"src":"10767:5:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1017,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":982,"src":"10774:7:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1018,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":984,"src":"10783:6:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1015,"name":"Approval","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1109,"src":"10758:8:3","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":1019,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"10758:32:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1020,"nodeType":"EmitStatement","src":"10753:37:3"}]},"documentation":{"id":978,"nodeType":"StructuredDocumentation","src":"10040:412:3","text":" @dev Sets `amount` as the allowance of `spender` over the `owner` s tokens.\n This internal function is equivalent to `approve`, and can be used to\n e.g. set automatic allowances for certain subsystems, etc.\n Emits an {Approval} event.\n Requirements:\n - `owner` cannot be the zero address.\n - `spender` cannot be the zero address."},"id":1022,"implemented":true,"kind":"function","modifiers":[],"name":"_approve","nameLocation":"10466:8:3","nodeType":"FunctionDefinition","parameters":{"id":985,"nodeType":"ParameterList","parameters":[{"constant":false,"id":980,"mutability":"mutable","name":"owner","nameLocation":"10483:5:3","nodeType":"VariableDeclaration","scope":1022,"src":"10475:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":979,"name":"address","nodeType":"ElementaryTypeName","src":"10475:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":982,"mutability":"mutable","name":"spender","nameLocation":"10498:7:3","nodeType":"VariableDeclaration","scope":1022,"src":"10490:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":981,"name":"address","nodeType":"ElementaryTypeName","src":"10490:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":984,"mutability":"mutable","name":"amount","nameLocation":"10515:6:3","nodeType":"VariableDeclaration","scope":1022,"src":"10507:14:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":983,"name":"uint256","nodeType":"ElementaryTypeName","src":"10507:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10474:48:3"},"returnParameters":{"id":986,"nodeType":"ParameterList","parameters":[],"src":"10540:0:3"},"scope":1088,"src":"10457:340:3","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":1064,"nodeType":"Block","src":"11168:321:3","statements":[{"assignments":[1033],"declarations":[{"constant":false,"id":1033,"mutability":"mutable","name":"currentAllowance","nameLocation":"11186:16:3","nodeType":"VariableDeclaration","scope":1064,"src":"11178:24:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1032,"name":"uint256","nodeType":"ElementaryTypeName","src":"11178:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1038,"initialValue":{"arguments":[{"id":1035,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1025,"src":"11215:5:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1036,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1027,"src":"11222:7:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":1034,"name":"allowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":643,"src":"11205:9:3","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$","typeString":"function (address,address) view returns (uint256)"}},"id":1037,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"11205:25:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"11178:52:3"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1045,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1039,"name":"currentAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1033,"src":"11244:16:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"expression":{"arguments":[{"id":1042,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11269:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":1041,"name":"uint256","nodeType":"ElementaryTypeName","src":"11269:7:3","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"}],"id":1040,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"11264:4:3","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":1043,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"11264:13:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint256","typeString":"type(uint256)"}},"id":1044,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"max","nodeType":"MemberAccess","src":"11264:17:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11244:37:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1063,"nodeType":"IfStatement","src":"11240:243:3","trueBody":{"id":1062,"nodeType":"Block","src":"11283:200:3","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1049,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1047,"name":"currentAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1033,"src":"11305:16:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":1048,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1029,"src":"11325:6:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11305:26:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"45524332303a20696e73756666696369656e7420616c6c6f77616e6365","id":1050,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"11333:31:3","typeDescriptions":{"typeIdentifier":"t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe","typeString":"literal_string \"ERC20: insufficient allowance\""},"value":"ERC20: insufficient allowance"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe","typeString":"literal_string \"ERC20: insufficient allowance\""}],"id":1046,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"11297:7:3","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1051,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"11297:68:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1052,"nodeType":"ExpressionStatement","src":"11297:68:3"},{"id":1061,"nodeType":"UncheckedBlock","src":"11379:94:3","statements":[{"expression":{"arguments":[{"id":1054,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1025,"src":"11416:5:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1055,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1027,"src":"11423:7:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1058,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1056,"name":"currentAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1033,"src":"11432:16:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":1057,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1029,"src":"11451:6:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11432:25:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1053,"name":"_approve","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1022,"src":"11407:8:3","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":1059,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"11407:51:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1060,"nodeType":"ExpressionStatement","src":"11407:51:3"}]}]}}]},"documentation":{"id":1023,"nodeType":"StructuredDocumentation","src":"10803:270:3","text":" @dev Updates `owner` s allowance for `spender` based on spent `amount`.\n Does not update the allowance amount in case of infinite allowance.\n Revert if not enough allowance is available.\n Might emit an {Approval} event."},"id":1065,"implemented":true,"kind":"function","modifiers":[],"name":"_spendAllowance","nameLocation":"11087:15:3","nodeType":"FunctionDefinition","parameters":{"id":1030,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1025,"mutability":"mutable","name":"owner","nameLocation":"11111:5:3","nodeType":"VariableDeclaration","scope":1065,"src":"11103:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1024,"name":"address","nodeType":"ElementaryTypeName","src":"11103:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1027,"mutability":"mutable","name":"spender","nameLocation":"11126:7:3","nodeType":"VariableDeclaration","scope":1065,"src":"11118:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1026,"name":"address","nodeType":"ElementaryTypeName","src":"11118:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1029,"mutability":"mutable","name":"amount","nameLocation":"11143:6:3","nodeType":"VariableDeclaration","scope":1065,"src":"11135:14:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1028,"name":"uint256","nodeType":"ElementaryTypeName","src":"11135:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11102:48:3"},"returnParameters":{"id":1031,"nodeType":"ParameterList","parameters":[],"src":"11168:0:3"},"scope":1088,"src":"11078:411:3","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":1075,"nodeType":"Block","src":"12162:2:3","statements":[]},"documentation":{"id":1066,"nodeType":"StructuredDocumentation","src":"11495:573:3","text":" @dev Hook that is called before any transfer of tokens. This includes\n minting and burning.\n Calling conditions:\n - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\n will be transferred to `to`.\n - when `from` is zero, `amount` tokens will be minted for `to`.\n - when `to` is zero, `amount` of ``from``'s tokens will be burned.\n - `from` and `to` are never both zero.\n To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks]."},"id":1076,"implemented":true,"kind":"function","modifiers":[],"name":"_beforeTokenTransfer","nameLocation":"12082:20:3","nodeType":"FunctionDefinition","parameters":{"id":1073,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1068,"mutability":"mutable","name":"from","nameLocation":"12111:4:3","nodeType":"VariableDeclaration","scope":1076,"src":"12103:12:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1067,"name":"address","nodeType":"ElementaryTypeName","src":"12103:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1070,"mutability":"mutable","name":"to","nameLocation":"12125:2:3","nodeType":"VariableDeclaration","scope":1076,"src":"12117:10:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1069,"name":"address","nodeType":"ElementaryTypeName","src":"12117:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1072,"mutability":"mutable","name":"amount","nameLocation":"12137:6:3","nodeType":"VariableDeclaration","scope":1076,"src":"12129:14:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1071,"name":"uint256","nodeType":"ElementaryTypeName","src":"12129:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12102:42:3"},"returnParameters":{"id":1074,"nodeType":"ParameterList","parameters":[],"src":"12162:0:3"},"scope":1088,"src":"12073:91:3","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":1086,"nodeType":"Block","src":"12840:2:3","statements":[]},"documentation":{"id":1077,"nodeType":"StructuredDocumentation","src":"12170:577:3","text":" @dev Hook that is called after any transfer of tokens. This includes\n minting and burning.\n Calling conditions:\n - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\n has been transferred to `to`.\n - when `from` is zero, `amount` tokens have been minted for `to`.\n - when `to` is zero, `amount` of ``from``'s tokens have been burned.\n - `from` and `to` are never both zero.\n To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks]."},"id":1087,"implemented":true,"kind":"function","modifiers":[],"name":"_afterTokenTransfer","nameLocation":"12761:19:3","nodeType":"FunctionDefinition","parameters":{"id":1084,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1079,"mutability":"mutable","name":"from","nameLocation":"12789:4:3","nodeType":"VariableDeclaration","scope":1087,"src":"12781:12:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1078,"name":"address","nodeType":"ElementaryTypeName","src":"12781:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1081,"mutability":"mutable","name":"to","nameLocation":"12803:2:3","nodeType":"VariableDeclaration","scope":1087,"src":"12795:10:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1080,"name":"address","nodeType":"ElementaryTypeName","src":"12795:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1083,"mutability":"mutable","name":"amount","nameLocation":"12815:6:3","nodeType":"VariableDeclaration","scope":1087,"src":"12807:14:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1082,"name":"uint256","nodeType":"ElementaryTypeName","src":"12807:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12780:42:3"},"returnParameters":{"id":1085,"nodeType":"ParameterList","parameters":[],"src":"12840:0:3"},"scope":1088,"src":"12752:90:3","stateMutability":"nonpayable","virtual":true,"visibility":"internal"}],"scope":1089,"src":"1532:11312:3","usedErrors":[]}],"src":"105:12740:3"}},"@openzeppelin/contracts/token/ERC20/IERC20.sol":{"id":4,"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC20/IERC20.sol","exportedSymbols":{"IERC20":[1166]},"id":1167,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1090,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"106:23:4"},{"abstract":false,"baseContracts":[],"canonicalName":"IERC20","contractDependencies":[],"contractKind":"interface","documentation":{"id":1091,"nodeType":"StructuredDocumentation","src":"131:70:4","text":" @dev Interface of the ERC20 standard as defined in the EIP."},"fullyImplemented":false,"id":1166,"linearizedBaseContracts":[1166],"name":"IERC20","nameLocation":"212:6:4","nodeType":"ContractDefinition","nodes":[{"anonymous":false,"documentation":{"id":1092,"nodeType":"StructuredDocumentation","src":"225:158:4","text":" @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."},"id":1100,"name":"Transfer","nameLocation":"394:8:4","nodeType":"EventDefinition","parameters":{"id":1099,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1094,"indexed":true,"mutability":"mutable","name":"from","nameLocation":"419:4:4","nodeType":"VariableDeclaration","scope":1100,"src":"403:20:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1093,"name":"address","nodeType":"ElementaryTypeName","src":"403:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1096,"indexed":true,"mutability":"mutable","name":"to","nameLocation":"441:2:4","nodeType":"VariableDeclaration","scope":1100,"src":"425:18:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1095,"name":"address","nodeType":"ElementaryTypeName","src":"425:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1098,"indexed":false,"mutability":"mutable","name":"value","nameLocation":"453:5:4","nodeType":"VariableDeclaration","scope":1100,"src":"445:13:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1097,"name":"uint256","nodeType":"ElementaryTypeName","src":"445:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"402:57:4"},"src":"388:72:4"},{"anonymous":false,"documentation":{"id":1101,"nodeType":"StructuredDocumentation","src":"466:148:4","text":" @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."},"id":1109,"name":"Approval","nameLocation":"625:8:4","nodeType":"EventDefinition","parameters":{"id":1108,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1103,"indexed":true,"mutability":"mutable","name":"owner","nameLocation":"650:5:4","nodeType":"VariableDeclaration","scope":1109,"src":"634:21:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1102,"name":"address","nodeType":"ElementaryTypeName","src":"634:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1105,"indexed":true,"mutability":"mutable","name":"spender","nameLocation":"673:7:4","nodeType":"VariableDeclaration","scope":1109,"src":"657:23:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1104,"name":"address","nodeType":"ElementaryTypeName","src":"657:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1107,"indexed":false,"mutability":"mutable","name":"value","nameLocation":"690:5:4","nodeType":"VariableDeclaration","scope":1109,"src":"682:13:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1106,"name":"uint256","nodeType":"ElementaryTypeName","src":"682:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"633:63:4"},"src":"619:78:4"},{"documentation":{"id":1110,"nodeType":"StructuredDocumentation","src":"703:66:4","text":" @dev Returns the amount of tokens in existence."},"functionSelector":"18160ddd","id":1115,"implemented":false,"kind":"function","modifiers":[],"name":"totalSupply","nameLocation":"783:11:4","nodeType":"FunctionDefinition","parameters":{"id":1111,"nodeType":"ParameterList","parameters":[],"src":"794:2:4"},"returnParameters":{"id":1114,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1113,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1115,"src":"820:7:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1112,"name":"uint256","nodeType":"ElementaryTypeName","src":"820:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"819:9:4"},"scope":1166,"src":"774:55:4","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":1116,"nodeType":"StructuredDocumentation","src":"835:72:4","text":" @dev Returns the amount of tokens owned by `account`."},"functionSelector":"70a08231","id":1123,"implemented":false,"kind":"function","modifiers":[],"name":"balanceOf","nameLocation":"921:9:4","nodeType":"FunctionDefinition","parameters":{"id":1119,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1118,"mutability":"mutable","name":"account","nameLocation":"939:7:4","nodeType":"VariableDeclaration","scope":1123,"src":"931:15:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1117,"name":"address","nodeType":"ElementaryTypeName","src":"931:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"930:17:4"},"returnParameters":{"id":1122,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1121,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1123,"src":"971:7:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1120,"name":"uint256","nodeType":"ElementaryTypeName","src":"971:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"970:9:4"},"scope":1166,"src":"912:68:4","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":1124,"nodeType":"StructuredDocumentation","src":"986:202:4","text":" @dev Moves `amount` tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."},"functionSelector":"a9059cbb","id":1133,"implemented":false,"kind":"function","modifiers":[],"name":"transfer","nameLocation":"1202:8:4","nodeType":"FunctionDefinition","parameters":{"id":1129,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1126,"mutability":"mutable","name":"to","nameLocation":"1219:2:4","nodeType":"VariableDeclaration","scope":1133,"src":"1211:10:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1125,"name":"address","nodeType":"ElementaryTypeName","src":"1211:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1128,"mutability":"mutable","name":"amount","nameLocation":"1231:6:4","nodeType":"VariableDeclaration","scope":1133,"src":"1223:14:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1127,"name":"uint256","nodeType":"ElementaryTypeName","src":"1223:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1210:28:4"},"returnParameters":{"id":1132,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1131,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1133,"src":"1257:4:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1130,"name":"bool","nodeType":"ElementaryTypeName","src":"1257:4:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1256:6:4"},"scope":1166,"src":"1193:70:4","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":1134,"nodeType":"StructuredDocumentation","src":"1269:264:4","text":" @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."},"functionSelector":"dd62ed3e","id":1143,"implemented":false,"kind":"function","modifiers":[],"name":"allowance","nameLocation":"1547:9:4","nodeType":"FunctionDefinition","parameters":{"id":1139,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1136,"mutability":"mutable","name":"owner","nameLocation":"1565:5:4","nodeType":"VariableDeclaration","scope":1143,"src":"1557:13:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1135,"name":"address","nodeType":"ElementaryTypeName","src":"1557:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1138,"mutability":"mutable","name":"spender","nameLocation":"1580:7:4","nodeType":"VariableDeclaration","scope":1143,"src":"1572:15:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1137,"name":"address","nodeType":"ElementaryTypeName","src":"1572:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1556:32:4"},"returnParameters":{"id":1142,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1141,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1143,"src":"1612:7:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1140,"name":"uint256","nodeType":"ElementaryTypeName","src":"1612:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1611:9:4"},"scope":1166,"src":"1538:83:4","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":1144,"nodeType":"StructuredDocumentation","src":"1627:642:4","text":" @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."},"functionSelector":"095ea7b3","id":1153,"implemented":false,"kind":"function","modifiers":[],"name":"approve","nameLocation":"2283:7:4","nodeType":"FunctionDefinition","parameters":{"id":1149,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1146,"mutability":"mutable","name":"spender","nameLocation":"2299:7:4","nodeType":"VariableDeclaration","scope":1153,"src":"2291:15:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1145,"name":"address","nodeType":"ElementaryTypeName","src":"2291:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1148,"mutability":"mutable","name":"amount","nameLocation":"2316:6:4","nodeType":"VariableDeclaration","scope":1153,"src":"2308:14:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1147,"name":"uint256","nodeType":"ElementaryTypeName","src":"2308:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2290:33:4"},"returnParameters":{"id":1152,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1151,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1153,"src":"2342:4:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1150,"name":"bool","nodeType":"ElementaryTypeName","src":"2342:4:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2341:6:4"},"scope":1166,"src":"2274:74:4","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":1154,"nodeType":"StructuredDocumentation","src":"2354:287:4","text":" @dev Moves `amount` tokens from `from` to `to` using the\n allowance mechanism. `amount` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."},"functionSelector":"23b872dd","id":1165,"implemented":false,"kind":"function","modifiers":[],"name":"transferFrom","nameLocation":"2655:12:4","nodeType":"FunctionDefinition","parameters":{"id":1161,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1156,"mutability":"mutable","name":"from","nameLocation":"2676:4:4","nodeType":"VariableDeclaration","scope":1165,"src":"2668:12:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1155,"name":"address","nodeType":"ElementaryTypeName","src":"2668:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1158,"mutability":"mutable","name":"to","nameLocation":"2690:2:4","nodeType":"VariableDeclaration","scope":1165,"src":"2682:10:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1157,"name":"address","nodeType":"ElementaryTypeName","src":"2682:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1160,"mutability":"mutable","name":"amount","nameLocation":"2702:6:4","nodeType":"VariableDeclaration","scope":1165,"src":"2694:14:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1159,"name":"uint256","nodeType":"ElementaryTypeName","src":"2694:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2667:42:4"},"returnParameters":{"id":1164,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1163,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1165,"src":"2728:4:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1162,"name":"bool","nodeType":"ElementaryTypeName","src":"2728:4:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2727:6:4"},"scope":1166,"src":"2646:88:4","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":1167,"src":"202:2534:4","usedErrors":[]}],"src":"106:2631:4"}},"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol":{"id":5,"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol","exportedSymbols":{"IERC20":[1166],"IERC20Metadata":[1191]},"id":1192,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1168,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"110:23:5"},{"absolutePath":"@openzeppelin/contracts/token/ERC20/IERC20.sol","file":"../IERC20.sol","id":1169,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1192,"sourceUnit":1167,"src":"135:23:5","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":1171,"name":"IERC20","nodeType":"IdentifierPath","referencedDeclaration":1166,"src":"305:6:5"},"id":1172,"nodeType":"InheritanceSpecifier","src":"305:6:5"}],"canonicalName":"IERC20Metadata","contractDependencies":[],"contractKind":"interface","documentation":{"id":1170,"nodeType":"StructuredDocumentation","src":"160:116:5","text":" @dev Interface for the optional metadata functions from the ERC20 standard.\n _Available since v4.1._"},"fullyImplemented":false,"id":1191,"linearizedBaseContracts":[1191,1166],"name":"IERC20Metadata","nameLocation":"287:14:5","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":1173,"nodeType":"StructuredDocumentation","src":"318:54:5","text":" @dev Returns the name of the token."},"functionSelector":"06fdde03","id":1178,"implemented":false,"kind":"function","modifiers":[],"name":"name","nameLocation":"386:4:5","nodeType":"FunctionDefinition","parameters":{"id":1174,"nodeType":"ParameterList","parameters":[],"src":"390:2:5"},"returnParameters":{"id":1177,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1176,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1178,"src":"416:13:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1175,"name":"string","nodeType":"ElementaryTypeName","src":"416:6:5","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"415:15:5"},"scope":1191,"src":"377:54:5","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":1179,"nodeType":"StructuredDocumentation","src":"437:56:5","text":" @dev Returns the symbol of the token."},"functionSelector":"95d89b41","id":1184,"implemented":false,"kind":"function","modifiers":[],"name":"symbol","nameLocation":"507:6:5","nodeType":"FunctionDefinition","parameters":{"id":1180,"nodeType":"ParameterList","parameters":[],"src":"513:2:5"},"returnParameters":{"id":1183,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1182,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1184,"src":"539:13:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1181,"name":"string","nodeType":"ElementaryTypeName","src":"539:6:5","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"538:15:5"},"scope":1191,"src":"498:56:5","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":1185,"nodeType":"StructuredDocumentation","src":"560:65:5","text":" @dev Returns the decimals places of the token."},"functionSelector":"313ce567","id":1190,"implemented":false,"kind":"function","modifiers":[],"name":"decimals","nameLocation":"639:8:5","nodeType":"FunctionDefinition","parameters":{"id":1186,"nodeType":"ParameterList","parameters":[],"src":"647:2:5"},"returnParameters":{"id":1189,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1188,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1190,"src":"673:5:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":1187,"name":"uint8","nodeType":"ElementaryTypeName","src":"673:5:5","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"672:7:5"},"scope":1191,"src":"630:50:5","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":1192,"src":"277:405:5","usedErrors":[]}],"src":"110:573:5"}},"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol":{"id":6,"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol","exportedSymbols":{"IERC20Permit":[1227]},"id":1228,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1193,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"123:23:6"},{"abstract":false,"baseContracts":[],"canonicalName":"IERC20Permit","contractDependencies":[],"contractKind":"interface","documentation":{"id":1194,"nodeType":"StructuredDocumentation","src":"148:480:6","text":" @dev Interface of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in\n https://eips.ethereum.org/EIPS/eip-2612[EIP-2612].\n Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by\n presenting a message signed by the account. By not relying on {IERC20-approve}, the token holder account doesn't\n need to send a transaction, and thus is not required to hold Ether at all."},"fullyImplemented":false,"id":1227,"linearizedBaseContracts":[1227],"name":"IERC20Permit","nameLocation":"639:12:6","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":1195,"nodeType":"StructuredDocumentation","src":"658:792:6","text":" @dev Sets `value` as the allowance of `spender` over ``owner``'s tokens,\n given ``owner``'s signed approval.\n IMPORTANT: The same issues {IERC20-approve} has related to transaction\n ordering also apply here.\n Emits an {Approval} event.\n Requirements:\n - `spender` cannot be the zero address.\n - `deadline` must be a timestamp in the future.\n - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner`\n over the EIP712-formatted function arguments.\n - the signature must use ``owner``'s current nonce (see {nonces}).\n For more information on the signature format, see the\n https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP\n section]."},"functionSelector":"d505accf","id":1212,"implemented":false,"kind":"function","modifiers":[],"name":"permit","nameLocation":"1464:6:6","nodeType":"FunctionDefinition","parameters":{"id":1210,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1197,"mutability":"mutable","name":"owner","nameLocation":"1488:5:6","nodeType":"VariableDeclaration","scope":1212,"src":"1480:13:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1196,"name":"address","nodeType":"ElementaryTypeName","src":"1480:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1199,"mutability":"mutable","name":"spender","nameLocation":"1511:7:6","nodeType":"VariableDeclaration","scope":1212,"src":"1503:15:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1198,"name":"address","nodeType":"ElementaryTypeName","src":"1503:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1201,"mutability":"mutable","name":"value","nameLocation":"1536:5:6","nodeType":"VariableDeclaration","scope":1212,"src":"1528:13:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1200,"name":"uint256","nodeType":"ElementaryTypeName","src":"1528:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1203,"mutability":"mutable","name":"deadline","nameLocation":"1559:8:6","nodeType":"VariableDeclaration","scope":1212,"src":"1551:16:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1202,"name":"uint256","nodeType":"ElementaryTypeName","src":"1551:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1205,"mutability":"mutable","name":"v","nameLocation":"1583:1:6","nodeType":"VariableDeclaration","scope":1212,"src":"1577:7:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":1204,"name":"uint8","nodeType":"ElementaryTypeName","src":"1577:5:6","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":1207,"mutability":"mutable","name":"r","nameLocation":"1602:1:6","nodeType":"VariableDeclaration","scope":1212,"src":"1594:9:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1206,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1594:7:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":1209,"mutability":"mutable","name":"s","nameLocation":"1621:1:6","nodeType":"VariableDeclaration","scope":1212,"src":"1613:9:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1208,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1613:7:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"1470:158:6"},"returnParameters":{"id":1211,"nodeType":"ParameterList","parameters":[],"src":"1637:0:6"},"scope":1227,"src":"1455:183:6","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":1213,"nodeType":"StructuredDocumentation","src":"1644:294:6","text":" @dev Returns the current nonce for `owner`. This value must be\n included whenever a signature is generated for {permit}.\n Every successful call to {permit} increases ``owner``'s nonce by one. This\n prevents a signature from being used multiple times."},"functionSelector":"7ecebe00","id":1220,"implemented":false,"kind":"function","modifiers":[],"name":"nonces","nameLocation":"1952:6:6","nodeType":"FunctionDefinition","parameters":{"id":1216,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1215,"mutability":"mutable","name":"owner","nameLocation":"1967:5:6","nodeType":"VariableDeclaration","scope":1220,"src":"1959:13:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1214,"name":"address","nodeType":"ElementaryTypeName","src":"1959:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1958:15:6"},"returnParameters":{"id":1219,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1218,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1220,"src":"1997:7:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1217,"name":"uint256","nodeType":"ElementaryTypeName","src":"1997:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1996:9:6"},"scope":1227,"src":"1943:63:6","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":1221,"nodeType":"StructuredDocumentation","src":"2012:128:6","text":" @dev Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}."},"functionSelector":"3644e515","id":1226,"implemented":false,"kind":"function","modifiers":[],"name":"DOMAIN_SEPARATOR","nameLocation":"2207:16:6","nodeType":"FunctionDefinition","parameters":{"id":1222,"nodeType":"ParameterList","parameters":[],"src":"2223:2:6"},"returnParameters":{"id":1225,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1224,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1226,"src":"2249:7:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1223,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2249:7:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2248:9:6"},"scope":1227,"src":"2198:60:6","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":1228,"src":"629:1631:6","usedErrors":[]}],"src":"123:2138:6"}},"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol":{"id":7,"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol","exportedSymbols":{"Address":[1933],"IERC20":[1166],"IERC20Permit":[1227],"SafeERC20":[1603]},"id":1604,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1229,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"115:23:7"},{"absolutePath":"@openzeppelin/contracts/token/ERC20/IERC20.sol","file":"../IERC20.sol","id":1230,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1604,"sourceUnit":1167,"src":"140:23:7","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol","file":"../extensions/IERC20Permit.sol","id":1231,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1604,"sourceUnit":1228,"src":"164:40:7","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/Address.sol","file":"../../../utils/Address.sol","id":1232,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1604,"sourceUnit":1934,"src":"205:36:7","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"SafeERC20","contractDependencies":[],"contractKind":"library","documentation":{"id":1233,"nodeType":"StructuredDocumentation","src":"243:457:7","text":" @title SafeERC20\n @dev Wrappers around ERC20 operations that throw on failure (when the token\n contract returns false). Tokens that return no value (and instead revert or\n throw on failure) are also supported, non-reverting calls are assumed to be\n successful.\n To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,\n which allows you to call the safe operations as `token.safeTransfer(...)`, etc."},"fullyImplemented":true,"id":1603,"linearizedBaseContracts":[1603],"name":"SafeERC20","nameLocation":"709:9:7","nodeType":"ContractDefinition","nodes":[{"id":1236,"libraryName":{"id":1234,"name":"Address","nodeType":"IdentifierPath","referencedDeclaration":1933,"src":"731:7:7"},"nodeType":"UsingForDirective","src":"725:26:7","typeName":{"id":1235,"name":"address","nodeType":"ElementaryTypeName","src":"743:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}},{"body":{"id":1259,"nodeType":"Block","src":"1013:103:7","statements":[{"expression":{"arguments":[{"id":1248,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1240,"src":"1043:5:7","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1166","typeString":"contract IERC20"}},{"arguments":[{"expression":{"expression":{"id":1251,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1240,"src":"1073:5:7","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1166","typeString":"contract IERC20"}},"id":1252,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"transfer","nodeType":"MemberAccess","referencedDeclaration":1133,"src":"1073:14:7","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) external returns (bool)"}},"id":1253,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"selector","nodeType":"MemberAccess","src":"1073:23:7","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},{"id":1254,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1242,"src":"1098:2:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1255,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1244,"src":"1102:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes4","typeString":"bytes4"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":1249,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"1050:3:7","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":1250,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"encodeWithSelector","nodeType":"MemberAccess","src":"1050:22:7","typeDescriptions":{"typeIdentifier":"t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$","typeString":"function (bytes4) pure returns (bytes memory)"}},"id":1256,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1050:58:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$1166","typeString":"contract IERC20"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1247,"name":"_callOptionalReturn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1554,"src":"1023:19:7","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$1166_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (contract IERC20,bytes memory)"}},"id":1257,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1023:86:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1258,"nodeType":"ExpressionStatement","src":"1023:86:7"}]},"documentation":{"id":1237,"nodeType":"StructuredDocumentation","src":"757:179:7","text":" @dev Transfer `value` amount of `token` from the calling contract to `to`. If `token` returns no value,\n non-reverting calls are assumed to be successful."},"id":1260,"implemented":true,"kind":"function","modifiers":[],"name":"safeTransfer","nameLocation":"950:12:7","nodeType":"FunctionDefinition","parameters":{"id":1245,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1240,"mutability":"mutable","name":"token","nameLocation":"970:5:7","nodeType":"VariableDeclaration","scope":1260,"src":"963:12:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1166","typeString":"contract IERC20"},"typeName":{"id":1239,"nodeType":"UserDefinedTypeName","pathNode":{"id":1238,"name":"IERC20","nodeType":"IdentifierPath","referencedDeclaration":1166,"src":"963:6:7"},"referencedDeclaration":1166,"src":"963:6:7","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1166","typeString":"contract IERC20"}},"visibility":"internal"},{"constant":false,"id":1242,"mutability":"mutable","name":"to","nameLocation":"985:2:7","nodeType":"VariableDeclaration","scope":1260,"src":"977:10:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1241,"name":"address","nodeType":"ElementaryTypeName","src":"977:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1244,"mutability":"mutable","name":"value","nameLocation":"997:5:7","nodeType":"VariableDeclaration","scope":1260,"src":"989:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1243,"name":"uint256","nodeType":"ElementaryTypeName","src":"989:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"962:41:7"},"returnParameters":{"id":1246,"nodeType":"ParameterList","parameters":[],"src":"1013:0:7"},"scope":1603,"src":"941:175:7","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1286,"nodeType":"Block","src":"1445:113:7","statements":[{"expression":{"arguments":[{"id":1274,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1264,"src":"1475:5:7","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1166","typeString":"contract IERC20"}},{"arguments":[{"expression":{"expression":{"id":1277,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1264,"src":"1505:5:7","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1166","typeString":"contract IERC20"}},"id":1278,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"transferFrom","nodeType":"MemberAccess","referencedDeclaration":1165,"src":"1505:18:7","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,address,uint256) external returns (bool)"}},"id":1279,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"selector","nodeType":"MemberAccess","src":"1505:27:7","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},{"id":1280,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1266,"src":"1534:4:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1281,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1268,"src":"1540:2:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1282,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1270,"src":"1544:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes4","typeString":"bytes4"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":1275,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"1482:3:7","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":1276,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"encodeWithSelector","nodeType":"MemberAccess","src":"1482:22:7","typeDescriptions":{"typeIdentifier":"t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$","typeString":"function (bytes4) pure returns (bytes memory)"}},"id":1283,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1482:68:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$1166","typeString":"contract IERC20"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1273,"name":"_callOptionalReturn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1554,"src":"1455:19:7","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$1166_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (contract IERC20,bytes memory)"}},"id":1284,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1455:96:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1285,"nodeType":"ExpressionStatement","src":"1455:96:7"}]},"documentation":{"id":1261,"nodeType":"StructuredDocumentation","src":"1122:228:7","text":" @dev Transfer `value` amount of `token` from `from` to `to`, spending the approval given by `from` to the\n calling contract. If `token` returns no value, non-reverting calls are assumed to be successful."},"id":1287,"implemented":true,"kind":"function","modifiers":[],"name":"safeTransferFrom","nameLocation":"1364:16:7","nodeType":"FunctionDefinition","parameters":{"id":1271,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1264,"mutability":"mutable","name":"token","nameLocation":"1388:5:7","nodeType":"VariableDeclaration","scope":1287,"src":"1381:12:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1166","typeString":"contract IERC20"},"typeName":{"id":1263,"nodeType":"UserDefinedTypeName","pathNode":{"id":1262,"name":"IERC20","nodeType":"IdentifierPath","referencedDeclaration":1166,"src":"1381:6:7"},"referencedDeclaration":1166,"src":"1381:6:7","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1166","typeString":"contract IERC20"}},"visibility":"internal"},{"constant":false,"id":1266,"mutability":"mutable","name":"from","nameLocation":"1403:4:7","nodeType":"VariableDeclaration","scope":1287,"src":"1395:12:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1265,"name":"address","nodeType":"ElementaryTypeName","src":"1395:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1268,"mutability":"mutable","name":"to","nameLocation":"1417:2:7","nodeType":"VariableDeclaration","scope":1287,"src":"1409:10:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1267,"name":"address","nodeType":"ElementaryTypeName","src":"1409:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1270,"mutability":"mutable","name":"value","nameLocation":"1429:5:7","nodeType":"VariableDeclaration","scope":1287,"src":"1421:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1269,"name":"uint256","nodeType":"ElementaryTypeName","src":"1421:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1380:55:7"},"returnParameters":{"id":1272,"nodeType":"ParameterList","parameters":[],"src":"1445:0:7"},"scope":1603,"src":"1355:203:7","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1330,"nodeType":"Block","src":"1894:497:7","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1314,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1301,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1299,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1295,"src":"2143:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":1300,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2152:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2143:10:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"id":1302,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"2142:12:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1312,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"arguments":[{"id":1307,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"2183:4:7","typeDescriptions":{"typeIdentifier":"t_contract$_SafeERC20_$1603","typeString":"library SafeERC20"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_SafeERC20_$1603","typeString":"library SafeERC20"}],"id":1306,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2175:7:7","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1305,"name":"address","nodeType":"ElementaryTypeName","src":"2175:7:7","typeDescriptions":{}}},"id":1308,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2175:13:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1309,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1293,"src":"2190:7:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":1303,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1291,"src":"2159:5:7","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1166","typeString":"contract IERC20"}},"id":1304,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"allowance","nodeType":"MemberAccess","referencedDeclaration":1143,"src":"2159:15:7","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$","typeString":"function (address,address) view external returns (uint256)"}},"id":1310,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2159:39:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":1311,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2202:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2159:44:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"id":1313,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"2158:46:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"2142:62:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"5361666545524332303a20617070726f76652066726f6d206e6f6e2d7a65726f20746f206e6f6e2d7a65726f20616c6c6f77616e6365","id":1315,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2218:56:7","typeDescriptions":{"typeIdentifier":"t_stringliteral_ef945ddb1bfdc0da870feb4560d868b047642b4ac7f2fb7f8b7c51cb4a411e25","typeString":"literal_string \"SafeERC20: approve from non-zero to non-zero allowance\""},"value":"SafeERC20: approve from non-zero to non-zero allowance"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_ef945ddb1bfdc0da870feb4560d868b047642b4ac7f2fb7f8b7c51cb4a411e25","typeString":"literal_string \"SafeERC20: approve from non-zero to non-zero allowance\""}],"id":1298,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2121:7:7","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1316,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2121:163:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1317,"nodeType":"ExpressionStatement","src":"2121:163:7"},{"expression":{"arguments":[{"id":1319,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1291,"src":"2314:5:7","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1166","typeString":"contract IERC20"}},{"arguments":[{"expression":{"expression":{"id":1322,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1291,"src":"2344:5:7","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1166","typeString":"contract IERC20"}},"id":1323,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"approve","nodeType":"MemberAccess","referencedDeclaration":1153,"src":"2344:13:7","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) external returns (bool)"}},"id":1324,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"selector","nodeType":"MemberAccess","src":"2344:22:7","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},{"id":1325,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1293,"src":"2368:7:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1326,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1295,"src":"2377:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes4","typeString":"bytes4"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":1320,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"2321:3:7","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":1321,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"encodeWithSelector","nodeType":"MemberAccess","src":"2321:22:7","typeDescriptions":{"typeIdentifier":"t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$","typeString":"function (bytes4) pure returns (bytes memory)"}},"id":1327,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2321:62:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$1166","typeString":"contract IERC20"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1318,"name":"_callOptionalReturn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1554,"src":"2294:19:7","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$1166_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (contract IERC20,bytes memory)"}},"id":1328,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2294:90:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1329,"nodeType":"ExpressionStatement","src":"2294:90:7"}]},"documentation":{"id":1288,"nodeType":"StructuredDocumentation","src":"1564:249:7","text":" @dev Deprecated. This function has issues similar to the ones found in\n {IERC20-approve}, and its usage is discouraged.\n Whenever possible, use {safeIncreaseAllowance} and\n {safeDecreaseAllowance} instead."},"id":1331,"implemented":true,"kind":"function","modifiers":[],"name":"safeApprove","nameLocation":"1827:11:7","nodeType":"FunctionDefinition","parameters":{"id":1296,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1291,"mutability":"mutable","name":"token","nameLocation":"1846:5:7","nodeType":"VariableDeclaration","scope":1331,"src":"1839:12:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1166","typeString":"contract IERC20"},"typeName":{"id":1290,"nodeType":"UserDefinedTypeName","pathNode":{"id":1289,"name":"IERC20","nodeType":"IdentifierPath","referencedDeclaration":1166,"src":"1839:6:7"},"referencedDeclaration":1166,"src":"1839:6:7","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1166","typeString":"contract IERC20"}},"visibility":"internal"},{"constant":false,"id":1293,"mutability":"mutable","name":"spender","nameLocation":"1861:7:7","nodeType":"VariableDeclaration","scope":1331,"src":"1853:15:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1292,"name":"address","nodeType":"ElementaryTypeName","src":"1853:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1295,"mutability":"mutable","name":"value","nameLocation":"1878:5:7","nodeType":"VariableDeclaration","scope":1331,"src":"1870:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1294,"name":"uint256","nodeType":"ElementaryTypeName","src":"1870:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1838:46:7"},"returnParameters":{"id":1297,"nodeType":"ParameterList","parameters":[],"src":"1894:0:7"},"scope":1603,"src":"1818:573:7","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1367,"nodeType":"Block","src":"2668:194:7","statements":[{"assignments":[1343],"declarations":[{"constant":false,"id":1343,"mutability":"mutable","name":"oldAllowance","nameLocation":"2686:12:7","nodeType":"VariableDeclaration","scope":1367,"src":"2678:20:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1342,"name":"uint256","nodeType":"ElementaryTypeName","src":"2678:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1352,"initialValue":{"arguments":[{"arguments":[{"id":1348,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"2725:4:7","typeDescriptions":{"typeIdentifier":"t_contract$_SafeERC20_$1603","typeString":"library SafeERC20"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_SafeERC20_$1603","typeString":"library SafeERC20"}],"id":1347,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2717:7:7","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1346,"name":"address","nodeType":"ElementaryTypeName","src":"2717:7:7","typeDescriptions":{}}},"id":1349,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2717:13:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1350,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1337,"src":"2732:7:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":1344,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1335,"src":"2701:5:7","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1166","typeString":"contract IERC20"}},"id":1345,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"allowance","nodeType":"MemberAccess","referencedDeclaration":1143,"src":"2701:15:7","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$","typeString":"function (address,address) view external returns (uint256)"}},"id":1351,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2701:39:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2678:62:7"},{"expression":{"arguments":[{"id":1354,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1335,"src":"2770:5:7","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1166","typeString":"contract IERC20"}},{"arguments":[{"expression":{"expression":{"id":1357,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1335,"src":"2800:5:7","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1166","typeString":"contract IERC20"}},"id":1358,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"approve","nodeType":"MemberAccess","referencedDeclaration":1153,"src":"2800:13:7","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) external returns (bool)"}},"id":1359,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"selector","nodeType":"MemberAccess","src":"2800:22:7","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},{"id":1360,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1337,"src":"2824:7:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1363,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1361,"name":"oldAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1343,"src":"2833:12:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":1362,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1339,"src":"2848:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2833:20:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes4","typeString":"bytes4"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":1355,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"2777:3:7","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":1356,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"encodeWithSelector","nodeType":"MemberAccess","src":"2777:22:7","typeDescriptions":{"typeIdentifier":"t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$","typeString":"function (bytes4) pure returns (bytes memory)"}},"id":1364,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2777:77:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$1166","typeString":"contract IERC20"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1353,"name":"_callOptionalReturn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1554,"src":"2750:19:7","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$1166_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (contract IERC20,bytes memory)"}},"id":1365,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2750:105:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1366,"nodeType":"ExpressionStatement","src":"2750:105:7"}]},"documentation":{"id":1332,"nodeType":"StructuredDocumentation","src":"2397:180:7","text":" @dev Increase the calling contract's allowance toward `spender` by `value`. If `token` returns no value,\n non-reverting calls are assumed to be successful."},"id":1368,"implemented":true,"kind":"function","modifiers":[],"name":"safeIncreaseAllowance","nameLocation":"2591:21:7","nodeType":"FunctionDefinition","parameters":{"id":1340,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1335,"mutability":"mutable","name":"token","nameLocation":"2620:5:7","nodeType":"VariableDeclaration","scope":1368,"src":"2613:12:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1166","typeString":"contract IERC20"},"typeName":{"id":1334,"nodeType":"UserDefinedTypeName","pathNode":{"id":1333,"name":"IERC20","nodeType":"IdentifierPath","referencedDeclaration":1166,"src":"2613:6:7"},"referencedDeclaration":1166,"src":"2613:6:7","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1166","typeString":"contract IERC20"}},"visibility":"internal"},{"constant":false,"id":1337,"mutability":"mutable","name":"spender","nameLocation":"2635:7:7","nodeType":"VariableDeclaration","scope":1368,"src":"2627:15:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1336,"name":"address","nodeType":"ElementaryTypeName","src":"2627:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1339,"mutability":"mutable","name":"value","nameLocation":"2652:5:7","nodeType":"VariableDeclaration","scope":1368,"src":"2644:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1338,"name":"uint256","nodeType":"ElementaryTypeName","src":"2644:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2612:46:7"},"returnParameters":{"id":1341,"nodeType":"ParameterList","parameters":[],"src":"2668:0:7"},"scope":1603,"src":"2582:280:7","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1412,"nodeType":"Block","src":"3139:321:7","statements":[{"id":1411,"nodeType":"UncheckedBlock","src":"3149:305:7","statements":[{"assignments":[1380],"declarations":[{"constant":false,"id":1380,"mutability":"mutable","name":"oldAllowance","nameLocation":"3181:12:7","nodeType":"VariableDeclaration","scope":1411,"src":"3173:20:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1379,"name":"uint256","nodeType":"ElementaryTypeName","src":"3173:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1389,"initialValue":{"arguments":[{"arguments":[{"id":1385,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"3220:4:7","typeDescriptions":{"typeIdentifier":"t_contract$_SafeERC20_$1603","typeString":"library SafeERC20"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_SafeERC20_$1603","typeString":"library SafeERC20"}],"id":1384,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3212:7:7","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1383,"name":"address","nodeType":"ElementaryTypeName","src":"3212:7:7","typeDescriptions":{}}},"id":1386,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3212:13:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1387,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1374,"src":"3227:7:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":1381,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1372,"src":"3196:5:7","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1166","typeString":"contract IERC20"}},"id":1382,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"allowance","nodeType":"MemberAccess","referencedDeclaration":1143,"src":"3196:15:7","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$","typeString":"function (address,address) view external returns (uint256)"}},"id":1388,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3196:39:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"3173:62:7"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1393,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1391,"name":"oldAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1380,"src":"3257:12:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":1392,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1376,"src":"3273:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3257:21:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"5361666545524332303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726f","id":1394,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3280:43:7","typeDescriptions":{"typeIdentifier":"t_stringliteral_2c3af60974a758b7e72e108c9bf0943ecc9e4f2e8af4695da5f52fbf57a63d3a","typeString":"literal_string \"SafeERC20: decreased allowance below zero\""},"value":"SafeERC20: decreased allowance below zero"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_2c3af60974a758b7e72e108c9bf0943ecc9e4f2e8af4695da5f52fbf57a63d3a","typeString":"literal_string \"SafeERC20: decreased allowance below zero\""}],"id":1390,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"3249:7:7","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1395,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3249:75:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1396,"nodeType":"ExpressionStatement","src":"3249:75:7"},{"expression":{"arguments":[{"id":1398,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1372,"src":"3358:5:7","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1166","typeString":"contract IERC20"}},{"arguments":[{"expression":{"expression":{"id":1401,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1372,"src":"3388:5:7","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1166","typeString":"contract IERC20"}},"id":1402,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"approve","nodeType":"MemberAccess","referencedDeclaration":1153,"src":"3388:13:7","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) external returns (bool)"}},"id":1403,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"selector","nodeType":"MemberAccess","src":"3388:22:7","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},{"id":1404,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1374,"src":"3412:7:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1407,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1405,"name":"oldAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1380,"src":"3421:12:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":1406,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1376,"src":"3436:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3421:20:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes4","typeString":"bytes4"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":1399,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"3365:3:7","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":1400,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"encodeWithSelector","nodeType":"MemberAccess","src":"3365:22:7","typeDescriptions":{"typeIdentifier":"t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$","typeString":"function (bytes4) pure returns (bytes memory)"}},"id":1408,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3365:77:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$1166","typeString":"contract IERC20"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1397,"name":"_callOptionalReturn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1554,"src":"3338:19:7","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$1166_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (contract IERC20,bytes memory)"}},"id":1409,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3338:105:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1410,"nodeType":"ExpressionStatement","src":"3338:105:7"}]}]},"documentation":{"id":1369,"nodeType":"StructuredDocumentation","src":"2868:180:7","text":" @dev Decrease the calling contract's allowance toward `spender` by `value`. If `token` returns no value,\n non-reverting calls are assumed to be successful."},"id":1413,"implemented":true,"kind":"function","modifiers":[],"name":"safeDecreaseAllowance","nameLocation":"3062:21:7","nodeType":"FunctionDefinition","parameters":{"id":1377,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1372,"mutability":"mutable","name":"token","nameLocation":"3091:5:7","nodeType":"VariableDeclaration","scope":1413,"src":"3084:12:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1166","typeString":"contract IERC20"},"typeName":{"id":1371,"nodeType":"UserDefinedTypeName","pathNode":{"id":1370,"name":"IERC20","nodeType":"IdentifierPath","referencedDeclaration":1166,"src":"3084:6:7"},"referencedDeclaration":1166,"src":"3084:6:7","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1166","typeString":"contract IERC20"}},"visibility":"internal"},{"constant":false,"id":1374,"mutability":"mutable","name":"spender","nameLocation":"3106:7:7","nodeType":"VariableDeclaration","scope":1413,"src":"3098:15:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1373,"name":"address","nodeType":"ElementaryTypeName","src":"3098:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1376,"mutability":"mutable","name":"value","nameLocation":"3123:5:7","nodeType":"VariableDeclaration","scope":1413,"src":"3115:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1375,"name":"uint256","nodeType":"ElementaryTypeName","src":"3115:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3083:46:7"},"returnParameters":{"id":1378,"nodeType":"ParameterList","parameters":[],"src":"3139:0:7"},"scope":1603,"src":"3053:407:7","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1459,"nodeType":"Block","src":"3833:333:7","statements":[{"assignments":[1425],"declarations":[{"constant":false,"id":1425,"mutability":"mutable","name":"approvalCall","nameLocation":"3856:12:7","nodeType":"VariableDeclaration","scope":1459,"src":"3843:25:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1424,"name":"bytes","nodeType":"ElementaryTypeName","src":"3843:5:7","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":1434,"initialValue":{"arguments":[{"expression":{"expression":{"id":1428,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1417,"src":"3894:5:7","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1166","typeString":"contract IERC20"}},"id":1429,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"approve","nodeType":"MemberAccess","referencedDeclaration":1153,"src":"3894:13:7","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) external returns (bool)"}},"id":1430,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"selector","nodeType":"MemberAccess","src":"3894:22:7","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},{"id":1431,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1419,"src":"3918:7:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1432,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1421,"src":"3927:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes4","typeString":"bytes4"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":1426,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"3871:3:7","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":1427,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"encodeWithSelector","nodeType":"MemberAccess","src":"3871:22:7","typeDescriptions":{"typeIdentifier":"t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$","typeString":"function (bytes4) pure returns (bytes memory)"}},"id":1433,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3871:62:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"3843:90:7"},{"condition":{"id":1439,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"3948:45:7","subExpression":{"arguments":[{"id":1436,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1417,"src":"3973:5:7","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1166","typeString":"contract IERC20"}},{"id":1437,"name":"approvalCall","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1425,"src":"3980:12:7","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$1166","typeString":"contract IERC20"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1435,"name":"_callOptionalReturnBool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1602,"src":"3949:23:7","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$1166_$_t_bytes_memory_ptr_$returns$_t_bool_$","typeString":"function (contract IERC20,bytes memory) returns (bool)"}},"id":1438,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3949:44:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1458,"nodeType":"IfStatement","src":"3944:216:7","trueBody":{"id":1457,"nodeType":"Block","src":"3995:165:7","statements":[{"expression":{"arguments":[{"id":1441,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1417,"src":"4029:5:7","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1166","typeString":"contract IERC20"}},{"arguments":[{"expression":{"expression":{"id":1444,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1417,"src":"4059:5:7","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1166","typeString":"contract IERC20"}},"id":1445,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"approve","nodeType":"MemberAccess","referencedDeclaration":1153,"src":"4059:13:7","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) external returns (bool)"}},"id":1446,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"selector","nodeType":"MemberAccess","src":"4059:22:7","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},{"id":1447,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1419,"src":"4083:7:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"hexValue":"30","id":1448,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4092:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes4","typeString":"bytes4"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"expression":{"id":1442,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"4036:3:7","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":1443,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"encodeWithSelector","nodeType":"MemberAccess","src":"4036:22:7","typeDescriptions":{"typeIdentifier":"t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$","typeString":"function (bytes4) pure returns (bytes memory)"}},"id":1449,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4036:58:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$1166","typeString":"contract IERC20"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1440,"name":"_callOptionalReturn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1554,"src":"4009:19:7","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$1166_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (contract IERC20,bytes memory)"}},"id":1450,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4009:86:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1451,"nodeType":"ExpressionStatement","src":"4009:86:7"},{"expression":{"arguments":[{"id":1453,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1417,"src":"4129:5:7","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1166","typeString":"contract IERC20"}},{"id":1454,"name":"approvalCall","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1425,"src":"4136:12:7","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$1166","typeString":"contract IERC20"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1452,"name":"_callOptionalReturn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1554,"src":"4109:19:7","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$1166_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (contract IERC20,bytes memory)"}},"id":1455,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4109:40:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1456,"nodeType":"ExpressionStatement","src":"4109:40:7"}]}}]},"documentation":{"id":1414,"nodeType":"StructuredDocumentation","src":"3466:285:7","text":" @dev Set the calling contract's allowance toward `spender` to `value`. If `token` returns no value,\n non-reverting calls are assumed to be successful. Compatible with tokens that require the approval to be set to\n 0 before setting it to a non-zero value."},"id":1460,"implemented":true,"kind":"function","modifiers":[],"name":"forceApprove","nameLocation":"3765:12:7","nodeType":"FunctionDefinition","parameters":{"id":1422,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1417,"mutability":"mutable","name":"token","nameLocation":"3785:5:7","nodeType":"VariableDeclaration","scope":1460,"src":"3778:12:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1166","typeString":"contract IERC20"},"typeName":{"id":1416,"nodeType":"UserDefinedTypeName","pathNode":{"id":1415,"name":"IERC20","nodeType":"IdentifierPath","referencedDeclaration":1166,"src":"3778:6:7"},"referencedDeclaration":1166,"src":"3778:6:7","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1166","typeString":"contract IERC20"}},"visibility":"internal"},{"constant":false,"id":1419,"mutability":"mutable","name":"spender","nameLocation":"3800:7:7","nodeType":"VariableDeclaration","scope":1460,"src":"3792:15:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1418,"name":"address","nodeType":"ElementaryTypeName","src":"3792:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1421,"mutability":"mutable","name":"value","nameLocation":"3817:5:7","nodeType":"VariableDeclaration","scope":1460,"src":"3809:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1420,"name":"uint256","nodeType":"ElementaryTypeName","src":"3809:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3777:46:7"},"returnParameters":{"id":1423,"nodeType":"ParameterList","parameters":[],"src":"3833:0:7"},"scope":1603,"src":"3756:410:7","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1516,"nodeType":"Block","src":"4533:257:7","statements":[{"assignments":[1482],"declarations":[{"constant":false,"id":1482,"mutability":"mutable","name":"nonceBefore","nameLocation":"4551:11:7","nodeType":"VariableDeclaration","scope":1516,"src":"4543:19:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1481,"name":"uint256","nodeType":"ElementaryTypeName","src":"4543:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1487,"initialValue":{"arguments":[{"id":1485,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1466,"src":"4578:5:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":1483,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1464,"src":"4565:5:7","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20Permit_$1227","typeString":"contract IERC20Permit"}},"id":1484,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"nonces","nodeType":"MemberAccess","referencedDeclaration":1220,"src":"4565:12:7","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$returns$_t_uint256_$","typeString":"function (address) view external returns (uint256)"}},"id":1486,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4565:19:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"4543:41:7"},{"expression":{"arguments":[{"id":1491,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1466,"src":"4607:5:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1492,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1468,"src":"4614:7:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1493,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1470,"src":"4623:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1494,"name":"deadline","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1472,"src":"4630:8:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1495,"name":"v","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1474,"src":"4640:1:7","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},{"id":1496,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1476,"src":"4643:1:7","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":1497,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1478,"src":"4646:1:7","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint8","typeString":"uint8"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":1488,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1464,"src":"4594:5:7","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20Permit_$1227","typeString":"contract IERC20Permit"}},"id":1490,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"permit","nodeType":"MemberAccess","referencedDeclaration":1212,"src":"4594:12:7","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$__$","typeString":"function (address,address,uint256,uint256,uint8,bytes32,bytes32) external"}},"id":1498,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4594:54:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1499,"nodeType":"ExpressionStatement","src":"4594:54:7"},{"assignments":[1501],"declarations":[{"constant":false,"id":1501,"mutability":"mutable","name":"nonceAfter","nameLocation":"4666:10:7","nodeType":"VariableDeclaration","scope":1516,"src":"4658:18:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1500,"name":"uint256","nodeType":"ElementaryTypeName","src":"4658:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1506,"initialValue":{"arguments":[{"id":1504,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1466,"src":"4692:5:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":1502,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1464,"src":"4679:5:7","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20Permit_$1227","typeString":"contract IERC20Permit"}},"id":1503,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"nonces","nodeType":"MemberAccess","referencedDeclaration":1220,"src":"4679:12:7","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$returns$_t_uint256_$","typeString":"function (address) view external returns (uint256)"}},"id":1505,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4679:19:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"4658:40:7"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1512,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1508,"name":"nonceAfter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1501,"src":"4716:10:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1511,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1509,"name":"nonceBefore","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1482,"src":"4730:11:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":1510,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4744:1:7","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"4730:15:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4716:29:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"5361666545524332303a207065726d697420646964206e6f742073756363656564","id":1513,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4747:35:7","typeDescriptions":{"typeIdentifier":"t_stringliteral_cde8e927812a7a656f8f04e89ac4f4113d47940dd2125d11fcb8e0bd36bfc59d","typeString":"literal_string \"SafeERC20: permit did not succeed\""},"value":"SafeERC20: permit did not succeed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_cde8e927812a7a656f8f04e89ac4f4113d47940dd2125d11fcb8e0bd36bfc59d","typeString":"literal_string \"SafeERC20: permit did not succeed\""}],"id":1507,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"4708:7:7","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1514,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4708:75:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1515,"nodeType":"ExpressionStatement","src":"4708:75:7"}]},"documentation":{"id":1461,"nodeType":"StructuredDocumentation","src":"4172:141:7","text":" @dev Use a ERC-2612 signature to set the `owner` approval toward `spender` on `token`.\n Revert on invalid signature."},"id":1517,"implemented":true,"kind":"function","modifiers":[],"name":"safePermit","nameLocation":"4327:10:7","nodeType":"FunctionDefinition","parameters":{"id":1479,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1464,"mutability":"mutable","name":"token","nameLocation":"4360:5:7","nodeType":"VariableDeclaration","scope":1517,"src":"4347:18:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20Permit_$1227","typeString":"contract IERC20Permit"},"typeName":{"id":1463,"nodeType":"UserDefinedTypeName","pathNode":{"id":1462,"name":"IERC20Permit","nodeType":"IdentifierPath","referencedDeclaration":1227,"src":"4347:12:7"},"referencedDeclaration":1227,"src":"4347:12:7","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20Permit_$1227","typeString":"contract IERC20Permit"}},"visibility":"internal"},{"constant":false,"id":1466,"mutability":"mutable","name":"owner","nameLocation":"4383:5:7","nodeType":"VariableDeclaration","scope":1517,"src":"4375:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1465,"name":"address","nodeType":"ElementaryTypeName","src":"4375:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1468,"mutability":"mutable","name":"spender","nameLocation":"4406:7:7","nodeType":"VariableDeclaration","scope":1517,"src":"4398:15:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1467,"name":"address","nodeType":"ElementaryTypeName","src":"4398:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1470,"mutability":"mutable","name":"value","nameLocation":"4431:5:7","nodeType":"VariableDeclaration","scope":1517,"src":"4423:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1469,"name":"uint256","nodeType":"ElementaryTypeName","src":"4423:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1472,"mutability":"mutable","name":"deadline","nameLocation":"4454:8:7","nodeType":"VariableDeclaration","scope":1517,"src":"4446:16:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1471,"name":"uint256","nodeType":"ElementaryTypeName","src":"4446:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1474,"mutability":"mutable","name":"v","nameLocation":"4478:1:7","nodeType":"VariableDeclaration","scope":1517,"src":"4472:7:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":1473,"name":"uint8","nodeType":"ElementaryTypeName","src":"4472:5:7","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":1476,"mutability":"mutable","name":"r","nameLocation":"4497:1:7","nodeType":"VariableDeclaration","scope":1517,"src":"4489:9:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1475,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4489:7:7","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":1478,"mutability":"mutable","name":"s","nameLocation":"4516:1:7","nodeType":"VariableDeclaration","scope":1517,"src":"4508:9:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1477,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4508:7:7","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"4337:186:7"},"returnParameters":{"id":1480,"nodeType":"ParameterList","parameters":[],"src":"4533:0:7"},"scope":1603,"src":"4318:472:7","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1553,"nodeType":"Block","src":"5243:572:7","statements":[{"assignments":[1527],"declarations":[{"constant":false,"id":1527,"mutability":"mutable","name":"returndata","nameLocation":"5605:10:7","nodeType":"VariableDeclaration","scope":1553,"src":"5592:23:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1526,"name":"bytes","nodeType":"ElementaryTypeName","src":"5592:5:7","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":1536,"initialValue":{"arguments":[{"id":1533,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1523,"src":"5646:4:7","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"hexValue":"5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564","id":1534,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5652:34:7","typeDescriptions":{"typeIdentifier":"t_stringliteral_47fb62c2c272651d2f0f342bac006756b8ba07f21cc5cb87e0fbb9d50c0c585b","typeString":"literal_string \"SafeERC20: low-level call failed\""},"value":"SafeERC20: low-level call failed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_stringliteral_47fb62c2c272651d2f0f342bac006756b8ba07f21cc5cb87e0fbb9d50c0c585b","typeString":"literal_string \"SafeERC20: low-level call failed\""}],"expression":{"arguments":[{"id":1530,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1521,"src":"5626:5:7","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1166","typeString":"contract IERC20"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$1166","typeString":"contract IERC20"}],"id":1529,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5618:7:7","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1528,"name":"address","nodeType":"ElementaryTypeName","src":"5618:7:7","typeDescriptions":{}}},"id":1531,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5618:14:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1532,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"functionCall","nodeType":"MemberAccess","referencedDeclaration":1693,"src":"5618:27:7","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$bound_to$_t_address_$","typeString":"function (address,bytes memory,string memory) returns (bytes memory)"}},"id":1535,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5618:69:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"5592:95:7"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1549,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1541,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1538,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1527,"src":"5705:10:7","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1539,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"5705:17:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":1540,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5726:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"5705:22:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"arguments":[{"id":1544,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1527,"src":"5742:10:7","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"components":[{"id":1546,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5755:4:7","typeDescriptions":{"typeIdentifier":"t_type$_t_bool_$","typeString":"type(bool)"},"typeName":{"id":1545,"name":"bool","nodeType":"ElementaryTypeName","src":"5755:4:7","typeDescriptions":{}}}],"id":1547,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"5754:6:7","typeDescriptions":{"typeIdentifier":"t_type$_t_bool_$","typeString":"type(bool)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_type$_t_bool_$","typeString":"type(bool)"}],"expression":{"id":1542,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"5731:3:7","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":1543,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"decode","nodeType":"MemberAccess","src":"5731:10:7","typeDescriptions":{"typeIdentifier":"t_function_abidecode_pure$__$returns$__$","typeString":"function () pure"}},"id":1548,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5731:30:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"5705:56:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"5361666545524332303a204552433230206f7065726174696f6e20646964206e6f742073756363656564","id":1550,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5763:44:7","typeDescriptions":{"typeIdentifier":"t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd","typeString":"literal_string \"SafeERC20: ERC20 operation did not succeed\""},"value":"SafeERC20: ERC20 operation did not succeed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd","typeString":"literal_string \"SafeERC20: ERC20 operation did not succeed\""}],"id":1537,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"5697:7:7","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1551,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5697:111:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1552,"nodeType":"ExpressionStatement","src":"5697:111:7"}]},"documentation":{"id":1518,"nodeType":"StructuredDocumentation","src":"4796:372:7","text":" @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n on the return value: the return value is optional (but if data is returned, it must not be false).\n @param token The token targeted by the call.\n @param data The call data (encoded using abi.encode or one of its variants)."},"id":1554,"implemented":true,"kind":"function","modifiers":[],"name":"_callOptionalReturn","nameLocation":"5182:19:7","nodeType":"FunctionDefinition","parameters":{"id":1524,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1521,"mutability":"mutable","name":"token","nameLocation":"5209:5:7","nodeType":"VariableDeclaration","scope":1554,"src":"5202:12:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1166","typeString":"contract IERC20"},"typeName":{"id":1520,"nodeType":"UserDefinedTypeName","pathNode":{"id":1519,"name":"IERC20","nodeType":"IdentifierPath","referencedDeclaration":1166,"src":"5202:6:7"},"referencedDeclaration":1166,"src":"5202:6:7","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1166","typeString":"contract IERC20"}},"visibility":"internal"},{"constant":false,"id":1523,"mutability":"mutable","name":"data","nameLocation":"5229:4:7","nodeType":"VariableDeclaration","scope":1554,"src":"5216:17:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1522,"name":"bytes","nodeType":"ElementaryTypeName","src":"5216:5:7","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"5201:33:7"},"returnParameters":{"id":1525,"nodeType":"ParameterList","parameters":[],"src":"5243:0:7"},"scope":1603,"src":"5173:642:7","stateMutability":"nonpayable","virtual":false,"visibility":"private"},{"body":{"id":1601,"nodeType":"Block","src":"6405:505:7","statements":[{"assignments":[1566,1568],"declarations":[{"constant":false,"id":1566,"mutability":"mutable","name":"success","nameLocation":"6706:7:7","nodeType":"VariableDeclaration","scope":1601,"src":"6701:12:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1565,"name":"bool","nodeType":"ElementaryTypeName","src":"6701:4:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":1568,"mutability":"mutable","name":"returndata","nameLocation":"6728:10:7","nodeType":"VariableDeclaration","scope":1601,"src":"6715:23:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1567,"name":"bytes","nodeType":"ElementaryTypeName","src":"6715:5:7","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":1576,"initialValue":{"arguments":[{"id":1574,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1560,"src":"6762:4:7","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"arguments":[{"id":1571,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1558,"src":"6750:5:7","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1166","typeString":"contract IERC20"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$1166","typeString":"contract IERC20"}],"id":1570,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6742:7:7","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1569,"name":"address","nodeType":"ElementaryTypeName","src":"6742:7:7","typeDescriptions":{}}},"id":1572,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6742:14:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1573,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"call","nodeType":"MemberAccess","src":"6742:19:7","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":1575,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6742:25:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"6700:67:7"},{"expression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1599,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1591,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1577,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1566,"src":"6796:7:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1589,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1581,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1578,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1568,"src":"6808:10:7","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1579,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"6808:17:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":1580,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6829:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"6808:22:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"arguments":[{"id":1584,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1568,"src":"6845:10:7","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"components":[{"id":1586,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6858:4:7","typeDescriptions":{"typeIdentifier":"t_type$_t_bool_$","typeString":"type(bool)"},"typeName":{"id":1585,"name":"bool","nodeType":"ElementaryTypeName","src":"6858:4:7","typeDescriptions":{}}}],"id":1587,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"6857:6:7","typeDescriptions":{"typeIdentifier":"t_type$_t_bool_$","typeString":"type(bool)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_type$_t_bool_$","typeString":"type(bool)"}],"expression":{"id":1582,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"6834:3:7","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":1583,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"decode","nodeType":"MemberAccess","src":"6834:10:7","typeDescriptions":{"typeIdentifier":"t_function_abidecode_pure$__$returns$__$","typeString":"function () pure"}},"id":1588,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6834:30:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"6808:56:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"id":1590,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"6807:58:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"6796:69:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"arguments":[{"arguments":[{"id":1596,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1558,"src":"6896:5:7","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1166","typeString":"contract IERC20"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$1166","typeString":"contract IERC20"}],"id":1595,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6888:7:7","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1594,"name":"address","nodeType":"ElementaryTypeName","src":"6888:7:7","typeDescriptions":{}}},"id":1597,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6888:14:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":1592,"name":"Address","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1933,"src":"6869:7:7","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Address_$1933_$","typeString":"type(library Address)"}},"id":1593,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"isContract","nodeType":"MemberAccess","referencedDeclaration":1621,"src":"6869:18:7","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_bool_$","typeString":"function (address) view returns (bool)"}},"id":1598,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6869:34:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"6796:107:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":1564,"id":1600,"nodeType":"Return","src":"6777:126:7"}]},"documentation":{"id":1555,"nodeType":"StructuredDocumentation","src":"5821:490:7","text":" @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n on the return value: the return value is optional (but if data is returned, it must not be false).\n @param token The token targeted by the call.\n @param data The call data (encoded using abi.encode or one of its variants).\n This is a variant of {_callOptionalReturn} that silents catches all reverts and returns a bool instead."},"id":1602,"implemented":true,"kind":"function","modifiers":[],"name":"_callOptionalReturnBool","nameLocation":"6325:23:7","nodeType":"FunctionDefinition","parameters":{"id":1561,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1558,"mutability":"mutable","name":"token","nameLocation":"6356:5:7","nodeType":"VariableDeclaration","scope":1602,"src":"6349:12:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1166","typeString":"contract IERC20"},"typeName":{"id":1557,"nodeType":"UserDefinedTypeName","pathNode":{"id":1556,"name":"IERC20","nodeType":"IdentifierPath","referencedDeclaration":1166,"src":"6349:6:7"},"referencedDeclaration":1166,"src":"6349:6:7","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1166","typeString":"contract IERC20"}},"visibility":"internal"},{"constant":false,"id":1560,"mutability":"mutable","name":"data","nameLocation":"6376:4:7","nodeType":"VariableDeclaration","scope":1602,"src":"6363:17:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1559,"name":"bytes","nodeType":"ElementaryTypeName","src":"6363:5:7","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"6348:33:7"},"returnParameters":{"id":1564,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1563,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1602,"src":"6399:4:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1562,"name":"bool","nodeType":"ElementaryTypeName","src":"6399:4:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"6398:6:7"},"scope":1603,"src":"6316:594:7","stateMutability":"nonpayable","virtual":false,"visibility":"private"}],"scope":1604,"src":"701:6211:7","usedErrors":[]}],"src":"115:6798:7"}},"@openzeppelin/contracts/utils/Address.sol":{"id":8,"ast":{"absolutePath":"@openzeppelin/contracts/utils/Address.sol","exportedSymbols":{"Address":[1933]},"id":1934,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1605,"literals":["solidity","^","0.8",".1"],"nodeType":"PragmaDirective","src":"101:23:8"},{"abstract":false,"baseContracts":[],"canonicalName":"Address","contractDependencies":[],"contractKind":"library","documentation":{"id":1606,"nodeType":"StructuredDocumentation","src":"126:67:8","text":" @dev Collection of functions related to the address type"},"fullyImplemented":true,"id":1933,"linearizedBaseContracts":[1933],"name":"Address","nameLocation":"202:7:8","nodeType":"ContractDefinition","nodes":[{"body":{"id":1620,"nodeType":"Block","src":"1478:254:8","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1618,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"expression":{"id":1614,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1609,"src":"1702:7:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1615,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"code","nodeType":"MemberAccess","src":"1702:12:8","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1616,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"1702:19:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":1617,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1724:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1702:23:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":1613,"id":1619,"nodeType":"Return","src":"1695:30:8"}]},"documentation":{"id":1607,"nodeType":"StructuredDocumentation","src":"216:1191:8","text":" @dev Returns true if `account` is a contract.\n [IMPORTANT]\n ====\n It is unsafe to assume that an address for which this function returns\n false is an externally-owned account (EOA) and not a contract.\n Among others, `isContract` will return false for the following\n types of addresses:\n  - an externally-owned account\n  - a contract in construction\n  - an address where a contract will be created\n  - an address where a contract lived, but was destroyed\n Furthermore, `isContract` will also return true if the target contract within\n the same transaction is already scheduled for destruction by `SELFDESTRUCT`,\n which only has an effect at the end of a transaction.\n ====\n [IMPORTANT]\n ====\n You shouldn't rely on `isContract` to protect against flash loan attacks!\n Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\n like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\n constructor.\n ===="},"id":1621,"implemented":true,"kind":"function","modifiers":[],"name":"isContract","nameLocation":"1421:10:8","nodeType":"FunctionDefinition","parameters":{"id":1610,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1609,"mutability":"mutable","name":"account","nameLocation":"1440:7:8","nodeType":"VariableDeclaration","scope":1621,"src":"1432:15:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1608,"name":"address","nodeType":"ElementaryTypeName","src":"1432:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1431:17:8"},"returnParameters":{"id":1613,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1612,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1621,"src":"1472:4:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1611,"name":"bool","nodeType":"ElementaryTypeName","src":"1472:4:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1471:6:8"},"scope":1933,"src":"1412:320:8","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":1654,"nodeType":"Block","src":"2718:241:8","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1636,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":1632,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"2744:4:8","typeDescriptions":{"typeIdentifier":"t_contract$_Address_$1933","typeString":"library Address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_Address_$1933","typeString":"library Address"}],"id":1631,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2736:7:8","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1630,"name":"address","nodeType":"ElementaryTypeName","src":"2736:7:8","typeDescriptions":{}}},"id":1633,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2736:13:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1634,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"balance","nodeType":"MemberAccess","src":"2736:21:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":1635,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1626,"src":"2761:6:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2736:31:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"416464726573733a20696e73756666696369656e742062616c616e6365","id":1637,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2769:31:8","typeDescriptions":{"typeIdentifier":"t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9","typeString":"literal_string \"Address: insufficient balance\""},"value":"Address: insufficient balance"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9","typeString":"literal_string \"Address: insufficient balance\""}],"id":1629,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2728:7:8","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1638,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2728:73:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1639,"nodeType":"ExpressionStatement","src":"2728:73:8"},{"assignments":[1641,null],"declarations":[{"constant":false,"id":1641,"mutability":"mutable","name":"success","nameLocation":"2818:7:8","nodeType":"VariableDeclaration","scope":1654,"src":"2813:12:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1640,"name":"bool","nodeType":"ElementaryTypeName","src":"2813:4:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},null],"id":1648,"initialValue":{"arguments":[{"hexValue":"","id":1646,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2861:2:8","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"expression":{"id":1642,"name":"recipient","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1624,"src":"2831:9:8","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"id":1643,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"call","nodeType":"MemberAccess","src":"2831:14:8","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":1645,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"names":["value"],"nodeType":"FunctionCallOptions","options":[{"id":1644,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1626,"src":"2853:6:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"src":"2831:29:8","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":1647,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2831:33:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"2812:52:8"},{"expression":{"arguments":[{"id":1650,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1641,"src":"2882:7:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"416464726573733a20756e61626c6520746f2073656e642076616c75652c20726563697069656e74206d61792068617665207265766572746564","id":1651,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2891:60:8","typeDescriptions":{"typeIdentifier":"t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae","typeString":"literal_string \"Address: unable to send value, recipient may have reverted\""},"value":"Address: unable to send value, recipient may have reverted"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae","typeString":"literal_string \"Address: unable to send value, recipient may have reverted\""}],"id":1649,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2874:7:8","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1652,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2874:78:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1653,"nodeType":"ExpressionStatement","src":"2874:78:8"}]},"documentation":{"id":1622,"nodeType":"StructuredDocumentation","src":"1738:904:8","text":" @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n `recipient`, forwarding all available gas and reverting on errors.\n https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n of certain opcodes, possibly making contracts go over the 2300 gas limit\n imposed by `transfer`, making them unable to receive funds via\n `transfer`. {sendValue} removes this limitation.\n https://consensys.net/diligence/blog/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n IMPORTANT: because control is transferred to `recipient`, care must be\n taken to not create reentrancy vulnerabilities. Consider using\n {ReentrancyGuard} or the\n https://solidity.readthedocs.io/en/v0.8.0/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern]."},"id":1655,"implemented":true,"kind":"function","modifiers":[],"name":"sendValue","nameLocation":"2656:9:8","nodeType":"FunctionDefinition","parameters":{"id":1627,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1624,"mutability":"mutable","name":"recipient","nameLocation":"2682:9:8","nodeType":"VariableDeclaration","scope":1655,"src":"2666:25:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"},"typeName":{"id":1623,"name":"address","nodeType":"ElementaryTypeName","src":"2666:15:8","stateMutability":"payable","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"visibility":"internal"},{"constant":false,"id":1626,"mutability":"mutable","name":"amount","nameLocation":"2701:6:8","nodeType":"VariableDeclaration","scope":1655,"src":"2693:14:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1625,"name":"uint256","nodeType":"ElementaryTypeName","src":"2693:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2665:43:8"},"returnParameters":{"id":1628,"nodeType":"ParameterList","parameters":[],"src":"2718:0:8"},"scope":1933,"src":"2647:312:8","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1672,"nodeType":"Block","src":"3790:96:8","statements":[{"expression":{"arguments":[{"id":1666,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1658,"src":"3829:6:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1667,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1660,"src":"3837:4:8","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"hexValue":"30","id":1668,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3843:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"hexValue":"416464726573733a206c6f772d6c6576656c2063616c6c206661696c6564","id":1669,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3846:32:8","typeDescriptions":{"typeIdentifier":"t_stringliteral_24d7ab5d382116e64324f19950ca9340b8af1ddeb09a8d026e0a3c6a01dcc9df","typeString":"literal_string \"Address: low-level call failed\""},"value":"Address: low-level call failed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_stringliteral_24d7ab5d382116e64324f19950ca9340b8af1ddeb09a8d026e0a3c6a01dcc9df","typeString":"literal_string \"Address: low-level call failed\""}],"id":1665,"name":"functionCallWithValue","nodeType":"Identifier","overloadedDeclarations":[1713,1757],"referencedDeclaration":1757,"src":"3807:21:8","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bytes memory,uint256,string memory) returns (bytes memory)"}},"id":1670,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3807:72:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":1664,"id":1671,"nodeType":"Return","src":"3800:79:8"}]},"documentation":{"id":1656,"nodeType":"StructuredDocumentation","src":"2965:731:8","text":" @dev Performs a Solidity function call using a low level `call`. A\n plain `call` is an unsafe replacement for a function call: use this\n function instead.\n If `target` reverts with a revert reason, it is bubbled up by this\n function (like regular Solidity function calls).\n Returns the raw returned data. To convert to the expected return value,\n use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n Requirements:\n - `target` must be a contract.\n - calling `target` with `data` must not revert.\n _Available since v3.1._"},"id":1673,"implemented":true,"kind":"function","modifiers":[],"name":"functionCall","nameLocation":"3710:12:8","nodeType":"FunctionDefinition","parameters":{"id":1661,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1658,"mutability":"mutable","name":"target","nameLocation":"3731:6:8","nodeType":"VariableDeclaration","scope":1673,"src":"3723:14:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1657,"name":"address","nodeType":"ElementaryTypeName","src":"3723:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1660,"mutability":"mutable","name":"data","nameLocation":"3752:4:8","nodeType":"VariableDeclaration","scope":1673,"src":"3739:17:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1659,"name":"bytes","nodeType":"ElementaryTypeName","src":"3739:5:8","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3722:35:8"},"returnParameters":{"id":1664,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1663,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1673,"src":"3776:12:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1662,"name":"bytes","nodeType":"ElementaryTypeName","src":"3776:5:8","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3775:14:8"},"scope":1933,"src":"3701:185:8","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1692,"nodeType":"Block","src":"4255:76:8","statements":[{"expression":{"arguments":[{"id":1686,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1676,"src":"4294:6:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1687,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1678,"src":"4302:4:8","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"hexValue":"30","id":1688,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4308:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"id":1689,"name":"errorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1680,"src":"4311:12:8","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1685,"name":"functionCallWithValue","nodeType":"Identifier","overloadedDeclarations":[1713,1757],"referencedDeclaration":1757,"src":"4272:21:8","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bytes memory,uint256,string memory) returns (bytes memory)"}},"id":1690,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4272:52:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":1684,"id":1691,"nodeType":"Return","src":"4265:59:8"}]},"documentation":{"id":1674,"nodeType":"StructuredDocumentation","src":"3892:211:8","text":" @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\n `errorMessage` as a fallback revert reason when `target` reverts.\n _Available since v3.1._"},"id":1693,"implemented":true,"kind":"function","modifiers":[],"name":"functionCall","nameLocation":"4117:12:8","nodeType":"FunctionDefinition","parameters":{"id":1681,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1676,"mutability":"mutable","name":"target","nameLocation":"4147:6:8","nodeType":"VariableDeclaration","scope":1693,"src":"4139:14:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1675,"name":"address","nodeType":"ElementaryTypeName","src":"4139:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1678,"mutability":"mutable","name":"data","nameLocation":"4176:4:8","nodeType":"VariableDeclaration","scope":1693,"src":"4163:17:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1677,"name":"bytes","nodeType":"ElementaryTypeName","src":"4163:5:8","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":1680,"mutability":"mutable","name":"errorMessage","nameLocation":"4204:12:8","nodeType":"VariableDeclaration","scope":1693,"src":"4190:26:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1679,"name":"string","nodeType":"ElementaryTypeName","src":"4190:6:8","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"4129:93:8"},"returnParameters":{"id":1684,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1683,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1693,"src":"4241:12:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1682,"name":"bytes","nodeType":"ElementaryTypeName","src":"4241:5:8","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"4240:14:8"},"scope":1933,"src":"4108:223:8","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1712,"nodeType":"Block","src":"4806:111:8","statements":[{"expression":{"arguments":[{"id":1706,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1696,"src":"4845:6:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1707,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1698,"src":"4853:4:8","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":1708,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1700,"src":"4859:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"416464726573733a206c6f772d6c6576656c2063616c6c20776974682076616c7565206661696c6564","id":1709,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4866:43:8","typeDescriptions":{"typeIdentifier":"t_stringliteral_88a4a0b5e975840320a0475d4027005235904fdb5ece94df156f3d717cb2dbfc","typeString":"literal_string \"Address: low-level call with value failed\""},"value":"Address: low-level call with value failed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_stringliteral_88a4a0b5e975840320a0475d4027005235904fdb5ece94df156f3d717cb2dbfc","typeString":"literal_string \"Address: low-level call with value failed\""}],"id":1705,"name":"functionCallWithValue","nodeType":"Identifier","overloadedDeclarations":[1713,1757],"referencedDeclaration":1757,"src":"4823:21:8","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bytes memory,uint256,string memory) returns (bytes memory)"}},"id":1710,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4823:87:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":1704,"id":1711,"nodeType":"Return","src":"4816:94:8"}]},"documentation":{"id":1694,"nodeType":"StructuredDocumentation","src":"4337:351:8","text":" @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but also transferring `value` wei to `target`.\n Requirements:\n - the calling contract must have an ETH balance of at least `value`.\n - the called Solidity function must be `payable`.\n _Available since v3.1._"},"id":1713,"implemented":true,"kind":"function","modifiers":[],"name":"functionCallWithValue","nameLocation":"4702:21:8","nodeType":"FunctionDefinition","parameters":{"id":1701,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1696,"mutability":"mutable","name":"target","nameLocation":"4732:6:8","nodeType":"VariableDeclaration","scope":1713,"src":"4724:14:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1695,"name":"address","nodeType":"ElementaryTypeName","src":"4724:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1698,"mutability":"mutable","name":"data","nameLocation":"4753:4:8","nodeType":"VariableDeclaration","scope":1713,"src":"4740:17:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1697,"name":"bytes","nodeType":"ElementaryTypeName","src":"4740:5:8","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":1700,"mutability":"mutable","name":"value","nameLocation":"4767:5:8","nodeType":"VariableDeclaration","scope":1713,"src":"4759:13:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1699,"name":"uint256","nodeType":"ElementaryTypeName","src":"4759:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4723:50:8"},"returnParameters":{"id":1704,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1703,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1713,"src":"4792:12:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1702,"name":"bytes","nodeType":"ElementaryTypeName","src":"4792:5:8","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"4791:14:8"},"scope":1933,"src":"4693:224:8","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1756,"nodeType":"Block","src":"5344:267:8","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1734,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":1730,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"5370:4:8","typeDescriptions":{"typeIdentifier":"t_contract$_Address_$1933","typeString":"library Address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_Address_$1933","typeString":"library Address"}],"id":1729,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5362:7:8","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1728,"name":"address","nodeType":"ElementaryTypeName","src":"5362:7:8","typeDescriptions":{}}},"id":1731,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5362:13:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1732,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"balance","nodeType":"MemberAccess","src":"5362:21:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":1733,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1720,"src":"5387:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5362:30:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c6c","id":1735,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5394:40:8","typeDescriptions":{"typeIdentifier":"t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c","typeString":"literal_string \"Address: insufficient balance for call\""},"value":"Address: insufficient balance for call"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c","typeString":"literal_string \"Address: insufficient balance for call\""}],"id":1727,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"5354:7:8","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1736,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5354:81:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1737,"nodeType":"ExpressionStatement","src":"5354:81:8"},{"assignments":[1739,1741],"declarations":[{"constant":false,"id":1739,"mutability":"mutable","name":"success","nameLocation":"5451:7:8","nodeType":"VariableDeclaration","scope":1756,"src":"5446:12:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1738,"name":"bool","nodeType":"ElementaryTypeName","src":"5446:4:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":1741,"mutability":"mutable","name":"returndata","nameLocation":"5473:10:8","nodeType":"VariableDeclaration","scope":1756,"src":"5460:23:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1740,"name":"bytes","nodeType":"ElementaryTypeName","src":"5460:5:8","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":1748,"initialValue":{"arguments":[{"id":1746,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1718,"src":"5513:4:8","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":1742,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1716,"src":"5487:6:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1743,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"call","nodeType":"MemberAccess","src":"5487:11:8","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":1745,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"names":["value"],"nodeType":"FunctionCallOptions","options":[{"id":1744,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1720,"src":"5506:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"src":"5487:25:8","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":1747,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5487:31:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"5445:73:8"},{"expression":{"arguments":[{"id":1750,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1716,"src":"5562:6:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1751,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1739,"src":"5570:7:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":1752,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1741,"src":"5579:10:8","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":1753,"name":"errorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1722,"src":"5591:12:8","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1749,"name":"verifyCallResultFromTarget","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1888,"src":"5535:26:8","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bool,bytes memory,string memory) view returns (bytes memory)"}},"id":1754,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5535:69:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":1726,"id":1755,"nodeType":"Return","src":"5528:76:8"}]},"documentation":{"id":1714,"nodeType":"StructuredDocumentation","src":"4923:237:8","text":" @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\n with `errorMessage` as a fallback revert reason when `target` reverts.\n _Available since v3.1._"},"id":1757,"implemented":true,"kind":"function","modifiers":[],"name":"functionCallWithValue","nameLocation":"5174:21:8","nodeType":"FunctionDefinition","parameters":{"id":1723,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1716,"mutability":"mutable","name":"target","nameLocation":"5213:6:8","nodeType":"VariableDeclaration","scope":1757,"src":"5205:14:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1715,"name":"address","nodeType":"ElementaryTypeName","src":"5205:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1718,"mutability":"mutable","name":"data","nameLocation":"5242:4:8","nodeType":"VariableDeclaration","scope":1757,"src":"5229:17:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1717,"name":"bytes","nodeType":"ElementaryTypeName","src":"5229:5:8","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":1720,"mutability":"mutable","name":"value","nameLocation":"5264:5:8","nodeType":"VariableDeclaration","scope":1757,"src":"5256:13:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1719,"name":"uint256","nodeType":"ElementaryTypeName","src":"5256:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1722,"mutability":"mutable","name":"errorMessage","nameLocation":"5293:12:8","nodeType":"VariableDeclaration","scope":1757,"src":"5279:26:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1721,"name":"string","nodeType":"ElementaryTypeName","src":"5279:6:8","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"5195:116:8"},"returnParameters":{"id":1726,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1725,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1757,"src":"5330:12:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1724,"name":"bytes","nodeType":"ElementaryTypeName","src":"5330:5:8","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"5329:14:8"},"scope":1933,"src":"5165:446:8","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1773,"nodeType":"Block","src":"5888:97:8","statements":[{"expression":{"arguments":[{"id":1768,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1760,"src":"5924:6:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1769,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1762,"src":"5932:4:8","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"hexValue":"416464726573733a206c6f772d6c6576656c207374617469632063616c6c206661696c6564","id":1770,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5938:39:8","typeDescriptions":{"typeIdentifier":"t_stringliteral_90ec82aa826a536a4cbfae44ecfa384680faa9a4b77344bce96aa761ad904df0","typeString":"literal_string \"Address: low-level static call failed\""},"value":"Address: low-level static call failed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_stringliteral_90ec82aa826a536a4cbfae44ecfa384680faa9a4b77344bce96aa761ad904df0","typeString":"literal_string \"Address: low-level static call failed\""}],"id":1767,"name":"functionStaticCall","nodeType":"Identifier","overloadedDeclarations":[1774,1803],"referencedDeclaration":1803,"src":"5905:18:8","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bytes memory,string memory) view returns (bytes memory)"}},"id":1771,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5905:73:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":1766,"id":1772,"nodeType":"Return","src":"5898:80:8"}]},"documentation":{"id":1758,"nodeType":"StructuredDocumentation","src":"5617:166:8","text":" @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a static call.\n _Available since v3.3._"},"id":1774,"implemented":true,"kind":"function","modifiers":[],"name":"functionStaticCall","nameLocation":"5797:18:8","nodeType":"FunctionDefinition","parameters":{"id":1763,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1760,"mutability":"mutable","name":"target","nameLocation":"5824:6:8","nodeType":"VariableDeclaration","scope":1774,"src":"5816:14:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1759,"name":"address","nodeType":"ElementaryTypeName","src":"5816:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1762,"mutability":"mutable","name":"data","nameLocation":"5845:4:8","nodeType":"VariableDeclaration","scope":1774,"src":"5832:17:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1761,"name":"bytes","nodeType":"ElementaryTypeName","src":"5832:5:8","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"5815:35:8"},"returnParameters":{"id":1766,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1765,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1774,"src":"5874:12:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1764,"name":"bytes","nodeType":"ElementaryTypeName","src":"5874:5:8","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"5873:14:8"},"scope":1933,"src":"5788:197:8","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":1802,"nodeType":"Block","src":"6327:168:8","statements":[{"assignments":[1787,1789],"declarations":[{"constant":false,"id":1787,"mutability":"mutable","name":"success","nameLocation":"6343:7:8","nodeType":"VariableDeclaration","scope":1802,"src":"6338:12:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1786,"name":"bool","nodeType":"ElementaryTypeName","src":"6338:4:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":1789,"mutability":"mutable","name":"returndata","nameLocation":"6365:10:8","nodeType":"VariableDeclaration","scope":1802,"src":"6352:23:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1788,"name":"bytes","nodeType":"ElementaryTypeName","src":"6352:5:8","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":1794,"initialValue":{"arguments":[{"id":1792,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1779,"src":"6397:4:8","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":1790,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1777,"src":"6379:6:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1791,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"staticcall","nodeType":"MemberAccess","src":"6379:17:8","typeDescriptions":{"typeIdentifier":"t_function_barestaticcall_view$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) view returns (bool,bytes memory)"}},"id":1793,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6379:23:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"6337:65:8"},{"expression":{"arguments":[{"id":1796,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1777,"src":"6446:6:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1797,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1787,"src":"6454:7:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":1798,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1789,"src":"6463:10:8","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":1799,"name":"errorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1781,"src":"6475:12:8","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1795,"name":"verifyCallResultFromTarget","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1888,"src":"6419:26:8","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bool,bytes memory,string memory) view returns (bytes memory)"}},"id":1800,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6419:69:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":1785,"id":1801,"nodeType":"Return","src":"6412:76:8"}]},"documentation":{"id":1775,"nodeType":"StructuredDocumentation","src":"5991:173:8","text":" @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n but performing a static call.\n _Available since v3.3._"},"id":1803,"implemented":true,"kind":"function","modifiers":[],"name":"functionStaticCall","nameLocation":"6178:18:8","nodeType":"FunctionDefinition","parameters":{"id":1782,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1777,"mutability":"mutable","name":"target","nameLocation":"6214:6:8","nodeType":"VariableDeclaration","scope":1803,"src":"6206:14:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1776,"name":"address","nodeType":"ElementaryTypeName","src":"6206:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1779,"mutability":"mutable","name":"data","nameLocation":"6243:4:8","nodeType":"VariableDeclaration","scope":1803,"src":"6230:17:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1778,"name":"bytes","nodeType":"ElementaryTypeName","src":"6230:5:8","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":1781,"mutability":"mutable","name":"errorMessage","nameLocation":"6271:12:8","nodeType":"VariableDeclaration","scope":1803,"src":"6257:26:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1780,"name":"string","nodeType":"ElementaryTypeName","src":"6257:6:8","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"6196:93:8"},"returnParameters":{"id":1785,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1784,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1803,"src":"6313:12:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1783,"name":"bytes","nodeType":"ElementaryTypeName","src":"6313:5:8","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"6312:14:8"},"scope":1933,"src":"6169:326:8","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":1819,"nodeType":"Block","src":"6771:101:8","statements":[{"expression":{"arguments":[{"id":1814,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1806,"src":"6809:6:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1815,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1808,"src":"6817:4:8","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"hexValue":"416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564","id":1816,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"6823:41:8","typeDescriptions":{"typeIdentifier":"t_stringliteral_9fdcd12e4b726339b32a442b0a448365d5d85c96b2d2cff917b4f66c63110398","typeString":"literal_string \"Address: low-level delegate call failed\""},"value":"Address: low-level delegate call failed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_stringliteral_9fdcd12e4b726339b32a442b0a448365d5d85c96b2d2cff917b4f66c63110398","typeString":"literal_string \"Address: low-level delegate call failed\""}],"id":1813,"name":"functionDelegateCall","nodeType":"Identifier","overloadedDeclarations":[1820,1849],"referencedDeclaration":1849,"src":"6788:20:8","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bytes memory,string memory) returns (bytes memory)"}},"id":1817,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6788:77:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":1812,"id":1818,"nodeType":"Return","src":"6781:84:8"}]},"documentation":{"id":1804,"nodeType":"StructuredDocumentation","src":"6501:168:8","text":" @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a delegate call.\n _Available since v3.4._"},"id":1820,"implemented":true,"kind":"function","modifiers":[],"name":"functionDelegateCall","nameLocation":"6683:20:8","nodeType":"FunctionDefinition","parameters":{"id":1809,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1806,"mutability":"mutable","name":"target","nameLocation":"6712:6:8","nodeType":"VariableDeclaration","scope":1820,"src":"6704:14:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1805,"name":"address","nodeType":"ElementaryTypeName","src":"6704:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1808,"mutability":"mutable","name":"data","nameLocation":"6733:4:8","nodeType":"VariableDeclaration","scope":1820,"src":"6720:17:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1807,"name":"bytes","nodeType":"ElementaryTypeName","src":"6720:5:8","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"6703:35:8"},"returnParameters":{"id":1812,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1811,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1820,"src":"6757:12:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1810,"name":"bytes","nodeType":"ElementaryTypeName","src":"6757:5:8","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"6756:14:8"},"scope":1933,"src":"6674:198:8","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1848,"nodeType":"Block","src":"7213:170:8","statements":[{"assignments":[1833,1835],"declarations":[{"constant":false,"id":1833,"mutability":"mutable","name":"success","nameLocation":"7229:7:8","nodeType":"VariableDeclaration","scope":1848,"src":"7224:12:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1832,"name":"bool","nodeType":"ElementaryTypeName","src":"7224:4:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":1835,"mutability":"mutable","name":"returndata","nameLocation":"7251:10:8","nodeType":"VariableDeclaration","scope":1848,"src":"7238:23:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1834,"name":"bytes","nodeType":"ElementaryTypeName","src":"7238:5:8","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":1840,"initialValue":{"arguments":[{"id":1838,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1825,"src":"7285:4:8","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":1836,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1823,"src":"7265:6:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1837,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"delegatecall","nodeType":"MemberAccess","src":"7265:19:8","typeDescriptions":{"typeIdentifier":"t_function_baredelegatecall_nonpayable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) returns (bool,bytes memory)"}},"id":1839,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7265:25:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"7223:67:8"},{"expression":{"arguments":[{"id":1842,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1823,"src":"7334:6:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1843,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1833,"src":"7342:7:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":1844,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1835,"src":"7351:10:8","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":1845,"name":"errorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1827,"src":"7363:12:8","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1841,"name":"verifyCallResultFromTarget","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1888,"src":"7307:26:8","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bool,bytes memory,string memory) view returns (bytes memory)"}},"id":1846,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7307:69:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":1831,"id":1847,"nodeType":"Return","src":"7300:76:8"}]},"documentation":{"id":1821,"nodeType":"StructuredDocumentation","src":"6878:175:8","text":" @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n but performing a delegate call.\n _Available since v3.4._"},"id":1849,"implemented":true,"kind":"function","modifiers":[],"name":"functionDelegateCall","nameLocation":"7067:20:8","nodeType":"FunctionDefinition","parameters":{"id":1828,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1823,"mutability":"mutable","name":"target","nameLocation":"7105:6:8","nodeType":"VariableDeclaration","scope":1849,"src":"7097:14:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1822,"name":"address","nodeType":"ElementaryTypeName","src":"7097:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1825,"mutability":"mutable","name":"data","nameLocation":"7134:4:8","nodeType":"VariableDeclaration","scope":1849,"src":"7121:17:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1824,"name":"bytes","nodeType":"ElementaryTypeName","src":"7121:5:8","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":1827,"mutability":"mutable","name":"errorMessage","nameLocation":"7162:12:8","nodeType":"VariableDeclaration","scope":1849,"src":"7148:26:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1826,"name":"string","nodeType":"ElementaryTypeName","src":"7148:6:8","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"7087:93:8"},"returnParameters":{"id":1831,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1830,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1849,"src":"7199:12:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1829,"name":"bytes","nodeType":"ElementaryTypeName","src":"7199:5:8","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"7198:14:8"},"scope":1933,"src":"7058:325:8","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1887,"nodeType":"Block","src":"7865:434:8","statements":[{"condition":{"id":1863,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1854,"src":"7879:7:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":1885,"nodeType":"Block","src":"8235:58:8","statements":[{"expression":{"arguments":[{"id":1881,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1856,"src":"8257:10:8","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":1882,"name":"errorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1858,"src":"8269:12:8","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1880,"name":"_revert","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1932,"src":"8249:7:8","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$__$","typeString":"function (bytes memory,string memory) pure"}},"id":1883,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8249:33:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1884,"nodeType":"ExpressionStatement","src":"8249:33:8"}]},"id":1886,"nodeType":"IfStatement","src":"7875:418:8","trueBody":{"id":1879,"nodeType":"Block","src":"7888:341:8","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1867,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1864,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1856,"src":"7906:10:8","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1865,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"7906:17:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":1866,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7927:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"7906:22:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1876,"nodeType":"IfStatement","src":"7902:286:8","trueBody":{"id":1875,"nodeType":"Block","src":"7930:258:8","statements":[{"expression":{"arguments":[{"arguments":[{"id":1870,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1852,"src":"8132:6:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1869,"name":"isContract","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1621,"src":"8121:10:8","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_bool_$","typeString":"function (address) view returns (bool)"}},"id":1871,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8121:18:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374","id":1872,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"8141:31:8","typeDescriptions":{"typeIdentifier":"t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad","typeString":"literal_string \"Address: call to non-contract\""},"value":"Address: call to non-contract"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad","typeString":"literal_string \"Address: call to non-contract\""}],"id":1868,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"8113:7:8","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1873,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8113:60:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1874,"nodeType":"ExpressionStatement","src":"8113:60:8"}]}},{"expression":{"id":1877,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1856,"src":"8208:10:8","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":1862,"id":1878,"nodeType":"Return","src":"8201:17:8"}]}}]},"documentation":{"id":1850,"nodeType":"StructuredDocumentation","src":"7389:277:8","text":" @dev Tool to verify that a low level call to smart-contract was successful, and revert (either by bubbling\n the revert reason or using the provided one) in case of unsuccessful call or if target was not a contract.\n _Available since v4.8._"},"id":1888,"implemented":true,"kind":"function","modifiers":[],"name":"verifyCallResultFromTarget","nameLocation":"7680:26:8","nodeType":"FunctionDefinition","parameters":{"id":1859,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1852,"mutability":"mutable","name":"target","nameLocation":"7724:6:8","nodeType":"VariableDeclaration","scope":1888,"src":"7716:14:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1851,"name":"address","nodeType":"ElementaryTypeName","src":"7716:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1854,"mutability":"mutable","name":"success","nameLocation":"7745:7:8","nodeType":"VariableDeclaration","scope":1888,"src":"7740:12:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1853,"name":"bool","nodeType":"ElementaryTypeName","src":"7740:4:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":1856,"mutability":"mutable","name":"returndata","nameLocation":"7775:10:8","nodeType":"VariableDeclaration","scope":1888,"src":"7762:23:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1855,"name":"bytes","nodeType":"ElementaryTypeName","src":"7762:5:8","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":1858,"mutability":"mutable","name":"errorMessage","nameLocation":"7809:12:8","nodeType":"VariableDeclaration","scope":1888,"src":"7795:26:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1857,"name":"string","nodeType":"ElementaryTypeName","src":"7795:6:8","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"7706:121:8"},"returnParameters":{"id":1862,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1861,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1888,"src":"7851:12:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1860,"name":"bytes","nodeType":"ElementaryTypeName","src":"7851:5:8","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"7850:14:8"},"scope":1933,"src":"7671:628:8","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":1911,"nodeType":"Block","src":"8680:135:8","statements":[{"condition":{"id":1900,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1891,"src":"8694:7:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":1909,"nodeType":"Block","src":"8751:58:8","statements":[{"expression":{"arguments":[{"id":1905,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1893,"src":"8773:10:8","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":1906,"name":"errorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1895,"src":"8785:12:8","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1904,"name":"_revert","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1932,"src":"8765:7:8","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$__$","typeString":"function (bytes memory,string memory) pure"}},"id":1907,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8765:33:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1908,"nodeType":"ExpressionStatement","src":"8765:33:8"}]},"id":1910,"nodeType":"IfStatement","src":"8690:119:8","trueBody":{"id":1903,"nodeType":"Block","src":"8703:42:8","statements":[{"expression":{"id":1901,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1893,"src":"8724:10:8","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":1899,"id":1902,"nodeType":"Return","src":"8717:17:8"}]}}]},"documentation":{"id":1889,"nodeType":"StructuredDocumentation","src":"8305:210:8","text":" @dev Tool to verify that a low level call was successful, and revert if it wasn't, either by bubbling the\n revert reason or using the provided one.\n _Available since v4.3._"},"id":1912,"implemented":true,"kind":"function","modifiers":[],"name":"verifyCallResult","nameLocation":"8529:16:8","nodeType":"FunctionDefinition","parameters":{"id":1896,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1891,"mutability":"mutable","name":"success","nameLocation":"8560:7:8","nodeType":"VariableDeclaration","scope":1912,"src":"8555:12:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1890,"name":"bool","nodeType":"ElementaryTypeName","src":"8555:4:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":1893,"mutability":"mutable","name":"returndata","nameLocation":"8590:10:8","nodeType":"VariableDeclaration","scope":1912,"src":"8577:23:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1892,"name":"bytes","nodeType":"ElementaryTypeName","src":"8577:5:8","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":1895,"mutability":"mutable","name":"errorMessage","nameLocation":"8624:12:8","nodeType":"VariableDeclaration","scope":1912,"src":"8610:26:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1894,"name":"string","nodeType":"ElementaryTypeName","src":"8610:6:8","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"8545:97:8"},"returnParameters":{"id":1899,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1898,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1912,"src":"8666:12:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1897,"name":"bytes","nodeType":"ElementaryTypeName","src":"8666:5:8","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"8665:14:8"},"scope":1933,"src":"8520:295:8","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1931,"nodeType":"Block","src":"8904:457:8","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1922,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1919,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1914,"src":"8980:10:8","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1920,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"8980:17:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":1921,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9000:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"8980:21:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":1929,"nodeType":"Block","src":"9310:45:8","statements":[{"expression":{"arguments":[{"id":1926,"name":"errorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1916,"src":"9331:12:8","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1925,"name":"revert","nodeType":"Identifier","overloadedDeclarations":[-19,-19],"referencedDeclaration":-19,"src":"9324:6:8","typeDescriptions":{"typeIdentifier":"t_function_revert_pure$_t_string_memory_ptr_$returns$__$","typeString":"function (string memory) pure"}},"id":1927,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9324:20:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1928,"nodeType":"ExpressionStatement","src":"9324:20:8"}]},"id":1930,"nodeType":"IfStatement","src":"8976:379:8","trueBody":{"id":1924,"nodeType":"Block","src":"9003:301:8","statements":[{"AST":{"nodeType":"YulBlock","src":"9161:133:8","statements":[{"nodeType":"YulVariableDeclaration","src":"9179:40:8","value":{"arguments":[{"name":"returndata","nodeType":"YulIdentifier","src":"9208:10:8"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"9202:5:8"},"nodeType":"YulFunctionCall","src":"9202:17:8"},"variables":[{"name":"returndata_size","nodeType":"YulTypedName","src":"9183:15:8","type":""}]},{"expression":{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"9247:2:8","type":"","value":"32"},{"name":"returndata","nodeType":"YulIdentifier","src":"9251:10:8"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9243:3:8"},"nodeType":"YulFunctionCall","src":"9243:19:8"},{"name":"returndata_size","nodeType":"YulIdentifier","src":"9264:15:8"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"9236:6:8"},"nodeType":"YulFunctionCall","src":"9236:44:8"},"nodeType":"YulExpressionStatement","src":"9236:44:8"}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"london","externalReferences":[{"declaration":1914,"isOffset":false,"isSlot":false,"src":"9208:10:8","valueSize":1},{"declaration":1914,"isOffset":false,"isSlot":false,"src":"9251:10:8","valueSize":1}],"id":1923,"nodeType":"InlineAssembly","src":"9152:142:8"}]}}]},"id":1932,"implemented":true,"kind":"function","modifiers":[],"name":"_revert","nameLocation":"8830:7:8","nodeType":"FunctionDefinition","parameters":{"id":1917,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1914,"mutability":"mutable","name":"returndata","nameLocation":"8851:10:8","nodeType":"VariableDeclaration","scope":1932,"src":"8838:23:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1913,"name":"bytes","nodeType":"ElementaryTypeName","src":"8838:5:8","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":1916,"mutability":"mutable","name":"errorMessage","nameLocation":"8877:12:8","nodeType":"VariableDeclaration","scope":1932,"src":"8863:26:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1915,"name":"string","nodeType":"ElementaryTypeName","src":"8863:6:8","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"8837:53:8"},"returnParameters":{"id":1918,"nodeType":"ParameterList","parameters":[],"src":"8904:0:8"},"scope":1933,"src":"8821:540:8","stateMutability":"pure","virtual":false,"visibility":"private"}],"scope":1934,"src":"194:9169:8","usedErrors":[]}],"src":"101:9263:8"}},"@openzeppelin/contracts/utils/Context.sol":{"id":9,"ast":{"absolutePath":"@openzeppelin/contracts/utils/Context.sol","exportedSymbols":{"Context":[1955]},"id":1956,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1935,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"86:23:9"},{"abstract":true,"baseContracts":[],"canonicalName":"Context","contractDependencies":[],"contractKind":"contract","documentation":{"id":1936,"nodeType":"StructuredDocumentation","src":"111:496:9","text":" @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."},"fullyImplemented":true,"id":1955,"linearizedBaseContracts":[1955],"name":"Context","nameLocation":"626:7:9","nodeType":"ContractDefinition","nodes":[{"body":{"id":1944,"nodeType":"Block","src":"702:34:9","statements":[{"expression":{"expression":{"id":1941,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"719:3:9","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1942,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"719:10:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":1940,"id":1943,"nodeType":"Return","src":"712:17:9"}]},"id":1945,"implemented":true,"kind":"function","modifiers":[],"name":"_msgSender","nameLocation":"649:10:9","nodeType":"FunctionDefinition","parameters":{"id":1937,"nodeType":"ParameterList","parameters":[],"src":"659:2:9"},"returnParameters":{"id":1940,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1939,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1945,"src":"693:7:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1938,"name":"address","nodeType":"ElementaryTypeName","src":"693:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"692:9:9"},"scope":1955,"src":"640:96:9","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":1953,"nodeType":"Block","src":"809:32:9","statements":[{"expression":{"expression":{"id":1950,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"826:3:9","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1951,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"data","nodeType":"MemberAccess","src":"826:8:9","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}},"functionReturnParameters":1949,"id":1952,"nodeType":"Return","src":"819:15:9"}]},"id":1954,"implemented":true,"kind":"function","modifiers":[],"name":"_msgData","nameLocation":"751:8:9","nodeType":"FunctionDefinition","parameters":{"id":1946,"nodeType":"ParameterList","parameters":[],"src":"759:2:9"},"returnParameters":{"id":1949,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1948,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1954,"src":"793:14:9","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":1947,"name":"bytes","nodeType":"ElementaryTypeName","src":"793:5:9","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"792:16:9"},"scope":1955,"src":"742:99:9","stateMutability":"view","virtual":true,"visibility":"internal"}],"scope":1956,"src":"608:235:9","usedErrors":[]}],"src":"86:758:9"}},"@openzeppelin/contracts/utils/Strings.sol":{"id":10,"ast":{"absolutePath":"@openzeppelin/contracts/utils/Strings.sol","exportedSymbols":{"Math":[3086],"SignedMath":[3503],"Strings":[2184]},"id":2185,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1957,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"101:23:10"},{"absolutePath":"@openzeppelin/contracts/utils/math/Math.sol","file":"./math/Math.sol","id":1958,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2185,"sourceUnit":3087,"src":"126:25:10","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/math/SignedMath.sol","file":"./math/SignedMath.sol","id":1959,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2185,"sourceUnit":3504,"src":"152:31:10","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"Strings","contractDependencies":[],"contractKind":"library","documentation":{"id":1960,"nodeType":"StructuredDocumentation","src":"185:34:10","text":" @dev String operations."},"fullyImplemented":true,"id":2184,"linearizedBaseContracts":[2184],"name":"Strings","nameLocation":"228:7:10","nodeType":"ContractDefinition","nodes":[{"constant":true,"id":1963,"mutability":"constant","name":"_SYMBOLS","nameLocation":"267:8:10","nodeType":"VariableDeclaration","scope":2184,"src":"242:54:10","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes16","typeString":"bytes16"},"typeName":{"id":1961,"name":"bytes16","nodeType":"ElementaryTypeName","src":"242:7:10","typeDescriptions":{"typeIdentifier":"t_bytes16","typeString":"bytes16"}},"value":{"hexValue":"30313233343536373839616263646566","id":1962,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"278:18:10","typeDescriptions":{"typeIdentifier":"t_stringliteral_cb29997ed99ead0db59ce4d12b7d3723198c827273e5796737c926d78019c39f","typeString":"literal_string \"0123456789abcdef\""},"value":"0123456789abcdef"},"visibility":"private"},{"constant":true,"id":1966,"mutability":"constant","name":"_ADDRESS_LENGTH","nameLocation":"325:15:10","nodeType":"VariableDeclaration","scope":2184,"src":"302:43:10","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":1964,"name":"uint8","nodeType":"ElementaryTypeName","src":"302:5:10","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"value":{"hexValue":"3230","id":1965,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"343:2:10","typeDescriptions":{"typeIdentifier":"t_rational_20_by_1","typeString":"int_const 20"},"value":"20"},"visibility":"private"},{"body":{"id":2013,"nodeType":"Block","src":"518:625:10","statements":[{"id":2012,"nodeType":"UncheckedBlock","src":"528:609:10","statements":[{"assignments":[1975],"declarations":[{"constant":false,"id":1975,"mutability":"mutable","name":"length","nameLocation":"560:6:10","nodeType":"VariableDeclaration","scope":2012,"src":"552:14:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1974,"name":"uint256","nodeType":"ElementaryTypeName","src":"552:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1982,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1981,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":1978,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1969,"src":"580:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":1976,"name":"Math","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3086,"src":"569:4:10","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Math_$3086_$","typeString":"type(library Math)"}},"id":1977,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"log10","nodeType":"MemberAccess","referencedDeclaration":2923,"src":"569:10:10","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":1979,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"569:17:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":1980,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"589:1:10","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"569:21:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"552:38:10"},{"assignments":[1984],"declarations":[{"constant":false,"id":1984,"mutability":"mutable","name":"buffer","nameLocation":"618:6:10","nodeType":"VariableDeclaration","scope":2012,"src":"604:20:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1983,"name":"string","nodeType":"ElementaryTypeName","src":"604:6:10","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"id":1989,"initialValue":{"arguments":[{"id":1987,"name":"length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1975,"src":"638:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1986,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"627:10:10","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256) pure returns (string memory)"},"typeName":{"id":1985,"name":"string","nodeType":"ElementaryTypeName","src":"631:6:10","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}}},"id":1988,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"627:18:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"nodeType":"VariableDeclarationStatement","src":"604:41:10"},{"assignments":[1991],"declarations":[{"constant":false,"id":1991,"mutability":"mutable","name":"ptr","nameLocation":"667:3:10","nodeType":"VariableDeclaration","scope":2012,"src":"659:11:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1990,"name":"uint256","nodeType":"ElementaryTypeName","src":"659:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1992,"nodeType":"VariableDeclarationStatement","src":"659:11:10"},{"AST":{"nodeType":"YulBlock","src":"740:67:10","statements":[{"nodeType":"YulAssignment","src":"758:35:10","value":{"arguments":[{"name":"buffer","nodeType":"YulIdentifier","src":"769:6:10"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"781:2:10","type":"","value":"32"},{"name":"length","nodeType":"YulIdentifier","src":"785:6:10"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"777:3:10"},"nodeType":"YulFunctionCall","src":"777:15:10"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"765:3:10"},"nodeType":"YulFunctionCall","src":"765:28:10"},"variableNames":[{"name":"ptr","nodeType":"YulIdentifier","src":"758:3:10"}]}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"london","externalReferences":[{"declaration":1984,"isOffset":false,"isSlot":false,"src":"769:6:10","valueSize":1},{"declaration":1975,"isOffset":false,"isSlot":false,"src":"785:6:10","valueSize":1},{"declaration":1991,"isOffset":false,"isSlot":false,"src":"758:3:10","valueSize":1}],"id":1993,"nodeType":"InlineAssembly","src":"731:76:10"},{"body":{"id":2008,"nodeType":"Block","src":"833:267:10","statements":[{"expression":{"id":1996,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"--","prefix":false,"src":"851:5:10","subExpression":{"id":1995,"name":"ptr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1991,"src":"851:3:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1997,"nodeType":"ExpressionStatement","src":"851:5:10"},{"AST":{"nodeType":"YulBlock","src":"934:84:10","statements":[{"expression":{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"964:3:10"},{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"978:5:10"},{"kind":"number","nodeType":"YulLiteral","src":"985:2:10","type":"","value":"10"}],"functionName":{"name":"mod","nodeType":"YulIdentifier","src":"974:3:10"},"nodeType":"YulFunctionCall","src":"974:14:10"},{"name":"_SYMBOLS","nodeType":"YulIdentifier","src":"990:8:10"}],"functionName":{"name":"byte","nodeType":"YulIdentifier","src":"969:4:10"},"nodeType":"YulFunctionCall","src":"969:30:10"}],"functionName":{"name":"mstore8","nodeType":"YulIdentifier","src":"956:7:10"},"nodeType":"YulFunctionCall","src":"956:44:10"},"nodeType":"YulExpressionStatement","src":"956:44:10"}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"london","externalReferences":[{"declaration":1963,"isOffset":false,"isSlot":false,"src":"990:8:10","valueSize":1},{"declaration":1991,"isOffset":false,"isSlot":false,"src":"964:3:10","valueSize":1},{"declaration":1969,"isOffset":false,"isSlot":false,"src":"978:5:10","valueSize":1}],"id":1998,"nodeType":"InlineAssembly","src":"925:93:10"},{"expression":{"id":2001,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1999,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1969,"src":"1035:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"hexValue":"3130","id":2000,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1044:2:10","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"src":"1035:11:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2002,"nodeType":"ExpressionStatement","src":"1035:11:10"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2005,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2003,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1969,"src":"1068:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":2004,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1077:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1068:10:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2007,"nodeType":"IfStatement","src":"1064:21:10","trueBody":{"id":2006,"nodeType":"Break","src":"1080:5:10"}}]},"condition":{"hexValue":"74727565","id":1994,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"827:4:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"id":2009,"nodeType":"WhileStatement","src":"820:280:10"},{"expression":{"id":2010,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1984,"src":"1120:6:10","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":1973,"id":2011,"nodeType":"Return","src":"1113:13:10"}]}]},"documentation":{"id":1967,"nodeType":"StructuredDocumentation","src":"352:90:10","text":" @dev Converts a `uint256` to its ASCII `string` decimal representation."},"id":2014,"implemented":true,"kind":"function","modifiers":[],"name":"toString","nameLocation":"456:8:10","nodeType":"FunctionDefinition","parameters":{"id":1970,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1969,"mutability":"mutable","name":"value","nameLocation":"473:5:10","nodeType":"VariableDeclaration","scope":2014,"src":"465:13:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1968,"name":"uint256","nodeType":"ElementaryTypeName","src":"465:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"464:15:10"},"returnParameters":{"id":1973,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1972,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2014,"src":"503:13:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1971,"name":"string","nodeType":"ElementaryTypeName","src":"503:6:10","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"502:15:10"},"scope":2184,"src":"447:696:10","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2041,"nodeType":"Block","src":"1313:103:10","statements":[{"expression":{"arguments":[{"arguments":[{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":2028,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2026,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2017,"src":"1354:5:10","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"hexValue":"30","id":2027,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1362:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1354:9:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"hexValue":"","id":2030,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1372:2:10","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""},"id":2031,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"1354:20:10","trueExpression":{"hexValue":"2d","id":2029,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1366:3:10","typeDescriptions":{"typeIdentifier":"t_stringliteral_d3b8281179950f98149eefdb158d0e1acb56f56e8e343aa9fefafa7e36959561","typeString":"literal_string \"-\""},"value":"-"},"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"arguments":[{"arguments":[{"id":2035,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2017,"src":"1400:5:10","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"expression":{"id":2033,"name":"SignedMath","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3503,"src":"1385:10:10","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SignedMath_$3503_$","typeString":"type(library SignedMath)"}},"id":2034,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"abs","nodeType":"MemberAccess","referencedDeclaration":3502,"src":"1385:14:10","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_int256_$returns$_t_uint256_$","typeString":"function (int256) pure returns (uint256)"}},"id":2036,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1385:21:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2032,"name":"toString","nodeType":"Identifier","overloadedDeclarations":[2014,2042],"referencedDeclaration":2014,"src":"1376:8:10","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256) pure returns (string memory)"}},"id":2037,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1376:31:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"expression":{"id":2024,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"1337:3:10","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":2025,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"encodePacked","nodeType":"MemberAccess","src":"1337:16:10","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":2038,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1337:71:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":2023,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1330:6:10","typeDescriptions":{"typeIdentifier":"t_type$_t_string_storage_ptr_$","typeString":"type(string storage pointer)"},"typeName":{"id":2022,"name":"string","nodeType":"ElementaryTypeName","src":"1330:6:10","typeDescriptions":{}}},"id":2039,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1330:79:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":2021,"id":2040,"nodeType":"Return","src":"1323:86:10"}]},"documentation":{"id":2015,"nodeType":"StructuredDocumentation","src":"1149:89:10","text":" @dev Converts a `int256` to its ASCII `string` decimal representation."},"id":2042,"implemented":true,"kind":"function","modifiers":[],"name":"toString","nameLocation":"1252:8:10","nodeType":"FunctionDefinition","parameters":{"id":2018,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2017,"mutability":"mutable","name":"value","nameLocation":"1268:5:10","nodeType":"VariableDeclaration","scope":2042,"src":"1261:12:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":2016,"name":"int256","nodeType":"ElementaryTypeName","src":"1261:6:10","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1260:14:10"},"returnParameters":{"id":2021,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2020,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2042,"src":"1298:13:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2019,"name":"string","nodeType":"ElementaryTypeName","src":"1298:6:10","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1297:15:10"},"scope":2184,"src":"1243:173:10","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2061,"nodeType":"Block","src":"1595:100:10","statements":[{"id":2060,"nodeType":"UncheckedBlock","src":"1605:84:10","statements":[{"expression":{"arguments":[{"id":2051,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2045,"src":"1648:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2057,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":2054,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2045,"src":"1667:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":2052,"name":"Math","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3086,"src":"1655:4:10","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Math_$3086_$","typeString":"type(library Math)"}},"id":2053,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"log256","nodeType":"MemberAccess","referencedDeclaration":3046,"src":"1655:11:10","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":2055,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1655:18:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":2056,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1676:1:10","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"1655:22:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2050,"name":"toHexString","nodeType":"Identifier","overloadedDeclarations":[2062,2138,2158],"referencedDeclaration":2138,"src":"1636:11:10","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256,uint256) pure returns (string memory)"}},"id":2058,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1636:42:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":2049,"id":2059,"nodeType":"Return","src":"1629:49:10"}]}]},"documentation":{"id":2043,"nodeType":"StructuredDocumentation","src":"1422:94:10","text":" @dev Converts a `uint256` to its ASCII `string` hexadecimal representation."},"id":2062,"implemented":true,"kind":"function","modifiers":[],"name":"toHexString","nameLocation":"1530:11:10","nodeType":"FunctionDefinition","parameters":{"id":2046,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2045,"mutability":"mutable","name":"value","nameLocation":"1550:5:10","nodeType":"VariableDeclaration","scope":2062,"src":"1542:13:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2044,"name":"uint256","nodeType":"ElementaryTypeName","src":"1542:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1541:15:10"},"returnParameters":{"id":2049,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2048,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2062,"src":"1580:13:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2047,"name":"string","nodeType":"ElementaryTypeName","src":"1580:6:10","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1579:15:10"},"scope":2184,"src":"1521:174:10","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2137,"nodeType":"Block","src":"1908:347:10","statements":[{"assignments":[2073],"declarations":[{"constant":false,"id":2073,"mutability":"mutable","name":"buffer","nameLocation":"1931:6:10","nodeType":"VariableDeclaration","scope":2137,"src":"1918:19:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2072,"name":"bytes","nodeType":"ElementaryTypeName","src":"1918:5:10","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":2082,"initialValue":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2080,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2078,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":2076,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1950:1:10","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":2077,"name":"length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2067,"src":"1954:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1950:10:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"32","id":2079,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1963:1:10","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"1950:14:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2075,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"1940:9:10","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$","typeString":"function (uint256) pure returns (bytes memory)"},"typeName":{"id":2074,"name":"bytes","nodeType":"ElementaryTypeName","src":"1944:5:10","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}}},"id":2081,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1940:25:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"1918:47:10"},{"expression":{"id":2087,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":2083,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2073,"src":"1975:6:10","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2085,"indexExpression":{"hexValue":"30","id":2084,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1982:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"1975:9:10","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"30","id":2086,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1987:3:10","typeDescriptions":{"typeIdentifier":"t_stringliteral_044852b2a670ade5407e78fb2863c51de9fcb96542a07186fe3aeda6bb8a116d","typeString":"literal_string \"0\""},"value":"0"},"src":"1975:15:10","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":2088,"nodeType":"ExpressionStatement","src":"1975:15:10"},{"expression":{"id":2093,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":2089,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2073,"src":"2000:6:10","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2091,"indexExpression":{"hexValue":"31","id":2090,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2007:1:10","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"2000:9:10","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"78","id":2092,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2012:3:10","typeDescriptions":{"typeIdentifier":"t_stringliteral_7521d1cadbcfa91eec65aa16715b94ffc1c9654ba57ea2ef1a2127bca1127a83","typeString":"literal_string \"x\""},"value":"x"},"src":"2000:15:10","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":2094,"nodeType":"ExpressionStatement","src":"2000:15:10"},{"body":{"id":2123,"nodeType":"Block","src":"2070:83:10","statements":[{"expression":{"id":2117,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":2109,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2073,"src":"2084:6:10","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2111,"indexExpression":{"id":2110,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2096,"src":"2091:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"2084:9:10","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"baseExpression":{"id":2112,"name":"_SYMBOLS","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1963,"src":"2096:8:10","typeDescriptions":{"typeIdentifier":"t_bytes16","typeString":"bytes16"}},"id":2116,"indexExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2115,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2113,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2065,"src":"2105:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"hexValue":"307866","id":2114,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2113:3:10","typeDescriptions":{"typeIdentifier":"t_rational_15_by_1","typeString":"int_const 15"},"value":"0xf"},"src":"2105:11:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2096:21:10","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"src":"2084:33:10","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":2118,"nodeType":"ExpressionStatement","src":"2084:33:10"},{"expression":{"id":2121,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2119,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2065,"src":"2131:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"34","id":2120,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2141:1:10","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"2131:11:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2122,"nodeType":"ExpressionStatement","src":"2131:11:10"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2105,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2103,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2096,"src":"2058:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"31","id":2104,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2062:1:10","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"2058:5:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2124,"initializationExpression":{"assignments":[2096],"declarations":[{"constant":false,"id":2096,"mutability":"mutable","name":"i","nameLocation":"2038:1:10","nodeType":"VariableDeclaration","scope":2124,"src":"2030:9:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2095,"name":"uint256","nodeType":"ElementaryTypeName","src":"2030:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2102,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2101,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2099,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":2097,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2042:1:10","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":2098,"name":"length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2067,"src":"2046:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2042:10:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":2100,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2055:1:10","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"2042:14:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2030:26:10"},"loopExpression":{"expression":{"id":2107,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"--","prefix":true,"src":"2065:3:10","subExpression":{"id":2106,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2096,"src":"2067:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2108,"nodeType":"ExpressionStatement","src":"2065:3:10"},"nodeType":"ForStatement","src":"2025:128:10"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2128,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2126,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2065,"src":"2170:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":2127,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2179:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2170:10:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"537472696e67733a20686578206c656e67746820696e73756666696369656e74","id":2129,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2182:34:10","typeDescriptions":{"typeIdentifier":"t_stringliteral_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2","typeString":"literal_string \"Strings: hex length insufficient\""},"value":"Strings: hex length insufficient"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2","typeString":"literal_string \"Strings: hex length insufficient\""}],"id":2125,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2162:7:10","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2130,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2162:55:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2131,"nodeType":"ExpressionStatement","src":"2162:55:10"},{"expression":{"arguments":[{"id":2134,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2073,"src":"2241:6:10","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":2133,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2234:6:10","typeDescriptions":{"typeIdentifier":"t_type$_t_string_storage_ptr_$","typeString":"type(string storage pointer)"},"typeName":{"id":2132,"name":"string","nodeType":"ElementaryTypeName","src":"2234:6:10","typeDescriptions":{}}},"id":2135,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2234:14:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":2071,"id":2136,"nodeType":"Return","src":"2227:21:10"}]},"documentation":{"id":2063,"nodeType":"StructuredDocumentation","src":"1701:112:10","text":" @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length."},"id":2138,"implemented":true,"kind":"function","modifiers":[],"name":"toHexString","nameLocation":"1827:11:10","nodeType":"FunctionDefinition","parameters":{"id":2068,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2065,"mutability":"mutable","name":"value","nameLocation":"1847:5:10","nodeType":"VariableDeclaration","scope":2138,"src":"1839:13:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2064,"name":"uint256","nodeType":"ElementaryTypeName","src":"1839:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2067,"mutability":"mutable","name":"length","nameLocation":"1862:6:10","nodeType":"VariableDeclaration","scope":2138,"src":"1854:14:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2066,"name":"uint256","nodeType":"ElementaryTypeName","src":"1854:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1838:31:10"},"returnParameters":{"id":2071,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2070,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2138,"src":"1893:13:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2069,"name":"string","nodeType":"ElementaryTypeName","src":"1893:6:10","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1892:15:10"},"scope":2184,"src":"1818:437:10","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2157,"nodeType":"Block","src":"2480:76:10","statements":[{"expression":{"arguments":[{"arguments":[{"arguments":[{"id":2151,"name":"addr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2141,"src":"2525:4:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2150,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2517:7:10","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":2149,"name":"uint160","nodeType":"ElementaryTypeName","src":"2517:7:10","typeDescriptions":{}}},"id":2152,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2517:13:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint160","typeString":"uint160"}],"id":2148,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2509:7:10","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":2147,"name":"uint256","nodeType":"ElementaryTypeName","src":"2509:7:10","typeDescriptions":{}}},"id":2153,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2509:22:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2154,"name":"_ADDRESS_LENGTH","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1966,"src":"2533:15:10","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint8","typeString":"uint8"}],"id":2146,"name":"toHexString","nodeType":"Identifier","overloadedDeclarations":[2062,2138,2158],"referencedDeclaration":2138,"src":"2497:11:10","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256,uint256) pure returns (string memory)"}},"id":2155,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2497:52:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":2145,"id":2156,"nodeType":"Return","src":"2490:59:10"}]},"documentation":{"id":2139,"nodeType":"StructuredDocumentation","src":"2261:141:10","text":" @dev Converts an `address` with fixed length of 20 bytes to its not checksummed ASCII `string` hexadecimal representation."},"id":2158,"implemented":true,"kind":"function","modifiers":[],"name":"toHexString","nameLocation":"2416:11:10","nodeType":"FunctionDefinition","parameters":{"id":2142,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2141,"mutability":"mutable","name":"addr","nameLocation":"2436:4:10","nodeType":"VariableDeclaration","scope":2158,"src":"2428:12:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2140,"name":"address","nodeType":"ElementaryTypeName","src":"2428:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2427:14:10"},"returnParameters":{"id":2145,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2144,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2158,"src":"2465:13:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2143,"name":"string","nodeType":"ElementaryTypeName","src":"2465:6:10","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2464:15:10"},"scope":2184,"src":"2407:149:10","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2182,"nodeType":"Block","src":"2711:66:10","statements":[{"expression":{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":2180,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"arguments":[{"id":2171,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2161,"src":"2744:1:10","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2170,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2738:5:10","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2169,"name":"bytes","nodeType":"ElementaryTypeName","src":"2738:5:10","typeDescriptions":{}}},"id":2172,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2738:8:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":2168,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"2728:9:10","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":2173,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2728:19:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"arguments":[{"id":2177,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2163,"src":"2767:1:10","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2176,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2761:5:10","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2175,"name":"bytes","nodeType":"ElementaryTypeName","src":"2761:5:10","typeDescriptions":{}}},"id":2178,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2761:8:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":2174,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"2751:9:10","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":2179,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2751:19:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"2728:42:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":2167,"id":2181,"nodeType":"Return","src":"2721:49:10"}]},"documentation":{"id":2159,"nodeType":"StructuredDocumentation","src":"2562:66:10","text":" @dev Returns true if the two strings are equal."},"id":2183,"implemented":true,"kind":"function","modifiers":[],"name":"equal","nameLocation":"2642:5:10","nodeType":"FunctionDefinition","parameters":{"id":2164,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2161,"mutability":"mutable","name":"a","nameLocation":"2662:1:10","nodeType":"VariableDeclaration","scope":2183,"src":"2648:15:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2160,"name":"string","nodeType":"ElementaryTypeName","src":"2648:6:10","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":2163,"mutability":"mutable","name":"b","nameLocation":"2679:1:10","nodeType":"VariableDeclaration","scope":2183,"src":"2665:15:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2162,"name":"string","nodeType":"ElementaryTypeName","src":"2665:6:10","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2647:34:10"},"returnParameters":{"id":2167,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2166,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2183,"src":"2705:4:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2165,"name":"bool","nodeType":"ElementaryTypeName","src":"2705:4:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2704:6:10"},"scope":2184,"src":"2633:144:10","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":2185,"src":"220:2559:10","usedErrors":[]}],"src":"101:2679:10"}},"@openzeppelin/contracts/utils/introspection/ERC165.sol":{"id":11,"ast":{"absolutePath":"@openzeppelin/contracts/utils/introspection/ERC165.sol","exportedSymbols":{"ERC165":[2208],"IERC165":[2220]},"id":2209,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2186,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"99:23:11"},{"absolutePath":"@openzeppelin/contracts/utils/introspection/IERC165.sol","file":"./IERC165.sol","id":2187,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2209,"sourceUnit":2221,"src":"124:23:11","symbolAliases":[],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":2189,"name":"IERC165","nodeType":"IdentifierPath","referencedDeclaration":2220,"src":"754:7:11"},"id":2190,"nodeType":"InheritanceSpecifier","src":"754:7:11"}],"canonicalName":"ERC165","contractDependencies":[],"contractKind":"contract","documentation":{"id":2188,"nodeType":"StructuredDocumentation","src":"149:576:11","text":" @dev Implementation of the {IERC165} interface.\n Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check\n for the additional interface id that will be supported. For example:\n ```solidity\n function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\n }\n ```\n Alternatively, {ERC165Storage} provides an easier to use but more expensive implementation."},"fullyImplemented":true,"id":2208,"linearizedBaseContracts":[2208,2220],"name":"ERC165","nameLocation":"744:6:11","nodeType":"ContractDefinition","nodes":[{"baseFunctions":[2219],"body":{"id":2206,"nodeType":"Block","src":"920:64:11","statements":[{"expression":{"commonType":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"id":2204,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2199,"name":"interfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2193,"src":"937:11:11","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"arguments":[{"id":2201,"name":"IERC165","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2220,"src":"957:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC165_$2220_$","typeString":"type(contract IERC165)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_contract$_IERC165_$2220_$","typeString":"type(contract IERC165)"}],"id":2200,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"952:4:11","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":2202,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"952:13:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_contract$_IERC165_$2220","typeString":"type(contract IERC165)"}},"id":2203,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"interfaceId","nodeType":"MemberAccess","src":"952:25:11","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"src":"937:40:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":2198,"id":2205,"nodeType":"Return","src":"930:47:11"}]},"documentation":{"id":2191,"nodeType":"StructuredDocumentation","src":"768:56:11","text":" @dev See {IERC165-supportsInterface}."},"functionSelector":"01ffc9a7","id":2207,"implemented":true,"kind":"function","modifiers":[],"name":"supportsInterface","nameLocation":"838:17:11","nodeType":"FunctionDefinition","overrides":{"id":2195,"nodeType":"OverrideSpecifier","overrides":[],"src":"896:8:11"},"parameters":{"id":2194,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2193,"mutability":"mutable","name":"interfaceId","nameLocation":"863:11:11","nodeType":"VariableDeclaration","scope":2207,"src":"856:18:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":2192,"name":"bytes4","nodeType":"ElementaryTypeName","src":"856:6:11","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"855:20:11"},"returnParameters":{"id":2198,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2197,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2207,"src":"914:4:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2196,"name":"bool","nodeType":"ElementaryTypeName","src":"914:4:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"913:6:11"},"scope":2208,"src":"829:155:11","stateMutability":"view","virtual":true,"visibility":"public"}],"scope":2209,"src":"726:260:11","usedErrors":[]}],"src":"99:888:11"}},"@openzeppelin/contracts/utils/introspection/IERC165.sol":{"id":12,"ast":{"absolutePath":"@openzeppelin/contracts/utils/introspection/IERC165.sol","exportedSymbols":{"IERC165":[2220]},"id":2221,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2210,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"100:23:12"},{"abstract":false,"baseContracts":[],"canonicalName":"IERC165","contractDependencies":[],"contractKind":"interface","documentation":{"id":2211,"nodeType":"StructuredDocumentation","src":"125:279:12","text":" @dev Interface of the ERC165 standard, as defined in the\n https://eips.ethereum.org/EIPS/eip-165[EIP].\n Implementers can declare support of contract interfaces, which can then be\n queried by others ({ERC165Checker}).\n For an implementation, see {ERC165}."},"fullyImplemented":false,"id":2220,"linearizedBaseContracts":[2220],"name":"IERC165","nameLocation":"415:7:12","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":2212,"nodeType":"StructuredDocumentation","src":"429:340:12","text":" @dev Returns true if this contract implements the interface defined by\n `interfaceId`. See the corresponding\n https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\n to learn more about how these ids are created.\n This function call must use less than 30 000 gas."},"functionSelector":"01ffc9a7","id":2219,"implemented":false,"kind":"function","modifiers":[],"name":"supportsInterface","nameLocation":"783:17:12","nodeType":"FunctionDefinition","parameters":{"id":2215,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2214,"mutability":"mutable","name":"interfaceId","nameLocation":"808:11:12","nodeType":"VariableDeclaration","scope":2219,"src":"801:18:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":2213,"name":"bytes4","nodeType":"ElementaryTypeName","src":"801:6:12","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"800:20:12"},"returnParameters":{"id":2218,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2217,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2219,"src":"844:4:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2216,"name":"bool","nodeType":"ElementaryTypeName","src":"844:4:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"843:6:12"},"scope":2220,"src":"774:76:12","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":2221,"src":"405:447:12","usedErrors":[]}],"src":"100:753:12"}},"@openzeppelin/contracts/utils/math/Math.sol":{"id":13,"ast":{"absolutePath":"@openzeppelin/contracts/utils/math/Math.sol","exportedSymbols":{"Math":[3086]},"id":3087,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2222,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"103:23:13"},{"abstract":false,"baseContracts":[],"canonicalName":"Math","contractDependencies":[],"contractKind":"library","documentation":{"id":2223,"nodeType":"StructuredDocumentation","src":"128:73:13","text":" @dev Standard math utilities missing in the Solidity language."},"fullyImplemented":true,"id":3086,"linearizedBaseContracts":[3086],"name":"Math","nameLocation":"210:4:13","nodeType":"ContractDefinition","nodes":[{"canonicalName":"Math.Rounding","id":2227,"members":[{"id":2224,"name":"Down","nameLocation":"245:4:13","nodeType":"EnumValue","src":"245:4:13"},{"id":2225,"name":"Up","nameLocation":"287:2:13","nodeType":"EnumValue","src":"287:2:13"},{"id":2226,"name":"Zero","nameLocation":"318:4:13","nodeType":"EnumValue","src":"318:4:13"}],"name":"Rounding","nameLocation":"226:8:13","nodeType":"EnumDefinition","src":"221:122:13"},{"body":{"id":2244,"nodeType":"Block","src":"480:37:13","statements":[{"expression":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2239,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2237,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2230,"src":"497:1:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":2238,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2232,"src":"501:1:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"497:5:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"id":2241,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2232,"src":"509:1:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2242,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"497:13:13","trueExpression":{"id":2240,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2230,"src":"505:1:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2236,"id":2243,"nodeType":"Return","src":"490:20:13"}]},"documentation":{"id":2228,"nodeType":"StructuredDocumentation","src":"349:59:13","text":" @dev Returns the largest of two numbers."},"id":2245,"implemented":true,"kind":"function","modifiers":[],"name":"max","nameLocation":"422:3:13","nodeType":"FunctionDefinition","parameters":{"id":2233,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2230,"mutability":"mutable","name":"a","nameLocation":"434:1:13","nodeType":"VariableDeclaration","scope":2245,"src":"426:9:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2229,"name":"uint256","nodeType":"ElementaryTypeName","src":"426:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2232,"mutability":"mutable","name":"b","nameLocation":"445:1:13","nodeType":"VariableDeclaration","scope":2245,"src":"437:9:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2231,"name":"uint256","nodeType":"ElementaryTypeName","src":"437:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"425:22:13"},"returnParameters":{"id":2236,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2235,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2245,"src":"471:7:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2234,"name":"uint256","nodeType":"ElementaryTypeName","src":"471:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"470:9:13"},"scope":3086,"src":"413:104:13","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2262,"nodeType":"Block","src":"655:37:13","statements":[{"expression":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2257,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2255,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2248,"src":"672:1:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":2256,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2250,"src":"676:1:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"672:5:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"id":2259,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2250,"src":"684:1:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2260,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"672:13:13","trueExpression":{"id":2258,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2248,"src":"680:1:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2254,"id":2261,"nodeType":"Return","src":"665:20:13"}]},"documentation":{"id":2246,"nodeType":"StructuredDocumentation","src":"523:60:13","text":" @dev Returns the smallest of two numbers."},"id":2263,"implemented":true,"kind":"function","modifiers":[],"name":"min","nameLocation":"597:3:13","nodeType":"FunctionDefinition","parameters":{"id":2251,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2248,"mutability":"mutable","name":"a","nameLocation":"609:1:13","nodeType":"VariableDeclaration","scope":2263,"src":"601:9:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2247,"name":"uint256","nodeType":"ElementaryTypeName","src":"601:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2250,"mutability":"mutable","name":"b","nameLocation":"620:1:13","nodeType":"VariableDeclaration","scope":2263,"src":"612:9:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2249,"name":"uint256","nodeType":"ElementaryTypeName","src":"612:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"600:22:13"},"returnParameters":{"id":2254,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2253,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2263,"src":"646:7:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2252,"name":"uint256","nodeType":"ElementaryTypeName","src":"646:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"645:9:13"},"scope":3086,"src":"588:104:13","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2285,"nodeType":"Block","src":"876:82:13","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2283,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2275,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2273,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2266,"src":"931:1:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"id":2274,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2268,"src":"935:1:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"931:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2276,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"930:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2282,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2279,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2277,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2266,"src":"941:1:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"id":2278,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2268,"src":"945:1:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"941:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2280,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"940:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"hexValue":"32","id":2281,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"950:1:13","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"940:11:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"930:21:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2272,"id":2284,"nodeType":"Return","src":"923:28:13"}]},"documentation":{"id":2264,"nodeType":"StructuredDocumentation","src":"698:102:13","text":" @dev Returns the average of two numbers. The result is rounded towards\n zero."},"id":2286,"implemented":true,"kind":"function","modifiers":[],"name":"average","nameLocation":"814:7:13","nodeType":"FunctionDefinition","parameters":{"id":2269,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2266,"mutability":"mutable","name":"a","nameLocation":"830:1:13","nodeType":"VariableDeclaration","scope":2286,"src":"822:9:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2265,"name":"uint256","nodeType":"ElementaryTypeName","src":"822:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2268,"mutability":"mutable","name":"b","nameLocation":"841:1:13","nodeType":"VariableDeclaration","scope":2286,"src":"833:9:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2267,"name":"uint256","nodeType":"ElementaryTypeName","src":"833:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"821:22:13"},"returnParameters":{"id":2272,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2271,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2286,"src":"867:7:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2270,"name":"uint256","nodeType":"ElementaryTypeName","src":"867:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"866:9:13"},"scope":3086,"src":"805:153:13","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2310,"nodeType":"Block","src":"1228:123:13","statements":[{"expression":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2298,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2296,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2289,"src":"1316:1:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":2297,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1321:1:13","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1316:6:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2307,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2305,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2302,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2300,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2289,"src":"1330:1:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":2301,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1334:1:13","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"1330:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2303,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1329:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":2304,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2291,"src":"1339:1:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1329:11:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":2306,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1343:1:13","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"1329:15:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2308,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"1316:28:13","trueExpression":{"hexValue":"30","id":2299,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1325:1:13","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2295,"id":2309,"nodeType":"Return","src":"1309:35:13"}]},"documentation":{"id":2287,"nodeType":"StructuredDocumentation","src":"964:188:13","text":" @dev Returns the ceiling of the division of two numbers.\n This differs from standard division with `/` in that it rounds up instead\n of rounding down."},"id":2311,"implemented":true,"kind":"function","modifiers":[],"name":"ceilDiv","nameLocation":"1166:7:13","nodeType":"FunctionDefinition","parameters":{"id":2292,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2289,"mutability":"mutable","name":"a","nameLocation":"1182:1:13","nodeType":"VariableDeclaration","scope":2311,"src":"1174:9:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2288,"name":"uint256","nodeType":"ElementaryTypeName","src":"1174:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2291,"mutability":"mutable","name":"b","nameLocation":"1193:1:13","nodeType":"VariableDeclaration","scope":2311,"src":"1185:9:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2290,"name":"uint256","nodeType":"ElementaryTypeName","src":"1185:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1173:22:13"},"returnParameters":{"id":2295,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2294,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2311,"src":"1219:7:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2293,"name":"uint256","nodeType":"ElementaryTypeName","src":"1219:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1218:9:13"},"scope":3086,"src":"1157:194:13","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2433,"nodeType":"Block","src":"1765:4115:13","statements":[{"id":2432,"nodeType":"UncheckedBlock","src":"1775:4099:13","statements":[{"assignments":[2324],"declarations":[{"constant":false,"id":2324,"mutability":"mutable","name":"prod0","nameLocation":"2104:5:13","nodeType":"VariableDeclaration","scope":2432,"src":"2096:13:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2323,"name":"uint256","nodeType":"ElementaryTypeName","src":"2096:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2325,"nodeType":"VariableDeclarationStatement","src":"2096:13:13"},{"assignments":[2327],"declarations":[{"constant":false,"id":2327,"mutability":"mutable","name":"prod1","nameLocation":"2176:5:13","nodeType":"VariableDeclaration","scope":2432,"src":"2168:13:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2326,"name":"uint256","nodeType":"ElementaryTypeName","src":"2168:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2328,"nodeType":"VariableDeclarationStatement","src":"2168:13:13"},{"AST":{"nodeType":"YulBlock","src":"2248:157:13","statements":[{"nodeType":"YulVariableDeclaration","src":"2266:30:13","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"2283:1:13"},{"name":"y","nodeType":"YulIdentifier","src":"2286:1:13"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2293:1:13","type":"","value":"0"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"2289:3:13"},"nodeType":"YulFunctionCall","src":"2289:6:13"}],"functionName":{"name":"mulmod","nodeType":"YulIdentifier","src":"2276:6:13"},"nodeType":"YulFunctionCall","src":"2276:20:13"},"variables":[{"name":"mm","nodeType":"YulTypedName","src":"2270:2:13","type":""}]},{"nodeType":"YulAssignment","src":"2313:18:13","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"2326:1:13"},{"name":"y","nodeType":"YulIdentifier","src":"2329:1:13"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"2322:3:13"},"nodeType":"YulFunctionCall","src":"2322:9:13"},"variableNames":[{"name":"prod0","nodeType":"YulIdentifier","src":"2313:5:13"}]},{"nodeType":"YulAssignment","src":"2348:43:13","value":{"arguments":[{"arguments":[{"name":"mm","nodeType":"YulIdentifier","src":"2365:2:13"},{"name":"prod0","nodeType":"YulIdentifier","src":"2369:5:13"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"2361:3:13"},"nodeType":"YulFunctionCall","src":"2361:14:13"},{"arguments":[{"name":"mm","nodeType":"YulIdentifier","src":"2380:2:13"},{"name":"prod0","nodeType":"YulIdentifier","src":"2384:5:13"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"2377:2:13"},"nodeType":"YulFunctionCall","src":"2377:13:13"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"2357:3:13"},"nodeType":"YulFunctionCall","src":"2357:34:13"},"variableNames":[{"name":"prod1","nodeType":"YulIdentifier","src":"2348:5:13"}]}]},"evmVersion":"london","externalReferences":[{"declaration":2324,"isOffset":false,"isSlot":false,"src":"2313:5:13","valueSize":1},{"declaration":2324,"isOffset":false,"isSlot":false,"src":"2369:5:13","valueSize":1},{"declaration":2324,"isOffset":false,"isSlot":false,"src":"2384:5:13","valueSize":1},{"declaration":2327,"isOffset":false,"isSlot":false,"src":"2348:5:13","valueSize":1},{"declaration":2314,"isOffset":false,"isSlot":false,"src":"2283:1:13","valueSize":1},{"declaration":2314,"isOffset":false,"isSlot":false,"src":"2326:1:13","valueSize":1},{"declaration":2316,"isOffset":false,"isSlot":false,"src":"2286:1:13","valueSize":1},{"declaration":2316,"isOffset":false,"isSlot":false,"src":"2329:1:13","valueSize":1}],"id":2329,"nodeType":"InlineAssembly","src":"2239:166:13"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2332,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2330,"name":"prod1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2327,"src":"2486:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":2331,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2495:1:13","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2486:10:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2338,"nodeType":"IfStatement","src":"2482:368:13","trueBody":{"id":2337,"nodeType":"Block","src":"2498:352:13","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2335,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2333,"name":"prod0","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2324,"src":"2816:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":2334,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2318,"src":"2824:11:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2816:19:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2322,"id":2336,"nodeType":"Return","src":"2809:26:13"}]}},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2342,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2340,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2318,"src":"2960:11:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":2341,"name":"prod1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2327,"src":"2974:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2960:19:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4d6174683a206d756c446976206f766572666c6f77","id":2343,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2981:23:13","typeDescriptions":{"typeIdentifier":"t_stringliteral_d87093691d63b122ac2c14d1b11554b287e2431cf2b03550b3be7cffb0f86851","typeString":"literal_string \"Math: mulDiv overflow\""},"value":"Math: mulDiv overflow"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_d87093691d63b122ac2c14d1b11554b287e2431cf2b03550b3be7cffb0f86851","typeString":"literal_string \"Math: mulDiv overflow\""}],"id":2339,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2952:7:13","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2344,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2952:53:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2345,"nodeType":"ExpressionStatement","src":"2952:53:13"},{"assignments":[2347],"declarations":[{"constant":false,"id":2347,"mutability":"mutable","name":"remainder","nameLocation":"3269:9:13","nodeType":"VariableDeclaration","scope":2432,"src":"3261:17:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2346,"name":"uint256","nodeType":"ElementaryTypeName","src":"3261:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2348,"nodeType":"VariableDeclarationStatement","src":"3261:17:13"},{"AST":{"nodeType":"YulBlock","src":"3301:291:13","statements":[{"nodeType":"YulAssignment","src":"3370:38:13","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"3390:1:13"},{"name":"y","nodeType":"YulIdentifier","src":"3393:1:13"},{"name":"denominator","nodeType":"YulIdentifier","src":"3396:11:13"}],"functionName":{"name":"mulmod","nodeType":"YulIdentifier","src":"3383:6:13"},"nodeType":"YulFunctionCall","src":"3383:25:13"},"variableNames":[{"name":"remainder","nodeType":"YulIdentifier","src":"3370:9:13"}]},{"nodeType":"YulAssignment","src":"3490:41:13","value":{"arguments":[{"name":"prod1","nodeType":"YulIdentifier","src":"3503:5:13"},{"arguments":[{"name":"remainder","nodeType":"YulIdentifier","src":"3513:9:13"},{"name":"prod0","nodeType":"YulIdentifier","src":"3524:5:13"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"3510:2:13"},"nodeType":"YulFunctionCall","src":"3510:20:13"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"3499:3:13"},"nodeType":"YulFunctionCall","src":"3499:32:13"},"variableNames":[{"name":"prod1","nodeType":"YulIdentifier","src":"3490:5:13"}]},{"nodeType":"YulAssignment","src":"3548:30:13","value":{"arguments":[{"name":"prod0","nodeType":"YulIdentifier","src":"3561:5:13"},{"name":"remainder","nodeType":"YulIdentifier","src":"3568:9:13"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"3557:3:13"},"nodeType":"YulFunctionCall","src":"3557:21:13"},"variableNames":[{"name":"prod0","nodeType":"YulIdentifier","src":"3548:5:13"}]}]},"evmVersion":"london","externalReferences":[{"declaration":2318,"isOffset":false,"isSlot":false,"src":"3396:11:13","valueSize":1},{"declaration":2324,"isOffset":false,"isSlot":false,"src":"3524:5:13","valueSize":1},{"declaration":2324,"isOffset":false,"isSlot":false,"src":"3548:5:13","valueSize":1},{"declaration":2324,"isOffset":false,"isSlot":false,"src":"3561:5:13","valueSize":1},{"declaration":2327,"isOffset":false,"isSlot":false,"src":"3490:5:13","valueSize":1},{"declaration":2327,"isOffset":false,"isSlot":false,"src":"3503:5:13","valueSize":1},{"declaration":2347,"isOffset":false,"isSlot":false,"src":"3370:9:13","valueSize":1},{"declaration":2347,"isOffset":false,"isSlot":false,"src":"3513:9:13","valueSize":1},{"declaration":2347,"isOffset":false,"isSlot":false,"src":"3568:9:13","valueSize":1},{"declaration":2314,"isOffset":false,"isSlot":false,"src":"3390:1:13","valueSize":1},{"declaration":2316,"isOffset":false,"isSlot":false,"src":"3393:1:13","valueSize":1}],"id":2349,"nodeType":"InlineAssembly","src":"3292:300:13"},{"assignments":[2351],"declarations":[{"constant":false,"id":2351,"mutability":"mutable","name":"twos","nameLocation":"3907:4:13","nodeType":"VariableDeclaration","scope":2432,"src":"3899:12:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2350,"name":"uint256","nodeType":"ElementaryTypeName","src":"3899:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2359,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2358,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2352,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2318,"src":"3914:11:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2356,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2354,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"~","prefix":true,"src":"3929:12:13","subExpression":{"id":2353,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2318,"src":"3930:11:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":2355,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3944:1:13","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"3929:16:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2357,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"3928:18:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3914:32:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"3899:47:13"},{"AST":{"nodeType":"YulBlock","src":"3969:362:13","statements":[{"nodeType":"YulAssignment","src":"4034:37:13","value":{"arguments":[{"name":"denominator","nodeType":"YulIdentifier","src":"4053:11:13"},{"name":"twos","nodeType":"YulIdentifier","src":"4066:4:13"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"4049:3:13"},"nodeType":"YulFunctionCall","src":"4049:22:13"},"variableNames":[{"name":"denominator","nodeType":"YulIdentifier","src":"4034:11:13"}]},{"nodeType":"YulAssignment","src":"4138:25:13","value":{"arguments":[{"name":"prod0","nodeType":"YulIdentifier","src":"4151:5:13"},{"name":"twos","nodeType":"YulIdentifier","src":"4158:4:13"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"4147:3:13"},"nodeType":"YulFunctionCall","src":"4147:16:13"},"variableNames":[{"name":"prod0","nodeType":"YulIdentifier","src":"4138:5:13"}]},{"nodeType":"YulAssignment","src":"4278:39:13","value":{"arguments":[{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4298:1:13","type":"","value":"0"},{"name":"twos","nodeType":"YulIdentifier","src":"4301:4:13"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"4294:3:13"},"nodeType":"YulFunctionCall","src":"4294:12:13"},{"name":"twos","nodeType":"YulIdentifier","src":"4308:4:13"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"4290:3:13"},"nodeType":"YulFunctionCall","src":"4290:23:13"},{"kind":"number","nodeType":"YulLiteral","src":"4315:1:13","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4286:3:13"},"nodeType":"YulFunctionCall","src":"4286:31:13"},"variableNames":[{"name":"twos","nodeType":"YulIdentifier","src":"4278:4:13"}]}]},"evmVersion":"london","externalReferences":[{"declaration":2318,"isOffset":false,"isSlot":false,"src":"4034:11:13","valueSize":1},{"declaration":2318,"isOffset":false,"isSlot":false,"src":"4053:11:13","valueSize":1},{"declaration":2324,"isOffset":false,"isSlot":false,"src":"4138:5:13","valueSize":1},{"declaration":2324,"isOffset":false,"isSlot":false,"src":"4151:5:13","valueSize":1},{"declaration":2351,"isOffset":false,"isSlot":false,"src":"4066:4:13","valueSize":1},{"declaration":2351,"isOffset":false,"isSlot":false,"src":"4158:4:13","valueSize":1},{"declaration":2351,"isOffset":false,"isSlot":false,"src":"4278:4:13","valueSize":1},{"declaration":2351,"isOffset":false,"isSlot":false,"src":"4301:4:13","valueSize":1},{"declaration":2351,"isOffset":false,"isSlot":false,"src":"4308:4:13","valueSize":1}],"id":2360,"nodeType":"InlineAssembly","src":"3960:371:13"},{"expression":{"id":2365,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2361,"name":"prod0","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2324,"src":"4397:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"|=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2364,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2362,"name":"prod1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2327,"src":"4406:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":2363,"name":"twos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2351,"src":"4414:4:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4406:12:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4397:21:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2366,"nodeType":"ExpressionStatement","src":"4397:21:13"},{"assignments":[2368],"declarations":[{"constant":false,"id":2368,"mutability":"mutable","name":"inverse","nameLocation":"4744:7:13","nodeType":"VariableDeclaration","scope":2432,"src":"4736:15:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2367,"name":"uint256","nodeType":"ElementaryTypeName","src":"4736:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2375,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2374,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2371,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"33","id":2369,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4755:1:13","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"value":"3"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":2370,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2318,"src":"4759:11:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4755:15:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2372,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"4754:17:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"hexValue":"32","id":2373,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4774:1:13","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"4754:21:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"4736:39:13"},{"expression":{"id":2382,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2376,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2368,"src":"4992:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2381,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":2377,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5003:1:13","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2380,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2378,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2318,"src":"5007:11:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":2379,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2368,"src":"5021:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5007:21:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5003:25:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4992:36:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2383,"nodeType":"ExpressionStatement","src":"4992:36:13"},{"expression":{"id":2390,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2384,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2368,"src":"5061:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2389,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":2385,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5072:1:13","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2388,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2386,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2318,"src":"5076:11:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":2387,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2368,"src":"5090:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5076:21:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5072:25:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5061:36:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2391,"nodeType":"ExpressionStatement","src":"5061:36:13"},{"expression":{"id":2398,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2392,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2368,"src":"5131:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2397,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":2393,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5142:1:13","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2396,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2394,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2318,"src":"5146:11:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":2395,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2368,"src":"5160:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5146:21:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5142:25:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5131:36:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2399,"nodeType":"ExpressionStatement","src":"5131:36:13"},{"expression":{"id":2406,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2400,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2368,"src":"5201:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2405,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":2401,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5212:1:13","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2404,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2402,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2318,"src":"5216:11:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":2403,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2368,"src":"5230:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5216:21:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5212:25:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5201:36:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2407,"nodeType":"ExpressionStatement","src":"5201:36:13"},{"expression":{"id":2414,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2408,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2368,"src":"5271:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2413,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":2409,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5282:1:13","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2412,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2410,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2318,"src":"5286:11:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":2411,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2368,"src":"5300:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5286:21:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5282:25:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5271:36:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2415,"nodeType":"ExpressionStatement","src":"5271:36:13"},{"expression":{"id":2422,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2416,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2368,"src":"5342:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2421,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":2417,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5353:1:13","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2420,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2418,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2318,"src":"5357:11:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":2419,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2368,"src":"5371:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5357:21:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5353:25:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5342:36:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2423,"nodeType":"ExpressionStatement","src":"5342:36:13"},{"expression":{"id":2428,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2424,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2321,"src":"5812:6:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2427,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2425,"name":"prod0","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2324,"src":"5821:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":2426,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2368,"src":"5829:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5821:15:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5812:24:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2429,"nodeType":"ExpressionStatement","src":"5812:24:13"},{"expression":{"id":2430,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2321,"src":"5857:6:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2322,"id":2431,"nodeType":"Return","src":"5850:13:13"}]}]},"documentation":{"id":2312,"nodeType":"StructuredDocumentation","src":"1357:305:13","text":" @notice Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or denominator == 0\n @dev Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv)\n with further edits by Uniswap Labs also under MIT license."},"id":2434,"implemented":true,"kind":"function","modifiers":[],"name":"mulDiv","nameLocation":"1676:6:13","nodeType":"FunctionDefinition","parameters":{"id":2319,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2314,"mutability":"mutable","name":"x","nameLocation":"1691:1:13","nodeType":"VariableDeclaration","scope":2434,"src":"1683:9:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2313,"name":"uint256","nodeType":"ElementaryTypeName","src":"1683:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2316,"mutability":"mutable","name":"y","nameLocation":"1702:1:13","nodeType":"VariableDeclaration","scope":2434,"src":"1694:9:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2315,"name":"uint256","nodeType":"ElementaryTypeName","src":"1694:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2318,"mutability":"mutable","name":"denominator","nameLocation":"1713:11:13","nodeType":"VariableDeclaration","scope":2434,"src":"1705:19:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2317,"name":"uint256","nodeType":"ElementaryTypeName","src":"1705:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1682:43:13"},"returnParameters":{"id":2322,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2321,"mutability":"mutable","name":"result","nameLocation":"1757:6:13","nodeType":"VariableDeclaration","scope":2434,"src":"1749:14:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2320,"name":"uint256","nodeType":"ElementaryTypeName","src":"1749:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1748:16:13"},"scope":3086,"src":"1667:4213:13","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2477,"nodeType":"Block","src":"6122:189:13","statements":[{"assignments":[2450],"declarations":[{"constant":false,"id":2450,"mutability":"mutable","name":"result","nameLocation":"6140:6:13","nodeType":"VariableDeclaration","scope":2477,"src":"6132:14:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2449,"name":"uint256","nodeType":"ElementaryTypeName","src":"6132:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2456,"initialValue":{"arguments":[{"id":2452,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2437,"src":"6156:1:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2453,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2439,"src":"6159:1:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2454,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2441,"src":"6162:11:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2451,"name":"mulDiv","nodeType":"Identifier","overloadedDeclarations":[2434,2478],"referencedDeclaration":2434,"src":"6149:6:13","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256,uint256) pure returns (uint256)"}},"id":2455,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6149:25:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"6132:42:13"},{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2468,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_enum$_Rounding_$2227","typeString":"enum Math.Rounding"},"id":2460,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2457,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2444,"src":"6188:8:13","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2227","typeString":"enum Math.Rounding"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":2458,"name":"Rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2227,"src":"6200:8:13","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_Rounding_$2227_$","typeString":"type(enum Math.Rounding)"}},"id":2459,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"Up","nodeType":"MemberAccess","referencedDeclaration":2225,"src":"6200:11:13","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2227","typeString":"enum Math.Rounding"}},"src":"6188:23:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2467,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":2462,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2437,"src":"6222:1:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2463,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2439,"src":"6225:1:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2464,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2441,"src":"6228:11:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2461,"name":"mulmod","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-16,"src":"6215:6:13","typeDescriptions":{"typeIdentifier":"t_function_mulmod_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256,uint256) pure returns (uint256)"}},"id":2465,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6215:25:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":2466,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6243:1:13","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"6215:29:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"6188:56:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2474,"nodeType":"IfStatement","src":"6184:98:13","trueBody":{"id":2473,"nodeType":"Block","src":"6246:36:13","statements":[{"expression":{"id":2471,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2469,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2450,"src":"6260:6:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"31","id":2470,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6270:1:13","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"6260:11:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2472,"nodeType":"ExpressionStatement","src":"6260:11:13"}]}},{"expression":{"id":2475,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2450,"src":"6298:6:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2448,"id":2476,"nodeType":"Return","src":"6291:13:13"}]},"documentation":{"id":2435,"nodeType":"StructuredDocumentation","src":"5886:121:13","text":" @notice Calculates x * y / denominator with full precision, following the selected rounding direction."},"id":2478,"implemented":true,"kind":"function","modifiers":[],"name":"mulDiv","nameLocation":"6021:6:13","nodeType":"FunctionDefinition","parameters":{"id":2445,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2437,"mutability":"mutable","name":"x","nameLocation":"6036:1:13","nodeType":"VariableDeclaration","scope":2478,"src":"6028:9:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2436,"name":"uint256","nodeType":"ElementaryTypeName","src":"6028:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2439,"mutability":"mutable","name":"y","nameLocation":"6047:1:13","nodeType":"VariableDeclaration","scope":2478,"src":"6039:9:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2438,"name":"uint256","nodeType":"ElementaryTypeName","src":"6039:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2441,"mutability":"mutable","name":"denominator","nameLocation":"6058:11:13","nodeType":"VariableDeclaration","scope":2478,"src":"6050:19:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2440,"name":"uint256","nodeType":"ElementaryTypeName","src":"6050:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2444,"mutability":"mutable","name":"rounding","nameLocation":"6080:8:13","nodeType":"VariableDeclaration","scope":2478,"src":"6071:17:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2227","typeString":"enum Math.Rounding"},"typeName":{"id":2443,"nodeType":"UserDefinedTypeName","pathNode":{"id":2442,"name":"Rounding","nodeType":"IdentifierPath","referencedDeclaration":2227,"src":"6071:8:13"},"referencedDeclaration":2227,"src":"6071:8:13","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2227","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"6027:62:13"},"returnParameters":{"id":2448,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2447,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2478,"src":"6113:7:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2446,"name":"uint256","nodeType":"ElementaryTypeName","src":"6113:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6112:9:13"},"scope":3086,"src":"6012:299:13","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2589,"nodeType":"Block","src":"6587:1585:13","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2488,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2486,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2481,"src":"6601:1:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":2487,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6606:1:13","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"6601:6:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2492,"nodeType":"IfStatement","src":"6597:45:13","trueBody":{"id":2491,"nodeType":"Block","src":"6609:33:13","statements":[{"expression":{"hexValue":"30","id":2489,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6630:1:13","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"functionReturnParameters":2485,"id":2490,"nodeType":"Return","src":"6623:8:13"}]}},{"assignments":[2494],"declarations":[{"constant":false,"id":2494,"mutability":"mutable","name":"result","nameLocation":"7329:6:13","nodeType":"VariableDeclaration","scope":2589,"src":"7321:14:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2493,"name":"uint256","nodeType":"ElementaryTypeName","src":"7321:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2503,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2502,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":2495,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7338:1:13","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2500,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":2497,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2481,"src":"7349:1:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2496,"name":"log2","nodeType":"Identifier","overloadedDeclarations":[2758,2794],"referencedDeclaration":2758,"src":"7344:4:13","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":2498,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7344:7:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":2499,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7355:1:13","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"7344:12:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2501,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"7343:14:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7338:19:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"7321:36:13"},{"id":2588,"nodeType":"UncheckedBlock","src":"7758:408:13","statements":[{"expression":{"id":2513,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2504,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2494,"src":"7782:6:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2512,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2509,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2505,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2494,"src":"7792:6:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2508,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2506,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2481,"src":"7801:1:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":2507,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2494,"src":"7805:6:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7801:10:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7792:19:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2510,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"7791:21:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":2511,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7816:1:13","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"7791:26:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7782:35:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2514,"nodeType":"ExpressionStatement","src":"7782:35:13"},{"expression":{"id":2524,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2515,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2494,"src":"7831:6:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2523,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2520,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2516,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2494,"src":"7841:6:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2519,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2517,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2481,"src":"7850:1:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":2518,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2494,"src":"7854:6:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7850:10:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7841:19:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2521,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"7840:21:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":2522,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7865:1:13","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"7840:26:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7831:35:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2525,"nodeType":"ExpressionStatement","src":"7831:35:13"},{"expression":{"id":2535,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2526,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2494,"src":"7880:6:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2534,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2531,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2527,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2494,"src":"7890:6:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2530,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2528,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2481,"src":"7899:1:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":2529,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2494,"src":"7903:6:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7899:10:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7890:19:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2532,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"7889:21:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":2533,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7914:1:13","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"7889:26:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7880:35:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2536,"nodeType":"ExpressionStatement","src":"7880:35:13"},{"expression":{"id":2546,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2537,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2494,"src":"7929:6:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2545,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2542,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2538,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2494,"src":"7939:6:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2541,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2539,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2481,"src":"7948:1:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":2540,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2494,"src":"7952:6:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7948:10:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7939:19:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2543,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"7938:21:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":2544,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7963:1:13","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"7938:26:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7929:35:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2547,"nodeType":"ExpressionStatement","src":"7929:35:13"},{"expression":{"id":2557,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2548,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2494,"src":"7978:6:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2556,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2553,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2549,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2494,"src":"7988:6:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2552,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2550,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2481,"src":"7997:1:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":2551,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2494,"src":"8001:6:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7997:10:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7988:19:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2554,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"7987:21:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":2555,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8012:1:13","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"7987:26:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7978:35:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2558,"nodeType":"ExpressionStatement","src":"7978:35:13"},{"expression":{"id":2568,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2559,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2494,"src":"8027:6:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2567,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2564,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2560,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2494,"src":"8037:6:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2563,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2561,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2481,"src":"8046:1:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":2562,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2494,"src":"8050:6:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8046:10:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8037:19:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2565,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"8036:21:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":2566,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8061:1:13","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"8036:26:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8027:35:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2569,"nodeType":"ExpressionStatement","src":"8027:35:13"},{"expression":{"id":2579,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2570,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2494,"src":"8076:6:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2578,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2575,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2571,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2494,"src":"8086:6:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2574,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2572,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2481,"src":"8095:1:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":2573,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2494,"src":"8099:6:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8095:10:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8086:19:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2576,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"8085:21:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":2577,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8110:1:13","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"8085:26:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8076:35:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2580,"nodeType":"ExpressionStatement","src":"8076:35:13"},{"expression":{"arguments":[{"id":2582,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2494,"src":"8136:6:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2585,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2583,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2481,"src":"8144:1:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":2584,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2494,"src":"8148:6:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8144:10:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2581,"name":"min","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2263,"src":"8132:3:13","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":2586,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8132:23:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2485,"id":2587,"nodeType":"Return","src":"8125:30:13"}]}]},"documentation":{"id":2479,"nodeType":"StructuredDocumentation","src":"6317:208:13","text":" @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded down.\n Inspired by Henry S. Warren, Jr.'s \"Hacker's Delight\" (Chapter 11)."},"id":2590,"implemented":true,"kind":"function","modifiers":[],"name":"sqrt","nameLocation":"6539:4:13","nodeType":"FunctionDefinition","parameters":{"id":2482,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2481,"mutability":"mutable","name":"a","nameLocation":"6552:1:13","nodeType":"VariableDeclaration","scope":2590,"src":"6544:9:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2480,"name":"uint256","nodeType":"ElementaryTypeName","src":"6544:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6543:11:13"},"returnParameters":{"id":2485,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2484,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2590,"src":"6578:7:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2483,"name":"uint256","nodeType":"ElementaryTypeName","src":"6578:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6577:9:13"},"scope":3086,"src":"6530:1642:13","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2625,"nodeType":"Block","src":"8348:161:13","statements":[{"id":2624,"nodeType":"UncheckedBlock","src":"8358:145:13","statements":[{"assignments":[2602],"declarations":[{"constant":false,"id":2602,"mutability":"mutable","name":"result","nameLocation":"8390:6:13","nodeType":"VariableDeclaration","scope":2624,"src":"8382:14:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2601,"name":"uint256","nodeType":"ElementaryTypeName","src":"8382:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2606,"initialValue":{"arguments":[{"id":2604,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2593,"src":"8404:1:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2603,"name":"sqrt","nodeType":"Identifier","overloadedDeclarations":[2590,2626],"referencedDeclaration":2590,"src":"8399:4:13","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":2605,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8399:7:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"8382:24:13"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2622,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2607,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2602,"src":"8427:6:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"components":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2617,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_enum$_Rounding_$2227","typeString":"enum Math.Rounding"},"id":2611,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2608,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2596,"src":"8437:8:13","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2227","typeString":"enum Math.Rounding"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":2609,"name":"Rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2227,"src":"8449:8:13","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_Rounding_$2227_$","typeString":"type(enum Math.Rounding)"}},"id":2610,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"Up","nodeType":"MemberAccess","referencedDeclaration":2225,"src":"8449:11:13","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2227","typeString":"enum Math.Rounding"}},"src":"8437:23:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2616,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2614,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2612,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2602,"src":"8464:6:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":2613,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2602,"src":"8473:6:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8464:15:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":2615,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2593,"src":"8482:1:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8464:19:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"8437:46:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"hexValue":"30","id":2619,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8490:1:13","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"id":2620,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"8437:54:13","trueExpression":{"hexValue":"31","id":2618,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8486:1:13","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"id":2621,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"8436:56:13","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"8427:65:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2600,"id":2623,"nodeType":"Return","src":"8420:72:13"}]}]},"documentation":{"id":2591,"nodeType":"StructuredDocumentation","src":"8178:89:13","text":" @notice Calculates sqrt(a), following the selected rounding direction."},"id":2626,"implemented":true,"kind":"function","modifiers":[],"name":"sqrt","nameLocation":"8281:4:13","nodeType":"FunctionDefinition","parameters":{"id":2597,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2593,"mutability":"mutable","name":"a","nameLocation":"8294:1:13","nodeType":"VariableDeclaration","scope":2626,"src":"8286:9:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2592,"name":"uint256","nodeType":"ElementaryTypeName","src":"8286:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2596,"mutability":"mutable","name":"rounding","nameLocation":"8306:8:13","nodeType":"VariableDeclaration","scope":2626,"src":"8297:17:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2227","typeString":"enum Math.Rounding"},"typeName":{"id":2595,"nodeType":"UserDefinedTypeName","pathNode":{"id":2594,"name":"Rounding","nodeType":"IdentifierPath","referencedDeclaration":2227,"src":"8297:8:13"},"referencedDeclaration":2227,"src":"8297:8:13","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2227","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"8285:30:13"},"returnParameters":{"id":2600,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2599,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2626,"src":"8339:7:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2598,"name":"uint256","nodeType":"ElementaryTypeName","src":"8339:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8338:9:13"},"scope":3086,"src":"8272:237:13","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2757,"nodeType":"Block","src":"8694:922:13","statements":[{"assignments":[2635],"declarations":[{"constant":false,"id":2635,"mutability":"mutable","name":"result","nameLocation":"8712:6:13","nodeType":"VariableDeclaration","scope":2757,"src":"8704:14:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2634,"name":"uint256","nodeType":"ElementaryTypeName","src":"8704:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2637,"initialValue":{"hexValue":"30","id":2636,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8721:1:13","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"8704:18:13"},{"id":2754,"nodeType":"UncheckedBlock","src":"8732:855:13","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2642,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2640,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2638,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2629,"src":"8760:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"313238","id":2639,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8769:3:13","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"8760:12:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":2641,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8775:1:13","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"8760:16:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2652,"nodeType":"IfStatement","src":"8756:99:13","trueBody":{"id":2651,"nodeType":"Block","src":"8778:77:13","statements":[{"expression":{"id":2645,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2643,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2629,"src":"8796:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"313238","id":2644,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8806:3:13","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"8796:13:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2646,"nodeType":"ExpressionStatement","src":"8796:13:13"},{"expression":{"id":2649,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2647,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2635,"src":"8827:6:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"313238","id":2648,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8837:3:13","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"8827:13:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2650,"nodeType":"ExpressionStatement","src":"8827:13:13"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2657,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2655,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2653,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2629,"src":"8872:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"3634","id":2654,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8881:2:13","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"8872:11:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":2656,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8886:1:13","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"8872:15:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2667,"nodeType":"IfStatement","src":"8868:96:13","trueBody":{"id":2666,"nodeType":"Block","src":"8889:75:13","statements":[{"expression":{"id":2660,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2658,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2629,"src":"8907:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3634","id":2659,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8917:2:13","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"8907:12:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2661,"nodeType":"ExpressionStatement","src":"8907:12:13"},{"expression":{"id":2664,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2662,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2635,"src":"8937:6:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3634","id":2663,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8947:2:13","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"8937:12:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2665,"nodeType":"ExpressionStatement","src":"8937:12:13"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2672,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2670,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2668,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2629,"src":"8981:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"3332","id":2669,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8990:2:13","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"8981:11:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":2671,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8995:1:13","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"8981:15:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2682,"nodeType":"IfStatement","src":"8977:96:13","trueBody":{"id":2681,"nodeType":"Block","src":"8998:75:13","statements":[{"expression":{"id":2675,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2673,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2629,"src":"9016:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3332","id":2674,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9026:2:13","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"9016:12:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2676,"nodeType":"ExpressionStatement","src":"9016:12:13"},{"expression":{"id":2679,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2677,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2635,"src":"9046:6:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3332","id":2678,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9056:2:13","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"9046:12:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2680,"nodeType":"ExpressionStatement","src":"9046:12:13"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2687,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2685,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2683,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2629,"src":"9090:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"3136","id":2684,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9099:2:13","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"9090:11:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":2686,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9104:1:13","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"9090:15:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2697,"nodeType":"IfStatement","src":"9086:96:13","trueBody":{"id":2696,"nodeType":"Block","src":"9107:75:13","statements":[{"expression":{"id":2690,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2688,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2629,"src":"9125:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3136","id":2689,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9135:2:13","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"9125:12:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2691,"nodeType":"ExpressionStatement","src":"9125:12:13"},{"expression":{"id":2694,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2692,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2635,"src":"9155:6:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3136","id":2693,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9165:2:13","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"9155:12:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2695,"nodeType":"ExpressionStatement","src":"9155:12:13"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2702,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2700,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2698,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2629,"src":"9199:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"38","id":2699,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9208:1:13","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"9199:10:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":2701,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9212:1:13","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"9199:14:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2712,"nodeType":"IfStatement","src":"9195:93:13","trueBody":{"id":2711,"nodeType":"Block","src":"9215:73:13","statements":[{"expression":{"id":2705,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2703,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2629,"src":"9233:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"38","id":2704,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9243:1:13","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"9233:11:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2706,"nodeType":"ExpressionStatement","src":"9233:11:13"},{"expression":{"id":2709,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2707,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2635,"src":"9262:6:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"38","id":2708,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9272:1:13","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"9262:11:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2710,"nodeType":"ExpressionStatement","src":"9262:11:13"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2717,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2715,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2713,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2629,"src":"9305:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"34","id":2714,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9314:1:13","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"9305:10:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":2716,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9318:1:13","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"9305:14:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2727,"nodeType":"IfStatement","src":"9301:93:13","trueBody":{"id":2726,"nodeType":"Block","src":"9321:73:13","statements":[{"expression":{"id":2720,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2718,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2629,"src":"9339:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"34","id":2719,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9349:1:13","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"9339:11:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2721,"nodeType":"ExpressionStatement","src":"9339:11:13"},{"expression":{"id":2724,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2722,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2635,"src":"9368:6:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"34","id":2723,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9378:1:13","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"9368:11:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2725,"nodeType":"ExpressionStatement","src":"9368:11:13"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2732,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2730,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2728,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2629,"src":"9411:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"32","id":2729,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9420:1:13","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"9411:10:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":2731,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9424:1:13","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"9411:14:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2742,"nodeType":"IfStatement","src":"9407:93:13","trueBody":{"id":2741,"nodeType":"Block","src":"9427:73:13","statements":[{"expression":{"id":2735,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2733,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2629,"src":"9445:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"32","id":2734,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9455:1:13","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"9445:11:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2736,"nodeType":"ExpressionStatement","src":"9445:11:13"},{"expression":{"id":2739,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2737,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2635,"src":"9474:6:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"32","id":2738,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9484:1:13","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"9474:11:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2740,"nodeType":"ExpressionStatement","src":"9474:11:13"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2747,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2745,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2743,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2629,"src":"9517:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":2744,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9526:1:13","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"9517:10:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":2746,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9530:1:13","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"9517:14:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2753,"nodeType":"IfStatement","src":"9513:64:13","trueBody":{"id":2752,"nodeType":"Block","src":"9533:44:13","statements":[{"expression":{"id":2750,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2748,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2635,"src":"9551:6:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"31","id":2749,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9561:1:13","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"9551:11:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2751,"nodeType":"ExpressionStatement","src":"9551:11:13"}]}}]},{"expression":{"id":2755,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2635,"src":"9603:6:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2633,"id":2756,"nodeType":"Return","src":"9596:13:13"}]},"documentation":{"id":2627,"nodeType":"StructuredDocumentation","src":"8515:113:13","text":" @dev Return the log in base 2, rounded down, of a positive value.\n Returns 0 if given 0."},"id":2758,"implemented":true,"kind":"function","modifiers":[],"name":"log2","nameLocation":"8642:4:13","nodeType":"FunctionDefinition","parameters":{"id":2630,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2629,"mutability":"mutable","name":"value","nameLocation":"8655:5:13","nodeType":"VariableDeclaration","scope":2758,"src":"8647:13:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2628,"name":"uint256","nodeType":"ElementaryTypeName","src":"8647:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8646:15:13"},"returnParameters":{"id":2633,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2632,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2758,"src":"8685:7:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2631,"name":"uint256","nodeType":"ElementaryTypeName","src":"8685:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8684:9:13"},"scope":3086,"src":"8633:983:13","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2793,"nodeType":"Block","src":"9849:165:13","statements":[{"id":2792,"nodeType":"UncheckedBlock","src":"9859:149:13","statements":[{"assignments":[2770],"declarations":[{"constant":false,"id":2770,"mutability":"mutable","name":"result","nameLocation":"9891:6:13","nodeType":"VariableDeclaration","scope":2792,"src":"9883:14:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2769,"name":"uint256","nodeType":"ElementaryTypeName","src":"9883:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2774,"initialValue":{"arguments":[{"id":2772,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2761,"src":"9905:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2771,"name":"log2","nodeType":"Identifier","overloadedDeclarations":[2758,2794],"referencedDeclaration":2758,"src":"9900:4:13","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":2773,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9900:11:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"9883:28:13"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2790,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2775,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2770,"src":"9932:6:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"components":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2785,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_enum$_Rounding_$2227","typeString":"enum Math.Rounding"},"id":2779,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2776,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2764,"src":"9942:8:13","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2227","typeString":"enum Math.Rounding"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":2777,"name":"Rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2227,"src":"9954:8:13","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_Rounding_$2227_$","typeString":"type(enum Math.Rounding)"}},"id":2778,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"Up","nodeType":"MemberAccess","referencedDeclaration":2225,"src":"9954:11:13","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2227","typeString":"enum Math.Rounding"}},"src":"9942:23:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2784,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2782,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":2780,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9969:1:13","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"id":2781,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2770,"src":"9974:6:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9969:11:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":2783,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2761,"src":"9983:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9969:19:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"9942:46:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"hexValue":"30","id":2787,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9995:1:13","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"id":2788,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"9942:54:13","trueExpression":{"hexValue":"31","id":2786,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9991:1:13","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"id":2789,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"9941:56:13","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"9932:65:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2768,"id":2791,"nodeType":"Return","src":"9925:72:13"}]}]},"documentation":{"id":2759,"nodeType":"StructuredDocumentation","src":"9622:142:13","text":" @dev Return the log in base 2, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."},"id":2794,"implemented":true,"kind":"function","modifiers":[],"name":"log2","nameLocation":"9778:4:13","nodeType":"FunctionDefinition","parameters":{"id":2765,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2761,"mutability":"mutable","name":"value","nameLocation":"9791:5:13","nodeType":"VariableDeclaration","scope":2794,"src":"9783:13:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2760,"name":"uint256","nodeType":"ElementaryTypeName","src":"9783:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2764,"mutability":"mutable","name":"rounding","nameLocation":"9807:8:13","nodeType":"VariableDeclaration","scope":2794,"src":"9798:17:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2227","typeString":"enum Math.Rounding"},"typeName":{"id":2763,"nodeType":"UserDefinedTypeName","pathNode":{"id":2762,"name":"Rounding","nodeType":"IdentifierPath","referencedDeclaration":2227,"src":"9798:8:13"},"referencedDeclaration":2227,"src":"9798:8:13","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2227","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"9782:34:13"},"returnParameters":{"id":2768,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2767,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2794,"src":"9840:7:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2766,"name":"uint256","nodeType":"ElementaryTypeName","src":"9840:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9839:9:13"},"scope":3086,"src":"9769:245:13","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2922,"nodeType":"Block","src":"10201:854:13","statements":[{"assignments":[2803],"declarations":[{"constant":false,"id":2803,"mutability":"mutable","name":"result","nameLocation":"10219:6:13","nodeType":"VariableDeclaration","scope":2922,"src":"10211:14:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2802,"name":"uint256","nodeType":"ElementaryTypeName","src":"10211:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2805,"initialValue":{"hexValue":"30","id":2804,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10228:1:13","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"10211:18:13"},{"id":2919,"nodeType":"UncheckedBlock","src":"10239:787:13","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2810,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2806,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2797,"src":"10267:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1","typeString":"int_const 1000...(57 digits omitted)...0000"},"id":2809,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":2807,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10276:2:13","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3634","id":2808,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10282:2:13","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"10276:8:13","typeDescriptions":{"typeIdentifier":"t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1","typeString":"int_const 1000...(57 digits omitted)...0000"}},"src":"10267:17:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2822,"nodeType":"IfStatement","src":"10263:103:13","trueBody":{"id":2821,"nodeType":"Block","src":"10286:80:13","statements":[{"expression":{"id":2815,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2811,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2797,"src":"10304:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1","typeString":"int_const 1000...(57 digits omitted)...0000"},"id":2814,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":2812,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10313:2:13","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3634","id":2813,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10319:2:13","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"10313:8:13","typeDescriptions":{"typeIdentifier":"t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1","typeString":"int_const 1000...(57 digits omitted)...0000"}},"src":"10304:17:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2816,"nodeType":"ExpressionStatement","src":"10304:17:13"},{"expression":{"id":2819,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2817,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2803,"src":"10339:6:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3634","id":2818,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10349:2:13","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"10339:12:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2820,"nodeType":"ExpressionStatement","src":"10339:12:13"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2827,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2823,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2797,"src":"10383:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_100000000000000000000000000000000_by_1","typeString":"int_const 1000...(25 digits omitted)...0000"},"id":2826,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":2824,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10392:2:13","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3332","id":2825,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10398:2:13","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"10392:8:13","typeDescriptions":{"typeIdentifier":"t_rational_100000000000000000000000000000000_by_1","typeString":"int_const 1000...(25 digits omitted)...0000"}},"src":"10383:17:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2839,"nodeType":"IfStatement","src":"10379:103:13","trueBody":{"id":2838,"nodeType":"Block","src":"10402:80:13","statements":[{"expression":{"id":2832,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2828,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2797,"src":"10420:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_100000000000000000000000000000000_by_1","typeString":"int_const 1000...(25 digits omitted)...0000"},"id":2831,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":2829,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10429:2:13","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3332","id":2830,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10435:2:13","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"10429:8:13","typeDescriptions":{"typeIdentifier":"t_rational_100000000000000000000000000000000_by_1","typeString":"int_const 1000...(25 digits omitted)...0000"}},"src":"10420:17:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2833,"nodeType":"ExpressionStatement","src":"10420:17:13"},{"expression":{"id":2836,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2834,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2803,"src":"10455:6:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3332","id":2835,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10465:2:13","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"10455:12:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2837,"nodeType":"ExpressionStatement","src":"10455:12:13"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2844,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2840,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2797,"src":"10499:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_10000000000000000_by_1","typeString":"int_const 10000000000000000"},"id":2843,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":2841,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10508:2:13","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3136","id":2842,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10514:2:13","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"10508:8:13","typeDescriptions":{"typeIdentifier":"t_rational_10000000000000000_by_1","typeString":"int_const 10000000000000000"}},"src":"10499:17:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2856,"nodeType":"IfStatement","src":"10495:103:13","trueBody":{"id":2855,"nodeType":"Block","src":"10518:80:13","statements":[{"expression":{"id":2849,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2845,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2797,"src":"10536:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_10000000000000000_by_1","typeString":"int_const 10000000000000000"},"id":2848,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":2846,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10545:2:13","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3136","id":2847,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10551:2:13","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"10545:8:13","typeDescriptions":{"typeIdentifier":"t_rational_10000000000000000_by_1","typeString":"int_const 10000000000000000"}},"src":"10536:17:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2850,"nodeType":"ExpressionStatement","src":"10536:17:13"},{"expression":{"id":2853,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2851,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2803,"src":"10571:6:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3136","id":2852,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10581:2:13","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"10571:12:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2854,"nodeType":"ExpressionStatement","src":"10571:12:13"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2861,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2857,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2797,"src":"10615:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_100000000_by_1","typeString":"int_const 100000000"},"id":2860,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":2858,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10624:2:13","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"38","id":2859,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10630:1:13","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"10624:7:13","typeDescriptions":{"typeIdentifier":"t_rational_100000000_by_1","typeString":"int_const 100000000"}},"src":"10615:16:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2873,"nodeType":"IfStatement","src":"10611:100:13","trueBody":{"id":2872,"nodeType":"Block","src":"10633:78:13","statements":[{"expression":{"id":2866,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2862,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2797,"src":"10651:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_100000000_by_1","typeString":"int_const 100000000"},"id":2865,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":2863,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10660:2:13","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"38","id":2864,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10666:1:13","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"10660:7:13","typeDescriptions":{"typeIdentifier":"t_rational_100000000_by_1","typeString":"int_const 100000000"}},"src":"10651:16:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2867,"nodeType":"ExpressionStatement","src":"10651:16:13"},{"expression":{"id":2870,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2868,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2803,"src":"10685:6:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"38","id":2869,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10695:1:13","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"10685:11:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2871,"nodeType":"ExpressionStatement","src":"10685:11:13"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2878,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2874,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2797,"src":"10728:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"},"id":2877,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":2875,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10737:2:13","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"34","id":2876,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10743:1:13","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"10737:7:13","typeDescriptions":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"}},"src":"10728:16:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2890,"nodeType":"IfStatement","src":"10724:100:13","trueBody":{"id":2889,"nodeType":"Block","src":"10746:78:13","statements":[{"expression":{"id":2883,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2879,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2797,"src":"10764:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"},"id":2882,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":2880,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10773:2:13","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"34","id":2881,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10779:1:13","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"10773:7:13","typeDescriptions":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"}},"src":"10764:16:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2884,"nodeType":"ExpressionStatement","src":"10764:16:13"},{"expression":{"id":2887,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2885,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2803,"src":"10798:6:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"34","id":2886,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10808:1:13","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"10798:11:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2888,"nodeType":"ExpressionStatement","src":"10798:11:13"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2895,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2891,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2797,"src":"10841:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"},"id":2894,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":2892,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10850:2:13","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"32","id":2893,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10856:1:13","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"10850:7:13","typeDescriptions":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"}},"src":"10841:16:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2907,"nodeType":"IfStatement","src":"10837:100:13","trueBody":{"id":2906,"nodeType":"Block","src":"10859:78:13","statements":[{"expression":{"id":2900,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2896,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2797,"src":"10877:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"},"id":2899,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":2897,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10886:2:13","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"32","id":2898,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10892:1:13","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"10886:7:13","typeDescriptions":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"}},"src":"10877:16:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2901,"nodeType":"ExpressionStatement","src":"10877:16:13"},{"expression":{"id":2904,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2902,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2803,"src":"10911:6:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"32","id":2903,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10921:1:13","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"10911:11:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2905,"nodeType":"ExpressionStatement","src":"10911:11:13"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2912,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2908,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2797,"src":"10954:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"id":2911,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":2909,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10963:2:13","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"31","id":2910,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10969:1:13","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"10963:7:13","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"}},"src":"10954:16:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2918,"nodeType":"IfStatement","src":"10950:66:13","trueBody":{"id":2917,"nodeType":"Block","src":"10972:44:13","statements":[{"expression":{"id":2915,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2913,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2803,"src":"10990:6:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"31","id":2914,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11000:1:13","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"10990:11:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2916,"nodeType":"ExpressionStatement","src":"10990:11:13"}]}}]},{"expression":{"id":2920,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2803,"src":"11042:6:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2801,"id":2921,"nodeType":"Return","src":"11035:13:13"}]},"documentation":{"id":2795,"nodeType":"StructuredDocumentation","src":"10020:114:13","text":" @dev Return the log in base 10, rounded down, of a positive value.\n Returns 0 if given 0."},"id":2923,"implemented":true,"kind":"function","modifiers":[],"name":"log10","nameLocation":"10148:5:13","nodeType":"FunctionDefinition","parameters":{"id":2798,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2797,"mutability":"mutable","name":"value","nameLocation":"10162:5:13","nodeType":"VariableDeclaration","scope":2923,"src":"10154:13:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2796,"name":"uint256","nodeType":"ElementaryTypeName","src":"10154:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10153:15:13"},"returnParameters":{"id":2801,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2800,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2923,"src":"10192:7:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2799,"name":"uint256","nodeType":"ElementaryTypeName","src":"10192:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10191:9:13"},"scope":3086,"src":"10139:916:13","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2958,"nodeType":"Block","src":"11290:167:13","statements":[{"id":2957,"nodeType":"UncheckedBlock","src":"11300:151:13","statements":[{"assignments":[2935],"declarations":[{"constant":false,"id":2935,"mutability":"mutable","name":"result","nameLocation":"11332:6:13","nodeType":"VariableDeclaration","scope":2957,"src":"11324:14:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2934,"name":"uint256","nodeType":"ElementaryTypeName","src":"11324:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2939,"initialValue":{"arguments":[{"id":2937,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2926,"src":"11347:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2936,"name":"log10","nodeType":"Identifier","overloadedDeclarations":[2923,2959],"referencedDeclaration":2923,"src":"11341:5:13","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":2938,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"11341:12:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"11324:29:13"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2955,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2940,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2935,"src":"11374:6:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"components":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2950,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_enum$_Rounding_$2227","typeString":"enum Math.Rounding"},"id":2944,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2941,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2929,"src":"11384:8:13","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2227","typeString":"enum Math.Rounding"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":2942,"name":"Rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2227,"src":"11396:8:13","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_Rounding_$2227_$","typeString":"type(enum Math.Rounding)"}},"id":2943,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"Up","nodeType":"MemberAccess","referencedDeclaration":2225,"src":"11396:11:13","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2227","typeString":"enum Math.Rounding"}},"src":"11384:23:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2949,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2947,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":2945,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11411:2:13","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"id":2946,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2935,"src":"11417:6:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11411:12:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":2948,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2926,"src":"11426:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11411:20:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"11384:47:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"hexValue":"30","id":2952,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11438:1:13","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"id":2953,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"11384:55:13","trueExpression":{"hexValue":"31","id":2951,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11434:1:13","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"id":2954,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"11383:57:13","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"11374:66:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2933,"id":2956,"nodeType":"Return","src":"11367:73:13"}]}]},"documentation":{"id":2924,"nodeType":"StructuredDocumentation","src":"11061:143:13","text":" @dev Return the log in base 10, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."},"id":2959,"implemented":true,"kind":"function","modifiers":[],"name":"log10","nameLocation":"11218:5:13","nodeType":"FunctionDefinition","parameters":{"id":2930,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2926,"mutability":"mutable","name":"value","nameLocation":"11232:5:13","nodeType":"VariableDeclaration","scope":2959,"src":"11224:13:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2925,"name":"uint256","nodeType":"ElementaryTypeName","src":"11224:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2929,"mutability":"mutable","name":"rounding","nameLocation":"11248:8:13","nodeType":"VariableDeclaration","scope":2959,"src":"11239:17:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2227","typeString":"enum Math.Rounding"},"typeName":{"id":2928,"nodeType":"UserDefinedTypeName","pathNode":{"id":2927,"name":"Rounding","nodeType":"IdentifierPath","referencedDeclaration":2227,"src":"11239:8:13"},"referencedDeclaration":2227,"src":"11239:8:13","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2227","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"11223:34:13"},"returnParameters":{"id":2933,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2932,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2959,"src":"11281:7:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2931,"name":"uint256","nodeType":"ElementaryTypeName","src":"11281:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11280:9:13"},"scope":3086,"src":"11209:248:13","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3045,"nodeType":"Block","src":"11771:600:13","statements":[{"assignments":[2968],"declarations":[{"constant":false,"id":2968,"mutability":"mutable","name":"result","nameLocation":"11789:6:13","nodeType":"VariableDeclaration","scope":3045,"src":"11781:14:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2967,"name":"uint256","nodeType":"ElementaryTypeName","src":"11781:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2970,"initialValue":{"hexValue":"30","id":2969,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11798:1:13","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"11781:18:13"},{"id":3042,"nodeType":"UncheckedBlock","src":"11809:533:13","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2975,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2973,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2971,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2962,"src":"11837:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"313238","id":2972,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11846:3:13","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"11837:12:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":2974,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11852:1:13","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"11837:16:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2985,"nodeType":"IfStatement","src":"11833:98:13","trueBody":{"id":2984,"nodeType":"Block","src":"11855:76:13","statements":[{"expression":{"id":2978,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2976,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2962,"src":"11873:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"313238","id":2977,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11883:3:13","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"11873:13:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2979,"nodeType":"ExpressionStatement","src":"11873:13:13"},{"expression":{"id":2982,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2980,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2968,"src":"11904:6:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3136","id":2981,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11914:2:13","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"11904:12:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2983,"nodeType":"ExpressionStatement","src":"11904:12:13"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2990,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2988,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2986,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2962,"src":"11948:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"3634","id":2987,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11957:2:13","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"11948:11:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":2989,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11962:1:13","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"11948:15:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3000,"nodeType":"IfStatement","src":"11944:95:13","trueBody":{"id":2999,"nodeType":"Block","src":"11965:74:13","statements":[{"expression":{"id":2993,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2991,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2962,"src":"11983:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3634","id":2992,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11993:2:13","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"11983:12:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2994,"nodeType":"ExpressionStatement","src":"11983:12:13"},{"expression":{"id":2997,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2995,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2968,"src":"12013:6:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"38","id":2996,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12023:1:13","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"12013:11:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2998,"nodeType":"ExpressionStatement","src":"12013:11:13"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3005,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3003,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3001,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2962,"src":"12056:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"3332","id":3002,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12065:2:13","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"12056:11:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":3004,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12070:1:13","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"12056:15:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3015,"nodeType":"IfStatement","src":"12052:95:13","trueBody":{"id":3014,"nodeType":"Block","src":"12073:74:13","statements":[{"expression":{"id":3008,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3006,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2962,"src":"12091:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3332","id":3007,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12101:2:13","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"12091:12:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3009,"nodeType":"ExpressionStatement","src":"12091:12:13"},{"expression":{"id":3012,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3010,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2968,"src":"12121:6:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"34","id":3011,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12131:1:13","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"12121:11:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3013,"nodeType":"ExpressionStatement","src":"12121:11:13"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3020,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3018,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3016,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2962,"src":"12164:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"3136","id":3017,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12173:2:13","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"12164:11:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":3019,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12178:1:13","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"12164:15:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3030,"nodeType":"IfStatement","src":"12160:95:13","trueBody":{"id":3029,"nodeType":"Block","src":"12181:74:13","statements":[{"expression":{"id":3023,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3021,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2962,"src":"12199:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3136","id":3022,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12209:2:13","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"12199:12:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3024,"nodeType":"ExpressionStatement","src":"12199:12:13"},{"expression":{"id":3027,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3025,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2968,"src":"12229:6:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"32","id":3026,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12239:1:13","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"12229:11:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3028,"nodeType":"ExpressionStatement","src":"12229:11:13"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3035,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3033,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3031,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2962,"src":"12272:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"38","id":3032,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12281:1:13","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"12272:10:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":3034,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12285:1:13","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"12272:14:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3041,"nodeType":"IfStatement","src":"12268:64:13","trueBody":{"id":3040,"nodeType":"Block","src":"12288:44:13","statements":[{"expression":{"id":3038,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3036,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2968,"src":"12306:6:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"31","id":3037,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12316:1:13","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"12306:11:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3039,"nodeType":"ExpressionStatement","src":"12306:11:13"}]}}]},{"expression":{"id":3043,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2968,"src":"12358:6:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2966,"id":3044,"nodeType":"Return","src":"12351:13:13"}]},"documentation":{"id":2960,"nodeType":"StructuredDocumentation","src":"11463:240:13","text":" @dev Return the log in base 256, rounded down, of a positive value.\n Returns 0 if given 0.\n Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string."},"id":3046,"implemented":true,"kind":"function","modifiers":[],"name":"log256","nameLocation":"11717:6:13","nodeType":"FunctionDefinition","parameters":{"id":2963,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2962,"mutability":"mutable","name":"value","nameLocation":"11732:5:13","nodeType":"VariableDeclaration","scope":3046,"src":"11724:13:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2961,"name":"uint256","nodeType":"ElementaryTypeName","src":"11724:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11723:15:13"},"returnParameters":{"id":2966,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2965,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3046,"src":"11762:7:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2964,"name":"uint256","nodeType":"ElementaryTypeName","src":"11762:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11761:9:13"},"scope":3086,"src":"11708:663:13","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3084,"nodeType":"Block","src":"12608:174:13","statements":[{"id":3083,"nodeType":"UncheckedBlock","src":"12618:158:13","statements":[{"assignments":[3058],"declarations":[{"constant":false,"id":3058,"mutability":"mutable","name":"result","nameLocation":"12650:6:13","nodeType":"VariableDeclaration","scope":3083,"src":"12642:14:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3057,"name":"uint256","nodeType":"ElementaryTypeName","src":"12642:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3062,"initialValue":{"arguments":[{"id":3060,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3049,"src":"12666:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3059,"name":"log256","nodeType":"Identifier","overloadedDeclarations":[3046,3085],"referencedDeclaration":3046,"src":"12659:6:13","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":3061,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"12659:13:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"12642:30:13"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3081,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3063,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3058,"src":"12693:6:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"components":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":3076,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_enum$_Rounding_$2227","typeString":"enum Math.Rounding"},"id":3067,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3064,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3052,"src":"12703:8:13","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2227","typeString":"enum Math.Rounding"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":3065,"name":"Rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2227,"src":"12715:8:13","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_Rounding_$2227_$","typeString":"type(enum Math.Rounding)"}},"id":3066,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"Up","nodeType":"MemberAccess","referencedDeclaration":2225,"src":"12715:11:13","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2227","typeString":"enum Math.Rounding"}},"src":"12703:23:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3075,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3073,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":3068,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12730:1:13","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3071,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3069,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3058,"src":"12736:6:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"33","id":3070,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12746:1:13","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"value":"3"},"src":"12736:11:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3072,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"12735:13:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12730:18:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":3074,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3049,"src":"12751:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12730:26:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"12703:53:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"hexValue":"30","id":3078,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12763:1:13","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"id":3079,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"12703:61:13","trueExpression":{"hexValue":"31","id":3077,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12759:1:13","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"id":3080,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"12702:63:13","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"12693:72:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3056,"id":3082,"nodeType":"Return","src":"12686:79:13"}]}]},"documentation":{"id":3047,"nodeType":"StructuredDocumentation","src":"12377:144:13","text":" @dev Return the log in base 256, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."},"id":3085,"implemented":true,"kind":"function","modifiers":[],"name":"log256","nameLocation":"12535:6:13","nodeType":"FunctionDefinition","parameters":{"id":3053,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3049,"mutability":"mutable","name":"value","nameLocation":"12550:5:13","nodeType":"VariableDeclaration","scope":3085,"src":"12542:13:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3048,"name":"uint256","nodeType":"ElementaryTypeName","src":"12542:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3052,"mutability":"mutable","name":"rounding","nameLocation":"12566:8:13","nodeType":"VariableDeclaration","scope":3085,"src":"12557:17:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2227","typeString":"enum Math.Rounding"},"typeName":{"id":3051,"nodeType":"UserDefinedTypeName","pathNode":{"id":3050,"name":"Rounding","nodeType":"IdentifierPath","referencedDeclaration":2227,"src":"12557:8:13"},"referencedDeclaration":2227,"src":"12557:8:13","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2227","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"12541:34:13"},"returnParameters":{"id":3056,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3055,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3085,"src":"12599:7:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3054,"name":"uint256","nodeType":"ElementaryTypeName","src":"12599:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12598:9:13"},"scope":3086,"src":"12526:256:13","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":3087,"src":"202:12582:13","usedErrors":[]}],"src":"103:12682:13"}},"@openzeppelin/contracts/utils/math/SafeMath.sol":{"id":14,"ast":{"absolutePath":"@openzeppelin/contracts/utils/math/SafeMath.sol","exportedSymbols":{"SafeMath":[3398]},"id":3399,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":3088,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"107:23:14"},{"abstract":false,"baseContracts":[],"canonicalName":"SafeMath","contractDependencies":[],"contractKind":"library","documentation":{"id":3089,"nodeType":"StructuredDocumentation","src":"285:196:14","text":" @dev Wrappers over Solidity's arithmetic operations.\n NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler\n now has built in overflow checking."},"fullyImplemented":true,"id":3398,"linearizedBaseContracts":[3398],"name":"SafeMath","nameLocation":"490:8:14","nodeType":"ContractDefinition","nodes":[{"body":{"id":3120,"nodeType":"Block","src":"717:140:14","statements":[{"id":3119,"nodeType":"UncheckedBlock","src":"727:124:14","statements":[{"assignments":[3102],"declarations":[{"constant":false,"id":3102,"mutability":"mutable","name":"c","nameLocation":"759:1:14","nodeType":"VariableDeclaration","scope":3119,"src":"751:9:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3101,"name":"uint256","nodeType":"ElementaryTypeName","src":"751:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3106,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3105,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3103,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3092,"src":"763:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":3104,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3094,"src":"767:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"763:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"751:17:14"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3109,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3107,"name":"c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3102,"src":"786:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":3108,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3092,"src":"790:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"786:5:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3114,"nodeType":"IfStatement","src":"782:28:14","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":3110,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"801:5:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":3111,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"808:1:14","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":3112,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"800:10:14","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":3100,"id":3113,"nodeType":"Return","src":"793:17:14"}},{"expression":{"components":[{"hexValue":"74727565","id":3115,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"832:4:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"id":3116,"name":"c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3102,"src":"838:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3117,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"831:9:14","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":3100,"id":3118,"nodeType":"Return","src":"824:16:14"}]}]},"documentation":{"id":3090,"nodeType":"StructuredDocumentation","src":"505:131:14","text":" @dev Returns the addition of two unsigned integers, with an overflow flag.\n _Available since v3.4._"},"id":3121,"implemented":true,"kind":"function","modifiers":[],"name":"tryAdd","nameLocation":"650:6:14","nodeType":"FunctionDefinition","parameters":{"id":3095,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3092,"mutability":"mutable","name":"a","nameLocation":"665:1:14","nodeType":"VariableDeclaration","scope":3121,"src":"657:9:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3091,"name":"uint256","nodeType":"ElementaryTypeName","src":"657:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3094,"mutability":"mutable","name":"b","nameLocation":"676:1:14","nodeType":"VariableDeclaration","scope":3121,"src":"668:9:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3093,"name":"uint256","nodeType":"ElementaryTypeName","src":"668:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"656:22:14"},"returnParameters":{"id":3100,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3097,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3121,"src":"702:4:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3096,"name":"bool","nodeType":"ElementaryTypeName","src":"702:4:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":3099,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3121,"src":"708:7:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3098,"name":"uint256","nodeType":"ElementaryTypeName","src":"708:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"701:15:14"},"scope":3398,"src":"641:216:14","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3148,"nodeType":"Block","src":"1078:113:14","statements":[{"id":3147,"nodeType":"UncheckedBlock","src":"1088:97:14","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3135,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3133,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3126,"src":"1116:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":3134,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3124,"src":"1120:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1116:5:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3140,"nodeType":"IfStatement","src":"1112:28:14","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":3136,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"1131:5:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":3137,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1138:1:14","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":3138,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"1130:10:14","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":3132,"id":3139,"nodeType":"Return","src":"1123:17:14"}},{"expression":{"components":[{"hexValue":"74727565","id":3141,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"1162:4:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3144,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3142,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3124,"src":"1168:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":3143,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3126,"src":"1172:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1168:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3145,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1161:13:14","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":3132,"id":3146,"nodeType":"Return","src":"1154:20:14"}]}]},"documentation":{"id":3122,"nodeType":"StructuredDocumentation","src":"863:134:14","text":" @dev Returns the subtraction of two unsigned integers, with an overflow flag.\n _Available since v3.4._"},"id":3149,"implemented":true,"kind":"function","modifiers":[],"name":"trySub","nameLocation":"1011:6:14","nodeType":"FunctionDefinition","parameters":{"id":3127,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3124,"mutability":"mutable","name":"a","nameLocation":"1026:1:14","nodeType":"VariableDeclaration","scope":3149,"src":"1018:9:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3123,"name":"uint256","nodeType":"ElementaryTypeName","src":"1018:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3126,"mutability":"mutable","name":"b","nameLocation":"1037:1:14","nodeType":"VariableDeclaration","scope":3149,"src":"1029:9:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3125,"name":"uint256","nodeType":"ElementaryTypeName","src":"1029:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1017:22:14"},"returnParameters":{"id":3132,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3129,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3149,"src":"1063:4:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3128,"name":"bool","nodeType":"ElementaryTypeName","src":"1063:4:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":3131,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3149,"src":"1069:7:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3130,"name":"uint256","nodeType":"ElementaryTypeName","src":"1069:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1062:15:14"},"scope":3398,"src":"1002:189:14","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3190,"nodeType":"Block","src":"1415:417:14","statements":[{"id":3189,"nodeType":"UncheckedBlock","src":"1425:401:14","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3163,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3161,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3152,"src":"1683:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":3162,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1688:1:14","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1683:6:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3168,"nodeType":"IfStatement","src":"1679:28:14","trueBody":{"expression":{"components":[{"hexValue":"74727565","id":3164,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"1699:4:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"hexValue":"30","id":3165,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1705:1:14","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":3166,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"1698:9:14","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":3160,"id":3167,"nodeType":"Return","src":"1691:16:14"}},{"assignments":[3170],"declarations":[{"constant":false,"id":3170,"mutability":"mutable","name":"c","nameLocation":"1729:1:14","nodeType":"VariableDeclaration","scope":3189,"src":"1721:9:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3169,"name":"uint256","nodeType":"ElementaryTypeName","src":"1721:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3174,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3173,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3171,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3152,"src":"1733:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":3172,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3154,"src":"1737:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1733:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"1721:17:14"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3179,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3177,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3175,"name":"c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3170,"src":"1756:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":3176,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3152,"src":"1760:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1756:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":3178,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3154,"src":"1765:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1756:10:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3184,"nodeType":"IfStatement","src":"1752:33:14","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":3180,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"1776:5:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":3181,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1783:1:14","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":3182,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"1775:10:14","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":3160,"id":3183,"nodeType":"Return","src":"1768:17:14"}},{"expression":{"components":[{"hexValue":"74727565","id":3185,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"1807:4:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"id":3186,"name":"c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3170,"src":"1813:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3187,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1806:9:14","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":3160,"id":3188,"nodeType":"Return","src":"1799:16:14"}]}]},"documentation":{"id":3150,"nodeType":"StructuredDocumentation","src":"1197:137:14","text":" @dev Returns the multiplication of two unsigned integers, with an overflow flag.\n _Available since v3.4._"},"id":3191,"implemented":true,"kind":"function","modifiers":[],"name":"tryMul","nameLocation":"1348:6:14","nodeType":"FunctionDefinition","parameters":{"id":3155,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3152,"mutability":"mutable","name":"a","nameLocation":"1363:1:14","nodeType":"VariableDeclaration","scope":3191,"src":"1355:9:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3151,"name":"uint256","nodeType":"ElementaryTypeName","src":"1355:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3154,"mutability":"mutable","name":"b","nameLocation":"1374:1:14","nodeType":"VariableDeclaration","scope":3191,"src":"1366:9:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3153,"name":"uint256","nodeType":"ElementaryTypeName","src":"1366:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1354:22:14"},"returnParameters":{"id":3160,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3157,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3191,"src":"1400:4:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3156,"name":"bool","nodeType":"ElementaryTypeName","src":"1400:4:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":3159,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3191,"src":"1406:7:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3158,"name":"uint256","nodeType":"ElementaryTypeName","src":"1406:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1399:15:14"},"scope":3398,"src":"1339:493:14","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3218,"nodeType":"Block","src":"2057:114:14","statements":[{"id":3217,"nodeType":"UncheckedBlock","src":"2067:98:14","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3205,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3203,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3196,"src":"2095:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":3204,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2100:1:14","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2095:6:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3210,"nodeType":"IfStatement","src":"2091:29:14","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":3206,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"2111:5:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":3207,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2118:1:14","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":3208,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"2110:10:14","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":3202,"id":3209,"nodeType":"Return","src":"2103:17:14"}},{"expression":{"components":[{"hexValue":"74727565","id":3211,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"2142:4:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3214,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3212,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3194,"src":"2148:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":3213,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3196,"src":"2152:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2148:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3215,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"2141:13:14","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":3202,"id":3216,"nodeType":"Return","src":"2134:20:14"}]}]},"documentation":{"id":3192,"nodeType":"StructuredDocumentation","src":"1838:138:14","text":" @dev Returns the division of two unsigned integers, with a division by zero flag.\n _Available since v3.4._"},"id":3219,"implemented":true,"kind":"function","modifiers":[],"name":"tryDiv","nameLocation":"1990:6:14","nodeType":"FunctionDefinition","parameters":{"id":3197,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3194,"mutability":"mutable","name":"a","nameLocation":"2005:1:14","nodeType":"VariableDeclaration","scope":3219,"src":"1997:9:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3193,"name":"uint256","nodeType":"ElementaryTypeName","src":"1997:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3196,"mutability":"mutable","name":"b","nameLocation":"2016:1:14","nodeType":"VariableDeclaration","scope":3219,"src":"2008:9:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3195,"name":"uint256","nodeType":"ElementaryTypeName","src":"2008:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1996:22:14"},"returnParameters":{"id":3202,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3199,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3219,"src":"2042:4:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3198,"name":"bool","nodeType":"ElementaryTypeName","src":"2042:4:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":3201,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3219,"src":"2048:7:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3200,"name":"uint256","nodeType":"ElementaryTypeName","src":"2048:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2041:15:14"},"scope":3398,"src":"1981:190:14","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3246,"nodeType":"Block","src":"2406:114:14","statements":[{"id":3245,"nodeType":"UncheckedBlock","src":"2416:98:14","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3233,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3231,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3224,"src":"2444:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":3232,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2449:1:14","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2444:6:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3238,"nodeType":"IfStatement","src":"2440:29:14","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":3234,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"2460:5:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":3235,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2467:1:14","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":3236,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"2459:10:14","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":3230,"id":3237,"nodeType":"Return","src":"2452:17:14"}},{"expression":{"components":[{"hexValue":"74727565","id":3239,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"2491:4:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3242,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3240,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3222,"src":"2497:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"%","rightExpression":{"id":3241,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3224,"src":"2501:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2497:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3243,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"2490:13:14","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":3230,"id":3244,"nodeType":"Return","src":"2483:20:14"}]}]},"documentation":{"id":3220,"nodeType":"StructuredDocumentation","src":"2177:148:14","text":" @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag.\n _Available since v3.4._"},"id":3247,"implemented":true,"kind":"function","modifiers":[],"name":"tryMod","nameLocation":"2339:6:14","nodeType":"FunctionDefinition","parameters":{"id":3225,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3222,"mutability":"mutable","name":"a","nameLocation":"2354:1:14","nodeType":"VariableDeclaration","scope":3247,"src":"2346:9:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3221,"name":"uint256","nodeType":"ElementaryTypeName","src":"2346:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3224,"mutability":"mutable","name":"b","nameLocation":"2365:1:14","nodeType":"VariableDeclaration","scope":3247,"src":"2357:9:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3223,"name":"uint256","nodeType":"ElementaryTypeName","src":"2357:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2345:22:14"},"returnParameters":{"id":3230,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3227,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3247,"src":"2391:4:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3226,"name":"bool","nodeType":"ElementaryTypeName","src":"2391:4:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":3229,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3247,"src":"2397:7:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3228,"name":"uint256","nodeType":"ElementaryTypeName","src":"2397:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2390:15:14"},"scope":3398,"src":"2330:190:14","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3261,"nodeType":"Block","src":"2822:29:14","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3259,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3257,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3250,"src":"2839:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":3258,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3252,"src":"2843:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2839:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3256,"id":3260,"nodeType":"Return","src":"2832:12:14"}]},"documentation":{"id":3248,"nodeType":"StructuredDocumentation","src":"2526:224:14","text":" @dev Returns the addition of two unsigned integers, reverting on\n overflow.\n Counterpart to Solidity's `+` operator.\n Requirements:\n - Addition cannot overflow."},"id":3262,"implemented":true,"kind":"function","modifiers":[],"name":"add","nameLocation":"2764:3:14","nodeType":"FunctionDefinition","parameters":{"id":3253,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3250,"mutability":"mutable","name":"a","nameLocation":"2776:1:14","nodeType":"VariableDeclaration","scope":3262,"src":"2768:9:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3249,"name":"uint256","nodeType":"ElementaryTypeName","src":"2768:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3252,"mutability":"mutable","name":"b","nameLocation":"2787:1:14","nodeType":"VariableDeclaration","scope":3262,"src":"2779:9:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3251,"name":"uint256","nodeType":"ElementaryTypeName","src":"2779:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2767:22:14"},"returnParameters":{"id":3256,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3255,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3262,"src":"2813:7:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3254,"name":"uint256","nodeType":"ElementaryTypeName","src":"2813:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2812:9:14"},"scope":3398,"src":"2755:96:14","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3276,"nodeType":"Block","src":"3189:29:14","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3274,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3272,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3265,"src":"3206:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":3273,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3267,"src":"3210:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3206:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3271,"id":3275,"nodeType":"Return","src":"3199:12:14"}]},"documentation":{"id":3263,"nodeType":"StructuredDocumentation","src":"2857:260:14","text":" @dev Returns the subtraction of two unsigned integers, reverting on\n overflow (when the result is negative).\n Counterpart to Solidity's `-` operator.\n Requirements:\n - Subtraction cannot overflow."},"id":3277,"implemented":true,"kind":"function","modifiers":[],"name":"sub","nameLocation":"3131:3:14","nodeType":"FunctionDefinition","parameters":{"id":3268,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3265,"mutability":"mutable","name":"a","nameLocation":"3143:1:14","nodeType":"VariableDeclaration","scope":3277,"src":"3135:9:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3264,"name":"uint256","nodeType":"ElementaryTypeName","src":"3135:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3267,"mutability":"mutable","name":"b","nameLocation":"3154:1:14","nodeType":"VariableDeclaration","scope":3277,"src":"3146:9:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3266,"name":"uint256","nodeType":"ElementaryTypeName","src":"3146:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3134:22:14"},"returnParameters":{"id":3271,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3270,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3277,"src":"3180:7:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3269,"name":"uint256","nodeType":"ElementaryTypeName","src":"3180:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3179:9:14"},"scope":3398,"src":"3122:96:14","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3291,"nodeType":"Block","src":"3532:29:14","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3289,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3287,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3280,"src":"3549:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":3288,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3282,"src":"3553:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3549:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3286,"id":3290,"nodeType":"Return","src":"3542:12:14"}]},"documentation":{"id":3278,"nodeType":"StructuredDocumentation","src":"3224:236:14","text":" @dev Returns the multiplication of two unsigned integers, reverting on\n overflow.\n Counterpart to Solidity's `*` operator.\n Requirements:\n - Multiplication cannot overflow."},"id":3292,"implemented":true,"kind":"function","modifiers":[],"name":"mul","nameLocation":"3474:3:14","nodeType":"FunctionDefinition","parameters":{"id":3283,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3280,"mutability":"mutable","name":"a","nameLocation":"3486:1:14","nodeType":"VariableDeclaration","scope":3292,"src":"3478:9:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3279,"name":"uint256","nodeType":"ElementaryTypeName","src":"3478:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3282,"mutability":"mutable","name":"b","nameLocation":"3497:1:14","nodeType":"VariableDeclaration","scope":3292,"src":"3489:9:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3281,"name":"uint256","nodeType":"ElementaryTypeName","src":"3489:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3477:22:14"},"returnParameters":{"id":3286,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3285,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3292,"src":"3523:7:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3284,"name":"uint256","nodeType":"ElementaryTypeName","src":"3523:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3522:9:14"},"scope":3398,"src":"3465:96:14","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3306,"nodeType":"Block","src":"3917:29:14","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3304,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3302,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3295,"src":"3934:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":3303,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3297,"src":"3938:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3934:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3301,"id":3305,"nodeType":"Return","src":"3927:12:14"}]},"documentation":{"id":3293,"nodeType":"StructuredDocumentation","src":"3567:278:14","text":" @dev Returns the integer division of two unsigned integers, reverting on\n division by zero. The result is rounded towards zero.\n Counterpart to Solidity's `/` operator.\n Requirements:\n - The divisor cannot be zero."},"id":3307,"implemented":true,"kind":"function","modifiers":[],"name":"div","nameLocation":"3859:3:14","nodeType":"FunctionDefinition","parameters":{"id":3298,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3295,"mutability":"mutable","name":"a","nameLocation":"3871:1:14","nodeType":"VariableDeclaration","scope":3307,"src":"3863:9:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3294,"name":"uint256","nodeType":"ElementaryTypeName","src":"3863:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3297,"mutability":"mutable","name":"b","nameLocation":"3882:1:14","nodeType":"VariableDeclaration","scope":3307,"src":"3874:9:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3296,"name":"uint256","nodeType":"ElementaryTypeName","src":"3874:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3862:22:14"},"returnParameters":{"id":3301,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3300,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3307,"src":"3908:7:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3299,"name":"uint256","nodeType":"ElementaryTypeName","src":"3908:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3907:9:14"},"scope":3398,"src":"3850:96:14","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3321,"nodeType":"Block","src":"4466:29:14","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3319,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3317,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3310,"src":"4483:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"%","rightExpression":{"id":3318,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3312,"src":"4487:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4483:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3316,"id":3320,"nodeType":"Return","src":"4476:12:14"}]},"documentation":{"id":3308,"nodeType":"StructuredDocumentation","src":"3952:442:14","text":" @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n reverting when dividing by zero.\n Counterpart to Solidity's `%` operator. This function uses a `revert`\n opcode (which leaves remaining gas untouched) while Solidity uses an\n invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."},"id":3322,"implemented":true,"kind":"function","modifiers":[],"name":"mod","nameLocation":"4408:3:14","nodeType":"FunctionDefinition","parameters":{"id":3313,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3310,"mutability":"mutable","name":"a","nameLocation":"4420:1:14","nodeType":"VariableDeclaration","scope":3322,"src":"4412:9:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3309,"name":"uint256","nodeType":"ElementaryTypeName","src":"4412:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3312,"mutability":"mutable","name":"b","nameLocation":"4431:1:14","nodeType":"VariableDeclaration","scope":3322,"src":"4423:9:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3311,"name":"uint256","nodeType":"ElementaryTypeName","src":"4423:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4411:22:14"},"returnParameters":{"id":3316,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3315,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3322,"src":"4457:7:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3314,"name":"uint256","nodeType":"ElementaryTypeName","src":"4457:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4456:9:14"},"scope":3398,"src":"4399:96:14","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3346,"nodeType":"Block","src":"5054:106:14","statements":[{"id":3345,"nodeType":"UncheckedBlock","src":"5064:90:14","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3337,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3335,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3327,"src":"5096:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"id":3336,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3325,"src":"5101:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5096:6:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":3338,"name":"errorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3329,"src":"5104:12:14","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":3334,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"5088:7:14","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":3339,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5088:29:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3340,"nodeType":"ExpressionStatement","src":"5088:29:14"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3343,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3341,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3325,"src":"5138:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":3342,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3327,"src":"5142:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5138:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3333,"id":3344,"nodeType":"Return","src":"5131:12:14"}]}]},"documentation":{"id":3323,"nodeType":"StructuredDocumentation","src":"4501:453:14","text":" @dev Returns the subtraction of two unsigned integers, reverting with custom message on\n overflow (when the result is negative).\n CAUTION: This function is deprecated because it requires allocating memory for the error\n message unnecessarily. For custom revert reasons use {trySub}.\n Counterpart to Solidity's `-` operator.\n Requirements:\n - Subtraction cannot overflow."},"id":3347,"implemented":true,"kind":"function","modifiers":[],"name":"sub","nameLocation":"4968:3:14","nodeType":"FunctionDefinition","parameters":{"id":3330,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3325,"mutability":"mutable","name":"a","nameLocation":"4980:1:14","nodeType":"VariableDeclaration","scope":3347,"src":"4972:9:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3324,"name":"uint256","nodeType":"ElementaryTypeName","src":"4972:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3327,"mutability":"mutable","name":"b","nameLocation":"4991:1:14","nodeType":"VariableDeclaration","scope":3347,"src":"4983:9:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3326,"name":"uint256","nodeType":"ElementaryTypeName","src":"4983:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3329,"mutability":"mutable","name":"errorMessage","nameLocation":"5008:12:14","nodeType":"VariableDeclaration","scope":3347,"src":"4994:26:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3328,"name":"string","nodeType":"ElementaryTypeName","src":"4994:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"4971:50:14"},"returnParameters":{"id":3333,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3332,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3347,"src":"5045:7:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3331,"name":"uint256","nodeType":"ElementaryTypeName","src":"5045:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5044:9:14"},"scope":3398,"src":"4959:201:14","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3371,"nodeType":"Block","src":"5739:105:14","statements":[{"id":3370,"nodeType":"UncheckedBlock","src":"5749:89:14","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3362,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3360,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3352,"src":"5781:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":3361,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5785:1:14","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"5781:5:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":3363,"name":"errorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3354,"src":"5788:12:14","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":3359,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"5773:7:14","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":3364,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5773:28:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3365,"nodeType":"ExpressionStatement","src":"5773:28:14"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3368,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3366,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3350,"src":"5822:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":3367,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3352,"src":"5826:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5822:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3358,"id":3369,"nodeType":"Return","src":"5815:12:14"}]}]},"documentation":{"id":3348,"nodeType":"StructuredDocumentation","src":"5166:473:14","text":" @dev Returns the integer division of two unsigned integers, reverting with custom message on\n division by zero. The result is rounded towards zero.\n Counterpart to Solidity's `/` operator. Note: this function uses a\n `revert` opcode (which leaves remaining gas untouched) while Solidity\n uses an invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."},"id":3372,"implemented":true,"kind":"function","modifiers":[],"name":"div","nameLocation":"5653:3:14","nodeType":"FunctionDefinition","parameters":{"id":3355,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3350,"mutability":"mutable","name":"a","nameLocation":"5665:1:14","nodeType":"VariableDeclaration","scope":3372,"src":"5657:9:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3349,"name":"uint256","nodeType":"ElementaryTypeName","src":"5657:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3352,"mutability":"mutable","name":"b","nameLocation":"5676:1:14","nodeType":"VariableDeclaration","scope":3372,"src":"5668:9:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3351,"name":"uint256","nodeType":"ElementaryTypeName","src":"5668:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3354,"mutability":"mutable","name":"errorMessage","nameLocation":"5693:12:14","nodeType":"VariableDeclaration","scope":3372,"src":"5679:26:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3353,"name":"string","nodeType":"ElementaryTypeName","src":"5679:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"5656:50:14"},"returnParameters":{"id":3358,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3357,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3372,"src":"5730:7:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3356,"name":"uint256","nodeType":"ElementaryTypeName","src":"5730:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5729:9:14"},"scope":3398,"src":"5644:200:14","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3396,"nodeType":"Block","src":"6585:105:14","statements":[{"id":3395,"nodeType":"UncheckedBlock","src":"6595:89:14","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3387,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3385,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3377,"src":"6627:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":3386,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6631:1:14","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"6627:5:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":3388,"name":"errorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3379,"src":"6634:12:14","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":3384,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"6619:7:14","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":3389,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6619:28:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3390,"nodeType":"ExpressionStatement","src":"6619:28:14"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3393,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3391,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3375,"src":"6668:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"%","rightExpression":{"id":3392,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3377,"src":"6672:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6668:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3383,"id":3394,"nodeType":"Return","src":"6661:12:14"}]}]},"documentation":{"id":3373,"nodeType":"StructuredDocumentation","src":"5850:635:14","text":" @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n reverting with custom message when dividing by zero.\n CAUTION: This function is deprecated because it requires allocating memory for the error\n message unnecessarily. For custom revert reasons use {tryMod}.\n Counterpart to Solidity's `%` operator. This function uses a `revert`\n opcode (which leaves remaining gas untouched) while Solidity uses an\n invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."},"id":3397,"implemented":true,"kind":"function","modifiers":[],"name":"mod","nameLocation":"6499:3:14","nodeType":"FunctionDefinition","parameters":{"id":3380,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3375,"mutability":"mutable","name":"a","nameLocation":"6511:1:14","nodeType":"VariableDeclaration","scope":3397,"src":"6503:9:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3374,"name":"uint256","nodeType":"ElementaryTypeName","src":"6503:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3377,"mutability":"mutable","name":"b","nameLocation":"6522:1:14","nodeType":"VariableDeclaration","scope":3397,"src":"6514:9:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3376,"name":"uint256","nodeType":"ElementaryTypeName","src":"6514:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3379,"mutability":"mutable","name":"errorMessage","nameLocation":"6539:12:14","nodeType":"VariableDeclaration","scope":3397,"src":"6525:26:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3378,"name":"string","nodeType":"ElementaryTypeName","src":"6525:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"6502:50:14"},"returnParameters":{"id":3383,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3382,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3397,"src":"6576:7:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3381,"name":"uint256","nodeType":"ElementaryTypeName","src":"6576:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6575:9:14"},"scope":3398,"src":"6490:200:14","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":3399,"src":"482:6210:14","usedErrors":[]}],"src":"107:6586:14"}},"@openzeppelin/contracts/utils/math/SignedMath.sol":{"id":15,"ast":{"absolutePath":"@openzeppelin/contracts/utils/math/SignedMath.sol","exportedSymbols":{"SignedMath":[3503]},"id":3504,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":3400,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"109:23:15"},{"abstract":false,"baseContracts":[],"canonicalName":"SignedMath","contractDependencies":[],"contractKind":"library","documentation":{"id":3401,"nodeType":"StructuredDocumentation","src":"134:80:15","text":" @dev Standard signed math utilities missing in the Solidity language."},"fullyImplemented":true,"id":3503,"linearizedBaseContracts":[3503],"name":"SignedMath","nameLocation":"223:10:15","nodeType":"ContractDefinition","nodes":[{"body":{"id":3418,"nodeType":"Block","src":"375:37:15","statements":[{"expression":{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":3413,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3411,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3404,"src":"392:1:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":3412,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3406,"src":"396:1:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"392:5:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"id":3415,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3406,"src":"404:1:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"id":3416,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"392:13:15","trueExpression":{"id":3414,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3404,"src":"400:1:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"functionReturnParameters":3410,"id":3417,"nodeType":"Return","src":"385:20:15"}]},"documentation":{"id":3402,"nodeType":"StructuredDocumentation","src":"240:66:15","text":" @dev Returns the largest of two signed numbers."},"id":3419,"implemented":true,"kind":"function","modifiers":[],"name":"max","nameLocation":"320:3:15","nodeType":"FunctionDefinition","parameters":{"id":3407,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3404,"mutability":"mutable","name":"a","nameLocation":"331:1:15","nodeType":"VariableDeclaration","scope":3419,"src":"324:8:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":3403,"name":"int256","nodeType":"ElementaryTypeName","src":"324:6:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":3406,"mutability":"mutable","name":"b","nameLocation":"341:1:15","nodeType":"VariableDeclaration","scope":3419,"src":"334:8:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":3405,"name":"int256","nodeType":"ElementaryTypeName","src":"334:6:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"323:20:15"},"returnParameters":{"id":3410,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3409,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3419,"src":"367:6:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":3408,"name":"int256","nodeType":"ElementaryTypeName","src":"367:6:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"366:8:15"},"scope":3503,"src":"311:101:15","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3436,"nodeType":"Block","src":"554:37:15","statements":[{"expression":{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":3431,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3429,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3422,"src":"571:1:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":3430,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3424,"src":"575:1:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"571:5:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"id":3433,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3424,"src":"583:1:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"id":3434,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"571:13:15","trueExpression":{"id":3432,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3422,"src":"579:1:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"functionReturnParameters":3428,"id":3435,"nodeType":"Return","src":"564:20:15"}]},"documentation":{"id":3420,"nodeType":"StructuredDocumentation","src":"418:67:15","text":" @dev Returns the smallest of two signed numbers."},"id":3437,"implemented":true,"kind":"function","modifiers":[],"name":"min","nameLocation":"499:3:15","nodeType":"FunctionDefinition","parameters":{"id":3425,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3422,"mutability":"mutable","name":"a","nameLocation":"510:1:15","nodeType":"VariableDeclaration","scope":3437,"src":"503:8:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":3421,"name":"int256","nodeType":"ElementaryTypeName","src":"503:6:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":3424,"mutability":"mutable","name":"b","nameLocation":"520:1:15","nodeType":"VariableDeclaration","scope":3437,"src":"513:8:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":3423,"name":"int256","nodeType":"ElementaryTypeName","src":"513:6:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"502:20:15"},"returnParameters":{"id":3428,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3427,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3437,"src":"546:6:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":3426,"name":"int256","nodeType":"ElementaryTypeName","src":"546:6:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"545:8:15"},"scope":3503,"src":"490:101:15","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3480,"nodeType":"Block","src":"796:162:15","statements":[{"assignments":[3448],"declarations":[{"constant":false,"id":3448,"mutability":"mutable","name":"x","nameLocation":"865:1:15","nodeType":"VariableDeclaration","scope":3480,"src":"858:8:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":3447,"name":"int256","nodeType":"ElementaryTypeName","src":"858:6:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"id":3461,"initialValue":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":3460,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":3451,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3449,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3440,"src":"870:1:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"id":3450,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3442,"src":"874:1:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"870:5:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":3452,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"869:7:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":3458,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":3455,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3453,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3440,"src":"881:1:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"id":3454,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3442,"src":"885:1:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"881:5:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":3456,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"880:7:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":3457,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"891:1:15","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"880:12:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":3459,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"879:14:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"869:24:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"VariableDeclarationStatement","src":"858:35:15"},{"expression":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":3478,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3462,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3448,"src":"910:1:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":3476,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3470,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":3467,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3448,"src":"930:1:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":3466,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"922:7:15","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":3465,"name":"uint256","nodeType":"ElementaryTypeName","src":"922:7:15","typeDescriptions":{}}},"id":3468,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"922:10:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"323535","id":3469,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"936:3:15","typeDescriptions":{"typeIdentifier":"t_rational_255_by_1","typeString":"int_const 255"},"value":"255"},"src":"922:17:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3464,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"915:6:15","typeDescriptions":{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"},"typeName":{"id":3463,"name":"int256","nodeType":"ElementaryTypeName","src":"915:6:15","typeDescriptions":{}}},"id":3471,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"915:25:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":3474,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3472,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3440,"src":"944:1:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"id":3473,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3442,"src":"948:1:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"944:5:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":3475,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"943:7:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"915:35:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":3477,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"914:37:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"910:41:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"functionReturnParameters":3446,"id":3479,"nodeType":"Return","src":"903:48:15"}]},"documentation":{"id":3438,"nodeType":"StructuredDocumentation","src":"597:126:15","text":" @dev Returns the average of two signed numbers without overflow.\n The result is rounded towards zero."},"id":3481,"implemented":true,"kind":"function","modifiers":[],"name":"average","nameLocation":"737:7:15","nodeType":"FunctionDefinition","parameters":{"id":3443,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3440,"mutability":"mutable","name":"a","nameLocation":"752:1:15","nodeType":"VariableDeclaration","scope":3481,"src":"745:8:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":3439,"name":"int256","nodeType":"ElementaryTypeName","src":"745:6:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":3442,"mutability":"mutable","name":"b","nameLocation":"762:1:15","nodeType":"VariableDeclaration","scope":3481,"src":"755:8:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":3441,"name":"int256","nodeType":"ElementaryTypeName","src":"755:6:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"744:20:15"},"returnParameters":{"id":3446,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3445,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3481,"src":"788:6:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":3444,"name":"int256","nodeType":"ElementaryTypeName","src":"788:6:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"787:8:15"},"scope":3503,"src":"728:230:15","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3501,"nodeType":"Block","src":"1102:158:15","statements":[{"id":3500,"nodeType":"UncheckedBlock","src":"1112:142:15","statements":[{"expression":{"arguments":[{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":3493,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3491,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3484,"src":"1227:1:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"hexValue":"30","id":3492,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1232:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1227:6:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"id":3496,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"-","prefix":true,"src":"1240:2:15","subExpression":{"id":3495,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3484,"src":"1241:1:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"id":3497,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"1227:15:15","trueExpression":{"id":3494,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3484,"src":"1236:1:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":3490,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1219:7:15","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":3489,"name":"uint256","nodeType":"ElementaryTypeName","src":"1219:7:15","typeDescriptions":{}}},"id":3498,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1219:24:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3488,"id":3499,"nodeType":"Return","src":"1212:31:15"}]}]},"documentation":{"id":3482,"nodeType":"StructuredDocumentation","src":"964:78:15","text":" @dev Returns the absolute unsigned value of a signed value."},"id":3502,"implemented":true,"kind":"function","modifiers":[],"name":"abs","nameLocation":"1056:3:15","nodeType":"FunctionDefinition","parameters":{"id":3485,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3484,"mutability":"mutable","name":"n","nameLocation":"1067:1:15","nodeType":"VariableDeclaration","scope":3502,"src":"1060:8:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":3483,"name":"int256","nodeType":"ElementaryTypeName","src":"1060:6:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1059:10:15"},"returnParameters":{"id":3488,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3487,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3502,"src":"1093:7:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3486,"name":"uint256","nodeType":"ElementaryTypeName","src":"1093:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1092:9:15"},"scope":3503,"src":"1047:213:15","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":3504,"src":"215:1047:15","usedErrors":[]}],"src":"109:1154:15"}},"contracts/ERC20Token.sol":{"id":16,"ast":{"absolutePath":"contracts/ERC20Token.sol","exportedSymbols":{"Context":[1955],"ERC20":[1088],"ERC20Token":[3531],"IERC20":[1166],"IERC20Metadata":[1191]},"id":3532,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":3505,"literals":["solidity","^","0.8",".9"],"nodeType":"PragmaDirective","src":"33:23:16"},{"absolutePath":"@openzeppelin/contracts/token/ERC20/ERC20.sol","file":"@openzeppelin/contracts/token/ERC20/ERC20.sol","id":3506,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3532,"sourceUnit":1089,"src":"58:55:16","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":3507,"name":"ERC20","nodeType":"IdentifierPath","referencedDeclaration":1088,"src":"138:5:16"},"id":3508,"nodeType":"InheritanceSpecifier","src":"138:5:16"}],"canonicalName":"ERC20Token","contractDependencies":[],"contractKind":"contract","fullyImplemented":true,"id":3531,"linearizedBaseContracts":[3531,1088,1191,1166,1955],"name":"ERC20Token","nameLocation":"124:10:16","nodeType":"ContractDefinition","nodes":[{"body":{"id":3529,"nodeType":"Block","src":"224:120:16","statements":[{"expression":{"arguments":[{"expression":{"id":3520,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"300:3:16","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":3521,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"300:10:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"commonType":{"typeIdentifier":"t_rational_1000000000000000000000000000_by_1","typeString":"int_const 1000000000000000000000000000"},"id":3526,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"315f3030305f3030305f303030","id":3522,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"312:13:16","typeDescriptions":{"typeIdentifier":"t_rational_1000000000_by_1","typeString":"int_const 1000000000"},"value":"1_000_000_000"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"commonType":{"typeIdentifier":"t_rational_1000000000000000000_by_1","typeString":"int_const 1000000000000000000"},"id":3525,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":3523,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"328:2:16","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3138","id":3524,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"334:2:16","typeDescriptions":{"typeIdentifier":"t_rational_18_by_1","typeString":"int_const 18"},"value":"18"},"src":"328:8:16","typeDescriptions":{"typeIdentifier":"t_rational_1000000000000000000_by_1","typeString":"int_const 1000000000000000000"}},"src":"312:24:16","typeDescriptions":{"typeIdentifier":"t_rational_1000000000000000000000000000_by_1","typeString":"int_const 1000000000000000000000000000"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_rational_1000000000000000000000000000_by_1","typeString":"int_const 1000000000000000000000000000"}],"id":3519,"name":"_mint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":905,"src":"294:5:16","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":3527,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"294:43:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3528,"nodeType":"ExpressionStatement","src":"294:43:16"}]},"id":3530,"implemented":true,"kind":"constructor","modifiers":[{"arguments":[{"id":3515,"name":"name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3510,"src":"210:4:16","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":3516,"name":"symbol","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3512,"src":"216:6:16","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"id":3517,"kind":"baseConstructorSpecifier","modifierName":{"id":3514,"name":"ERC20","nodeType":"IdentifierPath","referencedDeclaration":1088,"src":"204:5:16"},"nodeType":"ModifierInvocation","src":"204:19:16"}],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":3513,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3510,"mutability":"mutable","name":"name","nameLocation":"176:4:16","nodeType":"VariableDeclaration","scope":3530,"src":"162:18:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3509,"name":"string","nodeType":"ElementaryTypeName","src":"162:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":3512,"mutability":"mutable","name":"symbol","nameLocation":"196:6:16","nodeType":"VariableDeclaration","scope":3530,"src":"182:20:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3511,"name":"string","nodeType":"ElementaryTypeName","src":"182:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"161:42:16"},"returnParameters":{"id":3518,"nodeType":"ParameterList","parameters":[],"src":"224:0:16"},"scope":3531,"src":"150:194:16","stateMutability":"nonpayable","virtual":false,"visibility":"public"}],"scope":3532,"src":"115:231:16","usedErrors":[]}],"src":"33:314:16"}},"contracts/SobaToken.sol":{"id":17,"ast":{"absolutePath":"contracts/SobaToken.sol","exportedSymbols":{"AccessControl":[315],"Context":[1955],"ERC165":[2208],"ERC20":[1088],"IAccessControl":[388],"IERC165":[2220],"IERC20":[1166],"IERC20Metadata":[1191],"Math":[3086],"Ownable":[501],"SignedMath":[3503],"SobaToken":[3641],"Strings":[2184]},"id":3642,"license":"UNLICENSED","nodeType":"SourceUnit","nodes":[{"id":3533,"literals":["solidity","^","0.8",".9"],"nodeType":"PragmaDirective","src":"39:23:17"},{"absolutePath":"@openzeppelin/contracts/token/ERC20/ERC20.sol","file":"@openzeppelin/contracts/token/ERC20/ERC20.sol","id":3534,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3642,"sourceUnit":1089,"src":"64:55:17","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/access/Ownable.sol","file":"@openzeppelin/contracts/access/Ownable.sol","id":3535,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3642,"sourceUnit":502,"src":"120:52:17","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/access/AccessControl.sol","file":"@openzeppelin/contracts/access/AccessControl.sol","id":3536,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3642,"sourceUnit":316,"src":"173:58:17","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":3537,"name":"ERC20","nodeType":"IdentifierPath","referencedDeclaration":1088,"src":"255:5:17"},"id":3538,"nodeType":"InheritanceSpecifier","src":"255:5:17"},{"baseName":{"id":3539,"name":"Ownable","nodeType":"IdentifierPath","referencedDeclaration":501,"src":"262:7:17"},"id":3540,"nodeType":"InheritanceSpecifier","src":"262:7:17"},{"baseName":{"id":3541,"name":"AccessControl","nodeType":"IdentifierPath","referencedDeclaration":315,"src":"271:13:17"},"id":3542,"nodeType":"InheritanceSpecifier","src":"271:13:17"}],"canonicalName":"SobaToken","contractDependencies":[],"contractKind":"contract","fullyImplemented":true,"id":3641,"linearizedBaseContracts":[3641,315,2208,2220,388,501,1088,1191,1166,1955],"name":"SobaToken","nameLocation":"242:9:17","nodeType":"ContractDefinition","nodes":[{"constant":true,"functionSelector":"d5391393","id":3547,"mutability":"constant","name":"MINTER_ROLE","nameLocation":"315:11:17","nodeType":"VariableDeclaration","scope":3641,"src":"291:62:17","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3543,"name":"bytes32","nodeType":"ElementaryTypeName","src":"291:7:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"arguments":[{"hexValue":"4d494e5445525f524f4c45","id":3545,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"339:13:17","typeDescriptions":{"typeIdentifier":"t_stringliteral_9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a6","typeString":"literal_string \"MINTER_ROLE\""},"value":"MINTER_ROLE"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a6","typeString":"literal_string \"MINTER_ROLE\""}],"id":3544,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"329:9:17","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":3546,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"329:24:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"public"},{"body":{"id":3580,"nodeType":"Block","src":"434:157:17","statements":[{"expression":{"arguments":[{"expression":{"id":3559,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"450:3:17","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":3560,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"450:10:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"commonType":{"typeIdentifier":"t_rational_1000000000000000000000000000_by_1","typeString":"int_const 1000000000000000000000000000"},"id":3565,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"315f3030305f3030305f303030","id":3561,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"462:13:17","typeDescriptions":{"typeIdentifier":"t_rational_1000000000_by_1","typeString":"int_const 1000000000"},"value":"1_000_000_000"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"commonType":{"typeIdentifier":"t_rational_1000000000000000000_by_1","typeString":"int_const 1000000000000000000"},"id":3564,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":3562,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"478:2:17","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3138","id":3563,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"484:2:17","typeDescriptions":{"typeIdentifier":"t_rational_18_by_1","typeString":"int_const 18"},"value":"18"},"src":"478:8:17","typeDescriptions":{"typeIdentifier":"t_rational_1000000000000000000_by_1","typeString":"int_const 1000000000000000000"}},"src":"462:24:17","typeDescriptions":{"typeIdentifier":"t_rational_1000000000000000000000000000_by_1","typeString":"int_const 1000000000000000000000000000"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_rational_1000000000000000000000000000_by_1","typeString":"int_const 1000000000000000000000000000"}],"id":3558,"name":"_mint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":905,"src":"444:5:17","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":3566,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"444:43:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3567,"nodeType":"ExpressionStatement","src":"444:43:17"},{"expression":{"arguments":[{"id":3569,"name":"DEFAULT_ADMIN_ROLE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":27,"src":"508:18:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"expression":{"id":3570,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"528:3:17","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":3571,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"528:10:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":3568,"name":"_setupRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":223,"src":"497:10:17","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$__$","typeString":"function (bytes32,address)"}},"id":3572,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"497:42:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3573,"nodeType":"ExpressionStatement","src":"497:42:17"},{"expression":{"arguments":[{"id":3575,"name":"MINTER_ROLE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3547,"src":"560:11:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"expression":{"id":3576,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"573:3:17","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":3577,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"573:10:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":3574,"name":"_setupRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":223,"src":"549:10:17","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$__$","typeString":"function (bytes32,address)"}},"id":3578,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"549:35:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3579,"nodeType":"ExpressionStatement","src":"549:35:17"}]},"id":3581,"implemented":true,"kind":"constructor","modifiers":[{"arguments":[{"id":3554,"name":"name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3549,"src":"420:4:17","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":3555,"name":"symbol","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3551,"src":"426:6:17","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"id":3556,"kind":"baseConstructorSpecifier","modifierName":{"id":3553,"name":"ERC20","nodeType":"IdentifierPath","referencedDeclaration":1088,"src":"414:5:17"},"nodeType":"ModifierInvocation","src":"414:19:17"}],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":3552,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3549,"mutability":"mutable","name":"name","nameLocation":"386:4:17","nodeType":"VariableDeclaration","scope":3581,"src":"372:18:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3548,"name":"string","nodeType":"ElementaryTypeName","src":"372:6:17","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":3551,"mutability":"mutable","name":"symbol","nameLocation":"406:6:17","nodeType":"VariableDeclaration","scope":3581,"src":"392:20:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3550,"name":"string","nodeType":"ElementaryTypeName","src":"392:6:17","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"371:42:17"},"returnParameters":{"id":3557,"nodeType":"ParameterList","parameters":[],"src":"434:0:17"},"scope":3641,"src":"360:231:17","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":3602,"nodeType":"Block","src":"648:113:17","statements":[{"expression":{"arguments":[{"arguments":[{"id":3590,"name":"MINTER_ROLE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3547,"src":"674:11:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"expression":{"id":3591,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"687:3:17","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":3592,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"687:10:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":3589,"name":"hasRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":79,"src":"666:7:17","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$","typeString":"function (bytes32,address) view returns (bool)"}},"id":3593,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"666:32:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"43616c6c6572206973206e6f742061206d696e746572","id":3594,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"700:24:17","typeDescriptions":{"typeIdentifier":"t_stringliteral_71abfcf6e817aaed3ce6663958bac2a3a82999ed0036c98a95b29f350f04cedf","typeString":"literal_string \"Caller is not a minter\""},"value":"Caller is not a minter"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_71abfcf6e817aaed3ce6663958bac2a3a82999ed0036c98a95b29f350f04cedf","typeString":"literal_string \"Caller is not a minter\""}],"id":3588,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"658:7:17","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":3595,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"658:67:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3596,"nodeType":"ExpressionStatement","src":"658:67:17"},{"expression":{"arguments":[{"id":3598,"name":"_to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3583,"src":"741:3:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3599,"name":"_amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3585,"src":"746:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3597,"name":"_mint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":905,"src":"735:5:17","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":3600,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"735:19:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3601,"nodeType":"ExpressionStatement","src":"735:19:17"}]},"functionSelector":"40c10f19","id":3603,"implemented":true,"kind":"function","modifiers":[],"name":"mint","nameLocation":"606:4:17","nodeType":"FunctionDefinition","parameters":{"id":3586,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3583,"mutability":"mutable","name":"_to","nameLocation":"619:3:17","nodeType":"VariableDeclaration","scope":3603,"src":"611:11:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3582,"name":"address","nodeType":"ElementaryTypeName","src":"611:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3585,"mutability":"mutable","name":"_amount","nameLocation":"632:7:17","nodeType":"VariableDeclaration","scope":3603,"src":"624:15:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3584,"name":"uint256","nodeType":"ElementaryTypeName","src":"624:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"610:30:17"},"returnParameters":{"id":3587,"nodeType":"ParameterList","parameters":[],"src":"648:0:17"},"scope":3641,"src":"597:164:17","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"baseFunctions":[576],"body":{"id":3611,"nodeType":"Block","src":"832:26:17","statements":[{"expression":{"hexValue":"3138","id":3609,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"849:2:17","typeDescriptions":{"typeIdentifier":"t_rational_18_by_1","typeString":"int_const 18"},"value":"18"},"functionReturnParameters":3608,"id":3610,"nodeType":"Return","src":"842:9:17"}]},"functionSelector":"313ce567","id":3612,"implemented":true,"kind":"function","modifiers":[],"name":"decimals","nameLocation":"776:8:17","nodeType":"FunctionDefinition","overrides":{"id":3605,"nodeType":"OverrideSpecifier","overrides":[],"src":"807:8:17"},"parameters":{"id":3604,"nodeType":"ParameterList","parameters":[],"src":"784:2:17"},"returnParameters":{"id":3608,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3607,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3612,"src":"825:5:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":3606,"name":"uint8","nodeType":"ElementaryTypeName","src":"825:5:17","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"824:7:17"},"scope":3641,"src":"767:91:17","stateMutability":"view","virtual":true,"visibility":"public"},{"body":{"id":3639,"nodeType":"Block","src":"928:173:17","statements":[{"expression":{"arguments":[{"arguments":[{"id":3621,"name":"MINTER_ROLE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3547,"src":"954:11:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"expression":{"id":3622,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"967:3:17","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":3623,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"967:10:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":3620,"name":"hasRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":79,"src":"946:7:17","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$","typeString":"function (bytes32,address) view returns (bool)"}},"id":3624,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"946:32:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"43616c6c6572206973206e6f742061206d696e746572","id":3625,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"980:24:17","typeDescriptions":{"typeIdentifier":"t_stringliteral_71abfcf6e817aaed3ce6663958bac2a3a82999ed0036c98a95b29f350f04cedf","typeString":"literal_string \"Caller is not a minter\""},"value":"Caller is not a minter"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_71abfcf6e817aaed3ce6663958bac2a3a82999ed0036c98a95b29f350f04cedf","typeString":"literal_string \"Caller is not a minter\""}],"id":3619,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"938:7:17","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":3626,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"938:67:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3627,"nodeType":"ExpressionStatement","src":"938:67:17"},{"expression":{"arguments":[{"id":3629,"name":"MINTER_ROLE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3547,"src":"1026:11:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"expression":{"id":3630,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"1039:3:17","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":3631,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"1039:10:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":3628,"name":"revokeRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":186,"src":"1015:10:17","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$__$","typeString":"function (bytes32,address)"}},"id":3632,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1015:35:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3633,"nodeType":"ExpressionStatement","src":"1015:35:17"},{"expression":{"arguments":[{"id":3635,"name":"MINTER_ROLE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3547,"src":"1071:11:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":3636,"name":"newMinter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3614,"src":"1084:9:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":3634,"name":"_grantRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":283,"src":"1060:10:17","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$__$","typeString":"function (bytes32,address)"}},"id":3637,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1060:34:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3638,"nodeType":"ExpressionStatement","src":"1060:34:17"}]},"functionSelector":"b8bf60f9","id":3640,"implemented":true,"kind":"function","modifiers":[{"id":3617,"kind":"modifierInvocation","modifierName":{"id":3616,"name":"onlyOwner","nodeType":"IdentifierPath","referencedDeclaration":420,"src":"918:9:17"},"nodeType":"ModifierInvocation","src":"918:9:17"}],"name":"transferMinterRole","nameLocation":"873:18:17","nodeType":"FunctionDefinition","parameters":{"id":3615,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3614,"mutability":"mutable","name":"newMinter","nameLocation":"900:9:17","nodeType":"VariableDeclaration","scope":3640,"src":"892:17:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3613,"name":"address","nodeType":"ElementaryTypeName","src":"892:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"891:19:17"},"returnParameters":{"id":3618,"nodeType":"ParameterList","parameters":[],"src":"928:0:17"},"scope":3641,"src":"864:237:17","stateMutability":"nonpayable","virtual":false,"visibility":"public"}],"scope":3642,"src":"233:870:17","usedErrors":[]}],"src":"39:1065:17"}},"contracts/YieldFarm.sol":{"id":18,"ast":{"absolutePath":"contracts/YieldFarm.sol","exportedSymbols":{"AccessControl":[315],"Address":[1933],"Context":[1955],"ERC165":[2208],"ERC20":[1088],"IAccessControl":[388],"IERC165":[2220],"IERC20":[1166],"IERC20Metadata":[1191],"IERC20Permit":[1227],"Math":[3086],"Ownable":[501],"SafeERC20":[1603],"SafeMath":[3398],"SignedMath":[3503],"SobaToken":[3641],"Strings":[2184],"YieldFarm":[4836]},"id":4837,"license":"UNLICENSED","nodeType":"SourceUnit","nodes":[{"id":3643,"literals":["solidity","^","0.8",".9"],"nodeType":"PragmaDirective","src":"39:23:18"},{"absolutePath":"@openzeppelin/contracts/access/Ownable.sol","file":"@openzeppelin/contracts/access/Ownable.sol","id":3644,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":4837,"sourceUnit":502,"src":"64:52:18","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/math/SafeMath.sol","file":"@openzeppelin/contracts/utils/math/SafeMath.sol","id":3645,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":4837,"sourceUnit":3399,"src":"117:57:18","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/token/ERC20/ERC20.sol","file":"@openzeppelin/contracts/token/ERC20/ERC20.sol","id":3646,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":4837,"sourceUnit":1089,"src":"175:55:18","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/token/ERC20/IERC20.sol","file":"@openzeppelin/contracts/token/ERC20/IERC20.sol","id":3647,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":4837,"sourceUnit":1167,"src":"231:56:18","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol","file":"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol","id":3648,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":4837,"sourceUnit":1604,"src":"288:65:18","symbolAliases":[],"unitAlias":""},{"absolutePath":"contracts/SobaToken.sol","file":"./SobaToken.sol","id":3649,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":4837,"sourceUnit":3642,"src":"355:25:18","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":3650,"name":"Ownable","nodeType":"IdentifierPath","referencedDeclaration":501,"src":"404:7:18"},"id":3651,"nodeType":"InheritanceSpecifier","src":"404:7:18"}],"canonicalName":"YieldFarm","contractDependencies":[],"contractKind":"contract","fullyImplemented":true,"id":4836,"linearizedBaseContracts":[4836,501,1955],"name":"YieldFarm","nameLocation":"391:9:18","nodeType":"ContractDefinition","nodes":[{"id":3654,"libraryName":{"id":3652,"name":"SafeMath","nodeType":"IdentifierPath","referencedDeclaration":3398,"src":"424:8:18"},"nodeType":"UsingForDirective","src":"418:27:18","typeName":{"id":3653,"name":"uint256","nodeType":"ElementaryTypeName","src":"437:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},{"id":3658,"libraryName":{"id":3655,"name":"SafeERC20","nodeType":"IdentifierPath","referencedDeclaration":1603,"src":"456:9:18"},"nodeType":"UsingForDirective","src":"450:27:18","typeName":{"id":3657,"nodeType":"UserDefinedTypeName","pathNode":{"id":3656,"name":"IERC20","nodeType":"IdentifierPath","referencedDeclaration":1166,"src":"470:6:18"},"referencedDeclaration":1166,"src":"470:6:18","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1166","typeString":"contract IERC20"}}},{"canonicalName":"YieldFarm.UserInfo","id":3663,"members":[{"constant":false,"id":3660,"mutability":"mutable","name":"amount","nameLocation":"541:6:18","nodeType":"VariableDeclaration","scope":3663,"src":"533:14:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3659,"name":"uint256","nodeType":"ElementaryTypeName","src":"533:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3662,"mutability":"mutable","name":"rewardDebt","nameLocation":"592:10:18","nodeType":"VariableDeclaration","scope":3663,"src":"584:18:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3661,"name":"uint256","nodeType":"ElementaryTypeName","src":"584:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"name":"UserInfo","nameLocation":"514:8:18","nodeType":"StructDefinition","scope":4836,"src":"507:1067:18","visibility":"public"},{"canonicalName":"YieldFarm.PoolInfo","id":3675,"members":[{"constant":false,"id":3666,"mutability":"mutable","name":"lpToken","nameLocation":"1613:7:18","nodeType":"VariableDeclaration","scope":3675,"src":"1606:14:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1166","typeString":"contract IERC20"},"typeName":{"id":3665,"nodeType":"UserDefinedTypeName","pathNode":{"id":3664,"name":"IERC20","nodeType":"IdentifierPath","referencedDeclaration":1166,"src":"1606:6:18"},"referencedDeclaration":1166,"src":"1606:6:18","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1166","typeString":"contract IERC20"}},"visibility":"internal"},{"constant":false,"id":3668,"mutability":"mutable","name":"allocPoint","nameLocation":"1670:10:18","nodeType":"VariableDeclaration","scope":3675,"src":"1662:18:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3667,"name":"uint256","nodeType":"ElementaryTypeName","src":"1662:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3670,"mutability":"mutable","name":"lastRewardBlock","nameLocation":"1738:15:18","nodeType":"VariableDeclaration","scope":3675,"src":"1730:23:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3669,"name":"uint256","nodeType":"ElementaryTypeName","src":"1730:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3672,"mutability":"mutable","name":"accSobaPerShare","nameLocation":"1803:15:18","nodeType":"VariableDeclaration","scope":3675,"src":"1795:23:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3671,"name":"uint256","nodeType":"ElementaryTypeName","src":"1795:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3674,"mutability":"mutable","name":"totalStaked","nameLocation":"1836:11:18","nodeType":"VariableDeclaration","scope":3675,"src":"1828:19:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3673,"name":"uint256","nodeType":"ElementaryTypeName","src":"1828:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"name":"PoolInfo","nameLocation":"1587:8:18","nodeType":"StructDefinition","scope":4836,"src":"1580:274:18","visibility":"public"},{"constant":false,"functionSelector":"d93be1c7","id":3678,"mutability":"mutable","name":"sobaja","nameLocation":"1897:6:18","nodeType":"VariableDeclaration","scope":4836,"src":"1880:23:18","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_SobaToken_$3641","typeString":"contract SobaToken"},"typeName":{"id":3677,"nodeType":"UserDefinedTypeName","pathNode":{"id":3676,"name":"SobaToken","nodeType":"IdentifierPath","referencedDeclaration":3641,"src":"1880:9:18"},"referencedDeclaration":3641,"src":"1880:9:18","typeDescriptions":{"typeIdentifier":"t_contract$_SobaToken_$3641","typeString":"contract SobaToken"}},"visibility":"public"},{"constant":false,"functionSelector":"3ad10ef6","id":3680,"mutability":"mutable","name":"devAddress","nameLocation":"1925:10:18","nodeType":"VariableDeclaration","scope":4836,"src":"1910:25:18","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3679,"name":"address","nodeType":"ElementaryTypeName","src":"1910:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"public"},{"constant":false,"functionSelector":"ac9b2915","id":3682,"mutability":"mutable","name":"sobaPerBlock","nameLocation":"2005:12:18","nodeType":"VariableDeclaration","scope":4836,"src":"1990:27:18","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3681,"name":"uint256","nodeType":"ElementaryTypeName","src":"1990:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"public"},{"constant":false,"functionSelector":"8aa28550","id":3685,"mutability":"mutable","name":"BONUS_MULTIPLIER","nameLocation":"2072:16:18","nodeType":"VariableDeclaration","scope":4836,"src":"2057:35:18","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3683,"name":"uint256","nodeType":"ElementaryTypeName","src":"2057:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"31","id":3684,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2091:1:18","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"visibility":"public"},{"constant":false,"functionSelector":"1526fe27","id":3689,"mutability":"mutable","name":"poolInfo","nameLocation":"2187:8:18","nodeType":"VariableDeclaration","scope":4836,"src":"2169:26:18","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_PoolInfo_$3675_storage_$dyn_storage","typeString":"struct YieldFarm.PoolInfo[]"},"typeName":{"baseType":{"id":3687,"nodeType":"UserDefinedTypeName","pathNode":{"id":3686,"name":"PoolInfo","nodeType":"IdentifierPath","referencedDeclaration":3675,"src":"2169:8:18"},"referencedDeclaration":3675,"src":"2169:8:18","typeDescriptions":{"typeIdentifier":"t_struct$_PoolInfo_$3675_storage_ptr","typeString":"struct YieldFarm.PoolInfo"}},"id":3688,"nodeType":"ArrayTypeName","src":"2169:10:18","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_PoolInfo_$3675_storage_$dyn_storage_ptr","typeString":"struct YieldFarm.PoolInfo[]"}},"visibility":"public"},{"constant":false,"functionSelector":"93f1a40b","id":3696,"mutability":"mutable","name":"userInfo","nameLocation":"2305:8:18","nodeType":"VariableDeclaration","scope":4836,"src":"2249:64:18","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_struct$_UserInfo_$3663_storage_$_$","typeString":"mapping(uint256 => mapping(address => struct YieldFarm.UserInfo))"},"typeName":{"id":3695,"keyType":{"id":3690,"name":"uint256","nodeType":"ElementaryTypeName","src":"2257:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Mapping","src":"2249:48:18","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_struct$_UserInfo_$3663_storage_$_$","typeString":"mapping(uint256 => mapping(address => struct YieldFarm.UserInfo))"},"valueType":{"id":3694,"keyType":{"id":3691,"name":"address","nodeType":"ElementaryTypeName","src":"2276:7:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"2268:28:18","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_UserInfo_$3663_storage_$","typeString":"mapping(address => struct YieldFarm.UserInfo)"},"valueType":{"id":3693,"nodeType":"UserDefinedTypeName","pathNode":{"id":3692,"name":"UserInfo","nodeType":"IdentifierPath","referencedDeclaration":3663,"src":"2287:8:18"},"referencedDeclaration":3663,"src":"2287:8:18","typeDescriptions":{"typeIdentifier":"t_struct$_UserInfo_$3663_storage_ptr","typeString":"struct YieldFarm.UserInfo"}}}},"visibility":"public"},{"constant":false,"functionSelector":"17caf6f1","id":3699,"mutability":"mutable","name":"totalAllocPoint","nameLocation":"2438:15:18","nodeType":"VariableDeclaration","scope":4836,"src":"2423:34:18","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3697,"name":"uint256","nodeType":"ElementaryTypeName","src":"2423:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30","id":3698,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2456:1:18","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"visibility":"public"},{"constant":false,"functionSelector":"48cd4cb1","id":3701,"mutability":"mutable","name":"startBlock","nameLocation":"2658:10:18","nodeType":"VariableDeclaration","scope":4836,"src":"2643:25:18","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3700,"name":"uint256","nodeType":"ElementaryTypeName","src":"2643:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"public"},{"anonymous":false,"id":3709,"name":"Deposit","nameLocation":"2699:7:18","nodeType":"EventDefinition","parameters":{"id":3708,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3703,"indexed":true,"mutability":"mutable","name":"user","nameLocation":"2732:4:18","nodeType":"VariableDeclaration","scope":3709,"src":"2716:20:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3702,"name":"address","nodeType":"ElementaryTypeName","src":"2716:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3705,"indexed":true,"mutability":"mutable","name":"poolId","nameLocation":"2762:6:18","nodeType":"VariableDeclaration","scope":3709,"src":"2746:22:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3704,"name":"uint256","nodeType":"ElementaryTypeName","src":"2746:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3707,"indexed":true,"mutability":"mutable","name":"amount","nameLocation":"2794:6:18","nodeType":"VariableDeclaration","scope":3709,"src":"2778:22:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3706,"name":"uint256","nodeType":"ElementaryTypeName","src":"2778:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2706:100:18"},"src":"2693:114:18"},{"anonymous":false,"id":3717,"name":"Withdraw","nameLocation":"2819:8:18","nodeType":"EventDefinition","parameters":{"id":3716,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3711,"indexed":true,"mutability":"mutable","name":"user","nameLocation":"2853:4:18","nodeType":"VariableDeclaration","scope":3717,"src":"2837:20:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3710,"name":"address","nodeType":"ElementaryTypeName","src":"2837:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3713,"indexed":true,"mutability":"mutable","name":"poolId","nameLocation":"2883:6:18","nodeType":"VariableDeclaration","scope":3717,"src":"2867:22:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3712,"name":"uint256","nodeType":"ElementaryTypeName","src":"2867:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3715,"indexed":false,"mutability":"mutable","name":"amount","nameLocation":"2907:6:18","nodeType":"VariableDeclaration","scope":3717,"src":"2899:14:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3714,"name":"uint256","nodeType":"ElementaryTypeName","src":"2899:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2827:92:18"},"src":"2813:107:18"},{"anonymous":false,"id":3725,"name":"EmergencyWithdraw","nameLocation":"2932:17:18","nodeType":"EventDefinition","parameters":{"id":3724,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3719,"indexed":true,"mutability":"mutable","name":"user","nameLocation":"2975:4:18","nodeType":"VariableDeclaration","scope":3725,"src":"2959:20:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3718,"name":"address","nodeType":"ElementaryTypeName","src":"2959:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3721,"indexed":true,"mutability":"mutable","name":"poolId","nameLocation":"3005:6:18","nodeType":"VariableDeclaration","scope":3725,"src":"2989:22:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3720,"name":"uint256","nodeType":"ElementaryTypeName","src":"2989:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3723,"indexed":false,"mutability":"mutable","name":"amount","nameLocation":"3029:6:18","nodeType":"VariableDeclaration","scope":3725,"src":"3021:14:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3722,"name":"uint256","nodeType":"ElementaryTypeName","src":"3021:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2949:92:18"},"src":"2926:116:18"},{"body":{"id":3769,"nodeType":"Block","src":"3179:475:18","statements":[{"expression":{"id":3739,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3737,"name":"sobaja","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3678,"src":"3189:6:18","typeDescriptions":{"typeIdentifier":"t_contract$_SobaToken_$3641","typeString":"contract SobaToken"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":3738,"name":"_sobaja","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3728,"src":"3198:7:18","typeDescriptions":{"typeIdentifier":"t_contract$_SobaToken_$3641","typeString":"contract SobaToken"}},"src":"3189:16:18","typeDescriptions":{"typeIdentifier":"t_contract$_SobaToken_$3641","typeString":"contract SobaToken"}},"id":3740,"nodeType":"ExpressionStatement","src":"3189:16:18"},{"expression":{"id":3743,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3741,"name":"devAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3680,"src":"3215:10:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":3742,"name":"_devaddr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3730,"src":"3228:8:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"3215:21:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":3744,"nodeType":"ExpressionStatement","src":"3215:21:18"},{"expression":{"id":3747,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3745,"name":"sobaPerBlock","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3682,"src":"3246:12:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":3746,"name":"_sobaPerBlock","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3732,"src":"3261:13:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3246:28:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3748,"nodeType":"ExpressionStatement","src":"3246:28:18"},{"expression":{"id":3751,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3749,"name":"startBlock","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3701,"src":"3284:10:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":3750,"name":"_startBlock","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3734,"src":"3297:11:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3284:24:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3752,"nodeType":"ExpressionStatement","src":"3284:24:18"},{"expression":{"arguments":[{"arguments":[{"id":3757,"name":"_sobaja","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3728,"src":"3435:7:18","typeDescriptions":{"typeIdentifier":"t_contract$_SobaToken_$3641","typeString":"contract SobaToken"}},{"hexValue":"31303030","id":3758,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3472:4:18","typeDescriptions":{"typeIdentifier":"t_rational_1000_by_1","typeString":"int_const 1000"},"value":"1000"},{"id":3759,"name":"startBlock","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3701,"src":"3511:10:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"30","id":3760,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3556:1:18","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"hexValue":"30","id":3761,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3588:1:18","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_SobaToken_$3641","typeString":"contract SobaToken"},{"typeIdentifier":"t_rational_1000_by_1","typeString":"int_const 1000"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":3756,"name":"PoolInfo","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3675,"src":"3399:8:18","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_PoolInfo_$3675_storage_ptr_$","typeString":"type(struct YieldFarm.PoolInfo storage pointer)"}},"id":3762,"isConstant":false,"isLValue":false,"isPure":false,"kind":"structConstructorCall","lValueRequested":false,"names":["lpToken","allocPoint","lastRewardBlock","accSobaPerShare","totalStaked"],"nodeType":"FunctionCall","src":"3399:205:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_PoolInfo_$3675_memory_ptr","typeString":"struct YieldFarm.PoolInfo memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_PoolInfo_$3675_memory_ptr","typeString":"struct YieldFarm.PoolInfo memory"}],"expression":{"id":3753,"name":"poolInfo","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3689,"src":"3372:8:18","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_PoolInfo_$3675_storage_$dyn_storage","typeString":"struct YieldFarm.PoolInfo storage ref[] storage ref"}},"id":3755,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"push","nodeType":"MemberAccess","src":"3372:13:18","typeDescriptions":{"typeIdentifier":"t_function_arraypush_nonpayable$_t_array$_t_struct$_PoolInfo_$3675_storage_$dyn_storage_ptr_$_t_struct$_PoolInfo_$3675_storage_$returns$__$bound_to$_t_array$_t_struct$_PoolInfo_$3675_storage_$dyn_storage_ptr_$","typeString":"function (struct YieldFarm.PoolInfo storage ref[] storage pointer,struct YieldFarm.PoolInfo storage ref)"}},"id":3763,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3372:242:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3764,"nodeType":"ExpressionStatement","src":"3372:242:18"},{"expression":{"id":3767,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3765,"name":"totalAllocPoint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3699,"src":"3625:15:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"31303030","id":3766,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3643:4:18","typeDescriptions":{"typeIdentifier":"t_rational_1000_by_1","typeString":"int_const 1000"},"value":"1000"},"src":"3625:22:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3768,"nodeType":"ExpressionStatement","src":"3625:22:18"}]},"id":3770,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":3735,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3728,"mutability":"mutable","name":"_sobaja","nameLocation":"3079:7:18","nodeType":"VariableDeclaration","scope":3770,"src":"3069:17:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_SobaToken_$3641","typeString":"contract SobaToken"},"typeName":{"id":3727,"nodeType":"UserDefinedTypeName","pathNode":{"id":3726,"name":"SobaToken","nodeType":"IdentifierPath","referencedDeclaration":3641,"src":"3069:9:18"},"referencedDeclaration":3641,"src":"3069:9:18","typeDescriptions":{"typeIdentifier":"t_contract$_SobaToken_$3641","typeString":"contract SobaToken"}},"visibility":"internal"},{"constant":false,"id":3730,"mutability":"mutable","name":"_devaddr","nameLocation":"3104:8:18","nodeType":"VariableDeclaration","scope":3770,"src":"3096:16:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3729,"name":"address","nodeType":"ElementaryTypeName","src":"3096:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3732,"mutability":"mutable","name":"_sobaPerBlock","nameLocation":"3130:13:18","nodeType":"VariableDeclaration","scope":3770,"src":"3122:21:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3731,"name":"uint256","nodeType":"ElementaryTypeName","src":"3122:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3734,"mutability":"mutable","name":"_startBlock","nameLocation":"3161:11:18","nodeType":"VariableDeclaration","scope":3770,"src":"3153:19:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3733,"name":"uint256","nodeType":"ElementaryTypeName","src":"3153:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3059:119:18"},"returnParameters":{"id":3736,"nodeType":"ParameterList","parameters":[],"src":"3179:0:18"},"scope":4836,"src":"3048:606:18","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":3781,"nodeType":"Block","src":"3805:52:18","statements":[{"expression":{"id":3779,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3777,"name":"BONUS_MULTIPLIER","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3685,"src":"3815:16:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":3778,"name":"multiplierNumber","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3772,"src":"3834:16:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3815:35:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3780,"nodeType":"ExpressionStatement","src":"3815:35:18"}]},"functionSelector":"5ffe6146","id":3782,"implemented":true,"kind":"function","modifiers":[{"id":3775,"kind":"modifierInvocation","modifierName":{"id":3774,"name":"onlyOwner","nodeType":"IdentifierPath","referencedDeclaration":420,"src":"3795:9:18"},"nodeType":"ModifierInvocation","src":"3795:9:18"}],"name":"updateMultiplier","nameLocation":"3745:16:18","nodeType":"FunctionDefinition","parameters":{"id":3773,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3772,"mutability":"mutable","name":"multiplierNumber","nameLocation":"3770:16:18","nodeType":"VariableDeclaration","scope":3782,"src":"3762:24:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3771,"name":"uint256","nodeType":"ElementaryTypeName","src":"3762:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3761:26:18"},"returnParameters":{"id":3776,"nodeType":"ParameterList","parameters":[],"src":"3805:0:18"},"scope":4836,"src":"3736:121:18","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":3790,"nodeType":"Block","src":"3917:39:18","statements":[{"expression":{"expression":{"id":3787,"name":"poolInfo","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3689,"src":"3934:8:18","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_PoolInfo_$3675_storage_$dyn_storage","typeString":"struct YieldFarm.PoolInfo storage ref[] storage ref"}},"id":3788,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"3934:15:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3786,"id":3789,"nodeType":"Return","src":"3927:22:18"}]},"functionSelector":"081e3eda","id":3791,"implemented":true,"kind":"function","modifiers":[],"name":"poolLength","nameLocation":"3872:10:18","nodeType":"FunctionDefinition","parameters":{"id":3783,"nodeType":"ParameterList","parameters":[],"src":"3882:2:18"},"returnParameters":{"id":3786,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3785,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3791,"src":"3908:7:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3784,"name":"uint256","nodeType":"ElementaryTypeName","src":"3908:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3907:9:18"},"scope":4836,"src":"3863:93:18","stateMutability":"view","virtual":false,"visibility":"external"},{"body":{"id":3799,"nodeType":"Block","src":"4008:36:18","statements":[{"expression":{"expression":{"id":3796,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"4025:5:18","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":3797,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"number","nodeType":"MemberAccess","src":"4025:12:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3795,"id":3798,"nodeType":"Return","src":"4018:19:18"}]},"functionSelector":"575cb0f6","id":3800,"implemented":true,"kind":"function","modifiers":[],"name":"block","nameLocation":"3971:5:18","nodeType":"FunctionDefinition","parameters":{"id":3792,"nodeType":"ParameterList","parameters":[],"src":"3976:2:18"},"returnParameters":{"id":3795,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3794,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3800,"src":"4002:4:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3793,"name":"uint","nodeType":"ElementaryTypeName","src":"4002:4:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4001:6:18"},"scope":4836,"src":"3962:82:18","stateMutability":"view","virtual":false,"visibility":"external"},{"body":{"id":3851,"nodeType":"Block","src":"4208:733:18","statements":[{"condition":{"id":3812,"name":"_withUpdate","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3807,"src":"4309:11:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3817,"nodeType":"IfStatement","src":"4305:59:18","trueBody":{"id":3816,"nodeType":"Block","src":"4322:42:18","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":3813,"name":"massUpdatePools","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4114,"src":"4336:15:18","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":3814,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4336:17:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3815,"nodeType":"ExpressionStatement","src":"4336:17:18"}]}},{"assignments":[3819],"declarations":[{"constant":false,"id":3819,"mutability":"mutable","name":"lastRewardBlock","nameLocation":"4484:15:18","nodeType":"VariableDeclaration","scope":3851,"src":"4476:23:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3818,"name":"uint256","nodeType":"ElementaryTypeName","src":"4476:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3828,"initialValue":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3823,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":3820,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"4502:5:18","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":3821,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"number","nodeType":"MemberAccess","src":"4502:12:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":3822,"name":"startBlock","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3701,"src":"4517:10:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4502:25:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"id":3826,"name":"startBlock","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3701,"src":"4569:10:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3827,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"4502:77:18","trueExpression":{"expression":{"id":3824,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"4542:5:18","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":3825,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"number","nodeType":"MemberAccess","src":"4542:12:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"4476:103:18"},{"expression":{"id":3834,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3829,"name":"totalAllocPoint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3699,"src":"4590:15:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":3832,"name":"_allocPoint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3802,"src":"4628:11:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":3830,"name":"totalAllocPoint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3699,"src":"4608:15:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3831,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"add","nodeType":"MemberAccess","referencedDeclaration":3262,"src":"4608:19:18","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":3833,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4608:32:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4590:50:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3835,"nodeType":"ExpressionStatement","src":"4590:50:18"},{"expression":{"arguments":[{"arguments":[{"id":3840,"name":"_lpToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3805,"src":"4713:8:18","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1166","typeString":"contract IERC20"}},{"id":3841,"name":"_allocPoint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3802,"src":"4751:11:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3842,"name":"lastRewardBlock","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3819,"src":"4797:15:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"30","id":3843,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4847:1:18","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"hexValue":"30","id":3844,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4879:1:18","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$1166","typeString":"contract IERC20"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":3839,"name":"PoolInfo","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3675,"src":"4677:8:18","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_PoolInfo_$3675_storage_ptr_$","typeString":"type(struct YieldFarm.PoolInfo storage pointer)"}},"id":3845,"isConstant":false,"isLValue":false,"isPure":false,"kind":"structConstructorCall","lValueRequested":false,"names":["lpToken","allocPoint","lastRewardBlock","accSobaPerShare","totalStaked"],"nodeType":"FunctionCall","src":"4677:218:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_PoolInfo_$3675_memory_ptr","typeString":"struct YieldFarm.PoolInfo memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_PoolInfo_$3675_memory_ptr","typeString":"struct YieldFarm.PoolInfo memory"}],"expression":{"id":3836,"name":"poolInfo","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3689,"src":"4650:8:18","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_PoolInfo_$3675_storage_$dyn_storage","typeString":"struct YieldFarm.PoolInfo storage ref[] storage ref"}},"id":3838,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"push","nodeType":"MemberAccess","src":"4650:13:18","typeDescriptions":{"typeIdentifier":"t_function_arraypush_nonpayable$_t_array$_t_struct$_PoolInfo_$3675_storage_$dyn_storage_ptr_$_t_struct$_PoolInfo_$3675_storage_$returns$__$bound_to$_t_array$_t_struct$_PoolInfo_$3675_storage_$dyn_storage_ptr_$","typeString":"function (struct YieldFarm.PoolInfo storage ref[] storage pointer,struct YieldFarm.PoolInfo storage ref)"}},"id":3846,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4650:255:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3847,"nodeType":"ExpressionStatement","src":"4650:255:18"},{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":3848,"name":"updateStakingPool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3969,"src":"4915:17:18","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":3849,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4915:19:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3850,"nodeType":"ExpressionStatement","src":"4915:19:18"}]},"functionSelector":"1eaaa045","id":3852,"implemented":true,"kind":"function","modifiers":[{"id":3810,"kind":"modifierInvocation","modifierName":{"id":3809,"name":"onlyOwner","nodeType":"IdentifierPath","referencedDeclaration":420,"src":"4198:9:18"},"nodeType":"ModifierInvocation","src":"4198:9:18"}],"name":"add","nameLocation":"4101:3:18","nodeType":"FunctionDefinition","parameters":{"id":3808,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3802,"mutability":"mutable","name":"_allocPoint","nameLocation":"4122:11:18","nodeType":"VariableDeclaration","scope":3852,"src":"4114:19:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3801,"name":"uint256","nodeType":"ElementaryTypeName","src":"4114:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3805,"mutability":"mutable","name":"_lpToken","nameLocation":"4150:8:18","nodeType":"VariableDeclaration","scope":3852,"src":"4143:15:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1166","typeString":"contract IERC20"},"typeName":{"id":3804,"nodeType":"UserDefinedTypeName","pathNode":{"id":3803,"name":"IERC20","nodeType":"IdentifierPath","referencedDeclaration":1166,"src":"4143:6:18"},"referencedDeclaration":1166,"src":"4143:6:18","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1166","typeString":"contract IERC20"}},"visibility":"internal"},{"constant":false,"id":3807,"mutability":"mutable","name":"_withUpdate","nameLocation":"4173:11:18","nodeType":"VariableDeclaration","scope":3852,"src":"4168:16:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3806,"name":"bool","nodeType":"ElementaryTypeName","src":"4168:4:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"4104:86:18"},"returnParameters":{"id":3811,"nodeType":"ParameterList","parameters":[],"src":"4208:0:18"},"scope":4836,"src":"4092:849:18","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":3901,"nodeType":"Block","src":"5137:392:18","statements":[{"condition":{"id":3863,"name":"_withUpdate","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3858,"src":"5151:11:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3868,"nodeType":"IfStatement","src":"5147:59:18","trueBody":{"id":3867,"nodeType":"Block","src":"5164:42:18","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":3864,"name":"massUpdatePools","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4114,"src":"5178:15:18","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":3865,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5178:17:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3866,"nodeType":"ExpressionStatement","src":"5178:17:18"}]}},{"assignments":[3870],"declarations":[{"constant":false,"id":3870,"mutability":"mutable","name":"prevAllocPoint","nameLocation":"5223:14:18","nodeType":"VariableDeclaration","scope":3901,"src":"5215:22:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3869,"name":"uint256","nodeType":"ElementaryTypeName","src":"5215:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3875,"initialValue":{"expression":{"baseExpression":{"id":3871,"name":"poolInfo","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3689,"src":"5240:8:18","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_PoolInfo_$3675_storage_$dyn_storage","typeString":"struct YieldFarm.PoolInfo storage ref[] storage ref"}},"id":3873,"indexExpression":{"id":3872,"name":"_poolId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3854,"src":"5249:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5240:17:18","typeDescriptions":{"typeIdentifier":"t_struct$_PoolInfo_$3675_storage","typeString":"struct YieldFarm.PoolInfo storage ref"}},"id":3874,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"allocPoint","nodeType":"MemberAccess","referencedDeclaration":3668,"src":"5240:28:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"5215:53:18"},{"expression":{"id":3881,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"baseExpression":{"id":3876,"name":"poolInfo","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3689,"src":"5278:8:18","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_PoolInfo_$3675_storage_$dyn_storage","typeString":"struct YieldFarm.PoolInfo storage ref[] storage ref"}},"id":3878,"indexExpression":{"id":3877,"name":"_poolId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3854,"src":"5287:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5278:17:18","typeDescriptions":{"typeIdentifier":"t_struct$_PoolInfo_$3675_storage","typeString":"struct YieldFarm.PoolInfo storage ref"}},"id":3879,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberName":"allocPoint","nodeType":"MemberAccess","referencedDeclaration":3668,"src":"5278:28:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":3880,"name":"_allocPoint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3856,"src":"5309:11:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5278:42:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3882,"nodeType":"ExpressionStatement","src":"5278:42:18"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3885,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3883,"name":"prevAllocPoint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3870,"src":"5334:14:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":3884,"name":"_allocPoint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3856,"src":"5352:11:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5334:29:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3900,"nodeType":"IfStatement","src":"5330:193:18","trueBody":{"id":3899,"nodeType":"Block","src":"5365:158:18","statements":[{"expression":{"id":3894,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3886,"name":"totalAllocPoint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3699,"src":"5379:15:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":3892,"name":"_allocPoint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3856,"src":"5454:11:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"arguments":[{"id":3889,"name":"prevAllocPoint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3870,"src":"5417:14:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":3887,"name":"totalAllocPoint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3699,"src":"5397:15:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3888,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sub","nodeType":"MemberAccess","referencedDeclaration":3277,"src":"5397:19:18","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":3890,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5397:35:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3891,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"add","nodeType":"MemberAccess","referencedDeclaration":3262,"src":"5397:39:18","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":3893,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5397:82:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5379:100:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3895,"nodeType":"ExpressionStatement","src":"5379:100:18"},{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":3896,"name":"updateStakingPool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3969,"src":"5493:17:18","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":3897,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5493:19:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3898,"nodeType":"ExpressionStatement","src":"5493:19:18"}]}}]},"functionSelector":"64482f79","id":3902,"implemented":true,"kind":"function","modifiers":[{"id":3861,"kind":"modifierInvocation","modifierName":{"id":3860,"name":"onlyOwner","nodeType":"IdentifierPath","referencedDeclaration":420,"src":"5127:9:18"},"nodeType":"ModifierInvocation","src":"5127:9:18"}],"name":"set","nameLocation":"5030:3:18","nodeType":"FunctionDefinition","parameters":{"id":3859,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3854,"mutability":"mutable","name":"_poolId","nameLocation":"5051:7:18","nodeType":"VariableDeclaration","scope":3902,"src":"5043:15:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3853,"name":"uint256","nodeType":"ElementaryTypeName","src":"5043:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3856,"mutability":"mutable","name":"_allocPoint","nameLocation":"5076:11:18","nodeType":"VariableDeclaration","scope":3902,"src":"5068:19:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3855,"name":"uint256","nodeType":"ElementaryTypeName","src":"5068:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3858,"mutability":"mutable","name":"_withUpdate","nameLocation":"5102:11:18","nodeType":"VariableDeclaration","scope":3902,"src":"5097:16:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3857,"name":"bool","nodeType":"ElementaryTypeName","src":"5097:4:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"5033:86:18"},"returnParameters":{"id":3862,"nodeType":"ParameterList","parameters":[],"src":"5137:0:18"},"scope":4836,"src":"5021:508:18","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":3968,"nodeType":"Block","src":"5674:491:18","statements":[{"assignments":[3906],"declarations":[{"constant":false,"id":3906,"mutability":"mutable","name":"length","nameLocation":"5692:6:18","nodeType":"VariableDeclaration","scope":3968,"src":"5684:14:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3905,"name":"uint256","nodeType":"ElementaryTypeName","src":"5684:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3909,"initialValue":{"expression":{"id":3907,"name":"poolInfo","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3689,"src":"5701:8:18","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_PoolInfo_$3675_storage_$dyn_storage","typeString":"struct YieldFarm.PoolInfo storage ref[] storage ref"}},"id":3908,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"5701:15:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"5684:32:18"},{"assignments":[3911],"declarations":[{"constant":false,"id":3911,"mutability":"mutable","name":"points","nameLocation":"5734:6:18","nodeType":"VariableDeclaration","scope":3968,"src":"5726:14:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3910,"name":"uint256","nodeType":"ElementaryTypeName","src":"5726:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3913,"initialValue":{"hexValue":"30","id":3912,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5743:1:18","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"5726:18:18"},{"body":{"id":3934,"nodeType":"Block","src":"5834:73:18","statements":[{"expression":{"id":3932,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3924,"name":"points","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3911,"src":"5848:6:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"expression":{"baseExpression":{"id":3927,"name":"poolInfo","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3689,"src":"5868:8:18","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_PoolInfo_$3675_storage_$dyn_storage","typeString":"struct YieldFarm.PoolInfo storage ref[] storage ref"}},"id":3929,"indexExpression":{"id":3928,"name":"poolId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3915,"src":"5877:6:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5868:16:18","typeDescriptions":{"typeIdentifier":"t_struct$_PoolInfo_$3675_storage","typeString":"struct YieldFarm.PoolInfo storage ref"}},"id":3930,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"allocPoint","nodeType":"MemberAccess","referencedDeclaration":3668,"src":"5868:27:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":3925,"name":"points","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3911,"src":"5857:6:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3926,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"add","nodeType":"MemberAccess","referencedDeclaration":3262,"src":"5857:10:18","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":3931,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5857:39:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5848:48:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3933,"nodeType":"ExpressionStatement","src":"5848:48:18"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3920,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3918,"name":"poolId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3915,"src":"5807:6:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":3919,"name":"length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3906,"src":"5816:6:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5807:15:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3935,"initializationExpression":{"assignments":[3915],"declarations":[{"constant":false,"id":3915,"mutability":"mutable","name":"poolId","nameLocation":"5795:6:18","nodeType":"VariableDeclaration","scope":3935,"src":"5787:14:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3914,"name":"uint256","nodeType":"ElementaryTypeName","src":"5787:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3917,"initialValue":{"hexValue":"31","id":3916,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5804:1:18","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"VariableDeclarationStatement","src":"5787:18:18"},"loopExpression":{"expression":{"id":3922,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":true,"src":"5824:8:18","subExpression":{"id":3921,"name":"poolId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3915,"src":"5826:6:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3923,"nodeType":"ExpressionStatement","src":"5824:8:18"},"nodeType":"ForStatement","src":"5782:125:18"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3938,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3936,"name":"points","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3911,"src":"5920:6:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":3937,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5930:1:18","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"5920:11:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3967,"nodeType":"IfStatement","src":"5916:243:18","trueBody":{"id":3966,"nodeType":"Block","src":"5933:226:18","statements":[{"expression":{"id":3944,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3939,"name":"points","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3911,"src":"5947:6:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"hexValue":"33","id":3942,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5967:1:18","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"value":"3"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"}],"expression":{"id":3940,"name":"points","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3911,"src":"5956:6:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3941,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"div","nodeType":"MemberAccess","referencedDeclaration":3307,"src":"5956:10:18","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":3943,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5956:13:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5947:22:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3945,"nodeType":"ExpressionStatement","src":"5947:22:18"},{"expression":{"id":3957,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3946,"name":"totalAllocPoint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3699,"src":"6000:15:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":3955,"name":"points","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3911,"src":"6083:6:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"arguments":[{"expression":{"baseExpression":{"id":3949,"name":"poolInfo","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3689,"src":"6038:8:18","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_PoolInfo_$3675_storage_$dyn_storage","typeString":"struct YieldFarm.PoolInfo storage ref[] storage ref"}},"id":3951,"indexExpression":{"hexValue":"30","id":3950,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6047:1:18","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6038:11:18","typeDescriptions":{"typeIdentifier":"t_struct$_PoolInfo_$3675_storage","typeString":"struct YieldFarm.PoolInfo storage ref"}},"id":3952,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"allocPoint","nodeType":"MemberAccess","referencedDeclaration":3668,"src":"6038:22:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":3947,"name":"totalAllocPoint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3699,"src":"6018:15:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3948,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sub","nodeType":"MemberAccess","referencedDeclaration":3277,"src":"6018:19:18","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":3953,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6018:43:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3954,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"add","nodeType":"MemberAccess","referencedDeclaration":3262,"src":"6018:47:18","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":3956,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6018:85:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6000:103:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3958,"nodeType":"ExpressionStatement","src":"6000:103:18"},{"expression":{"id":3964,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"baseExpression":{"id":3959,"name":"poolInfo","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3689,"src":"6117:8:18","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_PoolInfo_$3675_storage_$dyn_storage","typeString":"struct YieldFarm.PoolInfo storage ref[] storage ref"}},"id":3961,"indexExpression":{"hexValue":"30","id":3960,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6126:1:18","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6117:11:18","typeDescriptions":{"typeIdentifier":"t_struct$_PoolInfo_$3675_storage","typeString":"struct YieldFarm.PoolInfo storage ref"}},"id":3962,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberName":"allocPoint","nodeType":"MemberAccess","referencedDeclaration":3668,"src":"6117:22:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":3963,"name":"points","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3911,"src":"6142:6:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6117:31:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3965,"nodeType":"ExpressionStatement","src":"6117:31:18"}]}}]},"id":3969,"implemented":true,"kind":"function","modifiers":[],"name":"updateStakingPool","nameLocation":"5645:17:18","nodeType":"FunctionDefinition","parameters":{"id":3903,"nodeType":"ParameterList","parameters":[],"src":"5662:2:18"},"returnParameters":{"id":3904,"nodeType":"ParameterList","parameters":[],"src":"5674:0:18"},"scope":4836,"src":"5636:529:18","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":3986,"nodeType":"Block","src":"6341:60:18","statements":[{"expression":{"arguments":[{"id":3983,"name":"BONUS_MULTIPLIER","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3685,"src":"6377:16:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"arguments":[{"id":3980,"name":"_from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3971,"src":"6366:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":3978,"name":"_to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3973,"src":"6358:3:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3979,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sub","nodeType":"MemberAccess","referencedDeclaration":3277,"src":"6358:7:18","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":3981,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6358:14:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3982,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"mul","nodeType":"MemberAccess","referencedDeclaration":3292,"src":"6358:18:18","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":3984,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6358:36:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3977,"id":3985,"nodeType":"Return","src":"6351:43:18"}]},"functionSelector":"8dbb1e3a","id":3987,"implemented":true,"kind":"function","modifiers":[],"name":"getMultiplier","nameLocation":"6247:13:18","nodeType":"FunctionDefinition","parameters":{"id":3974,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3971,"mutability":"mutable","name":"_from","nameLocation":"6278:5:18","nodeType":"VariableDeclaration","scope":3987,"src":"6270:13:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3970,"name":"uint256","nodeType":"ElementaryTypeName","src":"6270:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3973,"mutability":"mutable","name":"_to","nameLocation":"6301:3:18","nodeType":"VariableDeclaration","scope":3987,"src":"6293:11:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3972,"name":"uint256","nodeType":"ElementaryTypeName","src":"6293:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6260:50:18"},"returnParameters":{"id":3977,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3976,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3987,"src":"6332:7:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3975,"name":"uint256","nodeType":"ElementaryTypeName","src":"6332:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6331:9:18"},"scope":4836,"src":"6238:163:18","stateMutability":"view","virtual":false,"visibility":"public"},{"body":{"id":4088,"nodeType":"Block","src":"6547:801:18","statements":[{"assignments":[3998],"declarations":[{"constant":false,"id":3998,"mutability":"mutable","name":"pool","nameLocation":"6574:4:18","nodeType":"VariableDeclaration","scope":4088,"src":"6557:21:18","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_PoolInfo_$3675_storage_ptr","typeString":"struct YieldFarm.PoolInfo"},"typeName":{"id":3997,"nodeType":"UserDefinedTypeName","pathNode":{"id":3996,"name":"PoolInfo","nodeType":"IdentifierPath","referencedDeclaration":3675,"src":"6557:8:18"},"referencedDeclaration":3675,"src":"6557:8:18","typeDescriptions":{"typeIdentifier":"t_struct$_PoolInfo_$3675_storage_ptr","typeString":"struct YieldFarm.PoolInfo"}},"visibility":"internal"}],"id":4002,"initialValue":{"baseExpression":{"id":3999,"name":"poolInfo","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3689,"src":"6581:8:18","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_PoolInfo_$3675_storage_$dyn_storage","typeString":"struct YieldFarm.PoolInfo storage ref[] storage ref"}},"id":4001,"indexExpression":{"id":4000,"name":"_poolId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3989,"src":"6590:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6581:17:18","typeDescriptions":{"typeIdentifier":"t_struct$_PoolInfo_$3675_storage","typeString":"struct YieldFarm.PoolInfo storage ref"}},"nodeType":"VariableDeclarationStatement","src":"6557:41:18"},{"assignments":[4005],"declarations":[{"constant":false,"id":4005,"mutability":"mutable","name":"user","nameLocation":"6625:4:18","nodeType":"VariableDeclaration","scope":4088,"src":"6608:21:18","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_UserInfo_$3663_storage_ptr","typeString":"struct YieldFarm.UserInfo"},"typeName":{"id":4004,"nodeType":"UserDefinedTypeName","pathNode":{"id":4003,"name":"UserInfo","nodeType":"IdentifierPath","referencedDeclaration":3663,"src":"6608:8:18"},"referencedDeclaration":3663,"src":"6608:8:18","typeDescriptions":{"typeIdentifier":"t_struct$_UserInfo_$3663_storage_ptr","typeString":"struct YieldFarm.UserInfo"}},"visibility":"internal"}],"id":4011,"initialValue":{"baseExpression":{"baseExpression":{"id":4006,"name":"userInfo","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3696,"src":"6632:8:18","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_struct$_UserInfo_$3663_storage_$_$","typeString":"mapping(uint256 => mapping(address => struct YieldFarm.UserInfo storage ref))"}},"id":4008,"indexExpression":{"id":4007,"name":"_poolId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3989,"src":"6641:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6632:17:18","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_UserInfo_$3663_storage_$","typeString":"mapping(address => struct YieldFarm.UserInfo storage ref)"}},"id":4010,"indexExpression":{"id":4009,"name":"_user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3991,"src":"6650:5:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6632:24:18","typeDescriptions":{"typeIdentifier":"t_struct$_UserInfo_$3663_storage","typeString":"struct YieldFarm.UserInfo storage ref"}},"nodeType":"VariableDeclarationStatement","src":"6608:48:18"},{"assignments":[4013],"declarations":[{"constant":false,"id":4013,"mutability":"mutable","name":"accSobaPerShare","nameLocation":"6675:15:18","nodeType":"VariableDeclaration","scope":4088,"src":"6667:23:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4012,"name":"uint256","nodeType":"ElementaryTypeName","src":"6667:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4016,"initialValue":{"expression":{"id":4014,"name":"pool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3998,"src":"6693:4:18","typeDescriptions":{"typeIdentifier":"t_struct$_PoolInfo_$3675_storage_ptr","typeString":"struct YieldFarm.PoolInfo storage pointer"}},"id":4015,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"accSobaPerShare","nodeType":"MemberAccess","referencedDeclaration":3672,"src":"6693:20:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"6667:46:18"},{"assignments":[4018],"declarations":[{"constant":false,"id":4018,"mutability":"mutable","name":"lpSupply","nameLocation":"6731:8:18","nodeType":"VariableDeclaration","scope":4088,"src":"6723:16:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4017,"name":"uint256","nodeType":"ElementaryTypeName","src":"6723:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4027,"initialValue":{"arguments":[{"arguments":[{"id":4024,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"6773:4:18","typeDescriptions":{"typeIdentifier":"t_contract$_YieldFarm_$4836","typeString":"contract YieldFarm"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_YieldFarm_$4836","typeString":"contract YieldFarm"}],"id":4023,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6765:7:18","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":4022,"name":"address","nodeType":"ElementaryTypeName","src":"6765:7:18","typeDescriptions":{}}},"id":4025,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6765:13:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"expression":{"id":4019,"name":"pool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3998,"src":"6742:4:18","typeDescriptions":{"typeIdentifier":"t_struct$_PoolInfo_$3675_storage_ptr","typeString":"struct YieldFarm.PoolInfo storage pointer"}},"id":4020,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"lpToken","nodeType":"MemberAccess","referencedDeclaration":3666,"src":"6742:12:18","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1166","typeString":"contract IERC20"}},"id":4021,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"balanceOf","nodeType":"MemberAccess","referencedDeclaration":1123,"src":"6742:22:18","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$returns$_t_uint256_$","typeString":"function (address) view external returns (uint256)"}},"id":4026,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6742:37:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"6723:56:18"},{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":4036,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4032,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":4028,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"6793:5:18","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":4029,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"number","nodeType":"MemberAccess","src":"6793:12:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"id":4030,"name":"pool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3998,"src":"6808:4:18","typeDescriptions":{"typeIdentifier":"t_struct$_PoolInfo_$3675_storage_ptr","typeString":"struct YieldFarm.PoolInfo storage pointer"}},"id":4031,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"lastRewardBlock","nodeType":"MemberAccess","referencedDeclaration":3670,"src":"6808:20:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6793:35:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4035,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4033,"name":"lpSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4018,"src":"6832:8:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":4034,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6844:1:18","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"6832:13:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"6793:52:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4074,"nodeType":"IfStatement","src":"6789:473:18","trueBody":{"id":4073,"nodeType":"Block","src":"6847:415:18","statements":[{"assignments":[4038],"declarations":[{"constant":false,"id":4038,"mutability":"mutable","name":"multiplier","nameLocation":"6869:10:18","nodeType":"VariableDeclaration","scope":4073,"src":"6861:18:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4037,"name":"uint256","nodeType":"ElementaryTypeName","src":"6861:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4045,"initialValue":{"arguments":[{"expression":{"id":4040,"name":"pool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3998,"src":"6913:4:18","typeDescriptions":{"typeIdentifier":"t_struct$_PoolInfo_$3675_storage_ptr","typeString":"struct YieldFarm.PoolInfo storage pointer"}},"id":4041,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"lastRewardBlock","nodeType":"MemberAccess","referencedDeclaration":3670,"src":"6913:20:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":4042,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"6951:5:18","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":4043,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"number","nodeType":"MemberAccess","src":"6951:12:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4039,"name":"getMultiplier","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3987,"src":"6882:13:18","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256) view returns (uint256)"}},"id":4044,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6882:95:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"6861:116:18"},{"assignments":[4047],"declarations":[{"constant":false,"id":4047,"mutability":"mutable","name":"sobaReward","nameLocation":"6999:10:18","nodeType":"VariableDeclaration","scope":4073,"src":"6991:18:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4046,"name":"uint256","nodeType":"ElementaryTypeName","src":"6991:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4059,"initialValue":{"arguments":[{"id":4057,"name":"totalAllocPoint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3699,"src":"7117:15:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"arguments":[{"expression":{"id":4053,"name":"pool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3998,"src":"7079:4:18","typeDescriptions":{"typeIdentifier":"t_struct$_PoolInfo_$3675_storage_ptr","typeString":"struct YieldFarm.PoolInfo storage pointer"}},"id":4054,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"allocPoint","nodeType":"MemberAccess","referencedDeclaration":3668,"src":"7079:15:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"arguments":[{"id":4050,"name":"sobaPerBlock","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3682,"src":"7044:12:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":4048,"name":"multiplier","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4038,"src":"7012:10:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4049,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"mul","nodeType":"MemberAccess","referencedDeclaration":3292,"src":"7012:31:18","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":4051,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7012:45:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4052,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"mul","nodeType":"MemberAccess","referencedDeclaration":3292,"src":"7012:66:18","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":4055,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7012:83:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4056,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"div","nodeType":"MemberAccess","referencedDeclaration":3307,"src":"7012:104:18","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":4058,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7012:121:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"6991:142:18"},{"expression":{"id":4071,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4060,"name":"accSobaPerShare","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4013,"src":"7148:15:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"arguments":[{"id":4068,"name":"lpSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4018,"src":"7228:8:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"arguments":[{"hexValue":"31653138","id":4065,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7218:4:18","typeDescriptions":{"typeIdentifier":"t_rational_1000000000000000000_by_1","typeString":"int_const 1000000000000000000"},"value":"1e18"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_1000000000000000000_by_1","typeString":"int_const 1000000000000000000"}],"expression":{"id":4063,"name":"sobaReward","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4047,"src":"7203:10:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4064,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"mul","nodeType":"MemberAccess","referencedDeclaration":3292,"src":"7203:14:18","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":4066,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7203:20:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4067,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"div","nodeType":"MemberAccess","referencedDeclaration":3307,"src":"7203:24:18","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":4069,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7203:34:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":4061,"name":"accSobaPerShare","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4013,"src":"7166:15:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4062,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"add","nodeType":"MemberAccess","referencedDeclaration":3262,"src":"7166:19:18","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":4070,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7166:85:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7148:103:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4072,"nodeType":"ExpressionStatement","src":"7148:103:18"}]}},{"expression":{"arguments":[{"expression":{"id":4084,"name":"user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4005,"src":"7325:4:18","typeDescriptions":{"typeIdentifier":"t_struct$_UserInfo_$3663_storage_ptr","typeString":"struct YieldFarm.UserInfo storage pointer"}},"id":4085,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"rewardDebt","nodeType":"MemberAccess","referencedDeclaration":3662,"src":"7325:15:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"arguments":[{"hexValue":"31653138","id":4081,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7315:4:18","typeDescriptions":{"typeIdentifier":"t_rational_1000000000000000000_by_1","typeString":"int_const 1000000000000000000"},"value":"1e18"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_1000000000000000000_by_1","typeString":"int_const 1000000000000000000"}],"expression":{"arguments":[{"id":4078,"name":"accSobaPerShare","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4013,"src":"7294:15:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"expression":{"id":4075,"name":"user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4005,"src":"7278:4:18","typeDescriptions":{"typeIdentifier":"t_struct$_UserInfo_$3663_storage_ptr","typeString":"struct YieldFarm.UserInfo storage pointer"}},"id":4076,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"amount","nodeType":"MemberAccess","referencedDeclaration":3660,"src":"7278:11:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4077,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"mul","nodeType":"MemberAccess","referencedDeclaration":3292,"src":"7278:15:18","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":4079,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7278:32:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4080,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"div","nodeType":"MemberAccess","referencedDeclaration":3307,"src":"7278:36:18","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":4082,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7278:42:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4083,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sub","nodeType":"MemberAccess","referencedDeclaration":3277,"src":"7278:46:18","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":4086,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7278:63:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3995,"id":4087,"nodeType":"Return","src":"7271:70:18"}]},"functionSelector":"cb3bc6de","id":4089,"implemented":true,"kind":"function","modifiers":[],"name":"pendingSoba","nameLocation":"6449:11:18","nodeType":"FunctionDefinition","parameters":{"id":3992,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3989,"mutability":"mutable","name":"_poolId","nameLocation":"6478:7:18","nodeType":"VariableDeclaration","scope":4089,"src":"6470:15:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3988,"name":"uint256","nodeType":"ElementaryTypeName","src":"6470:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3991,"mutability":"mutable","name":"_user","nameLocation":"6503:5:18","nodeType":"VariableDeclaration","scope":4089,"src":"6495:13:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3990,"name":"address","nodeType":"ElementaryTypeName","src":"6495:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"6460:54:18"},"returnParameters":{"id":3995,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3994,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4089,"src":"6538:7:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3993,"name":"uint256","nodeType":"ElementaryTypeName","src":"6538:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6537:9:18"},"scope":4836,"src":"6440:908:18","stateMutability":"view","virtual":false,"visibility":"external"},{"body":{"id":4113,"nodeType":"Block","src":"7433:153:18","statements":[{"assignments":[4093],"declarations":[{"constant":false,"id":4093,"mutability":"mutable","name":"length","nameLocation":"7451:6:18","nodeType":"VariableDeclaration","scope":4113,"src":"7443:14:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4092,"name":"uint256","nodeType":"ElementaryTypeName","src":"7443:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4096,"initialValue":{"expression":{"id":4094,"name":"poolInfo","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3689,"src":"7460:8:18","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_PoolInfo_$3675_storage_$dyn_storage","typeString":"struct YieldFarm.PoolInfo storage ref[] storage ref"}},"id":4095,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"7460:15:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"7443:32:18"},{"body":{"id":4111,"nodeType":"Block","src":"7537:43:18","statements":[{"expression":{"arguments":[{"id":4108,"name":"poolId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4098,"src":"7562:6:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4107,"name":"updatePool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4225,"src":"7551:10:18","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_uint256_$returns$__$","typeString":"function (uint256)"}},"id":4109,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7551:18:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4110,"nodeType":"ExpressionStatement","src":"7551:18:18"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4103,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4101,"name":"poolId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4098,"src":"7510:6:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":4102,"name":"length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4093,"src":"7519:6:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7510:15:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4112,"initializationExpression":{"assignments":[4098],"declarations":[{"constant":false,"id":4098,"mutability":"mutable","name":"poolId","nameLocation":"7498:6:18","nodeType":"VariableDeclaration","scope":4112,"src":"7490:14:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4097,"name":"uint256","nodeType":"ElementaryTypeName","src":"7490:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4100,"initialValue":{"hexValue":"30","id":4099,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7507:1:18","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"7490:18:18"},"loopExpression":{"expression":{"id":4105,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":true,"src":"7527:8:18","subExpression":{"id":4104,"name":"poolId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4098,"src":"7529:6:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4106,"nodeType":"ExpressionStatement","src":"7527:8:18"},"nodeType":"ForStatement","src":"7485:95:18"}]},"functionSelector":"630b5ba1","id":4114,"implemented":true,"kind":"function","modifiers":[],"name":"massUpdatePools","nameLocation":"7408:15:18","nodeType":"FunctionDefinition","parameters":{"id":4090,"nodeType":"ParameterList","parameters":[],"src":"7423:2:18"},"returnParameters":{"id":4091,"nodeType":"ParameterList","parameters":[],"src":"7433:0:18"},"scope":4836,"src":"7399:187:18","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":4224,"nodeType":"Block","src":"7685:894:18","statements":[{"assignments":[4121],"declarations":[{"constant":false,"id":4121,"mutability":"mutable","name":"pool","nameLocation":"7712:4:18","nodeType":"VariableDeclaration","scope":4224,"src":"7695:21:18","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_PoolInfo_$3675_storage_ptr","typeString":"struct YieldFarm.PoolInfo"},"typeName":{"id":4120,"nodeType":"UserDefinedTypeName","pathNode":{"id":4119,"name":"PoolInfo","nodeType":"IdentifierPath","referencedDeclaration":3675,"src":"7695:8:18"},"referencedDeclaration":3675,"src":"7695:8:18","typeDescriptions":{"typeIdentifier":"t_struct$_PoolInfo_$3675_storage_ptr","typeString":"struct YieldFarm.PoolInfo"}},"visibility":"internal"}],"id":4125,"initialValue":{"baseExpression":{"id":4122,"name":"poolInfo","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3689,"src":"7719:8:18","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_PoolInfo_$3675_storage_$dyn_storage","typeString":"struct YieldFarm.PoolInfo storage ref[] storage ref"}},"id":4124,"indexExpression":{"id":4123,"name":"_poolId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4116,"src":"7728:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"7719:17:18","typeDescriptions":{"typeIdentifier":"t_struct$_PoolInfo_$3675_storage","typeString":"struct YieldFarm.PoolInfo storage ref"}},"nodeType":"VariableDeclarationStatement","src":"7695:41:18"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4130,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":4126,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"7791:5:18","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":4127,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"number","nodeType":"MemberAccess","src":"7791:12:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"id":4128,"name":"pool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4121,"src":"7807:4:18","typeDescriptions":{"typeIdentifier":"t_struct$_PoolInfo_$3675_storage_ptr","typeString":"struct YieldFarm.PoolInfo storage pointer"}},"id":4129,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"lastRewardBlock","nodeType":"MemberAccess","referencedDeclaration":3670,"src":"7807:20:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7791:36:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4133,"nodeType":"IfStatement","src":"7787:73:18","trueBody":{"id":4132,"nodeType":"Block","src":"7829:31:18","statements":[{"functionReturnParameters":4118,"id":4131,"nodeType":"Return","src":"7843:7:18"}]}},{"assignments":[4135],"declarations":[{"constant":false,"id":4135,"mutability":"mutable","name":"lpSupply","nameLocation":"7878:8:18","nodeType":"VariableDeclaration","scope":4224,"src":"7870:16:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4134,"name":"uint256","nodeType":"ElementaryTypeName","src":"7870:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4144,"initialValue":{"arguments":[{"arguments":[{"id":4141,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"7920:4:18","typeDescriptions":{"typeIdentifier":"t_contract$_YieldFarm_$4836","typeString":"contract YieldFarm"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_YieldFarm_$4836","typeString":"contract YieldFarm"}],"id":4140,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7912:7:18","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":4139,"name":"address","nodeType":"ElementaryTypeName","src":"7912:7:18","typeDescriptions":{}}},"id":4142,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7912:13:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"expression":{"id":4136,"name":"pool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4121,"src":"7889:4:18","typeDescriptions":{"typeIdentifier":"t_struct$_PoolInfo_$3675_storage_ptr","typeString":"struct YieldFarm.PoolInfo storage pointer"}},"id":4137,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"lpToken","nodeType":"MemberAccess","referencedDeclaration":3666,"src":"7889:12:18","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1166","typeString":"contract IERC20"}},"id":4138,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"balanceOf","nodeType":"MemberAccess","referencedDeclaration":1123,"src":"7889:22:18","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$returns$_t_uint256_$","typeString":"function (address) view external returns (uint256)"}},"id":4143,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7889:37:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"7870:56:18"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4147,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4145,"name":"lpSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4135,"src":"7940:8:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":4146,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7952:1:18","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"7940:13:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4157,"nodeType":"IfStatement","src":"7936:99:18","trueBody":{"id":4156,"nodeType":"Block","src":"7955:80:18","statements":[{"expression":{"id":4153,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":4148,"name":"pool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4121,"src":"7969:4:18","typeDescriptions":{"typeIdentifier":"t_struct$_PoolInfo_$3675_storage_ptr","typeString":"struct YieldFarm.PoolInfo storage pointer"}},"id":4150,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberName":"lastRewardBlock","nodeType":"MemberAccess","referencedDeclaration":3670,"src":"7969:20:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"id":4151,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"7992:5:18","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":4152,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"number","nodeType":"MemberAccess","src":"7992:12:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7969:35:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4154,"nodeType":"ExpressionStatement","src":"7969:35:18"},{"functionReturnParameters":4118,"id":4155,"nodeType":"Return","src":"8018:7:18"}]}},{"assignments":[4159],"declarations":[{"constant":false,"id":4159,"mutability":"mutable","name":"multiplier","nameLocation":"8080:10:18","nodeType":"VariableDeclaration","scope":4224,"src":"8072:18:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4158,"name":"uint256","nodeType":"ElementaryTypeName","src":"8072:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4166,"initialValue":{"arguments":[{"expression":{"id":4161,"name":"pool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4121,"src":"8107:4:18","typeDescriptions":{"typeIdentifier":"t_struct$_PoolInfo_$3675_storage_ptr","typeString":"struct YieldFarm.PoolInfo storage pointer"}},"id":4162,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"lastRewardBlock","nodeType":"MemberAccess","referencedDeclaration":3670,"src":"8107:20:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":4163,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"8129:5:18","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":4164,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"number","nodeType":"MemberAccess","src":"8129:12:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4160,"name":"getMultiplier","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3987,"src":"8093:13:18","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256) view returns (uint256)"}},"id":4165,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8093:49:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"8072:70:18"},{"assignments":[4168],"declarations":[{"constant":false,"id":4168,"mutability":"mutable","name":"sobaReward","nameLocation":"8161:10:18","nodeType":"VariableDeclaration","scope":4224,"src":"8153:18:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4167,"name":"uint256","nodeType":"ElementaryTypeName","src":"8153:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4180,"initialValue":{"arguments":[{"id":4178,"name":"totalAllocPoint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3699,"src":"8267:15:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"arguments":[{"expression":{"id":4174,"name":"pool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4121,"src":"8233:4:18","typeDescriptions":{"typeIdentifier":"t_struct$_PoolInfo_$3675_storage_ptr","typeString":"struct YieldFarm.PoolInfo storage pointer"}},"id":4175,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"allocPoint","nodeType":"MemberAccess","referencedDeclaration":3668,"src":"8233:15:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"arguments":[{"id":4171,"name":"sobaPerBlock","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3682,"src":"8202:12:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":4169,"name":"multiplier","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4159,"src":"8174:10:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4170,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"mul","nodeType":"MemberAccess","referencedDeclaration":3292,"src":"8174:27:18","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":4172,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8174:41:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4173,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"mul","nodeType":"MemberAccess","referencedDeclaration":3292,"src":"8174:58:18","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":4176,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8174:75:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4177,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"div","nodeType":"MemberAccess","referencedDeclaration":3307,"src":"8174:92:18","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":4179,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8174:109:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"8153:130:18"},{"expression":{"arguments":[{"id":4184,"name":"devAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3680,"src":"8306:10:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"hexValue":"3130","id":4187,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8333:2:18","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"}],"expression":{"id":4185,"name":"sobaReward","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4168,"src":"8318:10:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4186,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"div","nodeType":"MemberAccess","referencedDeclaration":3307,"src":"8318:14:18","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":4188,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8318:18:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":4181,"name":"sobaja","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3678,"src":"8294:6:18","typeDescriptions":{"typeIdentifier":"t_contract$_SobaToken_$3641","typeString":"contract SobaToken"}},"id":4183,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"mint","nodeType":"MemberAccess","referencedDeclaration":3603,"src":"8294:11:18","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256) external"}},"id":4189,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8294:43:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4190,"nodeType":"ExpressionStatement","src":"8294:43:18"},{"expression":{"arguments":[{"arguments":[{"id":4196,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"8394:4:18","typeDescriptions":{"typeIdentifier":"t_contract$_YieldFarm_$4836","typeString":"contract YieldFarm"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_YieldFarm_$4836","typeString":"contract YieldFarm"}],"id":4195,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8386:7:18","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":4194,"name":"address","nodeType":"ElementaryTypeName","src":"8386:7:18","typeDescriptions":{}}},"id":4197,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8386:13:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":4198,"name":"sobaReward","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4168,"src":"8401:10:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":4191,"name":"sobaja","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3678,"src":"8374:6:18","typeDescriptions":{"typeIdentifier":"t_contract$_SobaToken_$3641","typeString":"contract SobaToken"}},"id":4193,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"mint","nodeType":"MemberAccess","referencedDeclaration":3603,"src":"8374:11:18","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256) external"}},"id":4199,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8374:38:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4200,"nodeType":"ExpressionStatement","src":"8374:38:18"},{"expression":{"id":4215,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":4201,"name":"pool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4121,"src":"8422:4:18","typeDescriptions":{"typeIdentifier":"t_struct$_PoolInfo_$3675_storage_ptr","typeString":"struct YieldFarm.PoolInfo storage pointer"}},"id":4203,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberName":"accSobaPerShare","nodeType":"MemberAccess","referencedDeclaration":3672,"src":"8422:20:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"arguments":[{"id":4212,"name":"lpSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4135,"src":"8508:8:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"arguments":[{"hexValue":"31653138","id":4209,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8498:4:18","typeDescriptions":{"typeIdentifier":"t_rational_1000000000000000000_by_1","typeString":"int_const 1000000000000000000"},"value":"1e18"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_1000000000000000000_by_1","typeString":"int_const 1000000000000000000"}],"expression":{"id":4207,"name":"sobaReward","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4168,"src":"8483:10:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4208,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"mul","nodeType":"MemberAccess","referencedDeclaration":3292,"src":"8483:14:18","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":4210,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8483:20:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4211,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"div","nodeType":"MemberAccess","referencedDeclaration":3307,"src":"8483:24:18","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":4213,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8483:34:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"expression":{"id":4204,"name":"pool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4121,"src":"8445:4:18","typeDescriptions":{"typeIdentifier":"t_struct$_PoolInfo_$3675_storage_ptr","typeString":"struct YieldFarm.PoolInfo storage pointer"}},"id":4205,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"accSobaPerShare","nodeType":"MemberAccess","referencedDeclaration":3672,"src":"8445:20:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4206,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"add","nodeType":"MemberAccess","referencedDeclaration":3262,"src":"8445:24:18","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":4214,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8445:82:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8422:105:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4216,"nodeType":"ExpressionStatement","src":"8422:105:18"},{"expression":{"id":4222,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":4217,"name":"pool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4121,"src":"8537:4:18","typeDescriptions":{"typeIdentifier":"t_struct$_PoolInfo_$3675_storage_ptr","typeString":"struct YieldFarm.PoolInfo storage pointer"}},"id":4219,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberName":"lastRewardBlock","nodeType":"MemberAccess","referencedDeclaration":3670,"src":"8537:20:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"id":4220,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"8560:5:18","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":4221,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"number","nodeType":"MemberAccess","src":"8560:12:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8537:35:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4223,"nodeType":"ExpressionStatement","src":"8537:35:18"}]},"functionSelector":"51eb05a6","id":4225,"implemented":true,"kind":"function","modifiers":[],"name":"updatePool","nameLocation":"7650:10:18","nodeType":"FunctionDefinition","parameters":{"id":4117,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4116,"mutability":"mutable","name":"_poolId","nameLocation":"7669:7:18","nodeType":"VariableDeclaration","scope":4225,"src":"7661:15:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4115,"name":"uint256","nodeType":"ElementaryTypeName","src":"7661:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7660:17:18"},"returnParameters":{"id":4118,"nodeType":"ParameterList","parameters":[],"src":"7685:0:18"},"scope":4836,"src":"7641:938:18","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":4352,"nodeType":"Block","src":"8661:998:18","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4235,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4233,"name":"_poolId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4227,"src":"8679:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":4234,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8690:1:18","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"8679:12:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"506f6f6c206d757374206578697374","id":4236,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"8693:17:18","typeDescriptions":{"typeIdentifier":"t_stringliteral_e0efbc0d56b19b3aff383dc01b2fe4a828ab58801c3c2318fa3a7efee8fef0a7","typeString":"literal_string \"Pool must exist\""},"value":"Pool must exist"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_e0efbc0d56b19b3aff383dc01b2fe4a828ab58801c3c2318fa3a7efee8fef0a7","typeString":"literal_string \"Pool must exist\""}],"id":4232,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"8671:7:18","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":4237,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8671:40:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4238,"nodeType":"ExpressionStatement","src":"8671:40:18"},{"assignments":[4241],"declarations":[{"constant":false,"id":4241,"mutability":"mutable","name":"pool","nameLocation":"8739:4:18","nodeType":"VariableDeclaration","scope":4352,"src":"8722:21:18","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_PoolInfo_$3675_storage_ptr","typeString":"struct YieldFarm.PoolInfo"},"typeName":{"id":4240,"nodeType":"UserDefinedTypeName","pathNode":{"id":4239,"name":"PoolInfo","nodeType":"IdentifierPath","referencedDeclaration":3675,"src":"8722:8:18"},"referencedDeclaration":3675,"src":"8722:8:18","typeDescriptions":{"typeIdentifier":"t_struct$_PoolInfo_$3675_storage_ptr","typeString":"struct YieldFarm.PoolInfo"}},"visibility":"internal"}],"id":4245,"initialValue":{"baseExpression":{"id":4242,"name":"poolInfo","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3689,"src":"8746:8:18","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_PoolInfo_$3675_storage_$dyn_storage","typeString":"struct YieldFarm.PoolInfo storage ref[] storage ref"}},"id":4244,"indexExpression":{"id":4243,"name":"_poolId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4227,"src":"8755:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"8746:17:18","typeDescriptions":{"typeIdentifier":"t_struct$_PoolInfo_$3675_storage","typeString":"struct YieldFarm.PoolInfo storage ref"}},"nodeType":"VariableDeclarationStatement","src":"8722:41:18"},{"assignments":[4248],"declarations":[{"constant":false,"id":4248,"mutability":"mutable","name":"user","nameLocation":"8790:4:18","nodeType":"VariableDeclaration","scope":4352,"src":"8773:21:18","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_UserInfo_$3663_storage_ptr","typeString":"struct YieldFarm.UserInfo"},"typeName":{"id":4247,"nodeType":"UserDefinedTypeName","pathNode":{"id":4246,"name":"UserInfo","nodeType":"IdentifierPath","referencedDeclaration":3663,"src":"8773:8:18"},"referencedDeclaration":3663,"src":"8773:8:18","typeDescriptions":{"typeIdentifier":"t_struct$_UserInfo_$3663_storage_ptr","typeString":"struct YieldFarm.UserInfo"}},"visibility":"internal"}],"id":4255,"initialValue":{"baseExpression":{"baseExpression":{"id":4249,"name":"userInfo","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3696,"src":"8797:8:18","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_struct$_UserInfo_$3663_storage_$_$","typeString":"mapping(uint256 => mapping(address => struct YieldFarm.UserInfo storage ref))"}},"id":4251,"indexExpression":{"id":4250,"name":"_poolId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4227,"src":"8806:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"8797:17:18","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_UserInfo_$3663_storage_$","typeString":"mapping(address => struct YieldFarm.UserInfo storage ref)"}},"id":4254,"indexExpression":{"expression":{"id":4252,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"8815:3:18","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":4253,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"8815:10:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"8797:29:18","typeDescriptions":{"typeIdentifier":"t_struct$_UserInfo_$3663_storage","typeString":"struct YieldFarm.UserInfo storage ref"}},"nodeType":"VariableDeclarationStatement","src":"8773:53:18"},{"expression":{"arguments":[{"id":4257,"name":"_poolId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4227,"src":"8847:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4256,"name":"updatePool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4225,"src":"8836:10:18","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_uint256_$returns$__$","typeString":"function (uint256)"}},"id":4258,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8836:19:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4259,"nodeType":"ExpressionStatement","src":"8836:19:18"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4263,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":4260,"name":"user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4248,"src":"8950:4:18","typeDescriptions":{"typeIdentifier":"t_struct$_UserInfo_$3663_storage_ptr","typeString":"struct YieldFarm.UserInfo storage pointer"}},"id":4261,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"amount","nodeType":"MemberAccess","referencedDeclaration":3660,"src":"8950:11:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":4262,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8964:1:18","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"8950:15:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4292,"nodeType":"IfStatement","src":"8946:300:18","trueBody":{"id":4291,"nodeType":"Block","src":"8967:279:18","statements":[{"assignments":[4265],"declarations":[{"constant":false,"id":4265,"mutability":"mutable","name":"pending","nameLocation":"8989:7:18","nodeType":"VariableDeclaration","scope":4291,"src":"8981:15:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4264,"name":"uint256","nodeType":"ElementaryTypeName","src":"8981:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4279,"initialValue":{"arguments":[{"expression":{"id":4276,"name":"user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4248,"src":"9119:4:18","typeDescriptions":{"typeIdentifier":"t_struct$_UserInfo_$3663_storage_ptr","typeString":"struct YieldFarm.UserInfo storage pointer"}},"id":4277,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"rewardDebt","nodeType":"MemberAccess","referencedDeclaration":3662,"src":"9119:15:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"arguments":[{"hexValue":"31653138","id":4273,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9092:4:18","typeDescriptions":{"typeIdentifier":"t_rational_1000000000000000000_by_1","typeString":"int_const 1000000000000000000"},"value":"1e18"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_1000000000000000000_by_1","typeString":"int_const 1000000000000000000"}],"expression":{"arguments":[{"expression":{"id":4269,"name":"pool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4241,"src":"9049:4:18","typeDescriptions":{"typeIdentifier":"t_struct$_PoolInfo_$3675_storage_ptr","typeString":"struct YieldFarm.PoolInfo storage pointer"}},"id":4270,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"accSobaPerShare","nodeType":"MemberAccess","referencedDeclaration":3672,"src":"9049:20:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"expression":{"id":4266,"name":"user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4248,"src":"8999:4:18","typeDescriptions":{"typeIdentifier":"t_struct$_UserInfo_$3663_storage_ptr","typeString":"struct YieldFarm.UserInfo storage pointer"}},"id":4267,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"amount","nodeType":"MemberAccess","referencedDeclaration":3660,"src":"8999:28:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4268,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"mul","nodeType":"MemberAccess","referencedDeclaration":3292,"src":"8999:49:18","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":4271,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8999:71:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4272,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"div","nodeType":"MemberAccess","referencedDeclaration":3307,"src":"8999:92:18","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":4274,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8999:98:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4275,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sub","nodeType":"MemberAccess","referencedDeclaration":3277,"src":"8999:119:18","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":4278,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8999:136:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"8981:154:18"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4282,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4280,"name":"pending","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4265,"src":"9153:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":4281,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9163:1:18","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"9153:11:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4290,"nodeType":"IfStatement","src":"9149:87:18","trueBody":{"id":4289,"nodeType":"Block","src":"9166:70:18","statements":[{"expression":{"arguments":[{"expression":{"id":4284,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"9201:3:18","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":4285,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"9201:10:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":4286,"name":"pending","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4265,"src":"9213:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4283,"name":"safeSobaTransfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4817,"src":"9184:16:18","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":4287,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9184:37:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4288,"nodeType":"ExpressionStatement","src":"9184:37:18"}]}}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4295,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4293,"name":"_amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4229,"src":"9259:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":4294,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9269:1:18","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"9259:11:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4330,"nodeType":"IfStatement","src":"9255:271:18","trueBody":{"id":4329,"nodeType":"Block","src":"9272:254:18","statements":[{"expression":{"arguments":[{"arguments":[{"expression":{"id":4303,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"9341:3:18","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":4304,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"9341:10:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":4302,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9333:7:18","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":4301,"name":"address","nodeType":"ElementaryTypeName","src":"9333:7:18","typeDescriptions":{}}},"id":4305,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9333:19:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"id":4308,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"9378:4:18","typeDescriptions":{"typeIdentifier":"t_contract$_YieldFarm_$4836","typeString":"contract YieldFarm"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_YieldFarm_$4836","typeString":"contract YieldFarm"}],"id":4307,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9370:7:18","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":4306,"name":"address","nodeType":"ElementaryTypeName","src":"9370:7:18","typeDescriptions":{}}},"id":4309,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9370:13:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":4310,"name":"_amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4229,"src":"9401:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"expression":{"id":4296,"name":"pool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4241,"src":"9286:4:18","typeDescriptions":{"typeIdentifier":"t_struct$_PoolInfo_$3675_storage_ptr","typeString":"struct YieldFarm.PoolInfo storage pointer"}},"id":4299,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"lpToken","nodeType":"MemberAccess","referencedDeclaration":3666,"src":"9286:12:18","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1166","typeString":"contract IERC20"}},"id":4300,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"safeTransferFrom","nodeType":"MemberAccess","referencedDeclaration":1287,"src":"9286:29:18","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$1166_$_t_address_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20_$1166_$","typeString":"function (contract IERC20,address,address,uint256)"}},"id":4311,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9286:136:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4312,"nodeType":"ExpressionStatement","src":"9286:136:18"},{"expression":{"id":4321,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":4313,"name":"user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4248,"src":"9436:4:18","typeDescriptions":{"typeIdentifier":"t_struct$_UserInfo_$3663_storage_ptr","typeString":"struct YieldFarm.UserInfo storage pointer"}},"id":4315,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberName":"amount","nodeType":"MemberAccess","referencedDeclaration":3660,"src":"9436:11:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":4319,"name":"_amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4229,"src":"9466:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"expression":{"id":4316,"name":"user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4248,"src":"9450:4:18","typeDescriptions":{"typeIdentifier":"t_struct$_UserInfo_$3663_storage_ptr","typeString":"struct YieldFarm.UserInfo storage pointer"}},"id":4317,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"amount","nodeType":"MemberAccess","referencedDeclaration":3660,"src":"9450:11:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4318,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"add","nodeType":"MemberAccess","referencedDeclaration":3262,"src":"9450:15:18","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":4320,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9450:24:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9436:38:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4322,"nodeType":"ExpressionStatement","src":"9436:38:18"},{"expression":{"id":4327,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":4323,"name":"pool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4241,"src":"9488:4:18","typeDescriptions":{"typeIdentifier":"t_struct$_PoolInfo_$3675_storage_ptr","typeString":"struct YieldFarm.PoolInfo storage pointer"}},"id":4325,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberName":"totalStaked","nodeType":"MemberAccess","referencedDeclaration":3674,"src":"9488:16:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":4326,"name":"_amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4229,"src":"9508:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9488:27:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4328,"nodeType":"ExpressionStatement","src":"9488:27:18"}]}},{"expression":{"id":4343,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":4331,"name":"user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4248,"src":"9535:4:18","typeDescriptions":{"typeIdentifier":"t_struct$_UserInfo_$3663_storage_ptr","typeString":"struct YieldFarm.UserInfo storage pointer"}},"id":4333,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberName":"rewardDebt","nodeType":"MemberAccess","referencedDeclaration":3662,"src":"9535:15:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"hexValue":"31653138","id":4341,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9595:4:18","typeDescriptions":{"typeIdentifier":"t_rational_1000000000000000000_by_1","typeString":"int_const 1000000000000000000"},"value":"1e18"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_1000000000000000000_by_1","typeString":"int_const 1000000000000000000"}],"expression":{"arguments":[{"expression":{"id":4337,"name":"pool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4241,"src":"9569:4:18","typeDescriptions":{"typeIdentifier":"t_struct$_PoolInfo_$3675_storage_ptr","typeString":"struct YieldFarm.PoolInfo storage pointer"}},"id":4338,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"accSobaPerShare","nodeType":"MemberAccess","referencedDeclaration":3672,"src":"9569:20:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"expression":{"id":4334,"name":"user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4248,"src":"9553:4:18","typeDescriptions":{"typeIdentifier":"t_struct$_UserInfo_$3663_storage_ptr","typeString":"struct YieldFarm.UserInfo storage pointer"}},"id":4335,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"amount","nodeType":"MemberAccess","referencedDeclaration":3660,"src":"9553:11:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4336,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"mul","nodeType":"MemberAccess","referencedDeclaration":3292,"src":"9553:15:18","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":4339,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9553:37:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4340,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"div","nodeType":"MemberAccess","referencedDeclaration":3307,"src":"9553:41:18","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":4342,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9553:47:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9535:65:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4344,"nodeType":"ExpressionStatement","src":"9535:65:18"},{"eventCall":{"arguments":[{"expression":{"id":4346,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"9623:3:18","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":4347,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"9623:10:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":4348,"name":"_poolId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4227,"src":"9635:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4349,"name":"_amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4229,"src":"9644:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4345,"name":"Deposit","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3709,"src":"9615:7:18","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (address,uint256,uint256)"}},"id":4350,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9615:37:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4351,"nodeType":"EmitStatement","src":"9610:42:18"}]},"functionSelector":"e2bbb158","id":4353,"implemented":true,"kind":"function","modifiers":[],"name":"deposit","nameLocation":"8612:7:18","nodeType":"FunctionDefinition","parameters":{"id":4230,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4227,"mutability":"mutable","name":"_poolId","nameLocation":"8628:7:18","nodeType":"VariableDeclaration","scope":4353,"src":"8620:15:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4226,"name":"uint256","nodeType":"ElementaryTypeName","src":"8620:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4229,"mutability":"mutable","name":"_amount","nameLocation":"8645:7:18","nodeType":"VariableDeclaration","scope":4353,"src":"8637:15:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4228,"name":"uint256","nodeType":"ElementaryTypeName","src":"8637:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8619:34:18"},"returnParameters":{"id":4231,"nodeType":"ParameterList","parameters":[],"src":"8661:0:18"},"scope":4836,"src":"8603:1056:18","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":4478,"nodeType":"Block","src":"9724:785:18","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4363,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4361,"name":"_poolId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4355,"src":"9742:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":4362,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9753:1:18","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"9742:12:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"506f6f6c206d757374206578697374","id":4364,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"9756:17:18","typeDescriptions":{"typeIdentifier":"t_stringliteral_e0efbc0d56b19b3aff383dc01b2fe4a828ab58801c3c2318fa3a7efee8fef0a7","typeString":"literal_string \"Pool must exist\""},"value":"Pool must exist"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_e0efbc0d56b19b3aff383dc01b2fe4a828ab58801c3c2318fa3a7efee8fef0a7","typeString":"literal_string \"Pool must exist\""}],"id":4360,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"9734:7:18","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":4365,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9734:40:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4366,"nodeType":"ExpressionStatement","src":"9734:40:18"},{"assignments":[4369],"declarations":[{"constant":false,"id":4369,"mutability":"mutable","name":"pool","nameLocation":"9801:4:18","nodeType":"VariableDeclaration","scope":4478,"src":"9784:21:18","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_PoolInfo_$3675_storage_ptr","typeString":"struct YieldFarm.PoolInfo"},"typeName":{"id":4368,"nodeType":"UserDefinedTypeName","pathNode":{"id":4367,"name":"PoolInfo","nodeType":"IdentifierPath","referencedDeclaration":3675,"src":"9784:8:18"},"referencedDeclaration":3675,"src":"9784:8:18","typeDescriptions":{"typeIdentifier":"t_struct$_PoolInfo_$3675_storage_ptr","typeString":"struct YieldFarm.PoolInfo"}},"visibility":"internal"}],"id":4373,"initialValue":{"baseExpression":{"id":4370,"name":"poolInfo","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3689,"src":"9808:8:18","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_PoolInfo_$3675_storage_$dyn_storage","typeString":"struct YieldFarm.PoolInfo storage ref[] storage ref"}},"id":4372,"indexExpression":{"id":4371,"name":"_poolId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4355,"src":"9817:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"9808:17:18","typeDescriptions":{"typeIdentifier":"t_struct$_PoolInfo_$3675_storage","typeString":"struct YieldFarm.PoolInfo storage ref"}},"nodeType":"VariableDeclarationStatement","src":"9784:41:18"},{"assignments":[4376],"declarations":[{"constant":false,"id":4376,"mutability":"mutable","name":"user","nameLocation":"9852:4:18","nodeType":"VariableDeclaration","scope":4478,"src":"9835:21:18","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_UserInfo_$3663_storage_ptr","typeString":"struct YieldFarm.UserInfo"},"typeName":{"id":4375,"nodeType":"UserDefinedTypeName","pathNode":{"id":4374,"name":"UserInfo","nodeType":"IdentifierPath","referencedDeclaration":3663,"src":"9835:8:18"},"referencedDeclaration":3663,"src":"9835:8:18","typeDescriptions":{"typeIdentifier":"t_struct$_UserInfo_$3663_storage_ptr","typeString":"struct YieldFarm.UserInfo"}},"visibility":"internal"}],"id":4383,"initialValue":{"baseExpression":{"baseExpression":{"id":4377,"name":"userInfo","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3696,"src":"9859:8:18","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_struct$_UserInfo_$3663_storage_$_$","typeString":"mapping(uint256 => mapping(address => struct YieldFarm.UserInfo storage ref))"}},"id":4379,"indexExpression":{"id":4378,"name":"_poolId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4355,"src":"9868:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"9859:17:18","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_UserInfo_$3663_storage_$","typeString":"mapping(address => struct YieldFarm.UserInfo storage ref)"}},"id":4382,"indexExpression":{"expression":{"id":4380,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"9877:3:18","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":4381,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"9877:10:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"9859:29:18","typeDescriptions":{"typeIdentifier":"t_struct$_UserInfo_$3663_storage","typeString":"struct YieldFarm.UserInfo storage ref"}},"nodeType":"VariableDeclarationStatement","src":"9835:53:18"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4388,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":4385,"name":"user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4376,"src":"9906:4:18","typeDescriptions":{"typeIdentifier":"t_struct$_UserInfo_$3663_storage_ptr","typeString":"struct YieldFarm.UserInfo storage pointer"}},"id":4386,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"amount","nodeType":"MemberAccess","referencedDeclaration":3660,"src":"9906:11:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":4387,"name":"_amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4357,"src":"9921:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9906:22:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"457863656564","id":4389,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"9930:8:18","typeDescriptions":{"typeIdentifier":"t_stringliteral_320dea9014adfea159382a7b13b743fbbd5cd97df68133680e2a2950006966aa","typeString":"literal_string \"Exceed\""},"value":"Exceed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_320dea9014adfea159382a7b13b743fbbd5cd97df68133680e2a2950006966aa","typeString":"literal_string \"Exceed\""}],"id":4384,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"9898:7:18","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":4390,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9898:41:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4391,"nodeType":"ExpressionStatement","src":"9898:41:18"},{"expression":{"arguments":[{"id":4393,"name":"_poolId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4355,"src":"9961:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4392,"name":"updatePool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4225,"src":"9950:10:18","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_uint256_$returns$__$","typeString":"function (uint256)"}},"id":4394,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9950:19:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4395,"nodeType":"ExpressionStatement","src":"9950:19:18"},{"assignments":[4397],"declarations":[{"constant":false,"id":4397,"mutability":"mutable","name":"pending","nameLocation":"9987:7:18","nodeType":"VariableDeclaration","scope":4478,"src":"9979:15:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4396,"name":"uint256","nodeType":"ElementaryTypeName","src":"9979:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4411,"initialValue":{"arguments":[{"expression":{"id":4408,"name":"user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4376,"src":"10062:4:18","typeDescriptions":{"typeIdentifier":"t_struct$_UserInfo_$3663_storage_ptr","typeString":"struct YieldFarm.UserInfo storage pointer"}},"id":4409,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"rewardDebt","nodeType":"MemberAccess","referencedDeclaration":3662,"src":"10062:15:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"arguments":[{"hexValue":"31653138","id":4405,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10039:4:18","typeDescriptions":{"typeIdentifier":"t_rational_1000000000000000000_by_1","typeString":"int_const 1000000000000000000"},"value":"1e18"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_1000000000000000000_by_1","typeString":"int_const 1000000000000000000"}],"expression":{"arguments":[{"expression":{"id":4401,"name":"pool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4369,"src":"10013:4:18","typeDescriptions":{"typeIdentifier":"t_struct$_PoolInfo_$3675_storage_ptr","typeString":"struct YieldFarm.PoolInfo storage pointer"}},"id":4402,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"accSobaPerShare","nodeType":"MemberAccess","referencedDeclaration":3672,"src":"10013:20:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"expression":{"id":4398,"name":"user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4376,"src":"9997:4:18","typeDescriptions":{"typeIdentifier":"t_struct$_UserInfo_$3663_storage_ptr","typeString":"struct YieldFarm.UserInfo storage pointer"}},"id":4399,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"amount","nodeType":"MemberAccess","referencedDeclaration":3660,"src":"9997:11:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4400,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"mul","nodeType":"MemberAccess","referencedDeclaration":3292,"src":"9997:15:18","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":4403,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9997:37:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4404,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"div","nodeType":"MemberAccess","referencedDeclaration":3307,"src":"9997:41:18","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":4406,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9997:47:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4407,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sub","nodeType":"MemberAccess","referencedDeclaration":3277,"src":"9997:51:18","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":4410,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9997:90:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"9979:108:18"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4414,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4412,"name":"pending","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4397,"src":"10101:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":4413,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10111:1:18","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"10101:11:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4422,"nodeType":"IfStatement","src":"10097:79:18","trueBody":{"id":4421,"nodeType":"Block","src":"10114:62:18","statements":[{"expression":{"arguments":[{"expression":{"id":4416,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"10145:3:18","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":4417,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"10145:10:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":4418,"name":"pending","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4397,"src":"10157:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4415,"name":"safeSobaTransfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4817,"src":"10128:16:18","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":4419,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"10128:37:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4420,"nodeType":"ExpressionStatement","src":"10128:37:18"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4425,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4423,"name":"_amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4357,"src":"10189:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":4424,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10199:1:18","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"10189:11:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4456,"nodeType":"IfStatement","src":"10185:190:18","trueBody":{"id":4455,"nodeType":"Block","src":"10202:173:18","statements":[{"expression":{"id":4434,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":4426,"name":"user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4376,"src":"10216:4:18","typeDescriptions":{"typeIdentifier":"t_struct$_UserInfo_$3663_storage_ptr","typeString":"struct YieldFarm.UserInfo storage pointer"}},"id":4428,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberName":"amount","nodeType":"MemberAccess","referencedDeclaration":3660,"src":"10216:11:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":4432,"name":"_amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4357,"src":"10246:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"expression":{"id":4429,"name":"user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4376,"src":"10230:4:18","typeDescriptions":{"typeIdentifier":"t_struct$_UserInfo_$3663_storage_ptr","typeString":"struct YieldFarm.UserInfo storage pointer"}},"id":4430,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"amount","nodeType":"MemberAccess","referencedDeclaration":3660,"src":"10230:11:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4431,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sub","nodeType":"MemberAccess","referencedDeclaration":3277,"src":"10230:15:18","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":4433,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"10230:24:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10216:38:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4435,"nodeType":"ExpressionStatement","src":"10216:38:18"},{"expression":{"id":4440,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":4436,"name":"pool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4369,"src":"10268:4:18","typeDescriptions":{"typeIdentifier":"t_struct$_PoolInfo_$3675_storage_ptr","typeString":"struct YieldFarm.PoolInfo storage pointer"}},"id":4438,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberName":"totalStaked","nodeType":"MemberAccess","referencedDeclaration":3674,"src":"10268:16:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"-=","rightHandSide":{"id":4439,"name":"_amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4357,"src":"10288:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10268:27:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4441,"nodeType":"ExpressionStatement","src":"10268:27:18"},{"expression":{"arguments":[{"arguments":[{"expression":{"id":4449,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"10343:3:18","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":4450,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"10343:10:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":4448,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10335:7:18","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":4447,"name":"address","nodeType":"ElementaryTypeName","src":"10335:7:18","typeDescriptions":{}}},"id":4451,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"10335:19:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":4452,"name":"_amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4357,"src":"10356:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"expression":{"id":4442,"name":"pool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4369,"src":"10309:4:18","typeDescriptions":{"typeIdentifier":"t_struct$_PoolInfo_$3675_storage_ptr","typeString":"struct YieldFarm.PoolInfo storage pointer"}},"id":4445,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"lpToken","nodeType":"MemberAccess","referencedDeclaration":3666,"src":"10309:12:18","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1166","typeString":"contract IERC20"}},"id":4446,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"safeTransfer","nodeType":"MemberAccess","referencedDeclaration":1260,"src":"10309:25:18","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$1166_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20_$1166_$","typeString":"function (contract IERC20,address,uint256)"}},"id":4453,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"10309:55:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4454,"nodeType":"ExpressionStatement","src":"10309:55:18"}]}},{"expression":{"id":4469,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":4457,"name":"user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4376,"src":"10384:4:18","typeDescriptions":{"typeIdentifier":"t_struct$_UserInfo_$3663_storage_ptr","typeString":"struct YieldFarm.UserInfo storage pointer"}},"id":4459,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberName":"rewardDebt","nodeType":"MemberAccess","referencedDeclaration":3662,"src":"10384:15:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"hexValue":"31653138","id":4467,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10444:4:18","typeDescriptions":{"typeIdentifier":"t_rational_1000000000000000000_by_1","typeString":"int_const 1000000000000000000"},"value":"1e18"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_1000000000000000000_by_1","typeString":"int_const 1000000000000000000"}],"expression":{"arguments":[{"expression":{"id":4463,"name":"pool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4369,"src":"10418:4:18","typeDescriptions":{"typeIdentifier":"t_struct$_PoolInfo_$3675_storage_ptr","typeString":"struct YieldFarm.PoolInfo storage pointer"}},"id":4464,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"accSobaPerShare","nodeType":"MemberAccess","referencedDeclaration":3672,"src":"10418:20:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"expression":{"id":4460,"name":"user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4376,"src":"10402:4:18","typeDescriptions":{"typeIdentifier":"t_struct$_UserInfo_$3663_storage_ptr","typeString":"struct YieldFarm.UserInfo storage pointer"}},"id":4461,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"amount","nodeType":"MemberAccess","referencedDeclaration":3660,"src":"10402:11:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4462,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"mul","nodeType":"MemberAccess","referencedDeclaration":3292,"src":"10402:15:18","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":4465,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"10402:37:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4466,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"div","nodeType":"MemberAccess","referencedDeclaration":3307,"src":"10402:41:18","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":4468,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"10402:47:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10384:65:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4470,"nodeType":"ExpressionStatement","src":"10384:65:18"},{"eventCall":{"arguments":[{"expression":{"id":4472,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"10473:3:18","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":4473,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"10473:10:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":4474,"name":"_poolId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4355,"src":"10485:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4475,"name":"_amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4357,"src":"10494:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4471,"name":"Withdraw","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3717,"src":"10464:8:18","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (address,uint256,uint256)"}},"id":4476,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"10464:38:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4477,"nodeType":"EmitStatement","src":"10459:43:18"}]},"functionSelector":"441a3e70","id":4479,"implemented":true,"kind":"function","modifiers":[],"name":"withdraw","nameLocation":"9674:8:18","nodeType":"FunctionDefinition","parameters":{"id":4358,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4355,"mutability":"mutable","name":"_poolId","nameLocation":"9691:7:18","nodeType":"VariableDeclaration","scope":4479,"src":"9683:15:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4354,"name":"uint256","nodeType":"ElementaryTypeName","src":"9683:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4357,"mutability":"mutable","name":"_amount","nameLocation":"9708:7:18","nodeType":"VariableDeclaration","scope":4479,"src":"9700:15:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4356,"name":"uint256","nodeType":"ElementaryTypeName","src":"9700:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9682:34:18"},"returnParameters":{"id":4359,"nodeType":"ParameterList","parameters":[],"src":"9724:0:18"},"scope":4836,"src":"9665:844:18","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":4597,"nodeType":"Block","src":"10569:862:18","statements":[{"assignments":[4486],"declarations":[{"constant":false,"id":4486,"mutability":"mutable","name":"pool","nameLocation":"10596:4:18","nodeType":"VariableDeclaration","scope":4597,"src":"10579:21:18","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_PoolInfo_$3675_storage_ptr","typeString":"struct YieldFarm.PoolInfo"},"typeName":{"id":4485,"nodeType":"UserDefinedTypeName","pathNode":{"id":4484,"name":"PoolInfo","nodeType":"IdentifierPath","referencedDeclaration":3675,"src":"10579:8:18"},"referencedDeclaration":3675,"src":"10579:8:18","typeDescriptions":{"typeIdentifier":"t_struct$_PoolInfo_$3675_storage_ptr","typeString":"struct YieldFarm.PoolInfo"}},"visibility":"internal"}],"id":4490,"initialValue":{"baseExpression":{"id":4487,"name":"poolInfo","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3689,"src":"10603:8:18","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_PoolInfo_$3675_storage_$dyn_storage","typeString":"struct YieldFarm.PoolInfo storage ref[] storage ref"}},"id":4489,"indexExpression":{"hexValue":"30","id":4488,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10612:1:18","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"10603:11:18","typeDescriptions":{"typeIdentifier":"t_struct$_PoolInfo_$3675_storage","typeString":"struct YieldFarm.PoolInfo storage ref"}},"nodeType":"VariableDeclarationStatement","src":"10579:35:18"},{"assignments":[4493],"declarations":[{"constant":false,"id":4493,"mutability":"mutable","name":"user","nameLocation":"10641:4:18","nodeType":"VariableDeclaration","scope":4597,"src":"10624:21:18","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_UserInfo_$3663_storage_ptr","typeString":"struct YieldFarm.UserInfo"},"typeName":{"id":4492,"nodeType":"UserDefinedTypeName","pathNode":{"id":4491,"name":"UserInfo","nodeType":"IdentifierPath","referencedDeclaration":3663,"src":"10624:8:18"},"referencedDeclaration":3663,"src":"10624:8:18","typeDescriptions":{"typeIdentifier":"t_struct$_UserInfo_$3663_storage_ptr","typeString":"struct YieldFarm.UserInfo"}},"visibility":"internal"}],"id":4500,"initialValue":{"baseExpression":{"baseExpression":{"id":4494,"name":"userInfo","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3696,"src":"10648:8:18","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_struct$_UserInfo_$3663_storage_$_$","typeString":"mapping(uint256 => mapping(address => struct YieldFarm.UserInfo storage ref))"}},"id":4496,"indexExpression":{"hexValue":"30","id":4495,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10657:1:18","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"10648:11:18","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_UserInfo_$3663_storage_$","typeString":"mapping(address => struct YieldFarm.UserInfo storage ref)"}},"id":4499,"indexExpression":{"expression":{"id":4497,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"10660:3:18","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":4498,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"10660:10:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"10648:23:18","typeDescriptions":{"typeIdentifier":"t_struct$_UserInfo_$3663_storage","typeString":"struct YieldFarm.UserInfo storage ref"}},"nodeType":"VariableDeclarationStatement","src":"10624:47:18"},{"expression":{"arguments":[{"hexValue":"30","id":4502,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10693:1:18","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":4501,"name":"updatePool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4225,"src":"10682:10:18","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_uint256_$returns$__$","typeString":"function (uint256)"}},"id":4503,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"10682:13:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4504,"nodeType":"ExpressionStatement","src":"10682:13:18"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4508,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":4505,"name":"user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4493,"src":"10728:4:18","typeDescriptions":{"typeIdentifier":"t_struct$_UserInfo_$3663_storage_ptr","typeString":"struct YieldFarm.UserInfo storage pointer"}},"id":4506,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"amount","nodeType":"MemberAccess","referencedDeclaration":3660,"src":"10728:11:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":4507,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10742:1:18","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"10728:15:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4537,"nodeType":"IfStatement","src":"10724:300:18","trueBody":{"id":4536,"nodeType":"Block","src":"10745:279:18","statements":[{"assignments":[4510],"declarations":[{"constant":false,"id":4510,"mutability":"mutable","name":"pending","nameLocation":"10767:7:18","nodeType":"VariableDeclaration","scope":4536,"src":"10759:15:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4509,"name":"uint256","nodeType":"ElementaryTypeName","src":"10759:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4524,"initialValue":{"arguments":[{"expression":{"id":4521,"name":"user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4493,"src":"10897:4:18","typeDescriptions":{"typeIdentifier":"t_struct$_UserInfo_$3663_storage_ptr","typeString":"struct YieldFarm.UserInfo storage pointer"}},"id":4522,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"rewardDebt","nodeType":"MemberAccess","referencedDeclaration":3662,"src":"10897:15:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"arguments":[{"hexValue":"31653138","id":4518,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10870:4:18","typeDescriptions":{"typeIdentifier":"t_rational_1000000000000000000_by_1","typeString":"int_const 1000000000000000000"},"value":"1e18"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_1000000000000000000_by_1","typeString":"int_const 1000000000000000000"}],"expression":{"arguments":[{"expression":{"id":4514,"name":"pool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4486,"src":"10827:4:18","typeDescriptions":{"typeIdentifier":"t_struct$_PoolInfo_$3675_storage_ptr","typeString":"struct YieldFarm.PoolInfo storage pointer"}},"id":4515,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"accSobaPerShare","nodeType":"MemberAccess","referencedDeclaration":3672,"src":"10827:20:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"expression":{"id":4511,"name":"user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4493,"src":"10777:4:18","typeDescriptions":{"typeIdentifier":"t_struct$_UserInfo_$3663_storage_ptr","typeString":"struct YieldFarm.UserInfo storage pointer"}},"id":4512,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"amount","nodeType":"MemberAccess","referencedDeclaration":3660,"src":"10777:28:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4513,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"mul","nodeType":"MemberAccess","referencedDeclaration":3292,"src":"10777:49:18","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":4516,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"10777:71:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4517,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"div","nodeType":"MemberAccess","referencedDeclaration":3307,"src":"10777:92:18","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":4519,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"10777:98:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4520,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sub","nodeType":"MemberAccess","referencedDeclaration":3277,"src":"10777:119:18","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":4523,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"10777:136:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"10759:154:18"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4527,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4525,"name":"pending","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4510,"src":"10931:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":4526,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10941:1:18","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"10931:11:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4535,"nodeType":"IfStatement","src":"10927:87:18","trueBody":{"id":4534,"nodeType":"Block","src":"10944:70:18","statements":[{"expression":{"arguments":[{"expression":{"id":4529,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"10979:3:18","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":4530,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"10979:10:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":4531,"name":"pending","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4510,"src":"10991:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4528,"name":"safeSobaTransfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4817,"src":"10962:16:18","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":4532,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"10962:37:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4533,"nodeType":"ExpressionStatement","src":"10962:37:18"}]}}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4540,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4538,"name":"_amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4481,"src":"11037:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":4539,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11047:1:18","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"11037:11:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4575,"nodeType":"IfStatement","src":"11033:271:18","trueBody":{"id":4574,"nodeType":"Block","src":"11050:254:18","statements":[{"expression":{"arguments":[{"arguments":[{"expression":{"id":4548,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"11119:3:18","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":4549,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"11119:10:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":4547,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11111:7:18","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":4546,"name":"address","nodeType":"ElementaryTypeName","src":"11111:7:18","typeDescriptions":{}}},"id":4550,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"11111:19:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"id":4553,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"11156:4:18","typeDescriptions":{"typeIdentifier":"t_contract$_YieldFarm_$4836","typeString":"contract YieldFarm"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_YieldFarm_$4836","typeString":"contract YieldFarm"}],"id":4552,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11148:7:18","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":4551,"name":"address","nodeType":"ElementaryTypeName","src":"11148:7:18","typeDescriptions":{}}},"id":4554,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"11148:13:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":4555,"name":"_amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4481,"src":"11179:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"expression":{"id":4541,"name":"pool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4486,"src":"11064:4:18","typeDescriptions":{"typeIdentifier":"t_struct$_PoolInfo_$3675_storage_ptr","typeString":"struct YieldFarm.PoolInfo storage pointer"}},"id":4544,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"lpToken","nodeType":"MemberAccess","referencedDeclaration":3666,"src":"11064:12:18","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1166","typeString":"contract IERC20"}},"id":4545,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"safeTransferFrom","nodeType":"MemberAccess","referencedDeclaration":1287,"src":"11064:29:18","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$1166_$_t_address_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20_$1166_$","typeString":"function (contract IERC20,address,address,uint256)"}},"id":4556,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"11064:136:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4557,"nodeType":"ExpressionStatement","src":"11064:136:18"},{"expression":{"id":4562,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":4558,"name":"pool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4486,"src":"11214:4:18","typeDescriptions":{"typeIdentifier":"t_struct$_PoolInfo_$3675_storage_ptr","typeString":"struct YieldFarm.PoolInfo storage pointer"}},"id":4560,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberName":"totalStaked","nodeType":"MemberAccess","referencedDeclaration":3674,"src":"11214:16:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":4561,"name":"_amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4481,"src":"11234:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11214:27:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4563,"nodeType":"ExpressionStatement","src":"11214:27:18"},{"expression":{"id":4572,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":4564,"name":"user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4493,"src":"11255:4:18","typeDescriptions":{"typeIdentifier":"t_struct$_UserInfo_$3663_storage_ptr","typeString":"struct YieldFarm.UserInfo storage pointer"}},"id":4566,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberName":"amount","nodeType":"MemberAccess","referencedDeclaration":3660,"src":"11255:11:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":4570,"name":"_amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4481,"src":"11285:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"expression":{"id":4567,"name":"user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4493,"src":"11269:4:18","typeDescriptions":{"typeIdentifier":"t_struct$_UserInfo_$3663_storage_ptr","typeString":"struct YieldFarm.UserInfo storage pointer"}},"id":4568,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"amount","nodeType":"MemberAccess","referencedDeclaration":3660,"src":"11269:11:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4569,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"add","nodeType":"MemberAccess","referencedDeclaration":3262,"src":"11269:15:18","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":4571,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"11269:24:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11255:38:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4573,"nodeType":"ExpressionStatement","src":"11255:38:18"}]}},{"expression":{"id":4588,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":4576,"name":"user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4493,"src":"11313:4:18","typeDescriptions":{"typeIdentifier":"t_struct$_UserInfo_$3663_storage_ptr","typeString":"struct YieldFarm.UserInfo storage pointer"}},"id":4578,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberName":"rewardDebt","nodeType":"MemberAccess","referencedDeclaration":3662,"src":"11313:15:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"hexValue":"31653138","id":4586,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11373:4:18","typeDescriptions":{"typeIdentifier":"t_rational_1000000000000000000_by_1","typeString":"int_const 1000000000000000000"},"value":"1e18"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_1000000000000000000_by_1","typeString":"int_const 1000000000000000000"}],"expression":{"arguments":[{"expression":{"id":4582,"name":"pool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4486,"src":"11347:4:18","typeDescriptions":{"typeIdentifier":"t_struct$_PoolInfo_$3675_storage_ptr","typeString":"struct YieldFarm.PoolInfo storage pointer"}},"id":4583,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"accSobaPerShare","nodeType":"MemberAccess","referencedDeclaration":3672,"src":"11347:20:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"expression":{"id":4579,"name":"user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4493,"src":"11331:4:18","typeDescriptions":{"typeIdentifier":"t_struct$_UserInfo_$3663_storage_ptr","typeString":"struct YieldFarm.UserInfo storage pointer"}},"id":4580,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"amount","nodeType":"MemberAccess","referencedDeclaration":3660,"src":"11331:11:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4581,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"mul","nodeType":"MemberAccess","referencedDeclaration":3292,"src":"11331:15:18","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":4584,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"11331:37:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4585,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"div","nodeType":"MemberAccess","referencedDeclaration":3307,"src":"11331:41:18","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":4587,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"11331:47:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11313:65:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4589,"nodeType":"ExpressionStatement","src":"11313:65:18"},{"eventCall":{"arguments":[{"expression":{"id":4591,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"11401:3:18","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":4592,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"11401:10:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"hexValue":"30","id":4593,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11413:1:18","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"id":4594,"name":"_amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4481,"src":"11416:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4590,"name":"Deposit","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3709,"src":"11393:7:18","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (address,uint256,uint256)"}},"id":4595,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"11393:31:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4596,"nodeType":"EmitStatement","src":"11388:36:18"}]},"functionSelector":"1dbb2a22","id":4598,"implemented":true,"kind":"function","modifiers":[],"name":"staking","nameLocation":"10537:7:18","nodeType":"FunctionDefinition","parameters":{"id":4482,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4481,"mutability":"mutable","name":"_amount","nameLocation":"10553:7:18","nodeType":"VariableDeclaration","scope":4598,"src":"10545:15:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4480,"name":"uint256","nodeType":"ElementaryTypeName","src":"10545:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10544:17:18"},"returnParameters":{"id":4483,"nodeType":"ParameterList","parameters":[],"src":"10569:0:18"},"scope":4836,"src":"10528:903:18","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":4714,"nodeType":"Block","src":"11510:729:18","statements":[{"assignments":[4605],"declarations":[{"constant":false,"id":4605,"mutability":"mutable","name":"pool","nameLocation":"11537:4:18","nodeType":"VariableDeclaration","scope":4714,"src":"11520:21:18","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_PoolInfo_$3675_storage_ptr","typeString":"struct YieldFarm.PoolInfo"},"typeName":{"id":4604,"nodeType":"UserDefinedTypeName","pathNode":{"id":4603,"name":"PoolInfo","nodeType":"IdentifierPath","referencedDeclaration":3675,"src":"11520:8:18"},"referencedDeclaration":3675,"src":"11520:8:18","typeDescriptions":{"typeIdentifier":"t_struct$_PoolInfo_$3675_storage_ptr","typeString":"struct YieldFarm.PoolInfo"}},"visibility":"internal"}],"id":4609,"initialValue":{"baseExpression":{"id":4606,"name":"poolInfo","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3689,"src":"11544:8:18","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_PoolInfo_$3675_storage_$dyn_storage","typeString":"struct YieldFarm.PoolInfo storage ref[] storage ref"}},"id":4608,"indexExpression":{"hexValue":"30","id":4607,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11553:1:18","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"11544:11:18","typeDescriptions":{"typeIdentifier":"t_struct$_PoolInfo_$3675_storage","typeString":"struct YieldFarm.PoolInfo storage ref"}},"nodeType":"VariableDeclarationStatement","src":"11520:35:18"},{"assignments":[4612],"declarations":[{"constant":false,"id":4612,"mutability":"mutable","name":"user","nameLocation":"11600:4:18","nodeType":"VariableDeclaration","scope":4714,"src":"11583:21:18","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_UserInfo_$3663_storage_ptr","typeString":"struct YieldFarm.UserInfo"},"typeName":{"id":4611,"nodeType":"UserDefinedTypeName","pathNode":{"id":4610,"name":"UserInfo","nodeType":"IdentifierPath","referencedDeclaration":3663,"src":"11583:8:18"},"referencedDeclaration":3663,"src":"11583:8:18","typeDescriptions":{"typeIdentifier":"t_struct$_UserInfo_$3663_storage_ptr","typeString":"struct YieldFarm.UserInfo"}},"visibility":"internal"}],"id":4619,"initialValue":{"baseExpression":{"baseExpression":{"id":4613,"name":"userInfo","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3696,"src":"11607:8:18","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_struct$_UserInfo_$3663_storage_$_$","typeString":"mapping(uint256 => mapping(address => struct YieldFarm.UserInfo storage ref))"}},"id":4615,"indexExpression":{"hexValue":"30","id":4614,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11616:1:18","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"11607:11:18","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_UserInfo_$3663_storage_$","typeString":"mapping(address => struct YieldFarm.UserInfo storage ref)"}},"id":4618,"indexExpression":{"expression":{"id":4616,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"11619:3:18","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":4617,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"11619:10:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"11607:23:18","typeDescriptions":{"typeIdentifier":"t_struct$_UserInfo_$3663_storage","typeString":"struct YieldFarm.UserInfo storage ref"}},"nodeType":"VariableDeclarationStatement","src":"11583:47:18"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4624,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":4621,"name":"user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4612,"src":"11648:4:18","typeDescriptions":{"typeIdentifier":"t_struct$_UserInfo_$3663_storage_ptr","typeString":"struct YieldFarm.UserInfo storage pointer"}},"id":4622,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"amount","nodeType":"MemberAccess","referencedDeclaration":3660,"src":"11648:11:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":4623,"name":"_amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4600,"src":"11663:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11648:22:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"457863656564","id":4625,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"11672:8:18","typeDescriptions":{"typeIdentifier":"t_stringliteral_320dea9014adfea159382a7b13b743fbbd5cd97df68133680e2a2950006966aa","typeString":"literal_string \"Exceed\""},"value":"Exceed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_320dea9014adfea159382a7b13b743fbbd5cd97df68133680e2a2950006966aa","typeString":"literal_string \"Exceed\""}],"id":4620,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"11640:7:18","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":4626,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"11640:41:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4627,"nodeType":"ExpressionStatement","src":"11640:41:18"},{"expression":{"arguments":[{"hexValue":"30","id":4629,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11702:1:18","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":4628,"name":"updatePool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4225,"src":"11691:10:18","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_uint256_$returns$__$","typeString":"function (uint256)"}},"id":4630,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"11691:13:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4631,"nodeType":"ExpressionStatement","src":"11691:13:18"},{"assignments":[4633],"declarations":[{"constant":false,"id":4633,"mutability":"mutable","name":"pending","nameLocation":"11722:7:18","nodeType":"VariableDeclaration","scope":4714,"src":"11714:15:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4632,"name":"uint256","nodeType":"ElementaryTypeName","src":"11714:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4647,"initialValue":{"arguments":[{"expression":{"id":4644,"name":"user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4612,"src":"11797:4:18","typeDescriptions":{"typeIdentifier":"t_struct$_UserInfo_$3663_storage_ptr","typeString":"struct YieldFarm.UserInfo storage pointer"}},"id":4645,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"rewardDebt","nodeType":"MemberAccess","referencedDeclaration":3662,"src":"11797:15:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"arguments":[{"hexValue":"31653138","id":4641,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11774:4:18","typeDescriptions":{"typeIdentifier":"t_rational_1000000000000000000_by_1","typeString":"int_const 1000000000000000000"},"value":"1e18"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_1000000000000000000_by_1","typeString":"int_const 1000000000000000000"}],"expression":{"arguments":[{"expression":{"id":4637,"name":"pool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4605,"src":"11748:4:18","typeDescriptions":{"typeIdentifier":"t_struct$_PoolInfo_$3675_storage_ptr","typeString":"struct YieldFarm.PoolInfo storage pointer"}},"id":4638,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"accSobaPerShare","nodeType":"MemberAccess","referencedDeclaration":3672,"src":"11748:20:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"expression":{"id":4634,"name":"user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4612,"src":"11732:4:18","typeDescriptions":{"typeIdentifier":"t_struct$_UserInfo_$3663_storage_ptr","typeString":"struct YieldFarm.UserInfo storage pointer"}},"id":4635,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"amount","nodeType":"MemberAccess","referencedDeclaration":3660,"src":"11732:11:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4636,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"mul","nodeType":"MemberAccess","referencedDeclaration":3292,"src":"11732:15:18","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":4639,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"11732:37:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4640,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"div","nodeType":"MemberAccess","referencedDeclaration":3307,"src":"11732:41:18","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":4642,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"11732:47:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4643,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sub","nodeType":"MemberAccess","referencedDeclaration":3277,"src":"11732:51:18","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":4646,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"11732:90:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"11714:108:18"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4650,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4648,"name":"pending","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4633,"src":"11836:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":4649,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11846:1:18","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"11836:11:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4658,"nodeType":"IfStatement","src":"11832:79:18","trueBody":{"id":4657,"nodeType":"Block","src":"11849:62:18","statements":[{"expression":{"arguments":[{"expression":{"id":4652,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"11880:3:18","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":4653,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"11880:10:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":4654,"name":"pending","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4633,"src":"11892:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4651,"name":"safeSobaTransfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4817,"src":"11863:16:18","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":4655,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"11863:37:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4656,"nodeType":"ExpressionStatement","src":"11863:37:18"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4661,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4659,"name":"_amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4600,"src":"11925:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":4660,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11935:1:18","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"11925:11:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4692,"nodeType":"IfStatement","src":"11921:190:18","trueBody":{"id":4691,"nodeType":"Block","src":"11938:173:18","statements":[{"expression":{"id":4666,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":4662,"name":"pool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4605,"src":"11952:4:18","typeDescriptions":{"typeIdentifier":"t_struct$_PoolInfo_$3675_storage_ptr","typeString":"struct YieldFarm.PoolInfo storage pointer"}},"id":4664,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberName":"totalStaked","nodeType":"MemberAccess","referencedDeclaration":3674,"src":"11952:16:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"-=","rightHandSide":{"id":4665,"name":"_amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4600,"src":"11972:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11952:27:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4667,"nodeType":"ExpressionStatement","src":"11952:27:18"},{"expression":{"id":4676,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":4668,"name":"user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4612,"src":"11993:4:18","typeDescriptions":{"typeIdentifier":"t_struct$_UserInfo_$3663_storage_ptr","typeString":"struct YieldFarm.UserInfo storage pointer"}},"id":4670,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberName":"amount","nodeType":"MemberAccess","referencedDeclaration":3660,"src":"11993:11:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":4674,"name":"_amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4600,"src":"12023:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"expression":{"id":4671,"name":"user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4612,"src":"12007:4:18","typeDescriptions":{"typeIdentifier":"t_struct$_UserInfo_$3663_storage_ptr","typeString":"struct YieldFarm.UserInfo storage pointer"}},"id":4672,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"amount","nodeType":"MemberAccess","referencedDeclaration":3660,"src":"12007:11:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4673,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sub","nodeType":"MemberAccess","referencedDeclaration":3277,"src":"12007:15:18","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":4675,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"12007:24:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11993:38:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4677,"nodeType":"ExpressionStatement","src":"11993:38:18"},{"expression":{"arguments":[{"arguments":[{"expression":{"id":4685,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"12079:3:18","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":4686,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"12079:10:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":4684,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12071:7:18","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":4683,"name":"address","nodeType":"ElementaryTypeName","src":"12071:7:18","typeDescriptions":{}}},"id":4687,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"12071:19:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":4688,"name":"_amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4600,"src":"12092:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"expression":{"id":4678,"name":"pool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4605,"src":"12045:4:18","typeDescriptions":{"typeIdentifier":"t_struct$_PoolInfo_$3675_storage_ptr","typeString":"struct YieldFarm.PoolInfo storage pointer"}},"id":4681,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"lpToken","nodeType":"MemberAccess","referencedDeclaration":3666,"src":"12045:12:18","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1166","typeString":"contract IERC20"}},"id":4682,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"safeTransfer","nodeType":"MemberAccess","referencedDeclaration":1260,"src":"12045:25:18","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$1166_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20_$1166_$","typeString":"function (contract IERC20,address,uint256)"}},"id":4689,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"12045:55:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4690,"nodeType":"ExpressionStatement","src":"12045:55:18"}]}},{"expression":{"id":4705,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":4693,"name":"user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4612,"src":"12120:4:18","typeDescriptions":{"typeIdentifier":"t_struct$_UserInfo_$3663_storage_ptr","typeString":"struct YieldFarm.UserInfo storage pointer"}},"id":4695,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberName":"rewardDebt","nodeType":"MemberAccess","referencedDeclaration":3662,"src":"12120:15:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"hexValue":"31653138","id":4703,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12180:4:18","typeDescriptions":{"typeIdentifier":"t_rational_1000000000000000000_by_1","typeString":"int_const 1000000000000000000"},"value":"1e18"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_1000000000000000000_by_1","typeString":"int_const 1000000000000000000"}],"expression":{"arguments":[{"expression":{"id":4699,"name":"pool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4605,"src":"12154:4:18","typeDescriptions":{"typeIdentifier":"t_struct$_PoolInfo_$3675_storage_ptr","typeString":"struct YieldFarm.PoolInfo storage pointer"}},"id":4700,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"accSobaPerShare","nodeType":"MemberAccess","referencedDeclaration":3672,"src":"12154:20:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"expression":{"id":4696,"name":"user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4612,"src":"12138:4:18","typeDescriptions":{"typeIdentifier":"t_struct$_UserInfo_$3663_storage_ptr","typeString":"struct YieldFarm.UserInfo storage pointer"}},"id":4697,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"amount","nodeType":"MemberAccess","referencedDeclaration":3660,"src":"12138:11:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4698,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"mul","nodeType":"MemberAccess","referencedDeclaration":3292,"src":"12138:15:18","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":4701,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"12138:37:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4702,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"div","nodeType":"MemberAccess","referencedDeclaration":3307,"src":"12138:41:18","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":4704,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"12138:47:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12120:65:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4706,"nodeType":"ExpressionStatement","src":"12120:65:18"},{"eventCall":{"arguments":[{"expression":{"id":4708,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"12209:3:18","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":4709,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"12209:10:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"hexValue":"30","id":4710,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12221:1:18","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"id":4711,"name":"_amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4600,"src":"12224:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4707,"name":"Withdraw","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3717,"src":"12200:8:18","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (address,uint256,uint256)"}},"id":4712,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"12200:32:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4713,"nodeType":"EmitStatement","src":"12195:37:18"}]},"functionSelector":"1058d281","id":4715,"implemented":true,"kind":"function","modifiers":[],"name":"leaveStaking","nameLocation":"11473:12:18","nodeType":"FunctionDefinition","parameters":{"id":4601,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4600,"mutability":"mutable","name":"_amount","nameLocation":"11494:7:18","nodeType":"VariableDeclaration","scope":4715,"src":"11486:15:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4599,"name":"uint256","nodeType":"ElementaryTypeName","src":"11486:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11485:17:18"},"returnParameters":{"id":4602,"nodeType":"ParameterList","parameters":[],"src":"11510:0:18"},"scope":4836,"src":"11464:775:18","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":4778,"nodeType":"Block","src":"12356:351:18","statements":[{"assignments":[4722],"declarations":[{"constant":false,"id":4722,"mutability":"mutable","name":"pool","nameLocation":"12383:4:18","nodeType":"VariableDeclaration","scope":4778,"src":"12366:21:18","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_PoolInfo_$3675_storage_ptr","typeString":"struct YieldFarm.PoolInfo"},"typeName":{"id":4721,"nodeType":"UserDefinedTypeName","pathNode":{"id":4720,"name":"PoolInfo","nodeType":"IdentifierPath","referencedDeclaration":3675,"src":"12366:8:18"},"referencedDeclaration":3675,"src":"12366:8:18","typeDescriptions":{"typeIdentifier":"t_struct$_PoolInfo_$3675_storage_ptr","typeString":"struct YieldFarm.PoolInfo"}},"visibility":"internal"}],"id":4726,"initialValue":{"baseExpression":{"id":4723,"name":"poolInfo","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3689,"src":"12390:8:18","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_PoolInfo_$3675_storage_$dyn_storage","typeString":"struct YieldFarm.PoolInfo storage ref[] storage ref"}},"id":4725,"indexExpression":{"id":4724,"name":"_poolId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4717,"src":"12399:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"12390:17:18","typeDescriptions":{"typeIdentifier":"t_struct$_PoolInfo_$3675_storage","typeString":"struct YieldFarm.PoolInfo storage ref"}},"nodeType":"VariableDeclarationStatement","src":"12366:41:18"},{"assignments":[4729],"declarations":[{"constant":false,"id":4729,"mutability":"mutable","name":"user","nameLocation":"12434:4:18","nodeType":"VariableDeclaration","scope":4778,"src":"12417:21:18","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_UserInfo_$3663_storage_ptr","typeString":"struct YieldFarm.UserInfo"},"typeName":{"id":4728,"nodeType":"UserDefinedTypeName","pathNode":{"id":4727,"name":"UserInfo","nodeType":"IdentifierPath","referencedDeclaration":3663,"src":"12417:8:18"},"referencedDeclaration":3663,"src":"12417:8:18","typeDescriptions":{"typeIdentifier":"t_struct$_UserInfo_$3663_storage_ptr","typeString":"struct YieldFarm.UserInfo"}},"visibility":"internal"}],"id":4736,"initialValue":{"baseExpression":{"baseExpression":{"id":4730,"name":"userInfo","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3696,"src":"12441:8:18","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_struct$_UserInfo_$3663_storage_$_$","typeString":"mapping(uint256 => mapping(address => struct YieldFarm.UserInfo storage ref))"}},"id":4732,"indexExpression":{"id":4731,"name":"_poolId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4717,"src":"12450:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"12441:17:18","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_UserInfo_$3663_storage_$","typeString":"mapping(address => struct YieldFarm.UserInfo storage ref)"}},"id":4735,"indexExpression":{"expression":{"id":4733,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"12459:3:18","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":4734,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"12459:10:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"12441:29:18","typeDescriptions":{"typeIdentifier":"t_struct$_UserInfo_$3663_storage","typeString":"struct YieldFarm.UserInfo storage ref"}},"nodeType":"VariableDeclarationStatement","src":"12417:53:18"},{"expression":{"arguments":[{"arguments":[{"expression":{"id":4744,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"12514:3:18","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":4745,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"12514:10:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":4743,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12506:7:18","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":4742,"name":"address","nodeType":"ElementaryTypeName","src":"12506:7:18","typeDescriptions":{}}},"id":4746,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"12506:19:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":4747,"name":"user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4729,"src":"12527:4:18","typeDescriptions":{"typeIdentifier":"t_struct$_UserInfo_$3663_storage_ptr","typeString":"struct YieldFarm.UserInfo storage pointer"}},"id":4748,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"amount","nodeType":"MemberAccess","referencedDeclaration":3660,"src":"12527:11:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"expression":{"id":4737,"name":"pool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4722,"src":"12480:4:18","typeDescriptions":{"typeIdentifier":"t_struct$_PoolInfo_$3675_storage_ptr","typeString":"struct YieldFarm.PoolInfo storage pointer"}},"id":4740,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"lpToken","nodeType":"MemberAccess","referencedDeclaration":3666,"src":"12480:12:18","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1166","typeString":"contract IERC20"}},"id":4741,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"safeTransfer","nodeType":"MemberAccess","referencedDeclaration":1260,"src":"12480:25:18","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$1166_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20_$1166_$","typeString":"function (contract IERC20,address,uint256)"}},"id":4749,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"12480:59:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4750,"nodeType":"ExpressionStatement","src":"12480:59:18"},{"expression":{"id":4756,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":4751,"name":"pool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4722,"src":"12549:4:18","typeDescriptions":{"typeIdentifier":"t_struct$_PoolInfo_$3675_storage_ptr","typeString":"struct YieldFarm.PoolInfo storage pointer"}},"id":4753,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberName":"totalStaked","nodeType":"MemberAccess","referencedDeclaration":3674,"src":"12549:16:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"-=","rightHandSide":{"expression":{"id":4754,"name":"user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4729,"src":"12569:4:18","typeDescriptions":{"typeIdentifier":"t_struct$_UserInfo_$3663_storage_ptr","typeString":"struct YieldFarm.UserInfo storage pointer"}},"id":4755,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"amount","nodeType":"MemberAccess","referencedDeclaration":3660,"src":"12569:11:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12549:31:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4757,"nodeType":"ExpressionStatement","src":"12549:31:18"},{"eventCall":{"arguments":[{"expression":{"id":4759,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"12613:3:18","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":4760,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"12613:10:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":4761,"name":"_poolId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4717,"src":"12625:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":4762,"name":"user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4729,"src":"12634:4:18","typeDescriptions":{"typeIdentifier":"t_struct$_UserInfo_$3663_storage_ptr","typeString":"struct YieldFarm.UserInfo storage pointer"}},"id":4763,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"amount","nodeType":"MemberAccess","referencedDeclaration":3660,"src":"12634:11:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4758,"name":"EmergencyWithdraw","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3725,"src":"12595:17:18","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (address,uint256,uint256)"}},"id":4764,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"12595:51:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4765,"nodeType":"EmitStatement","src":"12590:56:18"},{"expression":{"id":4770,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":4766,"name":"user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4729,"src":"12656:4:18","typeDescriptions":{"typeIdentifier":"t_struct$_UserInfo_$3663_storage_ptr","typeString":"struct YieldFarm.UserInfo storage pointer"}},"id":4768,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberName":"amount","nodeType":"MemberAccess","referencedDeclaration":3660,"src":"12656:11:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"30","id":4769,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12670:1:18","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"12656:15:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4771,"nodeType":"ExpressionStatement","src":"12656:15:18"},{"expression":{"id":4776,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":4772,"name":"user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4729,"src":"12681:4:18","typeDescriptions":{"typeIdentifier":"t_struct$_UserInfo_$3663_storage_ptr","typeString":"struct YieldFarm.UserInfo storage pointer"}},"id":4774,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberName":"rewardDebt","nodeType":"MemberAccess","referencedDeclaration":3662,"src":"12681:15:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"30","id":4775,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12699:1:18","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"12681:19:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4777,"nodeType":"ExpressionStatement","src":"12681:19:18"}]},"functionSelector":"5312ea8e","id":4779,"implemented":true,"kind":"function","modifiers":[],"name":"emergencyWithdraw","nameLocation":"12314:17:18","nodeType":"FunctionDefinition","parameters":{"id":4718,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4717,"mutability":"mutable","name":"_poolId","nameLocation":"12340:7:18","nodeType":"VariableDeclaration","scope":4779,"src":"12332:15:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4716,"name":"uint256","nodeType":"ElementaryTypeName","src":"12332:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12331:17:18"},"returnParameters":{"id":4719,"nodeType":"ParameterList","parameters":[],"src":"12356:0:18"},"scope":4836,"src":"12305:402:18","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":4816,"nodeType":"Block","src":"12813:224:18","statements":[{"assignments":[4787],"declarations":[{"constant":false,"id":4787,"mutability":"mutable","name":"sobaBalance","nameLocation":"12831:11:18","nodeType":"VariableDeclaration","scope":4816,"src":"12823:19:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4786,"name":"uint256","nodeType":"ElementaryTypeName","src":"12823:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4795,"initialValue":{"arguments":[{"arguments":[{"id":4792,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"12870:4:18","typeDescriptions":{"typeIdentifier":"t_contract$_YieldFarm_$4836","typeString":"contract YieldFarm"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_YieldFarm_$4836","typeString":"contract YieldFarm"}],"id":4791,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12862:7:18","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":4790,"name":"address","nodeType":"ElementaryTypeName","src":"12862:7:18","typeDescriptions":{}}},"id":4793,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"12862:13:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":4788,"name":"sobaja","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3678,"src":"12845:6:18","typeDescriptions":{"typeIdentifier":"t_contract$_SobaToken_$3641","typeString":"contract SobaToken"}},"id":4789,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"balanceOf","nodeType":"MemberAccess","referencedDeclaration":600,"src":"12845:16:18","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$returns$_t_uint256_$","typeString":"function (address) view external returns (uint256)"}},"id":4794,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"12845:31:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"12823:53:18"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4798,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4796,"name":"_amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4783,"src":"12890:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":4797,"name":"sobaBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4787,"src":"12900:11:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12890:21:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":4814,"nodeType":"Block","src":"12977:54:18","statements":[{"expression":{"arguments":[{"id":4810,"name":"_to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4781,"src":"13007:3:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":4811,"name":"_amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4783,"src":"13012:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":4807,"name":"sobaja","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3678,"src":"12991:6:18","typeDescriptions":{"typeIdentifier":"t_contract$_SobaToken_$3641","typeString":"contract SobaToken"}},"id":4809,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"transfer","nodeType":"MemberAccess","referencedDeclaration":625,"src":"12991:15:18","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) external returns (bool)"}},"id":4812,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"12991:29:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4813,"nodeType":"ExpressionStatement","src":"12991:29:18"}]},"id":4815,"nodeType":"IfStatement","src":"12886:145:18","trueBody":{"id":4806,"nodeType":"Block","src":"12913:58:18","statements":[{"expression":{"arguments":[{"id":4802,"name":"_to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4781,"src":"12943:3:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":4803,"name":"sobaBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4787,"src":"12948:11:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":4799,"name":"sobaja","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3678,"src":"12927:6:18","typeDescriptions":{"typeIdentifier":"t_contract$_SobaToken_$3641","typeString":"contract SobaToken"}},"id":4801,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"transfer","nodeType":"MemberAccess","referencedDeclaration":625,"src":"12927:15:18","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) external returns (bool)"}},"id":4804,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"12927:33:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4805,"nodeType":"ExpressionStatement","src":"12927:33:18"}]}}]},"id":4817,"implemented":true,"kind":"function","modifiers":[],"name":"safeSobaTransfer","nameLocation":"12757:16:18","nodeType":"FunctionDefinition","parameters":{"id":4784,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4781,"mutability":"mutable","name":"_to","nameLocation":"12782:3:18","nodeType":"VariableDeclaration","scope":4817,"src":"12774:11:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4780,"name":"address","nodeType":"ElementaryTypeName","src":"12774:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4783,"mutability":"mutable","name":"_amount","nameLocation":"12795:7:18","nodeType":"VariableDeclaration","scope":4817,"src":"12787:15:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4782,"name":"uint256","nodeType":"ElementaryTypeName","src":"12787:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12773:30:18"},"returnParameters":{"id":4785,"nodeType":"ParameterList","parameters":[],"src":"12813:0:18"},"scope":4836,"src":"12748:289:18","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":4834,"nodeType":"Block","src":"13107:104:18","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":4826,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":4823,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"13125:3:18","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":4824,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"13125:10:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":4825,"name":"devAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3680,"src":"13139:10:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"13125:24:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"41646472657373206e6f742073617469736679","id":4827,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"13151:21:18","typeDescriptions":{"typeIdentifier":"t_stringliteral_cb0325f5b958e34a013bcb3af51d63ec6f0e2f54077dd6b00dd93dab2642f2c0","typeString":"literal_string \"Address not satisfy\""},"value":"Address not satisfy"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_cb0325f5b958e34a013bcb3af51d63ec6f0e2f54077dd6b00dd93dab2642f2c0","typeString":"literal_string \"Address not satisfy\""}],"id":4822,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"13117:7:18","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":4828,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"13117:56:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4829,"nodeType":"ExpressionStatement","src":"13117:56:18"},{"expression":{"id":4832,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4830,"name":"devAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3680,"src":"13183:10:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":4831,"name":"_devaddr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4819,"src":"13196:8:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"13183:21:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":4833,"nodeType":"ExpressionStatement","src":"13183:21:18"}]},"functionSelector":"8d88a90e","id":4835,"implemented":true,"kind":"function","modifiers":[],"name":"dev","nameLocation":"13078:3:18","nodeType":"FunctionDefinition","parameters":{"id":4820,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4819,"mutability":"mutable","name":"_devaddr","nameLocation":"13090:8:18","nodeType":"VariableDeclaration","scope":4835,"src":"13082:16:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4818,"name":"address","nodeType":"ElementaryTypeName","src":"13082:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"13081:18:18"},"returnParameters":{"id":4821,"nodeType":"ParameterList","parameters":[],"src":"13107:0:18"},"scope":4836,"src":"13069:142:18","stateMutability":"nonpayable","virtual":false,"visibility":"public"}],"scope":4837,"src":"382:12831:18","usedErrors":[]}],"src":"39:13175:18"}},"contracts/interfaces/ERC20Token.sol":{"id":19,"ast":{"absolutePath":"contracts/interfaces/ERC20Token.sol","exportedSymbols":{},"id":4838,"nodeType":"SourceUnit","nodes":[],"src":"0:0:19"}}},"contracts":{"@openzeppelin/contracts/access/AccessControl.sol":{"AccessControl":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"role","type":"bytes32"},{"indexed":true,"internalType":"bytes32","name":"previousAdminRole","type":"bytes32"},{"indexed":true,"internalType":"bytes32","name":"newAdminRole","type":"bytes32"}],"name":"RoleAdminChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"role","type":"bytes32"},{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":true,"internalType":"address","name":"sender","type":"address"}],"name":"RoleGranted","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"role","type":"bytes32"},{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":true,"internalType":"address","name":"sender","type":"address"}],"name":"RoleRevoked","type":"event"},{"inputs":[],"name":"DEFAULT_ADMIN_ROLE","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"}],"name":"getRoleAdmin","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"grantRole","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"hasRole","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"renounceRole","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"revokeRole","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"}],"metadata":"{\"compiler\":{\"version\":\"0.8.9+commit.e5eed63a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"previousAdminRole\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"newAdminRole\",\"type\":\"bytes32\"}],\"name\":\"RoleAdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleGranted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleRevoked\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"DEFAULT_ADMIN_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleAdmin\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"grantRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"renounceRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"revokeRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module that allows children to implement role-based access control mechanisms. This is a lightweight version that doesn't allow enumerating role members except through off-chain means by accessing the contract event logs. Some applications may benefit from on-chain enumerability, for those cases see {AccessControlEnumerable}. Roles are referred to by their `bytes32` identifier. These should be exposed in the external API and be unique. The best way to achieve this is by using `public constant` hash digests: ```solidity bytes32 public constant MY_ROLE = keccak256(\\\"MY_ROLE\\\"); ``` Roles can be used to represent a set of permissions. To restrict access to a function call, use {hasRole}: ```solidity function foo() public {     require(hasRole(MY_ROLE, msg.sender));     ... } ``` Roles can be granted and revoked dynamically via the {grantRole} and {revokeRole} functions. Each role has an associated admin role, and only accounts that have a role's admin role can call {grantRole} and {revokeRole}. By default, the admin role for all roles is `DEFAULT_ADMIN_ROLE`, which means that only accounts with this role will be able to grant or revoke other roles. More complex role relationships can be created by using {_setRoleAdmin}. WARNING: The `DEFAULT_ADMIN_ROLE` is also its own admin: it has permission to grant and revoke this role. Extra precautions should be taken to secure accounts that have been granted it. We recommend using {AccessControlDefaultAdminRules} to enforce additional security measures for this role.\",\"kind\":\"dev\",\"methods\":{\"getRoleAdmin(bytes32)\":{\"details\":\"Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}.\"},\"grantRole(bytes32,address)\":{\"details\":\"Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleGranted} event.\"},\"hasRole(bytes32,address)\":{\"details\":\"Returns `true` if `account` has been granted `role`.\"},\"renounceRole(bytes32,address)\":{\"details\":\"Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been revoked `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `account`. May emit a {RoleRevoked} event.\"},\"revokeRole(bytes32,address)\":{\"details\":\"Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleRevoked} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/AccessControl.sol\":\"AccessControl\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"details\":{\"constantOptimizer\":false,\"cse\":true,\"deduplicate\":true,\"inliner\":true,\"jumpdestRemover\":true,\"orderLiterals\":true,\"peephole\":true,\"yul\":true,\"yulDetails\":{\"optimizerSteps\":\"dhfoDgvulfnTUtnIf[xarrscLMcCTUtTOntnfDIulLculVcul jjTpeulxarulrulxarrcLgvifCTUcarrLsTFOtfDncarrIulc]jmuljuljul VcTOcul jmul\",\"stackAllocation\":true}},\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/AccessControl.sol\":{\"keccak256\":\"0x0dd6e52cb394d7f5abe5dca2d4908a6be40417914720932de757de34a99ab87f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://dc117ce50ea746cab6b97ed1a1facee17a715ae0cb95d67b943dacbaf15176fb\",\"dweb:/ipfs/QmYRZ2UGNYwsHwfNu7Wjr8L2j1LBZ1mKv6NvbwgterYMXc\"]},\"@openzeppelin/contracts/access/IAccessControl.sol\":{\"keccak256\":\"0x59ce320a585d7e1f163cd70390a0ef2ff9cec832e2aa544293a00692465a7a57\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bb2c137c343ef0c4c7ce7b18c1d108afdc9d315a04e48307288d2d05adcbde3a\",\"dweb:/ipfs/QmUxhrAQM3MM3FF5j7AtcXLXguWCJBHJ14BRdVtuoQc8Fh\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x3088eb2868e8d13d89d16670b5f8612c4ab9ff8956272837d8e90106c59c14a0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b81d9ff6559ea5c47fc573e17ece6d9ba5d6839e213e6ebc3b4c5c8fe4199d7f\",\"dweb:/ipfs/QmPCW1bFisUzJkyjroY3yipwfism9RRCigCcK1hbXtVM8n\"]},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0xd10975de010d89fd1c78dc5e8a9a7e7f496198085c151648f20cba166b32582b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fb0048dee081f6fffa5f74afc3fb328483c2a30504e94a0ddd2a5114d731ec4d\",\"dweb:/ipfs/QmZptt1nmYoA5SgjwnSgWqgUSDgm4q52Yos3xhnMv3MV43\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0xe4455ac1eb7fc497bb7402579e7b4d64d928b846fce7d2b6fde06d366f21c2b3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cc8841b3cd48ad125e2f46323c8bad3aa0e88e399ec62acb9e57efa7e7c8058c\",\"dweb:/ipfs/QmSqE4mXHA2BXW58deDbXE8MTcsL5JSKNDbm23sVQxRLPS\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0xf92515413956f529d95977adc9b0567d583c6203fc31ab1c23824c35187e3ddc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c50fcc459e49a9858b6d8ad5f911295cb7c9ab57567845a250bf0153f84a95c7\",\"dweb:/ipfs/QmcEW85JRzvDkQggxiBBLVAasXWdkhEysqypj9EaB6H2g6\"]}},\"version\":1}","evm":{"legacyAssembly":null,"assembly":null,"bytecode":null,"methodIdentifiers":{"DEFAULT_ADMIN_ROLE()":"a217fddf","getRoleAdmin(bytes32)":"248a9ca3","grantRole(bytes32,address)":"2f2ff15d","hasRole(bytes32,address)":"91d14854","renounceRole(bytes32,address)":"36568abe","revokeRole(bytes32,address)":"d547741f","supportsInterface(bytes4)":"01ffc9a7"}},"irOptimized":""}},"@openzeppelin/contracts/access/IAccessControl.sol":{"IAccessControl":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"role","type":"bytes32"},{"indexed":true,"internalType":"bytes32","name":"previousAdminRole","type":"bytes32"},{"indexed":true,"internalType":"bytes32","name":"newAdminRole","type":"bytes32"}],"name":"RoleAdminChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"role","type":"bytes32"},{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":true,"internalType":"address","name":"sender","type":"address"}],"name":"RoleGranted","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"role","type":"bytes32"},{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":true,"internalType":"address","name":"sender","type":"address"}],"name":"RoleRevoked","type":"event"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"}],"name":"getRoleAdmin","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"grantRole","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"hasRole","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"renounceRole","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"revokeRole","outputs":[],"stateMutability":"nonpayable","type":"function"}],"metadata":"{\"compiler\":{\"version\":\"0.8.9+commit.e5eed63a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"previousAdminRole\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"newAdminRole\",\"type\":\"bytes32\"}],\"name\":\"RoleAdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleGranted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleRevoked\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleAdmin\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"grantRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"renounceRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"revokeRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"External interface of AccessControl declared to support ERC165 detection.\",\"events\":{\"RoleAdminChanged(bytes32,bytes32,bytes32)\":{\"details\":\"Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted signaling this. _Available since v3.1._\"},\"RoleGranted(bytes32,address,address)\":{\"details\":\"Emitted when `account` is granted `role`. `sender` is the account that originated the contract call, an admin role bearer except when using {AccessControl-_setupRole}.\"},\"RoleRevoked(bytes32,address,address)\":{\"details\":\"Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)\"}},\"kind\":\"dev\",\"methods\":{\"getRoleAdmin(bytes32)\":{\"details\":\"Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {AccessControl-_setRoleAdmin}.\"},\"grantRole(bytes32,address)\":{\"details\":\"Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role.\"},\"hasRole(bytes32,address)\":{\"details\":\"Returns `true` if `account` has been granted `role`.\"},\"renounceRole(bytes32,address)\":{\"details\":\"Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `account`.\"},\"revokeRole(bytes32,address)\":{\"details\":\"Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/IAccessControl.sol\":\"IAccessControl\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"details\":{\"constantOptimizer\":false,\"cse\":true,\"deduplicate\":true,\"inliner\":true,\"jumpdestRemover\":true,\"orderLiterals\":true,\"peephole\":true,\"yul\":true,\"yulDetails\":{\"optimizerSteps\":\"dhfoDgvulfnTUtnIf[xarrscLMcCTUtTOntnfDIulLculVcul jjTpeulxarulrulxarrcLgvifCTUcarrLsTFOtfDncarrIulc]jmuljuljul VcTOcul jmul\",\"stackAllocation\":true}},\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/IAccessControl.sol\":{\"keccak256\":\"0x59ce320a585d7e1f163cd70390a0ef2ff9cec832e2aa544293a00692465a7a57\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bb2c137c343ef0c4c7ce7b18c1d108afdc9d315a04e48307288d2d05adcbde3a\",\"dweb:/ipfs/QmUxhrAQM3MM3FF5j7AtcXLXguWCJBHJ14BRdVtuoQc8Fh\"]}},\"version\":1}","evm":{"legacyAssembly":null,"assembly":null,"bytecode":null,"methodIdentifiers":{"getRoleAdmin(bytes32)":"248a9ca3","grantRole(bytes32,address)":"2f2ff15d","hasRole(bytes32,address)":"91d14854","renounceRole(bytes32,address)":"36568abe","revokeRole(bytes32,address)":"d547741f"}},"irOptimized":""}},"@openzeppelin/contracts/access/Ownable.sol":{"Ownable":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"renounceOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"newOwner","type":"address"}],"name":"transferOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"}],"metadata":"{\"compiler\":{\"version\":\"0.8.9+commit.e5eed63a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. By default, the owner account will be the one that deploys the contract. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/Ownable.sol\":\"Ownable\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"details\":{\"constantOptimizer\":false,\"cse\":true,\"deduplicate\":true,\"inliner\":true,\"jumpdestRemover\":true,\"orderLiterals\":true,\"peephole\":true,\"yul\":true,\"yulDetails\":{\"optimizerSteps\":\"dhfoDgvulfnTUtnIf[xarrscLMcCTUtTOntnfDIulLculVcul jjTpeulxarulrulxarrcLgvifCTUcarrLsTFOtfDncarrIulc]jmuljuljul VcTOcul jmul\",\"stackAllocation\":true}},\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xba43b97fba0d32eb4254f6a5a297b39a19a247082a02d6e69349e071e2946218\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fc980984badf3984b6303b377711220e067722bbd6a135b24669ff5069ef9f32\",\"dweb:/ipfs/QmPHXMSXj99XjSVM21YsY6aNtLLjLVXDbyN76J5HQYvvrz\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]}},\"version\":1}","evm":{"legacyAssembly":null,"assembly":null,"bytecode":null,"methodIdentifiers":{"owner()":"8da5cb5b","renounceOwnership()":"715018a6","transferOwnership(address)":"f2fde38b"}},"irOptimized":""}},"@openzeppelin/contracts/token/ERC20/ERC20.sol":{"ERC20":{"abi":[{"inputs":[{"internalType":"string","name":"name_","type":"string"},{"internalType":"string","name":"symbol_","type":"string"}],"stateMutability":"nonpayable","type":"constructor"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"decimals","outputs":[{"internalType":"uint8","name":"","type":"uint8"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"subtractedValue","type":"uint256"}],"name":"decreaseAllowance","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"addedValue","type":"uint256"}],"name":"increaseAllowance","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"}],"metadata":{"optimizer_settings":"M3B3","solc_metadata":"{\"compiler\":{\"version\":\"0.8.9+commit.e5eed63a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name_\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"symbol_\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. For a generic mechanism see {ERC20PresetMinterPauser}. TIP: For a detailed writeup see our guide https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. The default value of {decimals} is 18. To change this, you should override this function so it returns a different value. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC20 applications. Additionally, an {Approval} event is emitted on calls to {transferFrom}. This allows applications to reconstruct the allowance for all accounts just by listening to said events. Other implementations of the EIP may not emit these events, as it isn't required by the specification. Finally, the non-standard {decreaseAllowance} and {increaseAllowance} functions have been added to mitigate the well-known issues around setting allowances. See {IERC20-approve}.\",\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"constructor\":{\"details\":\"Sets the values for {name} and {symbol}. All two of these values are immutable: they can only be set once during construction.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"decreaseAllowance(address,uint256)\":{\"details\":\"Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`.\"},\"increaseAllowance(address,uint256)\":{\"details\":\"Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `amount`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `amount`. - the caller must have allowance for ``from``'s tokens of at least `amount`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":\"ERC20\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"details\":{\"constantOptimizer\":false,\"cse\":true,\"deduplicate\":true,\"inliner\":true,\"jumpdestRemover\":true,\"orderLiterals\":true,\"peephole\":true,\"yul\":true,\"yulDetails\":{\"optimizerSteps\":\"dhfoDgvulfnTUtnIf[xarrscLMcCTUtTOntnfDIulLculVcul jjTpeulxarulrulxarrcLgvifCTUcarrLsTFOtfDncarrIulc]jmuljuljul VcTOcul jmul\",\"stackAllocation\":true}},\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0xa56ca923f70c1748830700250b19c61b70db9a683516dc5e216694a50445d99c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cac938788bc4be12101e59d45588b4e059579f4e61062e1cda8d6b06c0191b15\",\"dweb:/ipfs/QmV2JKCyjTVH3rkWNrfdJRhAT7tZ3usAN2XcnD4h53Mvih\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x287b55befed2961a7eabd7d7b1b2839cbca8a5b80ef8dcbb25ed3d4c2002c305\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bd39944e8fc06be6dbe2dd1d8449b5336e23c6a7ba3e8e9ae5ae0f37f35283f5\",\"dweb:/ipfs/QmPV3FGYjVwvKSgAXKUN3r9T9GwniZz83CxBpM7vyj2G53\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x8de418a5503946cabe331f35fe242d3201a73f67f77aaeb7110acb1f30423aca\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a376d3dda2cb70536c0a45c208b29b34ac560c4cb4f513a42079f96ba47d2dd\",\"dweb:/ipfs/QmZQg6gn1sUpM8wHzwNvSnihumUCAhxD119MpXeKp8B9s8\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]}},\"version\":1}","zk_version":"1.3.13"},"evm":{"legacyAssembly":null,"assembly":"\t.text\n\t.file\t\"ERC20.sol:ERC20\"\n\t.globl\t__entry\n__entry:\n.func_begin0:\n\tnop\tstack+=[7]\n\tptr.add\tr1, r0, stack[@ptr_calldata]\n\tshr.s\t96, r1, r1\n\tand\t@CPI0_0[0], r1, stack[@calldatasize]\n\tadd\t128, r0, r1\n\tst.1\t64, r1\n\tand!\t1, r2, r1\n\tjump.ne\t@.BB0_1\n\tadd\tstack[@calldatasize], r0, r1\n\tsub.s!\t4, r1, r1\n\tjump.lt\t@.BB0_2\n\tptr.add\tstack[@ptr_calldata], r0, r1\n\tld\tr1, r1\n\tshr.s\t224, r1, r1\n\tsub.s!\t@CPI0_7[0], r1, r2\n\tjump.le\t@.BB0_55\n\tsub.s!\t@CPI0_8[0], r1, r2\n\tjump.gt\t@.BB0_65\n\tsub.s!\t@CPI0_12[0], r1, r2\n\tjump.eq\t@.BB0_81\n\tsub.s!\t@CPI0_13[0], r1, r2\n\tjump.eq\t@.BB0_83\n\tsub.s!\t@CPI0_14[0], r1, r1\n\tjump.ne\t@.BB0_2\n\tcontext.get_context_u128\tr1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_2\n\tsub.s\t4, r0, r1\n\tadd\tstack[@calldatasize], r1, r1\n\tadd\t@CPI0_2[0], r0, r2\n\tsub!\tr1, r0, r3\n\tadd\tr0, r0, r3\n\tadd.lt\tr2, r0, r3\n\tand\t@CPI0_2[0], r1, r1\n\tsub!\tr1, r0, r4\n\tadd.le\tr0, r0, r2\n\tsub.s!\t@CPI0_2[0], r1, r1\n\tadd\tr3, r0, r1\n\tadd.eq\tr2, r0, r1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_2\n\tnear_call\tr0, @copy_array_from_storage_to_memory_string, @DEFAULT_UNWIND\n\tadd\tr1, r0, r2\n\tld.1\t64, r1\n\tadd\tr1, r0, stack-[7]\n\tnear_call\tr0, @abi_encode_string, @DEFAULT_UNWIND\n\tadd\tstack-[7], r0, r4\n\tsub\tr1, r4, r1\n\tadd\t@CPI0_0[0], r0, r2\n\tsub.s!\t@CPI0_0[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tsub.s!\t@CPI0_0[0], r4, r3\n\tadd.lt\tr4, r0, r2\n\tshl.s\t64, r2, r2\n\tshl.s\t96, r1, r1\n\tor\tr1, r2, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_1:\n\tcontext.get_context_u128\tr1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_2\n\tadd\tstack[@calldatasize], r0, r2\n\tadd\t31, r2, r1\n\tsub.s\t32, r0, r10\n\tand\tr1, r10, r4\n\tld.1\t64, r1\n\tadd\tr4, r1, r3\n\tsub!\tr3, r4, r4\n\tadd\t0, r0, r4\n\tadd.lt\t1, r0, r4\n\tsub.s!\t@CPI0_1[0], r3, r5\n\tjump.gt\t@.BB0_5\n\tand!\t1, r4, r4\n\tjump.ne\t@.BB0_5\n\tst.1\t64, r3\n\tand\t31, r2, r3\n\tptr.add\tstack[@ptr_calldata], r0, r4\n\tshr.s!\t5, r2, r5\n\tjump.eq\t@.BB0_94\n\tadd\tr0, r0, r6\n.BB0_8:\n\tshl.s\t5, r6, r7\n\tadd\tr1, r7, r8\n\tptr.add\tr4, r7, r7\n\tld\tr7, r7\n\tst.1\tr8, r7\n\tadd\t1, r6, r6\n\tsub!\tr6, r5, r7\n\tjump.lt\t@.BB0_8\n.BB0_94:\n\tsub!\tr3, r0, r6\n\tjump.eq\t@.BB0_10\n\tshl.s\t5, r5, r5\n\tptr.add\tr4, r5, r4\n\tadd\tr1, r5, r5\n\tshl.s\t3, r3, r3\n\tld.1\tr5, r6\n\tshl\tr6, r3, r6\n\tshr\tr6, r3, r6\n\tld\tr4, r4\n\tsub\t256, r3, r3\n\tshr\tr4, r3, r4\n\tshl\tr4, r3, r3\n\tor\tr3, r6, r3\n\tst.1\tr5, r3\n.BB0_10:\n\tadd\t@CPI0_2[0], r0, r3\n\tsub.s!\t64, r2, r4\n\tadd\tr0, r0, r4\n\tadd.lt\tr3, r0, r4\n\tand\t@CPI0_2[0], r2, r5\n\tsub!\tr5, r0, r6\n\tadd.le\tr0, r0, r3\n\tsub.s!\t@CPI0_2[0], r5, r5\n\tadd.ne\tr4, r0, r3\n\tsub!\tr3, r0, r3\n\tjump.ne\t@.BB0_2\n\tld.1.inc\tr1, r4, r3\n\tsub.s!\t@CPI0_1[0], r4, r5\n\tjump.gt\t@.BB0_2\n\tadd\tr1, r2, r2\n\tadd\tr4, r1, r4\n\tadd\t31, r4, r5\n\tadd\t@CPI0_2[0], r0, r6\n\tsub!\tr5, r2, r7\n\tadd\tr0, r0, r7\n\tadd.ge\tr6, r0, r7\n\tand\t@CPI0_2[0], r5, r5\n\tand\t@CPI0_2[0], r2, r8\n\tsub!\tr5, r8, r9\n\tadd.ge\tr0, r0, r6\n\txor\tr5, r8, r5\n\tsub.s!\t@CPI0_2[0], r5, r5\n\tadd\tr7, r0, r5\n\tadd.eq\tr6, r0, r5\n\tsub!\tr5, r0, r5\n\tjump.ne\t@.BB0_2\n\tld.1\tr4, r5\n\tsub.s!\t@CPI0_1[0], r5, r6\n\tjump.le\t@.BB0_14\n.BB0_5:\n\tadd\t@CPI0_5[0], r0, r1\n\tst.1\t0, r1\n\tadd\t65, r0, r1\n\tst.1\t4, r1\n\tadd\t@CPI0_6[0], r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB0_55:\n\tsub.s!\t@CPI0_15[0], r1, r2\n\tjump.le\t@.BB0_56\n\tsub.s!\t@CPI0_16[0], r1, r2\n\tjump.eq\t@.BB0_73\n\tsub.s!\t@CPI0_17[0], r1, r2\n\tjump.eq\t@.BB0_76\n\tsub.s!\t@CPI0_18[0], r1, r1\n\tjump.ne\t@.BB0_2\n\tcontext.get_context_u128\tr1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_2\n\tsub.s\t4, r0, r1\n\tadd\tstack[@calldatasize], r1, r1\n\tadd\t@CPI0_2[0], r0, r2\n\tsub!\tr1, r0, r3\n\tadd\tr0, r0, r3\n\tadd.lt\tr2, r0, r3\n\tand\t@CPI0_2[0], r1, r1\n\tsub!\tr1, r0, r4\n\tadd.le\tr0, r0, r2\n\tsub.s!\t@CPI0_2[0], r1, r1\n\tadd\tr3, r0, r1\n\tadd.eq\tr2, r0, r1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_2\n\tld.1\t64, r1\n\tadd\t18, r0, r2\n\tst.1\tr1, r2\n\tadd\t@CPI0_0[0], r0, r2\n\tsub.s!\t@CPI0_0[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI0_21[0], r1, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_65:\n\tsub.s!\t@CPI0_9[0], r1, r2\n\tjump.eq\t@.BB0_88\n\tsub.s!\t@CPI0_10[0], r1, r2\n\tjump.eq\t@.BB0_90\n\tsub.s!\t@CPI0_11[0], r1, r1\n\tjump.ne\t@.BB0_2\n\tcontext.get_context_u128\tr1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_2\n\tadd\tstack[@calldatasize], r0, r1\n\tnear_call\tr0, @abi_decode_addresst_address, @DEFAULT_UNWIND\n\tadd\tr2, r0, stack-[7]\n\tnear_call\tr0, @mapping_index_access_mapping_address_uint256_of_address_2492, @DEFAULT_UNWIND\n\tadd\tstack-[7], r0, r2\n\tnear_call\tr0, @mapping_index_access_mapping_address_uint256_of_address, @DEFAULT_UNWIND\n\tsload\tr1, r1\n\tld.1\t64, r2\n\tst.1\tr2, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI0_21[0], r1, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_56:\n\tsub.s!\t@CPI0_19[0], r1, r2\n\tjump.eq\t@.BB0_68\n\tsub.s!\t@CPI0_20[0], r1, r1\n\tjump.ne\t@.BB0_2\n\tcontext.get_context_u128\tr1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_2\n\tadd\tstack[@calldatasize], r0, r1\n\tnear_call\tr0, @abi_decode_addresst_uint256, @DEFAULT_UNWIND\n\tnear_call\tr0, @fun_approve, @DEFAULT_UNWIND\n\tadd\t1, r0, r1\n\tld.1\t64, r2\n\tst.1\tr2, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI0_21[0], r1, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_81:\n\tcontext.get_context_u128\tr1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_2\n\tadd\tstack[@calldatasize], r0, r1\n\tnear_call\tr0, @abi_decode_addresst_uint256, @DEFAULT_UNWIND\n\tnear_call\tr0, @fun_increaseAllowance, @DEFAULT_UNWIND\n\tadd\t1, r0, r1\n\tld.1\t64, r2\n\tst.1\tr2, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI0_21[0], r1, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_83:\n\tcontext.get_context_u128\tr1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_2\n\tadd\tstack[@calldatasize], r0, r1\n\tnear_call\tr0, @abi_decode_address, @DEFAULT_UNWIND\n\tnear_call\tr0, @fun_balanceOf, @DEFAULT_UNWIND\n\tld.1\t64, r2\n\tst.1\tr2, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI0_21[0], r1, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_73:\n\tcontext.get_context_u128\tr1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_2\n\tsub.s\t4, r0, r1\n\tadd\tstack[@calldatasize], r1, r1\n\tadd\t@CPI0_2[0], r0, r2\n\tsub!\tr1, r0, r3\n\tadd\tr0, r0, r3\n\tadd.lt\tr2, r0, r3\n\tand\t@CPI0_2[0], r1, r1\n\tsub!\tr1, r0, r4\n\tadd.le\tr0, r0, r2\n\tsub.s!\t@CPI0_2[0], r1, r1\n\tadd\tr3, r0, r1\n\tadd.eq\tr2, r0, r1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_2\n\tadd\t2, r0, r1\n\tsload\tr1, r1\n\tld.1\t64, r2\n\tst.1\tr2, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI0_21[0], r1, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_76:\n\tcontext.get_context_u128\tr1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_2\n\tadd\tstack[@calldatasize], r0, r1\n\tnear_call\tr0, @abi_decode_addresst_addresst_uint256, @DEFAULT_UNWIND\n\tnear_call\tr0, @fun_transferFrom, @DEFAULT_UNWIND\n\tadd\t1, r0, r1\n\tld.1\t64, r2\n\tst.1\tr2, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI0_21[0], r1, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_88:\n\tcontext.get_context_u128\tr1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_2\n\tadd\tstack[@calldatasize], r0, r1\n\tnear_call\tr0, @abi_decode_addresst_uint256, @DEFAULT_UNWIND\n\tnear_call\tr0, @fun_decreaseAllowance, @DEFAULT_UNWIND\n\tadd\t1, r0, r1\n\tld.1\t64, r2\n\tst.1\tr2, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI0_21[0], r1, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_90:\n\tcontext.get_context_u128\tr1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_2\n\tadd\tstack[@calldatasize], r0, r1\n\tnear_call\tr0, @abi_decode_addresst_uint256, @DEFAULT_UNWIND\n\tnear_call\tr0, @fun_transfer, @DEFAULT_UNWIND\n\tadd\t1, r0, r1\n\tld.1\t64, r2\n\tst.1\tr2, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI0_21[0], r1, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_68:\n\tcontext.get_context_u128\tr1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_2\n\tsub.s\t4, r0, r1\n\tadd\tstack[@calldatasize], r1, r1\n\tadd\t@CPI0_2[0], r0, r2\n\tsub!\tr1, r0, r3\n\tadd\tr0, r0, r3\n\tadd.lt\tr2, r0, r3\n\tand\t@CPI0_2[0], r1, r1\n\tsub!\tr1, r0, r4\n\tadd.le\tr0, r0, r2\n\tsub.s!\t@CPI0_2[0], r1, r1\n\tadd\tr3, r0, r1\n\tadd.eq\tr2, r0, r1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_2\n\tnear_call\tr0, @copy_array_from_storage_to_memory_string_2479, @DEFAULT_UNWIND\n\tadd\tr1, r0, r2\n\tld.1\t64, r1\n\tadd\tr1, r0, stack-[7]\n\tnear_call\tr0, @abi_encode_string, @DEFAULT_UNWIND\n\tadd\tstack-[7], r0, r4\n\tsub\tr1, r4, r1\n\tadd\t@CPI0_0[0], r0, r2\n\tsub.s!\t@CPI0_0[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tsub.s!\t@CPI0_0[0], r4, r3\n\tadd.lt\tr4, r0, r2\n\tshl.s\t64, r2, r2\n\tshl.s\t96, r1, r1\n\tor\tr1, r2, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_14:\n\tadd\t63, r5, r6\n\tand\tr6, r10, r6\n\tld.1\t64, r11\n\tadd\tr11, r6, r6\n\tsub!\tr6, r11, r7\n\tadd\t0, r0, r7\n\tadd.lt\t1, r0, r7\n\tsub.s!\t@CPI0_1[0], r6, r8\n\tjump.gt\t@.BB0_5\n\tand!\t1, r7, r7\n\tjump.ne\t@.BB0_5\n\tst.1\t64, r6\n\tst.1.inc\tr11, r5, r12\n\tadd\t32, r5, r6\n\tadd\tr6, r4, r7\n\tsub!\tr7, r2, r7\n\tjump.gt\t@.BB0_2\n\tsub!\tr5, r0, r7\n\tjump.eq\t@.BB0_22\n\tadd\tr0, r0, r7\n.BB0_19:\n\tadd\t32, r7, r7\n\tadd\tr7, r11, r8\n\tadd\tr7, r4, r9\n\tld.1\tr9, r9\n\tst.1\tr8, r9\n\tsub!\tr7, r5, r8\n\tjump.lt\t@.BB0_19\n\tsub!\tr7, r5, r4\n\tjump.le\t@.BB0_22\n\tadd\tr11, r6, r4\n\tst.1\tr4, r0\n.BB0_22:\n\tld.1\tr3, r3\n\tsub.s!\t@CPI0_1[0], r3, r4\n\tjump.gt\t@.BB0_2\n\tadd\tr3, r1, r1\n\tadd\t31, r1, r3\n\tadd\t@CPI0_2[0], r0, r4\n\tsub!\tr3, r2, r5\n\tadd\tr0, r0, r5\n\tadd.ge\tr4, r0, r5\n\tand\t@CPI0_2[0], r3, r3\n\tand\t@CPI0_2[0], r2, r6\n\tsub!\tr3, r6, r7\n\tadd.ge\tr0, r0, r4\n\txor\tr3, r6, r3\n\tsub.s!\t@CPI0_2[0], r3, r3\n\tadd\tr5, r0, r3\n\tadd.eq\tr4, r0, r3\n\tsub!\tr3, r0, r3\n\tjump.ne\t@.BB0_2\n\tld.1\tr1, r3\n\tsub.s!\t@CPI0_1[0], r3, r4\n\tjump.gt\t@.BB0_5\n\tadd\t63, r3, r4\n\tand\tr4, r10, r4\n\tld.1\t64, r7\n\tadd\tr7, r4, r4\n\tsub!\tr4, r7, r5\n\tadd\t0, r0, r5\n\tadd.lt\t1, r0, r5\n\tsub.s!\t@CPI0_1[0], r4, r6\n\tjump.gt\t@.BB0_5\n\tand!\t1, r5, r5\n\tjump.ne\t@.BB0_5\n\tst.1\t64, r4\n\tst.1\tr7, r3\n\tadd\t32, r3, r4\n\tadd\tr4, r1, r5\n\tsub!\tr5, r2, r2\n\tjump.le\t@.BB0_28\n.BB0_2:\n\tadd\tr0, r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB0_28:\n\tadd\tr12, r0, stack-[4]\n\tadd\tr11, r0, stack-[7]\n\tadd\tr10, r0, stack-[5]\n\tsub!\tr3, r0, r2\n\tjump.eq\t@.BB0_33\n\tadd\tr0, r0, r2\n.BB0_30:\n\tadd\t32, r2, r2\n\tadd\tr2, r7, r5\n\tadd\tr2, r1, r6\n\tld.1\tr6, r6\n\tst.1\tr5, r6\n\tsub!\tr2, r3, r5\n\tjump.lt\t@.BB0_30\n\tsub!\tr2, r3, r1\n\tjump.le\t@.BB0_33\n\tadd\tr7, r4, r1\n\tst.1\tr1, r0\n.BB0_33:\n\tadd\tstack-[7], r0, r1\n\tld.1\tr1, r1\n\tadd\tr1, r0, stack-[6]\n\tsub.s!\t@CPI0_1[0], r1, r1\n\tjump.gt\t@.BB0_5\n\tadd\tr7, r0, stack-[1]\n\tadd\t3, r0, r1\n\tadd\tr1, r0, stack-[3]\n\tsload\tr1, r1\n\tand!\t1, r1, r2\n\tshr.s\t1, r1, r1\n\tand\t127, r1, r3\n\tadd.eq\tr3, r0, r1\n\tadd\tr1, r0, stack-[2]\n\tsub.s!\t31, r1, r1\n\tadd\t0, r0, r1\n\tadd.gt\t1, r0, r1\n\tand\t1, r1, r1\n\tsub!\tr2, r1, r1\n\tjump.eq\t@.BB0_36\n\tadd\t@CPI0_5[0], r0, r1\n\tst.1\t0, r1\n\tadd\t34, r0, r1\n\tst.1\t4, r1\n\tadd\t@CPI0_6[0], r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB0_36:\n\tadd\tstack-[2], r0, r1\n\tsub.s!\t32, r1, r1\n\tjump.lt\t@.BB0_41\n\tadd\tstack-[3], r0, r1\n\tst.1\t0, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_3[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tadd\tstack-[6], r0, r3\n\tadd\t31, r3, r2\n\tshr.s\t5, r2, r2\n\tsub.s!\t32, r3, r3\n\tadd.lt\tr0, r0, r2\n\tld\tr1, r3\n\tadd\tstack-[2], r0, r1\n\tadd\t31, r1, r1\n\tshr.s\t5, r1, r1\n\tadd\tr3, r1, r1\n\tadd\tr3, r2, r2\n\tsub!\tr2, r1, r3\n\tjump.ge\t@.BB0_41\n.BB0_40:\n\tsstore\tr2, r0\n\tadd\t1, r2, r2\n\tsub!\tr2, r1, r3\n\tjump.lt\t@.BB0_40\n.BB0_41:\n\tadd\tstack-[6], r0, r1\n\tsub.s!\t31, r1, r1\n\tjump.le\t@.BB0_50\n\tadd\tstack-[3], r0, r1\n\tst.1\t0, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_3[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tadd\tstack-[5], r0, r2\n\tadd\tstack-[7], r0, r6\n\tjump.eq\t@.BB0_2\n\tadd\tstack-[6], r0, r3\n\tand!\tr3, r2, r3\n\tadd\t32, r0, r2\n\tld\tr1, r1\n\tjump.eq\t@.BB0_47\n\tadd\t32, r0, r2\n\tadd\tr0, r0, r4\n.BB0_46:\n\tadd\tr2, r6, r5\n\tld.1\tr5, r5\n\tsstore\tr1, r5\n\tadd\t32, r2, r2\n\tadd\t1, r1, r1\n\tadd\t32, r4, r4\n\tsub!\tr4, r3, r5\n\tjump.lt\t@.BB0_46\n.BB0_47:\n\tadd\tstack-[6], r0, r4\n\tsub!\tr3, r4, r3\n\tjump.ge\t@.BB0_49\n\tadd\tstack-[6], r0, r3\n\tshl.s\t3, r3, r3\n\tand\t248, r3, r3\n\tsub.s\t1, r0, r4\n\tshr\tr4, r3, r3\n\txor\tr3, r4, r3\n\tadd\tstack-[7], r0, r4\n\tadd\tr2, r4, r2\n\tld.1\tr2, r2\n\tand\tr2, r3, r2\n\tsstore\tr1, r2\n.BB0_49:\n\tadd\t1, r0, r1\n\tadd\tstack-[6], r0, r2\n\tshl.s\t1, r2, r2\n\tjump\t@.BB0_42\n.BB0_50:\n\tadd\tstack-[6], r0, r1\n\tsub!\tr1, r0, r1\n\tadd\tr0, r0, r1\n\tjump.eq\t@.BB0_52\n\tadd\tstack-[4], r0, r1\n\tld.1\tr1, r1\n.BB0_52:\n\tadd\tstack-[6], r0, r4\n\tshl.s\t3, r4, r2\n\tsub.s\t1, r0, r3\n\tshr\tr3, r2, r2\n\txor\tr2, r3, r2\n\tand\tr1, r2, r2\n\tshl.s\t1, r4, r1\n.BB0_42:\n\tor\tr2, r1, r1\n\tadd\tstack-[3], r0, r2\n\tsstore\tr2, r1\n\tadd\tstack-[1], r0, r1\n\tnear_call\tr0, @copy_byte_array_to_storage_from_string_to_string, @DEFAULT_UNWIND\n\tadd\t32, r0, r1\n\tst.2\t256, r1\n\tst.2\t288, r0\n\tadd\t@CPI0_4[0], r0, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.func_end0:\n\ncopy_byte_array_to_storage_from_string_to_string:\n.func_begin1:\n\tnop\tstack+=[5]\n\tld.1.inc\tr1, r5, r7\n\tsub.s!\t@CPI1_0[0], r5, r2\n\tjump.ge\t@.BB1_1\n\tadd\t4, r0, r4\n\tsload\tr4, r3\n\tand!\t1, r3, r2\n\tshr.s\t1, r3, r6\n\tand\t127, r6, r3\n\tadd.eq\tr3, r0, r6\n\tsub.s!\t31, r6, r3\n\tadd\t0, r0, r3\n\tadd.gt\t1, r0, r3\n\tand\t1, r3, r3\n\tsub!\tr2, r3, r2\n\tjump.ne\t@.BB1_3\n\tadd\tr1, r0, stack-[3]\n\tsub.s!\t32, r6, r1\n\tadd\tr4, r0, stack-[5]\n\tadd\tr5, r0, stack-[4]\n\tjump.lt\t@.BB1_10\n\tadd\tr6, r0, stack-[1]\n\tadd\tr7, r0, stack-[2]\n\tst.1\t0, r4\n\tadd\t@CPI1_1[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI1_1[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI1_2[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB1_6\n\tadd\tstack-[4], r0, r5\n\tadd\t31, r5, r2\n\tshr.s\t5, r2, r2\n\tsub.s!\t32, r5, r3\n\tadd.lt\tr0, r0, r2\n\tld\tr1, r3\n\tadd\tstack-[1], r0, r1\n\tadd\t31, r1, r1\n\tshr.s\t5, r1, r1\n\tadd\tr3, r1, r1\n\tadd\tr3, r2, r2\n\tsub!\tr2, r1, r3\n\tadd\tstack-[5], r0, r4\n\tadd\tstack-[2], r0, r7\n\tjump.ge\t@.BB1_10\n.BB1_9:\n\tsstore\tr2, r0\n\tadd\t1, r2, r2\n\tsub!\tr2, r1, r3\n\tjump.lt\t@.BB1_9\n.BB1_10:\n\tsub.s!\t31, r5, r1\n\tjump.le\t@.BB1_19\n\tst.1\t0, r4\n\tadd\t@CPI1_1[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI1_1[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI1_2[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB1_6\n\tsub.s\t32, r0, r2\n\tadd\tstack-[4], r0, r6\n\tand!\tr6, r2, r3\n\tadd\t32, r0, r2\n\tld\tr1, r1\n\tadd\tstack-[3], r0, r7\n\tjump.eq\t@.BB1_16\n\tadd\t32, r0, r2\n\tadd\tr0, r0, r4\n.BB1_15:\n\tadd\tr2, r7, r5\n\tld.1\tr5, r5\n\tsstore\tr1, r5\n\tadd\t32, r2, r2\n\tadd\t1, r1, r1\n\tadd\t32, r4, r4\n\tsub!\tr4, r3, r5\n\tjump.lt\t@.BB1_15\n.BB1_16:\n\tsub!\tr3, r6, r3\n\tjump.ge\t@.BB1_18\n\tshl.s\t3, r6, r3\n\tand\t248, r3, r3\n\tsub.s\t1, r0, r4\n\tshr\tr4, r3, r3\n\txor\tr3, r4, r3\n\tadd\tr2, r7, r2\n\tld.1\tr2, r2\n\tand\tr2, r3, r2\n\tsstore\tr1, r2\n.BB1_18:\n\tshl.s\t1, r6, r1\n\tor\t1, r1, r1\n\tadd\tstack-[5], r0, r4\n\tjump\t@.BB1_11\n.BB1_19:\n\tsub!\tr5, r0, r1\n\tadd\tr0, r0, r1\n\tjump.eq\t@.BB1_11\n\tshl.s\t3, r5, r1\n\tsub.s\t1, r0, r2\n\tshr\tr2, r1, r1\n\txor\tr1, r2, r1\n\tld.1\tr7, r2\n\tand\tr2, r1, r1\n\tshl.s\t1, r5, r2\n\tor\tr1, r2, r1\n.BB1_11:\n\tsstore\tr4, r1\n\tret\n.BB1_1:\n\tadd\t@CPI1_3[0], r0, r1\n\tst.1\t0, r1\n\tadd\t65, r0, r1\n\tst.1\t4, r1\n\tadd\t@CPI1_4[0], r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB1_3:\n\tadd\t@CPI1_3[0], r0, r1\n\tst.1\t0, r1\n\tadd\t34, r0, r1\n\tst.1\t4, r1\n\tadd\t@CPI1_4[0], r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB1_6:\n\tadd\tr0, r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.func_end1:\n\nabi_encode_string:\n.func_begin2:\n\tadd\t32, r0, r3\n\tst.1.inc\tr1, r3, r4\n\tld.1\tr2, r3\n\tst.1\tr4, r3\n\tsub!\tr3, r0, r4\n\tadd\t64, r1, r1\n\tjump.eq\t@.BB2_4\n\tadd\tr0, r0, r4\n.BB2_2:\n\tadd\tr1, r4, r5\n\tadd\t32, r4, r4\n\tadd\tr4, r2, r6\n\tld.1\tr6, r6\n\tst.1\tr5, r6\n\tsub!\tr4, r3, r5\n\tjump.lt\t@.BB2_2\n\tsub!\tr4, r3, r2\n\tjump.le\t@.BB2_4\n\tadd\tr1, r3, r2\n\tst.1\tr2, r0\n\tjump\t@.BB2_6\n.BB2_4:\n.BB2_6:\n\tadd\t31, r3, r2\n\tsub.s\t32, r0, r3\n\tand\tr2, r3, r2\n\tadd\tr1, r2, r1\n\tret\n.func_end2:\n\nabi_decode_addresst_uint256:\n.func_begin3:\n\tsub.s\t4, r1, r1\n\tadd\t@CPI3_0[0], r0, r2\n\tsub.s!\t63, r1, r3\n\tadd\tr0, r0, r3\n\tadd.gt\tr2, r0, r3\n\tand\t@CPI3_0[0], r1, r1\n\tsub!\tr1, r0, r4\n\tadd.ge\tr0, r0, r2\n\tsub.s!\t@CPI3_0[0], r1, r1\n\tadd\tr3, r0, r1\n\tadd.eq\tr2, r0, r1\n\tsub!\tr1, r0, r1\n\tjump.eq\t@.BB3_1\n\tptr.add\tstack[@ptr_calldata], r0, r2\n\tptr.add.s\t4, r2, r1\n\tld\tr1, r1\n\tsub.s!\t@CPI3_1[0], r1, r3\n\tjump.gt\t@.BB3_1\n\tptr.add.s\t36, r2, r2\n\tld\tr2, r2\n\tret\n.BB3_1:\n\tadd\tr0, r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.func_end3:\n\nabi_decode_addresst_addresst_uint256:\n.func_begin4:\n\tsub.s\t4, r1, r1\n\tadd\t@CPI4_0[0], r0, r2\n\tsub.s!\t95, r1, r3\n\tadd\tr0, r0, r3\n\tadd.gt\tr2, r0, r3\n\tand\t@CPI4_0[0], r1, r1\n\tsub!\tr1, r0, r4\n\tadd.ge\tr0, r0, r2\n\tsub.s!\t@CPI4_0[0], r1, r1\n\tadd\tr3, r0, r1\n\tadd.eq\tr2, r0, r1\n\tsub!\tr1, r0, r1\n\tjump.eq\t@.BB4_1\n\tptr.add\tstack[@ptr_calldata], r0, r3\n\tptr.add.s\t4, r3, r1\n\tld\tr1, r1\n\tsub.s!\t@CPI4_1[0], r1, r2\n\tjump.gt\t@.BB4_1\n\tptr.add.s\t36, r3, r2\n\tld\tr2, r2\n\tsub.s!\t@CPI4_1[0], r2, r4\n\tjump.gt\t@.BB4_1\n\tptr.add.s\t68, r3, r3\n\tld\tr3, r3\n\tret\n.BB4_1:\n\tadd\tr0, r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.func_end4:\n\nabi_decode_address:\n.func_begin5:\n\tsub.s\t4, r1, r1\n\tadd\t@CPI5_0[0], r0, r2\n\tsub.s!\t31, r1, r3\n\tadd\tr0, r0, r3\n\tadd.gt\tr2, r0, r3\n\tand\t@CPI5_0[0], r1, r1\n\tsub!\tr1, r0, r4\n\tadd.ge\tr0, r0, r2\n\tsub.s!\t@CPI5_0[0], r1, r1\n\tadd\tr3, r0, r1\n\tadd.eq\tr2, r0, r1\n\tsub!\tr1, r0, r1\n\tjump.eq\t@.BB5_1\n\tadd\t4, r0, r1\n\tptr.add\tstack[@ptr_calldata], r1, r1\n\tld\tr1, r1\n\tsub.s!\t@CPI5_1[0], r1, r2\n\tjump.gt\t@.BB5_1\n\tret\n.BB5_1:\n\tadd\tr0, r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.func_end5:\n\nabi_decode_addresst_address:\n.func_begin6:\n\tsub.s\t4, r1, r1\n\tadd\t@CPI6_0[0], r0, r2\n\tsub.s!\t63, r1, r3\n\tadd\tr0, r0, r3\n\tadd.gt\tr2, r0, r3\n\tand\t@CPI6_0[0], r1, r1\n\tsub!\tr1, r0, r4\n\tadd.ge\tr0, r0, r2\n\tsub.s!\t@CPI6_0[0], r1, r1\n\tadd\tr3, r0, r1\n\tadd.eq\tr2, r0, r1\n\tsub!\tr1, r0, r1\n\tjump.eq\t@.BB6_1\n\tptr.add\tstack[@ptr_calldata], r0, r2\n\tptr.add.s\t4, r2, r1\n\tld\tr1, r1\n\tsub.s!\t@CPI6_1[0], r1, r3\n\tjump.gt\t@.BB6_1\n\tptr.add.s\t36, r2, r2\n\tld\tr2, r2\n\tsub.s!\t@CPI6_1[0], r2, r3\n\tjump.gt\t@.BB6_1\n\tret\n.BB6_1:\n\tadd\tr0, r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.func_end6:\n\ncopy_array_from_storage_to_memory_string_2479:\n.func_begin7:\n\tadd\t3, r0, r5\n\tsload\tr5, r4\n\tand!\t1, r4, r6\n\tshr.s\t1, r4, r1\n\tand\t127, r1, r2\n\tadd.ne\tr1, r0, r2\n\tsub.s!\t31, r2, r1\n\tadd\t0, r0, r1\n\tadd.gt\t1, r0, r1\n\tand\t1, r1, r1\n\tsub!\tr6, r1, r1\n\tjump.ne\t@.BB7_1\n\tld.1\t64, r1\n\tst.1.inc\tr1, r2, r3\n\tsub!\tr6, r0, r6\n\tjump.ne\t@.BB7_9\n\tsub.s\t256, r0, r2\n\tand\tr4, r2, r2\n\tst.1\tr3, r2\n\tadd\t64, r0, r4\n\tjump\t@.BB7_4\n.BB7_9:\n\tst.1\t0, r5\n\tadd\t32, r0, r4\n\tsub!\tr2, r0, r5\n\tjump.eq\t@.BB7_4\n\tadd\t@CPI7_0[0], r0, r4\n\tadd\tr0, r0, r6\n.BB7_11:\n\tadd\tr6, r0, r5\n\tadd\tr5, r3, r6\n\tsload\tr4, r7\n\tst.1\tr6, r7\n\tadd\t1, r4, r4\n\tadd\t32, r5, r6\n\tsub!\tr6, r2, r7\n\tjump.lt\t@.BB7_11\n\tadd\t95, r5, r2\n\tsub.s\t32, r0, r3\n\tand\tr2, r3, r4\n.BB7_4:\n\tadd\tr4, r1, r2\n\tsub!\tr2, r4, r3\n\tadd\t0, r0, r3\n\tadd.lt\t1, r0, r3\n\tsub.s!\t@CPI7_1[0], r2, r4\n\tjump.gt\t@.BB7_6\n\tand!\t1, r3, r3\n\tjump.ne\t@.BB7_6\n\tst.1\t64, r2\n\tret\n.BB7_1:\n\tadd\t@CPI7_2[0], r0, r1\n\tst.1\t0, r1\n\tadd\t34, r0, r1\n\tst.1\t4, r1\n\tadd\t@CPI7_3[0], r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB7_6:\n\tadd\t@CPI7_2[0], r0, r1\n\tst.1\t0, r1\n\tadd\t65, r0, r1\n\tst.1\t4, r1\n\tadd\t@CPI7_3[0], r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.func_end7:\n\ncopy_array_from_storage_to_memory_string:\n.func_begin8:\n\tadd\t4, r0, r5\n\tsload\tr5, r4\n\tand!\t1, r4, r6\n\tshr.s\t1, r4, r1\n\tand\t127, r1, r2\n\tadd.ne\tr1, r0, r2\n\tsub.s!\t31, r2, r1\n\tadd\t0, r0, r1\n\tadd.gt\t1, r0, r1\n\tand\t1, r1, r1\n\tsub!\tr6, r1, r1\n\tjump.ne\t@.BB8_1\n\tld.1\t64, r1\n\tst.1.inc\tr1, r2, r3\n\tsub!\tr6, r0, r6\n\tjump.ne\t@.BB8_9\n\tsub.s\t256, r0, r2\n\tand\tr4, r2, r2\n\tst.1\tr3, r2\n\tadd\t64, r0, r4\n\tjump\t@.BB8_4\n.BB8_9:\n\tst.1\t0, r5\n\tadd\t32, r0, r4\n\tsub!\tr2, r0, r5\n\tjump.eq\t@.BB8_4\n\tadd\t@CPI8_0[0], r0, r4\n\tadd\tr0, r0, r6\n.BB8_11:\n\tadd\tr6, r0, r5\n\tadd\tr5, r3, r6\n\tsload\tr4, r7\n\tst.1\tr6, r7\n\tadd\t1, r4, r4\n\tadd\t32, r5, r6\n\tsub!\tr6, r2, r7\n\tjump.lt\t@.BB8_11\n\tadd\t95, r5, r2\n\tsub.s\t32, r0, r3\n\tand\tr2, r3, r4\n.BB8_4:\n\tadd\tr4, r1, r2\n\tsub!\tr2, r4, r3\n\tadd\t0, r0, r3\n\tadd.lt\t1, r0, r3\n\tsub.s!\t@CPI8_1[0], r2, r4\n\tjump.gt\t@.BB8_6\n\tand!\t1, r3, r3\n\tjump.ne\t@.BB8_6\n\tst.1\t64, r2\n\tret\n.BB8_1:\n\tadd\t@CPI8_2[0], r0, r1\n\tst.1\t0, r1\n\tadd\t34, r0, r1\n\tst.1\t4, r1\n\tadd\t@CPI8_3[0], r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB8_6:\n\tadd\t@CPI8_2[0], r0, r1\n\tst.1\t0, r1\n\tadd\t65, r0, r1\n\tst.1\t4, r1\n\tadd\t@CPI8_3[0], r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.func_end8:\n\nmapping_index_access_mapping_address_uint256_of_address_2492:\n.func_begin9:\n\tand\t@CPI9_0[0], r1, r1\n\tst.1\t0, r1\n\tadd\t1, r0, r1\n\tst.1\t32, r1\n\tadd\t@CPI9_1[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI9_1[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI9_2[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB9_1\n\tld\tr1, r1\n\tret\n.BB9_1:\n\tadd\tr0, r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.func_end9:\n\nmapping_index_access_mapping_address_uint256_of_address:\n.func_begin10:\n\tand\t@CPI10_0[0], r2, r2\n\tst.1\t0, r2\n\tst.1\t32, r1\n\tadd\t@CPI10_1[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI10_1[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI10_2[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB10_1\n\tld\tr1, r1\n\tret\n.BB10_1:\n\tadd\tr0, r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.func_end10:\n\nfun_balanceOf:\n.func_begin11:\n\tand\t@CPI11_0[0], r1, r1\n\tst.1\t0, r1\n\tst.1\t32, r0\n\tadd\t@CPI11_1[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI11_1[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI11_2[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB11_1\n\tld\tr1, r1\n\tsload\tr1, r1\n\tret\n.BB11_1:\n\tadd\tr0, r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.func_end11:\n\nfun_transfer:\n.func_begin12:\n\tnop\tstack+=[6]\n\tadd\tr2, r0, stack-[6]\n\tcontext.caller\tr2\n\tand!\t@CPI12_0[0], r2, r3\n\tjump.eq\t@.BB12_1\n\tadd\tr2, r0, stack-[2]\n\tadd\tr1, r0, stack-[3]\n\tand!\t@CPI12_0[0], r1, r1\n\tadd\tr1, r0, stack-[5]\n\tjump.eq\t@.BB12_3\n\tadd\tr3, r0, stack-[4]\n\tst.1\t0, r3\n\tst.1\t32, r0\n\tadd\t@CPI12_1[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI12_1[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI12_2[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB12_5\n\tld\tr1, r1\n\tsload\tr1, r2\n\tadd\tstack-[6], r0, r1\n\tadd\tr2, r0, stack-[1]\n\tsub!\tr2, r1, r1\n\tjump.lt\t@.BB12_7\n\tadd\tstack-[4], r0, r1\n\tst.1\t0, r1\n\tst.1\t32, r0\n\tadd\t@CPI12_1[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI12_1[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI12_2[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB12_5\n\tadd\tstack-[6], r0, r2\n\tadd\tstack-[1], r0, r3\n\tsub\tr3, r2, r2\n\tld\tr1, r1\n\tsstore\tr1, r2\n\tadd\tstack-[5], r0, r1\n\tst.1\t0, r1\n\tst.1\t32, r0\n\tadd\t@CPI12_1[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI12_1[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI12_2[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB12_5\n\tld\tr1, r1\n\tsload\tr1, r2\n\tadd\tstack-[6], r0, r3\n\tadd\tr2, r3, r2\n\tsstore\tr1, r2\n\tld.1\t64, r1\n\tst.1\tr1, r3\n\tadd\t@CPI12_1[0], r0, r2\n\tcontext.gas_left\tr3\n\tsub.s!\t@CPI12_1[0], r3, r4\n\tadd.ge\tr2, r0, r3\n\tsub.s!\t@CPI12_1[0], r1, r4\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tshl.s\t192, r3, r2\n\tor\tr2, r1, r1\n\tor\t@CPI12_3[0], r1, r1\n\tadd\t32781, r0, r2\n\tadd\t3, r0, r3\n\tadd\t@CPI12_4[0], r0, r4\n\tadd\tstack-[2], r0, r5\n\tadd\tstack-[3], r0, r6\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r1\n\tjump.eq\t@.BB12_5\n\tret\n.BB12_5:\n\tadd\tr0, r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB12_1:\n\tld.1\t64, r1\n\tadd\t100, r1, r2\n\tadd\t@CPI12_11[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t68, r1, r2\n\tadd\t@CPI12_12[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t36, r1, r2\n\tadd\t37, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI12_7[0], r0, r2\n\tst.1\tr1, r2\n\tadd\t4, r1, r2\n\tadd\t32, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI12_1[0], r0, r2\n\tsub.s!\t@CPI12_1[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI12_8[0], r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB12_3:\n\tld.1\t64, r1\n\tadd\t100, r1, r2\n\tadd\t@CPI12_9[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t68, r1, r2\n\tadd\t@CPI12_10[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t36, r1, r2\n\tadd\t35, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI12_7[0], r0, r2\n\tst.1\tr1, r2\n\tadd\t4, r1, r2\n\tadd\t32, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI12_1[0], r0, r2\n\tsub.s!\t@CPI12_1[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI12_8[0], r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB12_7:\n\tld.1\t64, r1\n\tadd\t100, r1, r2\n\tadd\t@CPI12_5[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t68, r1, r2\n\tadd\t@CPI12_6[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t36, r1, r2\n\tadd\t38, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI12_7[0], r0, r2\n\tst.1\tr1, r2\n\tadd\t4, r1, r2\n\tadd\t32, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI12_1[0], r0, r2\n\tsub.s!\t@CPI12_1[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI12_8[0], r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.func_end12:\n\nfun_approve:\n.func_begin13:\n\tnop\tstack+=[4]\n\tcontext.caller\tr3\n\tand!\t@CPI13_0[0], r3, r4\n\tjump.eq\t@.BB13_1\n\tadd\tr2, r0, stack-[1]\n\tadd\tr3, r0, stack-[2]\n\tadd\tr1, r0, stack-[3]\n\tand!\t@CPI13_0[0], r1, r1\n\tadd\tr1, r0, stack-[4]\n\tjump.eq\t@.BB13_3\n\tst.1\t0, r4\n\tadd\t1, r0, r1\n\tst.1\t32, r1\n\tadd\t@CPI13_1[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI13_1[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI13_2[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB13_5\n\tld\tr1, r1\n\tadd\tstack-[4], r0, r2\n\tst.1\t0, r2\n\tst.1\t32, r1\n\tadd\t@CPI13_1[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI13_1[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI13_2[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB13_5\n\tld\tr1, r1\n\tadd\tstack-[1], r0, r2\n\tsstore\tr1, r2\n\tld.1\t64, r1\n\tst.1\tr1, r2\n\tadd\t@CPI13_1[0], r0, r2\n\tcontext.gas_left\tr3\n\tsub.s!\t@CPI13_1[0], r3, r4\n\tadd.ge\tr2, r0, r3\n\tsub.s!\t@CPI13_1[0], r1, r4\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tshl.s\t192, r3, r2\n\tor\tr2, r1, r1\n\tor\t@CPI13_3[0], r1, r1\n\tadd\t32781, r0, r2\n\tadd\t3, r0, r3\n\tadd\t@CPI13_4[0], r0, r4\n\tadd\tstack-[2], r0, r5\n\tadd\tstack-[3], r0, r6\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r1\n\tjump.eq\t@.BB13_5\n\tret\n.BB13_5:\n\tadd\tr0, r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB13_1:\n\tld.1\t64, r1\n\tadd\t100, r1, r2\n\tadd\t@CPI13_9[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t68, r1, r2\n\tadd\t@CPI13_10[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t36, r1, r2\n\tadd\t36, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI13_7[0], r0, r2\n\tst.1\tr1, r2\n\tadd\t4, r1, r2\n\tadd\t32, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI13_1[0], r0, r2\n\tsub.s!\t@CPI13_1[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI13_8[0], r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB13_3:\n\tld.1\t64, r1\n\tadd\t100, r1, r2\n\tadd\t@CPI13_5[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t68, r1, r2\n\tadd\t@CPI13_6[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t36, r1, r2\n\tadd\t34, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI13_7[0], r0, r2\n\tst.1\tr1, r2\n\tadd\t4, r1, r2\n\tadd\t32, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI13_1[0], r0, r2\n\tsub.s!\t@CPI13_1[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI13_8[0], r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.func_end13:\n\nfun_transferFrom:\n.func_begin14:\n\tnop\tstack+=[8]\n\tadd\tr3, r0, stack-[8]\n\tadd\tr2, r0, stack-[6]\n\tadd\tr1, r0, stack-[5]\n\tand\t@CPI14_0[0], r1, r1\n\tadd\tr1, r0, stack-[7]\n\tst.1\t0, r1\n\tadd\t1, r0, r1\n\tadd\tr1, r0, stack-[3]\n\tst.1\t32, r1\n\tadd\t@CPI14_1[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI14_1[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI14_2[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB14_1\n\tcontext.caller\tr2\n\tld\tr1, r1\n\tadd\tr2, r0, stack-[2]\n\tand\t@CPI14_0[0], r2, r2\n\tadd\tr2, r0, stack-[4]\n\tst.1\t0, r2\n\tst.1\t32, r1\n\tadd\t@CPI14_1[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI14_1[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI14_2[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB14_1\n\tld\tr1, r1\n\tsload\tr1, r2\n\tsub.s\t1, r0, r1\n\tsub!\tr2, r1, r1\n\tjump.eq\t@.BB14_5\n\tadd\tstack-[8], r0, r1\n\tsub!\tr2, r1, r1\n\tjump.lt\t@.BB14_16\n\tadd\tstack-[7], r0, r1\n\tsub!\tr1, r0, r1\n\tjump.eq\t@.BB14_18\n\tadd\tr2, r0, stack-[1]\n\tadd\tstack-[4], r0, r1\n\tsub!\tr1, r0, r1\n\tjump.eq\t@.BB14_20\n\tadd\tstack-[7], r0, r1\n\tst.1\t0, r1\n\tadd\tstack-[3], r0, r1\n\tst.1\t32, r1\n\tadd\t@CPI14_1[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI14_1[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI14_2[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB14_1\n\tld\tr1, r1\n\tadd\tstack-[4], r0, r2\n\tst.1\t0, r2\n\tst.1\t32, r1\n\tadd\t@CPI14_1[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI14_1[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI14_2[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB14_1\n\tadd\tstack-[8], r0, r2\n\tadd\tstack-[1], r0, r3\n\tsub\tr3, r2, r2\n\tld\tr1, r1\n\tsstore\tr1, r2\n\tld.1\t64, r1\n\tst.1\tr1, r2\n\tadd\t@CPI14_1[0], r0, r2\n\tcontext.gas_left\tr3\n\tsub.s!\t@CPI14_1[0], r3, r4\n\tadd.ge\tr2, r0, r3\n\tsub.s!\t@CPI14_1[0], r1, r4\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tshl.s\t192, r3, r2\n\tor\tr2, r1, r1\n\tor\t@CPI14_3[0], r1, r1\n\tadd\t32781, r0, r2\n\tadd\t3, r0, r3\n\tadd\t@CPI14_4[0], r0, r4\n\tadd\tstack-[5], r0, r5\n\tadd\tstack-[2], r0, r6\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r1\n\tjump.ne\t@.BB14_7\n\tjump\t@.BB14_1\n.BB14_5:\n\tadd\tstack-[7], r0, r1\n\tsub!\tr1, r0, r1\n\tjump.eq\t@.BB14_6\n.BB14_7:\n\tadd\tstack-[6], r0, r1\n\tand!\t@CPI14_0[0], r1, r1\n\tadd\tr1, r0, stack-[4]\n\tjump.eq\t@.BB14_8\n\tadd\tstack-[7], r0, r1\n\tst.1\t0, r1\n\tst.1\t32, r0\n\tadd\t@CPI14_1[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI14_1[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI14_2[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB14_1\n\tld\tr1, r1\n\tsload\tr1, r2\n\tadd\tstack-[8], r0, r1\n\tadd\tr2, r0, stack-[3]\n\tsub!\tr2, r1, r1\n\tjump.lt\t@.BB14_11\n\tadd\tstack-[7], r0, r1\n\tst.1\t0, r1\n\tst.1\t32, r0\n\tadd\t@CPI14_1[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI14_1[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI14_2[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB14_1\n\tadd\tstack-[8], r0, r2\n\tadd\tstack-[3], r0, r3\n\tsub\tr3, r2, r2\n\tld\tr1, r1\n\tsstore\tr1, r2\n\tadd\tstack-[4], r0, r1\n\tst.1\t0, r1\n\tst.1\t32, r0\n\tadd\t@CPI14_1[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI14_1[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI14_2[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB14_1\n\tld\tr1, r1\n\tsload\tr1, r2\n\tadd\tstack-[8], r0, r3\n\tadd\tr2, r3, r2\n\tsstore\tr1, r2\n\tld.1\t64, r1\n\tst.1\tr1, r3\n\tadd\t@CPI14_1[0], r0, r2\n\tcontext.gas_left\tr3\n\tsub.s!\t@CPI14_1[0], r3, r4\n\tadd.ge\tr2, r0, r3\n\tsub.s!\t@CPI14_1[0], r1, r4\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tshl.s\t192, r3, r2\n\tor\tr2, r1, r1\n\tor\t@CPI14_3[0], r1, r1\n\tadd\t32781, r0, r2\n\tadd\t3, r0, r3\n\tadd\t@CPI14_13[0], r0, r4\n\tadd\tstack-[5], r0, r5\n\tadd\tstack-[6], r0, r6\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r1\n\tjump.eq\t@.BB14_1\n\tret\n.BB14_1:\n\tadd\tr0, r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB14_8:\n\tld.1\t64, r1\n\tadd\t100, r1, r2\n\tadd\t@CPI14_16[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t68, r1, r2\n\tadd\t@CPI14_17[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t36, r1, r2\n\tadd\t35, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI14_7[0], r0, r2\n\tst.1\tr1, r2\n\tadd\t4, r1, r2\n\tadd\t32, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI14_1[0], r0, r2\n\tsub.s!\t@CPI14_1[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI14_8[0], r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB14_11:\n\tld.1\t64, r1\n\tadd\t100, r1, r2\n\tadd\t@CPI14_14[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t68, r1, r2\n\tadd\t@CPI14_15[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t36, r1, r2\n\tadd\t38, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI14_7[0], r0, r2\n\tst.1\tr1, r2\n\tadd\t4, r1, r2\n\tadd\t32, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI14_1[0], r0, r2\n\tsub.s!\t@CPI14_1[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI14_8[0], r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB14_16:\n\tld.1\t64, r1\n\tadd\t68, r1, r2\n\tadd\t@CPI14_11[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t36, r1, r2\n\tadd\t29, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI14_7[0], r0, r2\n\tst.1\tr1, r2\n\tadd\t4, r1, r2\n\tadd\t32, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI14_1[0], r0, r2\n\tsub.s!\t@CPI14_1[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI14_12[0], r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB14_18:\n\tld.1\t64, r1\n\tadd\t100, r1, r2\n\tadd\t@CPI14_9[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t68, r1, r2\n\tadd\t@CPI14_10[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t36, r1, r2\n\tadd\t36, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI14_7[0], r0, r2\n\tst.1\tr1, r2\n\tadd\t4, r1, r2\n\tadd\t32, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI14_1[0], r0, r2\n\tsub.s!\t@CPI14_1[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI14_8[0], r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB14_20:\n\tld.1\t64, r1\n\tadd\t100, r1, r2\n\tadd\t@CPI14_5[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t68, r1, r2\n\tadd\t@CPI14_6[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t36, r1, r2\n\tadd\t34, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI14_7[0], r0, r2\n\tst.1\tr1, r2\n\tadd\t4, r1, r2\n\tadd\t32, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI14_1[0], r0, r2\n\tsub.s!\t@CPI14_1[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI14_8[0], r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB14_6:\n\tld.1\t64, r1\n\tadd\t100, r1, r2\n\tadd\t@CPI14_18[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t68, r1, r2\n\tadd\t@CPI14_19[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t36, r1, r2\n\tadd\t37, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI14_7[0], r0, r2\n\tst.1\tr1, r2\n\tadd\t4, r1, r2\n\tadd\t32, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI14_1[0], r0, r2\n\tsub.s!\t@CPI14_1[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI14_8[0], r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.func_end14:\n\nfun_increaseAllowance:\n.func_begin15:\n\tnop\tstack+=[6]\n\tadd\tr2, r0, stack-[5]\n\tadd\tr1, r0, stack-[6]\n\tcontext.caller\tr1\n\tadd\tr1, r0, stack-[4]\n\tst.1\t0, r1\n\tadd\t1, r0, r1\n\tadd\tr1, r0, stack-[2]\n\tst.1\t32, r1\n\tadd\t@CPI15_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI15_0[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI15_1[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB15_1\n\tld\tr1, r1\n\tadd\tstack-[6], r0, r2\n\tand\t@CPI15_2[0], r2, r2\n\tadd\tr2, r0, stack-[3]\n\tst.1\t0, r2\n\tst.1\t32, r1\n\tadd\t@CPI15_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI15_0[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI15_1[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB15_1\n\tsub.s\t1, r0, r2\n\tadd\tstack-[5], r0, r3\n\txor\tr3, r2, r2\n\tld\tr1, r1\n\tsload\tr1, r3\n\tsub!\tr3, r2, r1\n\tjump.gt\t@.BB15_4\n\tadd\tstack-[4], r0, r1\n\tand!\t@CPI15_2[0], r1, r1\n\tjump.eq\t@.BB15_6\n\tadd\tr3, r0, stack-[1]\n\tadd\tstack-[3], r0, r2\n\tsub!\tr2, r0, r2\n\tjump.eq\t@.BB15_8\n\tst.1\t0, r1\n\tadd\tstack-[2], r0, r1\n\tst.1\t32, r1\n\tadd\t@CPI15_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI15_0[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI15_1[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB15_1\n\tld\tr1, r1\n\tadd\tstack-[3], r0, r2\n\tst.1\t0, r2\n\tst.1\t32, r1\n\tadd\t@CPI15_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI15_0[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI15_1[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB15_1\n\tadd\tstack-[5], r0, r2\n\tadd\tstack-[1], r0, r3\n\tadd\tr3, r2, r2\n\tld\tr1, r1\n\tsstore\tr1, r2\n\tld.1\t64, r1\n\tst.1\tr1, r2\n\tadd\t@CPI15_0[0], r0, r2\n\tcontext.gas_left\tr3\n\tsub.s!\t@CPI15_0[0], r3, r4\n\tadd.ge\tr2, r0, r3\n\tsub.s!\t@CPI15_0[0], r1, r4\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tshl.s\t192, r3, r2\n\tor\tr2, r1, r1\n\tor\t@CPI15_3[0], r1, r1\n\tadd\t32781, r0, r2\n\tadd\t3, r0, r3\n\tadd\t@CPI15_4[0], r0, r4\n\tadd\tstack-[4], r0, r5\n\tadd\tstack-[6], r0, r6\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r1\n\tjump.eq\t@.BB15_1\n\tret\n.BB15_1:\n\tadd\tr0, r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB15_4:\n\tadd\t@CPI15_11[0], r0, r1\n\tst.1\t0, r1\n\tadd\t17, r0, r1\n\tst.1\t4, r1\n\tadd\t@CPI15_12[0], r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB15_6:\n\tld.1\t64, r1\n\tadd\t100, r1, r2\n\tadd\t@CPI15_9[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t68, r1, r2\n\tadd\t@CPI15_10[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t36, r1, r2\n\tadd\t36, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI15_7[0], r0, r2\n\tst.1\tr1, r2\n\tadd\t4, r1, r2\n\tadd\t32, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI15_0[0], r0, r2\n\tsub.s!\t@CPI15_0[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI15_8[0], r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB15_8:\n\tld.1\t64, r1\n\tadd\t100, r1, r2\n\tadd\t@CPI15_5[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t68, r1, r2\n\tadd\t@CPI15_6[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t36, r1, r2\n\tadd\t34, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI15_7[0], r0, r2\n\tst.1\tr1, r2\n\tadd\t4, r1, r2\n\tadd\t32, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI15_0[0], r0, r2\n\tsub.s!\t@CPI15_0[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI15_8[0], r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.func_end15:\n\nfun_decreaseAllowance:\n.func_begin16:\n\tnop\tstack+=[6]\n\tadd\tr2, r0, stack-[5]\n\tadd\tr1, r0, stack-[6]\n\tcontext.caller\tr1\n\tadd\tr1, r0, stack-[4]\n\tst.1\t0, r1\n\tadd\t1, r0, r1\n\tadd\tr1, r0, stack-[2]\n\tst.1\t32, r1\n\tadd\t@CPI16_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI16_0[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI16_1[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB16_1\n\tld\tr1, r1\n\tadd\tstack-[6], r0, r2\n\tand\t@CPI16_2[0], r2, r2\n\tadd\tr2, r0, stack-[3]\n\tst.1\t0, r2\n\tst.1\t32, r1\n\tadd\t@CPI16_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI16_0[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI16_1[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB16_1\n\tld\tr1, r1\n\tsload\tr1, r2\n\tadd\tstack-[5], r0, r1\n\tsub!\tr2, r1, r1\n\tjump.lt\t@.BB16_4\n\tadd\tstack-[4], r0, r1\n\tand!\t@CPI16_2[0], r1, r1\n\tjump.eq\t@.BB16_6\n\tadd\tr2, r0, stack-[1]\n\tadd\tstack-[3], r0, r2\n\tsub!\tr2, r0, r2\n\tjump.eq\t@.BB16_8\n\tst.1\t0, r1\n\tadd\tstack-[2], r0, r1\n\tst.1\t32, r1\n\tadd\t@CPI16_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI16_0[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI16_1[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB16_1\n\tld\tr1, r1\n\tadd\tstack-[3], r0, r2\n\tst.1\t0, r2\n\tst.1\t32, r1\n\tadd\t@CPI16_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI16_0[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI16_1[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB16_1\n\tadd\tstack-[5], r0, r2\n\tadd\tstack-[1], r0, r3\n\tsub\tr3, r2, r2\n\tld\tr1, r1\n\tsstore\tr1, r2\n\tld.1\t64, r1\n\tst.1\tr1, r2\n\tadd\t@CPI16_0[0], r0, r2\n\tcontext.gas_left\tr3\n\tsub.s!\t@CPI16_0[0], r3, r4\n\tadd.ge\tr2, r0, r3\n\tsub.s!\t@CPI16_0[0], r1, r4\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tshl.s\t192, r3, r2\n\tor\tr2, r1, r1\n\tor\t@CPI16_3[0], r1, r1\n\tadd\t32781, r0, r2\n\tadd\t3, r0, r3\n\tadd\t@CPI16_4[0], r0, r4\n\tadd\tstack-[4], r0, r5\n\tadd\tstack-[6], r0, r6\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r1\n\tjump.eq\t@.BB16_1\n\tret\n.BB16_1:\n\tadd\tr0, r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB16_4:\n\tld.1\t64, r1\n\tadd\t100, r1, r2\n\tadd\t@CPI16_11[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t68, r1, r2\n\tadd\t@CPI16_12[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t36, r1, r2\n\tadd\t37, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI16_7[0], r0, r2\n\tst.1\tr1, r2\n\tadd\t4, r1, r2\n\tadd\t32, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI16_0[0], r0, r2\n\tsub.s!\t@CPI16_0[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI16_8[0], r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB16_6:\n\tld.1\t64, r1\n\tadd\t100, r1, r2\n\tadd\t@CPI16_9[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t68, r1, r2\n\tadd\t@CPI16_10[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t36, r1, r2\n\tadd\t36, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI16_7[0], r0, r2\n\tst.1\tr1, r2\n\tadd\t4, r1, r2\n\tadd\t32, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI16_0[0], r0, r2\n\tsub.s!\t@CPI16_0[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI16_8[0], r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB16_8:\n\tld.1\t64, r1\n\tadd\t100, r1, r2\n\tadd\t@CPI16_5[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t68, r1, r2\n\tadd\t@CPI16_6[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t36, r1, r2\n\tadd\t34, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI16_7[0], r0, r2\n\tst.1\tr1, r2\n\tadd\t4, r1, r2\n\tadd\t32, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI16_0[0], r0, r2\n\tsub.s!\t@CPI16_0[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI16_8[0], r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.func_end16:\n\n__farcall:\n.func_begin17:\n.tmp0:\n\tfar_call\tr1, r2, @.BB17_2\n.tmp1:\n\tadd\t1, r0, r2\n\tret\n.BB17_2:\n.tmp2:\n\tadd\tr0, r0, r2\n\tret\n.func_end17:\n\n__staticcall:\n.func_begin18:\n.tmp3:\n\tfar_call.static\tr1, r2, @.BB18_2\n.tmp4:\n\tadd\t1, r0, r2\n\tret\n.BB18_2:\n.tmp5:\n\tadd\tr0, r0, r2\n\tret\n.func_end18:\n\n\t.data\n\t.p2align\t5\ncalldatasize:\n\t.cell 0\n\n\t.p2align\t5\nptr_calldata:\n.cell\t0\n\n\t.note.GNU-stack\n\t.rodata\nCPI0_0:\nCPI1_1:\nCPI9_1:\nCPI10_1:\nCPI11_1:\nCPI12_1:\nCPI13_1:\nCPI14_1:\nCPI15_0:\nCPI16_0:\n\t.cell 4294967295\nCPI0_1:\nCPI7_1:\nCPI8_1:\n\t.cell 18446744073709551615\nCPI0_2:\nCPI3_0:\nCPI4_0:\nCPI5_0:\nCPI6_0:\n\t.cell -57896044618658097711785492504343953926634992332820282019728792003956564819968\nCPI0_3:\nCPI1_2:\nCPI12_3:\nCPI13_3:\nCPI14_3:\nCPI15_3:\nCPI16_3:\n\t.cell 904625697166532776746648320380374280103671757735618107014721178055227736064\nCPI0_4:\n\t.cell 53919893334301279589334030174039261352344891250716429051063678533632\nCPI0_5:\nCPI1_3:\nCPI7_2:\nCPI8_2:\nCPI15_11:\n\t.cell 35408467139433450592217433187231851964531694900788300625387963629091585785856\nCPI0_6:\nCPI1_4:\nCPI7_3:\nCPI8_3:\nCPI15_12:\n\t.cell 2852213850513516153367582212096\nCPI0_7:\n\t.cell 961581904\nCPI0_8:\n\t.cell 2757214934\nCPI0_9:\n\t.cell 2757214935\nCPI0_10:\n\t.cell 2835717307\nCPI0_11:\n\t.cell 3714247998\nCPI0_12:\n\t.cell 961581905\nCPI0_13:\n\t.cell 1889567281\nCPI0_14:\n\t.cell 2514000705\nCPI0_15:\n\t.cell 404098524\nCPI0_16:\n\t.cell 404098525\nCPI0_17:\n\t.cell 599290589\nCPI0_18:\n\t.cell 826074471\nCPI0_19:\n\t.cell 117300739\nCPI0_20:\n\t.cell 157198259\nCPI0_21:\n\t.cell 2535301200456458802993406410752\nCPI1_0:\n\t.cell 18446744073709551616\nCPI3_1:\nCPI4_1:\nCPI5_1:\nCPI6_1:\nCPI9_0:\nCPI10_0:\nCPI11_0:\nCPI12_0:\nCPI13_0:\nCPI14_0:\nCPI15_2:\nCPI16_2:\n\t.cell 1461501637330902918203684832716283019655932542975\nCPI7_0:\n\t.cell -27889059366240281169193357100633332908378892778709981755071813198463099602853\nCPI8_0:\n\t.cell -53278079350709166316280423202849322519190186591071851114874353210178472783461\nCPI9_2:\nCPI10_2:\nCPI11_2:\nCPI12_2:\nCPI13_2:\nCPI14_2:\nCPI15_1:\nCPI16_1:\n\t.cell 904625697166532776746648320380374280103671760270919307471179981048634146816\nCPI12_4:\nCPI14_13:\n\t.cell -15402802100530019096323380498944738953123845089667699673314898783681816316945\nCPI12_5:\nCPI14_14:\n\t.cell 44065838241030143116324720188876985940908656145555552347773292252211112312832\nCPI12_6:\nCPI14_15:\n\t.cell 31354931781638678607228669297131712859100820671745083778533502622993977909346\nCPI12_7:\nCPI13_7:\nCPI14_7:\nCPI15_7:\nCPI16_7:\n\t.cell 3963877391197344453575983046348115674221700746820753546331534351508065746944\nCPI12_8:\nCPI13_8:\nCPI14_8:\nCPI15_8:\nCPI16_8:\n\t.cell 10458117451882892562347801444352\nCPI12_9:\nCPI14_16:\n\t.cell 45887578820189300338443374388718498632482616163288499555830078344056365121536\nCPI12_10:\nCPI14_17:\n\t.cell 31354931781638678607228669297131712859126084785867252355217498662940140921970\nCPI12_11:\nCPI14_18:\n\t.cell 45433405612597180762055095701412804886438245671210399661410036396145969725440\nCPI12_12:\nCPI14_19:\n\t.cell 31354931781638678607228669297131712859107492772550336241160036866987736981860\nCPI13_4:\nCPI14_4:\nCPI15_4:\nCPI16_4:\n\t.cell -52305948261162578668367882225327028569797882979485679342215860919519743330011\nCPI13_5:\nCPI14_5:\nCPI15_5:\nCPI16_5:\n\t.cell 52219164999525148860834357634456956735281286572158918307284071279203377479680\nCPI13_6:\nCPI14_6:\nCPI15_6:\nCPI16_6:\n\t.cell 31354931781638678487916134672869638488806705378895508030211234510262059168357\nCPI13_9:\nCPI14_9:\nCPI15_9:\nCPI16_9:\n\t.cell 51742913093258732729005998692887265601192425265805909375210916622055285719040\nCPI13_10:\nCPI14_10:\nCPI15_10:\nCPI16_10:\n\t.cell 31354931781638678487916134672869638484047149969764982831501014746446650500196\nCPI14_11:\n\t.cell 31354931781638678538084197150757782427756587561754988975511141185730285404160\nCPI14_12:\n\t.cell 7922816251426433759354395033600\nCPI16_11:\n\t.cell 14690266658072097593480850647027335513285713462661904985951319567533531463680\nCPI16_12:\n\t.cell 31354931781638678506476475496475743842680577777870365728514456330491174612855\n","bytecode":{"object":""},"methodIdentifiers":{"allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","decimals()":"313ce567","decreaseAllowance(address,uint256)":"a457c2d7","increaseAllowance(address,uint256)":"39509351","name()":"06fdde03","symbol()":"95d89b41","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd"}},"irOptimized":"/*=====================================================*\n *                       WARNING                       *\n *  Solidity to Yul compilation is still EXPERIMENTAL  *\n *       It can result in LOSS OF FUNDS or worse       *\n *                !USE AT YOUR OWN RISK!               *\n *=====================================================*/\n\n/// @use-src 3:\"@openzeppelin/contracts/token/ERC20/ERC20.sol\", 4:\"@openzeppelin/contracts/token/ERC20/IERC20.sol\", 5:\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\", 9:\"@openzeppelin/contracts/utils/Context.sol\"\nobject \"ERC20_1088\" {\n    code {\n        {\n            /// @src 3:1532:12844  \"contract ERC20 is Context, IERC20, IERC20Metadata {...\"\n            mstore(64, 128)\n            if callvalue() { revert(0, 0) }\n            let programSize := datasize(\"ERC20_1088\")\n            let argSize := sub(codesize(), programSize)\n            let memoryDataOffset := allocate_memory(argSize)\n            codecopy(memoryDataOffset, programSize, argSize)\n            let _1 := add(memoryDataOffset, argSize)\n            if slt(sub(_1, memoryDataOffset), 64)\n            {\n                revert(/** @src -1:-1:-1 */ 0, 0)\n            }\n            /// @src 3:1532:12844  \"contract ERC20 is Context, IERC20, IERC20Metadata {...\"\n            let offset := mload(memoryDataOffset)\n            let _2 := sub(shl(64, 1), 1)\n            if gt(offset, _2)\n            {\n                revert(/** @src -1:-1:-1 */ 0, 0)\n            }\n            /// @src 3:1532:12844  \"contract ERC20 is Context, IERC20, IERC20Metadata {...\"\n            let value0 := abi_decode_string_fromMemory(add(memoryDataOffset, offset), _1)\n            let _3 := 32\n            let offset_1 := mload(add(memoryDataOffset, _3))\n            if gt(offset_1, _2)\n            {\n                revert(/** @src -1:-1:-1 */ 0, 0)\n            }\n            /// @src 3:1532:12844  \"contract ERC20 is Context, IERC20, IERC20Metadata {...\"\n            let _4 := abi_decode_string_fromMemory(add(memoryDataOffset, offset_1), _1)\n            let newLen := mload(value0)\n            if gt(newLen, _2) { panic_error_0x41() }\n            clean_up_bytearray_end_slots_string_storage(extract_byte_array_length(sload(/** @src 3:2046:2059  \"_name = name_\" */ 0x03)), /** @src 3:1532:12844  \"contract ERC20 is Context, IERC20, IERC20Metadata {...\" */ newLen)\n            let srcOffset := 0\n            srcOffset := _3\n            switch gt(newLen, 31)\n            case 1 {\n                let loopEnd := and(newLen, not(31))\n                let dstPtr := array_dataslot_string_storage_998()\n                let i := 0\n                for { } lt(i, loopEnd) { i := add(i, _3) }\n                {\n                    sstore(dstPtr, mload(add(value0, srcOffset)))\n                    dstPtr := add(dstPtr, 1)\n                    srcOffset := add(srcOffset, _3)\n                }\n                if lt(loopEnd, newLen)\n                {\n                    let lastValue := mload(add(value0, srcOffset))\n                    sstore(dstPtr, and(lastValue, not(shr(and(shl(/** @src 3:2046:2059  \"_name = name_\" */ 0x03, /** @src 3:1532:12844  \"contract ERC20 is Context, IERC20, IERC20Metadata {...\" */ newLen), 248), not(0)))))\n                }\n                sstore(/** @src 3:2046:2059  \"_name = name_\" */ 0x03, /** @src 3:1532:12844  \"contract ERC20 is Context, IERC20, IERC20Metadata {...\" */ add(shl(1, newLen), 1))\n            }\n            default {\n                let value := 0\n                if newLen\n                {\n                    value := mload(add(value0, srcOffset))\n                }\n                sstore(/** @src 3:2046:2059  \"_name = name_\" */ 0x03, /** @src 3:1532:12844  \"contract ERC20 is Context, IERC20, IERC20Metadata {...\" */ extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n            }\n            copy_byte_array_to_storage_from_string_to_string(_4)\n            let _5 := mload(64)\n            let _6 := datasize(\"ERC20_1088_deployed\")\n            codecopy(_5, dataoffset(\"ERC20_1088_deployed\"), _6)\n            return(_5, _6)\n        }\n        function panic_error_0x41()\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x41)\n            revert(0, 0x24)\n        }\n        function allocate_memory(size) -> memPtr\n        {\n            memPtr := mload(64)\n            let newFreePtr := add(memPtr, and(add(size, 31), not(31)))\n            if or(gt(newFreePtr, sub(shl(64, 1), 1)), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n            mstore(64, newFreePtr)\n        }\n        function abi_decode_string_fromMemory(offset, end) -> array\n        {\n            if iszero(slt(add(offset, 0x1f), end)) { revert(0, 0) }\n            let _1 := mload(offset)\n            if gt(_1, sub(shl(64, 1), 1)) { panic_error_0x41() }\n            let _2 := 0x20\n            let array_1 := allocate_memory(add(and(add(_1, 0x1f), not(31)), _2))\n            mstore(array_1, _1)\n            if gt(add(add(offset, _1), _2), end)\n            {\n                revert(/** @src -1:-1:-1 */ 0, 0)\n            }\n            /// @src 3:1532:12844  \"contract ERC20 is Context, IERC20, IERC20Metadata {...\"\n            let i := /** @src -1:-1:-1 */ 0\n            /// @src 3:1532:12844  \"contract ERC20 is Context, IERC20, IERC20Metadata {...\"\n            for { } lt(i, _1) { i := add(i, _2) }\n            {\n                mstore(add(add(array_1, i), _2), mload(add(add(offset, i), _2)))\n            }\n            if gt(i, _1)\n            {\n                mstore(add(add(array_1, _1), _2), /** @src -1:-1:-1 */ 0)\n            }\n            /// @src 3:1532:12844  \"contract ERC20 is Context, IERC20, IERC20Metadata {...\"\n            array := array_1\n        }\n        function extract_byte_array_length(data) -> length\n        {\n            length := shr(1, data)\n            let outOfPlaceEncoding := and(data, 1)\n            if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n            if eq(outOfPlaceEncoding, lt(length, 32))\n            {\n                mstore(0, shl(224, 0x4e487b71))\n                mstore(4, 0x22)\n                revert(0, 0x24)\n            }\n        }\n        function array_dataslot_string_storage_998() -> data\n        {\n            mstore(0, /** @src 3:2046:2059  \"_name = name_\" */ 0x03)\n            /// @src 3:1532:12844  \"contract ERC20 is Context, IERC20, IERC20Metadata {...\"\n            data := keccak256(0, 0x20)\n        }\n        function array_dataslot_string_storage() -> data\n        {\n            mstore(0, /** @src 3:2069:2086  \"_symbol = symbol_\" */ 0x04)\n            /// @src 3:1532:12844  \"contract ERC20 is Context, IERC20, IERC20Metadata {...\"\n            data := keccak256(0, 0x20)\n        }\n        function clean_up_bytearray_end_slots_string_storage(len, startIndex)\n        {\n            if gt(len, 31)\n            {\n                /// @src -1:-1:-1\n                let _1 := 0\n                /// @src 3:1532:12844  \"contract ERC20 is Context, IERC20, IERC20Metadata {...\"\n                mstore(/** @src -1:-1:-1 */ _1, /** @src 3:2046:2059  \"_name = name_\" */ 0x03)\n                /// @src 3:1532:12844  \"contract ERC20 is Context, IERC20, IERC20Metadata {...\"\n                let data := keccak256(/** @src -1:-1:-1 */ _1, /** @src 3:1532:12844  \"contract ERC20 is Context, IERC20, IERC20Metadata {...\" */ 0x20)\n                let deleteStart := add(data, shr(5, add(startIndex, 31)))\n                if lt(startIndex, 0x20) { deleteStart := data }\n                let _2 := add(data, shr(5, add(len, 31)))\n                let start := deleteStart\n                for { } lt(start, _2) { start := add(start, 1) }\n                {\n                    sstore(start, /** @src -1:-1:-1 */ _1)\n                }\n            }\n        }\n        /// @src 3:1532:12844  \"contract ERC20 is Context, IERC20, IERC20Metadata {...\"\n        function clean_up_bytearray_end_slots_string_storage_1902(len, startIndex)\n        {\n            if gt(len, 31)\n            {\n                /// @src -1:-1:-1\n                let _1 := 0\n                /// @src 3:1532:12844  \"contract ERC20 is Context, IERC20, IERC20Metadata {...\"\n                mstore(/** @src -1:-1:-1 */ _1, /** @src 3:2069:2086  \"_symbol = symbol_\" */ 0x04)\n                /// @src 3:1532:12844  \"contract ERC20 is Context, IERC20, IERC20Metadata {...\"\n                let data := keccak256(/** @src -1:-1:-1 */ _1, /** @src 3:1532:12844  \"contract ERC20 is Context, IERC20, IERC20Metadata {...\" */ 0x20)\n                let deleteStart := add(data, shr(5, add(startIndex, 31)))\n                if lt(startIndex, 0x20) { deleteStart := data }\n                let _2 := add(data, shr(5, add(len, 31)))\n                let start := deleteStart\n                for { } lt(start, _2) { start := add(start, 1) }\n                {\n                    sstore(start, /** @src -1:-1:-1 */ _1)\n                }\n            }\n        }\n        /// @src 3:1532:12844  \"contract ERC20 is Context, IERC20, IERC20Metadata {...\"\n        function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used\n        {\n            used := or(and(data, not(shr(shl(3, len), not(0)))), shl(1, len))\n        }\n        function copy_byte_array_to_storage_from_string_to_string(src)\n        {\n            let newLen := mload(src)\n            if gt(newLen, sub(shl(64, 1), 1)) { panic_error_0x41() }\n            clean_up_bytearray_end_slots_string_storage_1902(extract_byte_array_length(sload(/** @src 3:2069:2086  \"_symbol = symbol_\" */ 0x04)), /** @src 3:1532:12844  \"contract ERC20 is Context, IERC20, IERC20Metadata {...\" */ newLen)\n            let srcOffset := 0\n            let srcOffset_1 := 0x20\n            srcOffset := srcOffset_1\n            switch gt(newLen, 31)\n            case 1 {\n                let loopEnd := and(newLen, not(31))\n                let dstPtr := array_dataslot_string_storage()\n                let i := 0\n                for { } lt(i, loopEnd) { i := add(i, srcOffset_1) }\n                {\n                    sstore(dstPtr, mload(add(src, srcOffset)))\n                    dstPtr := add(dstPtr, 1)\n                    srcOffset := add(srcOffset, srcOffset_1)\n                }\n                if lt(loopEnd, newLen)\n                {\n                    let lastValue := mload(add(src, srcOffset))\n                    sstore(dstPtr, and(lastValue, not(shr(and(shl(3, newLen), 248), not(0)))))\n                }\n                sstore(/** @src 3:2069:2086  \"_symbol = symbol_\" */ 0x04, /** @src 3:1532:12844  \"contract ERC20 is Context, IERC20, IERC20Metadata {...\" */ add(shl(1, newLen), 1))\n            }\n            default {\n                let value := 0\n                if newLen\n                {\n                    value := mload(add(src, srcOffset))\n                }\n                sstore(/** @src 3:2069:2086  \"_symbol = symbol_\" */ 0x04, /** @src 3:1532:12844  \"contract ERC20 is Context, IERC20, IERC20Metadata {...\" */ extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n            }\n        }\n    }\n    /// @use-src 3:\"@openzeppelin/contracts/token/ERC20/ERC20.sol\", 9:\"@openzeppelin/contracts/utils/Context.sol\"\n    object \"ERC20_1088_deployed\" {\n        code {\n            {\n                /// @src 3:1532:12844  \"contract ERC20 is Context, IERC20, IERC20Metadata {...\"\n                let _1 := 64\n                mstore(_1, 128)\n                if iszero(lt(calldatasize(), 4))\n                {\n                    let _2 := 0\n                    switch shr(224, calldataload(_2))\n                    case 0x06fdde03 {\n                        if callvalue() { revert(_2, _2) }\n                        abi_decode(calldatasize())\n                        let converted := copy_array_from_storage_to_memory_string_2479()\n                        let memPos := mload(_1)\n                        return(memPos, sub(abi_encode_string(memPos, converted), memPos))\n                    }\n                    case 0x095ea7b3 {\n                        if callvalue() { revert(_2, _2) }\n                        let param, param_1 := abi_decode_addresst_uint256(calldatasize())\n                        let ret := fun_approve(param, param_1)\n                        let memPos_1 := mload(_1)\n                        return(memPos_1, sub(abi_encode_bool(memPos_1, ret), memPos_1))\n                    }\n                    case 0x18160ddd {\n                        if callvalue() { revert(_2, _2) }\n                        abi_decode(calldatasize())\n                        let _3 := sload(/** @src 3:3342:3354  \"_totalSupply\" */ 0x02)\n                        /// @src 3:1532:12844  \"contract ERC20 is Context, IERC20, IERC20Metadata {...\"\n                        let memPos_2 := mload(_1)\n                        return(memPos_2, sub(abi_encode_uint256(memPos_2, _3), memPos_2))\n                    }\n                    case 0x23b872dd {\n                        if callvalue() { revert(_2, _2) }\n                        let param_2, param_3, param_4 := abi_decode_addresst_addresst_uint256(calldatasize())\n                        let ret_1 := fun_transferFrom(param_2, param_3, param_4)\n                        let memPos_3 := mload(_1)\n                        return(memPos_3, sub(abi_encode_bool(memPos_3, ret_1), memPos_3))\n                    }\n                    case 0x313ce567 {\n                        if callvalue() { revert(_2, _2) }\n                        abi_decode(calldatasize())\n                        let memPos_4 := mload(_1)\n                        return(memPos_4, sub(abi_encode_uint8(memPos_4), memPos_4))\n                    }\n                    case 0x39509351 {\n                        if callvalue() { revert(_2, _2) }\n                        let param_5, param_6 := abi_decode_addresst_uint256(calldatasize())\n                        let ret_2 := fun_increaseAllowance(param_5, param_6)\n                        let memPos_5 := mload(_1)\n                        return(memPos_5, sub(abi_encode_bool(memPos_5, ret_2), memPos_5))\n                    }\n                    case 0x70a08231 {\n                        if callvalue() { revert(_2, _2) }\n                        let ret_3 := fun_balanceOf(abi_decode_address(calldatasize()))\n                        let memPos_6 := mload(_1)\n                        return(memPos_6, sub(abi_encode_uint256(memPos_6, ret_3), memPos_6))\n                    }\n                    case 0x95d89b41 {\n                        if callvalue() { revert(_2, _2) }\n                        abi_decode(calldatasize())\n                        let converted_1 := copy_array_from_storage_to_memory_string()\n                        let memPos_7 := mload(_1)\n                        return(memPos_7, sub(abi_encode_string(memPos_7, converted_1), memPos_7))\n                    }\n                    case 0xa457c2d7 {\n                        if callvalue() { revert(_2, _2) }\n                        let param_7, param_8 := abi_decode_addresst_uint256(calldatasize())\n                        let ret_4 := fun_decreaseAllowance(param_7, param_8)\n                        let memPos_8 := mload(_1)\n                        return(memPos_8, sub(abi_encode_bool(memPos_8, ret_4), memPos_8))\n                    }\n                    case 0xa9059cbb {\n                        if callvalue() { revert(_2, _2) }\n                        let param_9, param_10 := abi_decode_addresst_uint256(calldatasize())\n                        let ret_5 := fun_transfer(param_9, param_10)\n                        let memPos_9 := mload(_1)\n                        return(memPos_9, sub(abi_encode_bool(memPos_9, ret_5), memPos_9))\n                    }\n                    case 0xdd62ed3e {\n                        if callvalue() { revert(_2, _2) }\n                        let param_11, param_12 := abi_decode_addresst_address(calldatasize())\n                        let _4 := sload(/** @src 3:4102:4129  \"_allowances[owner][spender]\" */ mapping_index_access_mapping_address_uint256_of_address(/** @src 3:4102:4120  \"_allowances[owner]\" */ mapping_index_access_mapping_address_uint256_of_address_2492(/** @src 3:1532:12844  \"contract ERC20 is Context, IERC20, IERC20Metadata {...\" */ param_11), param_12))\n                        let memPos_10 := mload(_1)\n                        return(memPos_10, sub(abi_encode_uint256(memPos_10, _4), memPos_10))\n                    }\n                }\n                revert(0, 0)\n            }\n            function abi_decode(dataEnd)\n            {\n                if slt(add(dataEnd, not(3)), 0) { revert(0, 0) }\n            }\n            function array_storeLengthForEncoding_string(pos, length) -> updated_pos\n            {\n                mstore(pos, length)\n                updated_pos := add(pos, 0x20)\n            }\n            function abi_encode_string(headStart, value0) -> tail\n            {\n                let _1 := 32\n                mstore(headStart, _1)\n                let length := mload(value0)\n                mstore(add(headStart, _1), length)\n                let i := 0\n                for { } lt(i, length) { i := add(i, _1) }\n                {\n                    mstore(add(add(headStart, i), 64), mload(add(add(value0, i), _1)))\n                }\n                if gt(i, length)\n                {\n                    mstore(add(add(headStart, length), 64), 0)\n                }\n                tail := add(add(headStart, and(add(length, 31), not(31))), 64)\n            }\n            function abi_decode_addresst_uint256(dataEnd) -> value0, value1\n            {\n                if slt(add(dataEnd, not(3)), 64) { revert(0, 0) }\n                let value := calldataload(4)\n                if iszero(eq(value, and(value, sub(shl(160, 1), 1))))\n                {\n                    revert(/** @src -1:-1:-1 */ 0, 0)\n                }\n                /// @src 3:1532:12844  \"contract ERC20 is Context, IERC20, IERC20Metadata {...\"\n                value0 := value\n                value1 := calldataload(36)\n            }\n            function abi_encode_bool(headStart, value0) -> tail\n            {\n                tail := add(headStart, 32)\n                mstore(headStart, iszero(iszero(value0)))\n            }\n            function abi_encode_uint256(headStart, value0) -> tail\n            {\n                tail := add(headStart, 32)\n                mstore(headStart, value0)\n            }\n            function abi_decode_addresst_addresst_uint256(dataEnd) -> value0, value1, value2\n            {\n                if slt(add(dataEnd, not(3)), 96) { revert(0, 0) }\n                let value := calldataload(4)\n                let _1 := sub(shl(160, 1), 1)\n                if iszero(eq(value, and(value, _1)))\n                {\n                    revert(/** @src -1:-1:-1 */ 0, 0)\n                }\n                /// @src 3:1532:12844  \"contract ERC20 is Context, IERC20, IERC20Metadata {...\"\n                value0 := value\n                let value_1 := calldataload(36)\n                if iszero(eq(value_1, and(value_1, _1)))\n                {\n                    revert(/** @src -1:-1:-1 */ 0, 0)\n                }\n                /// @src 3:1532:12844  \"contract ERC20 is Context, IERC20, IERC20Metadata {...\"\n                value1 := value_1\n                value2 := calldataload(68)\n            }\n            function abi_encode_uint8(headStart) -> tail\n            {\n                tail := add(headStart, 32)\n                mstore(headStart, /** @src 3:3186:3188  \"18\" */ 0x12)\n            }\n            /// @src 3:1532:12844  \"contract ERC20 is Context, IERC20, IERC20Metadata {...\"\n            function abi_decode_address(dataEnd) -> value0\n            {\n                if slt(add(dataEnd, not(3)), 32) { revert(0, 0) }\n                let value := calldataload(4)\n                if iszero(eq(value, and(value, sub(shl(160, 1), 1))))\n                {\n                    revert(/** @src -1:-1:-1 */ 0, 0)\n                }\n                /// @src 3:1532:12844  \"contract ERC20 is Context, IERC20, IERC20Metadata {...\"\n                value0 := value\n            }\n            function abi_decode_addresst_address(dataEnd) -> value0, value1\n            {\n                if slt(add(dataEnd, not(3)), 64) { revert(0, 0) }\n                let value := calldataload(4)\n                let _1 := sub(shl(160, 1), 1)\n                if iszero(eq(value, and(value, _1)))\n                {\n                    revert(/** @src -1:-1:-1 */ 0, 0)\n                }\n                /// @src 3:1532:12844  \"contract ERC20 is Context, IERC20, IERC20Metadata {...\"\n                value0 := value\n                let value_1 := calldataload(36)\n                if iszero(eq(value_1, and(value_1, _1)))\n                {\n                    revert(/** @src -1:-1:-1 */ 0, 0)\n                }\n                /// @src 3:1532:12844  \"contract ERC20 is Context, IERC20, IERC20Metadata {...\"\n                value1 := value_1\n            }\n            function array_dataslot_string_storage() -> data\n            {\n                mstore(0, /** @src 3:2244:2249  \"_name\" */ 0x03)\n                /// @src 3:1532:12844  \"contract ERC20 is Context, IERC20, IERC20Metadata {...\"\n                data := 87903029871075914254377627908054574944891091886930582284385770809450030037083\n            }\n            function array_dataslot_string_storage_4050() -> data\n            {\n                mstore(0, 4)\n                data := 62514009886607029107290561805838585334079798074568712924583230797734656856475\n            }\n            function finalize_allocation(memPtr, size)\n            {\n                let newFreePtr := add(memPtr, and(add(size, 31), not(31)))\n                if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr))\n                {\n                    mstore(0, shl(224, 0x4e487b71))\n                    mstore(4, 0x41)\n                    revert(0, 0x24)\n                }\n                mstore(64, newFreePtr)\n            }\n            function copy_array_from_storage_to_memory_string_2479() -> memPtr\n            {\n                memPtr := mload(64)\n                let ret := /** @src -1:-1:-1 */ 0\n                /// @src 3:1532:12844  \"contract ERC20 is Context, IERC20, IERC20Metadata {...\"\n                let slotValue := sload(/** @src 3:2244:2249  \"_name\" */ 0x03)\n                /// @src 3:1532:12844  \"contract ERC20 is Context, IERC20, IERC20Metadata {...\"\n                let length := /** @src -1:-1:-1 */ ret\n                /// @src 3:1532:12844  \"contract ERC20 is Context, IERC20, IERC20Metadata {...\"\n                let _1 := 1\n                length := shr(_1, slotValue)\n                let outOfPlaceEncoding := and(slotValue, _1)\n                if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n                let _2 := 32\n                if eq(outOfPlaceEncoding, lt(length, _2))\n                {\n                    mstore(/** @src -1:-1:-1 */ ret, /** @src 3:1532:12844  \"contract ERC20 is Context, IERC20, IERC20Metadata {...\" */ shl(224, 0x4e487b71))\n                    mstore(4, 0x22)\n                    revert(/** @src -1:-1:-1 */ ret, /** @src 3:1532:12844  \"contract ERC20 is Context, IERC20, IERC20Metadata {...\" */ 0x24)\n                }\n                let pos := array_storeLengthForEncoding_string(memPtr, length)\n                switch outOfPlaceEncoding\n                case 0 {\n                    mstore(pos, and(slotValue, not(255)))\n                    ret := add(pos, _2)\n                }\n                case 1 {\n                    let dataPos := array_dataslot_string_storage()\n                    let i := /** @src -1:-1:-1 */ 0\n                    /// @src 3:1532:12844  \"contract ERC20 is Context, IERC20, IERC20Metadata {...\"\n                    for { } lt(i, length) { i := add(i, _2) }\n                    {\n                        mstore(add(pos, i), sload(dataPos))\n                        dataPos := add(dataPos, _1)\n                    }\n                    ret := add(pos, i)\n                }\n                finalize_allocation(memPtr, sub(ret, memPtr))\n            }\n            function copy_array_from_storage_to_memory_string() -> memPtr\n            {\n                memPtr := mload(64)\n                let ret := /** @src -1:-1:-1 */ 0\n                /// @src 3:1532:12844  \"contract ERC20 is Context, IERC20, IERC20Metadata {...\"\n                let slotValue := sload(4)\n                let length := /** @src -1:-1:-1 */ ret\n                /// @src 3:1532:12844  \"contract ERC20 is Context, IERC20, IERC20Metadata {...\"\n                let _1 := 1\n                length := shr(_1, slotValue)\n                let outOfPlaceEncoding := and(slotValue, _1)\n                if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n                let _2 := 32\n                if eq(outOfPlaceEncoding, lt(length, _2))\n                {\n                    mstore(/** @src -1:-1:-1 */ ret, /** @src 3:1532:12844  \"contract ERC20 is Context, IERC20, IERC20Metadata {...\" */ shl(224, 0x4e487b71))\n                    mstore(4, 0x22)\n                    revert(/** @src -1:-1:-1 */ ret, /** @src 3:1532:12844  \"contract ERC20 is Context, IERC20, IERC20Metadata {...\" */ 0x24)\n                }\n                let pos := array_storeLengthForEncoding_string(memPtr, length)\n                switch outOfPlaceEncoding\n                case 0 {\n                    mstore(pos, and(slotValue, not(255)))\n                    ret := add(pos, _2)\n                }\n                case 1 {\n                    let dataPos := array_dataslot_string_storage_4050()\n                    let i := /** @src -1:-1:-1 */ 0\n                    /// @src 3:1532:12844  \"contract ERC20 is Context, IERC20, IERC20Metadata {...\"\n                    for { } lt(i, length) { i := add(i, _2) }\n                    {\n                        mstore(add(pos, i), sload(dataPos))\n                        dataPos := add(dataPos, _1)\n                    }\n                    ret := add(pos, i)\n                }\n                finalize_allocation(memPtr, sub(ret, memPtr))\n            }\n            function mapping_index_access_mapping_address_uint256_of_address_2492(key) -> dataSlot\n            {\n                mstore(0, and(key, sub(shl(160, 1), 1)))\n                mstore(0x20, /** @src 3:4102:4113  \"_allowances\" */ 0x01)\n                /// @src 3:1532:12844  \"contract ERC20 is Context, IERC20, IERC20Metadata {...\"\n                dataSlot := keccak256(0, 0x40)\n            }\n            function mapping_index_access_mapping_address_uint256_of_address_2493(key) -> dataSlot\n            {\n                mstore(/** @src 3:7568:7569  \"0\" */ 0x00, /** @src 3:1532:12844  \"contract ERC20 is Context, IERC20, IERC20Metadata {...\" */ and(key, sub(shl(160, 1), 1)))\n                mstore(0x20, /** @src 3:7568:7569  \"0\" */ 0x00)\n                /// @src 3:1532:12844  \"contract ERC20 is Context, IERC20, IERC20Metadata {...\"\n                dataSlot := keccak256(/** @src 3:7568:7569  \"0\" */ 0x00, /** @src 3:1532:12844  \"contract ERC20 is Context, IERC20, IERC20Metadata {...\" */ 0x40)\n            }\n            function mapping_index_access_mapping_address_uint256_of_address(slot, key) -> dataSlot\n            {\n                mstore(0, and(key, sub(shl(160, 1), 1)))\n                mstore(0x20, slot)\n                dataSlot := keccak256(0, 0x40)\n            }\n            /// @ast-id 600 @src 3:3419:3544  \"function balanceOf(address account) public view virtual override returns (uint256) {...\"\n            function fun_balanceOf(var_account) -> var\n            {\n                /// @src 3:1532:12844  \"contract ERC20 is Context, IERC20, IERC20Metadata {...\"\n                mstore(/** @src 3:3519:3528  \"_balances\" */ 0x00, /** @src 3:1532:12844  \"contract ERC20 is Context, IERC20, IERC20Metadata {...\" */ and(var_account, sub(shl(160, 1), 1)))\n                mstore(0x20, /** @src 3:3519:3528  \"_balances\" */ 0x00)\n                /// @src 3:3512:3537  \"return _balances[account]\"\n                var := /** @src 3:1532:12844  \"contract ERC20 is Context, IERC20, IERC20Metadata {...\" */ sload(keccak256(/** @src 3:3519:3528  \"_balances\" */ 0x00, /** @src 3:1532:12844  \"contract ERC20 is Context, IERC20, IERC20Metadata {...\" */ 0x40))\n            }\n            /// @ast-id 625 @src 3:3740:3929  \"function transfer(address to, uint256 amount) public virtual override returns (bool) {...\"\n            function fun_transfer(var_to, var_amount) -> var\n            {\n                /// @src 3:3894:3900  \"amount\"\n                fun__transfer(/** @src 9:719:729  \"msg.sender\" */ caller(), /** @src 3:3894:3900  \"amount\" */ var_to, var_amount)\n                /// @src 3:3911:3922  \"return true\"\n                var := /** @src 3:3918:3922  \"true\" */ 0x01\n            }\n            /// @ast-id 668 @src 3:4444:4641  \"function approve(address spender, uint256 amount) public virtual override returns (bool) {...\"\n            function fun_approve(var_spender, var_amount) -> var_\n            {\n                /// @src 3:4606:4612  \"amount\"\n                fun__approve(/** @src 9:719:729  \"msg.sender\" */ caller(), /** @src 3:4606:4612  \"amount\" */ var_spender, var_amount)\n                /// @src 3:4623:4634  \"return true\"\n                var_ := /** @src 3:4630:4634  \"true\" */ 0x01\n            }\n            /// @ast-id 701 @src 3:5203:5459  \"function transferFrom(address from, address to, uint256 amount) public virtual override returns (bool) {...\"\n            function fun_transferFrom(var_from, var_to, var_amount) -> var\n            {\n                /// @src 3:1532:12844  \"contract ERC20 is Context, IERC20, IERC20Metadata {...\"\n                mstore(/** @src -1:-1:-1 */ 0, /** @src 3:1532:12844  \"contract ERC20 is Context, IERC20, IERC20Metadata {...\" */ and(var_from, sub(shl(160, 1), 1)))\n                mstore(0x20, /** @src 3:4102:4113  \"_allowances\" */ 0x01)\n                /// @src 3:1532:12844  \"contract ERC20 is Context, IERC20, IERC20Metadata {...\"\n                let _1 := sload(/** @src 3:4102:4129  \"_allowances[owner][spender]\" */ mapping_index_access_mapping_address_uint256_of_address(/** @src 3:1532:12844  \"contract ERC20 is Context, IERC20, IERC20Metadata {...\" */ keccak256(/** @src -1:-1:-1 */ 0, /** @src 3:1532:12844  \"contract ERC20 is Context, IERC20, IERC20Metadata {...\" */ 0x40), /** @src 9:719:729  \"msg.sender\" */ caller()))\n                /// @src 3:11240:11483  \"if (currentAllowance != type(uint256).max) {...\"\n                if /** @src 3:11244:11281  \"currentAllowance != type(uint256).max\" */ iszero(eq(_1, /** @src 3:11264:11281  \"type(uint256).max\" */ not(0)))\n                /// @src 3:11240:11483  \"if (currentAllowance != type(uint256).max) {...\"\n                {\n                    /// @src 3:1532:12844  \"contract ERC20 is Context, IERC20, IERC20Metadata {...\"\n                    if /** @src 3:11305:11331  \"currentAllowance >= amount\" */ lt(_1, var_amount)\n                    /// @src 3:1532:12844  \"contract ERC20 is Context, IERC20, IERC20Metadata {...\"\n                    {\n                        let memPtr := mload(0x40)\n                        mstore(memPtr, shl(229, 4594637))\n                        mstore(add(memPtr, 4), 0x20)\n                        mstore(add(memPtr, 36), 29)\n                        mstore(add(memPtr, 68), \"ERC20: insufficient allowance\")\n                        revert(memPtr, 100)\n                    }\n                    /// @src 3:11432:11457  \"currentAllowance - amount\"\n                    fun__approve(var_from, /** @src 9:719:729  \"msg.sender\" */ caller(), /** @src 3:1532:12844  \"contract ERC20 is Context, IERC20, IERC20Metadata {...\" */ sub(/** @src 3:11432:11457  \"currentAllowance - amount\" */ _1, var_amount))\n                }\n                /// @src 3:5424:5430  \"amount\"\n                fun__transfer(var_from, var_to, var_amount)\n                /// @src 3:5441:5452  \"return true\"\n                var := /** @src 3:4102:4113  \"_allowances\" */ 0x01\n            }\n            /// @ast-id 730 @src 3:5854:6088  \"function increaseAllowance(address spender, uint256 addedValue) public virtual returns (bool) {...\"\n            function fun_increaseAllowance(var_spender, var_addedValue) -> var\n            {\n                /// @src 3:1532:12844  \"contract ERC20 is Context, IERC20, IERC20Metadata {...\"\n                mstore(/** @src -1:-1:-1 */ 0, /** @src 9:719:729  \"msg.sender\" */ caller())\n                /// @src 3:1532:12844  \"contract ERC20 is Context, IERC20, IERC20Metadata {...\"\n                mstore(0x20, /** @src 3:4102:4113  \"_allowances\" */ 0x01)\n                /// @src 3:1532:12844  \"contract ERC20 is Context, IERC20, IERC20Metadata {...\"\n                let _1 := sload(/** @src 3:4102:4129  \"_allowances[owner][spender]\" */ mapping_index_access_mapping_address_uint256_of_address(/** @src 3:1532:12844  \"contract ERC20 is Context, IERC20, IERC20Metadata {...\" */ keccak256(/** @src -1:-1:-1 */ 0, /** @src 3:1532:12844  \"contract ERC20 is Context, IERC20, IERC20Metadata {...\" */ 0x40), /** @src 3:6021:6046  \"allowance(owner, spender)\" */ var_spender))\n                /// @src 3:1532:12844  \"contract ERC20 is Context, IERC20, IERC20Metadata {...\"\n                if gt(_1, not(var_addedValue))\n                {\n                    mstore(/** @src -1:-1:-1 */ 0, /** @src 3:1532:12844  \"contract ERC20 is Context, IERC20, IERC20Metadata {...\" */ shl(224, 0x4e487b71))\n                    mstore(4, 0x11)\n                    revert(/** @src -1:-1:-1 */ 0, /** @src 3:1532:12844  \"contract ERC20 is Context, IERC20, IERC20Metadata {...\" */ 0x24)\n                }\n                /// @src 3:6021:6059  \"allowance(owner, spender) + addedValue\"\n                fun__approve(/** @src 9:719:729  \"msg.sender\" */ caller(), /** @src 3:6021:6059  \"allowance(owner, spender) + addedValue\" */ var_spender, /** @src 3:1532:12844  \"contract ERC20 is Context, IERC20, IERC20Metadata {...\" */ add(_1, var_addedValue))\n                /// @src 3:6070:6081  \"return true\"\n                var := /** @src 3:4102:4113  \"_allowances\" */ 0x01\n            }\n            /// @ast-id 771 @src 3:6575:7002  \"function decreaseAllowance(address spender, uint256 subtractedValue) public virtual returns (bool) {...\"\n            function fun_decreaseAllowance(var_spender, var_subtractedValue) -> var\n            {\n                /// @src 3:1532:12844  \"contract ERC20 is Context, IERC20, IERC20Metadata {...\"\n                mstore(/** @src -1:-1:-1 */ 0, /** @src 9:719:729  \"msg.sender\" */ caller())\n                /// @src 3:1532:12844  \"contract ERC20 is Context, IERC20, IERC20Metadata {...\"\n                mstore(0x20, /** @src 3:4102:4113  \"_allowances\" */ 0x01)\n                /// @src 3:1532:12844  \"contract ERC20 is Context, IERC20, IERC20Metadata {...\"\n                let _1 := sload(/** @src 3:4102:4129  \"_allowances[owner][spender]\" */ mapping_index_access_mapping_address_uint256_of_address(/** @src 3:1532:12844  \"contract ERC20 is Context, IERC20, IERC20Metadata {...\" */ keccak256(/** @src -1:-1:-1 */ 0, /** @src 3:1532:12844  \"contract ERC20 is Context, IERC20, IERC20Metadata {...\" */ 0x40), /** @src 3:6749:6774  \"allowance(owner, spender)\" */ var_spender))\n                /// @src 3:1532:12844  \"contract ERC20 is Context, IERC20, IERC20Metadata {...\"\n                if /** @src 3:6792:6827  \"currentAllowance >= subtractedValue\" */ lt(_1, var_subtractedValue)\n                /// @src 3:1532:12844  \"contract ERC20 is Context, IERC20, IERC20Metadata {...\"\n                {\n                    let memPtr := mload(0x40)\n                    mstore(memPtr, shl(229, 4594637))\n                    mstore(add(memPtr, 4), 0x20)\n                    mstore(add(memPtr, 36), 37)\n                    mstore(add(memPtr, 68), \"ERC20: decreased allowance below\")\n                    mstore(add(memPtr, 100), \" zero\")\n                    revert(memPtr, 132)\n                }\n                /// @src 3:6928:6962  \"currentAllowance - subtractedValue\"\n                fun__approve(/** @src 9:719:729  \"msg.sender\" */ caller(), /** @src 3:6928:6962  \"currentAllowance - subtractedValue\" */ var_spender, /** @src 3:1532:12844  \"contract ERC20 is Context, IERC20, IERC20Metadata {...\" */ sub(/** @src 3:6928:6962  \"currentAllowance - subtractedValue\" */ _1, var_subtractedValue))\n                /// @src 3:6984:6995  \"return true\"\n                var := /** @src 3:4102:4113  \"_allowances\" */ 0x01\n            }\n            /// @src 3:1532:12844  \"contract ERC20 is Context, IERC20, IERC20Metadata {...\"\n            function require_helper_stringliteral(condition)\n            {\n                if iszero(condition)\n                {\n                    let memPtr := mload(64)\n                    mstore(memPtr, shl(229, 4594637))\n                    mstore(add(memPtr, 4), 32)\n                    mstore(add(memPtr, 36), 35)\n                    mstore(add(memPtr, 68), \"ERC20: transfer to the zero addr\")\n                    mstore(add(memPtr, 100), \"ess\")\n                    revert(memPtr, 132)\n                }\n            }\n            function require_helper_stringliteral_4107(condition)\n            {\n                if iszero(condition)\n                {\n                    let memPtr := mload(64)\n                    mstore(memPtr, shl(229, 4594637))\n                    mstore(add(memPtr, 4), 32)\n                    mstore(add(memPtr, 36), 38)\n                    mstore(add(memPtr, 68), \"ERC20: transfer amount exceeds b\")\n                    mstore(add(memPtr, 100), \"alance\")\n                    revert(memPtr, 132)\n                }\n            }\n            /// @ast-id 848 @src 3:7456:8244  \"function _transfer(address from, address to, uint256 amount) internal virtual {...\"\n            function fun__transfer(var_from, var_to, var_amount)\n            {\n                /// @src 3:1532:12844  \"contract ERC20 is Context, IERC20, IERC20Metadata {...\"\n                let _1 := sub(shl(160, 1), 1)\n                if /** @src 3:7552:7570  \"from != address(0)\" */ iszero(/** @src 3:1532:12844  \"contract ERC20 is Context, IERC20, IERC20Metadata {...\" */ and(/** @src 3:7552:7570  \"from != address(0)\" */ var_from, /** @src 3:1532:12844  \"contract ERC20 is Context, IERC20, IERC20Metadata {...\" */ _1))\n                {\n                    let memPtr := mload(64)\n                    mstore(memPtr, shl(229, 4594637))\n                    mstore(add(memPtr, 4), 32)\n                    mstore(add(memPtr, 36), 37)\n                    mstore(add(memPtr, 68), \"ERC20: transfer from the zero ad\")\n                    mstore(add(memPtr, 100), \"dress\")\n                    revert(memPtr, 132)\n                }\n                /// @src 3:7622:7686  \"require(to != address(0), \\\"ERC20: transfer to the zero address\\\")\"\n                require_helper_stringliteral(/** @src 3:7630:7646  \"to != address(0)\" */ iszero(iszero(/** @src 3:1532:12844  \"contract ERC20 is Context, IERC20, IERC20Metadata {...\" */ and(/** @src 3:7630:7646  \"to != address(0)\" */ var_to, /** @src 3:1532:12844  \"contract ERC20 is Context, IERC20, IERC20Metadata {...\" */ _1))))\n                let _2 := sload(/** @src 3:7768:7783  \"_balances[from]\" */ mapping_index_access_mapping_address_uint256_of_address_2493(var_from))\n                /// @src 3:7793:7865  \"require(fromBalance >= amount, \\\"ERC20: transfer amount exceeds balance\\\")\"\n                require_helper_stringliteral_4107(/** @src 3:7801:7822  \"fromBalance >= amount\" */ iszero(lt(_2, var_amount)))\n                /// @src 3:1532:12844  \"contract ERC20 is Context, IERC20, IERC20Metadata {...\"\n                sstore(/** @src 3:7899:7914  \"_balances[from]\" */ mapping_index_access_mapping_address_uint256_of_address_2493(var_from), /** @src 3:1532:12844  \"contract ERC20 is Context, IERC20, IERC20Metadata {...\" */ sub(/** @src 3:7917:7937  \"fromBalance - amount\" */ _2, var_amount))\n                /// @src 3:8114:8127  \"_balances[to]\"\n                let _3 := mapping_index_access_mapping_address_uint256_of_address_2493(var_to)\n                /// @src 3:1532:12844  \"contract ERC20 is Context, IERC20, IERC20Metadata {...\"\n                sstore(_3, add(sload(/** @src 3:8114:8137  \"_balances[to] += amount\" */ _3), /** @src 3:1532:12844  \"contract ERC20 is Context, IERC20, IERC20Metadata {...\" */ var_amount))\n                /// @src 3:8163:8189  \"Transfer(from, to, amount)\"\n                let _4 := /** @src 3:1532:12844  \"contract ERC20 is Context, IERC20, IERC20Metadata {...\" */ mload(64)\n                /// @src 3:8163:8189  \"Transfer(from, to, amount)\"\n                log3(_4, sub(abi_encode_uint256(_4, var_amount), _4), 0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef, var_from, var_to)\n            }\n            /// @ast-id 1022 @src 3:10457:10797  \"function _approve(address owner, address spender, uint256 amount) internal virtual {...\"\n            function fun__approve(var_owner, var_spender, var_amount)\n            {\n                /// @src 3:1532:12844  \"contract ERC20 is Context, IERC20, IERC20Metadata {...\"\n                let _1 := sub(shl(160, 1), 1)\n                if /** @src 3:10558:10577  \"owner != address(0)\" */ iszero(/** @src 3:1532:12844  \"contract ERC20 is Context, IERC20, IERC20Metadata {...\" */ and(/** @src 3:10558:10577  \"owner != address(0)\" */ var_owner, /** @src 3:1532:12844  \"contract ERC20 is Context, IERC20, IERC20Metadata {...\" */ _1))\n                {\n                    let memPtr := mload(64)\n                    mstore(memPtr, shl(229, 4594637))\n                    mstore(add(memPtr, 4), 32)\n                    mstore(add(memPtr, 36), 36)\n                    mstore(add(memPtr, 68), \"ERC20: approve from the zero add\")\n                    mstore(add(memPtr, 100), \"ress\")\n                    revert(memPtr, 132)\n                }\n                if /** @src 3:10636:10657  \"spender != address(0)\" */ iszero(/** @src 3:1532:12844  \"contract ERC20 is Context, IERC20, IERC20Metadata {...\" */ and(/** @src 3:10636:10657  \"spender != address(0)\" */ var_spender, /** @src 3:1532:12844  \"contract ERC20 is Context, IERC20, IERC20Metadata {...\" */ _1))\n                {\n                    let memPtr_1 := mload(64)\n                    mstore(memPtr_1, shl(229, 4594637))\n                    mstore(add(memPtr_1, 4), 32)\n                    mstore(add(memPtr_1, 36), 34)\n                    mstore(add(memPtr_1, 68), \"ERC20: approve to the zero addre\")\n                    mstore(add(memPtr_1, 100), \"ss\")\n                    revert(memPtr_1, 132)\n                }\n                sstore(/** @src 3:10707:10734  \"_allowances[owner][spender]\" */ mapping_index_access_mapping_address_uint256_of_address(/** @src 3:10707:10725  \"_allowances[owner]\" */ mapping_index_access_mapping_address_uint256_of_address_2492(var_owner), /** @src 3:10707:10734  \"_allowances[owner][spender]\" */ var_spender), /** @src 3:1532:12844  \"contract ERC20 is Context, IERC20, IERC20Metadata {...\" */ var_amount)\n                /// @src 3:10758:10790  \"Approval(owner, spender, amount)\"\n                let _2 := /** @src 3:1532:12844  \"contract ERC20 is Context, IERC20, IERC20Metadata {...\" */ mload(64)\n                /// @src 3:10758:10790  \"Approval(owner, spender, amount)\"\n                log3(_2, sub(abi_encode_uint256(_2, var_amount), _2), 0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925, var_owner, var_spender)\n            }\n        }\n        data \".metadata\" hex\"a3646970667358221220c63b8eff276e5466d2a597a4f37e23522c514c9ba52a27b74fe472d56e0bc2196c6578706572696d656e74616cf564736f6c63430008090041\"\n    }\n}\n","hash":"01000209055ddbb76ff6e667614f144e8e12ac84f005b938d99df6dbec18554d","factoryDependencies":{}}},"@openzeppelin/contracts/token/ERC20/IERC20.sol":{"IERC20":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"}],"metadata":"{\"compiler\":{\"version\":\"0.8.9+commit.e5eed63a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 standard as defined in the EIP.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"details\":{\"constantOptimizer\":false,\"cse\":true,\"deduplicate\":true,\"inliner\":true,\"jumpdestRemover\":true,\"orderLiterals\":true,\"peephole\":true,\"yul\":true,\"yulDetails\":{\"optimizerSteps\":\"dhfoDgvulfnTUtnIf[xarrscLMcCTUtTOntnfDIulLculVcul jjTpeulxarulrulxarrcLgvifCTUcarrLsTFOtfDncarrIulc]jmuljuljul VcTOcul jmul\",\"stackAllocation\":true}},\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x287b55befed2961a7eabd7d7b1b2839cbca8a5b80ef8dcbb25ed3d4c2002c305\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bd39944e8fc06be6dbe2dd1d8449b5336e23c6a7ba3e8e9ae5ae0f37f35283f5\",\"dweb:/ipfs/QmPV3FGYjVwvKSgAXKUN3r9T9GwniZz83CxBpM7vyj2G53\"]}},\"version\":1}","evm":{"legacyAssembly":null,"assembly":null,"bytecode":null,"methodIdentifiers":{"allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd"}},"irOptimized":""}},"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol":{"IERC20Metadata":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"decimals","outputs":[{"internalType":"uint8","name":"","type":"uint8"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"}],"metadata":"{\"compiler\":{\"version\":\"0.8.9+commit.e5eed63a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for the optional metadata functions from the ERC20 standard. _Available since v4.1._\",\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"decimals()\":{\"details\":\"Returns the decimals places of the token.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token.\"},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":\"IERC20Metadata\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"details\":{\"constantOptimizer\":false,\"cse\":true,\"deduplicate\":true,\"inliner\":true,\"jumpdestRemover\":true,\"orderLiterals\":true,\"peephole\":true,\"yul\":true,\"yulDetails\":{\"optimizerSteps\":\"dhfoDgvulfnTUtnIf[xarrscLMcCTUtTOntnfDIulLculVcul jjTpeulxarulrulxarrcLgvifCTUcarrLsTFOtfDncarrIulc]jmuljuljul VcTOcul jmul\",\"stackAllocation\":true}},\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x287b55befed2961a7eabd7d7b1b2839cbca8a5b80ef8dcbb25ed3d4c2002c305\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bd39944e8fc06be6dbe2dd1d8449b5336e23c6a7ba3e8e9ae5ae0f37f35283f5\",\"dweb:/ipfs/QmPV3FGYjVwvKSgAXKUN3r9T9GwniZz83CxBpM7vyj2G53\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x8de418a5503946cabe331f35fe242d3201a73f67f77aaeb7110acb1f30423aca\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a376d3dda2cb70536c0a45c208b29b34ac560c4cb4f513a42079f96ba47d2dd\",\"dweb:/ipfs/QmZQg6gn1sUpM8wHzwNvSnihumUCAhxD119MpXeKp8B9s8\"]}},\"version\":1}","evm":{"legacyAssembly":null,"assembly":null,"bytecode":null,"methodIdentifiers":{"allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","decimals()":"313ce567","name()":"06fdde03","symbol()":"95d89b41","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd"}},"irOptimized":""}},"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol":{"IERC20Permit":{"abi":[{"inputs":[],"name":"DOMAIN_SEPARATOR","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"nonces","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"},{"internalType":"uint256","name":"deadline","type":"uint256"},{"internalType":"uint8","name":"v","type":"uint8"},{"internalType":"bytes32","name":"r","type":"bytes32"},{"internalType":"bytes32","name":"s","type":"bytes32"}],"name":"permit","outputs":[],"stateMutability":"nonpayable","type":"function"}],"metadata":"{\"compiler\":{\"version\":\"0.8.9+commit.e5eed63a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"DOMAIN_SEPARATOR\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"nonces\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"permit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in https://eips.ethereum.org/EIPS/eip-2612[EIP-2612]. Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by presenting a message signed by the account. By not relying on {IERC20-approve}, the token holder account doesn't need to send a transaction, and thus is not required to hold Ether at all.\",\"kind\":\"dev\",\"methods\":{\"DOMAIN_SEPARATOR()\":{\"details\":\"Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}.\"},\"nonces(address)\":{\"details\":\"Returns the current nonce for `owner`. This value must be included whenever a signature is generated for {permit}. Every successful call to {permit} increases ``owner``'s nonce by one. This prevents a signature from being used multiple times.\"},\"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)\":{\"details\":\"Sets `value` as the allowance of `spender` over ``owner``'s tokens, given ``owner``'s signed approval. IMPORTANT: The same issues {IERC20-approve} has related to transaction ordering also apply here. Emits an {Approval} event. Requirements: - `spender` cannot be the zero address. - `deadline` must be a timestamp in the future. - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner` over the EIP712-formatted function arguments. - the signature must use ``owner``'s current nonce (see {nonces}). For more information on the signature format, see the https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP section].\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol\":\"IERC20Permit\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"details\":{\"constantOptimizer\":false,\"cse\":true,\"deduplicate\":true,\"inliner\":true,\"jumpdestRemover\":true,\"orderLiterals\":true,\"peephole\":true,\"yul\":true,\"yulDetails\":{\"optimizerSteps\":\"dhfoDgvulfnTUtnIf[xarrscLMcCTUtTOntnfDIulLculVcul jjTpeulxarulrulxarrcLgvifCTUcarrLsTFOtfDncarrIulc]jmuljuljul VcTOcul jmul\",\"stackAllocation\":true}},\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol\":{\"keccak256\":\"0xec63854014a5b4f2b3290ab9103a21bdf902a508d0f41a8573fea49e98bf571a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bc5b5dc12fbc4002f282eaa7a5f06d8310ed62c1c77c5770f6283e058454c39a\",\"dweb:/ipfs/Qme9rE2wS3yBuyJq9GgbmzbsBQsW2M2sVFqYYLw7bosGrv\"]}},\"version\":1}","evm":{"legacyAssembly":null,"assembly":null,"bytecode":null,"methodIdentifiers":{"DOMAIN_SEPARATOR()":"3644e515","nonces(address)":"7ecebe00","permit(address,address,uint256,uint256,uint8,bytes32,bytes32)":"d505accf"}},"irOptimized":""}},"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol":{"SafeERC20":{"abi":[],"metadata":{"optimizer_settings":"M3B3","solc_metadata":"{\"compiler\":{\"version\":\"0.8.9+commit.e5eed63a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Wrappers around ERC20 operations that throw on failure (when the token contract returns false). Tokens that return no value (and instead revert or throw on failure) are also supported, non-reverting calls are assumed to be successful. To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract, which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\",\"kind\":\"dev\",\"methods\":{},\"title\":\"SafeERC20\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":\"SafeERC20\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"details\":{\"constantOptimizer\":false,\"cse\":true,\"deduplicate\":true,\"inliner\":true,\"jumpdestRemover\":true,\"orderLiterals\":true,\"peephole\":true,\"yul\":true,\"yulDetails\":{\"optimizerSteps\":\"dhfoDgvulfnTUtnIf[xarrscLMcCTUtTOntnfDIulLculVcul jjTpeulxarulrulxarrcLgvifCTUcarrLsTFOtfDncarrIulc]jmuljuljul VcTOcul jmul\",\"stackAllocation\":true}},\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x287b55befed2961a7eabd7d7b1b2839cbca8a5b80ef8dcbb25ed3d4c2002c305\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bd39944e8fc06be6dbe2dd1d8449b5336e23c6a7ba3e8e9ae5ae0f37f35283f5\",\"dweb:/ipfs/QmPV3FGYjVwvKSgAXKUN3r9T9GwniZz83CxBpM7vyj2G53\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol\":{\"keccak256\":\"0xec63854014a5b4f2b3290ab9103a21bdf902a508d0f41a8573fea49e98bf571a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bc5b5dc12fbc4002f282eaa7a5f06d8310ed62c1c77c5770f6283e058454c39a\",\"dweb:/ipfs/Qme9rE2wS3yBuyJq9GgbmzbsBQsW2M2sVFqYYLw7bosGrv\"]},\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0x909d608c2db6eb165ca178c81289a07ed2e118e444d0025b2a85c97d0b44a4fa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://656cda26512ddd7373c2d5551c8fae759fc30f05b10f0fc2e738e9274199dbd4\",\"dweb:/ipfs/QmTSArSzQRFbQmHgq7U1PZXnsDFhvDZhKVu9CzMG4yo6Lx\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0x006dd67219697fe68d7fbfdea512e7c4cb64a43565ed86171d67e844982da6fa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2455248c8ddd9cc6a7af76a13973cddf222072427e7b0e2a7d1aff345145e931\",\"dweb:/ipfs/QmfYjnjRbWqYpuxurqveE6HtzsY1Xx323J428AKQgtBJZm\"]}},\"version\":1}","zk_version":"1.3.13"},"evm":{"legacyAssembly":null,"assembly":"\t.text\n\t.file\t\"SafeERC20.sol:SafeERC20\"\n\t.globl\t__entry\n__entry:\n.func_begin0:\n\tadd\t128, r0, r1\n\tst.1\t64, r1\n\tand!\t1, r2, r1\n\tjump.ne\t@.BB0_1\n\tadd\tr0, r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB0_1:\n\tcontext.get_context_u128\tr1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_2\n\tadd\t32, r0, r1\n\tst.2\t256, r1\n\tst.2\t288, r0\n\tadd\t@CPI0_0[0], r0, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_2:\n\tadd\tr0, r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.func_end0:\n\n\t.note.GNU-stack\n\t.rodata\nCPI0_0:\n\t.cell 53919893334301279589334030174039261352344891250716429051063678533632\n","bytecode":{"object":"0000008001000039000000400010043f0000000101200190000000060000c13d000000000100001900000012000104300000000001000416000000000101004b0000000e0000c13d0000002001000039000001000010044300000120000004430000000501000041000000110001042e000000000100001900000012000104300000001000000432000000110001042e00000012000104300000000000000000000000020000000000000000000000000000004000000100000000000000000081ea3b49debbcc70287aa5b27bd1b33c931f722b8c4e02e4eaaa6d1c50229831"},"methodIdentifiers":{}},"irOptimized":"/*=====================================================*\n *                       WARNING                       *\n *  Solidity to Yul compilation is still EXPERIMENTAL  *\n *       It can result in LOSS OF FUNDS or worse       *\n *                !USE AT YOUR OWN RISK!               *\n *=====================================================*/\n\n/// @use-src 7:\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\"\nobject \"SafeERC20_1603\" {\n    code {\n        {\n            /// @src 7:701:6912  \"library SafeERC20 {...\"\n            mstore(64, 128)\n            if callvalue() { revert(0, 0) }\n            let _1 := datasize(\"SafeERC20_1603_deployed\")\n            codecopy(128, dataoffset(\"SafeERC20_1603_deployed\"), _1)\n            setimmutable(128, \"library_deploy_address\", address())\n            return(128, _1)\n        }\n    }\n    /// @use-src 7:\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\"\n    object \"SafeERC20_1603_deployed\" {\n        code {\n            {\n                /// @src 7:701:6912  \"library SafeERC20 {...\"\n                mstore(64, 128)\n                revert(0, 0)\n            }\n        }\n        data \".metadata\" hex\"a3646970667358221220829c19c09d77e73c4ca47d01124d33cf59bcd122f50a8db102d6b5e57447cfa86c6578706572696d656e74616cf564736f6c63430008090041\"\n    }\n}\n","hash":"010000073f4f67999635d11705aed930883e3fcfff5d335e639dfad78c7be580","factoryDependencies":{}}},"@openzeppelin/contracts/utils/Address.sol":{"Address":{"abi":[],"metadata":{"optimizer_settings":"M3B3","solc_metadata":"{\"compiler\":{\"version\":\"0.8.9+commit.e5eed63a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Collection of functions related to the address type\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Address.sol\":\"Address\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"details\":{\"constantOptimizer\":false,\"cse\":true,\"deduplicate\":true,\"inliner\":true,\"jumpdestRemover\":true,\"orderLiterals\":true,\"peephole\":true,\"yul\":true,\"yulDetails\":{\"optimizerSteps\":\"dhfoDgvulfnTUtnIf[xarrscLMcCTUtTOntnfDIulLculVcul jjTpeulxarulrulxarrcLgvifCTUcarrLsTFOtfDncarrIulc]jmuljuljul VcTOcul jmul\",\"stackAllocation\":true}},\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0x006dd67219697fe68d7fbfdea512e7c4cb64a43565ed86171d67e844982da6fa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2455248c8ddd9cc6a7af76a13973cddf222072427e7b0e2a7d1aff345145e931\",\"dweb:/ipfs/QmfYjnjRbWqYpuxurqveE6HtzsY1Xx323J428AKQgtBJZm\"]}},\"version\":1}","zk_version":"1.3.13"},"evm":{"legacyAssembly":null,"assembly":"\t.text\n\t.file\t\"Address.sol:Address\"\n\t.globl\t__entry\n__entry:\n.func_begin0:\n\tadd\t128, r0, r1\n\tst.1\t64, r1\n\tand!\t1, r2, r1\n\tjump.ne\t@.BB0_1\n\tadd\tr0, r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB0_1:\n\tcontext.get_context_u128\tr1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_2\n\tadd\t32, r0, r1\n\tst.2\t256, r1\n\tst.2\t288, r0\n\tadd\t@CPI0_0[0], r0, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_2:\n\tadd\tr0, r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.func_end0:\n\n\t.note.GNU-stack\n\t.rodata\nCPI0_0:\n\t.cell 53919893334301279589334030174039261352344891250716429051063678533632\n","bytecode":{"object":"0000008001000039000000400010043f0000000101200190000000060000c13d000000000100001900000012000104300000000001000416000000000101004b0000000e0000c13d0000002001000039000001000010044300000120000004430000000501000041000000110001042e000000000100001900000012000104300000001000000432000000110001042e0000001200010430000000000000000000000002000000000000000000000000000000400000010000000000000000006c487bd67367bd0f1a76cf6d6c614662b896c5e78f04868a7795f2bb9eb380e5"},"methodIdentifiers":{}},"irOptimized":"/*=====================================================*\n *                       WARNING                       *\n *  Solidity to Yul compilation is still EXPERIMENTAL  *\n *       It can result in LOSS OF FUNDS or worse       *\n *                !USE AT YOUR OWN RISK!               *\n *=====================================================*/\n\n/// @use-src 8:\"@openzeppelin/contracts/utils/Address.sol\"\nobject \"Address_1933\" {\n    code {\n        {\n            /// @src 8:194:9363  \"library Address {...\"\n            mstore(64, 128)\n            if callvalue() { revert(0, 0) }\n            let _1 := datasize(\"Address_1933_deployed\")\n            codecopy(128, dataoffset(\"Address_1933_deployed\"), _1)\n            setimmutable(128, \"library_deploy_address\", address())\n            return(128, _1)\n        }\n    }\n    /// @use-src 8:\"@openzeppelin/contracts/utils/Address.sol\"\n    object \"Address_1933_deployed\" {\n        code {\n            {\n                /// @src 8:194:9363  \"library Address {...\"\n                mstore(64, 128)\n                revert(0, 0)\n            }\n        }\n        data \".metadata\" hex\"a3646970667358221220afeff4a3e285003cf1f6e7635e4e9210ffda528c4f2265cd3933e0d3a0af2bf86c6578706572696d656e74616cf564736f6c63430008090041\"\n    }\n}\n","hash":"0100000788e7aa963e81764937b327cf27500ac05e9a0757173c2c1f8a67e75a","factoryDependencies":{}}},"@openzeppelin/contracts/utils/Context.sol":{"Context":{"abi":[],"metadata":"{\"compiler\":{\"version\":\"0.8.9+commit.e5eed63a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"details\":{\"constantOptimizer\":false,\"cse\":true,\"deduplicate\":true,\"inliner\":true,\"jumpdestRemover\":true,\"orderLiterals\":true,\"peephole\":true,\"yul\":true,\"yulDetails\":{\"optimizerSteps\":\"dhfoDgvulfnTUtnIf[xarrscLMcCTUtTOntnfDIulLculVcul jjTpeulxarulrulxarrcLgvifCTUcarrLsTFOtfDncarrIulc]jmuljuljul VcTOcul jmul\",\"stackAllocation\":true}},\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]}},\"version\":1}","evm":{"legacyAssembly":null,"assembly":null,"bytecode":null,"methodIdentifiers":{}},"irOptimized":""}},"@openzeppelin/contracts/utils/Strings.sol":{"Strings":{"abi":[],"metadata":{"optimizer_settings":"M3B3","solc_metadata":"{\"compiler\":{\"version\":\"0.8.9+commit.e5eed63a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"String operations.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Strings.sol\":\"Strings\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"details\":{\"constantOptimizer\":false,\"cse\":true,\"deduplicate\":true,\"inliner\":true,\"jumpdestRemover\":true,\"orderLiterals\":true,\"peephole\":true,\"yul\":true,\"yulDetails\":{\"optimizerSteps\":\"dhfoDgvulfnTUtnIf[xarrscLMcCTUtTOntnfDIulLculVcul jjTpeulxarulrulxarrcLgvifCTUcarrLsTFOtfDncarrIulc]jmuljuljul VcTOcul jmul\",\"stackAllocation\":true}},\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x3088eb2868e8d13d89d16670b5f8612c4ab9ff8956272837d8e90106c59c14a0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b81d9ff6559ea5c47fc573e17ece6d9ba5d6839e213e6ebc3b4c5c8fe4199d7f\",\"dweb:/ipfs/QmPCW1bFisUzJkyjroY3yipwfism9RRCigCcK1hbXtVM8n\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0xe4455ac1eb7fc497bb7402579e7b4d64d928b846fce7d2b6fde06d366f21c2b3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cc8841b3cd48ad125e2f46323c8bad3aa0e88e399ec62acb9e57efa7e7c8058c\",\"dweb:/ipfs/QmSqE4mXHA2BXW58deDbXE8MTcsL5JSKNDbm23sVQxRLPS\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0xf92515413956f529d95977adc9b0567d583c6203fc31ab1c23824c35187e3ddc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c50fcc459e49a9858b6d8ad5f911295cb7c9ab57567845a250bf0153f84a95c7\",\"dweb:/ipfs/QmcEW85JRzvDkQggxiBBLVAasXWdkhEysqypj9EaB6H2g6\"]}},\"version\":1}","zk_version":"1.3.13"},"evm":{"legacyAssembly":null,"assembly":"\t.text\n\t.file\t\"Strings.sol:Strings\"\n\t.globl\t__entry\n__entry:\n.func_begin0:\n\tadd\t128, r0, r1\n\tst.1\t64, r1\n\tand!\t1, r2, r1\n\tjump.ne\t@.BB0_1\n\tadd\tr0, r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB0_1:\n\tcontext.get_context_u128\tr1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_2\n\tadd\t32, r0, r1\n\tst.2\t256, r1\n\tst.2\t288, r0\n\tadd\t@CPI0_0[0], r0, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_2:\n\tadd\tr0, r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.func_end0:\n\n\t.note.GNU-stack\n\t.rodata\nCPI0_0:\n\t.cell 53919893334301279589334030174039261352344891250716429051063678533632\n","bytecode":{"object":"0000008001000039000000400010043f0000000101200190000000060000c13d000000000100001900000012000104300000000001000416000000000101004b0000000e0000c13d0000002001000039000001000010044300000120000004430000000501000041000000110001042e000000000100001900000012000104300000001000000432000000110001042e00000012000104300000000000000000000000020000000000000000000000000000004000000100000000000000000063bf7f8073bc74897741351838b8f2268ea937be1175acefea95d36bd1136863"},"methodIdentifiers":{}},"irOptimized":"/*=====================================================*\n *                       WARNING                       *\n *  Solidity to Yul compilation is still EXPERIMENTAL  *\n *       It can result in LOSS OF FUNDS or worse       *\n *                !USE AT YOUR OWN RISK!               *\n *=====================================================*/\n\n/// @use-src 10:\"@openzeppelin/contracts/utils/Strings.sol\"\nobject \"Strings_2184\" {\n    code {\n        {\n            /// @src 10:220:2779  \"library Strings {...\"\n            mstore(64, 128)\n            if callvalue() { revert(0, 0) }\n            let _1 := datasize(\"Strings_2184_deployed\")\n            codecopy(128, dataoffset(\"Strings_2184_deployed\"), _1)\n            setimmutable(128, \"library_deploy_address\", address())\n            return(128, _1)\n        }\n    }\n    /// @use-src 10:\"@openzeppelin/contracts/utils/Strings.sol\"\n    object \"Strings_2184_deployed\" {\n        code {\n            {\n                /// @src 10:220:2779  \"library Strings {...\"\n                mstore(64, 128)\n                revert(0, 0)\n            }\n        }\n        data \".metadata\" hex\"a36469706673582212207c5b24324bed6924097d331b29c2ca6a822068b58de91116be4689103170840c6c6578706572696d656e74616cf564736f6c63430008090041\"\n    }\n}\n","hash":"0100000703b198245fa96f7a86037d1868d976816af9bce0c7497134b849a869","factoryDependencies":{}}},"@openzeppelin/contracts/utils/introspection/ERC165.sol":{"ERC165":{"abi":[{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"}],"metadata":"{\"compiler\":{\"version\":\"0.8.9+commit.e5eed63a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC165} interface. Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check for the additional interface id that will be supported. For example: ```solidity function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId); } ``` Alternatively, {ERC165Storage} provides an easier to use but more expensive implementation.\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":\"ERC165\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"details\":{\"constantOptimizer\":false,\"cse\":true,\"deduplicate\":true,\"inliner\":true,\"jumpdestRemover\":true,\"orderLiterals\":true,\"peephole\":true,\"yul\":true,\"yulDetails\":{\"optimizerSteps\":\"dhfoDgvulfnTUtnIf[xarrscLMcCTUtTOntnfDIulLculVcul jjTpeulxarulrulxarrcLgvifCTUcarrLsTFOtfDncarrIulc]jmuljuljul VcTOcul jmul\",\"stackAllocation\":true}},\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0xd10975de010d89fd1c78dc5e8a9a7e7f496198085c151648f20cba166b32582b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fb0048dee081f6fffa5f74afc3fb328483c2a30504e94a0ddd2a5114d731ec4d\",\"dweb:/ipfs/QmZptt1nmYoA5SgjwnSgWqgUSDgm4q52Yos3xhnMv3MV43\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]}},\"version\":1}","evm":{"legacyAssembly":null,"assembly":null,"bytecode":null,"methodIdentifiers":{"supportsInterface(bytes4)":"01ffc9a7"}},"irOptimized":""}},"@openzeppelin/contracts/utils/introspection/IERC165.sol":{"IERC165":{"abi":[{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"}],"metadata":"{\"compiler\":{\"version\":\"0.8.9+commit.e5eed63a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[EIP]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":\"IERC165\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"details\":{\"constantOptimizer\":false,\"cse\":true,\"deduplicate\":true,\"inliner\":true,\"jumpdestRemover\":true,\"orderLiterals\":true,\"peephole\":true,\"yul\":true,\"yulDetails\":{\"optimizerSteps\":\"dhfoDgvulfnTUtnIf[xarrscLMcCTUtTOntnfDIulLculVcul jjTpeulxarulrulxarrcLgvifCTUcarrLsTFOtfDncarrIulc]jmuljuljul VcTOcul jmul\",\"stackAllocation\":true}},\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]}},\"version\":1}","evm":{"legacyAssembly":null,"assembly":null,"bytecode":null,"methodIdentifiers":{"supportsInterface(bytes4)":"01ffc9a7"}},"irOptimized":""}},"@openzeppelin/contracts/utils/math/Math.sol":{"Math":{"abi":[],"metadata":{"optimizer_settings":"M3B3","solc_metadata":"{\"compiler\":{\"version\":\"0.8.9+commit.e5eed63a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Standard math utilities missing in the Solidity language.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/math/Math.sol\":\"Math\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"details\":{\"constantOptimizer\":false,\"cse\":true,\"deduplicate\":true,\"inliner\":true,\"jumpdestRemover\":true,\"orderLiterals\":true,\"peephole\":true,\"yul\":true,\"yulDetails\":{\"optimizerSteps\":\"dhfoDgvulfnTUtnIf[xarrscLMcCTUtTOntnfDIulLculVcul jjTpeulxarulrulxarrcLgvifCTUcarrLsTFOtfDncarrIulc]jmuljuljul VcTOcul jmul\",\"stackAllocation\":true}},\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0xe4455ac1eb7fc497bb7402579e7b4d64d928b846fce7d2b6fde06d366f21c2b3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cc8841b3cd48ad125e2f46323c8bad3aa0e88e399ec62acb9e57efa7e7c8058c\",\"dweb:/ipfs/QmSqE4mXHA2BXW58deDbXE8MTcsL5JSKNDbm23sVQxRLPS\"]}},\"version\":1}","zk_version":"1.3.13"},"evm":{"legacyAssembly":null,"assembly":"\t.text\n\t.file\t\"Math.sol:Math\"\n\t.globl\t__entry\n__entry:\n.func_begin0:\n\tadd\t128, r0, r1\n\tst.1\t64, r1\n\tand!\t1, r2, r1\n\tjump.ne\t@.BB0_1\n\tadd\tr0, r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB0_1:\n\tcontext.get_context_u128\tr1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_2\n\tadd\t32, r0, r1\n\tst.2\t256, r1\n\tst.2\t288, r0\n\tadd\t@CPI0_0[0], r0, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_2:\n\tadd\tr0, r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.func_end0:\n\n\t.note.GNU-stack\n\t.rodata\nCPI0_0:\n\t.cell 53919893334301279589334030174039261352344891250716429051063678533632\n","bytecode":{"object":"0000008001000039000000400010043f0000000101200190000000060000c13d000000000100001900000012000104300000000001000416000000000101004b0000000e0000c13d0000002001000039000001000010044300000120000004430000000501000041000000110001042e000000000100001900000012000104300000001000000432000000110001042e000000120001043000000000000000000000000200000000000000000000000000000040000001000000000000000000127da6794e3c9463fd7970d8b37f573af0857183e1c36cefe66e482b61f28a99"},"methodIdentifiers":{}},"irOptimized":"/*=====================================================*\n *                       WARNING                       *\n *  Solidity to Yul compilation is still EXPERIMENTAL  *\n *       It can result in LOSS OF FUNDS or worse       *\n *                !USE AT YOUR OWN RISK!               *\n *=====================================================*/\n\n/// @use-src 13:\"@openzeppelin/contracts/utils/math/Math.sol\"\nobject \"Math_3086\" {\n    code {\n        {\n            /// @src 13:202:12784  \"library Math {...\"\n            mstore(64, 128)\n            if callvalue() { revert(0, 0) }\n            let _1 := datasize(\"Math_3086_deployed\")\n            codecopy(128, dataoffset(\"Math_3086_deployed\"), _1)\n            setimmutable(128, \"library_deploy_address\", address())\n            return(128, _1)\n        }\n    }\n    /// @use-src 13:\"@openzeppelin/contracts/utils/math/Math.sol\"\n    object \"Math_3086_deployed\" {\n        code {\n            {\n                /// @src 13:202:12784  \"library Math {...\"\n                mstore(64, 128)\n                revert(0, 0)\n            }\n        }\n        data \".metadata\" hex\"a3646970667358221220a4fcee1383aff1453b946316b3754ff3b5092b783551006503b72da2d735722d6c6578706572696d656e74616cf564736f6c63430008090041\"\n    }\n}\n","hash":"0100000797be482d123acdbe6c1111c161c6cd6088d8e7728ad278ca449ea5f1","factoryDependencies":{}}},"@openzeppelin/contracts/utils/math/SafeMath.sol":{"SafeMath":{"abi":[],"metadata":{"optimizer_settings":"M3B3","solc_metadata":"{\"compiler\":{\"version\":\"0.8.9+commit.e5eed63a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Wrappers over Solidity's arithmetic operations. NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler now has built in overflow checking.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/math/SafeMath.sol\":\"SafeMath\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"details\":{\"constantOptimizer\":false,\"cse\":true,\"deduplicate\":true,\"inliner\":true,\"jumpdestRemover\":true,\"orderLiterals\":true,\"peephole\":true,\"yul\":true,\"yulDetails\":{\"optimizerSteps\":\"dhfoDgvulfnTUtnIf[xarrscLMcCTUtTOntnfDIulLculVcul jjTpeulxarulrulxarrcLgvifCTUcarrLsTFOtfDncarrIulc]jmuljuljul VcTOcul jmul\",\"stackAllocation\":true}},\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/math/SafeMath.sol\":{\"keccak256\":\"0x58b21219689909c4f8339af00813760337f7e2e7f169a97fe49e2896dcfb3b9a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ef8e012e946dec20e59f2d4446f4b44bb098f3fa8bac103b1b5112fff777447b\",\"dweb:/ipfs/QmVTooKWcLkJ9W68yNX4MgdrbAKiAXwuRN9A7f4NkdcdtQ\"]}},\"version\":1}","zk_version":"1.3.13"},"evm":{"legacyAssembly":null,"assembly":"\t.text\n\t.file\t\"SafeMath.sol:SafeMath\"\n\t.globl\t__entry\n__entry:\n.func_begin0:\n\tadd\t128, r0, r1\n\tst.1\t64, r1\n\tand!\t1, r2, r1\n\tjump.ne\t@.BB0_1\n\tadd\tr0, r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB0_1:\n\tcontext.get_context_u128\tr1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_2\n\tadd\t32, r0, r1\n\tst.2\t256, r1\n\tst.2\t288, r0\n\tadd\t@CPI0_0[0], r0, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_2:\n\tadd\tr0, r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.func_end0:\n\n\t.note.GNU-stack\n\t.rodata\nCPI0_0:\n\t.cell 53919893334301279589334030174039261352344891250716429051063678533632\n","bytecode":{"object":"0000008001000039000000400010043f0000000101200190000000060000c13d000000000100001900000012000104300000000001000416000000000101004b0000000e0000c13d0000002001000039000001000010044300000120000004430000000501000041000000110001042e000000000100001900000012000104300000001000000432000000110001042e000000120001043000000000000000000000000200000000000000000000000000000040000001000000000000000000f51f3a3904ad859fa99dcfaeea8c45a0f61eef34f1908dcc7673b3d2157d3aef"},"methodIdentifiers":{}},"irOptimized":"/*=====================================================*\n *                       WARNING                       *\n *  Solidity to Yul compilation is still EXPERIMENTAL  *\n *       It can result in LOSS OF FUNDS or worse       *\n *                !USE AT YOUR OWN RISK!               *\n *=====================================================*/\n\n/// @use-src 14:\"@openzeppelin/contracts/utils/math/SafeMath.sol\"\nobject \"SafeMath_3398\" {\n    code {\n        {\n            /// @src 14:482:6692  \"library SafeMath {...\"\n            mstore(64, 128)\n            if callvalue() { revert(0, 0) }\n            let _1 := datasize(\"SafeMath_3398_deployed\")\n            codecopy(128, dataoffset(\"SafeMath_3398_deployed\"), _1)\n            setimmutable(128, \"library_deploy_address\", address())\n            return(128, _1)\n        }\n    }\n    /// @use-src 14:\"@openzeppelin/contracts/utils/math/SafeMath.sol\"\n    object \"SafeMath_3398_deployed\" {\n        code {\n            {\n                /// @src 14:482:6692  \"library SafeMath {...\"\n                mstore(64, 128)\n                revert(0, 0)\n            }\n        }\n        data \".metadata\" hex\"a3646970667358221220f49b58e27176f500696e86c6eb751a273d215cc36ac4568f121f6a1ace56fdef6c6578706572696d656e74616cf564736f6c63430008090041\"\n    }\n}\n","hash":"01000007a56b87daf193dbca78d86e975537f5b8bbf5faf507c2320889007239","factoryDependencies":{}}},"@openzeppelin/contracts/utils/math/SignedMath.sol":{"SignedMath":{"abi":[],"metadata":{"optimizer_settings":"M3B3","solc_metadata":"{\"compiler\":{\"version\":\"0.8.9+commit.e5eed63a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Standard signed math utilities missing in the Solidity language.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/math/SignedMath.sol\":\"SignedMath\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"details\":{\"constantOptimizer\":false,\"cse\":true,\"deduplicate\":true,\"inliner\":true,\"jumpdestRemover\":true,\"orderLiterals\":true,\"peephole\":true,\"yul\":true,\"yulDetails\":{\"optimizerSteps\":\"dhfoDgvulfnTUtnIf[xarrscLMcCTUtTOntnfDIulLculVcul jjTpeulxarulrulxarrcLgvifCTUcarrLsTFOtfDncarrIulc]jmuljuljul VcTOcul jmul\",\"stackAllocation\":true}},\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0xf92515413956f529d95977adc9b0567d583c6203fc31ab1c23824c35187e3ddc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c50fcc459e49a9858b6d8ad5f911295cb7c9ab57567845a250bf0153f84a95c7\",\"dweb:/ipfs/QmcEW85JRzvDkQggxiBBLVAasXWdkhEysqypj9EaB6H2g6\"]}},\"version\":1}","zk_version":"1.3.13"},"evm":{"legacyAssembly":null,"assembly":"\t.text\n\t.file\t\"SignedMath.sol:SignedMath\"\n\t.globl\t__entry\n__entry:\n.func_begin0:\n\tadd\t128, r0, r1\n\tst.1\t64, r1\n\tand!\t1, r2, r1\n\tjump.ne\t@.BB0_1\n\tadd\tr0, r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB0_1:\n\tcontext.get_context_u128\tr1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_2\n\tadd\t32, r0, r1\n\tst.2\t256, r1\n\tst.2\t288, r0\n\tadd\t@CPI0_0[0], r0, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_2:\n\tadd\tr0, r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.func_end0:\n\n\t.note.GNU-stack\n\t.rodata\nCPI0_0:\n\t.cell 53919893334301279589334030174039261352344891250716429051063678533632\n","bytecode":{"object":"0000008001000039000000400010043f0000000101200190000000060000c13d000000000100001900000012000104300000000001000416000000000101004b0000000e0000c13d0000002001000039000001000010044300000120000004430000000501000041000000110001042e000000000100001900000012000104300000001000000432000000110001042e00000012000104300000000000000000000000020000000000000000000000000000004000000100000000000000000067542c617d6f482ee2791e51bbe547cc60c39ef1dd17449e401c6f321b4cc273"},"methodIdentifiers":{}},"irOptimized":"/*=====================================================*\n *                       WARNING                       *\n *  Solidity to Yul compilation is still EXPERIMENTAL  *\n *       It can result in LOSS OF FUNDS or worse       *\n *                !USE AT YOUR OWN RISK!               *\n *=====================================================*/\n\n/// @use-src 15:\"@openzeppelin/contracts/utils/math/SignedMath.sol\"\nobject \"SignedMath_3503\" {\n    code {\n        {\n            /// @src 15:215:1262  \"library SignedMath {...\"\n            mstore(64, 128)\n            if callvalue() { revert(0, 0) }\n            let _1 := datasize(\"SignedMath_3503_deployed\")\n            codecopy(128, dataoffset(\"SignedMath_3503_deployed\"), _1)\n            setimmutable(128, \"library_deploy_address\", address())\n            return(128, _1)\n        }\n    }\n    /// @use-src 15:\"@openzeppelin/contracts/utils/math/SignedMath.sol\"\n    object \"SignedMath_3503_deployed\" {\n        code {\n            {\n                /// @src 15:215:1262  \"library SignedMath {...\"\n                mstore(64, 128)\n                revert(0, 0)\n            }\n        }\n        data \".metadata\" hex\"a36469706673582212204d082a09cc50f0cb2ee4f5351b7b1c585249acdc8b139155eb8cd3bb718467f96c6578706572696d656e74616cf564736f6c63430008090041\"\n    }\n}\n","hash":"01000007aa59f3d1f735635690726ffdd5e60109d0506a53ce29ea81fedb00f9","factoryDependencies":{}}},"contracts/ERC20Token.sol":{"ERC20Token":{"abi":[{"inputs":[{"internalType":"string","name":"name","type":"string"},{"internalType":"string","name":"symbol","type":"string"}],"stateMutability":"nonpayable","type":"constructor"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"decimals","outputs":[{"internalType":"uint8","name":"","type":"uint8"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"subtractedValue","type":"uint256"}],"name":"decreaseAllowance","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"addedValue","type":"uint256"}],"name":"increaseAllowance","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"}],"metadata":{"optimizer_settings":"M3B3","solc_metadata":"{\"compiler\":{\"version\":\"0.8.9+commit.e5eed63a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"symbol\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"decreaseAllowance(address,uint256)\":{\"details\":\"Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`.\"},\"increaseAllowance(address,uint256)\":{\"details\":\"Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `amount`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `amount`. - the caller must have allowance for ``from``'s tokens of at least `amount`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/ERC20Token.sol\":\"ERC20Token\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"details\":{\"constantOptimizer\":false,\"cse\":true,\"deduplicate\":true,\"inliner\":true,\"jumpdestRemover\":true,\"orderLiterals\":true,\"peephole\":true,\"yul\":true,\"yulDetails\":{\"optimizerSteps\":\"dhfoDgvulfnTUtnIf[xarrscLMcCTUtTOntnfDIulLculVcul jjTpeulxarulrulxarrcLgvifCTUcarrLsTFOtfDncarrIulc]jmuljuljul VcTOcul jmul\",\"stackAllocation\":true}},\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0xa56ca923f70c1748830700250b19c61b70db9a683516dc5e216694a50445d99c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cac938788bc4be12101e59d45588b4e059579f4e61062e1cda8d6b06c0191b15\",\"dweb:/ipfs/QmV2JKCyjTVH3rkWNrfdJRhAT7tZ3usAN2XcnD4h53Mvih\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x287b55befed2961a7eabd7d7b1b2839cbca8a5b80ef8dcbb25ed3d4c2002c305\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bd39944e8fc06be6dbe2dd1d8449b5336e23c6a7ba3e8e9ae5ae0f37f35283f5\",\"dweb:/ipfs/QmPV3FGYjVwvKSgAXKUN3r9T9GwniZz83CxBpM7vyj2G53\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x8de418a5503946cabe331f35fe242d3201a73f67f77aaeb7110acb1f30423aca\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a376d3dda2cb70536c0a45c208b29b34ac560c4cb4f513a42079f96ba47d2dd\",\"dweb:/ipfs/QmZQg6gn1sUpM8wHzwNvSnihumUCAhxD119MpXeKp8B9s8\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"contracts/ERC20Token.sol\":{\"keccak256\":\"0x0f0ba001a42c41f383c91d4248b1e188b73041d44ca6b8dd5fc9d8115a1fec7c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cd078f41bb3c15105e5e498e6d800824223be7c7bc38c277ef7456934349b747\",\"dweb:/ipfs/QmTqt2u8mL6j7zz2nnNgRTTZRxmkfomDBr2JWq6JghTAsp\"]}},\"version\":1}","zk_version":"1.3.13"},"evm":{"legacyAssembly":null,"assembly":"\t.text\n\t.file\t\"ERC20Token.sol:ERC20Token\"\n\t.globl\t__entry\n__entry:\n.func_begin0:\n\tnop\tstack+=[7]\n\tptr.add\tr1, r0, stack[@ptr_calldata]\n\tshr.s\t96, r1, r1\n\tand\t@CPI0_0[0], r1, stack[@calldatasize]\n\tadd\t128, r0, r1\n\tst.1\t64, r1\n\tand!\t1, r2, r1\n\tjump.ne\t@.BB0_1\n\tadd\tstack[@calldatasize], r0, r1\n\tsub.s!\t4, r1, r1\n\tjump.lt\t@.BB0_2\n\tptr.add\tstack[@ptr_calldata], r0, r1\n\tld\tr1, r1\n\tshr.s\t224, r1, r1\n\tsub.s!\t@CPI0_7[0], r1, r2\n\tjump.le\t@.BB0_55\n\tsub.s!\t@CPI0_8[0], r1, r2\n\tjump.gt\t@.BB0_65\n\tsub.s!\t@CPI0_12[0], r1, r2\n\tjump.eq\t@.BB0_81\n\tsub.s!\t@CPI0_13[0], r1, r2\n\tjump.eq\t@.BB0_83\n\tsub.s!\t@CPI0_14[0], r1, r1\n\tjump.ne\t@.BB0_2\n\tcontext.get_context_u128\tr1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_2\n\tsub.s\t4, r0, r1\n\tadd\tstack[@calldatasize], r1, r1\n\tadd\t@CPI0_2[0], r0, r2\n\tsub!\tr1, r0, r3\n\tadd\tr0, r0, r3\n\tadd.lt\tr2, r0, r3\n\tand\t@CPI0_2[0], r1, r1\n\tsub!\tr1, r0, r4\n\tadd.le\tr0, r0, r2\n\tsub.s!\t@CPI0_2[0], r1, r1\n\tadd\tr3, r0, r1\n\tadd.eq\tr2, r0, r1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_2\n\tnear_call\tr0, @copy_array_from_storage_to_memory_string, @DEFAULT_UNWIND\n\tadd\tr1, r0, r2\n\tld.1\t64, r1\n\tadd\tr1, r0, stack-[7]\n\tnear_call\tr0, @abi_encode_string, @DEFAULT_UNWIND\n\tadd\tstack-[7], r0, r4\n\tsub\tr1, r4, r1\n\tadd\t@CPI0_0[0], r0, r2\n\tsub.s!\t@CPI0_0[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tsub.s!\t@CPI0_0[0], r4, r3\n\tadd.lt\tr4, r0, r2\n\tshl.s\t64, r2, r2\n\tshl.s\t96, r1, r1\n\tor\tr1, r2, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_1:\n\tcontext.get_context_u128\tr1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_2\n\tadd\tstack[@calldatasize], r0, r2\n\tadd\t31, r2, r1\n\tsub.s\t32, r0, r10\n\tand\tr1, r10, r4\n\tld.1\t64, r1\n\tadd\tr4, r1, r3\n\tsub!\tr3, r4, r4\n\tadd\t0, r0, r4\n\tadd.lt\t1, r0, r4\n\tsub.s!\t@CPI0_1[0], r3, r5\n\tjump.gt\t@.BB0_5\n\tand!\t1, r4, r4\n\tjump.ne\t@.BB0_5\n\tst.1\t64, r3\n\tand\t31, r2, r3\n\tptr.add\tstack[@ptr_calldata], r0, r4\n\tshr.s!\t5, r2, r5\n\tjump.eq\t@.BB0_94\n\tadd\tr0, r0, r6\n.BB0_8:\n\tshl.s\t5, r6, r7\n\tadd\tr1, r7, r8\n\tptr.add\tr4, r7, r7\n\tld\tr7, r7\n\tst.1\tr8, r7\n\tadd\t1, r6, r6\n\tsub!\tr6, r5, r7\n\tjump.lt\t@.BB0_8\n.BB0_94:\n\tsub!\tr3, r0, r6\n\tjump.eq\t@.BB0_10\n\tshl.s\t5, r5, r5\n\tptr.add\tr4, r5, r4\n\tadd\tr1, r5, r5\n\tshl.s\t3, r3, r3\n\tld.1\tr5, r6\n\tshl\tr6, r3, r6\n\tshr\tr6, r3, r6\n\tld\tr4, r4\n\tsub\t256, r3, r3\n\tshr\tr4, r3, r4\n\tshl\tr4, r3, r3\n\tor\tr3, r6, r3\n\tst.1\tr5, r3\n.BB0_10:\n\tadd\t@CPI0_2[0], r0, r3\n\tsub.s!\t64, r2, r4\n\tadd\tr0, r0, r4\n\tadd.lt\tr3, r0, r4\n\tand\t@CPI0_2[0], r2, r5\n\tsub!\tr5, r0, r6\n\tadd.le\tr0, r0, r3\n\tsub.s!\t@CPI0_2[0], r5, r5\n\tadd.ne\tr4, r0, r3\n\tsub!\tr3, r0, r3\n\tjump.ne\t@.BB0_2\n\tld.1.inc\tr1, r4, r3\n\tsub.s!\t@CPI0_1[0], r4, r5\n\tjump.gt\t@.BB0_2\n\tadd\tr1, r2, r2\n\tadd\tr4, r1, r4\n\tadd\t31, r4, r5\n\tadd\t@CPI0_2[0], r0, r6\n\tsub!\tr5, r2, r7\n\tadd\tr0, r0, r7\n\tadd.ge\tr6, r0, r7\n\tand\t@CPI0_2[0], r5, r5\n\tand\t@CPI0_2[0], r2, r8\n\tsub!\tr5, r8, r9\n\tadd.ge\tr0, r0, r6\n\txor\tr5, r8, r5\n\tsub.s!\t@CPI0_2[0], r5, r5\n\tadd\tr7, r0, r5\n\tadd.eq\tr6, r0, r5\n\tsub!\tr5, r0, r5\n\tjump.ne\t@.BB0_2\n\tld.1\tr4, r5\n\tsub.s!\t@CPI0_1[0], r5, r6\n\tjump.le\t@.BB0_14\n.BB0_5:\n\tadd\t@CPI0_5[0], r0, r1\n\tst.1\t0, r1\n\tadd\t65, r0, r1\n\tst.1\t4, r1\n\tadd\t@CPI0_6[0], r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB0_55:\n\tsub.s!\t@CPI0_15[0], r1, r2\n\tjump.le\t@.BB0_56\n\tsub.s!\t@CPI0_16[0], r1, r2\n\tjump.eq\t@.BB0_73\n\tsub.s!\t@CPI0_17[0], r1, r2\n\tjump.eq\t@.BB0_76\n\tsub.s!\t@CPI0_18[0], r1, r1\n\tjump.ne\t@.BB0_2\n\tcontext.get_context_u128\tr1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_2\n\tsub.s\t4, r0, r1\n\tadd\tstack[@calldatasize], r1, r1\n\tadd\t@CPI0_2[0], r0, r2\n\tsub!\tr1, r0, r3\n\tadd\tr0, r0, r3\n\tadd.lt\tr2, r0, r3\n\tand\t@CPI0_2[0], r1, r1\n\tsub!\tr1, r0, r4\n\tadd.le\tr0, r0, r2\n\tsub.s!\t@CPI0_2[0], r1, r1\n\tadd\tr3, r0, r1\n\tadd.eq\tr2, r0, r1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_2\n\tld.1\t64, r1\n\tadd\t18, r0, r2\n\tst.1\tr1, r2\n\tadd\t@CPI0_0[0], r0, r2\n\tsub.s!\t@CPI0_0[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI0_21[0], r1, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_65:\n\tsub.s!\t@CPI0_9[0], r1, r2\n\tjump.eq\t@.BB0_88\n\tsub.s!\t@CPI0_10[0], r1, r2\n\tjump.eq\t@.BB0_90\n\tsub.s!\t@CPI0_11[0], r1, r1\n\tjump.ne\t@.BB0_2\n\tcontext.get_context_u128\tr1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_2\n\tadd\tstack[@calldatasize], r0, r1\n\tnear_call\tr0, @abi_decode_addresst_address, @DEFAULT_UNWIND\n\tadd\tr2, r0, stack-[7]\n\tnear_call\tr0, @mapping_index_access_mapping_address_uint256_of_address_2492, @DEFAULT_UNWIND\n\tadd\tstack-[7], r0, r2\n\tnear_call\tr0, @mapping_index_access_mapping_address_uint256_of_address.3, @DEFAULT_UNWIND\n\tsload\tr1, r1\n\tld.1\t64, r2\n\tst.1\tr2, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI0_21[0], r1, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_56:\n\tsub.s!\t@CPI0_19[0], r1, r2\n\tjump.eq\t@.BB0_68\n\tsub.s!\t@CPI0_20[0], r1, r1\n\tjump.ne\t@.BB0_2\n\tcontext.get_context_u128\tr1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_2\n\tadd\tstack[@calldatasize], r0, r1\n\tnear_call\tr0, @abi_decode_addresst_uint256, @DEFAULT_UNWIND\n\tnear_call\tr0, @fun_approve, @DEFAULT_UNWIND\n\tadd\t1, r0, r1\n\tld.1\t64, r2\n\tst.1\tr2, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI0_21[0], r1, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_81:\n\tcontext.get_context_u128\tr1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_2\n\tadd\tstack[@calldatasize], r0, r1\n\tnear_call\tr0, @abi_decode_addresst_uint256, @DEFAULT_UNWIND\n\tnear_call\tr0, @fun_increaseAllowance, @DEFAULT_UNWIND\n\tadd\t1, r0, r1\n\tld.1\t64, r2\n\tst.1\tr2, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI0_21[0], r1, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_83:\n\tcontext.get_context_u128\tr1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_2\n\tadd\tstack[@calldatasize], r0, r1\n\tnear_call\tr0, @abi_decode_address, @DEFAULT_UNWIND\n\tnear_call\tr0, @fun_balanceOf, @DEFAULT_UNWIND\n\tld.1\t64, r2\n\tst.1\tr2, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI0_21[0], r1, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_73:\n\tcontext.get_context_u128\tr1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_2\n\tsub.s\t4, r0, r1\n\tadd\tstack[@calldatasize], r1, r1\n\tadd\t@CPI0_2[0], r0, r2\n\tsub!\tr1, r0, r3\n\tadd\tr0, r0, r3\n\tadd.lt\tr2, r0, r3\n\tand\t@CPI0_2[0], r1, r1\n\tsub!\tr1, r0, r4\n\tadd.le\tr0, r0, r2\n\tsub.s!\t@CPI0_2[0], r1, r1\n\tadd\tr3, r0, r1\n\tadd.eq\tr2, r0, r1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_2\n\tadd\t2, r0, r1\n\tsload\tr1, r1\n\tld.1\t64, r2\n\tst.1\tr2, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI0_21[0], r1, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_76:\n\tcontext.get_context_u128\tr1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_2\n\tadd\tstack[@calldatasize], r0, r1\n\tnear_call\tr0, @abi_decode_addresst_addresst_uint256, @DEFAULT_UNWIND\n\tnear_call\tr0, @fun_transferFrom, @DEFAULT_UNWIND\n\tadd\t1, r0, r1\n\tld.1\t64, r2\n\tst.1\tr2, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI0_21[0], r1, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_88:\n\tcontext.get_context_u128\tr1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_2\n\tadd\tstack[@calldatasize], r0, r1\n\tnear_call\tr0, @abi_decode_addresst_uint256, @DEFAULT_UNWIND\n\tnear_call\tr0, @fun_decreaseAllowance, @DEFAULT_UNWIND\n\tadd\t1, r0, r1\n\tld.1\t64, r2\n\tst.1\tr2, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI0_21[0], r1, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_90:\n\tcontext.get_context_u128\tr1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_2\n\tadd\tstack[@calldatasize], r0, r1\n\tnear_call\tr0, @abi_decode_addresst_uint256, @DEFAULT_UNWIND\n\tnear_call\tr0, @fun_transfer, @DEFAULT_UNWIND\n\tadd\t1, r0, r1\n\tld.1\t64, r2\n\tst.1\tr2, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI0_21[0], r1, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_68:\n\tcontext.get_context_u128\tr1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_2\n\tsub.s\t4, r0, r1\n\tadd\tstack[@calldatasize], r1, r1\n\tadd\t@CPI0_2[0], r0, r2\n\tsub!\tr1, r0, r3\n\tadd\tr0, r0, r3\n\tadd.lt\tr2, r0, r3\n\tand\t@CPI0_2[0], r1, r1\n\tsub!\tr1, r0, r4\n\tadd.le\tr0, r0, r2\n\tsub.s!\t@CPI0_2[0], r1, r1\n\tadd\tr3, r0, r1\n\tadd.eq\tr2, r0, r1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_2\n\tnear_call\tr0, @copy_array_from_storage_to_memory_string_2479, @DEFAULT_UNWIND\n\tadd\tr1, r0, r2\n\tld.1\t64, r1\n\tadd\tr1, r0, stack-[7]\n\tnear_call\tr0, @abi_encode_string, @DEFAULT_UNWIND\n\tadd\tstack-[7], r0, r4\n\tsub\tr1, r4, r1\n\tadd\t@CPI0_0[0], r0, r2\n\tsub.s!\t@CPI0_0[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tsub.s!\t@CPI0_0[0], r4, r3\n\tadd.lt\tr4, r0, r2\n\tshl.s\t64, r2, r2\n\tshl.s\t96, r1, r1\n\tor\tr1, r2, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_14:\n\tadd\t63, r5, r6\n\tand\tr6, r10, r6\n\tld.1\t64, r11\n\tadd\tr11, r6, r6\n\tsub!\tr6, r11, r7\n\tadd\t0, r0, r7\n\tadd.lt\t1, r0, r7\n\tsub.s!\t@CPI0_1[0], r6, r8\n\tjump.gt\t@.BB0_5\n\tand!\t1, r7, r7\n\tjump.ne\t@.BB0_5\n\tst.1\t64, r6\n\tst.1.inc\tr11, r5, r12\n\tadd\t32, r5, r6\n\tadd\tr6, r4, r7\n\tsub!\tr7, r2, r7\n\tjump.gt\t@.BB0_2\n\tsub!\tr5, r0, r7\n\tjump.eq\t@.BB0_22\n\tadd\tr0, r0, r7\n.BB0_19:\n\tadd\t32, r7, r7\n\tadd\tr7, r11, r8\n\tadd\tr7, r4, r9\n\tld.1\tr9, r9\n\tst.1\tr8, r9\n\tsub!\tr7, r5, r8\n\tjump.lt\t@.BB0_19\n\tsub!\tr7, r5, r4\n\tjump.le\t@.BB0_22\n\tadd\tr11, r6, r4\n\tst.1\tr4, r0\n.BB0_22:\n\tld.1\tr3, r3\n\tsub.s!\t@CPI0_1[0], r3, r4\n\tjump.gt\t@.BB0_2\n\tadd\tr3, r1, r1\n\tadd\t31, r1, r3\n\tadd\t@CPI0_2[0], r0, r4\n\tsub!\tr3, r2, r5\n\tadd\tr0, r0, r5\n\tadd.ge\tr4, r0, r5\n\tand\t@CPI0_2[0], r3, r3\n\tand\t@CPI0_2[0], r2, r6\n\tsub!\tr3, r6, r7\n\tadd.ge\tr0, r0, r4\n\txor\tr3, r6, r3\n\tsub.s!\t@CPI0_2[0], r3, r3\n\tadd\tr5, r0, r3\n\tadd.eq\tr4, r0, r3\n\tsub!\tr3, r0, r3\n\tjump.ne\t@.BB0_2\n\tld.1\tr1, r3\n\tsub.s!\t@CPI0_1[0], r3, r4\n\tjump.gt\t@.BB0_5\n\tadd\t63, r3, r4\n\tand\tr4, r10, r4\n\tld.1\t64, r7\n\tadd\tr7, r4, r4\n\tsub!\tr4, r7, r5\n\tadd\t0, r0, r5\n\tadd.lt\t1, r0, r5\n\tsub.s!\t@CPI0_1[0], r4, r6\n\tjump.gt\t@.BB0_5\n\tand!\t1, r5, r5\n\tjump.ne\t@.BB0_5\n\tst.1\t64, r4\n\tst.1\tr7, r3\n\tadd\t32, r3, r4\n\tadd\tr4, r1, r5\n\tsub!\tr5, r2, r2\n\tjump.le\t@.BB0_28\n.BB0_2:\n\tadd\tr0, r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB0_28:\n\tadd\tr12, r0, stack-[4]\n\tadd\tr11, r0, stack-[7]\n\tadd\tr10, r0, stack-[5]\n\tsub!\tr3, r0, r2\n\tjump.eq\t@.BB0_33\n\tadd\tr0, r0, r2\n.BB0_30:\n\tadd\t32, r2, r2\n\tadd\tr2, r7, r5\n\tadd\tr2, r1, r6\n\tld.1\tr6, r6\n\tst.1\tr5, r6\n\tsub!\tr2, r3, r5\n\tjump.lt\t@.BB0_30\n\tsub!\tr2, r3, r1\n\tjump.le\t@.BB0_33\n\tadd\tr7, r4, r1\n\tst.1\tr1, r0\n.BB0_33:\n\tadd\tstack-[7], r0, r1\n\tld.1\tr1, r1\n\tadd\tr1, r0, stack-[6]\n\tsub.s!\t@CPI0_1[0], r1, r1\n\tjump.gt\t@.BB0_5\n\tadd\tr7, r0, stack-[1]\n\tadd\t3, r0, r1\n\tadd\tr1, r0, stack-[3]\n\tsload\tr1, r1\n\tand!\t1, r1, r2\n\tshr.s\t1, r1, r1\n\tand\t127, r1, r3\n\tadd.eq\tr3, r0, r1\n\tadd\tr1, r0, stack-[2]\n\tsub.s!\t31, r1, r1\n\tadd\t0, r0, r1\n\tadd.gt\t1, r0, r1\n\tand\t1, r1, r1\n\tsub!\tr2, r1, r1\n\tjump.eq\t@.BB0_36\n\tadd\t@CPI0_5[0], r0, r1\n\tst.1\t0, r1\n\tadd\t34, r0, r1\n\tst.1\t4, r1\n\tadd\t@CPI0_6[0], r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB0_36:\n\tadd\tstack-[2], r0, r1\n\tsub.s!\t32, r1, r1\n\tjump.lt\t@.BB0_41\n\tadd\tstack-[3], r0, r1\n\tst.1\t0, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_3[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tadd\tstack-[6], r0, r3\n\tadd\t31, r3, r2\n\tshr.s\t5, r2, r2\n\tsub.s!\t32, r3, r3\n\tadd.lt\tr0, r0, r2\n\tld\tr1, r3\n\tadd\tstack-[2], r0, r1\n\tadd\t31, r1, r1\n\tshr.s\t5, r1, r1\n\tadd\tr3, r1, r1\n\tadd\tr3, r2, r2\n\tsub!\tr2, r1, r3\n\tjump.ge\t@.BB0_41\n.BB0_40:\n\tsstore\tr2, r0\n\tadd\t1, r2, r2\n\tsub!\tr2, r1, r3\n\tjump.lt\t@.BB0_40\n.BB0_41:\n\tadd\tstack-[6], r0, r1\n\tsub.s!\t31, r1, r1\n\tjump.le\t@.BB0_50\n\tadd\tstack-[3], r0, r1\n\tst.1\t0, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_3[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tadd\tstack-[5], r0, r2\n\tadd\tstack-[7], r0, r6\n\tjump.eq\t@.BB0_2\n\tadd\tstack-[6], r0, r3\n\tand!\tr3, r2, r3\n\tadd\t32, r0, r2\n\tld\tr1, r1\n\tjump.eq\t@.BB0_47\n\tadd\t32, r0, r2\n\tadd\tr0, r0, r4\n.BB0_46:\n\tadd\tr2, r6, r5\n\tld.1\tr5, r5\n\tsstore\tr1, r5\n\tadd\t32, r2, r2\n\tadd\t1, r1, r1\n\tadd\t32, r4, r4\n\tsub!\tr4, r3, r5\n\tjump.lt\t@.BB0_46\n.BB0_47:\n\tadd\tstack-[6], r0, r4\n\tsub!\tr3, r4, r3\n\tjump.ge\t@.BB0_49\n\tadd\tstack-[6], r0, r3\n\tshl.s\t3, r3, r3\n\tand\t248, r3, r3\n\tsub.s\t1, r0, r4\n\tshr\tr4, r3, r3\n\txor\tr3, r4, r3\n\tadd\tstack-[7], r0, r4\n\tadd\tr2, r4, r2\n\tld.1\tr2, r2\n\tand\tr2, r3, r2\n\tsstore\tr1, r2\n.BB0_49:\n\tadd\t1, r0, r1\n\tadd\tstack-[6], r0, r2\n\tshl.s\t1, r2, r2\n\tjump\t@.BB0_42\n.BB0_50:\n\tadd\tstack-[6], r0, r1\n\tsub!\tr1, r0, r1\n\tadd\tr0, r0, r1\n\tjump.eq\t@.BB0_52\n\tadd\tstack-[4], r0, r1\n\tld.1\tr1, r1\n.BB0_52:\n\tadd\tstack-[6], r0, r4\n\tshl.s\t3, r4, r2\n\tsub.s\t1, r0, r3\n\tshr\tr3, r2, r2\n\txor\tr2, r3, r2\n\tand\tr1, r2, r2\n\tshl.s\t1, r4, r1\n.BB0_42:\n\tor\tr2, r1, r1\n\tadd\tstack-[3], r0, r2\n\tsstore\tr2, r1\n\tadd\tstack-[1], r0, r1\n\tnear_call\tr0, @copy_byte_array_to_storage_from_string_to_string, @DEFAULT_UNWIND\n\tcontext.caller\tr1\n\tnear_call\tr0, @fun_mint, @DEFAULT_UNWIND\n\tadd\t32, r0, r1\n\tst.2\t256, r1\n\tst.2\t288, r0\n\tadd\t@CPI0_4[0], r0, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.func_end0:\n\ncopy_byte_array_to_storage_from_string_to_string:\n.func_begin1:\n\tnop\tstack+=[5]\n\tld.1.inc\tr1, r5, r7\n\tsub.s!\t@CPI1_0[0], r5, r2\n\tjump.ge\t@.BB1_1\n\tadd\t4, r0, r4\n\tsload\tr4, r3\n\tand!\t1, r3, r2\n\tshr.s\t1, r3, r6\n\tand\t127, r6, r3\n\tadd.eq\tr3, r0, r6\n\tsub.s!\t31, r6, r3\n\tadd\t0, r0, r3\n\tadd.gt\t1, r0, r3\n\tand\t1, r3, r3\n\tsub!\tr2, r3, r2\n\tjump.ne\t@.BB1_3\n\tadd\tr1, r0, stack-[3]\n\tsub.s!\t32, r6, r1\n\tadd\tr4, r0, stack-[5]\n\tadd\tr5, r0, stack-[4]\n\tjump.lt\t@.BB1_10\n\tadd\tr6, r0, stack-[1]\n\tadd\tr7, r0, stack-[2]\n\tst.1\t0, r4\n\tadd\t@CPI1_1[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI1_1[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI1_2[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB1_6\n\tadd\tstack-[4], r0, r5\n\tadd\t31, r5, r2\n\tshr.s\t5, r2, r2\n\tsub.s!\t32, r5, r3\n\tadd.lt\tr0, r0, r2\n\tld\tr1, r3\n\tadd\tstack-[1], r0, r1\n\tadd\t31, r1, r1\n\tshr.s\t5, r1, r1\n\tadd\tr3, r1, r1\n\tadd\tr3, r2, r2\n\tsub!\tr2, r1, r3\n\tadd\tstack-[5], r0, r4\n\tadd\tstack-[2], r0, r7\n\tjump.ge\t@.BB1_10\n.BB1_9:\n\tsstore\tr2, r0\n\tadd\t1, r2, r2\n\tsub!\tr2, r1, r3\n\tjump.lt\t@.BB1_9\n.BB1_10:\n\tsub.s!\t31, r5, r1\n\tjump.le\t@.BB1_19\n\tst.1\t0, r4\n\tadd\t@CPI1_1[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI1_1[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI1_2[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB1_6\n\tsub.s\t32, r0, r2\n\tadd\tstack-[4], r0, r6\n\tand!\tr6, r2, r3\n\tadd\t32, r0, r2\n\tld\tr1, r1\n\tadd\tstack-[3], r0, r7\n\tjump.eq\t@.BB1_16\n\tadd\t32, r0, r2\n\tadd\tr0, r0, r4\n.BB1_15:\n\tadd\tr2, r7, r5\n\tld.1\tr5, r5\n\tsstore\tr1, r5\n\tadd\t32, r2, r2\n\tadd\t1, r1, r1\n\tadd\t32, r4, r4\n\tsub!\tr4, r3, r5\n\tjump.lt\t@.BB1_15\n.BB1_16:\n\tsub!\tr3, r6, r3\n\tjump.ge\t@.BB1_18\n\tshl.s\t3, r6, r3\n\tand\t248, r3, r3\n\tsub.s\t1, r0, r4\n\tshr\tr4, r3, r3\n\txor\tr3, r4, r3\n\tadd\tr2, r7, r2\n\tld.1\tr2, r2\n\tand\tr2, r3, r2\n\tsstore\tr1, r2\n.BB1_18:\n\tshl.s\t1, r6, r1\n\tor\t1, r1, r1\n\tadd\tstack-[5], r0, r4\n\tjump\t@.BB1_11\n.BB1_19:\n\tsub!\tr5, r0, r1\n\tadd\tr0, r0, r1\n\tjump.eq\t@.BB1_11\n\tshl.s\t3, r5, r1\n\tsub.s\t1, r0, r2\n\tshr\tr2, r1, r1\n\txor\tr1, r2, r1\n\tld.1\tr7, r2\n\tand\tr2, r1, r1\n\tshl.s\t1, r5, r2\n\tor\tr1, r2, r1\n.BB1_11:\n\tsstore\tr4, r1\n\tret\n.BB1_1:\n\tadd\t@CPI1_3[0], r0, r1\n\tst.1\t0, r1\n\tadd\t65, r0, r1\n\tst.1\t4, r1\n\tadd\t@CPI1_4[0], r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB1_3:\n\tadd\t@CPI1_3[0], r0, r1\n\tst.1\t0, r1\n\tadd\t34, r0, r1\n\tst.1\t4, r1\n\tadd\t@CPI1_4[0], r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB1_6:\n\tadd\tr0, r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.func_end1:\n\nfun_mint:\n.func_begin2:\n\tnop\tstack+=[1]\n\tand!\t@CPI2_0[0], r1, r5\n\tjump.eq\t@.BB2_1\n\tadd\tr1, r0, stack-[1]\n\tadd\t2, r0, r2\n\tsload\tr2, r3\n\tsub.s!\t@CPI2_1[0], r3, r4\n\tjump.ge\t@.BB2_3\n\tadd\t@CPI2_2[0], r3, r3\n\tsstore\tr2, r3\n\tst.1\t0, r5\n\tst.1\t32, r0\n\tadd\t@CPI2_3[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI2_3[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI2_4[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB2_5\n\tld\tr1, r1\n\tsload\tr1, r2\n\tadd\t@CPI2_2[0], r2, r2\n\tsstore\tr1, r2\n\tadd\t@CPI2_2[0], r0, r1\n\tld.1\t64, r2\n\tst.1\tr2, r1\n\tadd\t@CPI2_3[0], r0, r1\n\tcontext.gas_left\tr3\n\tsub.s!\t@CPI2_3[0], r3, r4\n\tadd.ge\tr1, r0, r3\n\tsub.s!\t@CPI2_3[0], r2, r4\n\tadd.lt\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tshl.s\t192, r3, r2\n\tor\tr2, r1, r1\n\tor\t@CPI2_5[0], r1, r1\n\tadd\t32781, r0, r2\n\tadd\t3, r0, r3\n\tadd\t@CPI2_6[0], r0, r4\n\tadd\tr0, r0, r5\n\tadd\tstack-[1], r0, r6\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r1\n\tjump.eq\t@.BB2_5\n\tret\n.BB2_5:\n\tadd\tr0, r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB2_1:\n\tld.1\t64, r1\n\tadd\t68, r1, r2\n\tadd\t@CPI2_9[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t36, r1, r2\n\tadd\t31, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI2_10[0], r0, r2\n\tst.1\tr1, r2\n\tadd\t4, r1, r2\n\tadd\t32, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI2_3[0], r0, r2\n\tsub.s!\t@CPI2_3[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI2_11[0], r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB2_3:\n\tadd\t@CPI2_7[0], r0, r1\n\tst.1\t0, r1\n\tadd\t17, r0, r1\n\tst.1\t4, r1\n\tadd\t@CPI2_8[0], r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.func_end2:\n\nabi_encode_string:\n.func_begin3:\n\tadd\t32, r0, r3\n\tst.1.inc\tr1, r3, r4\n\tld.1\tr2, r3\n\tst.1\tr4, r3\n\tsub!\tr3, r0, r4\n\tadd\t64, r1, r1\n\tjump.eq\t@.BB3_4\n\tadd\tr0, r0, r4\n.BB3_2:\n\tadd\tr1, r4, r5\n\tadd\t32, r4, r4\n\tadd\tr4, r2, r6\n\tld.1\tr6, r6\n\tst.1\tr5, r6\n\tsub!\tr4, r3, r5\n\tjump.lt\t@.BB3_2\n\tsub!\tr4, r3, r2\n\tjump.le\t@.BB3_4\n\tadd\tr1, r3, r2\n\tst.1\tr2, r0\n\tjump\t@.BB3_6\n.BB3_4:\n.BB3_6:\n\tadd\t31, r3, r2\n\tsub.s\t32, r0, r3\n\tand\tr2, r3, r2\n\tadd\tr1, r2, r1\n\tret\n.func_end3:\n\nabi_decode_addresst_uint256:\n.func_begin4:\n\tsub.s\t4, r1, r1\n\tadd\t@CPI4_0[0], r0, r2\n\tsub.s!\t63, r1, r3\n\tadd\tr0, r0, r3\n\tadd.gt\tr2, r0, r3\n\tand\t@CPI4_0[0], r1, r1\n\tsub!\tr1, r0, r4\n\tadd.ge\tr0, r0, r2\n\tsub.s!\t@CPI4_0[0], r1, r1\n\tadd\tr3, r0, r1\n\tadd.eq\tr2, r0, r1\n\tsub!\tr1, r0, r1\n\tjump.eq\t@.BB4_1\n\tptr.add\tstack[@ptr_calldata], r0, r2\n\tptr.add.s\t4, r2, r1\n\tld\tr1, r1\n\tsub.s!\t@CPI4_1[0], r1, r3\n\tjump.gt\t@.BB4_1\n\tptr.add.s\t36, r2, r2\n\tld\tr2, r2\n\tret\n.BB4_1:\n\tadd\tr0, r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.func_end4:\n\nabi_decode_addresst_addresst_uint256:\n.func_begin5:\n\tsub.s\t4, r1, r1\n\tadd\t@CPI5_0[0], r0, r2\n\tsub.s!\t95, r1, r3\n\tadd\tr0, r0, r3\n\tadd.gt\tr2, r0, r3\n\tand\t@CPI5_0[0], r1, r1\n\tsub!\tr1, r0, r4\n\tadd.ge\tr0, r0, r2\n\tsub.s!\t@CPI5_0[0], r1, r1\n\tadd\tr3, r0, r1\n\tadd.eq\tr2, r0, r1\n\tsub!\tr1, r0, r1\n\tjump.eq\t@.BB5_1\n\tptr.add\tstack[@ptr_calldata], r0, r3\n\tptr.add.s\t4, r3, r1\n\tld\tr1, r1\n\tsub.s!\t@CPI5_1[0], r1, r2\n\tjump.gt\t@.BB5_1\n\tptr.add.s\t36, r3, r2\n\tld\tr2, r2\n\tsub.s!\t@CPI5_1[0], r2, r4\n\tjump.gt\t@.BB5_1\n\tptr.add.s\t68, r3, r3\n\tld\tr3, r3\n\tret\n.BB5_1:\n\tadd\tr0, r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.func_end5:\n\nabi_decode_address:\n.func_begin6:\n\tsub.s\t4, r1, r1\n\tadd\t@CPI6_0[0], r0, r2\n\tsub.s!\t31, r1, r3\n\tadd\tr0, r0, r3\n\tadd.gt\tr2, r0, r3\n\tand\t@CPI6_0[0], r1, r1\n\tsub!\tr1, r0, r4\n\tadd.ge\tr0, r0, r2\n\tsub.s!\t@CPI6_0[0], r1, r1\n\tadd\tr3, r0, r1\n\tadd.eq\tr2, r0, r1\n\tsub!\tr1, r0, r1\n\tjump.eq\t@.BB6_1\n\tadd\t4, r0, r1\n\tptr.add\tstack[@ptr_calldata], r1, r1\n\tld\tr1, r1\n\tsub.s!\t@CPI6_1[0], r1, r2\n\tjump.gt\t@.BB6_1\n\tret\n.BB6_1:\n\tadd\tr0, r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.func_end6:\n\nabi_decode_addresst_address:\n.func_begin7:\n\tsub.s\t4, r1, r1\n\tadd\t@CPI7_0[0], r0, r2\n\tsub.s!\t63, r1, r3\n\tadd\tr0, r0, r3\n\tadd.gt\tr2, r0, r3\n\tand\t@CPI7_0[0], r1, r1\n\tsub!\tr1, r0, r4\n\tadd.ge\tr0, r0, r2\n\tsub.s!\t@CPI7_0[0], r1, r1\n\tadd\tr3, r0, r1\n\tadd.eq\tr2, r0, r1\n\tsub!\tr1, r0, r1\n\tjump.eq\t@.BB7_1\n\tptr.add\tstack[@ptr_calldata], r0, r2\n\tptr.add.s\t4, r2, r1\n\tld\tr1, r1\n\tsub.s!\t@CPI7_1[0], r1, r3\n\tjump.gt\t@.BB7_1\n\tptr.add.s\t36, r2, r2\n\tld\tr2, r2\n\tsub.s!\t@CPI7_1[0], r2, r3\n\tjump.gt\t@.BB7_1\n\tret\n.BB7_1:\n\tadd\tr0, r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.func_end7:\n\ncopy_array_from_storage_to_memory_string_2479:\n.func_begin8:\n\tadd\t3, r0, r5\n\tsload\tr5, r4\n\tand!\t1, r4, r6\n\tshr.s\t1, r4, r1\n\tand\t127, r1, r2\n\tadd.ne\tr1, r0, r2\n\tsub.s!\t31, r2, r1\n\tadd\t0, r0, r1\n\tadd.gt\t1, r0, r1\n\tand\t1, r1, r1\n\tsub!\tr6, r1, r1\n\tjump.ne\t@.BB8_1\n\tld.1\t64, r1\n\tst.1.inc\tr1, r2, r3\n\tsub!\tr6, r0, r6\n\tjump.ne\t@.BB8_9\n\tsub.s\t256, r0, r2\n\tand\tr4, r2, r2\n\tst.1\tr3, r2\n\tadd\t64, r0, r4\n\tjump\t@.BB8_4\n.BB8_9:\n\tst.1\t0, r5\n\tadd\t32, r0, r4\n\tsub!\tr2, r0, r5\n\tjump.eq\t@.BB8_4\n\tadd\t@CPI8_0[0], r0, r4\n\tadd\tr0, r0, r6\n.BB8_11:\n\tadd\tr6, r0, r5\n\tadd\tr5, r3, r6\n\tsload\tr4, r7\n\tst.1\tr6, r7\n\tadd\t1, r4, r4\n\tadd\t32, r5, r6\n\tsub!\tr6, r2, r7\n\tjump.lt\t@.BB8_11\n\tadd\t95, r5, r2\n\tsub.s\t32, r0, r3\n\tand\tr2, r3, r4\n.BB8_4:\n\tadd\tr4, r1, r2\n\tsub!\tr2, r4, r3\n\tadd\t0, r0, r3\n\tadd.lt\t1, r0, r3\n\tsub.s!\t@CPI8_1[0], r2, r4\n\tjump.gt\t@.BB8_6\n\tand!\t1, r3, r3\n\tjump.ne\t@.BB8_6\n\tst.1\t64, r2\n\tret\n.BB8_1:\n\tadd\t@CPI8_2[0], r0, r1\n\tst.1\t0, r1\n\tadd\t34, r0, r1\n\tst.1\t4, r1\n\tadd\t@CPI8_3[0], r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB8_6:\n\tadd\t@CPI8_2[0], r0, r1\n\tst.1\t0, r1\n\tadd\t65, r0, r1\n\tst.1\t4, r1\n\tadd\t@CPI8_3[0], r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.func_end8:\n\ncopy_array_from_storage_to_memory_string:\n.func_begin9:\n\tadd\t4, r0, r5\n\tsload\tr5, r4\n\tand!\t1, r4, r6\n\tshr.s\t1, r4, r1\n\tand\t127, r1, r2\n\tadd.ne\tr1, r0, r2\n\tsub.s!\t31, r2, r1\n\tadd\t0, r0, r1\n\tadd.gt\t1, r0, r1\n\tand\t1, r1, r1\n\tsub!\tr6, r1, r1\n\tjump.ne\t@.BB9_1\n\tld.1\t64, r1\n\tst.1.inc\tr1, r2, r3\n\tsub!\tr6, r0, r6\n\tjump.ne\t@.BB9_9\n\tsub.s\t256, r0, r2\n\tand\tr4, r2, r2\n\tst.1\tr3, r2\n\tadd\t64, r0, r4\n\tjump\t@.BB9_4\n.BB9_9:\n\tst.1\t0, r5\n\tadd\t32, r0, r4\n\tsub!\tr2, r0, r5\n\tjump.eq\t@.BB9_4\n\tadd\t@CPI9_0[0], r0, r4\n\tadd\tr0, r0, r6\n.BB9_11:\n\tadd\tr6, r0, r5\n\tadd\tr5, r3, r6\n\tsload\tr4, r7\n\tst.1\tr6, r7\n\tadd\t1, r4, r4\n\tadd\t32, r5, r6\n\tsub!\tr6, r2, r7\n\tjump.lt\t@.BB9_11\n\tadd\t95, r5, r2\n\tsub.s\t32, r0, r3\n\tand\tr2, r3, r4\n.BB9_4:\n\tadd\tr4, r1, r2\n\tsub!\tr2, r4, r3\n\tadd\t0, r0, r3\n\tadd.lt\t1, r0, r3\n\tsub.s!\t@CPI9_1[0], r2, r4\n\tjump.gt\t@.BB9_6\n\tand!\t1, r3, r3\n\tjump.ne\t@.BB9_6\n\tst.1\t64, r2\n\tret\n.BB9_1:\n\tadd\t@CPI9_2[0], r0, r1\n\tst.1\t0, r1\n\tadd\t34, r0, r1\n\tst.1\t4, r1\n\tadd\t@CPI9_3[0], r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB9_6:\n\tadd\t@CPI9_2[0], r0, r1\n\tst.1\t0, r1\n\tadd\t65, r0, r1\n\tst.1\t4, r1\n\tadd\t@CPI9_3[0], r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.func_end9:\n\nmapping_index_access_mapping_address_uint256_of_address_2492:\n.func_begin10:\n\tand\t@CPI10_0[0], r1, r1\n\tst.1\t0, r1\n\tadd\t1, r0, r1\n\tst.1\t32, r1\n\tadd\t@CPI10_1[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI10_1[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI10_2[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB10_1\n\tld\tr1, r1\n\tret\n.BB10_1:\n\tadd\tr0, r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.func_end10:\n\nmapping_index_access_mapping_address_uint256_of_address.3:\n.func_begin11:\n\tand\t@CPI11_0[0], r2, r2\n\tst.1\t0, r2\n\tst.1\t32, r1\n\tadd\t@CPI11_1[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI11_1[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI11_2[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB11_1\n\tld\tr1, r1\n\tret\n.BB11_1:\n\tadd\tr0, r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.func_end11:\n\nfun_balanceOf:\n.func_begin12:\n\tand\t@CPI12_0[0], r1, r1\n\tst.1\t0, r1\n\tst.1\t32, r0\n\tadd\t@CPI12_1[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI12_1[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI12_2[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB12_1\n\tld\tr1, r1\n\tsload\tr1, r1\n\tret\n.BB12_1:\n\tadd\tr0, r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.func_end12:\n\nfun_transfer:\n.func_begin13:\n\tnop\tstack+=[6]\n\tadd\tr2, r0, stack-[6]\n\tcontext.caller\tr2\n\tand!\t@CPI13_0[0], r2, r3\n\tjump.eq\t@.BB13_1\n\tadd\tr2, r0, stack-[2]\n\tadd\tr1, r0, stack-[3]\n\tand!\t@CPI13_0[0], r1, r1\n\tadd\tr1, r0, stack-[5]\n\tjump.eq\t@.BB13_3\n\tadd\tr3, r0, stack-[4]\n\tst.1\t0, r3\n\tst.1\t32, r0\n\tadd\t@CPI13_1[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI13_1[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI13_2[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB13_5\n\tld\tr1, r1\n\tsload\tr1, r2\n\tadd\tstack-[6], r0, r1\n\tadd\tr2, r0, stack-[1]\n\tsub!\tr2, r1, r1\n\tjump.lt\t@.BB13_7\n\tadd\tstack-[4], r0, r1\n\tst.1\t0, r1\n\tst.1\t32, r0\n\tadd\t@CPI13_1[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI13_1[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI13_2[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB13_5\n\tadd\tstack-[6], r0, r2\n\tadd\tstack-[1], r0, r3\n\tsub\tr3, r2, r2\n\tld\tr1, r1\n\tsstore\tr1, r2\n\tadd\tstack-[5], r0, r1\n\tst.1\t0, r1\n\tst.1\t32, r0\n\tadd\t@CPI13_1[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI13_1[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI13_2[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB13_5\n\tld\tr1, r1\n\tsload\tr1, r2\n\tadd\tstack-[6], r0, r3\n\tadd\tr2, r3, r2\n\tsstore\tr1, r2\n\tld.1\t64, r1\n\tst.1\tr1, r3\n\tadd\t@CPI13_1[0], r0, r2\n\tcontext.gas_left\tr3\n\tsub.s!\t@CPI13_1[0], r3, r4\n\tadd.ge\tr2, r0, r3\n\tsub.s!\t@CPI13_1[0], r1, r4\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tshl.s\t192, r3, r2\n\tor\tr2, r1, r1\n\tor\t@CPI13_3[0], r1, r1\n\tadd\t32781, r0, r2\n\tadd\t3, r0, r3\n\tadd\t@CPI13_4[0], r0, r4\n\tadd\tstack-[2], r0, r5\n\tadd\tstack-[3], r0, r6\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r1\n\tjump.eq\t@.BB13_5\n\tret\n.BB13_5:\n\tadd\tr0, r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB13_1:\n\tld.1\t64, r1\n\tadd\t100, r1, r2\n\tadd\t@CPI13_11[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t68, r1, r2\n\tadd\t@CPI13_12[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t36, r1, r2\n\tadd\t37, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI13_7[0], r0, r2\n\tst.1\tr1, r2\n\tadd\t4, r1, r2\n\tadd\t32, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI13_1[0], r0, r2\n\tsub.s!\t@CPI13_1[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI13_8[0], r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB13_3:\n\tld.1\t64, r1\n\tadd\t100, r1, r2\n\tadd\t@CPI13_9[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t68, r1, r2\n\tadd\t@CPI13_10[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t36, r1, r2\n\tadd\t35, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI13_7[0], r0, r2\n\tst.1\tr1, r2\n\tadd\t4, r1, r2\n\tadd\t32, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI13_1[0], r0, r2\n\tsub.s!\t@CPI13_1[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI13_8[0], r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB13_7:\n\tld.1\t64, r1\n\tadd\t100, r1, r2\n\tadd\t@CPI13_5[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t68, r1, r2\n\tadd\t@CPI13_6[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t36, r1, r2\n\tadd\t38, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI13_7[0], r0, r2\n\tst.1\tr1, r2\n\tadd\t4, r1, r2\n\tadd\t32, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI13_1[0], r0, r2\n\tsub.s!\t@CPI13_1[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI13_8[0], r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.func_end13:\n\nfun_approve:\n.func_begin14:\n\tnop\tstack+=[4]\n\tcontext.caller\tr3\n\tand!\t@CPI14_0[0], r3, r4\n\tjump.eq\t@.BB14_1\n\tadd\tr2, r0, stack-[1]\n\tadd\tr3, r0, stack-[2]\n\tadd\tr1, r0, stack-[3]\n\tand!\t@CPI14_0[0], r1, r1\n\tadd\tr1, r0, stack-[4]\n\tjump.eq\t@.BB14_3\n\tst.1\t0, r4\n\tadd\t1, r0, r1\n\tst.1\t32, r1\n\tadd\t@CPI14_1[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI14_1[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI14_2[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB14_5\n\tld\tr1, r1\n\tadd\tstack-[4], r0, r2\n\tst.1\t0, r2\n\tst.1\t32, r1\n\tadd\t@CPI14_1[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI14_1[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI14_2[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB14_5\n\tld\tr1, r1\n\tadd\tstack-[1], r0, r2\n\tsstore\tr1, r2\n\tld.1\t64, r1\n\tst.1\tr1, r2\n\tadd\t@CPI14_1[0], r0, r2\n\tcontext.gas_left\tr3\n\tsub.s!\t@CPI14_1[0], r3, r4\n\tadd.ge\tr2, r0, r3\n\tsub.s!\t@CPI14_1[0], r1, r4\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tshl.s\t192, r3, r2\n\tor\tr2, r1, r1\n\tor\t@CPI14_3[0], r1, r1\n\tadd\t32781, r0, r2\n\tadd\t3, r0, r3\n\tadd\t@CPI14_4[0], r0, r4\n\tadd\tstack-[2], r0, r5\n\tadd\tstack-[3], r0, r6\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r1\n\tjump.eq\t@.BB14_5\n\tret\n.BB14_5:\n\tadd\tr0, r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB14_1:\n\tld.1\t64, r1\n\tadd\t100, r1, r2\n\tadd\t@CPI14_9[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t68, r1, r2\n\tadd\t@CPI14_10[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t36, r1, r2\n\tadd\t36, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI14_7[0], r0, r2\n\tst.1\tr1, r2\n\tadd\t4, r1, r2\n\tadd\t32, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI14_1[0], r0, r2\n\tsub.s!\t@CPI14_1[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI14_8[0], r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB14_3:\n\tld.1\t64, r1\n\tadd\t100, r1, r2\n\tadd\t@CPI14_5[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t68, r1, r2\n\tadd\t@CPI14_6[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t36, r1, r2\n\tadd\t34, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI14_7[0], r0, r2\n\tst.1\tr1, r2\n\tadd\t4, r1, r2\n\tadd\t32, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI14_1[0], r0, r2\n\tsub.s!\t@CPI14_1[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI14_8[0], r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.func_end14:\n\nfun_transferFrom:\n.func_begin15:\n\tnop\tstack+=[8]\n\tadd\tr3, r0, stack-[8]\n\tadd\tr2, r0, stack-[6]\n\tadd\tr1, r0, stack-[5]\n\tand\t@CPI15_0[0], r1, r1\n\tadd\tr1, r0, stack-[7]\n\tst.1\t0, r1\n\tadd\t1, r0, r1\n\tadd\tr1, r0, stack-[3]\n\tst.1\t32, r1\n\tadd\t@CPI15_1[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI15_1[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI15_2[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB15_1\n\tcontext.caller\tr2\n\tld\tr1, r1\n\tadd\tr2, r0, stack-[2]\n\tand\t@CPI15_0[0], r2, r2\n\tadd\tr2, r0, stack-[4]\n\tst.1\t0, r2\n\tst.1\t32, r1\n\tadd\t@CPI15_1[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI15_1[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI15_2[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB15_1\n\tld\tr1, r1\n\tsload\tr1, r2\n\tsub.s\t1, r0, r1\n\tsub!\tr2, r1, r1\n\tjump.eq\t@.BB15_5\n\tadd\tstack-[8], r0, r1\n\tsub!\tr2, r1, r1\n\tjump.lt\t@.BB15_16\n\tadd\tstack-[7], r0, r1\n\tsub!\tr1, r0, r1\n\tjump.eq\t@.BB15_18\n\tadd\tr2, r0, stack-[1]\n\tadd\tstack-[4], r0, r1\n\tsub!\tr1, r0, r1\n\tjump.eq\t@.BB15_20\n\tadd\tstack-[7], r0, r1\n\tst.1\t0, r1\n\tadd\tstack-[3], r0, r1\n\tst.1\t32, r1\n\tadd\t@CPI15_1[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI15_1[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI15_2[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB15_1\n\tld\tr1, r1\n\tadd\tstack-[4], r0, r2\n\tst.1\t0, r2\n\tst.1\t32, r1\n\tadd\t@CPI15_1[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI15_1[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI15_2[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB15_1\n\tadd\tstack-[8], r0, r2\n\tadd\tstack-[1], r0, r3\n\tsub\tr3, r2, r2\n\tld\tr1, r1\n\tsstore\tr1, r2\n\tld.1\t64, r1\n\tst.1\tr1, r2\n\tadd\t@CPI15_1[0], r0, r2\n\tcontext.gas_left\tr3\n\tsub.s!\t@CPI15_1[0], r3, r4\n\tadd.ge\tr2, r0, r3\n\tsub.s!\t@CPI15_1[0], r1, r4\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tshl.s\t192, r3, r2\n\tor\tr2, r1, r1\n\tor\t@CPI15_3[0], r1, r1\n\tadd\t32781, r0, r2\n\tadd\t3, r0, r3\n\tadd\t@CPI15_4[0], r0, r4\n\tadd\tstack-[5], r0, r5\n\tadd\tstack-[2], r0, r6\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r1\n\tjump.ne\t@.BB15_7\n\tjump\t@.BB15_1\n.BB15_5:\n\tadd\tstack-[7], r0, r1\n\tsub!\tr1, r0, r1\n\tjump.eq\t@.BB15_6\n.BB15_7:\n\tadd\tstack-[6], r0, r1\n\tand!\t@CPI15_0[0], r1, r1\n\tadd\tr1, r0, stack-[4]\n\tjump.eq\t@.BB15_8\n\tadd\tstack-[7], r0, r1\n\tst.1\t0, r1\n\tst.1\t32, r0\n\tadd\t@CPI15_1[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI15_1[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI15_2[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB15_1\n\tld\tr1, r1\n\tsload\tr1, r2\n\tadd\tstack-[8], r0, r1\n\tadd\tr2, r0, stack-[3]\n\tsub!\tr2, r1, r1\n\tjump.lt\t@.BB15_11\n\tadd\tstack-[7], r0, r1\n\tst.1\t0, r1\n\tst.1\t32, r0\n\tadd\t@CPI15_1[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI15_1[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI15_2[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB15_1\n\tadd\tstack-[8], r0, r2\n\tadd\tstack-[3], r0, r3\n\tsub\tr3, r2, r2\n\tld\tr1, r1\n\tsstore\tr1, r2\n\tadd\tstack-[4], r0, r1\n\tst.1\t0, r1\n\tst.1\t32, r0\n\tadd\t@CPI15_1[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI15_1[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI15_2[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB15_1\n\tld\tr1, r1\n\tsload\tr1, r2\n\tadd\tstack-[8], r0, r3\n\tadd\tr2, r3, r2\n\tsstore\tr1, r2\n\tld.1\t64, r1\n\tst.1\tr1, r3\n\tadd\t@CPI15_1[0], r0, r2\n\tcontext.gas_left\tr3\n\tsub.s!\t@CPI15_1[0], r3, r4\n\tadd.ge\tr2, r0, r3\n\tsub.s!\t@CPI15_1[0], r1, r4\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tshl.s\t192, r3, r2\n\tor\tr2, r1, r1\n\tor\t@CPI15_3[0], r1, r1\n\tadd\t32781, r0, r2\n\tadd\t3, r0, r3\n\tadd\t@CPI15_13[0], r0, r4\n\tadd\tstack-[5], r0, r5\n\tadd\tstack-[6], r0, r6\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r1\n\tjump.eq\t@.BB15_1\n\tret\n.BB15_1:\n\tadd\tr0, r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB15_8:\n\tld.1\t64, r1\n\tadd\t100, r1, r2\n\tadd\t@CPI15_16[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t68, r1, r2\n\tadd\t@CPI15_17[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t36, r1, r2\n\tadd\t35, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI15_7[0], r0, r2\n\tst.1\tr1, r2\n\tadd\t4, r1, r2\n\tadd\t32, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI15_1[0], r0, r2\n\tsub.s!\t@CPI15_1[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI15_8[0], r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB15_11:\n\tld.1\t64, r1\n\tadd\t100, r1, r2\n\tadd\t@CPI15_14[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t68, r1, r2\n\tadd\t@CPI15_15[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t36, r1, r2\n\tadd\t38, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI15_7[0], r0, r2\n\tst.1\tr1, r2\n\tadd\t4, r1, r2\n\tadd\t32, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI15_1[0], r0, r2\n\tsub.s!\t@CPI15_1[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI15_8[0], r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB15_16:\n\tld.1\t64, r1\n\tadd\t68, r1, r2\n\tadd\t@CPI15_11[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t36, r1, r2\n\tadd\t29, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI15_7[0], r0, r2\n\tst.1\tr1, r2\n\tadd\t4, r1, r2\n\tadd\t32, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI15_1[0], r0, r2\n\tsub.s!\t@CPI15_1[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI15_12[0], r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB15_18:\n\tld.1\t64, r1\n\tadd\t100, r1, r2\n\tadd\t@CPI15_9[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t68, r1, r2\n\tadd\t@CPI15_10[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t36, r1, r2\n\tadd\t36, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI15_7[0], r0, r2\n\tst.1\tr1, r2\n\tadd\t4, r1, r2\n\tadd\t32, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI15_1[0], r0, r2\n\tsub.s!\t@CPI15_1[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI15_8[0], r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB15_20:\n\tld.1\t64, r1\n\tadd\t100, r1, r2\n\tadd\t@CPI15_5[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t68, r1, r2\n\tadd\t@CPI15_6[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t36, r1, r2\n\tadd\t34, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI15_7[0], r0, r2\n\tst.1\tr1, r2\n\tadd\t4, r1, r2\n\tadd\t32, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI15_1[0], r0, r2\n\tsub.s!\t@CPI15_1[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI15_8[0], r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB15_6:\n\tld.1\t64, r1\n\tadd\t100, r1, r2\n\tadd\t@CPI15_18[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t68, r1, r2\n\tadd\t@CPI15_19[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t36, r1, r2\n\tadd\t37, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI15_7[0], r0, r2\n\tst.1\tr1, r2\n\tadd\t4, r1, r2\n\tadd\t32, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI15_1[0], r0, r2\n\tsub.s!\t@CPI15_1[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI15_8[0], r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.func_end15:\n\nfun_increaseAllowance:\n.func_begin16:\n\tnop\tstack+=[6]\n\tadd\tr2, r0, stack-[5]\n\tadd\tr1, r0, stack-[6]\n\tcontext.caller\tr1\n\tadd\tr1, r0, stack-[4]\n\tst.1\t0, r1\n\tadd\t1, r0, r1\n\tadd\tr1, r0, stack-[2]\n\tst.1\t32, r1\n\tadd\t@CPI16_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI16_0[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI16_1[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB16_1\n\tld\tr1, r1\n\tadd\tstack-[6], r0, r2\n\tand\t@CPI16_2[0], r2, r2\n\tadd\tr2, r0, stack-[3]\n\tst.1\t0, r2\n\tst.1\t32, r1\n\tadd\t@CPI16_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI16_0[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI16_1[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB16_1\n\tsub.s\t1, r0, r2\n\tadd\tstack-[5], r0, r3\n\txor\tr3, r2, r2\n\tld\tr1, r1\n\tsload\tr1, r3\n\tsub!\tr3, r2, r1\n\tjump.gt\t@.BB16_4\n\tadd\tstack-[4], r0, r1\n\tand!\t@CPI16_2[0], r1, r1\n\tjump.eq\t@.BB16_6\n\tadd\tr3, r0, stack-[1]\n\tadd\tstack-[3], r0, r2\n\tsub!\tr2, r0, r2\n\tjump.eq\t@.BB16_8\n\tst.1\t0, r1\n\tadd\tstack-[2], r0, r1\n\tst.1\t32, r1\n\tadd\t@CPI16_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI16_0[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI16_1[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB16_1\n\tld\tr1, r1\n\tadd\tstack-[3], r0, r2\n\tst.1\t0, r2\n\tst.1\t32, r1\n\tadd\t@CPI16_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI16_0[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI16_1[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB16_1\n\tadd\tstack-[5], r0, r2\n\tadd\tstack-[1], r0, r3\n\tadd\tr3, r2, r2\n\tld\tr1, r1\n\tsstore\tr1, r2\n\tld.1\t64, r1\n\tst.1\tr1, r2\n\tadd\t@CPI16_0[0], r0, r2\n\tcontext.gas_left\tr3\n\tsub.s!\t@CPI16_0[0], r3, r4\n\tadd.ge\tr2, r0, r3\n\tsub.s!\t@CPI16_0[0], r1, r4\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tshl.s\t192, r3, r2\n\tor\tr2, r1, r1\n\tor\t@CPI16_3[0], r1, r1\n\tadd\t32781, r0, r2\n\tadd\t3, r0, r3\n\tadd\t@CPI16_4[0], r0, r4\n\tadd\tstack-[4], r0, r5\n\tadd\tstack-[6], r0, r6\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r1\n\tjump.eq\t@.BB16_1\n\tret\n.BB16_1:\n\tadd\tr0, r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB16_4:\n\tadd\t@CPI16_11[0], r0, r1\n\tst.1\t0, r1\n\tadd\t17, r0, r1\n\tst.1\t4, r1\n\tadd\t@CPI16_12[0], r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB16_6:\n\tld.1\t64, r1\n\tadd\t100, r1, r2\n\tadd\t@CPI16_9[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t68, r1, r2\n\tadd\t@CPI16_10[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t36, r1, r2\n\tadd\t36, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI16_7[0], r0, r2\n\tst.1\tr1, r2\n\tadd\t4, r1, r2\n\tadd\t32, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI16_0[0], r0, r2\n\tsub.s!\t@CPI16_0[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI16_8[0], r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB16_8:\n\tld.1\t64, r1\n\tadd\t100, r1, r2\n\tadd\t@CPI16_5[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t68, r1, r2\n\tadd\t@CPI16_6[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t36, r1, r2\n\tadd\t34, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI16_7[0], r0, r2\n\tst.1\tr1, r2\n\tadd\t4, r1, r2\n\tadd\t32, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI16_0[0], r0, r2\n\tsub.s!\t@CPI16_0[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI16_8[0], r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.func_end16:\n\nfun_decreaseAllowance:\n.func_begin17:\n\tnop\tstack+=[6]\n\tadd\tr2, r0, stack-[5]\n\tadd\tr1, r0, stack-[6]\n\tcontext.caller\tr1\n\tadd\tr1, r0, stack-[4]\n\tst.1\t0, r1\n\tadd\t1, r0, r1\n\tadd\tr1, r0, stack-[2]\n\tst.1\t32, r1\n\tadd\t@CPI17_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI17_0[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI17_1[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB17_1\n\tld\tr1, r1\n\tadd\tstack-[6], r0, r2\n\tand\t@CPI17_2[0], r2, r2\n\tadd\tr2, r0, stack-[3]\n\tst.1\t0, r2\n\tst.1\t32, r1\n\tadd\t@CPI17_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI17_0[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI17_1[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB17_1\n\tld\tr1, r1\n\tsload\tr1, r2\n\tadd\tstack-[5], r0, r1\n\tsub!\tr2, r1, r1\n\tjump.lt\t@.BB17_4\n\tadd\tstack-[4], r0, r1\n\tand!\t@CPI17_2[0], r1, r1\n\tjump.eq\t@.BB17_6\n\tadd\tr2, r0, stack-[1]\n\tadd\tstack-[3], r0, r2\n\tsub!\tr2, r0, r2\n\tjump.eq\t@.BB17_8\n\tst.1\t0, r1\n\tadd\tstack-[2], r0, r1\n\tst.1\t32, r1\n\tadd\t@CPI17_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI17_0[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI17_1[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB17_1\n\tld\tr1, r1\n\tadd\tstack-[3], r0, r2\n\tst.1\t0, r2\n\tst.1\t32, r1\n\tadd\t@CPI17_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI17_0[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI17_1[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB17_1\n\tadd\tstack-[5], r0, r2\n\tadd\tstack-[1], r0, r3\n\tsub\tr3, r2, r2\n\tld\tr1, r1\n\tsstore\tr1, r2\n\tld.1\t64, r1\n\tst.1\tr1, r2\n\tadd\t@CPI17_0[0], r0, r2\n\tcontext.gas_left\tr3\n\tsub.s!\t@CPI17_0[0], r3, r4\n\tadd.ge\tr2, r0, r3\n\tsub.s!\t@CPI17_0[0], r1, r4\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tshl.s\t192, r3, r2\n\tor\tr2, r1, r1\n\tor\t@CPI17_3[0], r1, r1\n\tadd\t32781, r0, r2\n\tadd\t3, r0, r3\n\tadd\t@CPI17_4[0], r0, r4\n\tadd\tstack-[4], r0, r5\n\tadd\tstack-[6], r0, r6\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r1\n\tjump.eq\t@.BB17_1\n\tret\n.BB17_1:\n\tadd\tr0, r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB17_4:\n\tld.1\t64, r1\n\tadd\t100, r1, r2\n\tadd\t@CPI17_11[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t68, r1, r2\n\tadd\t@CPI17_12[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t36, r1, r2\n\tadd\t37, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI17_7[0], r0, r2\n\tst.1\tr1, r2\n\tadd\t4, r1, r2\n\tadd\t32, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI17_0[0], r0, r2\n\tsub.s!\t@CPI17_0[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI17_8[0], r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB17_6:\n\tld.1\t64, r1\n\tadd\t100, r1, r2\n\tadd\t@CPI17_9[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t68, r1, r2\n\tadd\t@CPI17_10[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t36, r1, r2\n\tadd\t36, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI17_7[0], r0, r2\n\tst.1\tr1, r2\n\tadd\t4, r1, r2\n\tadd\t32, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI17_0[0], r0, r2\n\tsub.s!\t@CPI17_0[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI17_8[0], r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB17_8:\n\tld.1\t64, r1\n\tadd\t100, r1, r2\n\tadd\t@CPI17_5[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t68, r1, r2\n\tadd\t@CPI17_6[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t36, r1, r2\n\tadd\t34, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI17_7[0], r0, r2\n\tst.1\tr1, r2\n\tadd\t4, r1, r2\n\tadd\t32, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI17_0[0], r0, r2\n\tsub.s!\t@CPI17_0[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI17_8[0], r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.func_end17:\n\n__farcall:\n.func_begin18:\n.tmp0:\n\tfar_call\tr1, r2, @.BB18_2\n.tmp1:\n\tadd\t1, r0, r2\n\tret\n.BB18_2:\n.tmp2:\n\tadd\tr0, r0, r2\n\tret\n.func_end18:\n\n__staticcall:\n.func_begin19:\n.tmp3:\n\tfar_call.static\tr1, r2, @.BB19_2\n.tmp4:\n\tadd\t1, r0, r2\n\tret\n.BB19_2:\n.tmp5:\n\tadd\tr0, r0, r2\n\tret\n.func_end19:\n\n\t.data\n\t.p2align\t5\ncalldatasize:\n\t.cell 0\n\n\t.p2align\t5\nptr_calldata:\n.cell\t0\n\n\t.note.GNU-stack\n\t.rodata\nCPI0_0:\nCPI1_1:\nCPI2_3:\nCPI10_1:\nCPI11_1:\nCPI12_1:\nCPI13_1:\nCPI14_1:\nCPI15_1:\nCPI16_0:\nCPI17_0:\n\t.cell 4294967295\nCPI0_1:\nCPI8_1:\nCPI9_1:\n\t.cell 18446744073709551615\nCPI0_2:\nCPI4_0:\nCPI5_0:\nCPI6_0:\nCPI7_0:\n\t.cell -57896044618658097711785492504343953926634992332820282019728792003956564819968\nCPI0_3:\nCPI1_2:\nCPI2_5:\nCPI13_3:\nCPI14_3:\nCPI15_3:\nCPI16_3:\nCPI17_3:\n\t.cell 904625697166532776746648320380374280103671757735618107014721178055227736064\nCPI0_4:\n\t.cell 53919893334301279589334030174039261352344891250716429051063678533632\nCPI0_5:\nCPI1_3:\nCPI2_7:\nCPI8_2:\nCPI9_2:\nCPI16_11:\n\t.cell 35408467139433450592217433187231851964531694900788300625387963629091585785856\nCPI0_6:\nCPI1_4:\nCPI2_8:\nCPI8_3:\nCPI9_3:\nCPI16_12:\n\t.cell 2852213850513516153367582212096\nCPI0_7:\n\t.cell 961581904\nCPI0_8:\n\t.cell 2757214934\nCPI0_9:\n\t.cell 2757214935\nCPI0_10:\n\t.cell 2835717307\nCPI0_11:\n\t.cell 3714247998\nCPI0_12:\n\t.cell 961581905\nCPI0_13:\n\t.cell 1889567281\nCPI0_14:\n\t.cell 2514000705\nCPI0_15:\n\t.cell 404098524\nCPI0_16:\n\t.cell 404098525\nCPI0_17:\n\t.cell 599290589\nCPI0_18:\n\t.cell 826074471\nCPI0_19:\n\t.cell 117300739\nCPI0_20:\n\t.cell 157198259\nCPI0_21:\n\t.cell 2535301200456458802993406410752\nCPI1_0:\n\t.cell 18446744073709551616\nCPI2_0:\nCPI4_1:\nCPI5_1:\nCPI6_1:\nCPI7_1:\nCPI10_0:\nCPI11_0:\nCPI12_0:\nCPI13_0:\nCPI14_0:\nCPI15_0:\nCPI16_2:\nCPI17_2:\n\t.cell 1461501637330902918203684832716283019655932542975\nCPI2_1:\n\t.cell -1000000000000000000000000000\nCPI2_2:\n\t.cell 1000000000000000000000000000\nCPI2_4:\nCPI10_2:\nCPI11_2:\nCPI12_2:\nCPI13_2:\nCPI14_2:\nCPI15_2:\nCPI16_1:\nCPI17_1:\n\t.cell 904625697166532776746648320380374280103671760270919307471179981048634146816\nCPI2_6:\nCPI13_4:\nCPI15_13:\n\t.cell -15402802100530019096323380498944738953123845089667699673314898783681816316945\nCPI2_9:\n\t.cell 31354931781638678563069525067809233856775101976563302031013534919694566519552\nCPI2_10:\nCPI13_7:\nCPI14_7:\nCPI15_7:\nCPI16_7:\nCPI17_7:\n\t.cell 3963877391197344453575983046348115674221700746820753546331534351508065746944\nCPI2_11:\nCPI15_12:\n\t.cell 7922816251426433759354395033600\nCPI8_0:\n\t.cell -27889059366240281169193357100633332908378892778709981755071813198463099602853\nCPI9_0:\n\t.cell -53278079350709166316280423202849322519190186591071851114874353210178472783461\nCPI13_5:\nCPI15_14:\n\t.cell 44065838241030143116324720188876985940908656145555552347773292252211112312832\nCPI13_6:\nCPI15_15:\n\t.cell 31354931781638678607228669297131712859100820671745083778533502622993977909346\nCPI13_8:\nCPI14_8:\nCPI15_8:\nCPI16_8:\nCPI17_8:\n\t.cell 10458117451882892562347801444352\nCPI13_9:\nCPI15_16:\n\t.cell 45887578820189300338443374388718498632482616163288499555830078344056365121536\nCPI13_10:\nCPI15_17:\n\t.cell 31354931781638678607228669297131712859126084785867252355217498662940140921970\nCPI13_11:\nCPI15_18:\n\t.cell 45433405612597180762055095701412804886438245671210399661410036396145969725440\nCPI13_12:\nCPI15_19:\n\t.cell 31354931781638678607228669297131712859107492772550336241160036866987736981860\nCPI14_4:\nCPI15_4:\nCPI16_4:\nCPI17_4:\n\t.cell -52305948261162578668367882225327028569797882979485679342215860919519743330011\nCPI14_5:\nCPI15_5:\nCPI16_5:\nCPI17_5:\n\t.cell 52219164999525148860834357634456956735281286572158918307284071279203377479680\nCPI14_6:\nCPI15_6:\nCPI16_6:\nCPI17_6:\n\t.cell 31354931781638678487916134672869638488806705378895508030211234510262059168357\nCPI14_9:\nCPI15_9:\nCPI16_9:\nCPI17_9:\n\t.cell 51742913093258732729005998692887265601192425265805909375210916622055285719040\nCPI14_10:\nCPI15_10:\nCPI16_10:\nCPI17_10:\n\t.cell 31354931781638678487916134672869638484047149969764982831501014746446650500196\nCPI15_11:\n\t.cell 31354931781638678538084197150757782427756587561754988975511141185730285404160\nCPI17_11:\n\t.cell 14690266658072097593480850647027335513285713462661904985951319567533531463680\nCPI17_12:\n\t.cell 31354931781638678506476475496475743842680577777870365728514456330491174612855\n","bytecode":{"object":""},"methodIdentifiers":{"allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","decimals()":"313ce567","decreaseAllowance(address,uint256)":"a457c2d7","increaseAllowance(address,uint256)":"39509351","name()":"06fdde03","symbol()":"95d89b41","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd"}},"irOptimized":"/*=====================================================*\n *                       WARNING                       *\n *  Solidity to Yul compilation is still EXPERIMENTAL  *\n *       It can result in LOSS OF FUNDS or worse       *\n *                !USE AT YOUR OWN RISK!               *\n *=====================================================*/\n\n/// @use-src 3:\"@openzeppelin/contracts/token/ERC20/ERC20.sol\", 4:\"@openzeppelin/contracts/token/ERC20/IERC20.sol\", 5:\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\", 9:\"@openzeppelin/contracts/utils/Context.sol\", 16:\"contracts/ERC20Token.sol\"\nobject \"ERC20Token_3531\" {\n    code {\n        {\n            /// @src 16:115:346  \"contract ERC20Token is ERC20 {...\"\n            mstore(64, 128)\n            if callvalue() { revert(0, 0) }\n            let programSize := datasize(\"ERC20Token_3531\")\n            let argSize := sub(codesize(), programSize)\n            let memoryDataOffset := allocate_memory(argSize)\n            codecopy(memoryDataOffset, programSize, argSize)\n            let _1 := add(memoryDataOffset, argSize)\n            if slt(sub(_1, memoryDataOffset), 64)\n            {\n                revert(/** @src -1:-1:-1 */ 0, 0)\n            }\n            /// @src 16:115:346  \"contract ERC20Token is ERC20 {...\"\n            let offset := mload(memoryDataOffset)\n            let _2 := sub(shl(64, 1), 1)\n            if gt(offset, _2)\n            {\n                revert(/** @src -1:-1:-1 */ 0, 0)\n            }\n            /// @src 16:115:346  \"contract ERC20Token is ERC20 {...\"\n            let value0 := abi_decode_string_fromMemory(add(memoryDataOffset, offset), _1)\n            let _3 := 32\n            let offset_1 := mload(add(memoryDataOffset, _3))\n            if gt(offset_1, _2)\n            {\n                revert(/** @src -1:-1:-1 */ 0, 0)\n            }\n            /// @src 16:115:346  \"contract ERC20Token is ERC20 {...\"\n            let _4 := abi_decode_string_fromMemory(add(memoryDataOffset, offset_1), _1)\n            let newLen := mload(value0)\n            if gt(newLen, _2) { panic_error_0x41() }\n            clean_up_bytearray_end_slots_string_storage_1446(extract_byte_array_length(sload(/** @src 3:2046:2059  \"_name = name_\" */ 0x03)), /** @src 16:115:346  \"contract ERC20Token is ERC20 {...\" */ newLen)\n            let srcOffset := 0\n            srcOffset := _3\n            switch gt(newLen, 31)\n            case 1 {\n                let loopEnd := and(newLen, not(31))\n                let dstPtr := array_dataslot_string_storage_1447()\n                let i := 0\n                for { } lt(i, loopEnd) { i := add(i, _3) }\n                {\n                    sstore(dstPtr, mload(add(value0, srcOffset)))\n                    dstPtr := add(dstPtr, 1)\n                    srcOffset := add(srcOffset, _3)\n                }\n                if lt(loopEnd, newLen)\n                {\n                    let lastValue := mload(add(value0, srcOffset))\n                    sstore(dstPtr, and(lastValue, not(shr(and(shl(/** @src 3:2046:2059  \"_name = name_\" */ 0x03, /** @src 16:115:346  \"contract ERC20Token is ERC20 {...\" */ newLen), 248), not(0)))))\n                }\n                sstore(/** @src 3:2046:2059  \"_name = name_\" */ 0x03, /** @src 16:115:346  \"contract ERC20Token is ERC20 {...\" */ add(shl(1, newLen), 1))\n            }\n            default {\n                let value := 0\n                if newLen\n                {\n                    value := mload(add(value0, srcOffset))\n                }\n                sstore(/** @src 3:2046:2059  \"_name = name_\" */ 0x03, /** @src 16:115:346  \"contract ERC20Token is ERC20 {...\" */ extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n            }\n            copy_byte_array_to_storage_from_string_to_string(_4)\n            /// @src 16:294:337  \"_mint(msg.sender, 1_000_000_000 * 10 ** 18)\"\n            fun_mint(/** @src 16:300:310  \"msg.sender\" */ caller())\n            /// @src 16:115:346  \"contract ERC20Token is ERC20 {...\"\n            let _5 := mload(64)\n            let _6 := datasize(\"ERC20Token_3531_deployed\")\n            codecopy(_5, dataoffset(\"ERC20Token_3531_deployed\"), _6)\n            return(_5, _6)\n        }\n        function panic_error_0x41()\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x41)\n            revert(0, 0x24)\n        }\n        function allocate_memory(size) -> memPtr\n        {\n            memPtr := mload(64)\n            let newFreePtr := add(memPtr, and(add(size, 31), not(31)))\n            if or(gt(newFreePtr, sub(shl(64, 1), 1)), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n            mstore(64, newFreePtr)\n        }\n        function abi_decode_string_fromMemory(offset, end) -> array\n        {\n            if iszero(slt(add(offset, 0x1f), end)) { revert(0, 0) }\n            let _1 := mload(offset)\n            if gt(_1, sub(shl(64, 1), 1)) { panic_error_0x41() }\n            let _2 := 0x20\n            let array_1 := allocate_memory(add(and(add(_1, 0x1f), not(31)), _2))\n            mstore(array_1, _1)\n            if gt(add(add(offset, _1), _2), end)\n            {\n                revert(/** @src -1:-1:-1 */ 0, 0)\n            }\n            /// @src 16:115:346  \"contract ERC20Token is ERC20 {...\"\n            let i := /** @src -1:-1:-1 */ 0\n            /// @src 16:115:346  \"contract ERC20Token is ERC20 {...\"\n            for { } lt(i, _1) { i := add(i, _2) }\n            {\n                mstore(add(add(array_1, i), _2), mload(add(add(offset, i), _2)))\n            }\n            if gt(i, _1)\n            {\n                mstore(add(add(array_1, _1), _2), /** @src -1:-1:-1 */ 0)\n            }\n            /// @src 16:115:346  \"contract ERC20Token is ERC20 {...\"\n            array := array_1\n        }\n        function extract_byte_array_length(data) -> length\n        {\n            length := shr(1, data)\n            let outOfPlaceEncoding := and(data, 1)\n            if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n            if eq(outOfPlaceEncoding, lt(length, 32))\n            {\n                mstore(0, shl(224, 0x4e487b71))\n                mstore(4, 0x22)\n                revert(0, 0x24)\n            }\n        }\n        function array_dataslot_string_storage_1447() -> data\n        {\n            mstore(0, /** @src 3:2046:2059  \"_name = name_\" */ 0x03)\n            /// @src 16:115:346  \"contract ERC20Token is ERC20 {...\"\n            data := keccak256(0, 0x20)\n        }\n        function array_dataslot_string_storage() -> data\n        {\n            mstore(0, /** @src 3:2069:2086  \"_symbol = symbol_\" */ 0x04)\n            /// @src 16:115:346  \"contract ERC20Token is ERC20 {...\"\n            data := keccak256(0, 0x20)\n        }\n        function clean_up_bytearray_end_slots_string_storage_1446(len, startIndex)\n        {\n            if gt(len, 31)\n            {\n                /// @src -1:-1:-1\n                let _1 := 0\n                /// @src 16:115:346  \"contract ERC20Token is ERC20 {...\"\n                mstore(/** @src -1:-1:-1 */ _1, /** @src 3:2046:2059  \"_name = name_\" */ 0x03)\n                /// @src 16:115:346  \"contract ERC20Token is ERC20 {...\"\n                let data := keccak256(/** @src -1:-1:-1 */ _1, /** @src 16:115:346  \"contract ERC20Token is ERC20 {...\" */ 0x20)\n                let deleteStart := add(data, shr(5, add(startIndex, 31)))\n                if lt(startIndex, 0x20) { deleteStart := data }\n                let _2 := add(data, shr(5, add(len, 31)))\n                let start := deleteStart\n                for { } lt(start, _2) { start := add(start, 1) }\n                {\n                    sstore(start, /** @src -1:-1:-1 */ _1)\n                }\n            }\n        }\n        /// @src 16:115:346  \"contract ERC20Token is ERC20 {...\"\n        function clean_up_bytearray_end_slots_string_storage(len, startIndex)\n        {\n            if gt(len, 31)\n            {\n                /// @src -1:-1:-1\n                let _1 := 0\n                /// @src 16:115:346  \"contract ERC20Token is ERC20 {...\"\n                mstore(/** @src -1:-1:-1 */ _1, /** @src 3:2069:2086  \"_symbol = symbol_\" */ 0x04)\n                /// @src 16:115:346  \"contract ERC20Token is ERC20 {...\"\n                let data := keccak256(/** @src -1:-1:-1 */ _1, /** @src 16:115:346  \"contract ERC20Token is ERC20 {...\" */ 0x20)\n                let deleteStart := add(data, shr(5, add(startIndex, 31)))\n                if lt(startIndex, 0x20) { deleteStart := data }\n                let _2 := add(data, shr(5, add(len, 31)))\n                let start := deleteStart\n                for { } lt(start, _2) { start := add(start, 1) }\n                {\n                    sstore(start, /** @src -1:-1:-1 */ _1)\n                }\n            }\n        }\n        /// @src 16:115:346  \"contract ERC20Token is ERC20 {...\"\n        function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used\n        {\n            used := or(and(data, not(shr(shl(3, len), not(0)))), shl(1, len))\n        }\n        function copy_byte_array_to_storage_from_string_to_string(src)\n        {\n            let newLen := mload(src)\n            if gt(newLen, sub(shl(64, 1), 1)) { panic_error_0x41() }\n            clean_up_bytearray_end_slots_string_storage(extract_byte_array_length(sload(/** @src 3:2069:2086  \"_symbol = symbol_\" */ 0x04)), /** @src 16:115:346  \"contract ERC20Token is ERC20 {...\" */ newLen)\n            let srcOffset := 0\n            let srcOffset_1 := 0x20\n            srcOffset := srcOffset_1\n            switch gt(newLen, 31)\n            case 1 {\n                let loopEnd := and(newLen, not(31))\n                let dstPtr := array_dataslot_string_storage()\n                let i := 0\n                for { } lt(i, loopEnd) { i := add(i, srcOffset_1) }\n                {\n                    sstore(dstPtr, mload(add(src, srcOffset)))\n                    dstPtr := add(dstPtr, 1)\n                    srcOffset := add(srcOffset, srcOffset_1)\n                }\n                if lt(loopEnd, newLen)\n                {\n                    let lastValue := mload(add(src, srcOffset))\n                    sstore(dstPtr, and(lastValue, not(shr(and(shl(3, newLen), 248), not(0)))))\n                }\n                sstore(/** @src 3:2069:2086  \"_symbol = symbol_\" */ 0x04, /** @src 16:115:346  \"contract ERC20Token is ERC20 {...\" */ add(shl(1, newLen), 1))\n            }\n            default {\n                let value := 0\n                if newLen\n                {\n                    value := mload(add(src, srcOffset))\n                }\n                sstore(/** @src 3:2069:2086  \"_symbol = symbol_\" */ 0x04, /** @src 16:115:346  \"contract ERC20Token is ERC20 {...\" */ extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n            }\n        }\n        function update_storage_value_offsett_uint256_to_uint256(value)\n        {\n            sstore(/** @src 3:8731:8753  \"_totalSupply += amount\" */ 0x02, /** @src 16:115:346  \"contract ERC20Token is ERC20 {...\" */ value)\n        }\n        function mapping_index_access_mapping_address_uint256_of_address(key) -> dataSlot\n        {\n            mstore(/** @src 3:8622:8623  \"0\" */ 0x00, /** @src 16:115:346  \"contract ERC20Token is ERC20 {...\" */ and(key, sub(shl(160, 1), 1)))\n            mstore(0x20, /** @src 3:8622:8623  \"0\" */ 0x00)\n            /// @src 16:115:346  \"contract ERC20Token is ERC20 {...\"\n            dataSlot := keccak256(/** @src 3:8622:8623  \"0\" */ 0x00, /** @src 16:115:346  \"contract ERC20Token is ERC20 {...\" */ 0x40)\n        }\n        function abi_encode_uint256(headStart) -> tail\n        {\n            tail := add(headStart, 32)\n            mstore(headStart, /** @src 16:312:336  \"1_000_000_000 * 10 ** 18\" */ 0x033b2e3c9fd0803ce8000000)\n        }\n        /// @ast-id 905 @src 3:8520:9055  \"function _mint(address account, uint256 amount) internal virtual {...\"\n        function fun_mint(var_account)\n        {\n            /// @src 16:115:346  \"contract ERC20Token is ERC20 {...\"\n            if /** @src 3:8603:8624  \"account != address(0)\" */ iszero(/** @src 16:115:346  \"contract ERC20Token is ERC20 {...\" */ and(/** @src 3:8603:8624  \"account != address(0)\" */ var_account, /** @src 16:115:346  \"contract ERC20Token is ERC20 {...\" */ sub(shl(160, 1), 1)))\n            {\n                let memPtr := mload(64)\n                mstore(memPtr, shl(229, 4594637))\n                mstore(add(memPtr, 4), 32)\n                mstore(add(memPtr, 36), 31)\n                mstore(add(memPtr, 68), \"ERC20: mint to the zero address\")\n                revert(memPtr, 100)\n            }\n            let _1 := sload(/** @src 3:8731:8753  \"_totalSupply += amount\" */ 0x02)\n            /// @src 16:115:346  \"contract ERC20Token is ERC20 {...\"\n            if gt(_1, not(/** @src 16:312:336  \"1_000_000_000 * 10 ** 18\" */ 0x033b2e3c9fd0803ce8000000))\n            /// @src 16:115:346  \"contract ERC20Token is ERC20 {...\"\n            {\n                mstore(/** @src 3:8622:8623  \"0\" */ 0x00, /** @src 16:115:346  \"contract ERC20Token is ERC20 {...\" */ shl(224, 0x4e487b71))\n                mstore(4, 0x11)\n                revert(/** @src 3:8622:8623  \"0\" */ 0x00, /** @src 16:115:346  \"contract ERC20Token is ERC20 {...\" */ 0x24)\n            }\n            /// @src 16:312:336  \"1_000_000_000 * 10 ** 18\"\n            let _2 := 0x033b2e3c9fd0803ce8000000\n            /// @src 3:8731:8753  \"_totalSupply += amount\"\n            update_storage_value_offsett_uint256_to_uint256(/** @src 16:115:346  \"contract ERC20Token is ERC20 {...\" */ add(_1, /** @src 16:312:336  \"1_000_000_000 * 10 ** 18\" */ _2))\n            /// @src 3:8899:8917  \"_balances[account]\"\n            let _3 := mapping_index_access_mapping_address_uint256_of_address(var_account)\n            /// @src 16:115:346  \"contract ERC20Token is ERC20 {...\"\n            sstore(_3, add(sload(/** @src 3:8899:8927  \"_balances[account] += amount\" */ _3), /** @src 16:312:336  \"1_000_000_000 * 10 ** 18\" */ _2))\n            /// @src 3:8952:8989  \"Transfer(address(0), account, amount)\"\n            let _4 := /** @src 16:115:346  \"contract ERC20Token is ERC20 {...\" */ mload(64)\n            /// @src 3:8952:8989  \"Transfer(address(0), account, amount)\"\n            log3(_4, sub(abi_encode_uint256(_4), _4), 0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef, /** @src 3:8622:8623  \"0\" */ 0x00, /** @src 3:8952:8989  \"Transfer(address(0), account, amount)\" */ var_account)\n        }\n    }\n    /// @use-src 3:\"@openzeppelin/contracts/token/ERC20/ERC20.sol\", 9:\"@openzeppelin/contracts/utils/Context.sol\", 16:\"contracts/ERC20Token.sol\"\n    object \"ERC20Token_3531_deployed\" {\n        code {\n            {\n                /// @src 16:115:346  \"contract ERC20Token is ERC20 {...\"\n                let _1 := 64\n                mstore(_1, 128)\n                if iszero(lt(calldatasize(), 4))\n                {\n                    let _2 := 0\n                    switch shr(224, calldataload(_2))\n                    case 0x06fdde03 {\n                        if callvalue() { revert(_2, _2) }\n                        abi_decode(calldatasize())\n                        let converted := copy_array_from_storage_to_memory_string_2479()\n                        let memPos := mload(_1)\n                        return(memPos, sub(abi_encode_string(memPos, converted), memPos))\n                    }\n                    case 0x095ea7b3 {\n                        if callvalue() { revert(_2, _2) }\n                        let param, param_1 := abi_decode_addresst_uint256(calldatasize())\n                        let ret := fun_approve(param, param_1)\n                        let memPos_1 := mload(_1)\n                        return(memPos_1, sub(abi_encode_bool(memPos_1, ret), memPos_1))\n                    }\n                    case 0x18160ddd {\n                        if callvalue() { revert(_2, _2) }\n                        abi_decode(calldatasize())\n                        let _3 := sload(/** @src 3:3342:3354  \"_totalSupply\" */ 0x02)\n                        /// @src 16:115:346  \"contract ERC20Token is ERC20 {...\"\n                        let memPos_2 := mload(_1)\n                        return(memPos_2, sub(abi_encode_uint256(memPos_2, _3), memPos_2))\n                    }\n                    case 0x23b872dd {\n                        if callvalue() { revert(_2, _2) }\n                        let param_2, param_3, param_4 := abi_decode_addresst_addresst_uint256(calldatasize())\n                        let ret_1 := fun_transferFrom(param_2, param_3, param_4)\n                        let memPos_3 := mload(_1)\n                        return(memPos_3, sub(abi_encode_bool(memPos_3, ret_1), memPos_3))\n                    }\n                    case 0x313ce567 {\n                        if callvalue() { revert(_2, _2) }\n                        abi_decode(calldatasize())\n                        let memPos_4 := mload(_1)\n                        return(memPos_4, sub(abi_encode_uint8(memPos_4), memPos_4))\n                    }\n                    case 0x39509351 {\n                        if callvalue() { revert(_2, _2) }\n                        let param_5, param_6 := abi_decode_addresst_uint256(calldatasize())\n                        let ret_2 := fun_increaseAllowance(param_5, param_6)\n                        let memPos_5 := mload(_1)\n                        return(memPos_5, sub(abi_encode_bool(memPos_5, ret_2), memPos_5))\n                    }\n                    case 0x70a08231 {\n                        if callvalue() { revert(_2, _2) }\n                        let ret_3 := fun_balanceOf(abi_decode_address(calldatasize()))\n                        let memPos_6 := mload(_1)\n                        return(memPos_6, sub(abi_encode_uint256(memPos_6, ret_3), memPos_6))\n                    }\n                    case 0x95d89b41 {\n                        if callvalue() { revert(_2, _2) }\n                        abi_decode(calldatasize())\n                        let converted_1 := copy_array_from_storage_to_memory_string()\n                        let memPos_7 := mload(_1)\n                        return(memPos_7, sub(abi_encode_string(memPos_7, converted_1), memPos_7))\n                    }\n                    case 0xa457c2d7 {\n                        if callvalue() { revert(_2, _2) }\n                        let param_7, param_8 := abi_decode_addresst_uint256(calldatasize())\n                        let ret_4 := fun_decreaseAllowance(param_7, param_8)\n                        let memPos_8 := mload(_1)\n                        return(memPos_8, sub(abi_encode_bool(memPos_8, ret_4), memPos_8))\n                    }\n                    case 0xa9059cbb {\n                        if callvalue() { revert(_2, _2) }\n                        let param_9, param_10 := abi_decode_addresst_uint256(calldatasize())\n                        let ret_5 := fun_transfer(param_9, param_10)\n                        let memPos_9 := mload(_1)\n                        return(memPos_9, sub(abi_encode_bool(memPos_9, ret_5), memPos_9))\n                    }\n                    case 0xdd62ed3e {\n                        if callvalue() { revert(_2, _2) }\n                        let param_11, param_12 := abi_decode_addresst_address(calldatasize())\n                        let _4 := sload(/** @src 3:4102:4129  \"_allowances[owner][spender]\" */ mapping_index_access_mapping_address_uint256_of_address(/** @src 3:4102:4120  \"_allowances[owner]\" */ mapping_index_access_mapping_address_uint256_of_address_2492(/** @src 16:115:346  \"contract ERC20Token is ERC20 {...\" */ param_11), param_12))\n                        let memPos_10 := mload(_1)\n                        return(memPos_10, sub(abi_encode_uint256(memPos_10, _4), memPos_10))\n                    }\n                }\n                revert(0, 0)\n            }\n            function abi_decode(dataEnd)\n            {\n                if slt(add(dataEnd, not(3)), 0) { revert(0, 0) }\n            }\n            function array_storeLengthForEncoding_string(pos, length) -> updated_pos\n            {\n                mstore(pos, length)\n                updated_pos := add(pos, 0x20)\n            }\n            function abi_encode_string(headStart, value0) -> tail\n            {\n                let _1 := 32\n                mstore(headStart, _1)\n                let length := mload(value0)\n                mstore(add(headStart, _1), length)\n                let i := 0\n                for { } lt(i, length) { i := add(i, _1) }\n                {\n                    mstore(add(add(headStart, i), 64), mload(add(add(value0, i), _1)))\n                }\n                if gt(i, length)\n                {\n                    mstore(add(add(headStart, length), 64), 0)\n                }\n                tail := add(add(headStart, and(add(length, 31), not(31))), 64)\n            }\n            function abi_decode_addresst_uint256(dataEnd) -> value0, value1\n            {\n                if slt(add(dataEnd, not(3)), 64) { revert(0, 0) }\n                let value := calldataload(4)\n                if iszero(eq(value, and(value, sub(shl(160, 1), 1))))\n                {\n                    revert(/** @src -1:-1:-1 */ 0, 0)\n                }\n                /// @src 16:115:346  \"contract ERC20Token is ERC20 {...\"\n                value0 := value\n                value1 := calldataload(36)\n            }\n            function abi_encode_bool(headStart, value0) -> tail\n            {\n                tail := add(headStart, 32)\n                mstore(headStart, iszero(iszero(value0)))\n            }\n            function abi_encode_uint256(headStart, value0) -> tail\n            {\n                tail := add(headStart, 32)\n                mstore(headStart, value0)\n            }\n            function abi_decode_addresst_addresst_uint256(dataEnd) -> value0, value1, value2\n            {\n                if slt(add(dataEnd, not(3)), 96) { revert(0, 0) }\n                let value := calldataload(4)\n                let _1 := sub(shl(160, 1), 1)\n                if iszero(eq(value, and(value, _1)))\n                {\n                    revert(/** @src -1:-1:-1 */ 0, 0)\n                }\n                /// @src 16:115:346  \"contract ERC20Token is ERC20 {...\"\n                value0 := value\n                let value_1 := calldataload(36)\n                if iszero(eq(value_1, and(value_1, _1)))\n                {\n                    revert(/** @src -1:-1:-1 */ 0, 0)\n                }\n                /// @src 16:115:346  \"contract ERC20Token is ERC20 {...\"\n                value1 := value_1\n                value2 := calldataload(68)\n            }\n            function abi_encode_uint8(headStart) -> tail\n            {\n                tail := add(headStart, 32)\n                mstore(headStart, /** @src 3:3186:3188  \"18\" */ 0x12)\n            }\n            /// @src 16:115:346  \"contract ERC20Token is ERC20 {...\"\n            function abi_decode_address(dataEnd) -> value0\n            {\n                if slt(add(dataEnd, not(3)), 32) { revert(0, 0) }\n                let value := calldataload(4)\n                if iszero(eq(value, and(value, sub(shl(160, 1), 1))))\n                {\n                    revert(/** @src -1:-1:-1 */ 0, 0)\n                }\n                /// @src 16:115:346  \"contract ERC20Token is ERC20 {...\"\n                value0 := value\n            }\n            function abi_decode_addresst_address(dataEnd) -> value0, value1\n            {\n                if slt(add(dataEnd, not(3)), 64) { revert(0, 0) }\n                let value := calldataload(4)\n                let _1 := sub(shl(160, 1), 1)\n                if iszero(eq(value, and(value, _1)))\n                {\n                    revert(/** @src -1:-1:-1 */ 0, 0)\n                }\n                /// @src 16:115:346  \"contract ERC20Token is ERC20 {...\"\n                value0 := value\n                let value_1 := calldataload(36)\n                if iszero(eq(value_1, and(value_1, _1)))\n                {\n                    revert(/** @src -1:-1:-1 */ 0, 0)\n                }\n                /// @src 16:115:346  \"contract ERC20Token is ERC20 {...\"\n                value1 := value_1\n            }\n            function array_dataslot_string_storage() -> data\n            {\n                mstore(0, /** @src 3:2244:2249  \"_name\" */ 0x03)\n                /// @src 16:115:346  \"contract ERC20Token is ERC20 {...\"\n                data := 87903029871075914254377627908054574944891091886930582284385770809450030037083\n            }\n            function array_dataslot_string_storage_4050() -> data\n            {\n                mstore(0, 4)\n                data := 62514009886607029107290561805838585334079798074568712924583230797734656856475\n            }\n            function finalize_allocation(memPtr, size)\n            {\n                let newFreePtr := add(memPtr, and(add(size, 31), not(31)))\n                if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr))\n                {\n                    mstore(0, shl(224, 0x4e487b71))\n                    mstore(4, 0x41)\n                    revert(0, 0x24)\n                }\n                mstore(64, newFreePtr)\n            }\n            function copy_array_from_storage_to_memory_string_2479() -> memPtr\n            {\n                memPtr := mload(64)\n                let ret := /** @src -1:-1:-1 */ 0\n                /// @src 16:115:346  \"contract ERC20Token is ERC20 {...\"\n                let slotValue := sload(/** @src 3:2244:2249  \"_name\" */ 0x03)\n                /// @src 16:115:346  \"contract ERC20Token is ERC20 {...\"\n                let length := /** @src -1:-1:-1 */ ret\n                /// @src 16:115:346  \"contract ERC20Token is ERC20 {...\"\n                let _1 := 1\n                length := shr(_1, slotValue)\n                let outOfPlaceEncoding := and(slotValue, _1)\n                if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n                let _2 := 32\n                if eq(outOfPlaceEncoding, lt(length, _2))\n                {\n                    mstore(/** @src -1:-1:-1 */ ret, /** @src 16:115:346  \"contract ERC20Token is ERC20 {...\" */ shl(224, 0x4e487b71))\n                    mstore(4, 0x22)\n                    revert(/** @src -1:-1:-1 */ ret, /** @src 16:115:346  \"contract ERC20Token is ERC20 {...\" */ 0x24)\n                }\n                let pos := array_storeLengthForEncoding_string(memPtr, length)\n                switch outOfPlaceEncoding\n                case 0 {\n                    mstore(pos, and(slotValue, not(255)))\n                    ret := add(pos, _2)\n                }\n                case 1 {\n                    let dataPos := array_dataslot_string_storage()\n                    let i := /** @src -1:-1:-1 */ 0\n                    /// @src 16:115:346  \"contract ERC20Token is ERC20 {...\"\n                    for { } lt(i, length) { i := add(i, _2) }\n                    {\n                        mstore(add(pos, i), sload(dataPos))\n                        dataPos := add(dataPos, _1)\n                    }\n                    ret := add(pos, i)\n                }\n                finalize_allocation(memPtr, sub(ret, memPtr))\n            }\n            function copy_array_from_storage_to_memory_string() -> memPtr\n            {\n                memPtr := mload(64)\n                let ret := /** @src -1:-1:-1 */ 0\n                /// @src 16:115:346  \"contract ERC20Token is ERC20 {...\"\n                let slotValue := sload(4)\n                let length := /** @src -1:-1:-1 */ ret\n                /// @src 16:115:346  \"contract ERC20Token is ERC20 {...\"\n                let _1 := 1\n                length := shr(_1, slotValue)\n                let outOfPlaceEncoding := and(slotValue, _1)\n                if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n                let _2 := 32\n                if eq(outOfPlaceEncoding, lt(length, _2))\n                {\n                    mstore(/** @src -1:-1:-1 */ ret, /** @src 16:115:346  \"contract ERC20Token is ERC20 {...\" */ shl(224, 0x4e487b71))\n                    mstore(4, 0x22)\n                    revert(/** @src -1:-1:-1 */ ret, /** @src 16:115:346  \"contract ERC20Token is ERC20 {...\" */ 0x24)\n                }\n                let pos := array_storeLengthForEncoding_string(memPtr, length)\n                switch outOfPlaceEncoding\n                case 0 {\n                    mstore(pos, and(slotValue, not(255)))\n                    ret := add(pos, _2)\n                }\n                case 1 {\n                    let dataPos := array_dataslot_string_storage_4050()\n                    let i := /** @src -1:-1:-1 */ 0\n                    /// @src 16:115:346  \"contract ERC20Token is ERC20 {...\"\n                    for { } lt(i, length) { i := add(i, _2) }\n                    {\n                        mstore(add(pos, i), sload(dataPos))\n                        dataPos := add(dataPos, _1)\n                    }\n                    ret := add(pos, i)\n                }\n                finalize_allocation(memPtr, sub(ret, memPtr))\n            }\n            function mapping_index_access_mapping_address_uint256_of_address_2492(key) -> dataSlot\n            {\n                mstore(0, and(key, sub(shl(160, 1), 1)))\n                mstore(0x20, /** @src 3:4102:4113  \"_allowances\" */ 0x01)\n                /// @src 16:115:346  \"contract ERC20Token is ERC20 {...\"\n                dataSlot := keccak256(0, 0x40)\n            }\n            function mapping_index_access_mapping_address_uint256_of_address_2493(key) -> dataSlot\n            {\n                mstore(/** @src 3:7568:7569  \"0\" */ 0x00, /** @src 16:115:346  \"contract ERC20Token is ERC20 {...\" */ and(key, sub(shl(160, 1), 1)))\n                mstore(0x20, /** @src 3:7568:7569  \"0\" */ 0x00)\n                /// @src 16:115:346  \"contract ERC20Token is ERC20 {...\"\n                dataSlot := keccak256(/** @src 3:7568:7569  \"0\" */ 0x00, /** @src 16:115:346  \"contract ERC20Token is ERC20 {...\" */ 0x40)\n            }\n            function mapping_index_access_mapping_address_uint256_of_address(slot, key) -> dataSlot\n            {\n                mstore(0, and(key, sub(shl(160, 1), 1)))\n                mstore(0x20, slot)\n                dataSlot := keccak256(0, 0x40)\n            }\n            /// @ast-id 600 @src 3:3419:3544  \"function balanceOf(address account) public view virtual override returns (uint256) {...\"\n            function fun_balanceOf(var_account) -> var\n            {\n                /// @src 16:115:346  \"contract ERC20Token is ERC20 {...\"\n                mstore(/** @src 3:3519:3528  \"_balances\" */ 0x00, /** @src 16:115:346  \"contract ERC20Token is ERC20 {...\" */ and(var_account, sub(shl(160, 1), 1)))\n                mstore(0x20, /** @src 3:3519:3528  \"_balances\" */ 0x00)\n                /// @src 3:3512:3537  \"return _balances[account]\"\n                var := /** @src 16:115:346  \"contract ERC20Token is ERC20 {...\" */ sload(keccak256(/** @src 3:3519:3528  \"_balances\" */ 0x00, /** @src 16:115:346  \"contract ERC20Token is ERC20 {...\" */ 0x40))\n            }\n            /// @ast-id 625 @src 3:3740:3929  \"function transfer(address to, uint256 amount) public virtual override returns (bool) {...\"\n            function fun_transfer(var_to, var_amount) -> var\n            {\n                /// @src 3:3894:3900  \"amount\"\n                fun__transfer(/** @src 9:719:729  \"msg.sender\" */ caller(), /** @src 3:3894:3900  \"amount\" */ var_to, var_amount)\n                /// @src 3:3911:3922  \"return true\"\n                var := /** @src 3:3918:3922  \"true\" */ 0x01\n            }\n            /// @ast-id 668 @src 3:4444:4641  \"function approve(address spender, uint256 amount) public virtual override returns (bool) {...\"\n            function fun_approve(var_spender, var_amount) -> var_\n            {\n                /// @src 3:4606:4612  \"amount\"\n                fun__approve(/** @src 9:719:729  \"msg.sender\" */ caller(), /** @src 3:4606:4612  \"amount\" */ var_spender, var_amount)\n                /// @src 3:4623:4634  \"return true\"\n                var_ := /** @src 3:4630:4634  \"true\" */ 0x01\n            }\n            /// @ast-id 701 @src 3:5203:5459  \"function transferFrom(address from, address to, uint256 amount) public virtual override returns (bool) {...\"\n            function fun_transferFrom(var_from, var_to, var_amount) -> var\n            {\n                /// @src 16:115:346  \"contract ERC20Token is ERC20 {...\"\n                mstore(/** @src -1:-1:-1 */ 0, /** @src 16:115:346  \"contract ERC20Token is ERC20 {...\" */ and(var_from, sub(shl(160, 1), 1)))\n                mstore(0x20, /** @src 3:4102:4113  \"_allowances\" */ 0x01)\n                /// @src 16:115:346  \"contract ERC20Token is ERC20 {...\"\n                let _1 := sload(/** @src 3:4102:4129  \"_allowances[owner][spender]\" */ mapping_index_access_mapping_address_uint256_of_address(/** @src 16:115:346  \"contract ERC20Token is ERC20 {...\" */ keccak256(/** @src -1:-1:-1 */ 0, /** @src 16:115:346  \"contract ERC20Token is ERC20 {...\" */ 0x40), /** @src 9:719:729  \"msg.sender\" */ caller()))\n                /// @src 3:11240:11483  \"if (currentAllowance != type(uint256).max) {...\"\n                if /** @src 3:11244:11281  \"currentAllowance != type(uint256).max\" */ iszero(eq(_1, /** @src 3:11264:11281  \"type(uint256).max\" */ not(0)))\n                /// @src 3:11240:11483  \"if (currentAllowance != type(uint256).max) {...\"\n                {\n                    /// @src 16:115:346  \"contract ERC20Token is ERC20 {...\"\n                    if /** @src 3:11305:11331  \"currentAllowance >= amount\" */ lt(_1, var_amount)\n                    /// @src 16:115:346  \"contract ERC20Token is ERC20 {...\"\n                    {\n                        let memPtr := mload(0x40)\n                        mstore(memPtr, shl(229, 4594637))\n                        mstore(add(memPtr, 4), 0x20)\n                        mstore(add(memPtr, 36), 29)\n                        mstore(add(memPtr, 68), \"ERC20: insufficient allowance\")\n                        revert(memPtr, 100)\n                    }\n                    /// @src 3:11432:11457  \"currentAllowance - amount\"\n                    fun__approve(var_from, /** @src 9:719:729  \"msg.sender\" */ caller(), /** @src 16:115:346  \"contract ERC20Token is ERC20 {...\" */ sub(/** @src 3:11432:11457  \"currentAllowance - amount\" */ _1, var_amount))\n                }\n                /// @src 3:5424:5430  \"amount\"\n                fun__transfer(var_from, var_to, var_amount)\n                /// @src 3:5441:5452  \"return true\"\n                var := /** @src 3:4102:4113  \"_allowances\" */ 0x01\n            }\n            /// @ast-id 730 @src 3:5854:6088  \"function increaseAllowance(address spender, uint256 addedValue) public virtual returns (bool) {...\"\n            function fun_increaseAllowance(var_spender, var_addedValue) -> var\n            {\n                /// @src 16:115:346  \"contract ERC20Token is ERC20 {...\"\n                mstore(/** @src -1:-1:-1 */ 0, /** @src 9:719:729  \"msg.sender\" */ caller())\n                /// @src 16:115:346  \"contract ERC20Token is ERC20 {...\"\n                mstore(0x20, /** @src 3:4102:4113  \"_allowances\" */ 0x01)\n                /// @src 16:115:346  \"contract ERC20Token is ERC20 {...\"\n                let _1 := sload(/** @src 3:4102:4129  \"_allowances[owner][spender]\" */ mapping_index_access_mapping_address_uint256_of_address(/** @src 16:115:346  \"contract ERC20Token is ERC20 {...\" */ keccak256(/** @src -1:-1:-1 */ 0, /** @src 16:115:346  \"contract ERC20Token is ERC20 {...\" */ 0x40), /** @src 3:6021:6046  \"allowance(owner, spender)\" */ var_spender))\n                /// @src 16:115:346  \"contract ERC20Token is ERC20 {...\"\n                if gt(_1, not(var_addedValue))\n                {\n                    mstore(/** @src -1:-1:-1 */ 0, /** @src 16:115:346  \"contract ERC20Token is ERC20 {...\" */ shl(224, 0x4e487b71))\n                    mstore(4, 0x11)\n                    revert(/** @src -1:-1:-1 */ 0, /** @src 16:115:346  \"contract ERC20Token is ERC20 {...\" */ 0x24)\n                }\n                /// @src 3:6021:6059  \"allowance(owner, spender) + addedValue\"\n                fun__approve(/** @src 9:719:729  \"msg.sender\" */ caller(), /** @src 3:6021:6059  \"allowance(owner, spender) + addedValue\" */ var_spender, /** @src 16:115:346  \"contract ERC20Token is ERC20 {...\" */ add(_1, var_addedValue))\n                /// @src 3:6070:6081  \"return true\"\n                var := /** @src 3:4102:4113  \"_allowances\" */ 0x01\n            }\n            /// @ast-id 771 @src 3:6575:7002  \"function decreaseAllowance(address spender, uint256 subtractedValue) public virtual returns (bool) {...\"\n            function fun_decreaseAllowance(var_spender, var_subtractedValue) -> var\n            {\n                /// @src 16:115:346  \"contract ERC20Token is ERC20 {...\"\n                mstore(/** @src -1:-1:-1 */ 0, /** @src 9:719:729  \"msg.sender\" */ caller())\n                /// @src 16:115:346  \"contract ERC20Token is ERC20 {...\"\n                mstore(0x20, /** @src 3:4102:4113  \"_allowances\" */ 0x01)\n                /// @src 16:115:346  \"contract ERC20Token is ERC20 {...\"\n                let _1 := sload(/** @src 3:4102:4129  \"_allowances[owner][spender]\" */ mapping_index_access_mapping_address_uint256_of_address(/** @src 16:115:346  \"contract ERC20Token is ERC20 {...\" */ keccak256(/** @src -1:-1:-1 */ 0, /** @src 16:115:346  \"contract ERC20Token is ERC20 {...\" */ 0x40), /** @src 3:6749:6774  \"allowance(owner, spender)\" */ var_spender))\n                /// @src 16:115:346  \"contract ERC20Token is ERC20 {...\"\n                if /** @src 3:6792:6827  \"currentAllowance >= subtractedValue\" */ lt(_1, var_subtractedValue)\n                /// @src 16:115:346  \"contract ERC20Token is ERC20 {...\"\n                {\n                    let memPtr := mload(0x40)\n                    mstore(memPtr, shl(229, 4594637))\n                    mstore(add(memPtr, 4), 0x20)\n                    mstore(add(memPtr, 36), 37)\n                    mstore(add(memPtr, 68), \"ERC20: decreased allowance below\")\n                    mstore(add(memPtr, 100), \" zero\")\n                    revert(memPtr, 132)\n                }\n                /// @src 3:6928:6962  \"currentAllowance - subtractedValue\"\n                fun__approve(/** @src 9:719:729  \"msg.sender\" */ caller(), /** @src 3:6928:6962  \"currentAllowance - subtractedValue\" */ var_spender, /** @src 16:115:346  \"contract ERC20Token is ERC20 {...\" */ sub(/** @src 3:6928:6962  \"currentAllowance - subtractedValue\" */ _1, var_subtractedValue))\n                /// @src 3:6984:6995  \"return true\"\n                var := /** @src 3:4102:4113  \"_allowances\" */ 0x01\n            }\n            /// @src 16:115:346  \"contract ERC20Token is ERC20 {...\"\n            function require_helper_stringliteral(condition)\n            {\n                if iszero(condition)\n                {\n                    let memPtr := mload(64)\n                    mstore(memPtr, shl(229, 4594637))\n                    mstore(add(memPtr, 4), 32)\n                    mstore(add(memPtr, 36), 35)\n                    mstore(add(memPtr, 68), \"ERC20: transfer to the zero addr\")\n                    mstore(add(memPtr, 100), \"ess\")\n                    revert(memPtr, 132)\n                }\n            }\n            function require_helper_stringliteral_4107(condition)\n            {\n                if iszero(condition)\n                {\n                    let memPtr := mload(64)\n                    mstore(memPtr, shl(229, 4594637))\n                    mstore(add(memPtr, 4), 32)\n                    mstore(add(memPtr, 36), 38)\n                    mstore(add(memPtr, 68), \"ERC20: transfer amount exceeds b\")\n                    mstore(add(memPtr, 100), \"alance\")\n                    revert(memPtr, 132)\n                }\n            }\n            /// @ast-id 848 @src 3:7456:8244  \"function _transfer(address from, address to, uint256 amount) internal virtual {...\"\n            function fun__transfer(var_from, var_to, var_amount)\n            {\n                /// @src 16:115:346  \"contract ERC20Token is ERC20 {...\"\n                let _1 := sub(shl(160, 1), 1)\n                if /** @src 3:7552:7570  \"from != address(0)\" */ iszero(/** @src 16:115:346  \"contract ERC20Token is ERC20 {...\" */ and(/** @src 3:7552:7570  \"from != address(0)\" */ var_from, /** @src 16:115:346  \"contract ERC20Token is ERC20 {...\" */ _1))\n                {\n                    let memPtr := mload(64)\n                    mstore(memPtr, shl(229, 4594637))\n                    mstore(add(memPtr, 4), 32)\n                    mstore(add(memPtr, 36), 37)\n                    mstore(add(memPtr, 68), \"ERC20: transfer from the zero ad\")\n                    mstore(add(memPtr, 100), \"dress\")\n                    revert(memPtr, 132)\n                }\n                /// @src 3:7622:7686  \"require(to != address(0), \\\"ERC20: transfer to the zero address\\\")\"\n                require_helper_stringliteral(/** @src 3:7630:7646  \"to != address(0)\" */ iszero(iszero(/** @src 16:115:346  \"contract ERC20Token is ERC20 {...\" */ and(/** @src 3:7630:7646  \"to != address(0)\" */ var_to, /** @src 16:115:346  \"contract ERC20Token is ERC20 {...\" */ _1))))\n                let _2 := sload(/** @src 3:7768:7783  \"_balances[from]\" */ mapping_index_access_mapping_address_uint256_of_address_2493(var_from))\n                /// @src 3:7793:7865  \"require(fromBalance >= amount, \\\"ERC20: transfer amount exceeds balance\\\")\"\n                require_helper_stringliteral_4107(/** @src 3:7801:7822  \"fromBalance >= amount\" */ iszero(lt(_2, var_amount)))\n                /// @src 16:115:346  \"contract ERC20Token is ERC20 {...\"\n                sstore(/** @src 3:7899:7914  \"_balances[from]\" */ mapping_index_access_mapping_address_uint256_of_address_2493(var_from), /** @src 16:115:346  \"contract ERC20Token is ERC20 {...\" */ sub(/** @src 3:7917:7937  \"fromBalance - amount\" */ _2, var_amount))\n                /// @src 3:8114:8127  \"_balances[to]\"\n                let _3 := mapping_index_access_mapping_address_uint256_of_address_2493(var_to)\n                /// @src 16:115:346  \"contract ERC20Token is ERC20 {...\"\n                sstore(_3, add(sload(/** @src 3:8114:8137  \"_balances[to] += amount\" */ _3), /** @src 16:115:346  \"contract ERC20Token is ERC20 {...\" */ var_amount))\n                /// @src 3:8163:8189  \"Transfer(from, to, amount)\"\n                let _4 := /** @src 16:115:346  \"contract ERC20Token is ERC20 {...\" */ mload(64)\n                /// @src 3:8163:8189  \"Transfer(from, to, amount)\"\n                log3(_4, sub(abi_encode_uint256(_4, var_amount), _4), 0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef, var_from, var_to)\n            }\n            /// @ast-id 1022 @src 3:10457:10797  \"function _approve(address owner, address spender, uint256 amount) internal virtual {...\"\n            function fun__approve(var_owner, var_spender, var_amount)\n            {\n                /// @src 16:115:346  \"contract ERC20Token is ERC20 {...\"\n                let _1 := sub(shl(160, 1), 1)\n                if /** @src 3:10558:10577  \"owner != address(0)\" */ iszero(/** @src 16:115:346  \"contract ERC20Token is ERC20 {...\" */ and(/** @src 3:10558:10577  \"owner != address(0)\" */ var_owner, /** @src 16:115:346  \"contract ERC20Token is ERC20 {...\" */ _1))\n                {\n                    let memPtr := mload(64)\n                    mstore(memPtr, shl(229, 4594637))\n                    mstore(add(memPtr, 4), 32)\n                    mstore(add(memPtr, 36), 36)\n                    mstore(add(memPtr, 68), \"ERC20: approve from the zero add\")\n                    mstore(add(memPtr, 100), \"ress\")\n                    revert(memPtr, 132)\n                }\n                if /** @src 3:10636:10657  \"spender != address(0)\" */ iszero(/** @src 16:115:346  \"contract ERC20Token is ERC20 {...\" */ and(/** @src 3:10636:10657  \"spender != address(0)\" */ var_spender, /** @src 16:115:346  \"contract ERC20Token is ERC20 {...\" */ _1))\n                {\n                    let memPtr_1 := mload(64)\n                    mstore(memPtr_1, shl(229, 4594637))\n                    mstore(add(memPtr_1, 4), 32)\n                    mstore(add(memPtr_1, 36), 34)\n                    mstore(add(memPtr_1, 68), \"ERC20: approve to the zero addre\")\n                    mstore(add(memPtr_1, 100), \"ss\")\n                    revert(memPtr_1, 132)\n                }\n                sstore(/** @src 3:10707:10734  \"_allowances[owner][spender]\" */ mapping_index_access_mapping_address_uint256_of_address(/** @src 3:10707:10725  \"_allowances[owner]\" */ mapping_index_access_mapping_address_uint256_of_address_2492(var_owner), /** @src 3:10707:10734  \"_allowances[owner][spender]\" */ var_spender), /** @src 16:115:346  \"contract ERC20Token is ERC20 {...\" */ var_amount)\n                /// @src 3:10758:10790  \"Approval(owner, spender, amount)\"\n                let _2 := /** @src 16:115:346  \"contract ERC20Token is ERC20 {...\" */ mload(64)\n                /// @src 3:10758:10790  \"Approval(owner, spender, amount)\"\n                log3(_2, sub(abi_encode_uint256(_2, var_amount), _2), 0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925, var_owner, var_spender)\n            }\n        }\n        data \".metadata\" hex\"a3646970667358221220b36b32fe739cd10aed3523eafc2036a04031116b8bf3c29f9a74f1e1182a8a2a6c6578706572696d656e74616cf564736f6c63430008090041\"\n    }\n}\n","hash":"0100021f4f88f1fcc1d9427313a009f42341492c5103a14a1024b88d90345907","factoryDependencies":{}}},"contracts/SobaToken.sol":{"SobaToken":{"abi":[{"inputs":[{"internalType":"string","name":"name","type":"string"},{"internalType":"string","name":"symbol","type":"string"}],"stateMutability":"nonpayable","type":"constructor"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"role","type":"bytes32"},{"indexed":true,"internalType":"bytes32","name":"previousAdminRole","type":"bytes32"},{"indexed":true,"internalType":"bytes32","name":"newAdminRole","type":"bytes32"}],"name":"RoleAdminChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"role","type":"bytes32"},{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":true,"internalType":"address","name":"sender","type":"address"}],"name":"RoleGranted","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"role","type":"bytes32"},{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":true,"internalType":"address","name":"sender","type":"address"}],"name":"RoleRevoked","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[],"name":"DEFAULT_ADMIN_ROLE","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"MINTER_ROLE","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"decimals","outputs":[{"internalType":"uint8","name":"","type":"uint8"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"subtractedValue","type":"uint256"}],"name":"decreaseAllowance","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"}],"name":"getRoleAdmin","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"grantRole","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"hasRole","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"addedValue","type":"uint256"}],"name":"increaseAllowance","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"_to","type":"address"},{"internalType":"uint256","name":"_amount","type":"uint256"}],"name":"mint","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"renounceOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"renounceRole","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"revokeRole","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"newMinter","type":"address"}],"name":"transferMinterRole","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"newOwner","type":"address"}],"name":"transferOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"}],"metadata":{"optimizer_settings":"M3B3","solc_metadata":"{\"compiler\":{\"version\":\"0.8.9+commit.e5eed63a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"symbol\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"previousAdminRole\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"newAdminRole\",\"type\":\"bytes32\"}],\"name\":\"RoleAdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleGranted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleRevoked\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"DEFAULT_ADMIN_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"MINTER_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleAdmin\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"grantRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"renounceRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"revokeRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newMinter\",\"type\":\"address\"}],\"name\":\"transferMinterRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"decreaseAllowance(address,uint256)\":{\"details\":\"Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`.\"},\"getRoleAdmin(bytes32)\":{\"details\":\"Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}.\"},\"grantRole(bytes32,address)\":{\"details\":\"Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleGranted} event.\"},\"hasRole(bytes32,address)\":{\"details\":\"Returns `true` if `account` has been granted `role`.\"},\"increaseAllowance(address,uint256)\":{\"details\":\"Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"renounceRole(bytes32,address)\":{\"details\":\"Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been revoked `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `account`. May emit a {RoleRevoked} event.\"},\"revokeRole(bytes32,address)\":{\"details\":\"Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleRevoked} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `amount`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `amount`. - the caller must have allowance for ``from``'s tokens of at least `amount`.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/SobaToken.sol\":\"SobaToken\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"details\":{\"constantOptimizer\":false,\"cse\":true,\"deduplicate\":true,\"inliner\":true,\"jumpdestRemover\":true,\"orderLiterals\":true,\"peephole\":true,\"yul\":true,\"yulDetails\":{\"optimizerSteps\":\"dhfoDgvulfnTUtnIf[xarrscLMcCTUtTOntnfDIulLculVcul jjTpeulxarulrulxarrcLgvifCTUcarrLsTFOtfDncarrIulc]jmuljuljul VcTOcul jmul\",\"stackAllocation\":true}},\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/AccessControl.sol\":{\"keccak256\":\"0x0dd6e52cb394d7f5abe5dca2d4908a6be40417914720932de757de34a99ab87f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://dc117ce50ea746cab6b97ed1a1facee17a715ae0cb95d67b943dacbaf15176fb\",\"dweb:/ipfs/QmYRZ2UGNYwsHwfNu7Wjr8L2j1LBZ1mKv6NvbwgterYMXc\"]},\"@openzeppelin/contracts/access/IAccessControl.sol\":{\"keccak256\":\"0x59ce320a585d7e1f163cd70390a0ef2ff9cec832e2aa544293a00692465a7a57\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bb2c137c343ef0c4c7ce7b18c1d108afdc9d315a04e48307288d2d05adcbde3a\",\"dweb:/ipfs/QmUxhrAQM3MM3FF5j7AtcXLXguWCJBHJ14BRdVtuoQc8Fh\"]},\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xba43b97fba0d32eb4254f6a5a297b39a19a247082a02d6e69349e071e2946218\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fc980984badf3984b6303b377711220e067722bbd6a135b24669ff5069ef9f32\",\"dweb:/ipfs/QmPHXMSXj99XjSVM21YsY6aNtLLjLVXDbyN76J5HQYvvrz\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0xa56ca923f70c1748830700250b19c61b70db9a683516dc5e216694a50445d99c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cac938788bc4be12101e59d45588b4e059579f4e61062e1cda8d6b06c0191b15\",\"dweb:/ipfs/QmV2JKCyjTVH3rkWNrfdJRhAT7tZ3usAN2XcnD4h53Mvih\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x287b55befed2961a7eabd7d7b1b2839cbca8a5b80ef8dcbb25ed3d4c2002c305\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bd39944e8fc06be6dbe2dd1d8449b5336e23c6a7ba3e8e9ae5ae0f37f35283f5\",\"dweb:/ipfs/QmPV3FGYjVwvKSgAXKUN3r9T9GwniZz83CxBpM7vyj2G53\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x8de418a5503946cabe331f35fe242d3201a73f67f77aaeb7110acb1f30423aca\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a376d3dda2cb70536c0a45c208b29b34ac560c4cb4f513a42079f96ba47d2dd\",\"dweb:/ipfs/QmZQg6gn1sUpM8wHzwNvSnihumUCAhxD119MpXeKp8B9s8\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x3088eb2868e8d13d89d16670b5f8612c4ab9ff8956272837d8e90106c59c14a0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b81d9ff6559ea5c47fc573e17ece6d9ba5d6839e213e6ebc3b4c5c8fe4199d7f\",\"dweb:/ipfs/QmPCW1bFisUzJkyjroY3yipwfism9RRCigCcK1hbXtVM8n\"]},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0xd10975de010d89fd1c78dc5e8a9a7e7f496198085c151648f20cba166b32582b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fb0048dee081f6fffa5f74afc3fb328483c2a30504e94a0ddd2a5114d731ec4d\",\"dweb:/ipfs/QmZptt1nmYoA5SgjwnSgWqgUSDgm4q52Yos3xhnMv3MV43\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0xe4455ac1eb7fc497bb7402579e7b4d64d928b846fce7d2b6fde06d366f21c2b3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cc8841b3cd48ad125e2f46323c8bad3aa0e88e399ec62acb9e57efa7e7c8058c\",\"dweb:/ipfs/QmSqE4mXHA2BXW58deDbXE8MTcsL5JSKNDbm23sVQxRLPS\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0xf92515413956f529d95977adc9b0567d583c6203fc31ab1c23824c35187e3ddc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c50fcc459e49a9858b6d8ad5f911295cb7c9ab57567845a250bf0153f84a95c7\",\"dweb:/ipfs/QmcEW85JRzvDkQggxiBBLVAasXWdkhEysqypj9EaB6H2g6\"]},\"contracts/SobaToken.sol\":{\"keccak256\":\"0xa6f422d95c5c45c535008884f06b38799190a1cbf8e12856478fb6122ef12526\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://7f4b07aceff2f28bf4e3906d977652e0de08914836606bab0b2066e5d7fa4c0e\",\"dweb:/ipfs/QmbV1PHyoGNkW1X6hi1Svpph5guoafR84R1JsSh4AbsVe7\"]}},\"version\":1}","zk_version":"1.3.13"},"evm":{"legacyAssembly":null,"assembly":"\t.text\n\t.file\t\"SobaToken.sol:SobaToken\"\n\t.globl\t__entry\n__entry:\n.func_begin0:\n\tnop\tstack+=[7]\n\tptr.add\tr1, r0, stack[@ptr_calldata]\n\tshr.s\t96, r1, r1\n\tand\t@CPI0_0[0], r1, stack[@calldatasize]\n\tadd\t128, r0, r1\n\tst.1\t64, r1\n\tand!\t1, r2, r1\n\tjump.ne\t@.BB0_1\n\tadd\tstack[@calldatasize], r0, r1\n\tsub.s!\t4, r1, r1\n\tjump.lt\t@.BB0_2\n\tptr.add\tstack[@ptr_calldata], r0, r1\n\tld\tr1, r1\n\tshr.s\t224, r1, r1\n\tsub.s!\t@CPI0_7[0], r1, r2\n\tjump.gt\t@.BB0_70\n\tsub.s!\t@CPI0_23[0], r1, r2\n\tjump.gt\t@.BB0_63\n\tsub.s!\t@CPI0_31[0], r1, r2\n\tjump.gt\t@.BB0_60\n\tsub.s!\t@CPI0_35[0], r1, r2\n\tjump.eq\t@.BB0_85\n\tsub.s!\t@CPI0_36[0], r1, r2\n\tjump.eq\t@.BB0_87\n\tsub.s!\t@CPI0_37[0], r1, r1\n\tjump.ne\t@.BB0_2\n\tcontext.get_context_u128\tr1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_2\n\tadd\tstack[@calldatasize], r0, r1\n\tnear_call\tr0, @abi_decode_addresst_uint256, @DEFAULT_UNWIND\n\tnear_call\tr0, @fun_approve, @DEFAULT_UNWIND\n\tadd\t1, r0, r1\n\tld.1\t64, r2\n\tst.1\tr2, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI0_38[0], r1, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_1:\n\tcontext.get_context_u128\tr1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_2\n\tadd\tstack[@calldatasize], r0, r2\n\tadd\t31, r2, r1\n\tsub.s\t32, r0, r10\n\tand\tr1, r10, r4\n\tld.1\t64, r1\n\tadd\tr4, r1, r3\n\tsub!\tr3, r4, r4\n\tadd\t0, r0, r4\n\tadd.lt\t1, r0, r4\n\tsub.s!\t@CPI0_1[0], r3, r5\n\tjump.gt\t@.BB0_5\n\tand!\t1, r4, r4\n\tjump.ne\t@.BB0_5\n\tst.1\t64, r3\n\tand\t31, r2, r3\n\tptr.add\tstack[@ptr_calldata], r0, r4\n\tshr.s!\t5, r2, r5\n\tjump.eq\t@.BB0_142\n\tadd\tr0, r0, r6\n.BB0_8:\n\tshl.s\t5, r6, r7\n\tadd\tr1, r7, r8\n\tptr.add\tr4, r7, r7\n\tld\tr7, r7\n\tst.1\tr8, r7\n\tadd\t1, r6, r6\n\tsub!\tr6, r5, r7\n\tjump.lt\t@.BB0_8\n.BB0_142:\n\tsub!\tr3, r0, r6\n\tjump.eq\t@.BB0_10\n\tshl.s\t5, r5, r5\n\tptr.add\tr4, r5, r4\n\tadd\tr1, r5, r5\n\tshl.s\t3, r3, r3\n\tld.1\tr5, r6\n\tshl\tr6, r3, r6\n\tshr\tr6, r3, r6\n\tld\tr4, r4\n\tsub\t256, r3, r3\n\tshr\tr4, r3, r4\n\tshl\tr4, r3, r3\n\tor\tr3, r6, r3\n\tst.1\tr5, r3\n.BB0_10:\n\tadd\t@CPI0_2[0], r0, r3\n\tsub.s!\t64, r2, r4\n\tadd\tr0, r0, r4\n\tadd.lt\tr3, r0, r4\n\tand\t@CPI0_2[0], r2, r5\n\tsub!\tr5, r0, r6\n\tadd.le\tr0, r0, r3\n\tsub.s!\t@CPI0_2[0], r5, r5\n\tadd.ne\tr4, r0, r3\n\tsub!\tr3, r0, r3\n\tjump.ne\t@.BB0_2\n\tld.1.inc\tr1, r4, r3\n\tsub.s!\t@CPI0_1[0], r4, r5\n\tjump.gt\t@.BB0_2\n\tadd\tr1, r2, r2\n\tadd\tr4, r1, r4\n\tadd\t31, r4, r5\n\tadd\t@CPI0_2[0], r0, r6\n\tsub!\tr5, r2, r7\n\tadd\tr0, r0, r7\n\tadd.ge\tr6, r0, r7\n\tand\t@CPI0_2[0], r5, r5\n\tand\t@CPI0_2[0], r2, r8\n\tsub!\tr5, r8, r9\n\tadd.ge\tr0, r0, r6\n\txor\tr5, r8, r5\n\tsub.s!\t@CPI0_2[0], r5, r5\n\tadd\tr7, r0, r5\n\tadd.eq\tr6, r0, r5\n\tsub!\tr5, r0, r5\n\tjump.ne\t@.BB0_2\n\tld.1\tr4, r5\n\tsub.s!\t@CPI0_1[0], r5, r6\n\tjump.le\t@.BB0_14\n.BB0_5:\n\tadd\t@CPI0_5[0], r0, r1\n\tst.1\t0, r1\n\tadd\t65, r0, r1\n\tst.1\t4, r1\n\tadd\t@CPI0_6[0], r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB0_70:\n\tsub.s!\t@CPI0_8[0], r1, r2\n\tjump.gt\t@.BB0_78\n\tsub.s!\t@CPI0_16[0], r1, r2\n\tjump.gt\t@.BB0_75\n\tsub.s!\t@CPI0_20[0], r1, r2\n\tjump.eq\t@.BB0_113\n\tsub.s!\t@CPI0_21[0], r1, r2\n\tjump.eq\t@.BB0_116\n\tsub.s!\t@CPI0_22[0], r1, r1\n\tjump.ne\t@.BB0_2\n\tcontext.get_context_u128\tr1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_2\n\tadd\tstack[@calldatasize], r0, r1\n\tnear_call\tr0, @abi_decode_bytes32t_address, @DEFAULT_UNWIND\n\tadd\tr2, r0, stack-[7]\n\tnear_call\tr0, @mapping_index_access_mapping_bytes32_struct_RoleData_storage_of_bytes32, @DEFAULT_UNWIND\n\tadd\tstack-[7], r0, r2\n\tnear_call\tr0, @mapping_index_access_mapping_address_bool_of_address.2, @DEFAULT_UNWIND\n\tsload\tr1, r1\n\tand!\t255, r1, r1\n\tadd\t0, r0, r1\n\tadd.ne\t1, r0, r1\n\tld.1\t64, r2\n\tst.1\tr2, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI0_38[0], r1, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_63:\n\tsub.s!\t@CPI0_24[0], r1, r2\n\tjump.gt\t@.BB0_67\n\tsub.s!\t@CPI0_28[0], r1, r2\n\tjump.eq\t@.BB0_100\n\tsub.s!\t@CPI0_29[0], r1, r2\n\tjump.eq\t@.BB0_102\n\tsub.s!\t@CPI0_30[0], r1, r1\n\tjump.ne\t@.BB0_2\n\tcontext.get_context_u128\tr1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_2\n\tadd\tstack[@calldatasize], r0, r1\n\tnear_call\tr0, @abi_decode_bytes32t_address, @DEFAULT_UNWIND\n\tnear_call\tr0, @fun_renounceRole, @DEFAULT_UNWIND\n\tadd\t@CPI0_0[0], r0, r1\n\tld.1\t64, r2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_78:\n\tsub.s!\t@CPI0_9[0], r1, r2\n\tjump.gt\t@.BB0_82\n\tsub.s!\t@CPI0_13[0], r1, r2\n\tjump.eq\t@.BB0_129\n\tsub.s!\t@CPI0_14[0], r1, r2\n\tjump.eq\t@.BB0_131\n\tsub.s!\t@CPI0_15[0], r1, r1\n\tjump.ne\t@.BB0_2\n\tcontext.get_context_u128\tr1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_2\n\tsub.s\t4, r0, r1\n\tadd\tstack[@calldatasize], r1, r1\n\tadd\t@CPI0_2[0], r0, r2\n\tsub!\tr1, r0, r3\n\tadd\tr0, r0, r3\n\tadd.lt\tr2, r0, r3\n\tand\t@CPI0_2[0], r1, r1\n\tsub!\tr1, r0, r4\n\tadd.le\tr0, r0, r2\n\tsub.s!\t@CPI0_2[0], r1, r1\n\tadd\tr3, r0, r1\n\tadd.eq\tr2, r0, r1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_2\n\tld.1\t64, r1\n\tadd\t@CPI0_39[0], r0, r2\n\tst.1\tr1, r2\n\tadd\t@CPI0_0[0], r0, r2\n\tsub.s!\t@CPI0_0[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI0_38[0], r1, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_60:\n\tsub.s!\t@CPI0_32[0], r1, r2\n\tjump.eq\t@.BB0_92\n\tsub.s!\t@CPI0_33[0], r1, r2\n\tjump.eq\t@.BB0_95\n\tsub.s!\t@CPI0_34[0], r1, r1\n\tjump.ne\t@.BB0_2\n\tcontext.get_context_u128\tr1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_2\n\tsub.s\t4, r0, r1\n\tadd\tstack[@calldatasize], r1, r1\n\tadd\t@CPI0_2[0], r0, r2\n\tsub.s!\t32, r1, r3\n\tadd\tr0, r0, r3\n\tadd.lt\tr2, r0, r3\n\tand\t@CPI0_2[0], r1, r1\n\tsub!\tr1, r0, r4\n\tadd.le\tr0, r0, r2\n\tsub.s!\t@CPI0_2[0], r1, r1\n\tadd\tr3, r0, r1\n\tadd.eq\tr2, r0, r1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_2\n\tadd\t4, r0, r1\n\tptr.add\tstack[@ptr_calldata], r1, r1\n\tld\tr1, r1\n\tnear_call\tr0, @fun_getRoleAdmin, @DEFAULT_UNWIND\n\tld.1\t64, r2\n\tst.1\tr2, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI0_38[0], r1, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_75:\n\tsub.s!\t@CPI0_17[0], r1, r2\n\tjump.eq\t@.BB0_121\n\tsub.s!\t@CPI0_18[0], r1, r2\n\tjump.eq\t@.BB0_124\n\tsub.s!\t@CPI0_19[0], r1, r1\n\tjump.ne\t@.BB0_2\n\tcontext.get_context_u128\tr1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_2\n\tadd\tstack[@calldatasize], r0, r1\n\tnear_call\tr0, @abi_decode_addresst_uint256, @DEFAULT_UNWIND\n\tnear_call\tr0, @fun_decreaseAllowance, @DEFAULT_UNWIND\n\tadd\t1, r0, r1\n\tld.1\t64, r2\n\tst.1\tr2, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI0_38[0], r1, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_67:\n\tsub.s!\t@CPI0_25[0], r1, r2\n\tjump.eq\t@.BB0_107\n\tsub.s!\t@CPI0_26[0], r1, r2\n\tjump.eq\t@.BB0_109\n\tsub.s!\t@CPI0_27[0], r1, r1\n\tjump.ne\t@.BB0_2\n\tcontext.get_context_u128\tr1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_2\n\tadd\tstack[@calldatasize], r0, r1\n\tnear_call\tr0, @abi_decode_address, @DEFAULT_UNWIND\n\tnear_call\tr0, @fun_balanceOf, @DEFAULT_UNWIND\n\tld.1\t64, r2\n\tst.1\tr2, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI0_38[0], r1, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_82:\n\tsub.s!\t@CPI0_10[0], r1, r2\n\tjump.eq\t@.BB0_136\n\tsub.s!\t@CPI0_11[0], r1, r2\n\tjump.eq\t@.BB0_138\n\tsub.s!\t@CPI0_12[0], r1, r1\n\tjump.ne\t@.BB0_2\n\tcontext.get_context_u128\tr1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_2\n\tadd\tstack[@calldatasize], r0, r1\n\tnear_call\tr0, @abi_decode_address, @DEFAULT_UNWIND\n\tnear_call\tr0, @modifier_onlyOwner, @DEFAULT_UNWIND\n\tadd\t@CPI0_0[0], r0, r1\n\tld.1\t64, r2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_85:\n\tcontext.get_context_u128\tr1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_2\n\tadd\tstack[@calldatasize], r0, r1\n\tnear_call\tr0, @abi_decode_bytes4, @DEFAULT_UNWIND\n\tand\t@CPI0_41[0], r1, r1\n\tsub.s!\t@CPI0_42[0], r1, r2\n\tadd\t0, r0, r2\n\tadd.eq\t1, r0, r2\n\tsub.s!\t@CPI0_43[0], r1, r1\n\tadd\t0, r0, r1\n\tadd.eq\t1, r0, r1\n\tor\tr1, r2, r1\n\tand\t1, r1, r1\n\tst.1\t128, r1\n\tadd\t@CPI0_44[0], r0, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_87:\n\tcontext.get_context_u128\tr1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_2\n\tsub.s\t4, r0, r1\n\tadd\tstack[@calldatasize], r1, r1\n\tadd\t@CPI0_2[0], r0, r2\n\tsub!\tr1, r0, r3\n\tadd\tr0, r0, r3\n\tadd.lt\tr2, r0, r3\n\tand\t@CPI0_2[0], r1, r1\n\tsub!\tr1, r0, r4\n\tadd.le\tr0, r0, r2\n\tsub.s!\t@CPI0_2[0], r1, r1\n\tadd\tr3, r0, r1\n\tadd.eq\tr2, r0, r1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_2\n\tnear_call\tr0, @copy_array_from_storage_to_memory_string_5202, @DEFAULT_UNWIND\n\tadd\tr1, r0, r2\n\tld.1\t64, r1\n\tadd\tr1, r0, stack-[7]\n\tnear_call\tr0, @abi_encode_string, @DEFAULT_UNWIND\n\tadd\tstack-[7], r0, r4\n\tsub\tr1, r4, r1\n\tadd\t@CPI0_0[0], r0, r2\n\tsub.s!\t@CPI0_0[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tsub.s!\t@CPI0_0[0], r4, r3\n\tadd.lt\tr4, r0, r2\n\tshl.s\t64, r2, r2\n\tshl.s\t96, r1, r1\n\tor\tr1, r2, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_113:\n\tcontext.get_context_u128\tr1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_2\n\tsub.s\t4, r0, r1\n\tadd\tstack[@calldatasize], r1, r1\n\tadd\t@CPI0_2[0], r0, r2\n\tsub!\tr1, r0, r3\n\tadd\tr0, r0, r3\n\tadd.lt\tr2, r0, r3\n\tand\t@CPI0_2[0], r1, r1\n\tsub!\tr1, r0, r4\n\tadd.le\tr0, r0, r2\n\tsub.s!\t@CPI0_2[0], r1, r1\n\tadd\tr3, r0, r1\n\tadd.eq\tr2, r0, r1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_2\n\tnear_call\tr0, @modifier_onlyOwner_447, @DEFAULT_UNWIND\n\tadd\t@CPI0_0[0], r0, r1\n\tld.1\t64, r2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_116:\n\tcontext.get_context_u128\tr1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_2\n\tsub.s\t4, r0, r1\n\tadd\tstack[@calldatasize], r1, r1\n\tadd\t@CPI0_2[0], r0, r2\n\tsub!\tr1, r0, r3\n\tadd\tr0, r0, r3\n\tadd.lt\tr2, r0, r3\n\tand\t@CPI0_2[0], r1, r1\n\tsub!\tr1, r0, r4\n\tadd.le\tr0, r0, r2\n\tsub.s!\t@CPI0_2[0], r1, r1\n\tadd\tr3, r0, r1\n\tadd.eq\tr2, r0, r1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_2\n\tadd\t5, r0, r1\n\tsload\tr1, r1\n\tand\t@CPI0_40[0], r1, r1\n\tld.1\t64, r2\n\tst.1\tr2, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI0_38[0], r1, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_100:\n\tcontext.get_context_u128\tr1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_2\n\tadd\tstack[@calldatasize], r0, r1\n\tnear_call\tr0, @abi_decode_bytes32t_address, @DEFAULT_UNWIND\n\tnear_call\tr0, @modifier_onlyRole, @DEFAULT_UNWIND\n\tadd\t@CPI0_0[0], r0, r1\n\tld.1\t64, r2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_102:\n\tcontext.get_context_u128\tr1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_2\n\tsub.s\t4, r0, r1\n\tadd\tstack[@calldatasize], r1, r1\n\tadd\t@CPI0_2[0], r0, r2\n\tsub!\tr1, r0, r3\n\tadd\tr0, r0, r3\n\tadd.lt\tr2, r0, r3\n\tand\t@CPI0_2[0], r1, r1\n\tsub!\tr1, r0, r4\n\tadd.le\tr0, r0, r2\n\tsub.s!\t@CPI0_2[0], r1, r1\n\tadd\tr3, r0, r1\n\tadd.eq\tr2, r0, r1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_2\n\tld.1\t64, r1\n\tadd\t18, r0, r2\n\tst.1\tr1, r2\n\tadd\t@CPI0_0[0], r0, r2\n\tsub.s!\t@CPI0_0[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI0_38[0], r1, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_129:\n\tcontext.get_context_u128\tr1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_2\n\tadd\tstack[@calldatasize], r0, r1\n\tnear_call\tr0, @abi_decode_addresst_uint256, @DEFAULT_UNWIND\n\tnear_call\tr0, @fun_transfer, @DEFAULT_UNWIND\n\tadd\t1, r0, r1\n\tld.1\t64, r2\n\tst.1\tr2, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI0_38[0], r1, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_131:\n\tcontext.get_context_u128\tr1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_2\n\tadd\tstack[@calldatasize], r0, r1\n\tnear_call\tr0, @abi_decode_address, @DEFAULT_UNWIND\n\tnear_call\tr0, @modifier_onlyOwner_3617, @DEFAULT_UNWIND\n\tadd\t@CPI0_0[0], r0, r1\n\tld.1\t64, r2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_92:\n\tcontext.get_context_u128\tr1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_2\n\tsub.s\t4, r0, r1\n\tadd\tstack[@calldatasize], r1, r1\n\tadd\t@CPI0_2[0], r0, r2\n\tsub!\tr1, r0, r3\n\tadd\tr0, r0, r3\n\tadd.lt\tr2, r0, r3\n\tand\t@CPI0_2[0], r1, r1\n\tsub!\tr1, r0, r4\n\tadd.le\tr0, r0, r2\n\tsub.s!\t@CPI0_2[0], r1, r1\n\tadd\tr3, r0, r1\n\tadd.eq\tr2, r0, r1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_2\n\tadd\t2, r0, r1\n\tsload\tr1, r1\n\tld.1\t64, r2\n\tst.1\tr2, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI0_38[0], r1, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_95:\n\tcontext.get_context_u128\tr1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_2\n\tadd\tstack[@calldatasize], r0, r1\n\tnear_call\tr0, @abi_decode_addresst_addresst_uint256, @DEFAULT_UNWIND\n\tnear_call\tr0, @fun_transferFrom, @DEFAULT_UNWIND\n\tadd\t1, r0, r1\n\tld.1\t64, r2\n\tst.1\tr2, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI0_38[0], r1, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_121:\n\tcontext.get_context_u128\tr1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_2\n\tsub.s\t4, r0, r1\n\tadd\tstack[@calldatasize], r1, r1\n\tadd\t@CPI0_2[0], r0, r2\n\tsub!\tr1, r0, r3\n\tadd\tr0, r0, r3\n\tadd.lt\tr2, r0, r3\n\tand\t@CPI0_2[0], r1, r1\n\tsub!\tr1, r0, r4\n\tadd.le\tr0, r0, r2\n\tsub.s!\t@CPI0_2[0], r1, r1\n\tadd\tr3, r0, r1\n\tadd.eq\tr2, r0, r1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_2\n\tnear_call\tr0, @copy_array_from_storage_to_memory_string, @DEFAULT_UNWIND\n\tadd\tr1, r0, r2\n\tld.1\t64, r1\n\tadd\tr1, r0, stack-[7]\n\tnear_call\tr0, @abi_encode_string, @DEFAULT_UNWIND\n\tadd\tstack-[7], r0, r4\n\tsub\tr1, r4, r1\n\tadd\t@CPI0_0[0], r0, r2\n\tsub.s!\t@CPI0_0[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tsub.s!\t@CPI0_0[0], r4, r3\n\tadd.lt\tr4, r0, r2\n\tshl.s\t64, r2, r2\n\tshl.s\t96, r1, r1\n\tor\tr1, r2, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_124:\n\tcontext.get_context_u128\tr1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_2\n\tsub.s\t4, r0, r1\n\tadd\tstack[@calldatasize], r1, r1\n\tadd\t@CPI0_2[0], r0, r2\n\tsub!\tr1, r0, r3\n\tadd\tr0, r0, r3\n\tadd.lt\tr2, r0, r3\n\tand\t@CPI0_2[0], r1, r1\n\tsub!\tr1, r0, r4\n\tadd.le\tr0, r0, r2\n\tsub.s!\t@CPI0_2[0], r1, r1\n\tadd\tr3, r0, r1\n\tadd.eq\tr2, r0, r1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_2\n\tld.1\t64, r1\n\tst.1\tr1, r0\n\tadd\t@CPI0_0[0], r0, r2\n\tsub.s!\t@CPI0_0[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI0_38[0], r1, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_107:\n\tcontext.get_context_u128\tr1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_2\n\tadd\tstack[@calldatasize], r0, r1\n\tnear_call\tr0, @abi_decode_addresst_uint256, @DEFAULT_UNWIND\n\tnear_call\tr0, @fun_increaseAllowance, @DEFAULT_UNWIND\n\tadd\t1, r0, r1\n\tld.1\t64, r2\n\tst.1\tr2, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI0_38[0], r1, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_109:\n\tcontext.get_context_u128\tr1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_2\n\tadd\tstack[@calldatasize], r0, r1\n\tnear_call\tr0, @abi_decode_addresst_uint256, @DEFAULT_UNWIND\n\tnear_call\tr0, @fun_mint.5, @DEFAULT_UNWIND\n\tadd\t@CPI0_0[0], r0, r1\n\tld.1\t64, r2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_136:\n\tcontext.get_context_u128\tr1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_2\n\tadd\tstack[@calldatasize], r0, r1\n\tnear_call\tr0, @abi_decode_bytes32t_address, @DEFAULT_UNWIND\n\tnear_call\tr0, @modifier_onlyRole_178, @DEFAULT_UNWIND\n\tadd\t@CPI0_0[0], r0, r1\n\tld.1\t64, r2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_138:\n\tcontext.get_context_u128\tr1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_2\n\tadd\tstack[@calldatasize], r0, r1\n\tnear_call\tr0, @abi_decode_addresst_address, @DEFAULT_UNWIND\n\tadd\tr2, r0, stack-[7]\n\tnear_call\tr0, @mapping_index_access_mapping_address_bool_of_address_5230, @DEFAULT_UNWIND\n\tadd\tstack-[7], r0, r2\n\tnear_call\tr0, @mapping_index_access_mapping_address_bool_of_address.2, @DEFAULT_UNWIND\n\tsload\tr1, r1\n\tld.1\t64, r2\n\tst.1\tr2, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI0_38[0], r1, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_14:\n\tadd\t63, r5, r6\n\tand\tr6, r10, r6\n\tld.1\t64, r11\n\tadd\tr11, r6, r6\n\tsub!\tr6, r11, r7\n\tadd\t0, r0, r7\n\tadd.lt\t1, r0, r7\n\tsub.s!\t@CPI0_1[0], r6, r8\n\tjump.gt\t@.BB0_5\n\tand!\t1, r7, r7\n\tjump.ne\t@.BB0_5\n\tst.1\t64, r6\n\tst.1.inc\tr11, r5, r12\n\tadd\t32, r5, r6\n\tadd\tr6, r4, r7\n\tsub!\tr7, r2, r7\n\tjump.gt\t@.BB0_2\n\tsub!\tr5, r0, r7\n\tjump.eq\t@.BB0_22\n\tadd\tr0, r0, r7\n.BB0_19:\n\tadd\t32, r7, r7\n\tadd\tr7, r11, r8\n\tadd\tr7, r4, r9\n\tld.1\tr9, r9\n\tst.1\tr8, r9\n\tsub!\tr7, r5, r8\n\tjump.lt\t@.BB0_19\n\tsub!\tr7, r5, r4\n\tjump.le\t@.BB0_22\n\tadd\tr11, r6, r4\n\tst.1\tr4, r0\n.BB0_22:\n\tld.1\tr3, r3\n\tsub.s!\t@CPI0_1[0], r3, r4\n\tjump.gt\t@.BB0_2\n\tadd\tr3, r1, r1\n\tadd\t31, r1, r3\n\tadd\t@CPI0_2[0], r0, r4\n\tsub!\tr3, r2, r5\n\tadd\tr0, r0, r5\n\tadd.ge\tr4, r0, r5\n\tand\t@CPI0_2[0], r3, r3\n\tand\t@CPI0_2[0], r2, r6\n\tsub!\tr3, r6, r7\n\tadd.ge\tr0, r0, r4\n\txor\tr3, r6, r3\n\tsub.s!\t@CPI0_2[0], r3, r3\n\tadd\tr5, r0, r3\n\tadd.eq\tr4, r0, r3\n\tsub!\tr3, r0, r3\n\tjump.ne\t@.BB0_2\n\tld.1\tr1, r3\n\tsub.s!\t@CPI0_1[0], r3, r4\n\tjump.gt\t@.BB0_5\n\tadd\t63, r3, r4\n\tand\tr4, r10, r4\n\tld.1\t64, r7\n\tadd\tr7, r4, r4\n\tsub!\tr4, r7, r5\n\tadd\t0, r0, r5\n\tadd.lt\t1, r0, r5\n\tsub.s!\t@CPI0_1[0], r4, r6\n\tjump.gt\t@.BB0_5\n\tand!\t1, r5, r5\n\tjump.ne\t@.BB0_5\n\tst.1\t64, r4\n\tst.1\tr7, r3\n\tadd\t32, r3, r4\n\tadd\tr4, r1, r5\n\tsub!\tr5, r2, r2\n\tjump.le\t@.BB0_28\n.BB0_2:\n\tadd\tr0, r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB0_28:\n\tadd\tr12, r0, stack-[4]\n\tadd\tr11, r0, stack-[7]\n\tadd\tr10, r0, stack-[5]\n\tsub!\tr3, r0, r2\n\tjump.eq\t@.BB0_33\n\tadd\tr0, r0, r2\n.BB0_30:\n\tadd\t32, r2, r2\n\tadd\tr2, r7, r5\n\tadd\tr2, r1, r6\n\tld.1\tr6, r6\n\tst.1\tr5, r6\n\tsub!\tr2, r3, r5\n\tjump.lt\t@.BB0_30\n\tsub!\tr2, r3, r1\n\tjump.le\t@.BB0_33\n\tadd\tr7, r4, r1\n\tst.1\tr1, r0\n.BB0_33:\n\tadd\tstack-[7], r0, r1\n\tld.1\tr1, r1\n\tadd\tr1, r0, stack-[6]\n\tsub.s!\t@CPI0_1[0], r1, r1\n\tjump.gt\t@.BB0_5\n\tadd\tr7, r0, stack-[1]\n\tadd\t3, r0, r1\n\tadd\tr1, r0, stack-[3]\n\tsload\tr1, r1\n\tand!\t1, r1, r2\n\tshr.s\t1, r1, r1\n\tand\t127, r1, r3\n\tadd.eq\tr3, r0, r1\n\tadd\tr1, r0, stack-[2]\n\tsub.s!\t31, r1, r1\n\tadd\t0, r0, r1\n\tadd.gt\t1, r0, r1\n\tand\t1, r1, r1\n\tsub!\tr2, r1, r1\n\tjump.eq\t@.BB0_36\n\tadd\t@CPI0_5[0], r0, r1\n\tst.1\t0, r1\n\tadd\t34, r0, r1\n\tst.1\t4, r1\n\tadd\t@CPI0_6[0], r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB0_36:\n\tadd\tstack-[2], r0, r1\n\tsub.s!\t32, r1, r1\n\tjump.lt\t@.BB0_41\n\tadd\tstack-[3], r0, r1\n\tst.1\t0, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_3[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tadd\tstack-[6], r0, r3\n\tadd\t31, r3, r2\n\tshr.s\t5, r2, r2\n\tsub.s!\t32, r3, r3\n\tadd.lt\tr0, r0, r2\n\tld\tr1, r3\n\tadd\tstack-[2], r0, r1\n\tadd\t31, r1, r1\n\tshr.s\t5, r1, r1\n\tadd\tr3, r1, r1\n\tadd\tr3, r2, r2\n\tsub!\tr2, r1, r3\n\tjump.ge\t@.BB0_41\n.BB0_40:\n\tsstore\tr2, r0\n\tadd\t1, r2, r2\n\tsub!\tr2, r1, r3\n\tjump.lt\t@.BB0_40\n.BB0_41:\n\tadd\tstack-[6], r0, r1\n\tsub.s!\t31, r1, r1\n\tjump.le\t@.BB0_50\n\tadd\tstack-[3], r0, r1\n\tst.1\t0, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_3[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tadd\tstack-[5], r0, r2\n\tadd\tstack-[7], r0, r6\n\tjump.eq\t@.BB0_2\n\tadd\tstack-[6], r0, r3\n\tand!\tr3, r2, r3\n\tadd\t32, r0, r2\n\tld\tr1, r1\n\tjump.eq\t@.BB0_47\n\tadd\t32, r0, r2\n\tadd\tr0, r0, r4\n.BB0_46:\n\tadd\tr2, r6, r5\n\tld.1\tr5, r5\n\tsstore\tr1, r5\n\tadd\t32, r2, r2\n\tadd\t1, r1, r1\n\tadd\t32, r4, r4\n\tsub!\tr4, r3, r5\n\tjump.lt\t@.BB0_46\n.BB0_47:\n\tadd\tstack-[6], r0, r4\n\tsub!\tr3, r4, r3\n\tjump.ge\t@.BB0_49\n\tadd\tstack-[6], r0, r3\n\tshl.s\t3, r3, r3\n\tand\t248, r3, r3\n\tsub.s\t1, r0, r4\n\tshr\tr4, r3, r3\n\txor\tr3, r4, r3\n\tadd\tstack-[7], r0, r4\n\tadd\tr2, r4, r2\n\tld.1\tr2, r2\n\tand\tr2, r3, r2\n\tsstore\tr1, r2\n.BB0_49:\n\tadd\t1, r0, r1\n\tadd\tstack-[6], r0, r2\n\tshl.s\t1, r2, r2\n\tjump\t@.BB0_42\n.BB0_50:\n\tadd\tstack-[6], r0, r1\n\tsub!\tr1, r0, r1\n\tadd\tr0, r0, r1\n\tjump.eq\t@.BB0_52\n\tadd\tstack-[4], r0, r1\n\tld.1\tr1, r1\n.BB0_52:\n\tadd\tstack-[6], r0, r4\n\tshl.s\t3, r4, r2\n\tsub.s\t1, r0, r3\n\tshr\tr3, r2, r2\n\txor\tr2, r3, r2\n\tand\tr1, r2, r2\n\tshl.s\t1, r4, r1\n.BB0_42:\n\tor\tr2, r1, r1\n\tadd\tstack-[3], r0, r2\n\tsstore\tr2, r1\n\tadd\tstack-[1], r0, r1\n\tnear_call\tr0, @copy_byte_array_to_storage_from_string_to_string, @DEFAULT_UNWIND\n\tcontext.caller\tr1\n\tadd\tr1, r0, stack-[7]\n\tnear_call\tr0, @fun_transferOwnership, @DEFAULT_UNWIND\n\tadd\tstack-[7], r0, r1\n\tnear_call\tr0, @fun_mint, @DEFAULT_UNWIND\n\tadd\tstack-[7], r0, r1\n\tnear_call\tr0, @fun_grantRole_2379, @DEFAULT_UNWIND\n\tadd\tstack-[7], r0, r1\n\tnear_call\tr0, @fun_grantRole, @DEFAULT_UNWIND\n\tadd\t32, r0, r1\n\tst.2\t256, r1\n\tst.2\t288, r0\n\tadd\t@CPI0_4[0], r0, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.func_end0:\n\ncopy_byte_array_to_storage_from_string_to_string:\n.func_begin1:\n\tnop\tstack+=[5]\n\tld.1.inc\tr1, r5, r7\n\tsub.s!\t@CPI1_0[0], r5, r2\n\tjump.ge\t@.BB1_1\n\tadd\t4, r0, r4\n\tsload\tr4, r3\n\tand!\t1, r3, r2\n\tshr.s\t1, r3, r6\n\tand\t127, r6, r3\n\tadd.eq\tr3, r0, r6\n\tsub.s!\t31, r6, r3\n\tadd\t0, r0, r3\n\tadd.gt\t1, r0, r3\n\tand\t1, r3, r3\n\tsub!\tr2, r3, r2\n\tjump.ne\t@.BB1_3\n\tadd\tr1, r0, stack-[3]\n\tsub.s!\t32, r6, r1\n\tadd\tr4, r0, stack-[5]\n\tadd\tr5, r0, stack-[4]\n\tjump.lt\t@.BB1_10\n\tadd\tr6, r0, stack-[1]\n\tadd\tr7, r0, stack-[2]\n\tst.1\t0, r4\n\tadd\t@CPI1_1[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI1_1[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI1_2[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB1_6\n\tadd\tstack-[4], r0, r5\n\tadd\t31, r5, r2\n\tshr.s\t5, r2, r2\n\tsub.s!\t32, r5, r3\n\tadd.lt\tr0, r0, r2\n\tld\tr1, r3\n\tadd\tstack-[1], r0, r1\n\tadd\t31, r1, r1\n\tshr.s\t5, r1, r1\n\tadd\tr3, r1, r1\n\tadd\tr3, r2, r2\n\tsub!\tr2, r1, r3\n\tadd\tstack-[5], r0, r4\n\tadd\tstack-[2], r0, r7\n\tjump.ge\t@.BB1_10\n.BB1_9:\n\tsstore\tr2, r0\n\tadd\t1, r2, r2\n\tsub!\tr2, r1, r3\n\tjump.lt\t@.BB1_9\n.BB1_10:\n\tsub.s!\t31, r5, r1\n\tjump.le\t@.BB1_19\n\tst.1\t0, r4\n\tadd\t@CPI1_1[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI1_1[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI1_2[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB1_6\n\tsub.s\t32, r0, r2\n\tadd\tstack-[4], r0, r6\n\tand!\tr6, r2, r3\n\tadd\t32, r0, r2\n\tld\tr1, r1\n\tadd\tstack-[3], r0, r7\n\tjump.eq\t@.BB1_16\n\tadd\t32, r0, r2\n\tadd\tr0, r0, r4\n.BB1_15:\n\tadd\tr2, r7, r5\n\tld.1\tr5, r5\n\tsstore\tr1, r5\n\tadd\t32, r2, r2\n\tadd\t1, r1, r1\n\tadd\t32, r4, r4\n\tsub!\tr4, r3, r5\n\tjump.lt\t@.BB1_15\n.BB1_16:\n\tsub!\tr3, r6, r3\n\tjump.ge\t@.BB1_18\n\tshl.s\t3, r6, r3\n\tand\t248, r3, r3\n\tsub.s\t1, r0, r4\n\tshr\tr4, r3, r3\n\txor\tr3, r4, r3\n\tadd\tr2, r7, r2\n\tld.1\tr2, r2\n\tand\tr2, r3, r2\n\tsstore\tr1, r2\n.BB1_18:\n\tshl.s\t1, r6, r1\n\tor\t1, r1, r1\n\tadd\tstack-[5], r0, r4\n\tjump\t@.BB1_11\n.BB1_19:\n\tsub!\tr5, r0, r1\n\tadd\tr0, r0, r1\n\tjump.eq\t@.BB1_11\n\tshl.s\t3, r5, r1\n\tsub.s\t1, r0, r2\n\tshr\tr2, r1, r1\n\txor\tr1, r2, r1\n\tld.1\tr7, r2\n\tand\tr2, r1, r1\n\tshl.s\t1, r5, r2\n\tor\tr1, r2, r1\n.BB1_11:\n\tsstore\tr4, r1\n\tret\n.BB1_1:\n\tadd\t@CPI1_3[0], r0, r1\n\tst.1\t0, r1\n\tadd\t65, r0, r1\n\tst.1\t4, r1\n\tadd\t@CPI1_4[0], r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB1_3:\n\tadd\t@CPI1_3[0], r0, r1\n\tst.1\t0, r1\n\tadd\t34, r0, r1\n\tst.1\t4, r1\n\tadd\t@CPI1_4[0], r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB1_6:\n\tadd\tr0, r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.func_end1:\n\nfun_grantRole_2379:\n.func_begin2:\n\tnop\tstack+=[3]\n\tadd\tr1, r0, stack-[3]\n\tst.1\t0, r0\n\tadd\t6, r0, r1\n\tadd\tr1, r0, stack-[2]\n\tst.1\t32, r1\n\tadd\t@CPI2_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI2_0[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI2_1[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB2_1\n\tld\tr1, r1\n\tadd\tstack-[3], r0, r2\n\tand\t@CPI2_2[0], r2, r2\n\tadd\tr2, r0, stack-[1]\n\tst.1\t0, r2\n\tst.1\t32, r1\n\tadd\t@CPI2_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI2_0[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI2_1[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB2_1\n\tld\tr1, r1\n\tsload\tr1, r1\n\tand!\t255, r1, r1\n\tjump.ne\t@.BB2_7\n\tst.1\t0, r0\n\tadd\tstack-[2], r0, r1\n\tst.1\t32, r1\n\tadd\t@CPI2_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI2_0[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI2_1[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB2_1\n\tld\tr1, r1\n\tadd\tstack-[1], r0, r2\n\tst.1\t0, r2\n\tst.1\t32, r1\n\tadd\t@CPI2_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI2_0[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI2_1[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB2_1\n\tld\tr1, r1\n\tsload\tr1, r2\n\tsub.s\t256, r0, r3\n\tand\tr2, r3, r2\n\tor\t1, r2, r2\n\tsstore\tr1, r2\n\tld.1\t64, r1\n\tadd\t@CPI2_0[0], r0, r2\n\tcontext.gas_left\tr3\n\tsub.s!\t@CPI2_0[0], r3, r4\n\tadd.ge\tr2, r0, r3\n\tsub.s!\t@CPI2_0[0], r1, r4\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tshl.s\t192, r3, r2\n\tor\tr2, r1, r1\n\tor\t@CPI2_3[0], r1, r1\n\tadd\t32781, r0, r2\n\tadd\t4, r0, r3\n\tadd\t@CPI2_4[0], r0, r4\n\tcontext.caller\tr7\n\tadd\tr0, r0, r5\n\tadd\tstack-[3], r0, r6\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r1\n\tjump.eq\t@.BB2_1\n.BB2_7:\n\tret\n.BB2_1:\n\tadd\tr0, r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.func_end2:\n\nfun_grantRole:\n.func_begin3:\n\tnop\tstack+=[3]\n\tadd\tr1, r0, stack-[3]\n\tadd\t@CPI3_0[0], r0, r1\n\tst.1\t0, r1\n\tadd\t6, r0, r1\n\tadd\tr1, r0, stack-[2]\n\tst.1\t32, r1\n\tadd\t@CPI3_1[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI3_1[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI3_2[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB3_1\n\tld\tr1, r1\n\tadd\tstack-[3], r0, r2\n\tand\t@CPI3_3[0], r2, r2\n\tadd\tr2, r0, stack-[1]\n\tst.1\t0, r2\n\tst.1\t32, r1\n\tadd\t@CPI3_1[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI3_1[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI3_2[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB3_1\n\tld\tr1, r1\n\tsload\tr1, r1\n\tand!\t255, r1, r1\n\tjump.ne\t@.BB3_7\n\tadd\t@CPI3_0[0], r0, r1\n\tst.1\t0, r1\n\tadd\tstack-[2], r0, r1\n\tst.1\t32, r1\n\tadd\t@CPI3_1[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI3_1[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI3_2[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB3_1\n\tld\tr1, r1\n\tadd\tstack-[1], r0, r2\n\tst.1\t0, r2\n\tst.1\t32, r1\n\tadd\t@CPI3_1[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI3_1[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI3_2[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB3_1\n\tld\tr1, r1\n\tsload\tr1, r2\n\tsub.s\t256, r0, r3\n\tand\tr2, r3, r2\n\tor\t1, r2, r2\n\tsstore\tr1, r2\n\tld.1\t64, r1\n\tadd\t@CPI3_1[0], r0, r2\n\tcontext.gas_left\tr3\n\tsub.s!\t@CPI3_1[0], r3, r4\n\tadd.ge\tr2, r0, r3\n\tsub.s!\t@CPI3_1[0], r1, r4\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tshl.s\t192, r3, r2\n\tor\tr2, r1, r1\n\tor\t@CPI3_4[0], r1, r1\n\tadd\t32781, r0, r2\n\tadd\t4, r0, r3\n\tadd\t@CPI3_5[0], r0, r4\n\tadd\t@CPI3_0[0], r0, r5\n\tcontext.caller\tr7\n\tadd\tstack-[3], r0, r6\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r1\n\tjump.eq\t@.BB3_1\n.BB3_7:\n\tret\n.BB3_1:\n\tadd\tr0, r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.func_end3:\n\nfun_transferOwnership:\n.func_begin4:\n\tadd\tr1, r0, r6\n\tand\t@CPI4_0[0], r6, r1\n\tadd\t5, r0, r2\n\tsload\tr2, r3\n\tand\t@CPI4_1[0], r3, r4\n\tor\tr4, r1, r1\n\tsstore\tr2, r1\n\tld.1\t64, r1\n\tadd\t@CPI4_2[0], r0, r2\n\tcontext.gas_left\tr4\n\tsub.s!\t@CPI4_2[0], r4, r5\n\tadd.ge\tr2, r0, r4\n\tsub.s!\t@CPI4_2[0], r1, r5\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tshl.s\t192, r4, r2\n\tor\tr2, r1, r1\n\tand\t@CPI4_0[0], r3, r5\n\tor\t@CPI4_3[0], r1, r1\n\tadd\t32781, r0, r2\n\tadd\t3, r0, r3\n\tadd\t@CPI4_4[0], r0, r4\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r1\n\tjump.eq\t@.BB4_1\n\tret\n.BB4_1:\n\tadd\tr0, r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.func_end4:\n\nfun_mint:\n.func_begin5:\n\tnop\tstack+=[1]\n\tand!\t@CPI5_0[0], r1, r5\n\tjump.eq\t@.BB5_1\n\tadd\tr1, r0, stack-[1]\n\tadd\t2, r0, r2\n\tsload\tr2, r3\n\tsub.s!\t@CPI5_1[0], r3, r4\n\tjump.ge\t@.BB5_3\n\tadd\t@CPI5_2[0], r3, r3\n\tsstore\tr2, r3\n\tst.1\t0, r5\n\tst.1\t32, r0\n\tadd\t@CPI5_3[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI5_3[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI5_4[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB5_5\n\tld\tr1, r1\n\tsload\tr1, r2\n\tadd\t@CPI5_2[0], r2, r2\n\tsstore\tr1, r2\n\tadd\t@CPI5_2[0], r0, r1\n\tld.1\t64, r2\n\tst.1\tr2, r1\n\tadd\t@CPI5_3[0], r0, r1\n\tcontext.gas_left\tr3\n\tsub.s!\t@CPI5_3[0], r3, r4\n\tadd.ge\tr1, r0, r3\n\tsub.s!\t@CPI5_3[0], r2, r4\n\tadd.lt\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tshl.s\t192, r3, r2\n\tor\tr2, r1, r1\n\tor\t@CPI5_5[0], r1, r1\n\tadd\t32781, r0, r2\n\tadd\t3, r0, r3\n\tadd\t@CPI5_6[0], r0, r4\n\tadd\tr0, r0, r5\n\tadd\tstack-[1], r0, r6\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r1\n\tjump.eq\t@.BB5_5\n\tret\n.BB5_5:\n\tadd\tr0, r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB5_1:\n\tld.1\t64, r1\n\tadd\t68, r1, r2\n\tadd\t@CPI5_9[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t36, r1, r2\n\tadd\t31, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI5_10[0], r0, r2\n\tst.1\tr1, r2\n\tadd\t4, r1, r2\n\tadd\t32, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI5_3[0], r0, r2\n\tsub.s!\t@CPI5_3[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI5_11[0], r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB5_3:\n\tadd\t@CPI5_7[0], r0, r1\n\tst.1\t0, r1\n\tadd\t17, r0, r1\n\tst.1\t4, r1\n\tadd\t@CPI5_8[0], r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.func_end5:\n\nabi_decode_bytes4:\n.func_begin6:\n\tsub.s\t4, r1, r1\n\tadd\t@CPI6_0[0], r0, r2\n\tsub.s!\t31, r1, r3\n\tadd\tr0, r0, r3\n\tadd.gt\tr2, r0, r3\n\tand\t@CPI6_0[0], r1, r1\n\tsub!\tr1, r0, r4\n\tadd.ge\tr0, r0, r2\n\tsub.s!\t@CPI6_0[0], r1, r1\n\tadd\tr3, r0, r1\n\tadd.eq\tr2, r0, r1\n\tsub!\tr1, r0, r1\n\tjump.eq\t@.BB6_1\n\tadd\t4, r0, r1\n\tptr.add\tstack[@ptr_calldata], r1, r1\n\tld\tr1, r1\n\tand\t@CPI6_1[0], r1, r2\n\tsub!\tr1, r2, r2\n\tjump.ne\t@.BB6_1\n\tret\n.BB6_1:\n\tadd\tr0, r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.func_end6:\n\nabi_encode_string:\n.func_begin7:\n\tadd\t32, r0, r3\n\tst.1.inc\tr1, r3, r4\n\tld.1\tr2, r3\n\tst.1\tr4, r3\n\tadd\t64, r1, r1\n\tsub!\tr3, r0, r4\n\tjump.eq\t@.BB7_5\n\tadd\tr0, r0, r4\n.BB7_2:\n\tadd\tr4, r1, r5\n\tadd\t32, r4, r4\n\tadd\tr4, r2, r6\n\tld.1\tr6, r6\n\tst.1\tr5, r6\n\tsub!\tr4, r3, r5\n\tjump.lt\t@.BB7_2\n\tsub!\tr4, r3, r2\n\tjump.le\t@.BB7_5\n\tadd\tr3, r1, r2\n\tst.1\tr2, r0\n.BB7_5:\n\tadd\t31, r3, r2\n\tsub.s\t32, r0, r3\n\tand\tr2, r3, r2\n\tadd\tr1, r2, r1\n\tret\n.func_end7:\n\nabi_decode_addresst_uint256:\n.func_begin8:\n\tsub.s\t4, r1, r1\n\tadd\t@CPI8_0[0], r0, r2\n\tsub.s!\t63, r1, r3\n\tadd\tr0, r0, r3\n\tadd.gt\tr2, r0, r3\n\tand\t@CPI8_0[0], r1, r1\n\tsub!\tr1, r0, r4\n\tadd.ge\tr0, r0, r2\n\tsub.s!\t@CPI8_0[0], r1, r1\n\tadd\tr3, r0, r1\n\tadd.eq\tr2, r0, r1\n\tsub!\tr1, r0, r1\n\tjump.eq\t@.BB8_1\n\tptr.add\tstack[@ptr_calldata], r0, r2\n\tptr.add.s\t4, r2, r1\n\tld\tr1, r1\n\tsub.s!\t@CPI8_1[0], r1, r3\n\tjump.gt\t@.BB8_1\n\tptr.add.s\t36, r2, r2\n\tld\tr2, r2\n\tret\n.BB8_1:\n\tadd\tr0, r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.func_end8:\n\nabi_decode_addresst_addresst_uint256:\n.func_begin9:\n\tsub.s\t4, r1, r1\n\tadd\t@CPI9_0[0], r0, r2\n\tsub.s!\t95, r1, r3\n\tadd\tr0, r0, r3\n\tadd.gt\tr2, r0, r3\n\tand\t@CPI9_0[0], r1, r1\n\tsub!\tr1, r0, r4\n\tadd.ge\tr0, r0, r2\n\tsub.s!\t@CPI9_0[0], r1, r1\n\tadd\tr3, r0, r1\n\tadd.eq\tr2, r0, r1\n\tsub!\tr1, r0, r1\n\tjump.eq\t@.BB9_1\n\tptr.add\tstack[@ptr_calldata], r0, r3\n\tptr.add.s\t4, r3, r1\n\tld\tr1, r1\n\tsub.s!\t@CPI9_1[0], r1, r2\n\tjump.gt\t@.BB9_1\n\tptr.add.s\t36, r3, r2\n\tld\tr2, r2\n\tsub.s!\t@CPI9_1[0], r2, r4\n\tjump.gt\t@.BB9_1\n\tptr.add.s\t68, r3, r3\n\tld\tr3, r3\n\tret\n.BB9_1:\n\tadd\tr0, r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.func_end9:\n\nabi_decode_bytes32t_address:\n.func_begin10:\n\tsub.s\t4, r1, r1\n\tadd\t@CPI10_0[0], r0, r2\n\tsub.s!\t63, r1, r3\n\tadd\tr0, r0, r3\n\tadd.gt\tr2, r0, r3\n\tand\t@CPI10_0[0], r1, r1\n\tsub!\tr1, r0, r4\n\tadd.ge\tr0, r0, r2\n\tsub.s!\t@CPI10_0[0], r1, r1\n\tadd\tr3, r0, r1\n\tadd.eq\tr2, r0, r1\n\tsub!\tr1, r0, r1\n\tjump.eq\t@.BB10_1\n\tptr.add\tstack[@ptr_calldata], r0, r1\n\tptr.add.s\t36, r1, r2\n\tld\tr2, r2\n\tsub.s!\t@CPI10_1[0], r2, r3\n\tjump.gt\t@.BB10_1\n\tptr.add.s\t4, r1, r1\n\tld\tr1, r1\n\tret\n.BB10_1:\n\tadd\tr0, r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.func_end10:\n\nabi_decode_address:\n.func_begin11:\n\tsub.s\t4, r1, r1\n\tadd\t@CPI11_0[0], r0, r2\n\tsub.s!\t31, r1, r3\n\tadd\tr0, r0, r3\n\tadd.gt\tr2, r0, r3\n\tand\t@CPI11_0[0], r1, r1\n\tsub!\tr1, r0, r4\n\tadd.ge\tr0, r0, r2\n\tsub.s!\t@CPI11_0[0], r1, r1\n\tadd\tr3, r0, r1\n\tadd.eq\tr2, r0, r1\n\tsub!\tr1, r0, r1\n\tjump.eq\t@.BB11_1\n\tadd\t4, r0, r1\n\tptr.add\tstack[@ptr_calldata], r1, r1\n\tld\tr1, r1\n\tsub.s!\t@CPI11_1[0], r1, r2\n\tjump.gt\t@.BB11_1\n\tret\n.BB11_1:\n\tadd\tr0, r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.func_end11:\n\nabi_decode_addresst_address:\n.func_begin12:\n\tsub.s\t4, r1, r1\n\tadd\t@CPI12_0[0], r0, r2\n\tsub.s!\t63, r1, r3\n\tadd\tr0, r0, r3\n\tadd.gt\tr2, r0, r3\n\tand\t@CPI12_0[0], r1, r1\n\tsub!\tr1, r0, r4\n\tadd.ge\tr0, r0, r2\n\tsub.s!\t@CPI12_0[0], r1, r1\n\tadd\tr3, r0, r1\n\tadd.eq\tr2, r0, r1\n\tsub!\tr1, r0, r1\n\tjump.eq\t@.BB12_1\n\tptr.add\tstack[@ptr_calldata], r0, r2\n\tptr.add.s\t4, r2, r1\n\tld\tr1, r1\n\tsub.s!\t@CPI12_1[0], r1, r3\n\tjump.gt\t@.BB12_1\n\tptr.add.s\t36, r2, r2\n\tld\tr2, r2\n\tsub.s!\t@CPI12_1[0], r2, r3\n\tjump.gt\t@.BB12_1\n\tret\n.BB12_1:\n\tadd\tr0, r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.func_end12:\n\nmapping_index_access_mapping_bytes32_struct_RoleData_storage_of_bytes32:\n.func_begin13:\n\tst.1\t0, r1\n\tadd\t6, r0, r1\n\tst.1\t32, r1\n\tadd\t@CPI13_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI13_0[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI13_1[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB13_1\n\tld\tr1, r1\n\tret\n.BB13_1:\n\tadd\tr0, r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.func_end13:\n\nmapping_index_access_mapping_address_bool_of_address_5230:\n.func_begin14:\n\tand\t@CPI14_0[0], r1, r1\n\tst.1\t0, r1\n\tadd\t1, r0, r1\n\tst.1\t32, r1\n\tadd\t@CPI14_1[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI14_1[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI14_2[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB14_1\n\tld\tr1, r1\n\tret\n.BB14_1:\n\tadd\tr0, r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.func_end14:\n\nmapping_index_access_mapping_address_bool_of_address.2:\n.func_begin15:\n\tand\t@CPI15_0[0], r2, r2\n\tst.1\t0, r2\n\tst.1\t32, r1\n\tadd\t@CPI15_1[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI15_1[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI15_2[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB15_1\n\tld\tr1, r1\n\tret\n.BB15_1:\n\tadd\tr0, r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.func_end15:\n\nfun_getRoleAdmin:\n.func_begin16:\n\tst.1\t0, r1\n\tadd\t6, r0, r1\n\tst.1\t32, r1\n\tadd\t@CPI16_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI16_0[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI16_1[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB16_1\n\tld\tr1, r1\n\tadd\t1, r1, r1\n\tsload\tr1, r1\n\tret\n.BB16_1:\n\tadd\tr0, r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.func_end16:\n\nmodifier_onlyRole:\n.func_begin17:\n\tnop\tstack+=[5]\n\tadd\tr2, r0, stack-[3]\n\tadd\tr1, r0, stack-[4]\n\tst.1\t0, r1\n\tadd\t6, r0, r1\n\tadd\tr1, r0, stack-[5]\n\tst.1\t32, r1\n\tadd\t@CPI17_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI17_0[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI17_1[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB17_1\n\tld\tr1, r1\n\tadd\t1, r1, r1\n\tsload\tr1, r1\n\tadd\tr1, r0, stack-[1]\n\tst.1\t0, r1\n\tadd\tstack-[5], r0, r1\n\tst.1\t32, r1\n\tadd\t@CPI17_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI17_0[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI17_1[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB17_1\n\tcontext.caller\tr2\n\tld\tr1, r1\n\tadd\tr2, r0, stack-[2]\n\tand\t@CPI17_2[0], r2, r2\n\tst.1\t0, r2\n\tst.1\t32, r1\n\tadd\t@CPI17_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI17_0[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI17_1[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB17_1\n\tld\tr1, r1\n\tsload\tr1, r1\n\tand!\t255, r1, r1\n\tjump.eq\t@.BB17_5\n\tadd\tstack-[4], r0, r1\n\tst.1\t0, r1\n\tadd\tstack-[5], r0, r1\n\tst.1\t32, r1\n\tadd\t@CPI17_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI17_0[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI17_1[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB17_1\n\tld\tr1, r1\n\tadd\tstack-[3], r0, r2\n\tand\t@CPI17_2[0], r2, r2\n\tadd\tr2, r0, stack-[1]\n\tst.1\t0, r2\n\tst.1\t32, r1\n\tadd\t@CPI17_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI17_0[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI17_1[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB17_1\n\tld\tr1, r1\n\tsload\tr1, r1\n\tand!\t255, r1, r1\n\tjump.ne\t@.BB17_22\n\tadd\tstack-[4], r0, r1\n\tst.1\t0, r1\n\tadd\tstack-[5], r0, r1\n\tst.1\t32, r1\n\tadd\t@CPI17_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI17_0[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI17_1[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB17_1\n\tld\tr1, r1\n\tadd\tstack-[1], r0, r2\n\tst.1\t0, r2\n\tst.1\t32, r1\n\tadd\t@CPI17_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI17_0[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI17_1[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB17_1\n\tld\tr1, r1\n\tsload\tr1, r2\n\tsub.s\t256, r0, r3\n\tand\tr2, r3, r2\n\tor\t1, r2, r2\n\tsstore\tr1, r2\n\tld.1\t64, r1\n\tadd\t@CPI17_0[0], r0, r2\n\tcontext.gas_left\tr3\n\tsub.s!\t@CPI17_0[0], r3, r4\n\tadd.ge\tr2, r0, r3\n\tsub.s!\t@CPI17_0[0], r1, r4\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tshl.s\t192, r3, r2\n\tor\tr2, r1, r1\n\tor\t@CPI17_3[0], r1, r1\n\tadd\t32781, r0, r2\n\tadd\t4, r0, r3\n\tadd\t@CPI17_4[0], r0, r4\n\tadd\tstack-[4], r0, r5\n\tadd\tstack-[3], r0, r6\n\tadd\tstack-[2], r0, r7\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r1\n\tjump.eq\t@.BB17_1\n.BB17_22:\n\tret\n.BB17_1:\n\tadd\tr0, r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB17_5:\n\tld.1\t64, r1\n\tadd\tr1, r0, r7\n\tsub.s!\t@CPI17_5[0], r1, r1\n\tjump.lt\t@.BB17_7\n\tadd\t@CPI17_13[0], r0, r1\n\tst.1\t0, r1\n\tadd\t65, r0, r1\n\tst.1\t4, r1\n\tadd\t@CPI17_14[0], r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB17_7:\n\tadd\tr7, r0, r2\n\tadd\t96, r2, r1\n\tst.1\t64, r1\n\tadd\t42, r0, r1\n\tst.1.inc\tr2, r1, r1\n\tadd\tstack[@calldatasize], r0, r2\n\tptr.add\tstack[@ptr_calldata], r2, r2\n\tadd\tr0, r0, r3\n.BB17_8:\n\tshl.s\t5, r3, r4\n\tadd\tr1, r4, r5\n\tptr.add\tr2, r4, r4\n\tld\tr4, r4\n\tst.1\tr5, r4\n\tadd\t1, r3, r3\n\tsub.s!\t2, r3, r4\n\tjump.lt\t@.BB17_8\n\tld.1\tr7, r2\n\tsub!\tr2, r0, r2\n\tjump.eq\t@.BB17_10\n\tld.1\tr1, r2\n\tand\t@CPI17_6[0], r2, r2\n\tor\t@CPI17_7[0], r2, r2\n\tst.1\tr1, r2\n\tld.1\tr7, r2\n\tsub.s!\t2, r2, r2\n\tjump.ge\t@.BB17_12\n.BB17_10:\n\tadd\t@CPI17_13[0], r0, r1\n\tst.1\t0, r1\n\tadd\t50, r0, r1\n\tst.1\t4, r1\n\tadd\t@CPI17_14[0], r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB17_12:\n\tadd\t33, r7, r2\n\tld.1\tr2, r3\n\tand\t@CPI17_6[0], r3, r3\n\tor\t@CPI17_8[0], r3, r3\n\tst.1\tr2, r3\n\tadd\t41, r0, r2\n\tadd\tstack-[2], r0, r5\n.BB17_13:\n\tadd\tr5, r0, r3\n\tld.1\tr7, r4\n\tsub!\tr4, r2, r4\n\tjump.le\t@.BB17_10\n\tand\t15, r3, r4\n\tshl.s\t3, r4, r4\n\txor\t248, r4, r4\n\tadd\t@CPI17_9[0], r0, r5\n\tshr\tr5, r4, r4\n\tadd\tr2, r1, r5\n\tld.1\tr5, r6\n\tand\t@CPI17_6[0], r6, r6\n\tshl.s\t248, r4, r4\n\tor\tr6, r4, r4\n\tst.1\tr5, r4\n\tshr.s\t4, r3, r5\n\tsub.s\t1, r2, r2\n\tsub.s!\t1, r2, r4\n\tjump.gt\t@.BB17_13\n\tsub.s!\t16, r3, r1\n\tadd\t0, r0, r1\n\tadd.lt\t1, r0, r1\n\tadd\tr7, r0, stack-[4]\n\tnear_call\tr0, @require_helper_stringliteral_04fc, @DEFAULT_UNWIND\n\tadd\tstack-[1], r0, r1\n\tnear_call\tr0, @fun_toHexString, @DEFAULT_UNWIND\n\tld.1\t64, r4\n\tadd\tr4, r0, stack-[5]\n\tadd\t32, r4, r2\n\tadd\t@CPI17_10[0], r0, r3\n\tst.1\tr2, r3\n\tadd\tr1, r0, stack-[3]\n\tadd\t55, r4, r2\n\tadd\tstack-[4], r0, r1\n\tnear_call\tr0, @abi_encode_string_memory_ptr, @DEFAULT_UNWIND\n\tadd\t@CPI17_11[0], r0, r2\n\tst.1\tr1, r2\n\tadd\t17, r1, r2\n\tadd\tstack-[3], r0, r1\n\tnear_call\tr0, @abi_encode_string_memory_ptr, @DEFAULT_UNWIND\n\tadd\tstack-[5], r0, r3\n\tsub\tr1, r3, r2\n\tsub.s\t32, r2, r1\n\tst.1\tr3, r1\n\tadd\tr3, r0, r1\n\tnear_call\tr0, @finalize_allocation, @DEFAULT_UNWIND\n\tadd\t@CPI17_12[0], r0, r1\n\tld.1\t64, r2\n\tadd\tr2, r0, stack-[4]\n\tst.1\tr2, r1\n\tadd\t4, r2, r1\n\tadd\tstack-[5], r0, r2\n\tnear_call\tr0, @abi_encode_string, @DEFAULT_UNWIND\n\tadd\tstack-[4], r0, r4\n\tsub\tr1, r4, r1\n\tadd\t@CPI17_0[0], r0, r2\n\tsub.s!\t@CPI17_0[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tsub.s!\t@CPI17_0[0], r4, r3\n\tadd.lt\tr4, r0, r2\n\tshl.s\t64, r2, r2\n\tshl.s\t96, r1, r1\n\tor\tr1, r2, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.func_end17:\n\nabi_encode_string_memory_ptr:\n.func_begin18:\n\tadd\tr1, r0, r3\n\tld.1\tr3, r4\n\tsub!\tr4, r0, r1\n\tadd\tr4, r2, r1\n\tjump.eq\t@.BB18_5\n\tadd\tr0, r0, r5\n.BB18_2:\n\tadd\tr5, r2, r6\n\tadd\t32, r5, r5\n\tadd\tr5, r3, r7\n\tld.1\tr7, r7\n\tst.1\tr6, r7\n\tsub!\tr5, r4, r6\n\tjump.lt\t@.BB18_2\n\tsub!\tr5, r4, r2\n\tjump.le\t@.BB18_5\n\tst.1\tr1, r0\n.BB18_5:\n\tret\n.func_end18:\n\nfinalize_allocation:\n.func_begin19:\n\tadd\t31, r2, r2\n\tsub.s\t32, r0, r3\n\tand\tr2, r3, r2\n\tadd\tr2, r1, r1\n\tsub!\tr1, r2, r2\n\tadd\t0, r0, r2\n\tadd.lt\t1, r0, r2\n\tsub.s!\t@CPI19_0[0], r1, r3\n\tjump.gt\t@.BB19_2\n\tand!\t1, r2, r2\n\tjump.ne\t@.BB19_2\n\tst.1\t64, r1\n\tret\n.BB19_2:\n\tadd\t@CPI19_1[0], r0, r1\n\tst.1\t0, r1\n\tadd\t65, r0, r1\n\tst.1\t4, r1\n\tadd\t@CPI19_2[0], r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.func_end19:\n\nmodifier_onlyRole_178:\n.func_begin20:\n\tnop\tstack+=[5]\n\tadd\tr2, r0, stack-[3]\n\tadd\tr1, r0, stack-[4]\n\tst.1\t0, r1\n\tadd\t6, r0, r1\n\tadd\tr1, r0, stack-[5]\n\tst.1\t32, r1\n\tadd\t@CPI20_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI20_0[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI20_1[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB20_1\n\tld\tr1, r1\n\tadd\t1, r1, r1\n\tsload\tr1, r1\n\tadd\tr1, r0, stack-[1]\n\tst.1\t0, r1\n\tadd\tstack-[5], r0, r1\n\tst.1\t32, r1\n\tadd\t@CPI20_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI20_0[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI20_1[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB20_1\n\tcontext.caller\tr2\n\tld\tr1, r1\n\tadd\tr2, r0, stack-[2]\n\tand\t@CPI20_2[0], r2, r2\n\tst.1\t0, r2\n\tst.1\t32, r1\n\tadd\t@CPI20_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI20_0[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI20_1[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB20_1\n\tld\tr1, r1\n\tsload\tr1, r1\n\tand!\t255, r1, r1\n\tjump.eq\t@.BB20_5\n\tadd\tstack-[4], r0, r1\n\tst.1\t0, r1\n\tadd\tstack-[5], r0, r1\n\tst.1\t32, r1\n\tadd\t@CPI20_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI20_0[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI20_1[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB20_1\n\tld\tr1, r1\n\tadd\tstack-[3], r0, r2\n\tand\t@CPI20_2[0], r2, r2\n\tadd\tr2, r0, stack-[1]\n\tst.1\t0, r2\n\tst.1\t32, r1\n\tadd\t@CPI20_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI20_0[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI20_1[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB20_1\n\tld\tr1, r1\n\tsload\tr1, r1\n\tand!\t255, r1, r1\n\tjump.eq\t@.BB20_22\n\tadd\tstack-[4], r0, r1\n\tst.1\t0, r1\n\tadd\tstack-[5], r0, r1\n\tst.1\t32, r1\n\tadd\t@CPI20_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI20_0[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI20_1[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB20_1\n\tld\tr1, r1\n\tadd\tstack-[1], r0, r2\n\tst.1\t0, r2\n\tst.1\t32, r1\n\tadd\t@CPI20_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI20_0[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI20_1[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB20_1\n\tld\tr1, r1\n\tsload\tr1, r2\n\tsub.s\t256, r0, r3\n\tand\tr2, r3, r2\n\tsstore\tr1, r2\n\tld.1\t64, r1\n\tadd\t@CPI20_0[0], r0, r2\n\tcontext.gas_left\tr3\n\tsub.s!\t@CPI20_0[0], r3, r4\n\tadd.ge\tr2, r0, r3\n\tsub.s!\t@CPI20_0[0], r1, r4\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tshl.s\t192, r3, r2\n\tor\tr2, r1, r1\n\tor\t@CPI20_3[0], r1, r1\n\tadd\t32781, r0, r2\n\tadd\t4, r0, r3\n\tadd\t@CPI20_4[0], r0, r4\n\tadd\tstack-[4], r0, r5\n\tadd\tstack-[3], r0, r6\n\tadd\tstack-[2], r0, r7\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r1\n\tjump.eq\t@.BB20_1\n.BB20_22:\n\tret\n.BB20_1:\n\tadd\tr0, r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB20_5:\n\tld.1\t64, r1\n\tadd\tr1, r0, r7\n\tsub.s!\t@CPI20_5[0], r1, r1\n\tjump.lt\t@.BB20_7\n\tadd\t@CPI20_13[0], r0, r1\n\tst.1\t0, r1\n\tadd\t65, r0, r1\n\tst.1\t4, r1\n\tadd\t@CPI20_14[0], r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB20_7:\n\tadd\tr7, r0, r2\n\tadd\t96, r2, r1\n\tst.1\t64, r1\n\tadd\t42, r0, r1\n\tst.1.inc\tr2, r1, r1\n\tadd\tstack[@calldatasize], r0, r2\n\tptr.add\tstack[@ptr_calldata], r2, r2\n\tadd\tr0, r0, r3\n.BB20_8:\n\tshl.s\t5, r3, r4\n\tadd\tr1, r4, r5\n\tptr.add\tr2, r4, r4\n\tld\tr4, r4\n\tst.1\tr5, r4\n\tadd\t1, r3, r3\n\tsub.s!\t2, r3, r4\n\tjump.lt\t@.BB20_8\n\tld.1\tr7, r2\n\tsub!\tr2, r0, r2\n\tjump.eq\t@.BB20_10\n\tld.1\tr1, r2\n\tand\t@CPI20_6[0], r2, r2\n\tor\t@CPI20_7[0], r2, r2\n\tst.1\tr1, r2\n\tld.1\tr7, r2\n\tsub.s!\t2, r2, r2\n\tjump.ge\t@.BB20_12\n.BB20_10:\n\tadd\t@CPI20_13[0], r0, r1\n\tst.1\t0, r1\n\tadd\t50, r0, r1\n\tst.1\t4, r1\n\tadd\t@CPI20_14[0], r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB20_12:\n\tadd\t33, r7, r2\n\tld.1\tr2, r3\n\tand\t@CPI20_6[0], r3, r3\n\tor\t@CPI20_8[0], r3, r3\n\tst.1\tr2, r3\n\tadd\t41, r0, r2\n\tadd\tstack-[2], r0, r5\n.BB20_13:\n\tadd\tr5, r0, r3\n\tld.1\tr7, r4\n\tsub!\tr4, r2, r4\n\tjump.le\t@.BB20_10\n\tand\t15, r3, r4\n\tshl.s\t3, r4, r4\n\txor\t248, r4, r4\n\tadd\t@CPI20_9[0], r0, r5\n\tshr\tr5, r4, r4\n\tadd\tr2, r1, r5\n\tld.1\tr5, r6\n\tand\t@CPI20_6[0], r6, r6\n\tshl.s\t248, r4, r4\n\tor\tr6, r4, r4\n\tst.1\tr5, r4\n\tshr.s\t4, r3, r5\n\tsub.s\t1, r2, r2\n\tsub.s!\t1, r2, r4\n\tjump.gt\t@.BB20_13\n\tsub.s!\t16, r3, r1\n\tadd\t0, r0, r1\n\tadd.lt\t1, r0, r1\n\tadd\tr7, r0, stack-[4]\n\tnear_call\tr0, @require_helper_stringliteral_04fc, @DEFAULT_UNWIND\n\tadd\tstack-[1], r0, r1\n\tnear_call\tr0, @fun_toHexString, @DEFAULT_UNWIND\n\tld.1\t64, r4\n\tadd\tr4, r0, stack-[5]\n\tadd\t32, r4, r2\n\tadd\t@CPI20_10[0], r0, r3\n\tst.1\tr2, r3\n\tadd\tr1, r0, stack-[3]\n\tadd\t55, r4, r2\n\tadd\tstack-[4], r0, r1\n\tnear_call\tr0, @abi_encode_string_memory_ptr, @DEFAULT_UNWIND\n\tadd\t@CPI20_11[0], r0, r2\n\tst.1\tr1, r2\n\tadd\t17, r1, r2\n\tadd\tstack-[3], r0, r1\n\tnear_call\tr0, @abi_encode_string_memory_ptr, @DEFAULT_UNWIND\n\tadd\tstack-[5], r0, r3\n\tsub\tr1, r3, r2\n\tsub.s\t32, r2, r1\n\tst.1\tr3, r1\n\tadd\tr3, r0, r1\n\tnear_call\tr0, @finalize_allocation, @DEFAULT_UNWIND\n\tadd\t@CPI20_12[0], r0, r1\n\tld.1\t64, r2\n\tadd\tr2, r0, stack-[4]\n\tst.1\tr2, r1\n\tadd\t4, r2, r1\n\tadd\tstack-[5], r0, r2\n\tnear_call\tr0, @abi_encode_string, @DEFAULT_UNWIND\n\tadd\tstack-[4], r0, r4\n\tsub\tr1, r4, r1\n\tadd\t@CPI20_0[0], r0, r2\n\tsub.s!\t@CPI20_0[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tsub.s!\t@CPI20_0[0], r4, r3\n\tadd.lt\tr4, r0, r2\n\tshl.s\t64, r2, r2\n\tshl.s\t96, r1, r1\n\tor\tr1, r2, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.func_end20:\n\nfun_renounceRole:\n.func_begin21:\n\tnop\tstack+=[4]\n\tadd\tr2, r0, stack-[1]\n\tand\t@CPI21_0[0], r2, r3\n\tcontext.caller\tr2\n\tadd\tr2, r0, stack-[4]\n\tsub!\tr3, r2, r2\n\tjump.ne\t@.BB21_1\n\tadd\tr1, r0, stack-[3]\n\tst.1\t0, r1\n\tadd\t6, r0, r1\n\tadd\tr1, r0, stack-[2]\n\tst.1\t32, r1\n\tadd\t@CPI21_4[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI21_4[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI21_6[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB21_3\n\tld\tr1, r1\n\tadd\tstack-[4], r0, r2\n\tst.1\t0, r2\n\tst.1\t32, r1\n\tadd\t@CPI21_4[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI21_4[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI21_6[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB21_3\n\tld\tr1, r1\n\tsload\tr1, r1\n\tand!\t255, r1, r1\n\tjump.eq\t@.BB21_9\n\tadd\tstack-[3], r0, r1\n\tst.1\t0, r1\n\tadd\tstack-[2], r0, r1\n\tst.1\t32, r1\n\tadd\t@CPI21_4[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI21_4[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI21_6[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB21_3\n\tld\tr1, r1\n\tadd\tstack-[4], r0, r2\n\tst.1\t0, r2\n\tst.1\t32, r1\n\tadd\t@CPI21_4[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI21_4[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI21_6[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB21_3\n\tld\tr1, r1\n\tsload\tr1, r2\n\tsub.s\t256, r0, r3\n\tand\tr2, r3, r2\n\tsstore\tr1, r2\n\tld.1\t64, r1\n\tadd\t@CPI21_4[0], r0, r2\n\tcontext.gas_left\tr3\n\tsub.s!\t@CPI21_4[0], r3, r4\n\tadd.ge\tr2, r0, r3\n\tsub.s!\t@CPI21_4[0], r1, r4\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tshl.s\t192, r3, r2\n\tor\tr2, r1, r1\n\tor\t@CPI21_7[0], r1, r1\n\tadd\t32781, r0, r2\n\tadd\t4, r0, r3\n\tadd\t@CPI21_8[0], r0, r4\n\tadd\tstack-[3], r0, r5\n\tadd\tstack-[1], r0, r6\n\tadd\tstack-[4], r0, r7\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r1\n\tjump.eq\t@.BB21_3\n.BB21_9:\n\tret\n.BB21_3:\n\tadd\tr0, r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB21_1:\n\tld.1\t64, r1\n\tadd\t100, r1, r2\n\tadd\t@CPI21_1[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t68, r1, r2\n\tadd\t@CPI21_2[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t36, r1, r2\n\tadd\t47, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI21_3[0], r0, r2\n\tst.1\tr1, r2\n\tadd\t4, r1, r2\n\tadd\t32, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI21_4[0], r0, r2\n\tsub.s!\t@CPI21_4[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI21_5[0], r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.func_end21:\n\nmodifier_onlyOwner_447:\n.func_begin22:\n\tadd\t5, r0, r1\n\tsload\tr1, r2\n\tand\t@CPI22_0[0], r2, r5\n\tcontext.caller\tr3\n\tsub!\tr5, r3, r3\n\tjump.ne\t@.BB22_1\n\tand\t@CPI22_5[0], r2, r2\n\tsstore\tr1, r2\n\tld.1\t64, r1\n\tadd\t@CPI22_3[0], r0, r2\n\tcontext.gas_left\tr3\n\tsub.s!\t@CPI22_3[0], r3, r4\n\tadd.ge\tr2, r0, r3\n\tsub.s!\t@CPI22_3[0], r1, r4\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tshl.s\t192, r3, r2\n\tor\tr2, r1, r1\n\tor\t@CPI22_6[0], r1, r1\n\tadd\t32781, r0, r2\n\tadd\t3, r0, r3\n\tadd\t@CPI22_7[0], r0, r4\n\tadd\tr0, r0, r6\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r1\n\tjump.eq\t@.BB22_3\n\tret\n.BB22_1:\n\tld.1\t64, r1\n\tadd\t68, r1, r2\n\tadd\t@CPI22_1[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI22_2[0], r0, r2\n\tst.1\tr1, r2\n\tadd\t36, r1, r2\n\tadd\t32, r0, r3\n\tst.1\tr2, r3\n\tadd\t4, r1, r2\n\tst.1\tr2, r3\n\tadd\t@CPI22_3[0], r0, r2\n\tsub.s!\t@CPI22_3[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI22_4[0], r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB22_3:\n\tadd\tr0, r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.func_end22:\n\nmodifier_onlyOwner:\n.func_begin23:\n\tadd\tr1, r0, r6\n\tadd\t5, r0, r1\n\tsload\tr1, r2\n\tand\t@CPI23_0[0], r2, r5\n\tcontext.caller\tr3\n\tsub!\tr5, r3, r3\n\tjump.ne\t@.BB23_1\n\tand!\t@CPI23_0[0], r6, r3\n\tjump.eq\t@.BB23_3\n\tand\t@CPI23_5[0], r2, r2\n\tor\tr2, r3, r2\n\tsstore\tr1, r2\n\tld.1\t64, r1\n\tadd\t@CPI23_3[0], r0, r2\n\tcontext.gas_left\tr3\n\tsub.s!\t@CPI23_3[0], r3, r4\n\tadd.ge\tr2, r0, r3\n\tsub.s!\t@CPI23_3[0], r1, r4\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tshl.s\t192, r3, r2\n\tor\tr2, r1, r1\n\tor\t@CPI23_6[0], r1, r1\n\tadd\t32781, r0, r2\n\tadd\t3, r0, r3\n\tadd\t@CPI23_7[0], r0, r4\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r1\n\tjump.eq\t@.BB23_5\n\tret\n.BB23_1:\n\tld.1\t64, r1\n\tadd\t68, r1, r2\n\tadd\t@CPI23_1[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI23_2[0], r0, r2\n\tst.1\tr1, r2\n\tadd\t36, r1, r2\n\tadd\t32, r0, r3\n\tst.1\tr2, r3\n\tadd\t4, r1, r2\n\tst.1\tr2, r3\n\tadd\t@CPI23_3[0], r0, r2\n\tsub.s!\t@CPI23_3[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI23_4[0], r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB23_3:\n\tld.1\t64, r1\n\tadd\t100, r1, r2\n\tadd\t@CPI23_8[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t68, r1, r2\n\tadd\t@CPI23_9[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t36, r1, r2\n\tadd\t38, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI23_2[0], r0, r2\n\tst.1\tr1, r2\n\tadd\t4, r1, r2\n\tadd\t32, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI23_3[0], r0, r2\n\tsub.s!\t@CPI23_3[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI23_10[0], r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB23_5:\n\tadd\tr0, r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.func_end23:\n\ncopy_array_from_storage_to_memory_string_5202:\n.func_begin24:\n\tadd\t3, r0, r5\n\tsload\tr5, r4\n\tand!\t1, r4, r6\n\tshr.s\t1, r4, r1\n\tand\t127, r1, r2\n\tadd.ne\tr1, r0, r2\n\tsub.s!\t31, r2, r1\n\tadd\t0, r0, r1\n\tadd.gt\t1, r0, r1\n\tand\t1, r1, r1\n\tsub!\tr6, r1, r1\n\tjump.ne\t@.BB24_1\n\tld.1\t64, r1\n\tst.1.inc\tr1, r2, r3\n\tsub!\tr6, r0, r6\n\tjump.ne\t@.BB24_9\n\tsub.s\t256, r0, r2\n\tand\tr4, r2, r2\n\tst.1\tr3, r2\n\tadd\t64, r0, r4\n\tjump\t@.BB24_4\n.BB24_9:\n\tst.1\t0, r5\n\tadd\t32, r0, r4\n\tsub!\tr2, r0, r5\n\tjump.eq\t@.BB24_4\n\tadd\t@CPI24_0[0], r0, r4\n\tadd\tr0, r0, r6\n.BB24_11:\n\tadd\tr6, r0, r5\n\tadd\tr5, r3, r6\n\tsload\tr4, r7\n\tst.1\tr6, r7\n\tadd\t1, r4, r4\n\tadd\t32, r5, r6\n\tsub!\tr6, r2, r7\n\tjump.lt\t@.BB24_11\n\tadd\t95, r5, r2\n\tsub.s\t32, r0, r3\n\tand\tr2, r3, r4\n.BB24_4:\n\tadd\tr4, r1, r2\n\tsub!\tr2, r4, r3\n\tadd\t0, r0, r3\n\tadd.lt\t1, r0, r3\n\tsub.s!\t@CPI24_1[0], r2, r4\n\tjump.gt\t@.BB24_6\n\tand!\t1, r3, r3\n\tjump.ne\t@.BB24_6\n\tst.1\t64, r2\n\tret\n.BB24_1:\n\tadd\t@CPI24_2[0], r0, r1\n\tst.1\t0, r1\n\tadd\t34, r0, r1\n\tst.1\t4, r1\n\tadd\t@CPI24_3[0], r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB24_6:\n\tadd\t@CPI24_2[0], r0, r1\n\tst.1\t0, r1\n\tadd\t65, r0, r1\n\tst.1\t4, r1\n\tadd\t@CPI24_3[0], r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.func_end24:\n\ncopy_array_from_storage_to_memory_string:\n.func_begin25:\n\tadd\t4, r0, r5\n\tsload\tr5, r4\n\tand!\t1, r4, r6\n\tshr.s\t1, r4, r1\n\tand\t127, r1, r2\n\tadd.ne\tr1, r0, r2\n\tsub.s!\t31, r2, r1\n\tadd\t0, r0, r1\n\tadd.gt\t1, r0, r1\n\tand\t1, r1, r1\n\tsub!\tr6, r1, r1\n\tjump.ne\t@.BB25_1\n\tld.1\t64, r1\n\tst.1.inc\tr1, r2, r3\n\tsub!\tr6, r0, r6\n\tjump.ne\t@.BB25_9\n\tsub.s\t256, r0, r2\n\tand\tr4, r2, r2\n\tst.1\tr3, r2\n\tadd\t64, r0, r4\n\tjump\t@.BB25_4\n.BB25_9:\n\tst.1\t0, r5\n\tadd\t32, r0, r4\n\tsub!\tr2, r0, r5\n\tjump.eq\t@.BB25_4\n\tadd\t@CPI25_0[0], r0, r4\n\tadd\tr0, r0, r6\n.BB25_11:\n\tadd\tr6, r0, r5\n\tadd\tr5, r3, r6\n\tsload\tr4, r7\n\tst.1\tr6, r7\n\tadd\t1, r4, r4\n\tadd\t32, r5, r6\n\tsub!\tr6, r2, r7\n\tjump.lt\t@.BB25_11\n\tadd\t95, r5, r2\n\tsub.s\t32, r0, r3\n\tand\tr2, r3, r4\n.BB25_4:\n\tadd\tr4, r1, r2\n\tsub!\tr2, r4, r3\n\tadd\t0, r0, r3\n\tadd.lt\t1, r0, r3\n\tsub.s!\t@CPI25_1[0], r2, r4\n\tjump.gt\t@.BB25_6\n\tand!\t1, r3, r3\n\tjump.ne\t@.BB25_6\n\tst.1\t64, r2\n\tret\n.BB25_1:\n\tadd\t@CPI25_2[0], r0, r1\n\tst.1\t0, r1\n\tadd\t34, r0, r1\n\tst.1\t4, r1\n\tadd\t@CPI25_3[0], r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB25_6:\n\tadd\t@CPI25_2[0], r0, r1\n\tst.1\t0, r1\n\tadd\t65, r0, r1\n\tst.1\t4, r1\n\tadd\t@CPI25_3[0], r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.func_end25:\n\nfun_balanceOf:\n.func_begin26:\n\tand\t@CPI26_0[0], r1, r1\n\tst.1\t0, r1\n\tst.1\t32, r0\n\tadd\t@CPI26_1[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI26_1[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI26_2[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB26_1\n\tld\tr1, r1\n\tsload\tr1, r1\n\tret\n.BB26_1:\n\tadd\tr0, r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.func_end26:\n\nfun_transfer:\n.func_begin27:\n\tnop\tstack+=[6]\n\tadd\tr2, r0, stack-[6]\n\tcontext.caller\tr2\n\tand!\t@CPI27_0[0], r2, r3\n\tjump.eq\t@.BB27_1\n\tadd\tr2, r0, stack-[2]\n\tadd\tr1, r0, stack-[3]\n\tand!\t@CPI27_0[0], r1, r1\n\tadd\tr1, r0, stack-[5]\n\tjump.eq\t@.BB27_3\n\tadd\tr3, r0, stack-[4]\n\tst.1\t0, r3\n\tst.1\t32, r0\n\tadd\t@CPI27_1[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI27_1[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI27_2[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB27_5\n\tld\tr1, r1\n\tsload\tr1, r2\n\tadd\tstack-[6], r0, r1\n\tadd\tr2, r0, stack-[1]\n\tsub!\tr2, r1, r1\n\tjump.lt\t@.BB27_7\n\tadd\tstack-[4], r0, r1\n\tst.1\t0, r1\n\tst.1\t32, r0\n\tadd\t@CPI27_1[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI27_1[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI27_2[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB27_5\n\tadd\tstack-[6], r0, r2\n\tadd\tstack-[1], r0, r3\n\tsub\tr3, r2, r2\n\tld\tr1, r1\n\tsstore\tr1, r2\n\tadd\tstack-[5], r0, r1\n\tst.1\t0, r1\n\tst.1\t32, r0\n\tadd\t@CPI27_1[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI27_1[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI27_2[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB27_5\n\tld\tr1, r1\n\tsload\tr1, r2\n\tadd\tstack-[6], r0, r3\n\tadd\tr2, r3, r2\n\tsstore\tr1, r2\n\tld.1\t64, r1\n\tst.1\tr1, r3\n\tadd\t@CPI27_1[0], r0, r2\n\tcontext.gas_left\tr3\n\tsub.s!\t@CPI27_1[0], r3, r4\n\tadd.ge\tr2, r0, r3\n\tsub.s!\t@CPI27_1[0], r1, r4\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tshl.s\t192, r3, r2\n\tor\tr2, r1, r1\n\tor\t@CPI27_3[0], r1, r1\n\tadd\t32781, r0, r2\n\tadd\t3, r0, r3\n\tadd\t@CPI27_4[0], r0, r4\n\tadd\tstack-[2], r0, r5\n\tadd\tstack-[3], r0, r6\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r1\n\tjump.eq\t@.BB27_5\n\tret\n.BB27_5:\n\tadd\tr0, r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB27_1:\n\tld.1\t64, r1\n\tadd\t100, r1, r2\n\tadd\t@CPI27_11[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t68, r1, r2\n\tadd\t@CPI27_12[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t36, r1, r2\n\tadd\t37, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI27_7[0], r0, r2\n\tst.1\tr1, r2\n\tadd\t4, r1, r2\n\tadd\t32, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI27_1[0], r0, r2\n\tsub.s!\t@CPI27_1[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI27_8[0], r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB27_3:\n\tld.1\t64, r1\n\tadd\t100, r1, r2\n\tadd\t@CPI27_9[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t68, r1, r2\n\tadd\t@CPI27_10[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t36, r1, r2\n\tadd\t35, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI27_7[0], r0, r2\n\tst.1\tr1, r2\n\tadd\t4, r1, r2\n\tadd\t32, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI27_1[0], r0, r2\n\tsub.s!\t@CPI27_1[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI27_8[0], r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB27_7:\n\tld.1\t64, r1\n\tadd\t100, r1, r2\n\tadd\t@CPI27_5[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t68, r1, r2\n\tadd\t@CPI27_6[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t36, r1, r2\n\tadd\t38, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI27_7[0], r0, r2\n\tst.1\tr1, r2\n\tadd\t4, r1, r2\n\tadd\t32, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI27_1[0], r0, r2\n\tsub.s!\t@CPI27_1[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI27_8[0], r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.func_end27:\n\nfun_approve:\n.func_begin28:\n\tnop\tstack+=[4]\n\tcontext.caller\tr3\n\tand!\t@CPI28_0[0], r3, r4\n\tjump.eq\t@.BB28_1\n\tadd\tr2, r0, stack-[1]\n\tadd\tr3, r0, stack-[2]\n\tadd\tr1, r0, stack-[3]\n\tand!\t@CPI28_0[0], r1, r1\n\tadd\tr1, r0, stack-[4]\n\tjump.eq\t@.BB28_3\n\tst.1\t0, r4\n\tadd\t1, r0, r1\n\tst.1\t32, r1\n\tadd\t@CPI28_1[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI28_1[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI28_2[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB28_5\n\tld\tr1, r1\n\tadd\tstack-[4], r0, r2\n\tst.1\t0, r2\n\tst.1\t32, r1\n\tadd\t@CPI28_1[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI28_1[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI28_2[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB28_5\n\tld\tr1, r1\n\tadd\tstack-[1], r0, r2\n\tsstore\tr1, r2\n\tld.1\t64, r1\n\tst.1\tr1, r2\n\tadd\t@CPI28_1[0], r0, r2\n\tcontext.gas_left\tr3\n\tsub.s!\t@CPI28_1[0], r3, r4\n\tadd.ge\tr2, r0, r3\n\tsub.s!\t@CPI28_1[0], r1, r4\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tshl.s\t192, r3, r2\n\tor\tr2, r1, r1\n\tor\t@CPI28_3[0], r1, r1\n\tadd\t32781, r0, r2\n\tadd\t3, r0, r3\n\tadd\t@CPI28_4[0], r0, r4\n\tadd\tstack-[2], r0, r5\n\tadd\tstack-[3], r0, r6\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r1\n\tjump.eq\t@.BB28_5\n\tret\n.BB28_5:\n\tadd\tr0, r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB28_1:\n\tld.1\t64, r1\n\tadd\t100, r1, r2\n\tadd\t@CPI28_9[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t68, r1, r2\n\tadd\t@CPI28_10[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t36, r1, r2\n\tadd\t36, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI28_7[0], r0, r2\n\tst.1\tr1, r2\n\tadd\t4, r1, r2\n\tadd\t32, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI28_1[0], r0, r2\n\tsub.s!\t@CPI28_1[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI28_8[0], r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB28_3:\n\tld.1\t64, r1\n\tadd\t100, r1, r2\n\tadd\t@CPI28_5[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t68, r1, r2\n\tadd\t@CPI28_6[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t36, r1, r2\n\tadd\t34, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI28_7[0], r0, r2\n\tst.1\tr1, r2\n\tadd\t4, r1, r2\n\tadd\t32, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI28_1[0], r0, r2\n\tsub.s!\t@CPI28_1[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI28_8[0], r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.func_end28:\n\nfun_transferFrom:\n.func_begin29:\n\tnop\tstack+=[8]\n\tadd\tr3, r0, stack-[8]\n\tadd\tr2, r0, stack-[6]\n\tadd\tr1, r0, stack-[5]\n\tand\t@CPI29_0[0], r1, r1\n\tadd\tr1, r0, stack-[7]\n\tst.1\t0, r1\n\tadd\t1, r0, r1\n\tadd\tr1, r0, stack-[3]\n\tst.1\t32, r1\n\tadd\t@CPI29_1[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI29_1[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI29_2[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB29_1\n\tcontext.caller\tr2\n\tld\tr1, r1\n\tadd\tr2, r0, stack-[2]\n\tand\t@CPI29_0[0], r2, r2\n\tadd\tr2, r0, stack-[4]\n\tst.1\t0, r2\n\tst.1\t32, r1\n\tadd\t@CPI29_1[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI29_1[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI29_2[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB29_1\n\tld\tr1, r1\n\tsload\tr1, r2\n\tsub.s\t1, r0, r1\n\tsub!\tr2, r1, r1\n\tjump.eq\t@.BB29_5\n\tadd\tstack-[8], r0, r1\n\tsub!\tr2, r1, r1\n\tjump.lt\t@.BB29_16\n\tadd\tstack-[7], r0, r1\n\tsub!\tr1, r0, r1\n\tjump.eq\t@.BB29_18\n\tadd\tr2, r0, stack-[1]\n\tadd\tstack-[4], r0, r1\n\tsub!\tr1, r0, r1\n\tjump.eq\t@.BB29_20\n\tadd\tstack-[7], r0, r1\n\tst.1\t0, r1\n\tadd\tstack-[3], r0, r1\n\tst.1\t32, r1\n\tadd\t@CPI29_1[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI29_1[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI29_2[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB29_1\n\tld\tr1, r1\n\tadd\tstack-[4], r0, r2\n\tst.1\t0, r2\n\tst.1\t32, r1\n\tadd\t@CPI29_1[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI29_1[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI29_2[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB29_1\n\tadd\tstack-[8], r0, r2\n\tadd\tstack-[1], r0, r3\n\tsub\tr3, r2, r2\n\tld\tr1, r1\n\tsstore\tr1, r2\n\tld.1\t64, r1\n\tst.1\tr1, r2\n\tadd\t@CPI29_1[0], r0, r2\n\tcontext.gas_left\tr3\n\tsub.s!\t@CPI29_1[0], r3, r4\n\tadd.ge\tr2, r0, r3\n\tsub.s!\t@CPI29_1[0], r1, r4\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tshl.s\t192, r3, r2\n\tor\tr2, r1, r1\n\tor\t@CPI29_3[0], r1, r1\n\tadd\t32781, r0, r2\n\tadd\t3, r0, r3\n\tadd\t@CPI29_4[0], r0, r4\n\tadd\tstack-[5], r0, r5\n\tadd\tstack-[2], r0, r6\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r1\n\tjump.ne\t@.BB29_7\n\tjump\t@.BB29_1\n.BB29_5:\n\tadd\tstack-[7], r0, r1\n\tsub!\tr1, r0, r1\n\tjump.eq\t@.BB29_6\n.BB29_7:\n\tadd\tstack-[6], r0, r1\n\tand!\t@CPI29_0[0], r1, r1\n\tadd\tr1, r0, stack-[4]\n\tjump.eq\t@.BB29_8\n\tadd\tstack-[7], r0, r1\n\tst.1\t0, r1\n\tst.1\t32, r0\n\tadd\t@CPI29_1[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI29_1[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI29_2[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB29_1\n\tld\tr1, r1\n\tsload\tr1, r2\n\tadd\tstack-[8], r0, r1\n\tadd\tr2, r0, stack-[3]\n\tsub!\tr2, r1, r1\n\tjump.lt\t@.BB29_11\n\tadd\tstack-[7], r0, r1\n\tst.1\t0, r1\n\tst.1\t32, r0\n\tadd\t@CPI29_1[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI29_1[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI29_2[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB29_1\n\tadd\tstack-[8], r0, r2\n\tadd\tstack-[3], r0, r3\n\tsub\tr3, r2, r2\n\tld\tr1, r1\n\tsstore\tr1, r2\n\tadd\tstack-[4], r0, r1\n\tst.1\t0, r1\n\tst.1\t32, r0\n\tadd\t@CPI29_1[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI29_1[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI29_2[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB29_1\n\tld\tr1, r1\n\tsload\tr1, r2\n\tadd\tstack-[8], r0, r3\n\tadd\tr2, r3, r2\n\tsstore\tr1, r2\n\tld.1\t64, r1\n\tst.1\tr1, r3\n\tadd\t@CPI29_1[0], r0, r2\n\tcontext.gas_left\tr3\n\tsub.s!\t@CPI29_1[0], r3, r4\n\tadd.ge\tr2, r0, r3\n\tsub.s!\t@CPI29_1[0], r1, r4\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tshl.s\t192, r3, r2\n\tor\tr2, r1, r1\n\tor\t@CPI29_3[0], r1, r1\n\tadd\t32781, r0, r2\n\tadd\t3, r0, r3\n\tadd\t@CPI29_13[0], r0, r4\n\tadd\tstack-[5], r0, r5\n\tadd\tstack-[6], r0, r6\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r1\n\tjump.eq\t@.BB29_1\n\tret\n.BB29_1:\n\tadd\tr0, r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB29_8:\n\tld.1\t64, r1\n\tadd\t100, r1, r2\n\tadd\t@CPI29_16[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t68, r1, r2\n\tadd\t@CPI29_17[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t36, r1, r2\n\tadd\t35, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI29_7[0], r0, r2\n\tst.1\tr1, r2\n\tadd\t4, r1, r2\n\tadd\t32, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI29_1[0], r0, r2\n\tsub.s!\t@CPI29_1[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI29_8[0], r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB29_11:\n\tld.1\t64, r1\n\tadd\t100, r1, r2\n\tadd\t@CPI29_14[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t68, r1, r2\n\tadd\t@CPI29_15[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t36, r1, r2\n\tadd\t38, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI29_7[0], r0, r2\n\tst.1\tr1, r2\n\tadd\t4, r1, r2\n\tadd\t32, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI29_1[0], r0, r2\n\tsub.s!\t@CPI29_1[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI29_8[0], r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB29_16:\n\tld.1\t64, r1\n\tadd\t68, r1, r2\n\tadd\t@CPI29_11[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t36, r1, r2\n\tadd\t29, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI29_7[0], r0, r2\n\tst.1\tr1, r2\n\tadd\t4, r1, r2\n\tadd\t32, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI29_1[0], r0, r2\n\tsub.s!\t@CPI29_1[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI29_12[0], r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB29_18:\n\tld.1\t64, r1\n\tadd\t100, r1, r2\n\tadd\t@CPI29_9[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t68, r1, r2\n\tadd\t@CPI29_10[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t36, r1, r2\n\tadd\t36, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI29_7[0], r0, r2\n\tst.1\tr1, r2\n\tadd\t4, r1, r2\n\tadd\t32, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI29_1[0], r0, r2\n\tsub.s!\t@CPI29_1[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI29_8[0], r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB29_20:\n\tld.1\t64, r1\n\tadd\t100, r1, r2\n\tadd\t@CPI29_5[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t68, r1, r2\n\tadd\t@CPI29_6[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t36, r1, r2\n\tadd\t34, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI29_7[0], r0, r2\n\tst.1\tr1, r2\n\tadd\t4, r1, r2\n\tadd\t32, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI29_1[0], r0, r2\n\tsub.s!\t@CPI29_1[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI29_8[0], r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB29_6:\n\tld.1\t64, r1\n\tadd\t100, r1, r2\n\tadd\t@CPI29_18[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t68, r1, r2\n\tadd\t@CPI29_19[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t36, r1, r2\n\tadd\t37, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI29_7[0], r0, r2\n\tst.1\tr1, r2\n\tadd\t4, r1, r2\n\tadd\t32, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI29_1[0], r0, r2\n\tsub.s!\t@CPI29_1[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI29_8[0], r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.func_end29:\n\nfun_increaseAllowance:\n.func_begin30:\n\tnop\tstack+=[6]\n\tadd\tr2, r0, stack-[5]\n\tadd\tr1, r0, stack-[6]\n\tcontext.caller\tr1\n\tadd\tr1, r0, stack-[4]\n\tst.1\t0, r1\n\tadd\t1, r0, r1\n\tadd\tr1, r0, stack-[2]\n\tst.1\t32, r1\n\tadd\t@CPI30_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI30_0[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI30_1[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB30_1\n\tld\tr1, r1\n\tadd\tstack-[6], r0, r2\n\tand\t@CPI30_2[0], r2, r2\n\tadd\tr2, r0, stack-[3]\n\tst.1\t0, r2\n\tst.1\t32, r1\n\tadd\t@CPI30_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI30_0[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI30_1[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB30_1\n\tsub.s\t1, r0, r2\n\tadd\tstack-[5], r0, r3\n\txor\tr3, r2, r2\n\tld\tr1, r1\n\tsload\tr1, r3\n\tsub!\tr3, r2, r1\n\tjump.gt\t@.BB30_4\n\tadd\tstack-[4], r0, r1\n\tand!\t@CPI30_2[0], r1, r1\n\tjump.eq\t@.BB30_6\n\tadd\tr3, r0, stack-[1]\n\tadd\tstack-[3], r0, r2\n\tsub!\tr2, r0, r2\n\tjump.eq\t@.BB30_8\n\tst.1\t0, r1\n\tadd\tstack-[2], r0, r1\n\tst.1\t32, r1\n\tadd\t@CPI30_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI30_0[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI30_1[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB30_1\n\tld\tr1, r1\n\tadd\tstack-[3], r0, r2\n\tst.1\t0, r2\n\tst.1\t32, r1\n\tadd\t@CPI30_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI30_0[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI30_1[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB30_1\n\tadd\tstack-[5], r0, r2\n\tadd\tstack-[1], r0, r3\n\tadd\tr3, r2, r2\n\tld\tr1, r1\n\tsstore\tr1, r2\n\tld.1\t64, r1\n\tst.1\tr1, r2\n\tadd\t@CPI30_0[0], r0, r2\n\tcontext.gas_left\tr3\n\tsub.s!\t@CPI30_0[0], r3, r4\n\tadd.ge\tr2, r0, r3\n\tsub.s!\t@CPI30_0[0], r1, r4\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tshl.s\t192, r3, r2\n\tor\tr2, r1, r1\n\tor\t@CPI30_3[0], r1, r1\n\tadd\t32781, r0, r2\n\tadd\t3, r0, r3\n\tadd\t@CPI30_4[0], r0, r4\n\tadd\tstack-[4], r0, r5\n\tadd\tstack-[6], r0, r6\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r1\n\tjump.eq\t@.BB30_1\n\tret\n.BB30_1:\n\tadd\tr0, r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB30_4:\n\tadd\t@CPI30_11[0], r0, r1\n\tst.1\t0, r1\n\tadd\t17, r0, r1\n\tst.1\t4, r1\n\tadd\t@CPI30_12[0], r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB30_6:\n\tld.1\t64, r1\n\tadd\t100, r1, r2\n\tadd\t@CPI30_9[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t68, r1, r2\n\tadd\t@CPI30_10[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t36, r1, r2\n\tadd\t36, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI30_7[0], r0, r2\n\tst.1\tr1, r2\n\tadd\t4, r1, r2\n\tadd\t32, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI30_0[0], r0, r2\n\tsub.s!\t@CPI30_0[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI30_8[0], r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB30_8:\n\tld.1\t64, r1\n\tadd\t100, r1, r2\n\tadd\t@CPI30_5[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t68, r1, r2\n\tadd\t@CPI30_6[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t36, r1, r2\n\tadd\t34, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI30_7[0], r0, r2\n\tst.1\tr1, r2\n\tadd\t4, r1, r2\n\tadd\t32, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI30_0[0], r0, r2\n\tsub.s!\t@CPI30_0[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI30_8[0], r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.func_end30:\n\nfun_decreaseAllowance:\n.func_begin31:\n\tnop\tstack+=[6]\n\tadd\tr2, r0, stack-[5]\n\tadd\tr1, r0, stack-[6]\n\tcontext.caller\tr1\n\tadd\tr1, r0, stack-[4]\n\tst.1\t0, r1\n\tadd\t1, r0, r1\n\tadd\tr1, r0, stack-[2]\n\tst.1\t32, r1\n\tadd\t@CPI31_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI31_0[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI31_1[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB31_1\n\tld\tr1, r1\n\tadd\tstack-[6], r0, r2\n\tand\t@CPI31_2[0], r2, r2\n\tadd\tr2, r0, stack-[3]\n\tst.1\t0, r2\n\tst.1\t32, r1\n\tadd\t@CPI31_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI31_0[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI31_1[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB31_1\n\tld\tr1, r1\n\tsload\tr1, r2\n\tadd\tstack-[5], r0, r1\n\tsub!\tr2, r1, r1\n\tjump.lt\t@.BB31_4\n\tadd\tstack-[4], r0, r1\n\tand!\t@CPI31_2[0], r1, r1\n\tjump.eq\t@.BB31_6\n\tadd\tr2, r0, stack-[1]\n\tadd\tstack-[3], r0, r2\n\tsub!\tr2, r0, r2\n\tjump.eq\t@.BB31_8\n\tst.1\t0, r1\n\tadd\tstack-[2], r0, r1\n\tst.1\t32, r1\n\tadd\t@CPI31_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI31_0[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI31_1[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB31_1\n\tld\tr1, r1\n\tadd\tstack-[3], r0, r2\n\tst.1\t0, r2\n\tst.1\t32, r1\n\tadd\t@CPI31_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI31_0[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI31_1[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB31_1\n\tadd\tstack-[5], r0, r2\n\tadd\tstack-[1], r0, r3\n\tsub\tr3, r2, r2\n\tld\tr1, r1\n\tsstore\tr1, r2\n\tld.1\t64, r1\n\tst.1\tr1, r2\n\tadd\t@CPI31_0[0], r0, r2\n\tcontext.gas_left\tr3\n\tsub.s!\t@CPI31_0[0], r3, r4\n\tadd.ge\tr2, r0, r3\n\tsub.s!\t@CPI31_0[0], r1, r4\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tshl.s\t192, r3, r2\n\tor\tr2, r1, r1\n\tor\t@CPI31_3[0], r1, r1\n\tadd\t32781, r0, r2\n\tadd\t3, r0, r3\n\tadd\t@CPI31_4[0], r0, r4\n\tadd\tstack-[4], r0, r5\n\tadd\tstack-[6], r0, r6\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r1\n\tjump.eq\t@.BB31_1\n\tret\n.BB31_1:\n\tadd\tr0, r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB31_4:\n\tld.1\t64, r1\n\tadd\t100, r1, r2\n\tadd\t@CPI31_11[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t68, r1, r2\n\tadd\t@CPI31_12[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t36, r1, r2\n\tadd\t37, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI31_7[0], r0, r2\n\tst.1\tr1, r2\n\tadd\t4, r1, r2\n\tadd\t32, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI31_0[0], r0, r2\n\tsub.s!\t@CPI31_0[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI31_8[0], r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB31_6:\n\tld.1\t64, r1\n\tadd\t100, r1, r2\n\tadd\t@CPI31_9[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t68, r1, r2\n\tadd\t@CPI31_10[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t36, r1, r2\n\tadd\t36, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI31_7[0], r0, r2\n\tst.1\tr1, r2\n\tadd\t4, r1, r2\n\tadd\t32, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI31_0[0], r0, r2\n\tsub.s!\t@CPI31_0[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI31_8[0], r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB31_8:\n\tld.1\t64, r1\n\tadd\t100, r1, r2\n\tadd\t@CPI31_5[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t68, r1, r2\n\tadd\t@CPI31_6[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t36, r1, r2\n\tadd\t34, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI31_7[0], r0, r2\n\tst.1\tr1, r2\n\tadd\t4, r1, r2\n\tadd\t32, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI31_0[0], r0, r2\n\tsub.s!\t@CPI31_0[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI31_8[0], r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.func_end31:\n\nrequire_helper_stringliteral_04fc:\n.func_begin32:\n\tsub!\tr1, r0, r1\n\tjump.eq\t@.BB32_1\n\tret\n.BB32_1:\n\tld.1\t64, r1\n\tadd\t68, r1, r2\n\tadd\t@CPI32_0[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI32_1[0], r0, r2\n\tst.1\tr1, r2\n\tadd\t36, r1, r2\n\tadd\t32, r0, r3\n\tst.1\tr2, r3\n\tadd\t4, r1, r2\n\tst.1\tr2, r3\n\tadd\t@CPI32_2[0], r0, r2\n\tsub.s!\t@CPI32_2[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI32_3[0], r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.func_end32:\n\nfun_toHexString:\n.func_begin33:\n\tadd\tr1, r0, r2\n\tld.1\t64, r1\n\tsub.s!\t@CPI33_0[0], r1, r3\n\tjump.ge\t@.BB33_1\n\tadd\t128, r1, r3\n\tst.1\t64, r3\n\tadd\t66, r0, r3\n\tst.1.inc\tr1, r3, r3\n\tadd\tstack[@calldatasize], r0, r4\n\tptr.add\tstack[@ptr_calldata], r4, r4\n\tadd\tr0, r0, r5\n.BB33_3:\n\tshl.s\t5, r5, r6\n\tadd\tr3, r6, r7\n\tptr.add\tr4, r6, r6\n\tld\tr6, r6\n\tst.1\tr7, r6\n\tadd\t1, r5, r5\n\tsub.s!\t3, r5, r6\n\tjump.lt\t@.BB33_3\n\tld.1\tr1, r4\n\tsub!\tr4, r0, r4\n\tjump.eq\t@.BB33_5\n\tld.1\tr3, r4\n\tand\t@CPI33_1[0], r4, r4\n\tor\t@CPI33_2[0], r4, r4\n\tst.1\tr3, r4\n\tld.1\tr1, r4\n\tsub.s!\t2, r4, r4\n\tjump.lt\t@.BB33_5\n\tadd\t33, r1, r4\n\tld.1\tr4, r5\n\tand\t@CPI33_1[0], r5, r5\n\tor\t@CPI33_3[0], r5, r5\n\tst.1\tr4, r5\n\tadd\t65, r0, r4\n.BB33_8:\n\tadd\tr2, r0, r5\n\tld.1\tr1, r2\n\tsub!\tr2, r4, r2\n\tjump.le\t@.BB33_5\n\tand\t15, r5, r2\n\tshl.s\t3, r2, r2\n\txor\t248, r2, r2\n\tadd\t@CPI33_4[0], r0, r6\n\tshr\tr6, r2, r2\n\tadd\tr4, r3, r6\n\tld.1\tr6, r7\n\tand\t@CPI33_1[0], r7, r7\n\tshl.s\t248, r2, r2\n\tor\tr7, r2, r2\n\tst.1\tr6, r2\n\tshr.s\t4, r5, r2\n\tsub.s\t1, r4, r4\n\tsub.s!\t1, r4, r6\n\tjump.gt\t@.BB33_8\n\tsub.s!\t16, r5, r2\n\tjump.ge\t@.BB33_11\n\tret\n.BB33_5:\n\tadd\t@CPI33_9[0], r0, r1\n\tst.1\t0, r1\n\tadd\t50, r0, r1\n\tst.1\t4, r1\n\tadd\t@CPI33_10[0], r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB33_1:\n\tadd\t@CPI33_9[0], r0, r1\n\tst.1\t0, r1\n\tadd\t65, r0, r1\n\tst.1\t4, r1\n\tadd\t@CPI33_10[0], r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB33_11:\n\tld.1\t64, r1\n\tadd\t68, r1, r2\n\tadd\t@CPI33_5[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI33_6[0], r0, r2\n\tst.1\tr1, r2\n\tadd\t36, r1, r2\n\tadd\t32, r0, r3\n\tst.1\tr2, r3\n\tadd\t4, r1, r2\n\tst.1\tr2, r3\n\tadd\t@CPI33_7[0], r0, r2\n\tsub.s!\t@CPI33_7[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI33_8[0], r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.func_end33:\n\nfun_mint.5:\n.func_begin34:\n\tnop\tstack+=[2]\n\tadd\tr2, r0, stack-[1]\n\tadd\tr1, r0, stack-[2]\n\tadd\t@CPI34_0[0], r0, r1\n\tst.1\t0, r1\n\tadd\t6, r0, r1\n\tst.1\t32, r1\n\tadd\t@CPI34_1[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI34_1[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI34_2[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB34_1\n\tld\tr1, r1\n\tcontext.caller\tr2\n\tand\t@CPI34_3[0], r2, r2\n\tst.1\t0, r2\n\tst.1\t32, r1\n\tadd\t@CPI34_1[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI34_1[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI34_2[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB34_1\n\tld\tr1, r1\n\tsload\tr1, r1\n\tand!\t255, r1, r1\n\tjump.eq\t@.BB34_4\n\tadd\tstack-[2], r0, r1\n\tand!\t@CPI34_3[0], r1, r1\n\tadd\tstack-[1], r0, r5\n\tjump.eq\t@.BB34_6\n\tsub.s\t1, r0, r2\n\txor\tr5, r2, r4\n\tadd\t2, r0, r2\n\tsload\tr2, r3\n\tsub!\tr3, r4, r4\n\tjump.gt\t@.BB34_8\n\tadd\tr3, r5, r3\n\tsstore\tr2, r3\n\tst.1\t0, r1\n\tst.1\t32, r0\n\tadd\t@CPI34_1[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI34_1[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI34_2[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB34_1\n\tld\tr1, r1\n\tsload\tr1, r2\n\tadd\tstack-[1], r0, r3\n\tadd\tr2, r3, r2\n\tsstore\tr1, r2\n\tld.1\t64, r1\n\tst.1\tr1, r3\n\tadd\t@CPI34_1[0], r0, r2\n\tcontext.gas_left\tr3\n\tsub.s!\t@CPI34_1[0], r3, r4\n\tadd.ge\tr2, r0, r3\n\tsub.s!\t@CPI34_1[0], r1, r4\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tshl.s\t192, r3, r2\n\tor\tr2, r1, r1\n\tor\t@CPI34_4[0], r1, r1\n\tadd\t32781, r0, r2\n\tadd\t3, r0, r3\n\tadd\t@CPI34_5[0], r0, r4\n\tadd\tr0, r0, r5\n\tadd\tstack-[2], r0, r6\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r1\n\tjump.eq\t@.BB34_1\n\tret\n.BB34_1:\n\tadd\tr0, r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB34_4:\n\tld.1\t64, r1\n\tadd\t68, r1, r2\n\tadd\t@CPI34_11[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t36, r1, r2\n\tadd\t22, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI34_9[0], r0, r2\n\tst.1\tr1, r2\n\tadd\t4, r1, r2\n\tadd\t32, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI34_1[0], r0, r2\n\tsub.s!\t@CPI34_1[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI34_10[0], r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB34_6:\n\tld.1\t64, r1\n\tadd\t68, r1, r2\n\tadd\t@CPI34_8[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t36, r1, r2\n\tadd\t31, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI34_9[0], r0, r2\n\tst.1\tr1, r2\n\tadd\t4, r1, r2\n\tadd\t32, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI34_1[0], r0, r2\n\tsub.s!\t@CPI34_1[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI34_10[0], r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB34_8:\n\tadd\t@CPI34_6[0], r0, r1\n\tst.1\t0, r1\n\tadd\t17, r0, r1\n\tst.1\t4, r1\n\tadd\t@CPI34_7[0], r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.func_end34:\n\nmodifier_onlyOwner_3617:\n.func_begin35:\n\tnop\tstack+=[4]\n\tadd\tr1, r0, stack-[2]\n\tadd\t5, r0, r1\n\tsload\tr1, r1\n\tand\t@CPI35_0[0], r1, r2\n\tcontext.caller\tr1\n\tadd\tr2, r0, stack-[3]\n\tsub!\tr2, r1, r1\n\tjump.ne\t@.BB35_1\n\tadd\t@CPI35_5[0], r0, r1\n\tst.1\t0, r1\n\tadd\t6, r0, r1\n\tadd\tr1, r0, stack-[4]\n\tst.1\t32, r1\n\tadd\t@CPI35_3[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI35_3[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI35_6[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB35_3\n\tld\tr1, r1\n\tadd\tstack-[3], r0, r2\n\tst.1\t0, r2\n\tst.1\t32, r1\n\tadd\t@CPI35_3[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI35_3[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI35_6[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB35_3\n\tld\tr1, r1\n\tsload\tr1, r1\n\tand!\t255, r1, r1\n\tjump.eq\t@.BB35_6\n\tadd\t@CPI35_5[0], r0, r1\n\tst.1\t0, r1\n\tadd\tstack-[4], r0, r1\n\tst.1\t32, r1\n\tadd\t@CPI35_3[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI35_3[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI35_6[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB35_3\n\tld\tr1, r1\n\tadd\t1, r1, r1\n\tsload\tr1, r1\n\tadd\tr1, r0, stack-[1]\n\tst.1\t0, r1\n\tadd\tstack-[4], r0, r1\n\tst.1\t32, r1\n\tadd\t@CPI35_3[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI35_3[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI35_6[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB35_3\n\tld\tr1, r1\n\tadd\tstack-[3], r0, r2\n\tst.1\t0, r2\n\tst.1\t32, r1\n\tadd\t@CPI35_3[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI35_3[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI35_6[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB35_3\n\tld\tr1, r1\n\tsload\tr1, r1\n\tand!\t255, r1, r1\n\tjump.eq\t@.BB35_11\n\tadd\t@CPI35_5[0], r0, r1\n\tst.1\t0, r1\n\tadd\tstack-[4], r0, r1\n\tst.1\t32, r1\n\tadd\t@CPI35_3[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI35_3[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI35_6[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB35_3\n\tld\tr1, r1\n\tadd\tstack-[3], r0, r2\n\tst.1\t0, r2\n\tst.1\t32, r1\n\tadd\t@CPI35_3[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI35_3[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI35_6[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB35_3\n\tld\tr1, r1\n\tsload\tr1, r1\n\tand!\t255, r1, r1\n\tjump.eq\t@.BB35_28\n\tadd\t@CPI35_5[0], r0, r1\n\tst.1\t0, r1\n\tadd\tstack-[4], r0, r1\n\tst.1\t32, r1\n\tadd\t@CPI35_3[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI35_3[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI35_6[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB35_3\n\tld\tr1, r1\n\tadd\tstack-[3], r0, r2\n\tst.1\t0, r2\n\tst.1\t32, r1\n\tadd\t@CPI35_3[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI35_3[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI35_6[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB35_3\n\tld\tr1, r1\n\tsload\tr1, r2\n\tsub.s\t256, r0, r3\n\tand\tr2, r3, r2\n\tsstore\tr1, r2\n\tld.1\t64, r1\n\tadd\t@CPI35_3[0], r0, r2\n\tcontext.gas_left\tr3\n\tsub.s!\t@CPI35_3[0], r3, r4\n\tadd.ge\tr2, r0, r3\n\tsub.s!\t@CPI35_3[0], r1, r4\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tshl.s\t192, r3, r2\n\tor\tr2, r1, r1\n\tor\t@CPI35_7[0], r1, r1\n\tadd\t32781, r0, r2\n\tadd\t4, r0, r3\n\tadd\t@CPI35_8[0], r0, r4\n\tadd\t@CPI35_5[0], r0, r5\n\tadd\tstack-[3], r0, r6\n\tadd\tr6, r0, r7\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r1\n\tjump.eq\t@.BB35_3\n.BB35_28:\n\tadd\t@CPI35_5[0], r0, r1\n\tst.1\t0, r1\n\tadd\tstack-[4], r0, r1\n\tst.1\t32, r1\n\tadd\t@CPI35_3[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI35_3[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI35_6[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB35_3\n\tld\tr1, r1\n\tadd\tstack-[2], r0, r2\n\tand\t@CPI35_0[0], r2, r2\n\tadd\tr2, r0, stack-[1]\n\tst.1\t0, r2\n\tst.1\t32, r1\n\tadd\t@CPI35_3[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI35_3[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI35_6[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB35_3\n\tld\tr1, r1\n\tsload\tr1, r1\n\tand!\t255, r1, r1\n\tjump.ne\t@.BB35_34\n\tadd\t@CPI35_5[0], r0, r1\n\tst.1\t0, r1\n\tadd\tstack-[4], r0, r1\n\tst.1\t32, r1\n\tadd\t@CPI35_3[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI35_3[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI35_6[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB35_3\n\tld\tr1, r1\n\tadd\tstack-[1], r0, r2\n\tst.1\t0, r2\n\tst.1\t32, r1\n\tadd\t@CPI35_3[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI35_3[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI35_6[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB35_3\n\tld\tr1, r1\n\tsload\tr1, r2\n\tsub.s\t256, r0, r3\n\tand\tr2, r3, r2\n\tor\t1, r2, r2\n\tsstore\tr1, r2\n\tld.1\t64, r1\n\tadd\t@CPI35_3[0], r0, r2\n\tcontext.gas_left\tr3\n\tsub.s!\t@CPI35_3[0], r3, r4\n\tadd.ge\tr2, r0, r3\n\tsub.s!\t@CPI35_3[0], r1, r4\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tshl.s\t192, r3, r2\n\tor\tr2, r1, r1\n\tor\t@CPI35_7[0], r1, r1\n\tadd\t32781, r0, r2\n\tadd\t4, r0, r3\n\tadd\t@CPI35_9[0], r0, r4\n\tadd\t@CPI35_5[0], r0, r5\n\tadd\tstack-[2], r0, r6\n\tadd\tstack-[3], r0, r7\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r1\n\tjump.eq\t@.BB35_3\n.BB35_34:\n\tret\n.BB35_3:\n\tadd\tr0, r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB35_1:\n\tld.1\t64, r1\n\tadd\t68, r1, r2\n\tadd\t@CPI35_1[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI35_2[0], r0, r2\n\tst.1\tr1, r2\n\tadd\t36, r1, r2\n\tadd\t32, r0, r3\n\tst.1\tr2, r3\n\tadd\t4, r1, r2\n\tst.1\tr2, r3\n\tadd\t@CPI35_3[0], r0, r2\n\tsub.s!\t@CPI35_3[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI35_4[0], r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB35_6:\n\tld.1\t64, r1\n\tadd\t68, r1, r2\n\tadd\t@CPI35_19[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t36, r1, r2\n\tadd\t22, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI35_2[0], r0, r2\n\tst.1\tr1, r2\n\tadd\t4, r1, r2\n\tadd\t32, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI35_3[0], r0, r2\n\tsub.s!\t@CPI35_3[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI35_4[0], r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB35_11:\n\tld.1\t64, r1\n\tadd\tr1, r0, r7\n\tsub.s!\t@CPI35_10[0], r1, r1\n\tjump.lt\t@.BB35_13\n\tadd\t@CPI35_17[0], r0, r1\n\tst.1\t0, r1\n\tadd\t65, r0, r1\n\tst.1\t4, r1\n\tadd\t@CPI35_18[0], r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB35_13:\n\tadd\tr7, r0, r2\n\tadd\t96, r2, r1\n\tst.1\t64, r1\n\tadd\t42, r0, r1\n\tst.1.inc\tr2, r1, r1\n\tadd\tstack[@calldatasize], r0, r2\n\tptr.add\tstack[@ptr_calldata], r2, r2\n\tadd\tr0, r0, r3\n.BB35_14:\n\tshl.s\t5, r3, r4\n\tadd\tr1, r4, r5\n\tptr.add\tr2, r4, r4\n\tld\tr4, r4\n\tst.1\tr5, r4\n\tadd\t1, r3, r3\n\tsub.s!\t2, r3, r4\n\tjump.lt\t@.BB35_14\n\tld.1\tr7, r2\n\tsub!\tr2, r0, r2\n\tjump.eq\t@.BB35_16\n\tld.1\tr1, r2\n\tand\t@CPI35_11[0], r2, r2\n\tor\t@CPI35_12[0], r2, r2\n\tst.1\tr1, r2\n\tld.1\tr7, r2\n\tsub.s!\t2, r2, r2\n\tjump.ge\t@.BB35_18\n.BB35_16:\n\tadd\t@CPI35_17[0], r0, r1\n\tst.1\t0, r1\n\tadd\t50, r0, r1\n\tst.1\t4, r1\n\tadd\t@CPI35_18[0], r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB35_18:\n\tadd\t33, r7, r2\n\tld.1\tr2, r3\n\tand\t@CPI35_11[0], r3, r3\n\tor\t@CPI35_13[0], r3, r3\n\tst.1\tr2, r3\n\tadd\t41, r0, r2\n\tadd\tstack-[3], r0, r5\n.BB35_19:\n\tadd\tr5, r0, r3\n\tld.1\tr7, r4\n\tsub!\tr4, r2, r4\n\tjump.le\t@.BB35_16\n\tand\t15, r3, r4\n\tshl.s\t3, r4, r4\n\txor\t248, r4, r4\n\tadd\t@CPI35_14[0], r0, r5\n\tshr\tr5, r4, r4\n\tadd\tr2, r1, r5\n\tld.1\tr5, r6\n\tand\t@CPI35_11[0], r6, r6\n\tshl.s\t248, r4, r4\n\tor\tr6, r4, r4\n\tst.1\tr5, r4\n\tshr.s\t4, r3, r5\n\tsub.s\t1, r2, r2\n\tsub.s!\t1, r2, r4\n\tjump.gt\t@.BB35_19\n\tsub.s!\t16, r3, r1\n\tadd\t0, r0, r1\n\tadd.lt\t1, r0, r1\n\tadd\tr7, r0, stack-[3]\n\tnear_call\tr0, @require_helper_stringliteral_04fc, @DEFAULT_UNWIND\n\tadd\tstack-[1], r0, r1\n\tnear_call\tr0, @fun_toHexString, @DEFAULT_UNWIND\n\tld.1\t64, r4\n\tadd\tr4, r0, stack-[4]\n\tadd\t32, r4, r2\n\tadd\t@CPI35_15[0], r0, r3\n\tst.1\tr2, r3\n\tadd\tr1, r0, stack-[2]\n\tadd\t55, r4, r2\n\tadd\tstack-[3], r0, r1\n\tnear_call\tr0, @abi_encode_string_memory_ptr, @DEFAULT_UNWIND\n\tadd\t@CPI35_16[0], r0, r2\n\tst.1\tr1, r2\n\tadd\t17, r1, r2\n\tadd\tstack-[2], r0, r1\n\tnear_call\tr0, @abi_encode_string_memory_ptr, @DEFAULT_UNWIND\n\tadd\tstack-[4], r0, r3\n\tsub\tr1, r3, r2\n\tsub.s\t32, r2, r1\n\tst.1\tr3, r1\n\tadd\tr3, r0, r1\n\tnear_call\tr0, @finalize_allocation, @DEFAULT_UNWIND\n\tadd\t@CPI35_2[0], r0, r1\n\tld.1\t64, r2\n\tadd\tr2, r0, stack-[3]\n\tst.1\tr2, r1\n\tadd\t4, r2, r1\n\tadd\tstack-[4], r0, r2\n\tnear_call\tr0, @abi_encode_string, @DEFAULT_UNWIND\n\tadd\tstack-[3], r0, r4\n\tsub\tr1, r4, r1\n\tadd\t@CPI35_3[0], r0, r2\n\tsub.s!\t@CPI35_3[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tsub.s!\t@CPI35_3[0], r4, r3\n\tadd.lt\tr4, r0, r2\n\tshl.s\t64, r2, r2\n\tshl.s\t96, r1, r1\n\tor\tr1, r2, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.func_end35:\n\n__farcall:\n.func_begin36:\n.tmp0:\n\tfar_call\tr1, r2, @.BB36_2\n.tmp1:\n\tadd\t1, r0, r2\n\tret\n.BB36_2:\n.tmp2:\n\tadd\tr0, r0, r2\n\tret\n.func_end36:\n\n__staticcall:\n.func_begin37:\n.tmp3:\n\tfar_call.static\tr1, r2, @.BB37_2\n.tmp4:\n\tadd\t1, r0, r2\n\tret\n.BB37_2:\n.tmp5:\n\tadd\tr0, r0, r2\n\tret\n.func_end37:\n\n\t.data\n\t.p2align\t5\ncalldatasize:\n\t.cell 0\n\n\t.p2align\t5\nptr_calldata:\n.cell\t0\n\n\t.note.GNU-stack\n\t.rodata\nCPI0_0:\nCPI1_1:\nCPI2_0:\nCPI3_1:\nCPI4_2:\nCPI5_3:\nCPI13_0:\nCPI14_1:\nCPI15_1:\nCPI16_0:\nCPI17_0:\nCPI20_0:\nCPI21_4:\nCPI22_3:\nCPI23_3:\nCPI26_1:\nCPI27_1:\nCPI28_1:\nCPI29_1:\nCPI30_0:\nCPI31_0:\nCPI32_2:\nCPI33_7:\nCPI34_1:\nCPI35_3:\n\t.cell 4294967295\nCPI0_1:\nCPI19_0:\nCPI24_1:\nCPI25_1:\n\t.cell 18446744073709551615\nCPI0_2:\nCPI6_0:\nCPI8_0:\nCPI9_0:\nCPI10_0:\nCPI11_0:\nCPI12_0:\n\t.cell -57896044618658097711785492504343953926634992332820282019728792003956564819968\nCPI0_3:\nCPI1_2:\nCPI5_5:\nCPI27_3:\nCPI28_3:\nCPI29_3:\nCPI30_3:\nCPI31_3:\nCPI34_4:\n\t.cell 904625697166532776746648320380374280103671757735618107014721178055227736064\nCPI0_4:\n\t.cell 53919893334301279589334030174039261352344891250716429051063678533632\nCPI0_5:\nCPI1_3:\nCPI5_7:\nCPI17_13:\nCPI19_1:\nCPI20_13:\nCPI24_2:\nCPI25_2:\nCPI30_11:\nCPI33_9:\nCPI34_6:\nCPI35_17:\n\t.cell 35408467139433450592217433187231851964531694900788300625387963629091585785856\nCPI0_6:\nCPI1_4:\nCPI5_8:\nCPI17_14:\nCPI19_2:\nCPI20_14:\nCPI24_3:\nCPI25_3:\nCPI30_12:\nCPI33_10:\nCPI34_7:\nCPI35_18:\n\t.cell 2852213850513516153367582212096\nCPI0_7:\n\t.cell 1901074597\nCPI0_8:\n\t.cell 2835717306\nCPI0_9:\n\t.cell 3578229790\nCPI0_10:\n\t.cell 3578229791\nCPI0_11:\n\t.cell 3714247998\nCPI0_12:\n\t.cell 4076725131\nCPI0_13:\n\t.cell 2835717307\nCPI0_14:\n\t.cell 3099549945\nCPI0_15:\n\t.cell 3577287571\nCPI0_16:\n\t.cell 2514000704\nCPI0_17:\n\t.cell 2514000705\nCPI0_18:\n\t.cell 2719481311\nCPI0_19:\n\t.cell 2757214935\nCPI0_20:\n\t.cell 1901074598\nCPI0_21:\n\t.cell 2376452955\nCPI0_22:\n\t.cell 2446411860\nCPI0_23:\n\t.cell 791671132\nCPI0_24:\n\t.cell 961581904\nCPI0_25:\n\t.cell 961581905\nCPI0_26:\n\t.cell 1086394137\nCPI0_27:\n\t.cell 1889567281\nCPI0_28:\n\t.cell 791671133\nCPI0_29:\n\t.cell 826074471\nCPI0_30:\n\t.cell 911641278\nCPI0_31:\n\t.cell 404098524\nCPI0_32:\n\t.cell 404098525\nCPI0_33:\n\t.cell 599290589\nCPI0_34:\n\t.cell 613063843\nCPI0_35:\n\t.cell 33540519\nCPI0_36:\n\t.cell 117300739\nCPI0_37:\n\t.cell 157198259\nCPI0_38:\n\t.cell 2535301200456458802993406410752\nCPI0_39:\nCPI3_0:\nCPI34_0:\nCPI35_5:\n\t.cell -43793174905514494007593527202885080560931385846891371816724828470911515928922\nCPI0_40:\nCPI2_2:\nCPI3_3:\nCPI4_0:\nCPI5_0:\nCPI8_1:\nCPI9_1:\nCPI10_1:\nCPI11_1:\nCPI12_1:\nCPI14_0:\nCPI15_0:\nCPI17_2:\nCPI20_2:\nCPI21_0:\nCPI22_0:\nCPI23_0:\nCPI26_0:\nCPI27_0:\nCPI28_0:\nCPI29_0:\nCPI30_2:\nCPI31_2:\nCPI34_3:\nCPI35_0:\n\t.cell 1461501637330902918203684832716283019655932542975\nCPI0_41:\nCPI6_1:\n\t.cell -26959946667150639794667015087019630673637144422540572481103610249216\nCPI0_42:\n\t.cell 904250603428552709895185118199468575982109441609966099573332780532423983104\nCPI0_43:\n\t.cell 54909818011127210282586622383458683342160741266077104324147033802515469565952\nCPI0_44:\n\t.cell 2535301202817642044428229017600\nCPI1_0:\n\t.cell 18446744073709551616\nCPI2_1:\nCPI3_2:\nCPI5_4:\nCPI13_1:\nCPI14_2:\nCPI15_2:\nCPI16_1:\nCPI17_1:\nCPI20_1:\nCPI21_6:\nCPI26_2:\nCPI27_2:\nCPI28_2:\nCPI29_2:\nCPI30_1:\nCPI31_1:\nCPI34_2:\nCPI35_6:\n\t.cell 904625697166532776746648320380374280103671760270919307471179981048634146816\nCPI2_3:\nCPI3_4:\nCPI4_3:\nCPI17_3:\nCPI20_3:\nCPI21_7:\nCPI22_6:\nCPI23_6:\nCPI35_7:\n\t.cell 904625697166532776746648320380374280103671755200316906558262375061821325312\nCPI2_4:\nCPI3_5:\nCPI17_4:\nCPI35_9:\n\t.cell 21498167346302451094516930465084812798900530214793017313261708129848854408973\nCPI4_1:\nCPI22_5:\nCPI23_5:\n\t.cell -1461501637330902918203684832716283019655932542976\nCPI4_4:\nCPI22_7:\nCPI23_7:\n\t.cell -52524777015005588113349992707137368332388074750292320778649315033004770043936\nCPI5_1:\n\t.cell -1000000000000000000000000000\nCPI5_2:\n\t.cell 1000000000000000000000000000\nCPI5_6:\nCPI27_4:\nCPI29_13:\nCPI34_5:\n\t.cell -15402802100530019096323380498944738953123845089667699673314898783681816316945\nCPI5_9:\nCPI34_8:\n\t.cell 31354931781638678563069525067809233856775101976563302031013534919694566519552\nCPI5_10:\nCPI17_12:\nCPI20_12:\nCPI21_3:\nCPI22_2:\nCPI23_2:\nCPI27_7:\nCPI28_7:\nCPI29_7:\nCPI30_7:\nCPI31_7:\nCPI32_1:\nCPI33_6:\nCPI34_9:\nCPI35_2:\n\t.cell 3963877391197344453575983046348115674221700746820753546331534351508065746944\nCPI5_11:\nCPI22_4:\nCPI23_4:\nCPI29_12:\nCPI32_3:\nCPI33_8:\nCPI34_10:\nCPI35_4:\n\t.cell 7922816251426433759354395033600\nCPI17_5:\nCPI20_5:\nCPI35_10:\n\t.cell 18446744073709551520\nCPI17_6:\nCPI20_6:\nCPI33_1:\nCPI35_11:\n\t.cell 452312848583266388373324160190187140051835877600158453279131187530910662655\nCPI17_7:\nCPI20_7:\nCPI33_2:\nCPI35_12:\n\t.cell 21711016731996786641919559689128982722488122124807605757398297001483711807488\nCPI17_8:\nCPI20_8:\nCPI33_3:\nCPI35_13:\n\t.cell 54277541829991966604798899222822456806220305312019014393495742503709279518720\nCPI17_9:\nCPI20_9:\nCPI33_4:\nCPI35_14:\n\t.cell 21797938705943676250364219608352299876616432895080889470814659460585888940032\nCPI17_10:\nCPI20_10:\nCPI35_15:\n\t.cell 29575939025326651103147056851280731856730096307297265050110089603845520883712\nCPI17_11:\nCPI20_11:\nCPI35_16:\n\t.cell 14660324671536848855038019151756929270603624611015312065435742144134322847744\nCPI20_4:\nCPI21_8:\nCPI35_8:\n\t.cell -4422201763333249725673726406278620787883548942654356884866643620688883542245\nCPI21_1:\n\t.cell 14676200736251895825930069203020569566653712848557604840047993945322262888448\nCPI21_2:\n\t.cell 29575939025326651103147056851280731857408058097627279114309994507495696917349\nCPI21_5:\nCPI23_10:\nCPI27_8:\nCPI28_8:\nCPI29_8:\nCPI30_8:\nCPI31_8:\n\t.cell 10458117451882892562347801444352\nCPI22_1:\nCPI23_1:\nCPI35_1:\n\t.cell 35943731656364841964516503116990081338611484598491072354577564874054038349170\nCPI23_8:\n\t.cell 45408759099000846574684193736602357774271237157169010951590501707763511459840\nCPI23_9:\n\t.cell 35943731656364841964517558219894961445653631979235167635064085396828900499553\nCPI24_0:\n\t.cell -27889059366240281169193357100633332908378892778709981755071813198463099602853\nCPI25_0:\n\t.cell -53278079350709166316280423202849322519190186591071851114874353210178472783461\nCPI27_5:\nCPI29_14:\n\t.cell 44065838241030143116324720188876985940908656145555552347773292252211112312832\nCPI27_6:\nCPI29_15:\n\t.cell 31354931781638678607228669297131712859100820671745083778533502622993977909346\nCPI27_9:\nCPI29_16:\n\t.cell 45887578820189300338443374388718498632482616163288499555830078344056365121536\nCPI27_10:\nCPI29_17:\n\t.cell 31354931781638678607228669297131712859126084785867252355217498662940140921970\nCPI27_11:\nCPI29_18:\n\t.cell 45433405612597180762055095701412804886438245671210399661410036396145969725440\nCPI27_12:\nCPI29_19:\n\t.cell 31354931781638678607228669297131712859107492772550336241160036866987736981860\nCPI28_4:\nCPI29_4:\nCPI30_4:\nCPI31_4:\n\t.cell -52305948261162578668367882225327028569797882979485679342215860919519743330011\nCPI28_5:\nCPI29_5:\nCPI30_5:\nCPI31_5:\n\t.cell 52219164999525148860834357634456956735281286572158918307284071279203377479680\nCPI28_6:\nCPI29_6:\nCPI30_6:\nCPI31_6:\n\t.cell 31354931781638678487916134672869638488806705378895508030211234510262059168357\nCPI28_9:\nCPI29_9:\nCPI30_9:\nCPI31_9:\n\t.cell 51742913093258732729005998692887265601192425265805909375210916622055285719040\nCPI28_10:\nCPI29_10:\nCPI30_10:\nCPI31_10:\n\t.cell 31354931781638678487916134672869638484047149969764982831501014746446650500196\nCPI29_11:\n\t.cell 31354931781638678538084197150757782427756587561754988975511141185730285404160\nCPI31_11:\n\t.cell 14690266658072097593480850647027335513285713462661904985951319567533531463680\nCPI31_12:\n\t.cell 31354931781638678506476475496475743842680577777870365728514456330491174612855\nCPI32_0:\nCPI33_5:\n\t.cell 37747710333430245980940452738832839721522435977096927851794211126014890045044\nCPI33_0:\n\t.cell 18446744073709551488\nCPI34_11:\nCPI35_19:\n\t.cell 30477093331325535156484366205017513032916288247744736121978319075454371233792\n","bytecode":{"object":""},"methodIdentifiers":{"DEFAULT_ADMIN_ROLE()":"a217fddf","MINTER_ROLE()":"d5391393","allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","decimals()":"313ce567","decreaseAllowance(address,uint256)":"a457c2d7","getRoleAdmin(bytes32)":"248a9ca3","grantRole(bytes32,address)":"2f2ff15d","hasRole(bytes32,address)":"91d14854","increaseAllowance(address,uint256)":"39509351","mint(address,uint256)":"40c10f19","name()":"06fdde03","owner()":"8da5cb5b","renounceOwnership()":"715018a6","renounceRole(bytes32,address)":"36568abe","revokeRole(bytes32,address)":"d547741f","supportsInterface(bytes4)":"01ffc9a7","symbol()":"95d89b41","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd","transferMinterRole(address)":"b8bf60f9","transferOwnership(address)":"f2fde38b"}},"irOptimized":"/*=====================================================*\n *                       WARNING                       *\n *  Solidity to Yul compilation is still EXPERIMENTAL  *\n *       It can result in LOSS OF FUNDS or worse       *\n *                !USE AT YOUR OWN RISK!               *\n *=====================================================*/\n\n/// @use-src 0:\"@openzeppelin/contracts/access/AccessControl.sol\", 1:\"@openzeppelin/contracts/access/IAccessControl.sol\", 2:\"@openzeppelin/contracts/access/Ownable.sol\", 3:\"@openzeppelin/contracts/token/ERC20/ERC20.sol\", 4:\"@openzeppelin/contracts/token/ERC20/IERC20.sol\", 5:\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\", 9:\"@openzeppelin/contracts/utils/Context.sol\", 11:\"@openzeppelin/contracts/utils/introspection/ERC165.sol\", 12:\"@openzeppelin/contracts/utils/introspection/IERC165.sol\", 17:\"contracts/SobaToken.sol\"\nobject \"SobaToken_3641\" {\n    code {\n        {\n            /// @src 17:233:1103  \"contract SobaToken is ERC20, Ownable, AccessControl {...\"\n            mstore(64, 128)\n            if callvalue() { revert(0, 0) }\n            let programSize := datasize(\"SobaToken_3641\")\n            let argSize := sub(codesize(), programSize)\n            let memoryDataOffset := allocate_memory(argSize)\n            codecopy(memoryDataOffset, programSize, argSize)\n            let _1 := add(memoryDataOffset, argSize)\n            if slt(sub(_1, memoryDataOffset), 64)\n            {\n                revert(/** @src -1:-1:-1 */ 0, 0)\n            }\n            /// @src 17:233:1103  \"contract SobaToken is ERC20, Ownable, AccessControl {...\"\n            let offset := mload(memoryDataOffset)\n            let _2 := sub(shl(64, 1), 1)\n            if gt(offset, _2)\n            {\n                revert(/** @src -1:-1:-1 */ 0, 0)\n            }\n            /// @src 17:233:1103  \"contract SobaToken is ERC20, Ownable, AccessControl {...\"\n            let value0 := abi_decode_string_fromMemory(add(memoryDataOffset, offset), _1)\n            let _3 := 32\n            let offset_1 := mload(add(memoryDataOffset, _3))\n            if gt(offset_1, _2)\n            {\n                revert(/** @src -1:-1:-1 */ 0, 0)\n            }\n            /// @src 17:233:1103  \"contract SobaToken is ERC20, Ownable, AccessControl {...\"\n            let _4 := abi_decode_string_fromMemory(add(memoryDataOffset, offset_1), _1)\n            let newLen := mload(value0)\n            if gt(newLen, _2) { panic_error_0x41() }\n            clean_up_bytearray_end_slots_string_storage(extract_byte_array_length(sload(/** @src 3:2046:2059  \"_name = name_\" */ 0x03)), /** @src 17:233:1103  \"contract SobaToken is ERC20, Ownable, AccessControl {...\" */ newLen)\n            let srcOffset := 0\n            srcOffset := _3\n            switch gt(newLen, 31)\n            case 1 {\n                let loopEnd := and(newLen, not(31))\n                let dstPtr := array_dataslot_string_storage()\n                let i := 0\n                for { } lt(i, loopEnd) { i := add(i, _3) }\n                {\n                    sstore(dstPtr, mload(add(value0, srcOffset)))\n                    dstPtr := add(dstPtr, 1)\n                    srcOffset := add(srcOffset, _3)\n                }\n                if lt(loopEnd, newLen)\n                {\n                    let lastValue := mload(add(value0, srcOffset))\n                    sstore(dstPtr, and(lastValue, not(shr(and(shl(/** @src 3:2046:2059  \"_name = name_\" */ 0x03, /** @src 17:233:1103  \"contract SobaToken is ERC20, Ownable, AccessControl {...\" */ newLen), 248), not(0)))))\n                }\n                sstore(/** @src 3:2046:2059  \"_name = name_\" */ 0x03, /** @src 17:233:1103  \"contract SobaToken is ERC20, Ownable, AccessControl {...\" */ add(shl(1, newLen), 1))\n            }\n            default {\n                let value := 0\n                if newLen\n                {\n                    value := mload(add(value0, srcOffset))\n                }\n                sstore(/** @src 3:2046:2059  \"_name = name_\" */ 0x03, /** @src 17:233:1103  \"contract SobaToken is ERC20, Ownable, AccessControl {...\" */ extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n            }\n            copy_byte_array_to_storage_from_string_to_string(_4)\n            /// @src 2:955:967  \"_msgSender()\"\n            fun_transferOwnership(/** @src 9:719:729  \"msg.sender\" */ caller())\n            /// @src 17:444:487  \"_mint(msg.sender, 1_000_000_000 * 10 ** 18)\"\n            fun_mint(/** @src 9:719:729  \"msg.sender\" */ caller())\n            /// @src 0:7032:7039  \"account\"\n            fun_grantRole_2379(/** @src 9:719:729  \"msg.sender\" */ caller())\n            /// @src 0:7032:7039  \"account\"\n            fun_grantRole(/** @src 9:719:729  \"msg.sender\" */ caller())\n            /// @src 17:233:1103  \"contract SobaToken is ERC20, Ownable, AccessControl {...\"\n            let _5 := mload(64)\n            let _6 := datasize(\"SobaToken_3641_deployed\")\n            codecopy(_5, dataoffset(\"SobaToken_3641_deployed\"), _6)\n            return(_5, _6)\n        }\n        function panic_error_0x41()\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x41)\n            revert(0, 0x24)\n        }\n        function allocate_memory(size) -> memPtr\n        {\n            memPtr := mload(64)\n            let newFreePtr := add(memPtr, and(add(size, 31), not(31)))\n            if or(gt(newFreePtr, sub(shl(64, 1), 1)), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n            mstore(64, newFreePtr)\n        }\n        function abi_decode_string_fromMemory(offset, end) -> array\n        {\n            if iszero(slt(add(offset, 0x1f), end)) { revert(0, 0) }\n            let _1 := mload(offset)\n            if gt(_1, sub(shl(64, 1), 1)) { panic_error_0x41() }\n            let _2 := 0x20\n            let array_1 := allocate_memory(add(and(add(_1, 0x1f), not(31)), _2))\n            mstore(array_1, _1)\n            if gt(add(add(offset, _1), _2), end)\n            {\n                revert(/** @src -1:-1:-1 */ 0, 0)\n            }\n            /// @src 17:233:1103  \"contract SobaToken is ERC20, Ownable, AccessControl {...\"\n            let i := /** @src -1:-1:-1 */ 0\n            /// @src 17:233:1103  \"contract SobaToken is ERC20, Ownable, AccessControl {...\"\n            for { } lt(i, _1) { i := add(i, _2) }\n            {\n                mstore(add(add(array_1, i), _2), mload(add(add(offset, i), _2)))\n            }\n            if gt(i, _1)\n            {\n                mstore(add(add(array_1, _1), _2), /** @src -1:-1:-1 */ 0)\n            }\n            /// @src 17:233:1103  \"contract SobaToken is ERC20, Ownable, AccessControl {...\"\n            array := array_1\n        }\n        function extract_byte_array_length(data) -> length\n        {\n            length := shr(1, data)\n            let outOfPlaceEncoding := and(data, 1)\n            if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n            if eq(outOfPlaceEncoding, lt(length, 32))\n            {\n                mstore(0, shl(224, 0x4e487b71))\n                mstore(4, 0x22)\n                revert(0, 0x24)\n            }\n        }\n        function array_dataslot_string_storage() -> data\n        {\n            mstore(0, /** @src 3:2046:2059  \"_name = name_\" */ 0x03)\n            /// @src 17:233:1103  \"contract SobaToken is ERC20, Ownable, AccessControl {...\"\n            data := keccak256(0, 0x20)\n        }\n        function array_dataslot_string_storage_5122() -> data\n        {\n            mstore(0, /** @src 3:2069:2086  \"_symbol = symbol_\" */ 0x04)\n            /// @src 17:233:1103  \"contract SobaToken is ERC20, Ownable, AccessControl {...\"\n            data := keccak256(0, 0x20)\n        }\n        function clean_up_bytearray_end_slots_string_storage(len, startIndex)\n        {\n            if gt(len, 31)\n            {\n                /// @src -1:-1:-1\n                let _1 := 0\n                /// @src 17:233:1103  \"contract SobaToken is ERC20, Ownable, AccessControl {...\"\n                mstore(/** @src -1:-1:-1 */ _1, /** @src 3:2046:2059  \"_name = name_\" */ 0x03)\n                /// @src 17:233:1103  \"contract SobaToken is ERC20, Ownable, AccessControl {...\"\n                let data := keccak256(/** @src -1:-1:-1 */ _1, /** @src 17:233:1103  \"contract SobaToken is ERC20, Ownable, AccessControl {...\" */ 0x20)\n                let deleteStart := add(data, shr(5, add(startIndex, 31)))\n                if lt(startIndex, 0x20) { deleteStart := data }\n                let _2 := add(data, shr(5, add(len, 31)))\n                let start := deleteStart\n                for { } lt(start, _2) { start := add(start, 1) }\n                {\n                    sstore(start, /** @src -1:-1:-1 */ _1)\n                }\n            }\n        }\n        /// @src 17:233:1103  \"contract SobaToken is ERC20, Ownable, AccessControl {...\"\n        function clean_up_bytearray_end_slots_string_storage_5121(len, startIndex)\n        {\n            if gt(len, 31)\n            {\n                /// @src -1:-1:-1\n                let _1 := 0\n                /// @src 17:233:1103  \"contract SobaToken is ERC20, Ownable, AccessControl {...\"\n                mstore(/** @src -1:-1:-1 */ _1, /** @src 3:2069:2086  \"_symbol = symbol_\" */ 0x04)\n                /// @src 17:233:1103  \"contract SobaToken is ERC20, Ownable, AccessControl {...\"\n                let data := keccak256(/** @src -1:-1:-1 */ _1, /** @src 17:233:1103  \"contract SobaToken is ERC20, Ownable, AccessControl {...\" */ 0x20)\n                let deleteStart := add(data, shr(5, add(startIndex, 31)))\n                if lt(startIndex, 0x20) { deleteStart := data }\n                let _2 := add(data, shr(5, add(len, 31)))\n                let start := deleteStart\n                for { } lt(start, _2) { start := add(start, 1) }\n                {\n                    sstore(start, /** @src -1:-1:-1 */ _1)\n                }\n            }\n        }\n        /// @src 17:233:1103  \"contract SobaToken is ERC20, Ownable, AccessControl {...\"\n        function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used\n        {\n            used := or(and(data, not(shr(shl(3, len), not(0)))), shl(1, len))\n        }\n        function copy_byte_array_to_storage_from_string_to_string(src)\n        {\n            let newLen := mload(src)\n            if gt(newLen, sub(shl(64, 1), 1)) { panic_error_0x41() }\n            clean_up_bytearray_end_slots_string_storage_5121(extract_byte_array_length(sload(/** @src 3:2069:2086  \"_symbol = symbol_\" */ 0x04)), /** @src 17:233:1103  \"contract SobaToken is ERC20, Ownable, AccessControl {...\" */ newLen)\n            let srcOffset := 0\n            let srcOffset_1 := 0x20\n            srcOffset := srcOffset_1\n            switch gt(newLen, 31)\n            case 1 {\n                let loopEnd := and(newLen, not(31))\n                let dstPtr := array_dataslot_string_storage_5122()\n                let i := 0\n                for { } lt(i, loopEnd) { i := add(i, srcOffset_1) }\n                {\n                    sstore(dstPtr, mload(add(src, srcOffset)))\n                    dstPtr := add(dstPtr, 1)\n                    srcOffset := add(srcOffset, srcOffset_1)\n                }\n                if lt(loopEnd, newLen)\n                {\n                    let lastValue := mload(add(src, srcOffset))\n                    sstore(dstPtr, and(lastValue, not(shr(and(shl(3, newLen), 248), not(0)))))\n                }\n                sstore(/** @src 3:2069:2086  \"_symbol = symbol_\" */ 0x04, /** @src 17:233:1103  \"contract SobaToken is ERC20, Ownable, AccessControl {...\" */ add(shl(1, newLen), 1))\n            }\n            default {\n                let value := 0\n                if newLen\n                {\n                    value := mload(add(src, srcOffset))\n                }\n                sstore(/** @src 3:2069:2086  \"_symbol = symbol_\" */ 0x04, /** @src 17:233:1103  \"contract SobaToken is ERC20, Ownable, AccessControl {...\" */ extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n            }\n        }\n        function mapping_index_access_mapping_address_bool_of_address_2400(key) -> dataSlot\n        {\n            mstore(/** @src 3:8622:8623  \"0\" */ 0x00, /** @src 17:233:1103  \"contract SobaToken is ERC20, Ownable, AccessControl {...\" */ and(key, sub(shl(160, 1), 1)))\n            mstore(0x20, /** @src 3:8622:8623  \"0\" */ 0x00)\n            /// @src 17:233:1103  \"contract SobaToken is ERC20, Ownable, AccessControl {...\"\n            dataSlot := keccak256(/** @src 3:8622:8623  \"0\" */ 0x00, /** @src 17:233:1103  \"contract SobaToken is ERC20, Ownable, AccessControl {...\" */ 0x40)\n        }\n        function mapping_index_access_mapping_address_bool_of_address(slot, key) -> dataSlot\n        {\n            mstore(0, and(key, sub(shl(160, 1), 1)))\n            mstore(0x20, slot)\n            dataSlot := keccak256(0, 0x40)\n        }\n        /// @ast-id 283 @src 0:7587:7820  \"function _grantRole(bytes32 role, address account) internal virtual {...\"\n        function fun_grantRole_2379(var_account)\n        {\n            /// @src 17:233:1103  \"contract SobaToken is ERC20, Ownable, AccessControl {...\"\n            let _1 := 0\n            mstore(_1, _1)\n            mstore(0x20, /** @src 0:3130:3136  \"_roles\" */ 0x06)\n            /// @src 0:7665:7814  \"if (!hasRole(role, account)) {...\"\n            if /** @src 0:7669:7692  \"!hasRole(role, account)\" */ iszero(/** @src 17:233:1103  \"contract SobaToken is ERC20, Ownable, AccessControl {...\" */ and(sload(/** @src 0:3130:3159  \"_roles[role].members[account]\" */ mapping_index_access_mapping_address_bool_of_address(/** @src 17:233:1103  \"contract SobaToken is ERC20, Ownable, AccessControl {...\" */ keccak256(_1, 0x40), /** @src 0:7670:7692  \"hasRole(role, account)\" */ var_account)), /** @src 17:233:1103  \"contract SobaToken is ERC20, Ownable, AccessControl {...\" */ 0xff))\n            /// @src 0:7665:7814  \"if (!hasRole(role, account)) {...\"\n            {\n                /// @src 17:233:1103  \"contract SobaToken is ERC20, Ownable, AccessControl {...\"\n                mstore(_1, _1)\n                mstore(0x20, /** @src 0:3130:3136  \"_roles\" */ 0x06)\n                /// @src 0:7708:7737  \"_roles[role].members[account]\"\n                let _2 := mapping_index_access_mapping_address_bool_of_address(/** @src 17:233:1103  \"contract SobaToken is ERC20, Ownable, AccessControl {...\" */ keccak256(_1, 0x40), /** @src 0:7708:7737  \"_roles[role].members[account]\" */ var_account)\n                /// @src 17:233:1103  \"contract SobaToken is ERC20, Ownable, AccessControl {...\"\n                sstore(_2, or(and(sload(_2), not(255)), /** @src 0:7740:7744  \"true\" */ 0x01))\n                /// @src 0:7763:7803  \"RoleGranted(role, account, _msgSender())\"\n                log4(/** @src 17:233:1103  \"contract SobaToken is ERC20, Ownable, AccessControl {...\" */ mload(0x40), _1, /** @src 0:7763:7803  \"RoleGranted(role, account, _msgSender())\" */ 0x2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d, /** @src 17:233:1103  \"contract SobaToken is ERC20, Ownable, AccessControl {...\" */ _1, /** @src 0:7763:7803  \"RoleGranted(role, account, _msgSender())\" */ var_account, /** @src 9:719:729  \"msg.sender\" */ caller())\n            }\n        }\n        /// @ast-id 283 @src 0:7587:7820  \"function _grantRole(bytes32 role, address account) internal virtual {...\"\n        function fun_grantRole(var_account)\n        {\n            /// @src 17:329:353  \"keccak256(\\\"MINTER_ROLE\\\")\"\n            let _1 := 0x9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a6\n            /// @src 17:233:1103  \"contract SobaToken is ERC20, Ownable, AccessControl {...\"\n            mstore(/** @src -1:-1:-1 */ 0, /** @src 17:329:353  \"keccak256(\\\"MINTER_ROLE\\\")\" */ _1)\n            /// @src 17:233:1103  \"contract SobaToken is ERC20, Ownable, AccessControl {...\"\n            mstore(0x20, /** @src 0:3130:3136  \"_roles\" */ 0x06)\n            /// @src 0:7665:7814  \"if (!hasRole(role, account)) {...\"\n            if /** @src 0:7669:7692  \"!hasRole(role, account)\" */ iszero(/** @src 17:233:1103  \"contract SobaToken is ERC20, Ownable, AccessControl {...\" */ and(sload(/** @src 0:3130:3159  \"_roles[role].members[account]\" */ mapping_index_access_mapping_address_bool_of_address(/** @src 17:233:1103  \"contract SobaToken is ERC20, Ownable, AccessControl {...\" */ keccak256(/** @src -1:-1:-1 */ 0, /** @src 17:233:1103  \"contract SobaToken is ERC20, Ownable, AccessControl {...\" */ 0x40), /** @src 0:7670:7692  \"hasRole(role, account)\" */ var_account)), /** @src 17:233:1103  \"contract SobaToken is ERC20, Ownable, AccessControl {...\" */ 0xff))\n            /// @src 0:7665:7814  \"if (!hasRole(role, account)) {...\"\n            {\n                /// @src 17:233:1103  \"contract SobaToken is ERC20, Ownable, AccessControl {...\"\n                mstore(/** @src -1:-1:-1 */ 0, /** @src 17:329:353  \"keccak256(\\\"MINTER_ROLE\\\")\" */ _1)\n                /// @src 17:233:1103  \"contract SobaToken is ERC20, Ownable, AccessControl {...\"\n                mstore(0x20, /** @src 0:3130:3136  \"_roles\" */ 0x06)\n                /// @src 0:7708:7737  \"_roles[role].members[account]\"\n                let _2 := mapping_index_access_mapping_address_bool_of_address(/** @src 17:233:1103  \"contract SobaToken is ERC20, Ownable, AccessControl {...\" */ keccak256(/** @src -1:-1:-1 */ 0, /** @src 17:233:1103  \"contract SobaToken is ERC20, Ownable, AccessControl {...\" */ 0x40), /** @src 0:7708:7737  \"_roles[role].members[account]\" */ var_account)\n                /// @src 17:233:1103  \"contract SobaToken is ERC20, Ownable, AccessControl {...\"\n                sstore(_2, or(and(sload(_2), not(255)), /** @src 0:7740:7744  \"true\" */ 0x01))\n                /// @src 0:7763:7803  \"RoleGranted(role, account, _msgSender())\"\n                log4(/** @src 17:233:1103  \"contract SobaToken is ERC20, Ownable, AccessControl {...\" */ mload(0x40), /** @src -1:-1:-1 */ 0, /** @src 0:7763:7803  \"RoleGranted(role, account, _msgSender())\" */ 0x2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d, /** @src 17:329:353  \"keccak256(\\\"MINTER_ROLE\\\")\" */ _1, /** @src 0:7763:7803  \"RoleGranted(role, account, _msgSender())\" */ var_account, /** @src 9:719:729  \"msg.sender\" */ caller())\n            }\n        }\n        /// @ast-id 500 @src 2:2426:2613  \"function _transferOwnership(address newOwner) internal virtual {...\"\n        function fun_transferOwnership(var_newOwner)\n        {\n            /// @src 17:233:1103  \"contract SobaToken is ERC20, Ownable, AccessControl {...\"\n            let _1 := sload(/** @src 2:2518:2524  \"_owner\" */ 0x05)\n            /// @src 17:233:1103  \"contract SobaToken is ERC20, Ownable, AccessControl {...\"\n            let _2 := sub(shl(160, 1), 1)\n            sstore(/** @src 2:2518:2524  \"_owner\" */ 0x05, /** @src 17:233:1103  \"contract SobaToken is ERC20, Ownable, AccessControl {...\" */ or(and(_1, not(sub(shl(160, 1), 1))), and(var_newOwner, _2)))\n            /// @src 2:2566:2606  \"OwnershipTransferred(oldOwner, newOwner)\"\n            log3(/** @src 17:233:1103  \"contract SobaToken is ERC20, Ownable, AccessControl {...\" */ mload(64), /** @src -1:-1:-1 */ 0, /** @src 2:2566:2606  \"OwnershipTransferred(oldOwner, newOwner)\" */ 0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0, /** @src 17:233:1103  \"contract SobaToken is ERC20, Ownable, AccessControl {...\" */ and(_1, _2), /** @src 2:2566:2606  \"OwnershipTransferred(oldOwner, newOwner)\" */ var_newOwner)\n        }\n        /// @src 17:233:1103  \"contract SobaToken is ERC20, Ownable, AccessControl {...\"\n        function update_storage_value_offsett_uint256_to_uint256(value)\n        {\n            sstore(/** @src 3:8731:8753  \"_totalSupply += amount\" */ 0x02, /** @src 17:233:1103  \"contract SobaToken is ERC20, Ownable, AccessControl {...\" */ value)\n        }\n        function abi_encode_uint256(headStart) -> tail\n        {\n            tail := add(headStart, 32)\n            mstore(headStart, /** @src 17:462:486  \"1_000_000_000 * 10 ** 18\" */ 0x033b2e3c9fd0803ce8000000)\n        }\n        /// @ast-id 905 @src 3:8520:9055  \"function _mint(address account, uint256 amount) internal virtual {...\"\n        function fun_mint(var_account)\n        {\n            /// @src 17:233:1103  \"contract SobaToken is ERC20, Ownable, AccessControl {...\"\n            if /** @src 3:8603:8624  \"account != address(0)\" */ iszero(/** @src 17:233:1103  \"contract SobaToken is ERC20, Ownable, AccessControl {...\" */ and(/** @src 3:8603:8624  \"account != address(0)\" */ var_account, /** @src 17:233:1103  \"contract SobaToken is ERC20, Ownable, AccessControl {...\" */ sub(shl(160, 1), 1)))\n            {\n                let memPtr := mload(64)\n                mstore(memPtr, shl(229, 4594637))\n                mstore(add(memPtr, 4), 32)\n                mstore(add(memPtr, 36), 31)\n                mstore(add(memPtr, 68), \"ERC20: mint to the zero address\")\n                revert(memPtr, 100)\n            }\n            let _1 := sload(/** @src 3:8731:8753  \"_totalSupply += amount\" */ 0x02)\n            /// @src 17:233:1103  \"contract SobaToken is ERC20, Ownable, AccessControl {...\"\n            if gt(_1, not(/** @src 17:462:486  \"1_000_000_000 * 10 ** 18\" */ 0x033b2e3c9fd0803ce8000000))\n            /// @src 17:233:1103  \"contract SobaToken is ERC20, Ownable, AccessControl {...\"\n            {\n                mstore(/** @src 3:8622:8623  \"0\" */ 0x00, /** @src 17:233:1103  \"contract SobaToken is ERC20, Ownable, AccessControl {...\" */ shl(224, 0x4e487b71))\n                mstore(4, 0x11)\n                revert(/** @src 3:8622:8623  \"0\" */ 0x00, /** @src 17:233:1103  \"contract SobaToken is ERC20, Ownable, AccessControl {...\" */ 0x24)\n            }\n            /// @src 17:462:486  \"1_000_000_000 * 10 ** 18\"\n            let _2 := 0x033b2e3c9fd0803ce8000000\n            /// @src 3:8731:8753  \"_totalSupply += amount\"\n            update_storage_value_offsett_uint256_to_uint256(/** @src 17:233:1103  \"contract SobaToken is ERC20, Ownable, AccessControl {...\" */ add(_1, /** @src 17:462:486  \"1_000_000_000 * 10 ** 18\" */ _2))\n            /// @src 3:8899:8917  \"_balances[account]\"\n            let _3 := mapping_index_access_mapping_address_bool_of_address_2400(var_account)\n            /// @src 17:233:1103  \"contract SobaToken is ERC20, Ownable, AccessControl {...\"\n            sstore(_3, add(sload(/** @src 3:8899:8927  \"_balances[account] += amount\" */ _3), /** @src 17:462:486  \"1_000_000_000 * 10 ** 18\" */ _2))\n            /// @src 3:8952:8989  \"Transfer(address(0), account, amount)\"\n            let _4 := /** @src 17:233:1103  \"contract SobaToken is ERC20, Ownable, AccessControl {...\" */ mload(64)\n            /// @src 3:8952:8989  \"Transfer(address(0), account, amount)\"\n            log3(_4, sub(abi_encode_uint256(_4), _4), 0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef, /** @src 3:8622:8623  \"0\" */ 0x00, /** @src 3:8952:8989  \"Transfer(address(0), account, amount)\" */ var_account)\n        }\n    }\n    /// @use-src 0:\"@openzeppelin/contracts/access/AccessControl.sol\", 2:\"@openzeppelin/contracts/access/Ownable.sol\", 3:\"@openzeppelin/contracts/token/ERC20/ERC20.sol\", 9:\"@openzeppelin/contracts/utils/Context.sol\", 10:\"@openzeppelin/contracts/utils/Strings.sol\", 11:\"@openzeppelin/contracts/utils/introspection/ERC165.sol\", 17:\"contracts/SobaToken.sol\"\n    object \"SobaToken_3641_deployed\" {\n        code {\n            {\n                /// @src 17:233:1103  \"contract SobaToken is ERC20, Ownable, AccessControl {...\"\n                let _1 := 64\n                mstore(_1, 128)\n                if iszero(lt(calldatasize(), 4))\n                {\n                    let _2 := 0\n                    switch shr(224, calldataload(_2))\n                    case 0x01ffc9a7 {\n                        if callvalue() { revert(_2, _2) }\n                        return(128, add(abi_encode_bool_5200(fun_supportsInterface(abi_decode_bytes4(calldatasize()))), not(127)))\n                    }\n                    case 0x06fdde03 {\n                        if callvalue() { revert(_2, _2) }\n                        abi_decode(calldatasize())\n                        let converted := copy_array_from_storage_to_memory_string_5202()\n                        let memPos := mload(_1)\n                        return(memPos, sub(abi_encode_string(memPos, converted), memPos))\n                    }\n                    case 0x095ea7b3 {\n                        if callvalue() { revert(_2, _2) }\n                        let param, param_1 := abi_decode_addresst_uint256(calldatasize())\n                        let ret := fun_approve(param, param_1)\n                        let memPos_1 := mload(_1)\n                        return(memPos_1, sub(abi_encode_bool(memPos_1, ret), memPos_1))\n                    }\n                    case 0x18160ddd {\n                        if callvalue() { revert(_2, _2) }\n                        abi_decode(calldatasize())\n                        let _3 := sload(/** @src 3:3342:3354  \"_totalSupply\" */ 0x02)\n                        /// @src 17:233:1103  \"contract SobaToken is ERC20, Ownable, AccessControl {...\"\n                        let memPos_2 := mload(_1)\n                        return(memPos_2, sub(abi_encode_uint256(memPos_2, _3), memPos_2))\n                    }\n                    case 0x23b872dd {\n                        if callvalue() { revert(_2, _2) }\n                        let param_2, param_3, param_4 := abi_decode_addresst_addresst_uint256(calldatasize())\n                        let ret_1 := fun_transferFrom(param_2, param_3, param_4)\n                        let memPos_3 := mload(_1)\n                        return(memPos_3, sub(abi_encode_bool(memPos_3, ret_1), memPos_3))\n                    }\n                    case 0x248a9ca3 {\n                        if callvalue() { revert(_2, _2) }\n                        let ret_2 := fun_getRoleAdmin(abi_decode_bytes32(calldatasize()))\n                        let memPos_4 := mload(_1)\n                        return(memPos_4, sub(abi_encode_uint256(memPos_4, ret_2), memPos_4))\n                    }\n                    case 0x2f2ff15d {\n                        if callvalue() { revert(_2, _2) }\n                        let param_5, param_6 := abi_decode_bytes32t_address(calldatasize())\n                        /// @src 0:4929:5074  \"function grantRole(bytes32 role, address account) public virtual override onlyRole(getRoleAdmin(role)) {...\"\n                        modifier_onlyRole(param_5, param_6)\n                        /// @src 17:233:1103  \"contract SobaToken is ERC20, Ownable, AccessControl {...\"\n                        return(mload(_1), _2)\n                    }\n                    case 0x313ce567 {\n                        if callvalue() { revert(_2, _2) }\n                        abi_decode(calldatasize())\n                        let memPos_5 := mload(_1)\n                        return(memPos_5, sub(abi_encode_uint8(memPos_5), memPos_5))\n                    }\n                    case 0x36568abe {\n                        if callvalue() { revert(_2, _2) }\n                        let param_7, param_8 := abi_decode_bytes32t_address(calldatasize())\n                        fun_renounceRole(param_7, param_8)\n                        return(mload(_1), _2)\n                    }\n                    case 0x39509351 {\n                        if callvalue() { revert(_2, _2) }\n                        let param_9, param_10 := abi_decode_addresst_uint256(calldatasize())\n                        let ret_3 := fun_increaseAllowance(param_9, param_10)\n                        let memPos_6 := mload(_1)\n                        return(memPos_6, sub(abi_encode_bool(memPos_6, ret_3), memPos_6))\n                    }\n                    case 0x40c10f19 {\n                        if callvalue() { revert(_2, _2) }\n                        let param_11, param_12 := abi_decode_addresst_uint256(calldatasize())\n                        fun_mint(param_11, param_12)\n                        return(mload(_1), _2)\n                    }\n                    case 0x70a08231 {\n                        if callvalue() { revert(_2, _2) }\n                        let ret_4 := fun_balanceOf(abi_decode_address(calldatasize()))\n                        let memPos_7 := mload(_1)\n                        return(memPos_7, sub(abi_encode_uint256(memPos_7, ret_4), memPos_7))\n                    }\n                    case 0x715018a6 {\n                        if callvalue() { revert(_2, _2) }\n                        abi_decode(calldatasize())\n                        /// @src 2:1824:1925  \"function renounceOwnership() public virtual onlyOwner {...\"\n                        modifier_onlyOwner_447()\n                        /// @src 17:233:1103  \"contract SobaToken is ERC20, Ownable, AccessControl {...\"\n                        return(mload(_1), _2)\n                    }\n                    case 0x8da5cb5b {\n                        if callvalue() { revert(_2, _2) }\n                        abi_decode(calldatasize())\n                        let ret_5 := and(sload(/** @src 2:1273:1279  \"_owner\" */ 0x05), /** @src 17:233:1103  \"contract SobaToken is ERC20, Ownable, AccessControl {...\" */ sub(shl(160, 1), 1))\n                        let memPos_8 := mload(_1)\n                        return(memPos_8, sub(abi_encode_address(memPos_8, ret_5), memPos_8))\n                    }\n                    case 0x91d14854 {\n                        if callvalue() { revert(_2, _2) }\n                        let param_13, param_14 := abi_decode_bytes32t_address(calldatasize())\n                        let ret_6 := /** @src 0:3130:3159  \"_roles[role].members[account]\" */ read_from_storage_split_offset_bool(mapping_index_access_mapping_address_bool_of_address(/** @src 0:3130:3142  \"_roles[role]\" */ mapping_index_access_mapping_bytes32_struct_RoleData_storage_of_bytes32(/** @src 17:233:1103  \"contract SobaToken is ERC20, Ownable, AccessControl {...\" */ param_13), param_14))\n                        let memPos_9 := mload(_1)\n                        return(memPos_9, sub(abi_encode_bool(memPos_9, ret_6), memPos_9))\n                    }\n                    case 0x95d89b41 {\n                        if callvalue() { revert(_2, _2) }\n                        abi_decode(calldatasize())\n                        let converted_1 := copy_array_from_storage_to_memory_string()\n                        let memPos_10 := mload(_1)\n                        return(memPos_10, sub(abi_encode_string(memPos_10, converted_1), memPos_10))\n                    }\n                    case 0xa217fddf {\n                        if callvalue() { revert(_2, _2) }\n                        abi_decode(calldatasize())\n                        let memPos_11 := mload(_1)\n                        return(memPos_11, sub(abi_encode_bytes32_5222(memPos_11), memPos_11))\n                    }\n                    case 0xa457c2d7 {\n                        if callvalue() { revert(_2, _2) }\n                        let param_15, param_16 := abi_decode_addresst_uint256(calldatasize())\n                        let ret_7 := fun_decreaseAllowance(param_15, param_16)\n                        let memPos_12 := mload(_1)\n                        return(memPos_12, sub(abi_encode_bool(memPos_12, ret_7), memPos_12))\n                    }\n                    case 0xa9059cbb {\n                        if callvalue() { revert(_2, _2) }\n                        let param_17, param_18 := abi_decode_addresst_uint256(calldatasize())\n                        let ret_8 := fun_transfer(param_17, param_18)\n                        let memPos_13 := mload(_1)\n                        return(memPos_13, sub(abi_encode_bool(memPos_13, ret_8), memPos_13))\n                    }\n                    case 0xb8bf60f9 {\n                        if callvalue() { revert(_2, _2) }\n                        /// @src 17:864:1101  \"function transferMinterRole(address newMinter) public onlyOwner {...\"\n                        modifier_onlyOwner_3617(/** @src 17:233:1103  \"contract SobaToken is ERC20, Ownable, AccessControl {...\" */ abi_decode_address(calldatasize()))\n                        return(mload(_1), _2)\n                    }\n                    case 0xd5391393 {\n                        if callvalue() { revert(_2, _2) }\n                        abi_decode(calldatasize())\n                        let memPos_14 := mload(_1)\n                        return(memPos_14, sub(abi_encode_bytes32(memPos_14), memPos_14))\n                    }\n                    case 0xd547741f {\n                        if callvalue() { revert(_2, _2) }\n                        let param_19, param_20 := abi_decode_bytes32t_address(calldatasize())\n                        /// @src 0:5354:5501  \"function revokeRole(bytes32 role, address account) public virtual override onlyRole(getRoleAdmin(role)) {...\"\n                        modifier_onlyRole_178(param_19, param_20)\n                        /// @src 17:233:1103  \"contract SobaToken is ERC20, Ownable, AccessControl {...\"\n                        return(mload(_1), _2)\n                    }\n                    case 0xdd62ed3e {\n                        if callvalue() { revert(_2, _2) }\n                        let param_21, param_22 := abi_decode_addresst_address(calldatasize())\n                        let _4 := sload(/** @src 3:4102:4129  \"_allowances[owner][spender]\" */ mapping_index_access_mapping_address_bool_of_address(/** @src 3:4102:4120  \"_allowances[owner]\" */ mapping_index_access_mapping_address_bool_of_address_5230(/** @src 17:233:1103  \"contract SobaToken is ERC20, Ownable, AccessControl {...\" */ param_21), param_22))\n                        let memPos_15 := mload(_1)\n                        return(memPos_15, sub(abi_encode_uint256(memPos_15, _4), memPos_15))\n                    }\n                    case 0xf2fde38b {\n                        if callvalue() { revert(_2, _2) }\n                        /// @src 2:2074:2272  \"function transferOwnership(address newOwner) public virtual onlyOwner {...\"\n                        modifier_onlyOwner(/** @src 17:233:1103  \"contract SobaToken is ERC20, Ownable, AccessControl {...\" */ abi_decode_address(calldatasize()))\n                        return(mload(_1), _2)\n                    }\n                }\n                revert(0, 0)\n            }\n            function abi_decode_bytes4(dataEnd) -> value0\n            {\n                if slt(add(dataEnd, not(3)), 32) { revert(0, 0) }\n                let value := calldataload(4)\n                if iszero(eq(value, and(value, shl(224, 0xffffffff))))\n                {\n                    revert(/** @src -1:-1:-1 */ 0, 0)\n                }\n                /// @src 17:233:1103  \"contract SobaToken is ERC20, Ownable, AccessControl {...\"\n                value0 := value\n            }\n            function abi_encode_bool_5200(value0) -> tail\n            {\n                tail := 160\n                mstore(128, iszero(iszero(value0)))\n            }\n            function abi_encode_bool(headStart, value0) -> tail\n            {\n                tail := add(headStart, 32)\n                mstore(headStart, iszero(iszero(value0)))\n            }\n            function abi_decode(dataEnd)\n            {\n                if slt(add(dataEnd, not(3)), 0) { revert(0, 0) }\n            }\n            function array_storeLengthForEncoding_string(pos, length) -> updated_pos\n            {\n                mstore(pos, length)\n                updated_pos := add(pos, 0x20)\n            }\n            function copy_memory_to_memory(src, dst, length)\n            {\n                let i := 0\n                for { } lt(i, length) { i := add(i, 32) }\n                {\n                    mstore(add(dst, i), mload(add(src, i)))\n                }\n                if gt(i, length) { mstore(add(dst, length), 0) }\n            }\n            function abi_encode_string(headStart, value0) -> tail\n            {\n                mstore(headStart, 32)\n                let length := mload(value0)\n                mstore(add(headStart, 32), length)\n                copy_memory_to_memory(add(value0, 32), add(headStart, 64), length)\n                tail := add(add(headStart, and(add(length, 31), not(31))), 64)\n            }\n            function abi_decode_addresst_uint256(dataEnd) -> value0, value1\n            {\n                if slt(add(dataEnd, not(3)), 64) { revert(0, 0) }\n                let value := calldataload(4)\n                if iszero(eq(value, and(value, sub(shl(160, 1), 1))))\n                {\n                    revert(/** @src -1:-1:-1 */ 0, 0)\n                }\n                /// @src 17:233:1103  \"contract SobaToken is ERC20, Ownable, AccessControl {...\"\n                value0 := value\n                value1 := calldataload(36)\n            }\n            function abi_encode_uint256(headStart, value0) -> tail\n            {\n                tail := add(headStart, 32)\n                mstore(headStart, value0)\n            }\n            function abi_decode_addresst_addresst_uint256(dataEnd) -> value0, value1, value2\n            {\n                if slt(add(dataEnd, not(3)), 96) { revert(0, 0) }\n                let value := calldataload(4)\n                let _1 := sub(shl(160, 1), 1)\n                if iszero(eq(value, and(value, _1)))\n                {\n                    revert(/** @src -1:-1:-1 */ 0, 0)\n                }\n                /// @src 17:233:1103  \"contract SobaToken is ERC20, Ownable, AccessControl {...\"\n                value0 := value\n                let value_1 := calldataload(36)\n                if iszero(eq(value_1, and(value_1, _1)))\n                {\n                    revert(/** @src -1:-1:-1 */ 0, 0)\n                }\n                /// @src 17:233:1103  \"contract SobaToken is ERC20, Ownable, AccessControl {...\"\n                value1 := value_1\n                value2 := calldataload(68)\n            }\n            function abi_decode_bytes32(dataEnd) -> value0\n            {\n                if slt(add(dataEnd, not(3)), 32) { revert(0, 0) }\n                value0 := calldataload(4)\n            }\n            function abi_encode_bytes32_5222(headStart) -> tail\n            {\n                tail := add(headStart, 32)\n                mstore(headStart, 0)\n            }\n            function abi_encode_bytes32(headStart) -> tail\n            {\n                tail := add(headStart, 32)\n                mstore(headStart, /** @src 17:329:353  \"keccak256(\\\"MINTER_ROLE\\\")\" */ 0x9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a6)\n            }\n            /// @src 17:233:1103  \"contract SobaToken is ERC20, Ownable, AccessControl {...\"\n            function abi_decode_bytes32t_address(dataEnd) -> value0, value1\n            {\n                if slt(add(dataEnd, not(3)), 64) { revert(0, 0) }\n                value0 := calldataload(4)\n                let value := calldataload(36)\n                if iszero(eq(value, and(value, sub(shl(160, 1), 1))))\n                {\n                    revert(/** @src -1:-1:-1 */ 0, 0)\n                }\n                /// @src 17:233:1103  \"contract SobaToken is ERC20, Ownable, AccessControl {...\"\n                value1 := value\n            }\n            function abi_encode_uint8(headStart) -> tail\n            {\n                tail := add(headStart, 32)\n                mstore(headStart, /** @src 17:849:851  \"18\" */ 0x12)\n            }\n            /// @src 17:233:1103  \"contract SobaToken is ERC20, Ownable, AccessControl {...\"\n            function abi_decode_address(dataEnd) -> value0\n            {\n                if slt(add(dataEnd, not(3)), 32) { revert(0, 0) }\n                let value := calldataload(4)\n                if iszero(eq(value, and(value, sub(shl(160, 1), 1))))\n                {\n                    revert(/** @src -1:-1:-1 */ 0, 0)\n                }\n                /// @src 17:233:1103  \"contract SobaToken is ERC20, Ownable, AccessControl {...\"\n                value0 := value\n            }\n            function abi_encode_address(headStart, value0) -> tail\n            {\n                tail := add(headStart, 32)\n                mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n            }\n            function abi_decode_addresst_address(dataEnd) -> value0, value1\n            {\n                if slt(add(dataEnd, not(3)), 64) { revert(0, 0) }\n                let value := calldataload(4)\n                let _1 := sub(shl(160, 1), 1)\n                if iszero(eq(value, and(value, _1)))\n                {\n                    revert(/** @src -1:-1:-1 */ 0, 0)\n                }\n                /// @src 17:233:1103  \"contract SobaToken is ERC20, Ownable, AccessControl {...\"\n                value0 := value\n                let value_1 := calldataload(36)\n                if iszero(eq(value_1, and(value_1, _1)))\n                {\n                    revert(/** @src -1:-1:-1 */ 0, 0)\n                }\n                /// @src 17:233:1103  \"contract SobaToken is ERC20, Ownable, AccessControl {...\"\n                value1 := value_1\n            }\n            /// @ast-id 60 @src 0:2732:2934  \"function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {...\"\n            function fun_supportsInterface(var_interfaceId) -> var\n            {\n                /// @src 17:233:1103  \"contract SobaToken is ERC20, Ownable, AccessControl {...\"\n                let _1 := and(/** @src 0:2840:2887  \"interfaceId == type(IAccessControl).interfaceId\" */ var_interfaceId, /** @src 17:233:1103  \"contract SobaToken is ERC20, Ownable, AccessControl {...\" */ shl(224, 0xffffffff))\n                /// @src 0:2840:2927  \"interfaceId == type(IAccessControl).interfaceId || super.supportsInterface(interfaceId)\"\n                let expr := /** @src 0:2840:2887  \"interfaceId == type(IAccessControl).interfaceId\" */ eq(/** @src 17:233:1103  \"contract SobaToken is ERC20, Ownable, AccessControl {...\" */ _1, /** @src 0:2855:2887  \"type(IAccessControl).interfaceId\" */ shl(224, 0x7965db0b))\n                /// @src 0:2840:2927  \"interfaceId == type(IAccessControl).interfaceId || super.supportsInterface(interfaceId)\"\n                if iszero(expr)\n                {\n                    expr := /** @src 11:937:977  \"interfaceId == type(IERC165).interfaceId\" */ eq(_1, /** @src 11:952:977  \"type(IERC165).interfaceId\" */ shl(224, 0x01ffc9a7))\n                }\n                /// @src 0:2833:2927  \"return interfaceId == type(IAccessControl).interfaceId || super.supportsInterface(interfaceId)\"\n                var := expr\n            }\n            /// @src 17:233:1103  \"contract SobaToken is ERC20, Ownable, AccessControl {...\"\n            function mapping_index_access_mapping_bytes32_struct_RoleData_storage_of_bytes32(key) -> dataSlot\n            {\n                mstore(0, key)\n                mstore(0x20, /** @src 0:3130:3136  \"_roles\" */ 0x06)\n                /// @src 17:233:1103  \"contract SobaToken is ERC20, Ownable, AccessControl {...\"\n                dataSlot := keccak256(0, 0x40)\n            }\n            function mapping_index_access_mapping_address_bool_of_address_5230(key) -> dataSlot\n            {\n                mstore(0, and(key, sub(shl(160, 1), 1)))\n                mstore(0x20, /** @src 3:4102:4113  \"_allowances\" */ 0x01)\n                /// @src 17:233:1103  \"contract SobaToken is ERC20, Ownable, AccessControl {...\"\n                dataSlot := keccak256(0, 0x40)\n            }\n            function mapping_index_access_mapping_address_bool_of_address_5239(key) -> dataSlot\n            {\n                mstore(/** @src 3:7568:7569  \"0\" */ 0x00, /** @src 17:233:1103  \"contract SobaToken is ERC20, Ownable, AccessControl {...\" */ and(key, sub(shl(160, 1), 1)))\n                mstore(0x20, /** @src 3:7568:7569  \"0\" */ 0x00)\n                /// @src 17:233:1103  \"contract SobaToken is ERC20, Ownable, AccessControl {...\"\n                dataSlot := keccak256(/** @src 3:7568:7569  \"0\" */ 0x00, /** @src 17:233:1103  \"contract SobaToken is ERC20, Ownable, AccessControl {...\" */ 0x40)\n            }\n            function mapping_index_access_mapping_address_bool_of_address(slot, key) -> dataSlot\n            {\n                mstore(0, and(key, sub(shl(160, 1), 1)))\n                mstore(0x20, slot)\n                dataSlot := keccak256(0, 0x40)\n            }\n            function read_from_storage_split_offset_bool(slot) -> value\n            {\n                value := and(sload(slot), 0xff)\n            }\n            /// @ast-id 146 @src 0:4504:4633  \"function getRoleAdmin(bytes32 role) public view virtual override returns (bytes32) {...\"\n            function fun_getRoleAdmin(var_role) -> var\n            {\n                /// @src 17:233:1103  \"contract SobaToken is ERC20, Ownable, AccessControl {...\"\n                mstore(/** @src -1:-1:-1 */ 0, /** @src 17:233:1103  \"contract SobaToken is ERC20, Ownable, AccessControl {...\" */ var_role)\n                mstore(0x20, /** @src 0:4604:4610  \"_roles\" */ 0x06)\n                /// @src 0:4597:4626  \"return _roles[role].adminRole\"\n                var := /** @src 17:233:1103  \"contract SobaToken is ERC20, Ownable, AccessControl {...\" */ sload(/** @src 0:4604:4626  \"_roles[role].adminRole\" */ add(/** @src 17:233:1103  \"contract SobaToken is ERC20, Ownable, AccessControl {...\" */ keccak256(/** @src -1:-1:-1 */ 0, /** @src 17:233:1103  \"contract SobaToken is ERC20, Ownable, AccessControl {...\" */ 0x40), /** @src 0:4604:4626  \"_roles[role].adminRole\" */ 1))\n            }\n            /// @ast-id 38 @src 0:2589:2665  \"modifier onlyRole(bytes32 role) {...\"\n            function modifier_onlyRole(var_role, var_account)\n            {\n                /// @src -1:-1:-1\n                let _1 := 0\n                /// @src 17:233:1103  \"contract SobaToken is ERC20, Ownable, AccessControl {...\"\n                mstore(/** @src -1:-1:-1 */ _1, /** @src 17:233:1103  \"contract SobaToken is ERC20, Ownable, AccessControl {...\" */ var_role)\n                mstore(0x20, /** @src 0:4604:4610  \"_roles\" */ 0x06)\n                /// @src 0:2642:2646  \"role\"\n                fun_checkRole(/** @src 17:233:1103  \"contract SobaToken is ERC20, Ownable, AccessControl {...\" */ sload(/** @src 0:4604:4626  \"_roles[role].adminRole\" */ add(/** @src 17:233:1103  \"contract SobaToken is ERC20, Ownable, AccessControl {...\" */ keccak256(/** @src -1:-1:-1 */ _1, /** @src 17:233:1103  \"contract SobaToken is ERC20, Ownable, AccessControl {...\" */ 0x40), /** @src 0:4604:4626  \"_roles[role].adminRole\" */ 1)))\n                /// @src 17:233:1103  \"contract SobaToken is ERC20, Ownable, AccessControl {...\"\n                mstore(/** @src -1:-1:-1 */ _1, /** @src 17:233:1103  \"contract SobaToken is ERC20, Ownable, AccessControl {...\" */ var_role)\n                mstore(0x20, /** @src 0:4604:4610  \"_roles\" */ 0x06)\n                /// @src 0:7665:7814  \"if (!hasRole(role, account)) {...\"\n                if /** @src 0:7669:7692  \"!hasRole(role, account)\" */ iszero(/** @src 17:233:1103  \"contract SobaToken is ERC20, Ownable, AccessControl {...\" */ and(sload(/** @src 0:3130:3159  \"_roles[role].members[account]\" */ mapping_index_access_mapping_address_bool_of_address(/** @src 17:233:1103  \"contract SobaToken is ERC20, Ownable, AccessControl {...\" */ keccak256(/** @src -1:-1:-1 */ _1, /** @src 17:233:1103  \"contract SobaToken is ERC20, Ownable, AccessControl {...\" */ 0x40), /** @src 0:7670:7692  \"hasRole(role, account)\" */ var_account)), /** @src 17:233:1103  \"contract SobaToken is ERC20, Ownable, AccessControl {...\" */ 0xff))\n                /// @src 0:7665:7814  \"if (!hasRole(role, account)) {...\"\n                {\n                    /// @src 17:233:1103  \"contract SobaToken is ERC20, Ownable, AccessControl {...\"\n                    mstore(/** @src -1:-1:-1 */ _1, /** @src 17:233:1103  \"contract SobaToken is ERC20, Ownable, AccessControl {...\" */ var_role)\n                    mstore(0x20, /** @src 0:4604:4610  \"_roles\" */ 0x06)\n                    /// @src 0:7708:7737  \"_roles[role].members[account]\"\n                    let _2 := mapping_index_access_mapping_address_bool_of_address(/** @src 17:233:1103  \"contract SobaToken is ERC20, Ownable, AccessControl {...\" */ keccak256(/** @src -1:-1:-1 */ _1, /** @src 17:233:1103  \"contract SobaToken is ERC20, Ownable, AccessControl {...\" */ 0x40), /** @src 0:7708:7737  \"_roles[role].members[account]\" */ var_account)\n                    /// @src 17:233:1103  \"contract SobaToken is ERC20, Ownable, AccessControl {...\"\n                    sstore(_2, or(and(sload(_2), not(255)), /** @src 0:4604:4626  \"_roles[role].adminRole\" */ 1))\n                    /// @src 0:7763:7803  \"RoleGranted(role, account, _msgSender())\"\n                    log4(/** @src 17:233:1103  \"contract SobaToken is ERC20, Ownable, AccessControl {...\" */ mload(0x40), /** @src -1:-1:-1 */ _1, /** @src 0:7763:7803  \"RoleGranted(role, account, _msgSender())\" */ 0x2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d, var_role, var_account, /** @src 9:719:729  \"msg.sender\" */ caller())\n                }\n            }\n            /// @ast-id 92 @src 0:3460:3563  \"function _checkRole(bytes32 role) internal view virtual {...\"\n            function fun_checkRole(var_role)\n            {\n                /// @src 17:233:1103  \"contract SobaToken is ERC20, Ownable, AccessControl {...\"\n                mstore(/** @src -1:-1:-1 */ 0, /** @src 17:233:1103  \"contract SobaToken is ERC20, Ownable, AccessControl {...\" */ var_role)\n                mstore(0x20, /** @src 0:3130:3136  \"_roles\" */ 0x06)\n                /// @src 0:3927:4317  \"if (!hasRole(role, account)) {...\"\n                if /** @src 0:3931:3954  \"!hasRole(role, account)\" */ iszero(/** @src 17:233:1103  \"contract SobaToken is ERC20, Ownable, AccessControl {...\" */ and(sload(/** @src 0:3130:3159  \"_roles[role].members[account]\" */ mapping_index_access_mapping_address_bool_of_address(/** @src 17:233:1103  \"contract SobaToken is ERC20, Ownable, AccessControl {...\" */ keccak256(/** @src -1:-1:-1 */ 0, /** @src 17:233:1103  \"contract SobaToken is ERC20, Ownable, AccessControl {...\" */ 0x40), /** @src 9:719:729  \"msg.sender\" */ caller())), /** @src 17:233:1103  \"contract SobaToken is ERC20, Ownable, AccessControl {...\" */ 0xff))\n                /// @src 0:3927:4317  \"if (!hasRole(role, account)) {...\"\n                {\n                    /// @src 10:2497:2549  \"toHexString(uint256(uint160(addr)), _ADDRESS_LENGTH)\"\n                    let var_value := /** @src 9:719:729  \"msg.sender\" */ caller()\n                    /// @src 10:1940:1965  \"new bytes(2 * length + 2)\"\n                    let expr_mpos := allocate_and_zero_memory_array_bytes()\n                    /// @src 10:1975:1990  \"buffer[0] = \\\"0\\\"\"\n                    mstore8(memory_array_index_access_bytes_5245(expr_mpos), 48)\n                    /// @src 10:2000:2015  \"buffer[1] = \\\"x\\\"\"\n                    mstore8(memory_array_index_access_bytes_5246(expr_mpos), 120)\n                    /// @src 10:2030:2056  \"uint256 i = 2 * length + 1\"\n                    let var_i := /** @src 17:233:1103  \"contract SobaToken is ERC20, Ownable, AccessControl {...\" */ 41\n                    /// @src 10:2025:2153  \"for (uint256 i = 2 * length + 1; i > 1; --i) {...\"\n                    for { }\n                    /** @src 10:2058:2063  \"i > 1\" */ gt(var_i, /** @src 17:233:1103  \"contract SobaToken is ERC20, Ownable, AccessControl {...\" */ 1)\n                    /// @src 10:2030:2056  \"uint256 i = 2 * length + 1\"\n                    {\n                        /// @src 10:2065:2068  \"--i\"\n                        var_i := decrement_uint256(var_i)\n                    }\n                    {\n                        /// @src 10:2105:2116  \"value & 0xf\"\n                        let expr := and(var_value, /** @src 10:2113:2116  \"0xf\" */ 0x0f)\n                        /// @src 10:2096:2117  \"_SYMBOLS[value & 0xf]\"\n                        if iszero(lt(expr, 16)) { panic_error_0x32() }\n                        /// @src 10:2084:2117  \"buffer[i] = _SYMBOLS[value & 0xf]\"\n                        mstore8(memory_array_index_access_bytes(expr_mpos, var_i), /** @src 10:2096:2117  \"_SYMBOLS[value & 0xf]\" */ byte(expr, /** @src 17:233:1103  \"contract SobaToken is ERC20, Ownable, AccessControl {...\" */ shl(129, 0x181899199a1a9b1b9c1cb0b131b232b3)))\n                        /// @src 10:2131:2142  \"value >>= 4\"\n                        var_value := /** @src 10:278:296  \"\\\"0123456789abcdef\\\"\" */ shr(/** @src 17:233:1103  \"contract SobaToken is ERC20, Ownable, AccessControl {...\" */ 4, /** @src 10:2131:2142  \"value >>= 4\" */ var_value)\n                    }\n                    /// @src 10:2162:2217  \"require(value == 0, \\\"Strings: hex length insufficient\\\")\"\n                    require_helper_stringliteral_04fc(/** @src 10:2170:2180  \"value == 0\" */ iszero(var_value))\n                    /// @src 0:4214:4252  \"Strings.toHexString(uint256(role), 32)\"\n                    let expr_mpos_1 := fun_toHexString(var_role)\n                    /// @src 0:4022:4274  \"abi.encodePacked(...\"\n                    let expr_mpos_2 := /** @src 17:233:1103  \"contract SobaToken is ERC20, Ownable, AccessControl {...\" */ mload(0x40)\n                    /// @src 0:4022:4274  \"abi.encodePacked(...\"\n                    let _1 := sub(/** @src 17:233:1103  \"contract SobaToken is ERC20, Ownable, AccessControl {...\" */ abi_encode_string_memory_ptr(/** @src 0:4022:4274  \"abi.encodePacked(...\" */ expr_mpos_1, /** @src 17:233:1103  \"contract SobaToken is ERC20, Ownable, AccessControl {...\" */ abi_encode_stringliteral_f986(abi_encode_string_memory_ptr(/** @src 0:4022:4274  \"abi.encodePacked(...\" */ expr_mpos, /** @src 17:233:1103  \"contract SobaToken is ERC20, Ownable, AccessControl {...\" */ abi_encode_stringliteral_da0d(/** @src 0:4022:4274  \"abi.encodePacked(...\" */ add(expr_mpos_2, /** @src 17:233:1103  \"contract SobaToken is ERC20, Ownable, AccessControl {...\" */ 0x20))))), /** @src 0:4022:4274  \"abi.encodePacked(...\" */ expr_mpos_2)\n                    mstore(expr_mpos_2, add(_1, /** @src 17:233:1103  \"contract SobaToken is ERC20, Ownable, AccessControl {...\" */ not(31)))\n                    /// @src 0:4022:4274  \"abi.encodePacked(...\"\n                    finalize_allocation(expr_mpos_2, _1)\n                    /// @src 0:3970:4306  \"revert(...\"\n                    let _2 := /** @src 17:233:1103  \"contract SobaToken is ERC20, Ownable, AccessControl {...\" */ mload(0x40)\n                    /// @src 0:3970:4306  \"revert(...\"\n                    mstore(_2, shl(229, 4594637))\n                    revert(_2, sub(abi_encode_string(add(_2, /** @src 17:233:1103  \"contract SobaToken is ERC20, Ownable, AccessControl {...\" */ 4), /** @src 0:3970:4306  \"revert(...\" */ expr_mpos_2), _2))\n                }\n            }\n            /// @src 17:233:1103  \"contract SobaToken is ERC20, Ownable, AccessControl {...\"\n            function abi_encode_stringliteral_da0d(pos) -> end\n            {\n                mstore(pos, \"AccessControl: account \")\n                end := add(pos, 23)\n            }\n            function abi_encode_string_memory_ptr(value, pos) -> end\n            {\n                let length := mload(value)\n                copy_memory_to_memory(add(value, 0x20), pos, length)\n                end := add(pos, length)\n            }\n            function abi_encode_stringliteral_f986(pos) -> end\n            {\n                mstore(pos, \" is missing role \")\n                end := add(pos, 17)\n            }\n            function panic_error_0x41()\n            {\n                mstore(0, shl(224, 0x4e487b71))\n                mstore(4, 0x41)\n                revert(0, 0x24)\n            }\n            function finalize_allocation(memPtr, size)\n            {\n                let newFreePtr := add(memPtr, and(add(size, 31), not(31)))\n                if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n                mstore(64, newFreePtr)\n            }\n            /// @ast-id 38 @src 0:2589:2665  \"modifier onlyRole(bytes32 role) {...\"\n            function modifier_onlyRole_178(var_role, var_account)\n            {\n                /// @src 17:233:1103  \"contract SobaToken is ERC20, Ownable, AccessControl {...\"\n                mstore(/** @src -1:-1:-1 */ 0, /** @src 17:233:1103  \"contract SobaToken is ERC20, Ownable, AccessControl {...\" */ var_role)\n                mstore(0x20, /** @src 0:4604:4610  \"_roles\" */ 0x06)\n                /// @src 0:2642:2646  \"role\"\n                fun_checkRole(/** @src 17:233:1103  \"contract SobaToken is ERC20, Ownable, AccessControl {...\" */ sload(/** @src 0:4604:4626  \"_roles[role].adminRole\" */ add(/** @src 17:233:1103  \"contract SobaToken is ERC20, Ownable, AccessControl {...\" */ keccak256(/** @src -1:-1:-1 */ 0, /** @src 17:233:1103  \"contract SobaToken is ERC20, Ownable, AccessControl {...\" */ 0x40), /** @src 0:4604:4626  \"_roles[role].adminRole\" */ 1)))\n                /// @src 0:5486:5493  \"account\"\n                fun_revokeRole(var_role, var_account)\n            }\n            /// @ast-id 209 @src 0:6038:6252  \"function renounceRole(bytes32 role, address account) public virtual override {...\"\n            function fun_renounceRole(var_role, var_account)\n            {\n                /// @src 17:233:1103  \"contract SobaToken is ERC20, Ownable, AccessControl {...\"\n                if iszero(/** @src 0:6133:6156  \"account == _msgSender()\" */ eq(/** @src 17:233:1103  \"contract SobaToken is ERC20, Ownable, AccessControl {...\" */ and(/** @src 0:6133:6156  \"account == _msgSender()\" */ var_account, /** @src 17:233:1103  \"contract SobaToken is ERC20, Ownable, AccessControl {...\" */ sub(shl(160, 1), 1)), /** @src 9:719:729  \"msg.sender\" */ caller()))\n                /// @src 17:233:1103  \"contract SobaToken is ERC20, Ownable, AccessControl {...\"\n                {\n                    let memPtr := mload(64)\n                    mstore(memPtr, /** @src 0:3970:4306  \"revert(...\" */ shl(229, 4594637))\n                    /// @src 17:233:1103  \"contract SobaToken is ERC20, Ownable, AccessControl {...\"\n                    mstore(add(memPtr, 4), 32)\n                    mstore(add(memPtr, 36), 47)\n                    mstore(add(memPtr, 68), \"AccessControl: can only renounce\")\n                    mstore(add(memPtr, 100), \" roles for self\")\n                    revert(memPtr, 132)\n                }\n                /// @src 0:6237:6244  \"account\"\n                fun_revokeRole(var_role, var_account)\n            }\n            /// @ast-id 314 @src 0:7991:8225  \"function _revokeRole(bytes32 role, address account) internal virtual {...\"\n            function fun_revokeRole(var_role, var_account)\n            {\n                /// @src 17:233:1103  \"contract SobaToken is ERC20, Ownable, AccessControl {...\"\n                mstore(/** @src -1:-1:-1 */ 0, /** @src 17:233:1103  \"contract SobaToken is ERC20, Ownable, AccessControl {...\" */ var_role)\n                mstore(0x20, /** @src 0:3130:3136  \"_roles\" */ 0x06)\n                /// @src 0:8070:8219  \"if (hasRole(role, account)) {...\"\n                if /** @src 17:233:1103  \"contract SobaToken is ERC20, Ownable, AccessControl {...\" */ and(sload(/** @src 0:3130:3159  \"_roles[role].members[account]\" */ mapping_index_access_mapping_address_bool_of_address(/** @src 17:233:1103  \"contract SobaToken is ERC20, Ownable, AccessControl {...\" */ keccak256(/** @src -1:-1:-1 */ 0, /** @src 17:233:1103  \"contract SobaToken is ERC20, Ownable, AccessControl {...\" */ 0x40), /** @src 0:8074:8096  \"hasRole(role, account)\" */ var_account)), /** @src 17:233:1103  \"contract SobaToken is ERC20, Ownable, AccessControl {...\" */ 0xff)\n                /// @src 0:8070:8219  \"if (hasRole(role, account)) {...\"\n                {\n                    /// @src 17:233:1103  \"contract SobaToken is ERC20, Ownable, AccessControl {...\"\n                    mstore(/** @src -1:-1:-1 */ 0, /** @src 17:233:1103  \"contract SobaToken is ERC20, Ownable, AccessControl {...\" */ var_role)\n                    mstore(0x20, /** @src 0:3130:3136  \"_roles\" */ 0x06)\n                    /// @src 0:8112:8141  \"_roles[role].members[account]\"\n                    let _1 := mapping_index_access_mapping_address_bool_of_address(/** @src 17:233:1103  \"contract SobaToken is ERC20, Ownable, AccessControl {...\" */ keccak256(/** @src -1:-1:-1 */ 0, /** @src 17:233:1103  \"contract SobaToken is ERC20, Ownable, AccessControl {...\" */ 0x40), /** @src 0:8112:8141  \"_roles[role].members[account]\" */ var_account)\n                    /// @src 17:233:1103  \"contract SobaToken is ERC20, Ownable, AccessControl {...\"\n                    sstore(_1, and(sload(_1), not(255)))\n                    /// @src 0:8168:8208  \"RoleRevoked(role, account, _msgSender())\"\n                    log4(/** @src 17:233:1103  \"contract SobaToken is ERC20, Ownable, AccessControl {...\" */ mload(0x40), /** @src -1:-1:-1 */ 0, /** @src 0:8168:8208  \"RoleRevoked(role, account, _msgSender())\" */ 0xf6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b, var_role, var_account, /** @src 9:719:729  \"msg.sender\" */ caller())\n                }\n            }\n            /// @ast-id 420 @src 2:1063:1125  \"modifier onlyOwner() {...\"\n            function modifier_onlyOwner_447()\n            {\n                fun_checkOwner()\n                /// @src 17:233:1103  \"contract SobaToken is ERC20, Ownable, AccessControl {...\"\n                let _1 := sload(/** @src 2:2518:2524  \"_owner\" */ 0x05)\n                /// @src 17:233:1103  \"contract SobaToken is ERC20, Ownable, AccessControl {...\"\n                sstore(/** @src 2:2518:2524  \"_owner\" */ 0x05, /** @src 17:233:1103  \"contract SobaToken is ERC20, Ownable, AccessControl {...\" */ and(_1, shl(160, 0xffffffffffffffffffffffff)))\n                /// @src 2:2566:2606  \"OwnershipTransferred(oldOwner, newOwner)\"\n                log3(/** @src 17:233:1103  \"contract SobaToken is ERC20, Ownable, AccessControl {...\" */ mload(64), 0, /** @src 2:2566:2606  \"OwnershipTransferred(oldOwner, newOwner)\" */ 0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0, /** @src 17:233:1103  \"contract SobaToken is ERC20, Ownable, AccessControl {...\" */ and(_1, sub(shl(160, 1), 1)), 0)\n            }\n            /// @ast-id 443 @src 2:1359:1489  \"function _checkOwner() internal view virtual {...\"\n            function fun_checkOwner()\n            {\n                /// @src 17:233:1103  \"contract SobaToken is ERC20, Ownable, AccessControl {...\"\n                let value := and(sload(/** @src 2:1273:1279  \"_owner\" */ 0x05), /** @src 17:233:1103  \"contract SobaToken is ERC20, Ownable, AccessControl {...\" */ sub(shl(160, 1), 1))\n                if iszero(/** @src 2:1422:1445  \"owner() == _msgSender()\" */ eq(/** @src 17:233:1103  \"contract SobaToken is ERC20, Ownable, AccessControl {...\" */ value, /** @src 9:719:729  \"msg.sender\" */ caller()))\n                /// @src 17:233:1103  \"contract SobaToken is ERC20, Ownable, AccessControl {...\"\n                {\n                    let memPtr := mload(64)\n                    mstore(memPtr, /** @src 0:3970:4306  \"revert(...\" */ shl(229, 4594637))\n                    /// @src 17:233:1103  \"contract SobaToken is ERC20, Ownable, AccessControl {...\"\n                    mstore(add(memPtr, 4), 32)\n                    mstore(add(memPtr, 36), 32)\n                    mstore(add(memPtr, 68), \"Ownable: caller is not the owner\")\n                    revert(memPtr, 100)\n                }\n            }\n            /// @ast-id 420 @src 2:1063:1125  \"modifier onlyOwner() {...\"\n            function modifier_onlyOwner(var_newOwner)\n            {\n                fun_checkOwner()\n                /// @src 17:233:1103  \"contract SobaToken is ERC20, Ownable, AccessControl {...\"\n                let _1 := sub(shl(160, 1), 1)\n                let _2 := and(/** @src 2:2162:2184  \"newOwner != address(0)\" */ var_newOwner, /** @src 17:233:1103  \"contract SobaToken is ERC20, Ownable, AccessControl {...\" */ _1)\n                if /** @src 2:2162:2184  \"newOwner != address(0)\" */ iszero(/** @src 17:233:1103  \"contract SobaToken is ERC20, Ownable, AccessControl {...\" */ _2)\n                {\n                    let memPtr := mload(64)\n                    mstore(memPtr, /** @src 0:3970:4306  \"revert(...\" */ shl(229, 4594637))\n                    /// @src 17:233:1103  \"contract SobaToken is ERC20, Ownable, AccessControl {...\"\n                    mstore(add(memPtr, 4), 32)\n                    mstore(add(memPtr, 36), 38)\n                    mstore(add(memPtr, 68), \"Ownable: new owner is the zero a\")\n                    mstore(add(memPtr, 100), \"ddress\")\n                    revert(memPtr, 132)\n                }\n                let _3 := sload(/** @src 2:2518:2524  \"_owner\" */ 0x05)\n                /// @src 17:233:1103  \"contract SobaToken is ERC20, Ownable, AccessControl {...\"\n                sstore(/** @src 2:2518:2524  \"_owner\" */ 0x05, /** @src 17:233:1103  \"contract SobaToken is ERC20, Ownable, AccessControl {...\" */ or(and(_3, shl(160, 0xffffffffffffffffffffffff)), _2))\n                /// @src 2:2566:2606  \"OwnershipTransferred(oldOwner, newOwner)\"\n                log3(/** @src 17:233:1103  \"contract SobaToken is ERC20, Ownable, AccessControl {...\" */ mload(64), /** @src -1:-1:-1 */ 0, /** @src 2:2566:2606  \"OwnershipTransferred(oldOwner, newOwner)\" */ 0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0, /** @src 17:233:1103  \"contract SobaToken is ERC20, Ownable, AccessControl {...\" */ and(_3, _1), /** @src 2:2566:2606  \"OwnershipTransferred(oldOwner, newOwner)\" */ var_newOwner)\n            }\n            /// @src 17:233:1103  \"contract SobaToken is ERC20, Ownable, AccessControl {...\"\n            function array_dataslot_string_storage_9323() -> data\n            {\n                mstore(0, /** @src 3:2244:2249  \"_name\" */ 0x03)\n                /// @src 17:233:1103  \"contract SobaToken is ERC20, Ownable, AccessControl {...\"\n                data := 87903029871075914254377627908054574944891091886930582284385770809450030037083\n            }\n            function array_dataslot_string_storage() -> data\n            {\n                mstore(0, 4)\n                data := 62514009886607029107290561805838585334079798074568712924583230797734656856475\n            }\n            function copy_array_from_storage_to_memory_string_5202() -> memPtr\n            {\n                memPtr := mload(64)\n                let ret := /** @src -1:-1:-1 */ 0\n                /// @src 17:233:1103  \"contract SobaToken is ERC20, Ownable, AccessControl {...\"\n                let slotValue := sload(/** @src 3:2244:2249  \"_name\" */ 0x03)\n                /// @src 17:233:1103  \"contract SobaToken is ERC20, Ownable, AccessControl {...\"\n                let length := /** @src -1:-1:-1 */ ret\n                /// @src 17:233:1103  \"contract SobaToken is ERC20, Ownable, AccessControl {...\"\n                let _1 := 1\n                length := shr(_1, slotValue)\n                let outOfPlaceEncoding := and(slotValue, _1)\n                if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n                let _2 := 32\n                if eq(outOfPlaceEncoding, lt(length, _2))\n                {\n                    mstore(/** @src -1:-1:-1 */ ret, /** @src 17:233:1103  \"contract SobaToken is ERC20, Ownable, AccessControl {...\" */ shl(224, 0x4e487b71))\n                    mstore(4, 0x22)\n                    revert(/** @src -1:-1:-1 */ ret, /** @src 17:233:1103  \"contract SobaToken is ERC20, Ownable, AccessControl {...\" */ 0x24)\n                }\n                let pos := array_storeLengthForEncoding_string(memPtr, length)\n                switch outOfPlaceEncoding\n                case 0 {\n                    mstore(pos, and(slotValue, not(255)))\n                    ret := add(pos, _2)\n                }\n                case 1 {\n                    let dataPos := array_dataslot_string_storage_9323()\n                    let i := /** @src -1:-1:-1 */ 0\n                    /// @src 17:233:1103  \"contract SobaToken is ERC20, Ownable, AccessControl {...\"\n                    for { } lt(i, length) { i := add(i, _2) }\n                    {\n                        mstore(add(pos, i), sload(dataPos))\n                        dataPos := add(dataPos, _1)\n                    }\n                    ret := add(pos, i)\n                }\n                finalize_allocation(memPtr, sub(ret, memPtr))\n            }\n            function copy_array_from_storage_to_memory_string() -> memPtr\n            {\n                memPtr := mload(64)\n                let ret := /** @src -1:-1:-1 */ 0\n                /// @src 17:233:1103  \"contract SobaToken is ERC20, Ownable, AccessControl {...\"\n                let slotValue := sload(4)\n                let length := /** @src -1:-1:-1 */ ret\n                /// @src 17:233:1103  \"contract SobaToken is ERC20, Ownable, AccessControl {...\"\n                let _1 := 1\n                length := shr(_1, slotValue)\n                let outOfPlaceEncoding := and(slotValue, _1)\n                if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n                let _2 := 32\n                if eq(outOfPlaceEncoding, lt(length, _2))\n                {\n                    mstore(/** @src -1:-1:-1 */ ret, /** @src 17:233:1103  \"contract SobaToken is ERC20, Ownable, AccessControl {...\" */ shl(224, 0x4e487b71))\n                    mstore(4, 0x22)\n                    revert(/** @src -1:-1:-1 */ ret, /** @src 17:233:1103  \"contract SobaToken is ERC20, Ownable, AccessControl {...\" */ 0x24)\n                }\n                let pos := array_storeLengthForEncoding_string(memPtr, length)\n                switch outOfPlaceEncoding\n                case 0 {\n                    mstore(pos, and(slotValue, not(255)))\n                    ret := add(pos, _2)\n                }\n                case 1 {\n                    let dataPos := array_dataslot_string_storage()\n                    let i := /** @src -1:-1:-1 */ 0\n                    /// @src 17:233:1103  \"contract SobaToken is ERC20, Ownable, AccessControl {...\"\n                    for { } lt(i, length) { i := add(i, _2) }\n                    {\n                        mstore(add(pos, i), sload(dataPos))\n                        dataPos := add(dataPos, _1)\n                    }\n                    ret := add(pos, i)\n                }\n                finalize_allocation(memPtr, sub(ret, memPtr))\n            }\n            /// @ast-id 600 @src 3:3419:3544  \"function balanceOf(address account) public view virtual override returns (uint256) {...\"\n            function fun_balanceOf(var_account) -> var\n            {\n                /// @src 17:233:1103  \"contract SobaToken is ERC20, Ownable, AccessControl {...\"\n                mstore(/** @src 3:3519:3528  \"_balances\" */ 0x00, /** @src 17:233:1103  \"contract SobaToken is ERC20, Ownable, AccessControl {...\" */ and(var_account, sub(shl(160, 1), 1)))\n                mstore(0x20, /** @src 3:3519:3528  \"_balances\" */ 0x00)\n                /// @src 3:3512:3537  \"return _balances[account]\"\n                var := /** @src 17:233:1103  \"contract SobaToken is ERC20, Ownable, AccessControl {...\" */ sload(keccak256(/** @src 3:3519:3528  \"_balances\" */ 0x00, /** @src 17:233:1103  \"contract SobaToken is ERC20, Ownable, AccessControl {...\" */ 0x40))\n            }\n            /// @ast-id 625 @src 3:3740:3929  \"function transfer(address to, uint256 amount) public virtual override returns (bool) {...\"\n            function fun_transfer(var_to, var_amount) -> var\n            {\n                /// @src 3:3894:3900  \"amount\"\n                fun__transfer(/** @src 9:719:729  \"msg.sender\" */ caller(), /** @src 3:3894:3900  \"amount\" */ var_to, var_amount)\n                /// @src 3:3911:3922  \"return true\"\n                var := /** @src 3:3918:3922  \"true\" */ 0x01\n            }\n            /// @ast-id 668 @src 3:4444:4641  \"function approve(address spender, uint256 amount) public virtual override returns (bool) {...\"\n            function fun_approve(var_spender, var_amount) -> var\n            {\n                /// @src 3:4606:4612  \"amount\"\n                fun__approve(/** @src 9:719:729  \"msg.sender\" */ caller(), /** @src 3:4606:4612  \"amount\" */ var_spender, var_amount)\n                /// @src 3:4623:4634  \"return true\"\n                var := /** @src 3:4630:4634  \"true\" */ 0x01\n            }\n            /// @ast-id 701 @src 3:5203:5459  \"function transferFrom(address from, address to, uint256 amount) public virtual override returns (bool) {...\"\n            function fun_transferFrom(var_from, var_to, var_amount) -> var\n            {\n                /// @src 17:233:1103  \"contract SobaToken is ERC20, Ownable, AccessControl {...\"\n                mstore(/** @src -1:-1:-1 */ 0, /** @src 17:233:1103  \"contract SobaToken is ERC20, Ownable, AccessControl {...\" */ and(var_from, sub(shl(160, 1), 1)))\n                mstore(0x20, /** @src 3:4102:4113  \"_allowances\" */ 0x01)\n                /// @src 17:233:1103  \"contract SobaToken is ERC20, Ownable, AccessControl {...\"\n                let _1 := sload(/** @src 3:4102:4129  \"_allowances[owner][spender]\" */ mapping_index_access_mapping_address_bool_of_address(/** @src 17:233:1103  \"contract SobaToken is ERC20, Ownable, AccessControl {...\" */ keccak256(/** @src -1:-1:-1 */ 0, /** @src 17:233:1103  \"contract SobaToken is ERC20, Ownable, AccessControl {...\" */ 0x40), /** @src 9:719:729  \"msg.sender\" */ caller()))\n                /// @src 3:11240:11483  \"if (currentAllowance != type(uint256).max) {...\"\n                if /** @src 3:11244:11281  \"currentAllowance != type(uint256).max\" */ iszero(eq(_1, /** @src 3:11264:11281  \"type(uint256).max\" */ not(0)))\n                /// @src 3:11240:11483  \"if (currentAllowance != type(uint256).max) {...\"\n                {\n                    /// @src 17:233:1103  \"contract SobaToken is ERC20, Ownable, AccessControl {...\"\n                    if /** @src 3:11305:11331  \"currentAllowance >= amount\" */ lt(_1, var_amount)\n                    /// @src 17:233:1103  \"contract SobaToken is ERC20, Ownable, AccessControl {...\"\n                    {\n                        let memPtr := mload(0x40)\n                        mstore(memPtr, /** @src 0:3970:4306  \"revert(...\" */ shl(229, 4594637))\n                        /// @src 17:233:1103  \"contract SobaToken is ERC20, Ownable, AccessControl {...\"\n                        mstore(add(memPtr, 4), 0x20)\n                        mstore(add(memPtr, 36), 29)\n                        mstore(add(memPtr, 68), \"ERC20: insufficient allowance\")\n                        revert(memPtr, 100)\n                    }\n                    /// @src 3:11432:11457  \"currentAllowance - amount\"\n                    fun__approve(var_from, /** @src 9:719:729  \"msg.sender\" */ caller(), /** @src 17:233:1103  \"contract SobaToken is ERC20, Ownable, AccessControl {...\" */ sub(/** @src 3:11432:11457  \"currentAllowance - amount\" */ _1, var_amount))\n                }\n                /// @src 3:5424:5430  \"amount\"\n                fun__transfer(var_from, var_to, var_amount)\n                /// @src 3:5441:5452  \"return true\"\n                var := /** @src 3:4102:4113  \"_allowances\" */ 0x01\n            }\n            /// @src 17:233:1103  \"contract SobaToken is ERC20, Ownable, AccessControl {...\"\n            function panic_error_0x11()\n            {\n                mstore(0, shl(224, 0x4e487b71))\n                mstore(4, 0x11)\n                revert(0, 0x24)\n            }\n            function checked_add_uint256(x, y) -> sum\n            {\n                if gt(x, not(y)) { panic_error_0x11() }\n                sum := add(x, y)\n            }\n            /// @ast-id 730 @src 3:5854:6088  \"function increaseAllowance(address spender, uint256 addedValue) public virtual returns (bool) {...\"\n            function fun_increaseAllowance(var_spender, var_addedValue) -> var\n            {\n                /// @src 17:233:1103  \"contract SobaToken is ERC20, Ownable, AccessControl {...\"\n                mstore(/** @src -1:-1:-1 */ 0, /** @src 9:719:729  \"msg.sender\" */ caller())\n                /// @src 17:233:1103  \"contract SobaToken is ERC20, Ownable, AccessControl {...\"\n                mstore(0x20, /** @src 3:4102:4113  \"_allowances\" */ 0x01)\n                /// @src 3:6021:6059  \"allowance(owner, spender) + addedValue\"\n                fun__approve(/** @src 9:719:729  \"msg.sender\" */ caller(), /** @src 3:6021:6059  \"allowance(owner, spender) + addedValue\" */ var_spender, checked_add_uint256(/** @src 17:233:1103  \"contract SobaToken is ERC20, Ownable, AccessControl {...\" */ sload(/** @src 3:4102:4129  \"_allowances[owner][spender]\" */ mapping_index_access_mapping_address_bool_of_address(/** @src 17:233:1103  \"contract SobaToken is ERC20, Ownable, AccessControl {...\" */ keccak256(/** @src -1:-1:-1 */ 0, /** @src 17:233:1103  \"contract SobaToken is ERC20, Ownable, AccessControl {...\" */ 0x40), /** @src 3:6021:6046  \"allowance(owner, spender)\" */ var_spender)), /** @src 3:6021:6059  \"allowance(owner, spender) + addedValue\" */ var_addedValue))\n                /// @src 3:6070:6081  \"return true\"\n                var := /** @src 3:4102:4113  \"_allowances\" */ 0x01\n            }\n            /// @ast-id 771 @src 3:6575:7002  \"function decreaseAllowance(address spender, uint256 subtractedValue) public virtual returns (bool) {...\"\n            function fun_decreaseAllowance(var_spender, var_subtractedValue) -> var\n            {\n                /// @src 17:233:1103  \"contract SobaToken is ERC20, Ownable, AccessControl {...\"\n                mstore(/** @src -1:-1:-1 */ 0, /** @src 9:719:729  \"msg.sender\" */ caller())\n                /// @src 17:233:1103  \"contract SobaToken is ERC20, Ownable, AccessControl {...\"\n                mstore(0x20, /** @src 3:4102:4113  \"_allowances\" */ 0x01)\n                /// @src 17:233:1103  \"contract SobaToken is ERC20, Ownable, AccessControl {...\"\n                let _1 := sload(/** @src 3:4102:4129  \"_allowances[owner][spender]\" */ mapping_index_access_mapping_address_bool_of_address(/** @src 17:233:1103  \"contract SobaToken is ERC20, Ownable, AccessControl {...\" */ keccak256(/** @src -1:-1:-1 */ 0, /** @src 17:233:1103  \"contract SobaToken is ERC20, Ownable, AccessControl {...\" */ 0x40), /** @src 3:6749:6774  \"allowance(owner, spender)\" */ var_spender))\n                /// @src 17:233:1103  \"contract SobaToken is ERC20, Ownable, AccessControl {...\"\n                if /** @src 3:6792:6827  \"currentAllowance >= subtractedValue\" */ lt(_1, var_subtractedValue)\n                /// @src 17:233:1103  \"contract SobaToken is ERC20, Ownable, AccessControl {...\"\n                {\n                    let memPtr := mload(0x40)\n                    mstore(memPtr, /** @src 0:3970:4306  \"revert(...\" */ shl(229, 4594637))\n                    /// @src 17:233:1103  \"contract SobaToken is ERC20, Ownable, AccessControl {...\"\n                    mstore(add(memPtr, 4), 0x20)\n                    mstore(add(memPtr, 36), 37)\n                    mstore(add(memPtr, 68), \"ERC20: decreased allowance below\")\n                    mstore(add(memPtr, 100), \" zero\")\n                    revert(memPtr, 132)\n                }\n                /// @src 3:6928:6962  \"currentAllowance - subtractedValue\"\n                fun__approve(/** @src 9:719:729  \"msg.sender\" */ caller(), /** @src 3:6928:6962  \"currentAllowance - subtractedValue\" */ var_spender, /** @src 17:233:1103  \"contract SobaToken is ERC20, Ownable, AccessControl {...\" */ sub(/** @src 3:6928:6962  \"currentAllowance - subtractedValue\" */ _1, var_subtractedValue))\n                /// @src 3:6984:6995  \"return true\"\n                var := /** @src 3:4102:4113  \"_allowances\" */ 0x01\n            }\n            /// @src 17:233:1103  \"contract SobaToken is ERC20, Ownable, AccessControl {...\"\n            function require_helper_stringliteral(condition)\n            {\n                if iszero(condition)\n                {\n                    let memPtr := mload(64)\n                    mstore(memPtr, /** @src 0:3970:4306  \"revert(...\" */ shl(229, 4594637))\n                    /// @src 17:233:1103  \"contract SobaToken is ERC20, Ownable, AccessControl {...\"\n                    mstore(add(memPtr, 4), 32)\n                    mstore(add(memPtr, 36), 35)\n                    mstore(add(memPtr, 68), \"ERC20: transfer to the zero addr\")\n                    mstore(add(memPtr, 100), \"ess\")\n                    revert(memPtr, 132)\n                }\n            }\n            function require_helper_stringliteral_4107(condition)\n            {\n                if iszero(condition)\n                {\n                    let memPtr := mload(64)\n                    mstore(memPtr, /** @src 0:3970:4306  \"revert(...\" */ shl(229, 4594637))\n                    /// @src 17:233:1103  \"contract SobaToken is ERC20, Ownable, AccessControl {...\"\n                    mstore(add(memPtr, 4), 32)\n                    mstore(add(memPtr, 36), 38)\n                    mstore(add(memPtr, 68), \"ERC20: transfer amount exceeds b\")\n                    mstore(add(memPtr, 100), \"alance\")\n                    revert(memPtr, 132)\n                }\n            }\n            /// @ast-id 848 @src 3:7456:8244  \"function _transfer(address from, address to, uint256 amount) internal virtual {...\"\n            function fun__transfer(var_from, var_to, var_amount)\n            {\n                /// @src 17:233:1103  \"contract SobaToken is ERC20, Ownable, AccessControl {...\"\n                let _1 := sub(shl(160, 1), 1)\n                if /** @src 3:7552:7570  \"from != address(0)\" */ iszero(/** @src 17:233:1103  \"contract SobaToken is ERC20, Ownable, AccessControl {...\" */ and(/** @src 3:7552:7570  \"from != address(0)\" */ var_from, /** @src 17:233:1103  \"contract SobaToken is ERC20, Ownable, AccessControl {...\" */ _1))\n                {\n                    let memPtr := mload(64)\n                    mstore(memPtr, /** @src 0:3970:4306  \"revert(...\" */ shl(229, 4594637))\n                    /// @src 17:233:1103  \"contract SobaToken is ERC20, Ownable, AccessControl {...\"\n                    mstore(add(memPtr, 4), 32)\n                    mstore(add(memPtr, 36), 37)\n                    mstore(add(memPtr, 68), \"ERC20: transfer from the zero ad\")\n                    mstore(add(memPtr, 100), \"dress\")\n                    revert(memPtr, 132)\n                }\n                /// @src 3:7622:7686  \"require(to != address(0), \\\"ERC20: transfer to the zero address\\\")\"\n                require_helper_stringliteral(/** @src 3:7630:7646  \"to != address(0)\" */ iszero(iszero(/** @src 17:233:1103  \"contract SobaToken is ERC20, Ownable, AccessControl {...\" */ and(/** @src 3:7630:7646  \"to != address(0)\" */ var_to, /** @src 17:233:1103  \"contract SobaToken is ERC20, Ownable, AccessControl {...\" */ _1))))\n                let _2 := sload(/** @src 3:7768:7783  \"_balances[from]\" */ mapping_index_access_mapping_address_bool_of_address_5239(var_from))\n                /// @src 3:7793:7865  \"require(fromBalance >= amount, \\\"ERC20: transfer amount exceeds balance\\\")\"\n                require_helper_stringliteral_4107(/** @src 3:7801:7822  \"fromBalance >= amount\" */ iszero(lt(_2, var_amount)))\n                /// @src 17:233:1103  \"contract SobaToken is ERC20, Ownable, AccessControl {...\"\n                sstore(/** @src 3:7899:7914  \"_balances[from]\" */ mapping_index_access_mapping_address_bool_of_address_5239(var_from), /** @src 17:233:1103  \"contract SobaToken is ERC20, Ownable, AccessControl {...\" */ sub(/** @src 3:7917:7937  \"fromBalance - amount\" */ _2, var_amount))\n                /// @src 3:8114:8127  \"_balances[to]\"\n                let _3 := mapping_index_access_mapping_address_bool_of_address_5239(var_to)\n                /// @src 17:233:1103  \"contract SobaToken is ERC20, Ownable, AccessControl {...\"\n                sstore(_3, add(sload(/** @src 3:8114:8137  \"_balances[to] += amount\" */ _3), /** @src 17:233:1103  \"contract SobaToken is ERC20, Ownable, AccessControl {...\" */ var_amount))\n                /// @src 3:8163:8189  \"Transfer(from, to, amount)\"\n                let _4 := /** @src 17:233:1103  \"contract SobaToken is ERC20, Ownable, AccessControl {...\" */ mload(64)\n                /// @src 3:8163:8189  \"Transfer(from, to, amount)\"\n                log3(_4, sub(abi_encode_uint256(_4, var_amount), _4), 0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef, var_from, var_to)\n            }\n            /// @ast-id 1022 @src 3:10457:10797  \"function _approve(address owner, address spender, uint256 amount) internal virtual {...\"\n            function fun__approve(var_owner, var_spender, var_amount)\n            {\n                /// @src 17:233:1103  \"contract SobaToken is ERC20, Ownable, AccessControl {...\"\n                let _1 := sub(shl(160, 1), 1)\n                if /** @src 3:10558:10577  \"owner != address(0)\" */ iszero(/** @src 17:233:1103  \"contract SobaToken is ERC20, Ownable, AccessControl {...\" */ and(/** @src 3:10558:10577  \"owner != address(0)\" */ var_owner, /** @src 17:233:1103  \"contract SobaToken is ERC20, Ownable, AccessControl {...\" */ _1))\n                {\n                    let memPtr := mload(64)\n                    mstore(memPtr, /** @src 0:3970:4306  \"revert(...\" */ shl(229, 4594637))\n                    /// @src 17:233:1103  \"contract SobaToken is ERC20, Ownable, AccessControl {...\"\n                    mstore(add(memPtr, 4), 32)\n                    mstore(add(memPtr, 36), 36)\n                    mstore(add(memPtr, 68), \"ERC20: approve from the zero add\")\n                    mstore(add(memPtr, 100), \"ress\")\n                    revert(memPtr, 132)\n                }\n                if /** @src 3:10636:10657  \"spender != address(0)\" */ iszero(/** @src 17:233:1103  \"contract SobaToken is ERC20, Ownable, AccessControl {...\" */ and(/** @src 3:10636:10657  \"spender != address(0)\" */ var_spender, /** @src 17:233:1103  \"contract SobaToken is ERC20, Ownable, AccessControl {...\" */ _1))\n                {\n                    let memPtr_1 := mload(64)\n                    mstore(memPtr_1, /** @src 0:3970:4306  \"revert(...\" */ shl(229, 4594637))\n                    /// @src 17:233:1103  \"contract SobaToken is ERC20, Ownable, AccessControl {...\"\n                    mstore(add(memPtr_1, 4), 32)\n                    mstore(add(memPtr_1, 36), 34)\n                    mstore(add(memPtr_1, 68), \"ERC20: approve to the zero addre\")\n                    mstore(add(memPtr_1, 100), \"ss\")\n                    revert(memPtr_1, 132)\n                }\n                sstore(/** @src 3:10707:10734  \"_allowances[owner][spender]\" */ mapping_index_access_mapping_address_bool_of_address(/** @src 3:10707:10725  \"_allowances[owner]\" */ mapping_index_access_mapping_address_bool_of_address_5230(var_owner), /** @src 3:10707:10734  \"_allowances[owner][spender]\" */ var_spender), /** @src 17:233:1103  \"contract SobaToken is ERC20, Ownable, AccessControl {...\" */ var_amount)\n                /// @src 3:10758:10790  \"Approval(owner, spender, amount)\"\n                let _2 := /** @src 17:233:1103  \"contract SobaToken is ERC20, Ownable, AccessControl {...\" */ mload(64)\n                /// @src 3:10758:10790  \"Approval(owner, spender, amount)\"\n                log3(_2, sub(abi_encode_uint256(_2, var_amount), _2), 0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925, var_owner, var_spender)\n            }\n            /// @src 17:233:1103  \"contract SobaToken is ERC20, Ownable, AccessControl {...\"\n            function allocate_and_zero_memory_array_bytes() -> memPtr\n            {\n                let memPtr_1 := mload(64)\n                let newFreePtr := add(memPtr_1, 96)\n                if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr_1)) { panic_error_0x41() }\n                mstore(64, newFreePtr)\n                mstore(memPtr_1, 42)\n                memPtr := memPtr_1\n                calldatacopy(add(memPtr_1, 0x20), calldatasize(), 64)\n            }\n            function panic_error_0x32()\n            {\n                mstore(0, shl(224, 0x4e487b71))\n                mstore(4, 0x32)\n                revert(0, 0x24)\n            }\n            function memory_array_index_access_bytes_5245(baseRef) -> addr\n            {\n                if iszero(mload(baseRef)) { panic_error_0x32() }\n                addr := add(baseRef, 32)\n            }\n            function memory_array_index_access_bytes_5246(baseRef) -> addr\n            {\n                if iszero(lt(/** @src 10:2007:2008  \"1\" */ 0x01, /** @src 17:233:1103  \"contract SobaToken is ERC20, Ownable, AccessControl {...\" */ mload(baseRef))) { panic_error_0x32() }\n                addr := add(baseRef, 33)\n            }\n            function memory_array_index_access_bytes(baseRef, index) -> addr\n            {\n                if iszero(lt(index, mload(baseRef))) { panic_error_0x32() }\n                addr := add(add(baseRef, index), 32)\n            }\n            function decrement_uint256(value) -> ret\n            {\n                if iszero(value) { panic_error_0x11() }\n                ret := add(value, /** @src 3:11264:11281  \"type(uint256).max\" */ not(0))\n            }\n            /// @src 10:278:296  \"\\\"0123456789abcdef\\\"\"\n            function require_helper_stringliteral_04fc(condition)\n            {\n                if iszero(condition)\n                {\n                    let memPtr := /** @src 17:233:1103  \"contract SobaToken is ERC20, Ownable, AccessControl {...\" */ mload(64)\n                    /// @src 10:278:296  \"\\\"0123456789abcdef\\\"\"\n                    mstore(memPtr, /** @src 0:3970:4306  \"revert(...\" */ shl(229, 4594637))\n                    /// @src 10:278:296  \"\\\"0123456789abcdef\\\"\"\n                    mstore(add(memPtr, 4), 32)\n                    /// @src 17:233:1103  \"contract SobaToken is ERC20, Ownable, AccessControl {...\"\n                    mstore(/** @src 10:278:296  \"\\\"0123456789abcdef\\\"\" */ add(memPtr, 36), 32)\n                    mstore(/** @src 17:233:1103  \"contract SobaToken is ERC20, Ownable, AccessControl {...\" */ add(/** @src 10:278:296  \"\\\"0123456789abcdef\\\"\" */ memPtr, /** @src 17:233:1103  \"contract SobaToken is ERC20, Ownable, AccessControl {...\" */ 68), /** @src 10:278:296  \"\\\"0123456789abcdef\\\"\" */ \"Strings: hex length insufficient\")\n                    revert(memPtr, 100)\n                }\n            }\n            /// @ast-id 2138 @src 10:1818:2255  \"function toHexString(uint256 value, uint256 length) internal pure returns (string memory) {...\"\n            function fun_toHexString(var_value) -> var_mpos\n            {\n                /// @src 17:233:1103  \"contract SobaToken is ERC20, Ownable, AccessControl {...\"\n                let memPtr := mload(64)\n                let newFreePtr := add(memPtr, 128)\n                if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n                mstore(64, newFreePtr)\n                mstore(memPtr, 66)\n                calldatacopy(add(memPtr, 0x20), calldatasize(), 96)\n                /// @src 10:1975:1990  \"buffer[0] = \\\"0\\\"\"\n                mstore8(memory_array_index_access_bytes_5245(memPtr), 48)\n                /// @src 10:2000:2015  \"buffer[1] = \\\"x\\\"\"\n                mstore8(memory_array_index_access_bytes_5246(memPtr), 120)\n                /// @src 10:2030:2056  \"uint256 i = 2 * length + 1\"\n                let var_i := /** @src 17:233:1103  \"contract SobaToken is ERC20, Ownable, AccessControl {...\" */ 65\n                /// @src 10:2025:2153  \"for (uint256 i = 2 * length + 1; i > 1; --i) {...\"\n                for { }\n                /** @src 10:2058:2063  \"i > 1\" */ gt(var_i, /** @src 10:2007:2008  \"1\" */ 0x01)\n                /// @src 10:2030:2056  \"uint256 i = 2 * length + 1\"\n                {\n                    /// @src 10:2065:2068  \"--i\"\n                    var_i := decrement_uint256(var_i)\n                }\n                {\n                    /// @src 10:2105:2116  \"value & 0xf\"\n                    let expr := and(var_value, /** @src 10:2113:2116  \"0xf\" */ 0x0f)\n                    /// @src 10:2096:2117  \"_SYMBOLS[value & 0xf]\"\n                    if iszero(lt(expr, 16)) { panic_error_0x32() }\n                    /// @src 10:2084:2117  \"buffer[i] = _SYMBOLS[value & 0xf]\"\n                    mstore8(memory_array_index_access_bytes(memPtr, var_i), /** @src 10:2096:2117  \"_SYMBOLS[value & 0xf]\" */ byte(expr, /** @src 17:233:1103  \"contract SobaToken is ERC20, Ownable, AccessControl {...\" */ shl(129, 0x181899199a1a9b1b9c1cb0b131b232b3)))\n                    /// @src 10:2131:2142  \"value >>= 4\"\n                    var_value := /** @src 10:278:296  \"\\\"0123456789abcdef\\\"\" */ shr(/** @src 17:233:1103  \"contract SobaToken is ERC20, Ownable, AccessControl {...\" */ 4, /** @src 10:2131:2142  \"value >>= 4\" */ var_value)\n                }\n                /// @src 10:2162:2217  \"require(value == 0, \\\"Strings: hex length insufficient\\\")\"\n                require_helper_stringliteral_04fc(/** @src 10:2170:2180  \"value == 0\" */ iszero(var_value))\n                /// @src 10:2227:2248  \"return string(buffer)\"\n                var_mpos := memPtr\n            }\n            /// @src 17:233:1103  \"contract SobaToken is ERC20, Ownable, AccessControl {...\"\n            function require_helper_stringliteral_71ab(condition)\n            {\n                if iszero(condition)\n                {\n                    let memPtr := mload(64)\n                    mstore(memPtr, /** @src 0:3970:4306  \"revert(...\" */ shl(229, 4594637))\n                    /// @src 17:233:1103  \"contract SobaToken is ERC20, Ownable, AccessControl {...\"\n                    mstore(add(memPtr, 4), 32)\n                    mstore(add(memPtr, 36), 22)\n                    mstore(add(memPtr, 68), \"Caller is not a minter\")\n                    revert(memPtr, 100)\n                }\n            }\n            /// @ast-id 3603 @src 17:597:761  \"function mint(address _to, uint256 _amount) public {...\"\n            function fun_mint(var__to, var_amount)\n            {\n                /// @src 17:233:1103  \"contract SobaToken is ERC20, Ownable, AccessControl {...\"\n                mstore(/** @src -1:-1:-1 */ 0, /** @src 17:329:353  \"keccak256(\\\"MINTER_ROLE\\\")\" */ 0x9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a6)\n                /// @src 17:233:1103  \"contract SobaToken is ERC20, Ownable, AccessControl {...\"\n                mstore(0x20, /** @src 0:3130:3136  \"_roles\" */ 0x06)\n                /// @src 17:658:725  \"require(hasRole(MINTER_ROLE, msg.sender), \\\"Caller is not a minter\\\")\"\n                require_helper_stringliteral_71ab(/** @src 17:233:1103  \"contract SobaToken is ERC20, Ownable, AccessControl {...\" */ and(sload(/** @src 0:3130:3159  \"_roles[role].members[account]\" */ mapping_index_access_mapping_address_bool_of_address(/** @src 17:233:1103  \"contract SobaToken is ERC20, Ownable, AccessControl {...\" */ keccak256(/** @src -1:-1:-1 */ 0, /** @src 17:233:1103  \"contract SobaToken is ERC20, Ownable, AccessControl {...\" */ 0x40), /** @src 17:687:697  \"msg.sender\" */ caller())), /** @src 17:233:1103  \"contract SobaToken is ERC20, Ownable, AccessControl {...\" */ 0xff))\n                if /** @src 3:8603:8624  \"account != address(0)\" */ iszero(/** @src 17:233:1103  \"contract SobaToken is ERC20, Ownable, AccessControl {...\" */ and(/** @src 3:8603:8624  \"account != address(0)\" */ var__to, /** @src 17:233:1103  \"contract SobaToken is ERC20, Ownable, AccessControl {...\" */ sub(shl(160, 1), 1)))\n                {\n                    let memPtr := mload(0x40)\n                    mstore(memPtr, /** @src 0:3970:4306  \"revert(...\" */ shl(229, 4594637))\n                    /// @src 17:233:1103  \"contract SobaToken is ERC20, Ownable, AccessControl {...\"\n                    mstore(add(memPtr, 4), 0x20)\n                    mstore(add(memPtr, 36), 31)\n                    mstore(add(memPtr, 68), \"ERC20: mint to the zero address\")\n                    revert(memPtr, 100)\n                }\n                sstore(/** @src 3:8731:8753  \"_totalSupply += amount\" */ 0x02, checked_add_uint256(/** @src 17:233:1103  \"contract SobaToken is ERC20, Ownable, AccessControl {...\" */ sload(/** @src 3:8731:8753  \"_totalSupply += amount\" */ 0x02), var_amount))\n                /// @src 3:8899:8917  \"_balances[account]\"\n                let _1 := mapping_index_access_mapping_address_bool_of_address_5239(var__to)\n                /// @src 17:233:1103  \"contract SobaToken is ERC20, Ownable, AccessControl {...\"\n                sstore(_1, add(sload(/** @src 3:8899:8927  \"_balances[account] += amount\" */ _1), /** @src 17:233:1103  \"contract SobaToken is ERC20, Ownable, AccessControl {...\" */ var_amount))\n                /// @src 3:8952:8989  \"Transfer(address(0), account, amount)\"\n                let _2 := /** @src 17:233:1103  \"contract SobaToken is ERC20, Ownable, AccessControl {...\" */ mload(0x40)\n                /// @src 3:8952:8989  \"Transfer(address(0), account, amount)\"\n                log3(_2, sub(abi_encode_uint256(_2, var_amount), _2), 0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef, /** @src -1:-1:-1 */ 0, /** @src 3:8952:8989  \"Transfer(address(0), account, amount)\" */ var__to)\n            }\n            /// @ast-id 420 @src 2:1063:1125  \"modifier onlyOwner() {...\"\n            function modifier_onlyOwner_3617(var_newMinter)\n            {\n                fun_checkOwner()\n                /// @src 17:329:353  \"keccak256(\\\"MINTER_ROLE\\\")\"\n                let _1 := 0x9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a6\n                /// @src -1:-1:-1\n                let _2 := 0\n                /// @src 17:233:1103  \"contract SobaToken is ERC20, Ownable, AccessControl {...\"\n                mstore(/** @src -1:-1:-1 */ _2, /** @src 17:329:353  \"keccak256(\\\"MINTER_ROLE\\\")\" */ _1)\n                /// @src 0:3130:3136  \"_roles\"\n                let _3 := 0x06\n                /// @src 17:233:1103  \"contract SobaToken is ERC20, Ownable, AccessControl {...\"\n                let _4 := 0x20\n                mstore(_4, /** @src 0:3130:3136  \"_roles\" */ _3)\n                /// @src 17:233:1103  \"contract SobaToken is ERC20, Ownable, AccessControl {...\"\n                let _5 := 0x40\n                /// @src 17:938:1005  \"require(hasRole(MINTER_ROLE, msg.sender), \\\"Caller is not a minter\\\")\"\n                require_helper_stringliteral_71ab(/** @src 17:233:1103  \"contract SobaToken is ERC20, Ownable, AccessControl {...\" */ and(sload(/** @src 0:3130:3159  \"_roles[role].members[account]\" */ mapping_index_access_mapping_address_bool_of_address(/** @src 17:233:1103  \"contract SobaToken is ERC20, Ownable, AccessControl {...\" */ keccak256(/** @src -1:-1:-1 */ _2, /** @src 17:233:1103  \"contract SobaToken is ERC20, Ownable, AccessControl {...\" */ _5), /** @src 17:967:977  \"msg.sender\" */ caller())), /** @src 17:233:1103  \"contract SobaToken is ERC20, Ownable, AccessControl {...\" */ 0xff))\n                mstore(/** @src -1:-1:-1 */ _2, /** @src 17:329:353  \"keccak256(\\\"MINTER_ROLE\\\")\" */ _1)\n                /// @src 17:233:1103  \"contract SobaToken is ERC20, Ownable, AccessControl {...\"\n                mstore(_4, /** @src 0:3130:3136  \"_roles\" */ _3)\n                /// @src 0:2642:2646  \"role\"\n                fun_checkRole(/** @src 17:233:1103  \"contract SobaToken is ERC20, Ownable, AccessControl {...\" */ sload(/** @src 0:4604:4626  \"_roles[role].adminRole\" */ add(/** @src 17:233:1103  \"contract SobaToken is ERC20, Ownable, AccessControl {...\" */ keccak256(/** @src -1:-1:-1 */ _2, /** @src 17:233:1103  \"contract SobaToken is ERC20, Ownable, AccessControl {...\" */ _5), /** @src 0:4604:4626  \"_roles[role].adminRole\" */ 1)))\n                /// @src 17:233:1103  \"contract SobaToken is ERC20, Ownable, AccessControl {...\"\n                mstore(/** @src -1:-1:-1 */ _2, /** @src 17:329:353  \"keccak256(\\\"MINTER_ROLE\\\")\" */ _1)\n                /// @src 17:233:1103  \"contract SobaToken is ERC20, Ownable, AccessControl {...\"\n                mstore(_4, /** @src 0:3130:3136  \"_roles\" */ _3)\n                /// @src 0:8070:8219  \"if (hasRole(role, account)) {...\"\n                if /** @src 17:233:1103  \"contract SobaToken is ERC20, Ownable, AccessControl {...\" */ and(sload(/** @src 0:3130:3159  \"_roles[role].members[account]\" */ mapping_index_access_mapping_address_bool_of_address(/** @src 17:233:1103  \"contract SobaToken is ERC20, Ownable, AccessControl {...\" */ keccak256(/** @src -1:-1:-1 */ _2, /** @src 17:233:1103  \"contract SobaToken is ERC20, Ownable, AccessControl {...\" */ _5), /** @src 17:967:977  \"msg.sender\" */ caller())), /** @src 17:233:1103  \"contract SobaToken is ERC20, Ownable, AccessControl {...\" */ 0xff)\n                /// @src 0:8070:8219  \"if (hasRole(role, account)) {...\"\n                {\n                    /// @src 17:233:1103  \"contract SobaToken is ERC20, Ownable, AccessControl {...\"\n                    mstore(/** @src -1:-1:-1 */ _2, /** @src 17:329:353  \"keccak256(\\\"MINTER_ROLE\\\")\" */ _1)\n                    /// @src 17:233:1103  \"contract SobaToken is ERC20, Ownable, AccessControl {...\"\n                    mstore(_4, /** @src 0:3130:3136  \"_roles\" */ _3)\n                    /// @src 0:8112:8141  \"_roles[role].members[account]\"\n                    let _6 := mapping_index_access_mapping_address_bool_of_address(/** @src 17:233:1103  \"contract SobaToken is ERC20, Ownable, AccessControl {...\" */ keccak256(/** @src -1:-1:-1 */ _2, /** @src 17:233:1103  \"contract SobaToken is ERC20, Ownable, AccessControl {...\" */ _5), /** @src 17:967:977  \"msg.sender\" */ caller())\n                    /// @src 17:233:1103  \"contract SobaToken is ERC20, Ownable, AccessControl {...\"\n                    sstore(_6, and(sload(_6), not(255)))\n                    /// @src 0:8168:8208  \"RoleRevoked(role, account, _msgSender())\"\n                    log4(/** @src 17:233:1103  \"contract SobaToken is ERC20, Ownable, AccessControl {...\" */ mload(_5), /** @src -1:-1:-1 */ _2, /** @src 0:8168:8208  \"RoleRevoked(role, account, _msgSender())\" */ 0xf6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b, /** @src 17:329:353  \"keccak256(\\\"MINTER_ROLE\\\")\" */ _1, /** @src 17:967:977  \"msg.sender\" */ caller(), caller())\n                }\n                /// @src 17:233:1103  \"contract SobaToken is ERC20, Ownable, AccessControl {...\"\n                mstore(/** @src -1:-1:-1 */ _2, /** @src 17:329:353  \"keccak256(\\\"MINTER_ROLE\\\")\" */ _1)\n                /// @src 17:233:1103  \"contract SobaToken is ERC20, Ownable, AccessControl {...\"\n                mstore(_4, /** @src 0:3130:3136  \"_roles\" */ _3)\n                /// @src 0:7665:7814  \"if (!hasRole(role, account)) {...\"\n                if /** @src 0:7669:7692  \"!hasRole(role, account)\" */ iszero(/** @src 17:233:1103  \"contract SobaToken is ERC20, Ownable, AccessControl {...\" */ and(sload(/** @src 0:3130:3159  \"_roles[role].members[account]\" */ mapping_index_access_mapping_address_bool_of_address(/** @src 17:233:1103  \"contract SobaToken is ERC20, Ownable, AccessControl {...\" */ keccak256(/** @src -1:-1:-1 */ _2, /** @src 17:233:1103  \"contract SobaToken is ERC20, Ownable, AccessControl {...\" */ _5), /** @src 0:7670:7692  \"hasRole(role, account)\" */ var_newMinter)), /** @src 17:233:1103  \"contract SobaToken is ERC20, Ownable, AccessControl {...\" */ 0xff))\n                /// @src 0:7665:7814  \"if (!hasRole(role, account)) {...\"\n                {\n                    /// @src 17:233:1103  \"contract SobaToken is ERC20, Ownable, AccessControl {...\"\n                    mstore(/** @src -1:-1:-1 */ _2, /** @src 17:329:353  \"keccak256(\\\"MINTER_ROLE\\\")\" */ _1)\n                    /// @src 17:233:1103  \"contract SobaToken is ERC20, Ownable, AccessControl {...\"\n                    mstore(_4, /** @src 0:3130:3136  \"_roles\" */ _3)\n                    /// @src 0:7708:7737  \"_roles[role].members[account]\"\n                    let _7 := mapping_index_access_mapping_address_bool_of_address(/** @src 17:233:1103  \"contract SobaToken is ERC20, Ownable, AccessControl {...\" */ keccak256(/** @src -1:-1:-1 */ _2, /** @src 17:233:1103  \"contract SobaToken is ERC20, Ownable, AccessControl {...\" */ _5), /** @src 0:7708:7737  \"_roles[role].members[account]\" */ var_newMinter)\n                    /// @src 17:233:1103  \"contract SobaToken is ERC20, Ownable, AccessControl {...\"\n                    sstore(_7, or(and(sload(_7), not(255)), /** @src 0:4604:4626  \"_roles[role].adminRole\" */ 1))\n                    /// @src 0:7763:7803  \"RoleGranted(role, account, _msgSender())\"\n                    log4(/** @src 17:233:1103  \"contract SobaToken is ERC20, Ownable, AccessControl {...\" */ mload(_5), /** @src -1:-1:-1 */ _2, /** @src 0:7763:7803  \"RoleGranted(role, account, _msgSender())\" */ 0x2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d, /** @src 17:329:353  \"keccak256(\\\"MINTER_ROLE\\\")\" */ _1, /** @src 0:7763:7803  \"RoleGranted(role, account, _msgSender())\" */ var_newMinter, /** @src 17:967:977  \"msg.sender\" */ caller())\n                }\n            }\n        }\n        data \".metadata\" hex\"a3646970667358221220ea18633dfcd20975f5df5811caa20dd54c74f448fa4ab59d39b6f8f262ffdc9a6c6578706572696d656e74616cf564736f6c63430008090041\"\n    }\n}\n","hash":"0100043f0b00c127dd9ab80eff1eda82103ae70acb9592924e53eb0a5dc7e701","factoryDependencies":{}}},"contracts/YieldFarm.sol":{"YieldFarm":{"abi":[{"inputs":[{"internalType":"contract SobaToken","name":"_sobaja","type":"address"},{"internalType":"address","name":"_devaddr","type":"address"},{"internalType":"uint256","name":"_sobaPerBlock","type":"uint256"},{"internalType":"uint256","name":"_startBlock","type":"uint256"}],"stateMutability":"nonpayable","type":"constructor"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"user","type":"address"},{"indexed":true,"internalType":"uint256","name":"poolId","type":"uint256"},{"indexed":true,"internalType":"uint256","name":"amount","type":"uint256"}],"name":"Deposit","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"user","type":"address"},{"indexed":true,"internalType":"uint256","name":"poolId","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"amount","type":"uint256"}],"name":"EmergencyWithdraw","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"user","type":"address"},{"indexed":true,"internalType":"uint256","name":"poolId","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"amount","type":"uint256"}],"name":"Withdraw","type":"event"},{"inputs":[],"name":"BONUS_MULTIPLIER","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"_allocPoint","type":"uint256"},{"internalType":"contract IERC20","name":"_lpToken","type":"address"},{"internalType":"bool","name":"_withUpdate","type":"bool"}],"name":"add","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"block","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"_poolId","type":"uint256"},{"internalType":"uint256","name":"_amount","type":"uint256"}],"name":"deposit","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"_devaddr","type":"address"}],"name":"dev","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"devAddress","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"_poolId","type":"uint256"}],"name":"emergencyWithdraw","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"_from","type":"uint256"},{"internalType":"uint256","name":"_to","type":"uint256"}],"name":"getMultiplier","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"_amount","type":"uint256"}],"name":"leaveStaking","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"massUpdatePools","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"_poolId","type":"uint256"},{"internalType":"address","name":"_user","type":"address"}],"name":"pendingSoba","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"","type":"uint256"}],"name":"poolInfo","outputs":[{"internalType":"contract IERC20","name":"lpToken","type":"address"},{"internalType":"uint256","name":"allocPoint","type":"uint256"},{"internalType":"uint256","name":"lastRewardBlock","type":"uint256"},{"internalType":"uint256","name":"accSobaPerShare","type":"uint256"},{"internalType":"uint256","name":"totalStaked","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"poolLength","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"renounceOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"_poolId","type":"uint256"},{"internalType":"uint256","name":"_allocPoint","type":"uint256"},{"internalType":"bool","name":"_withUpdate","type":"bool"}],"name":"set","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"sobaPerBlock","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"sobaja","outputs":[{"internalType":"contract SobaToken","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"_amount","type":"uint256"}],"name":"staking","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"startBlock","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalAllocPoint","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"newOwner","type":"address"}],"name":"transferOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"multiplierNumber","type":"uint256"}],"name":"updateMultiplier","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"_poolId","type":"uint256"}],"name":"updatePool","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"","type":"uint256"},{"internalType":"address","name":"","type":"address"}],"name":"userInfo","outputs":[{"internalType":"uint256","name":"amount","type":"uint256"},{"internalType":"uint256","name":"rewardDebt","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"_poolId","type":"uint256"},{"internalType":"uint256","name":"_amount","type":"uint256"}],"name":"withdraw","outputs":[],"stateMutability":"nonpayable","type":"function"}],"metadata":{"optimizer_settings":"M3B3","solc_metadata":"{\"compiler\":{\"version\":\"0.8.9+commit.e5eed63a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"contract SobaToken\",\"name\":\"_sobaja\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_devaddr\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_sobaPerBlock\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_startBlock\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"poolId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Deposit\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"poolId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"EmergencyWithdraw\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"poolId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Withdraw\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"BONUS_MULTIPLIER\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_allocPoint\",\"type\":\"uint256\"},{\"internalType\":\"contract IERC20\",\"name\":\"_lpToken\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"_withUpdate\",\"type\":\"bool\"}],\"name\":\"add\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"block\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_poolId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"deposit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_devaddr\",\"type\":\"address\"}],\"name\":\"dev\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"devAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_poolId\",\"type\":\"uint256\"}],\"name\":\"emergencyWithdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_from\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_to\",\"type\":\"uint256\"}],\"name\":\"getMultiplier\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"leaveStaking\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"massUpdatePools\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_poolId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_user\",\"type\":\"address\"}],\"name\":\"pendingSoba\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"poolInfo\",\"outputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"lpToken\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allocPoint\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"lastRewardBlock\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"accSobaPerShare\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"totalStaked\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"poolLength\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_poolId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_allocPoint\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"_withUpdate\",\"type\":\"bool\"}],\"name\":\"set\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"sobaPerBlock\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"sobaja\",\"outputs\":[{\"internalType\":\"contract SobaToken\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"staking\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"startBlock\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalAllocPoint\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"multiplierNumber\",\"type\":\"uint256\"}],\"name\":\"updateMultiplier\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_poolId\",\"type\":\"uint256\"}],\"name\":\"updatePool\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"userInfo\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"rewardDebt\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_poolId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/YieldFarm.sol\":\"YieldFarm\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"details\":{\"constantOptimizer\":false,\"cse\":true,\"deduplicate\":true,\"inliner\":true,\"jumpdestRemover\":true,\"orderLiterals\":true,\"peephole\":true,\"yul\":true,\"yulDetails\":{\"optimizerSteps\":\"dhfoDgvulfnTUtnIf[xarrscLMcCTUtTOntnfDIulLculVcul jjTpeulxarulrulxarrcLgvifCTUcarrLsTFOtfDncarrIulc]jmuljuljul VcTOcul jmul\",\"stackAllocation\":true}},\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/AccessControl.sol\":{\"keccak256\":\"0x0dd6e52cb394d7f5abe5dca2d4908a6be40417914720932de757de34a99ab87f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://dc117ce50ea746cab6b97ed1a1facee17a715ae0cb95d67b943dacbaf15176fb\",\"dweb:/ipfs/QmYRZ2UGNYwsHwfNu7Wjr8L2j1LBZ1mKv6NvbwgterYMXc\"]},\"@openzeppelin/contracts/access/IAccessControl.sol\":{\"keccak256\":\"0x59ce320a585d7e1f163cd70390a0ef2ff9cec832e2aa544293a00692465a7a57\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bb2c137c343ef0c4c7ce7b18c1d108afdc9d315a04e48307288d2d05adcbde3a\",\"dweb:/ipfs/QmUxhrAQM3MM3FF5j7AtcXLXguWCJBHJ14BRdVtuoQc8Fh\"]},\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xba43b97fba0d32eb4254f6a5a297b39a19a247082a02d6e69349e071e2946218\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fc980984badf3984b6303b377711220e067722bbd6a135b24669ff5069ef9f32\",\"dweb:/ipfs/QmPHXMSXj99XjSVM21YsY6aNtLLjLVXDbyN76J5HQYvvrz\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0xa56ca923f70c1748830700250b19c61b70db9a683516dc5e216694a50445d99c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cac938788bc4be12101e59d45588b4e059579f4e61062e1cda8d6b06c0191b15\",\"dweb:/ipfs/QmV2JKCyjTVH3rkWNrfdJRhAT7tZ3usAN2XcnD4h53Mvih\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x287b55befed2961a7eabd7d7b1b2839cbca8a5b80ef8dcbb25ed3d4c2002c305\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bd39944e8fc06be6dbe2dd1d8449b5336e23c6a7ba3e8e9ae5ae0f37f35283f5\",\"dweb:/ipfs/QmPV3FGYjVwvKSgAXKUN3r9T9GwniZz83CxBpM7vyj2G53\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x8de418a5503946cabe331f35fe242d3201a73f67f77aaeb7110acb1f30423aca\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a376d3dda2cb70536c0a45c208b29b34ac560c4cb4f513a42079f96ba47d2dd\",\"dweb:/ipfs/QmZQg6gn1sUpM8wHzwNvSnihumUCAhxD119MpXeKp8B9s8\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol\":{\"keccak256\":\"0xec63854014a5b4f2b3290ab9103a21bdf902a508d0f41a8573fea49e98bf571a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bc5b5dc12fbc4002f282eaa7a5f06d8310ed62c1c77c5770f6283e058454c39a\",\"dweb:/ipfs/Qme9rE2wS3yBuyJq9GgbmzbsBQsW2M2sVFqYYLw7bosGrv\"]},\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0x909d608c2db6eb165ca178c81289a07ed2e118e444d0025b2a85c97d0b44a4fa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://656cda26512ddd7373c2d5551c8fae759fc30f05b10f0fc2e738e9274199dbd4\",\"dweb:/ipfs/QmTSArSzQRFbQmHgq7U1PZXnsDFhvDZhKVu9CzMG4yo6Lx\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0x006dd67219697fe68d7fbfdea512e7c4cb64a43565ed86171d67e844982da6fa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2455248c8ddd9cc6a7af76a13973cddf222072427e7b0e2a7d1aff345145e931\",\"dweb:/ipfs/QmfYjnjRbWqYpuxurqveE6HtzsY1Xx323J428AKQgtBJZm\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x3088eb2868e8d13d89d16670b5f8612c4ab9ff8956272837d8e90106c59c14a0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b81d9ff6559ea5c47fc573e17ece6d9ba5d6839e213e6ebc3b4c5c8fe4199d7f\",\"dweb:/ipfs/QmPCW1bFisUzJkyjroY3yipwfism9RRCigCcK1hbXtVM8n\"]},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0xd10975de010d89fd1c78dc5e8a9a7e7f496198085c151648f20cba166b32582b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fb0048dee081f6fffa5f74afc3fb328483c2a30504e94a0ddd2a5114d731ec4d\",\"dweb:/ipfs/QmZptt1nmYoA5SgjwnSgWqgUSDgm4q52Yos3xhnMv3MV43\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0xe4455ac1eb7fc497bb7402579e7b4d64d928b846fce7d2b6fde06d366f21c2b3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cc8841b3cd48ad125e2f46323c8bad3aa0e88e399ec62acb9e57efa7e7c8058c\",\"dweb:/ipfs/QmSqE4mXHA2BXW58deDbXE8MTcsL5JSKNDbm23sVQxRLPS\"]},\"@openzeppelin/contracts/utils/math/SafeMath.sol\":{\"keccak256\":\"0x58b21219689909c4f8339af00813760337f7e2e7f169a97fe49e2896dcfb3b9a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ef8e012e946dec20e59f2d4446f4b44bb098f3fa8bac103b1b5112fff777447b\",\"dweb:/ipfs/QmVTooKWcLkJ9W68yNX4MgdrbAKiAXwuRN9A7f4NkdcdtQ\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0xf92515413956f529d95977adc9b0567d583c6203fc31ab1c23824c35187e3ddc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c50fcc459e49a9858b6d8ad5f911295cb7c9ab57567845a250bf0153f84a95c7\",\"dweb:/ipfs/QmcEW85JRzvDkQggxiBBLVAasXWdkhEysqypj9EaB6H2g6\"]},\"contracts/SobaToken.sol\":{\"keccak256\":\"0xa6f422d95c5c45c535008884f06b38799190a1cbf8e12856478fb6122ef12526\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://7f4b07aceff2f28bf4e3906d977652e0de08914836606bab0b2066e5d7fa4c0e\",\"dweb:/ipfs/QmbV1PHyoGNkW1X6hi1Svpph5guoafR84R1JsSh4AbsVe7\"]},\"contracts/YieldFarm.sol\":{\"keccak256\":\"0x3c8feb07c490629b25596bf8dbf9d7d817d3e25372c472276b62a3f3904bf422\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://4a5625e21392824dfbb37582972252b34b2ac90fc634dd5570cca5be02800b93\",\"dweb:/ipfs/QmRoMdWw3DGMCcYwSYXvjPEL7zhzKdE2Y1v74kiDFGhsRc\"]}},\"version\":1}","zk_version":"1.3.13"},"evm":{"legacyAssembly":null,"assembly":"\t.text\n\t.file\t\"YieldFarm.sol:YieldFarm\"\n\t.globl\t__entry\n__entry:\n.func_begin0:\n\tnop\tstack+=[6]\n\tadd\tr1, r0, r3\n\tshr.s\t96, r3, r3\n\tand\t@CPI0_0[0], r3, r4\n\tptr.add\tr1, r4, stack[@ptr_return_data]\n\tptr.add\tr1, r0, stack[@ptr_calldata]\n\tand\t@CPI0_0[0], r3, stack[@calldatasize]\n\tadd\t0, r0, stack[@returndatasize]\n\tadd\t128, r0, r1\n\tst.1\t64, r1\n\tand!\t1, r2, r1\n\tjump.ne\t@.BB0_1\n\tadd\tstack[@calldatasize], r0, r1\n\tsub.s!\t4, r1, r1\n\tjump.lt\t@.BB0_2\n\tptr.add\tstack[@ptr_calldata], r0, r1\n\tld\tr1, r1\n\tshr.s\t224, r1, r1\n\tsub.s!\t@CPI0_10[0], r1, r2\n\tjump.gt\t@.BB0_34\n\tsub.s!\t@CPI0_28[0], r1, r2\n\tjump.le\t@.BB0_18\n\tsub.s!\t@CPI0_29[0], r1, r2\n\tjump.le\t@.BB0_26\n\tsub.s!\t@CPI0_30[0], r1, r2\n\tjump.gt\t@.BB0_32\n\tsub.s!\t@CPI0_33[0], r1, r2\n\tjump.eq\t@.BB0_76\n\tsub.s!\t@CPI0_34[0], r1, r1\n\tjump.ne\t@.BB0_2\n\tcontext.get_context_u128\tr1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_2\n\tsub.s\t4, r0, r1\n\tadd\tstack[@calldatasize], r1, r1\n\tadd\t@CPI0_2[0], r0, r2\n\tsub.s!\t32, r1, r3\n\tadd\tr0, r0, r3\n\tadd.lt\tr2, r0, r3\n\tand\t@CPI0_2[0], r1, r1\n\tsub!\tr1, r0, r4\n\tadd.le\tr0, r0, r2\n\tsub.s!\t@CPI0_2[0], r1, r1\n\tadd\tr3, r0, r1\n\tadd.eq\tr2, r0, r1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_2\n\tadd\t4, r0, r1\n\tptr.add\tstack[@ptr_calldata], r1, r1\n\tld\tr1, r1\n\tnear_call\tr0, @fun_emergencyWithdraw, @DEFAULT_UNWIND\n\tadd\t@CPI0_0[0], r0, r1\n\tld.1\t64, r2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_1:\n\tcontext.get_context_u128\tr1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_2\n\tadd\tstack[@calldatasize], r0, r2\n\tadd\t31, r2, r1\n\tsub.s\t32, r0, r3\n\tand\tr1, r3, r4\n\tld.1\t64, r1\n\tadd\tr4, r1, r3\n\tsub!\tr3, r4, r4\n\tadd\t0, r0, r4\n\tadd.lt\t1, r0, r4\n\tsub.s!\t@CPI0_1[0], r3, r5\n\tjump.gt\t@.BB0_5\n\tand!\t1, r4, r4\n\tjump.ne\t@.BB0_5\n\tst.1\t64, r3\n\tand\t31, r2, r3\n\tptr.add\tstack[@ptr_calldata], r0, r4\n\tshr.s!\t5, r2, r5\n\tjump.eq\t@.BB0_120\n\tadd\tr0, r0, r6\n.BB0_8:\n\tshl.s\t5, r6, r7\n\tadd\tr1, r7, r8\n\tptr.add\tr4, r7, r7\n\tld\tr7, r7\n\tst.1\tr8, r7\n\tadd\t1, r6, r6\n\tsub!\tr6, r5, r7\n\tjump.lt\t@.BB0_8\n.BB0_120:\n\tsub!\tr3, r0, r6\n\tjump.eq\t@.BB0_10\n\tshl.s\t5, r5, r5\n\tptr.add\tr4, r5, r4\n\tadd\tr1, r5, r5\n\tshl.s\t3, r3, r3\n\tld.1\tr5, r6\n\tshl\tr6, r3, r6\n\tshr\tr6, r3, r6\n\tld\tr4, r4\n\tsub\t256, r3, r3\n\tshr\tr4, r3, r4\n\tshl\tr4, r3, r3\n\tor\tr3, r6, r3\n\tst.1\tr5, r3\n.BB0_10:\n\tadd\t@CPI0_2[0], r0, r3\n\tsub.s!\t128, r2, r4\n\tadd\tr0, r0, r4\n\tadd.lt\tr3, r0, r4\n\tand\t@CPI0_2[0], r2, r2\n\tsub!\tr2, r0, r5\n\tadd.le\tr0, r0, r3\n\tsub.s!\t@CPI0_2[0], r2, r2\n\tadd\tr4, r0, r2\n\tadd.eq\tr3, r0, r2\n\tsub!\tr2, r0, r2\n\tjump.ne\t@.BB0_2\n\tld.1.inc\tr1, r4, r2\n\tsub.s!\t@CPI0_3[0], r4, r3\n\tjump.gt\t@.BB0_2\n\tld.1\tr2, r5\n\tsub.s!\t@CPI0_3[0], r5, r2\n\tjump.gt\t@.BB0_2\n\tsload\tr0, r2\n\tand\t@CPI0_4[0], r2, r3\n\tcontext.caller\tr6\n\tor\tr3, r6, r3\n\tadd\tr4, r0, stack-[6]\n\tadd\t96, r1, r4\n\tld.1\tr4, r4\n\tadd\tr4, r0, stack-[4]\n\tadd\t64, r1, r1\n\tld.1\tr1, r1\n\tadd\tr1, r0, stack-[3]\n\tsstore\tr0, r3\n\tld.1\t64, r1\n\tadd\t@CPI0_0[0], r0, r3\n\tcontext.gas_left\tr4\n\tadd\tr5, r0, stack-[5]\n\tsub.s!\t@CPI0_0[0], r4, r5\n\tadd.ge\tr3, r0, r4\n\tsub.s!\t@CPI0_0[0], r1, r5\n\tadd.ge\tr3, r0, r1\n\tshl.s\t64, r1, r1\n\tshl.s\t192, r4, r3\n\tor\tr3, r1, r1\n\tand\t@CPI0_3[0], r2, r5\n\tor\t@CPI0_5[0], r1, r1\n\tadd\t32781, r0, r2\n\tadd\t3, r0, r3\n\tadd\t@CPI0_6[0], r0, r4\n\tadd\tr3, r0, stack-[2]\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tadd\tstack-[5], r0, r4\n\tadd\tstack-[6], r0, r3\n\tand!\t1, r2, r1\n\tjump.eq\t@.BB0_2\n\tadd\t1, r0, r1\n\tadd\t4, r0, r2\n\tsstore\tr2, r1\n\tadd\t7, r0, r2\n\tadd\tr2, r0, stack-[1]\n\tsstore\tr2, r0\n\tsload\tr1, r2\n\tand\t@CPI0_4[0], r2, r2\n\tor\tr2, r3, r2\n\tsstore\tr1, r2\n\tadd\t2, r0, r1\n\tsload\tr1, r2\n\tand\t@CPI0_4[0], r2, r2\n\tor\tr2, r4, r2\n\tsstore\tr1, r2\n\tadd\tstack-[3], r0, r1\n\tadd\tstack-[2], r0, r2\n\tsstore\tr2, r1\n\tadd\t8, r0, r1\n\tadd\tstack-[4], r0, r2\n\tsstore\tr1, r2\n\tsload\tr1, r1\n\tadd\tr1, r0, stack-[5]\n\tnear_call\tr0, @allocate_memory_1234, @DEFAULT_UNWIND\n\tadd\t64, r1, r2\n\tadd\tstack-[5], r0, r3\n\tst.1\tr2, r3\n\tadd\tstack-[6], r0, r2\n\tst.1.inc\tr1, r2, r2\n\tadd\t1000, r0, r3\n\tadd\tr3, r0, stack-[6]\n\tst.1\tr2, r3\n\tadd\t128, r1, r2\n\tst.1\tr2, r0\n\tadd\t96, r1, r2\n\tst.1\tr2, r0\n\tnear_call\tr0, @array_push_from_struct_PoolInfo_to_array_struct_PoolInfo_storage_dyn_ptr, @DEFAULT_UNWIND\n\tadd\tstack-[1], r0, r1\n\tadd\tstack-[6], r0, r2\n\tsstore\tr1, r2\n\tadd\t32, r0, r1\n\tst.2\t256, r1\n\tst.2\t288, r0\n\tadd\t@CPI0_7[0], r0, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_34:\n\tsub.s!\t@CPI0_11[0], r1, r2\n\tjump.le\t@.BB0_35\n\tsub.s!\t@CPI0_12[0], r1, r2\n\tjump.le\t@.BB0_43\n\tsub.s!\t@CPI0_13[0], r1, r2\n\tjump.gt\t@.BB0_49\n\tsub.s!\t@CPI0_16[0], r1, r2\n\tjump.eq\t@.BB0_111\n\tsub.s!\t@CPI0_17[0], r1, r1\n\tjump.ne\t@.BB0_2\n\tcontext.get_context_u128\tr1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_2\n\tsub.s\t4, r0, r1\n\tadd\tstack[@calldatasize], r1, r1\n\tadd\t@CPI0_2[0], r0, r2\n\tsub!\tr1, r0, r3\n\tadd\tr0, r0, r3\n\tadd.lt\tr2, r0, r3\n\tand\t@CPI0_2[0], r1, r1\n\tsub!\tr1, r0, r4\n\tadd.le\tr0, r0, r2\n\tsub.s!\t@CPI0_2[0], r1, r1\n\tadd\tr3, r0, r1\n\tadd.eq\tr2, r0, r1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_2\n\tadd\t1, r0, r1\n\tsload\tr1, r1\n\tand\t@CPI0_3[0], r1, r1\n\tld.1\t64, r2\n\tst.1\tr2, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI0_45[0], r1, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_5:\n\tadd\t@CPI0_8[0], r0, r1\n\tst.1\t0, r1\n\tadd\t65, r0, r1\n\tst.1\t4, r1\n\tadd\t@CPI0_9[0], r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB0_18:\n\tsub.s!\t@CPI0_38[0], r1, r2\n\tjump.gt\t@.BB0_22\n\tsub.s!\t@CPI0_42[0], r1, r2\n\tjump.eq\t@.BB0_51\n\tsub.s!\t@CPI0_43[0], r1, r2\n\tjump.eq\t@.BB0_54\n\tsub.s!\t@CPI0_44[0], r1, r1\n\tjump.ne\t@.BB0_2\n\tcontext.get_context_u128\tr1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_2\n\tsub.s\t4, r0, r1\n\tadd\tstack[@calldatasize], r1, r1\n\tadd\t@CPI0_2[0], r0, r2\n\tsub.s!\t32, r1, r3\n\tadd\tr0, r0, r3\n\tadd.lt\tr2, r0, r3\n\tand\t@CPI0_2[0], r1, r1\n\tsub!\tr1, r0, r4\n\tadd.le\tr0, r0, r2\n\tsub.s!\t@CPI0_2[0], r1, r1\n\tadd\tr3, r0, r1\n\tadd.eq\tr2, r0, r1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_2\n\tadd\t4, r0, r1\n\tptr.add\tstack[@ptr_calldata], r1, r1\n\tld\tr1, r1\n\tnear_call\tr0, @getter_fun_poolInfo, @DEFAULT_UNWIND\n\tadd\tr1, r0, r6\n\tadd\tr2, r0, r7\n\tadd\tr3, r0, r8\n\tadd\tr4, r0, r9\n\tadd\tr5, r0, r10\n\tld.1\t64, r1\n\tadd\tr1, r0, stack-[6]\n\tadd\tr6, r0, r2\n\tadd\tr7, r0, r3\n\tadd\tr8, r0, r4\n\tadd\tr9, r0, r5\n\tadd\tr10, r0, r6\n\tnear_call\tr0, @abi_encode_contract_IERC20_uint256_uint256_uint256_uint256, @DEFAULT_UNWIND\n\tadd\tstack-[6], r0, r4\n\tsub\tr1, r4, r1\n\tadd\t@CPI0_0[0], r0, r2\n\tsub.s!\t@CPI0_0[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tsub.s!\t@CPI0_0[0], r4, r3\n\tadd.lt\tr4, r0, r2\n\tshl.s\t64, r2, r2\n\tshl.s\t96, r1, r1\n\tor\tr1, r2, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_35:\n\tsub.s!\t@CPI0_21[0], r1, r2\n\tjump.gt\t@.BB0_39\n\tsub.s!\t@CPI0_25[0], r1, r2\n\tjump.eq\t@.BB0_88\n\tsub.s!\t@CPI0_26[0], r1, r2\n\tjump.eq\t@.BB0_91\n\tsub.s!\t@CPI0_27[0], r1, r1\n\tjump.ne\t@.BB0_2\n\tcontext.get_context_u128\tr1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_2\n\tsub.s\t4, r0, r1\n\tadd\tstack[@calldatasize], r1, r1\n\tadd\t@CPI0_2[0], r0, r2\n\tsub!\tr1, r0, r3\n\tadd\tr0, r0, r3\n\tadd.lt\tr2, r0, r3\n\tand\t@CPI0_2[0], r1, r1\n\tsub!\tr1, r0, r4\n\tadd.le\tr0, r0, r2\n\tsub.s!\t@CPI0_2[0], r1, r1\n\tadd\tr3, r0, r1\n\tadd.eq\tr2, r0, r1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_2\n\tnear_call\tr0, @modifier_onlyOwner_447, @DEFAULT_UNWIND\n\tadd\t@CPI0_0[0], r0, r1\n\tld.1\t64, r2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_26:\n\tsub.s!\t@CPI0_35[0], r1, r2\n\tjump.eq\t@.BB0_68\n\tsub.s!\t@CPI0_36[0], r1, r2\n\tjump.eq\t@.BB0_71\n\tsub.s!\t@CPI0_37[0], r1, r1\n\tjump.ne\t@.BB0_2\n\tcontext.get_context_u128\tr1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_2\n\tsub.s\t4, r0, r1\n\tadd\tstack[@calldatasize], r1, r1\n\tadd\t@CPI0_2[0], r0, r2\n\tsub!\tr1, r0, r3\n\tadd\tr0, r0, r3\n\tadd.lt\tr2, r0, r3\n\tand\t@CPI0_2[0], r1, r1\n\tsub!\tr1, r0, r4\n\tadd.le\tr0, r0, r2\n\tsub.s!\t@CPI0_2[0], r1, r1\n\tadd\tr3, r0, r1\n\tadd.eq\tr2, r0, r1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_2\n\tadd\t8, r0, r1\n\tsload\tr1, r1\n\tld.1\t64, r2\n\tst.1\tr2, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI0_45[0], r1, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_43:\n\tsub.s!\t@CPI0_18[0], r1, r2\n\tjump.eq\t@.BB0_104\n\tsub.s!\t@CPI0_19[0], r1, r2\n\tjump.eq\t@.BB0_106\n\tsub.s!\t@CPI0_20[0], r1, r1\n\tjump.ne\t@.BB0_2\n\tcontext.get_context_u128\tr1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_2\n\tsub.s\t4, r0, r1\n\tadd\tstack[@calldatasize], r1, r1\n\tadd\t@CPI0_2[0], r0, r2\n\tsub!\tr1, r0, r3\n\tadd\tr0, r0, r3\n\tadd.lt\tr2, r0, r3\n\tand\t@CPI0_2[0], r1, r1\n\tsub!\tr1, r0, r4\n\tadd.le\tr0, r0, r2\n\tsub.s!\t@CPI0_2[0], r1, r1\n\tadd\tr3, r0, r1\n\tadd.eq\tr2, r0, r1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_2\n\tadd\t3, r0, r1\n\tsload\tr1, r1\n\tld.1\t64, r2\n\tst.1\tr2, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI0_45[0], r1, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_22:\n\tsub.s!\t@CPI0_39[0], r1, r2\n\tjump.eq\t@.BB0_60\n\tsub.s!\t@CPI0_40[0], r1, r2\n\tjump.eq\t@.BB0_63\n\tsub.s!\t@CPI0_41[0], r1, r1\n\tjump.ne\t@.BB0_2\n\tcontext.get_context_u128\tr1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_2\n\tadd\tstack[@calldatasize], r0, r1\n\tnear_call\tr0, @abi_decode_uint256t_contract_IERC20t_bool, @DEFAULT_UNWIND\n\tnear_call\tr0, @modifier_onlyOwner_3810, @DEFAULT_UNWIND\n\tadd\t@CPI0_0[0], r0, r1\n\tld.1\t64, r2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_39:\n\tsub.s!\t@CPI0_22[0], r1, r2\n\tjump.eq\t@.BB0_96\n\tsub.s!\t@CPI0_23[0], r1, r2\n\tjump.eq\t@.BB0_99\n\tsub.s!\t@CPI0_24[0], r1, r1\n\tjump.ne\t@.BB0_2\n\tcontext.get_context_u128\tr1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_2\n\tsub.s\t4, r0, r1\n\tadd\tstack[@calldatasize], r1, r1\n\tadd\t@CPI0_2[0], r0, r2\n\tsub!\tr1, r0, r3\n\tadd\tr0, r0, r3\n\tadd.lt\tr2, r0, r3\n\tand\t@CPI0_2[0], r1, r1\n\tsub!\tr1, r0, r4\n\tadd.le\tr0, r0, r2\n\tsub.s!\t@CPI0_2[0], r1, r1\n\tadd\tr3, r0, r1\n\tadd.eq\tr2, r0, r1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_2\n\tsload\tr0, r1\n\tand\t@CPI0_3[0], r1, r1\n\tld.1\t64, r2\n\tst.1\tr2, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI0_45[0], r1, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_32:\n\tsub.s!\t@CPI0_31[0], r1, r2\n\tjump.eq\t@.BB0_82\n\tsub.s!\t@CPI0_32[0], r1, r1\n\tjump.ne\t@.BB0_2\n\tcontext.get_context_u128\tr1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_2\n\tsub.s\t4, r0, r1\n\tadd\tstack[@calldatasize], r1, r1\n\tadd\t@CPI0_2[0], r0, r2\n\tsub.s!\t32, r1, r3\n\tadd\tr0, r0, r3\n\tadd.lt\tr2, r0, r3\n\tand\t@CPI0_2[0], r1, r1\n\tsub!\tr1, r0, r4\n\tadd.le\tr0, r0, r2\n\tsub.s!\t@CPI0_2[0], r1, r1\n\tadd\tr3, r0, r1\n\tadd.eq\tr2, r0, r1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_2\n\tadd\t4, r0, r1\n\tptr.add\tstack[@ptr_calldata], r1, r1\n\tld\tr1, r1\n\tnear_call\tr0, @modifier_onlyOwner_3775, @DEFAULT_UNWIND\n\tadd\t@CPI0_0[0], r0, r1\n\tld.1\t64, r2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_49:\n\tsub.s!\t@CPI0_14[0], r1, r2\n\tjump.eq\t@.BB0_116\n\tsub.s!\t@CPI0_15[0], r1, r1\n\tjump.ne\t@.BB0_2\n\tcontext.get_context_u128\tr1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_2\n\tadd\tstack[@calldatasize], r0, r1\n\tnear_call\tr0, @abi_decode_address, @DEFAULT_UNWIND\n\tnear_call\tr0, @modifier_onlyOwner, @DEFAULT_UNWIND\n\tadd\t@CPI0_0[0], r0, r1\n\tld.1\t64, r2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_76:\n\tcontext.get_context_u128\tr1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_2\n\tsub.s\t4, r0, r1\n\tadd\tstack[@calldatasize], r1, r1\n\tadd\t@CPI0_2[0], r0, r2\n\tsub.s!\t32, r1, r3\n\tadd\tr0, r0, r3\n\tadd.lt\tr2, r0, r3\n\tand\t@CPI0_2[0], r1, r1\n\tsub!\tr1, r0, r4\n\tadd.le\tr0, r0, r2\n\tsub.s!\t@CPI0_2[0], r1, r1\n\tadd\tr3, r0, r1\n\tadd.eq\tr2, r0, r1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_2\n\tadd\t4, r0, r1\n\tptr.add\tstack[@ptr_calldata], r1, r1\n\tld\tr1, r1\n\tnear_call\tr0, @fun_updatePool, @DEFAULT_UNWIND\n\tadd\t@CPI0_0[0], r0, r1\n\tld.1\t64, r2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_111:\n\tcontext.get_context_u128\tr1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_2\n\tadd\tstack[@calldatasize], r0, r1\n\tnear_call\tr0, @abi_decode_uint256t_address, @DEFAULT_UNWIND\n\tnear_call\tr0, @fun_pendingSoba, @DEFAULT_UNWIND\n\tld.1\t64, r2\n\tst.1\tr2, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI0_45[0], r1, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_51:\n\tcontext.get_context_u128\tr1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_2\n\tsub.s\t4, r0, r1\n\tadd\tstack[@calldatasize], r1, r1\n\tadd\t@CPI0_2[0], r0, r2\n\tsub!\tr1, r0, r3\n\tadd\tr0, r0, r3\n\tadd.lt\tr2, r0, r3\n\tand\t@CPI0_2[0], r1, r1\n\tsub!\tr1, r0, r4\n\tadd.le\tr0, r0, r2\n\tsub.s!\t@CPI0_2[0], r1, r1\n\tadd\tr3, r0, r1\n\tadd.eq\tr2, r0, r1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_2\n\tadd\t5, r0, r1\n\tsload\tr1, r1\n\tst.1\t128, r1\n\tadd\t@CPI0_48[0], r0, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_88:\n\tcontext.get_context_u128\tr1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_2\n\tsub.s\t4, r0, r1\n\tadd\tstack[@calldatasize], r1, r1\n\tadd\t@CPI0_2[0], r0, r2\n\tsub!\tr1, r0, r3\n\tadd\tr0, r0, r3\n\tadd.lt\tr2, r0, r3\n\tand\t@CPI0_2[0], r1, r1\n\tsub!\tr1, r0, r4\n\tadd.le\tr0, r0, r2\n\tsub.s!\t@CPI0_2[0], r1, r1\n\tadd\tr3, r0, r1\n\tadd.eq\tr2, r0, r1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_2\n\tnear_call\tr0, @fun_massUpdatePools, @DEFAULT_UNWIND\n\tadd\t@CPI0_0[0], r0, r1\n\tld.1\t64, r2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_68:\n\tcontext.get_context_u128\tr1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_2\n\tsub.s\t4, r0, r1\n\tadd\tstack[@calldatasize], r1, r1\n\tadd\t@CPI0_2[0], r0, r2\n\tsub!\tr1, r0, r3\n\tadd\tr0, r0, r3\n\tadd.lt\tr2, r0, r3\n\tand\t@CPI0_2[0], r1, r1\n\tsub!\tr1, r0, r4\n\tadd.le\tr0, r0, r2\n\tsub.s!\t@CPI0_2[0], r1, r1\n\tadd\tr3, r0, r1\n\tadd.eq\tr2, r0, r1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_2\n\tadd\t2, r0, r1\n\tsload\tr1, r1\n\tand\t@CPI0_3[0], r1, r1\n\tld.1\t64, r2\n\tst.1\tr2, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI0_45[0], r1, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_71:\n\tcontext.get_context_u128\tr1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_2\n\tadd\tstack[@calldatasize], r0, r1\n\tnear_call\tr0, @abi_decode_uint256t_uint256, @DEFAULT_UNWIND\n\tnear_call\tr0, @fun_withdraw, @DEFAULT_UNWIND\n\tadd\t@CPI0_0[0], r0, r1\n\tld.1\t64, r2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_104:\n\tcontext.get_context_u128\tr1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_2\n\tadd\tstack[@calldatasize], r0, r1\n\tnear_call\tr0, @abi_decode_uint256t_uint256, @DEFAULT_UNWIND\n\tnear_call\tr0, @fun_getMultiplier, @DEFAULT_UNWIND\n\tld.1\t64, r2\n\tst.1\tr2, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI0_45[0], r1, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_106:\n\tcontext.get_context_u128\tr1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_2\n\tadd\tstack[@calldatasize], r0, r1\n\tnear_call\tr0, @abi_decode_uint256t_address, @DEFAULT_UNWIND\n\tnear_call\tr0, @getter_fun_userInfo, @DEFAULT_UNWIND\n\tld.1\t64, r3\n\tadd\t32, r3, r4\n\tst.1\tr4, r2\n\tst.1\tr3, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tsub.s!\t@CPI0_0[0], r3, r2\n\tadd.lt\tr3, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI0_46[0], r1, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_60:\n\tcontext.get_context_u128\tr1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_2\n\tsub.s\t4, r0, r1\n\tadd\tstack[@calldatasize], r1, r1\n\tadd\t@CPI0_2[0], r0, r2\n\tsub!\tr1, r0, r3\n\tadd\tr0, r0, r3\n\tadd.lt\tr2, r0, r3\n\tand\t@CPI0_2[0], r1, r1\n\tsub!\tr1, r0, r4\n\tadd.le\tr0, r0, r2\n\tsub.s!\t@CPI0_2[0], r1, r1\n\tadd\tr3, r0, r1\n\tadd.eq\tr2, r0, r1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_2\n\tadd\t7, r0, r1\n\tsload\tr1, r1\n\tld.1\t64, r2\n\tst.1\tr2, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI0_45[0], r1, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_96:\n\tcontext.get_context_u128\tr1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_2\n\tsub.s\t4, r0, r1\n\tadd\tstack[@calldatasize], r1, r1\n\tadd\t@CPI0_2[0], r0, r2\n\tsub!\tr1, r0, r3\n\tadd\tr0, r0, r3\n\tadd.lt\tr2, r0, r3\n\tand\t@CPI0_2[0], r1, r1\n\tsub!\tr1, r0, r4\n\tadd.le\tr0, r0, r2\n\tsub.s!\t@CPI0_2[0], r1, r1\n\tadd\tr3, r0, r1\n\tadd.eq\tr2, r0, r1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_2\n\tadd\t4, r0, r1\n\tsload\tr1, r1\n\tld.1\t64, r2\n\tst.1\tr2, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI0_45[0], r1, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_82:\n\tcontext.get_context_u128\tr1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_2\n\tsub.s\t4, r0, r1\n\tadd\tstack[@calldatasize], r1, r1\n\tadd\t@CPI0_2[0], r0, r2\n\tsub!\tr1, r0, r3\n\tadd\tr0, r0, r3\n\tadd.lt\tr2, r0, r3\n\tand\t@CPI0_2[0], r1, r1\n\tsub!\tr1, r0, r4\n\tadd.le\tr0, r0, r2\n\tsub.s!\t@CPI0_2[0], r1, r1\n\tadd\tr3, r0, r1\n\tadd.eq\tr2, r0, r1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_2\n\tld.1\t64, r1\n\tadd\tr1, r0, stack-[6]\n\tadd\t@CPI0_47[0], r0, r1\n\tst.2\t0, r1\n\tadd\t32779, r0, r1\n\tadd\t4, r0, r2\n\tnear_call\tr0, @__system_request, @DEFAULT_UNWIND\n\tadd\tstack-[6], r0, r3\n\tst.1\tr3, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tsub.s!\t@CPI0_0[0], r3, r2\n\tadd.lt\tr3, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI0_45[0], r1, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_116:\n\tcontext.get_context_u128\tr1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_2\n\tadd\tstack[@calldatasize], r0, r1\n\tnear_call\tr0, @abi_decode_uint256t_uint256, @DEFAULT_UNWIND\n\tnear_call\tr0, @fun_deposit, @DEFAULT_UNWIND\n\tadd\t@CPI0_0[0], r0, r1\n\tld.1\t64, r2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_54:\n\tcontext.get_context_u128\tr1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_2\n\tsub.s\t4, r0, r1\n\tadd\tstack[@calldatasize], r1, r1\n\tadd\t@CPI0_2[0], r0, r2\n\tsub.s!\t32, r1, r3\n\tadd\tr0, r0, r3\n\tadd.lt\tr2, r0, r3\n\tand\t@CPI0_2[0], r1, r1\n\tsub!\tr1, r0, r4\n\tadd.le\tr0, r0, r2\n\tsub.s!\t@CPI0_2[0], r1, r1\n\tadd\tr3, r0, r1\n\tadd.eq\tr2, r0, r1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_2\n\tadd\t4, r0, r1\n\tptr.add\tstack[@ptr_calldata], r1, r1\n\tld\tr1, r1\n\tnear_call\tr0, @fun_leaveStaking, @DEFAULT_UNWIND\n\tadd\t@CPI0_0[0], r0, r1\n\tld.1\t64, r2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_91:\n\tcontext.get_context_u128\tr1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_2\n\tadd\tstack[@calldatasize], r0, r1\n\tnear_call\tr0, @abi_decode_uint256t_uint256t_bool, @DEFAULT_UNWIND\n\tnear_call\tr0, @modifier_onlyOwner_3861, @DEFAULT_UNWIND\n\tadd\t@CPI0_0[0], r0, r1\n\tld.1\t64, r2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_63:\n\tcontext.get_context_u128\tr1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_2\n\tsub.s\t4, r0, r1\n\tadd\tstack[@calldatasize], r1, r1\n\tadd\t@CPI0_2[0], r0, r2\n\tsub.s!\t32, r1, r3\n\tadd\tr0, r0, r3\n\tadd.lt\tr2, r0, r3\n\tand\t@CPI0_2[0], r1, r1\n\tsub!\tr1, r0, r4\n\tadd.le\tr0, r0, r2\n\tsub.s!\t@CPI0_2[0], r1, r1\n\tadd\tr3, r0, r1\n\tadd.eq\tr2, r0, r1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_2\n\tadd\t4, r0, r1\n\tptr.add\tstack[@ptr_calldata], r1, r1\n\tld\tr1, r1\n\tnear_call\tr0, @fun_staking, @DEFAULT_UNWIND\n\tadd\t@CPI0_0[0], r0, r1\n\tld.1\t64, r2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_99:\n\tcontext.get_context_u128\tr1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_2\n\tadd\tstack[@calldatasize], r0, r1\n\tnear_call\tr0, @abi_decode_address, @DEFAULT_UNWIND\n\tnear_call\tr0, @fun_dev, @DEFAULT_UNWIND\n\tadd\t@CPI0_0[0], r0, r1\n\tld.1\t64, r2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_2:\n\tadd\tr0, r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.func_end0:\n\n__system_request:\n.func_begin1:\n\tadd\tr1, r0, r3\n\tadd\t@CPI1_0[0], r0, r1\n\tcontext.gas_left\tr4\n\tsub.s!\t@CPI1_0[0], r4, r5\n\tadd.lt\tr4, r0, r1\n\tshl.s\t192, r1, r1\n\tshl.s\t96, r2, r2\n\tadd\tr2, r1, r1\n\tadd\t@CPI1_1[0], r1, r1\n\tadd\tr3, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB1_2\n\tld\tr1, r1\n\tret\n.BB1_2:\n\tadd\tr0, r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.func_end1:\n\nallocate_memory_1234:\n.func_begin2:\n\tld.1\t64, r1\n\tsub.s!\t@CPI2_0[0], r1, r2\n\tjump.ge\t@.BB2_1\n\tadd\t160, r1, r2\n\tst.1\t64, r2\n\tret\n.BB2_1:\n\tadd\t@CPI2_1[0], r0, r1\n\tst.1\t0, r1\n\tadd\t65, r0, r1\n\tst.1\t4, r1\n\tadd\t@CPI2_2[0], r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.func_end2:\n\narray_push_from_struct_PoolInfo_to_array_struct_PoolInfo_storage_dyn_ptr:\n.func_begin3:\n\tnop\tstack+=[2]\n\tadd\tr1, r0, stack-[2]\n\tadd\t5, r0, r1\n\tsload\tr1, r3\n\tsub.s!\t@CPI3_0[0], r3, r2\n\tjump.ge\t@.BB3_1\n\tadd\tr3, r0, stack-[1]\n\tadd\t1, r3, r2\n\tsstore\tr1, r2\n\tst.1\t0, r1\n\tadd\t@CPI3_1[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI3_1[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI3_2[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB3_3\n\tadd\tstack-[1], r0, r2\n\tmul\t5, r2, r2, r3\n\tld\tr1, r1\n\tadd\tr1, r2, r1\n\tsload\tr1, r2\n\tand\t@CPI3_3[0], r2, r2\n\tadd\tstack-[2], r0, r5\n\tld.1.inc\tr5, r3, r4\n\tand\t@CPI3_4[0], r3, r3\n\tor\tr2, r3, r2\n\tsstore\tr1, r2\n\tld.1\tr4, r2\n\tadd\t1, r1, r3\n\tsstore\tr3, r2\n\tadd\t64, r5, r2\n\tld.1\tr2, r2\n\tadd\t2, r1, r3\n\tsstore\tr3, r2\n\tadd\t96, r5, r2\n\tld.1\tr2, r2\n\tadd\t3, r1, r3\n\tsstore\tr3, r2\n\tadd\t4, r1, r1\n\tadd\t128, r5, r2\n\tld.1\tr2, r2\n\tsstore\tr1, r2\n\tret\n.BB3_1:\n\tadd\t@CPI3_5[0], r0, r1\n\tst.1\t0, r1\n\tadd\t65, r0, r1\n\tst.1\t4, r1\n\tadd\t@CPI3_6[0], r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB3_3:\n\tadd\tr0, r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.func_end3:\n\ngetter_fun_poolInfo:\n.func_begin4:\n\tadd\t5, r0, r2\n\tsload\tr2, r3\n\tsub!\tr3, r1, r3\n\tjump.le\t@.BB4_1\n\tst.1\t0, r2\n\tmul\t5, r1, r1, r2\n\tadd\t@CPI4_0[0], r1, r2\n\tsload\tr2, r2\n\tadd\t@CPI4_1[0], r1, r3\n\tsload\tr3, r3\n\tadd\t@CPI4_2[0], r1, r4\n\tsload\tr4, r4\n\tadd\t@CPI4_3[0], r1, r5\n\tsload\tr5, r5\n\tadd\t@CPI4_4[0], r1, r1\n\tsload\tr1, r1\n\tand\t@CPI4_5[0], r1, r1\n\tret\n.BB4_1:\n\tadd\tr0, r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.func_end4:\n\nabi_encode_contract_IERC20_uint256_uint256_uint256_uint256:\n.func_begin5:\n\tadd\t128, r1, r7\n\tst.1\tr7, r6\n\tadd\t96, r1, r6\n\tst.1\tr6, r5\n\tadd\t64, r1, r5\n\tst.1\tr5, r4\n\tadd\t32, r1, r4\n\tst.1\tr4, r3\n\tand\t@CPI5_0[0], r2, r2\n\tst.1\tr1, r2\n\tadd\t160, r1, r1\n\tret\n.func_end5:\n\nabi_decode_uint256t_contract_IERC20t_bool:\n.func_begin6:\n\tsub.s\t4, r1, r1\n\tadd\t@CPI6_0[0], r0, r2\n\tsub.s!\t95, r1, r3\n\tadd\tr0, r0, r3\n\tadd.gt\tr2, r0, r3\n\tand\t@CPI6_0[0], r1, r1\n\tsub!\tr1, r0, r4\n\tadd.ge\tr0, r0, r2\n\tsub.s!\t@CPI6_0[0], r1, r1\n\tadd\tr3, r0, r1\n\tadd.eq\tr2, r0, r1\n\tsub!\tr1, r0, r1\n\tjump.eq\t@.BB6_1\n\tptr.add\tstack[@ptr_calldata], r0, r3\n\tptr.add.s\t4, r3, r1\n\tld\tr1, r1\n\tptr.add.s\t36, r3, r2\n\tld\tr2, r2\n\tsub.s!\t@CPI6_1[0], r2, r4\n\tjump.gt\t@.BB6_1\n\tptr.add.s\t68, r3, r3\n\tld\tr3, r3\n\tsub!\tr3, r0, r4\n\tadd\t0, r0, r4\n\tadd.ne\t1, r0, r4\n\tsub!\tr3, r4, r4\n\tjump.ne\t@.BB6_1\n\tret\n.BB6_1:\n\tadd\tr0, r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.func_end6:\n\nabi_decode_uint256t_uint256:\n.func_begin7:\n\tsub.s\t4, r1, r1\n\tadd\t@CPI7_0[0], r0, r2\n\tsub.s!\t63, r1, r3\n\tadd\tr0, r0, r3\n\tadd.gt\tr2, r0, r3\n\tand\t@CPI7_0[0], r1, r1\n\tsub!\tr1, r0, r4\n\tadd.ge\tr0, r0, r2\n\tsub.s!\t@CPI7_0[0], r1, r1\n\tadd\tr3, r0, r1\n\tadd.eq\tr2, r0, r1\n\tsub!\tr1, r0, r1\n\tjump.eq\t@.BB7_1\n\tptr.add\tstack[@ptr_calldata], r0, r2\n\tptr.add.s\t4, r2, r1\n\tld\tr1, r1\n\tptr.add.s\t36, r2, r2\n\tld\tr2, r2\n\tret\n.BB7_1:\n\tadd\tr0, r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.func_end7:\n\nabi_decode_uint256t_uint256t_bool:\n.func_begin8:\n\tsub.s\t4, r1, r1\n\tadd\t@CPI8_0[0], r0, r2\n\tsub.s!\t95, r1, r3\n\tadd\tr0, r0, r3\n\tadd.gt\tr2, r0, r3\n\tand\t@CPI8_0[0], r1, r1\n\tsub!\tr1, r0, r4\n\tadd.ge\tr0, r0, r2\n\tsub.s!\t@CPI8_0[0], r1, r1\n\tadd\tr3, r0, r1\n\tadd.eq\tr2, r0, r1\n\tsub!\tr1, r0, r1\n\tjump.eq\t@.BB8_1\n\tptr.add\tstack[@ptr_calldata], r0, r2\n\tptr.add.s\t68, r2, r1\n\tld\tr1, r3\n\tsub!\tr3, r0, r1\n\tadd\t0, r0, r1\n\tadd.ne\t1, r0, r1\n\tsub!\tr3, r1, r1\n\tjump.ne\t@.BB8_1\n\tptr.add.s\t4, r2, r1\n\tld\tr1, r1\n\tptr.add.s\t36, r2, r2\n\tld\tr2, r2\n\tret\n.BB8_1:\n\tadd\tr0, r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.func_end8:\n\nabi_decode_address:\n.func_begin9:\n\tsub.s\t4, r1, r1\n\tadd\t@CPI9_0[0], r0, r2\n\tsub.s!\t31, r1, r3\n\tadd\tr0, r0, r3\n\tadd.gt\tr2, r0, r3\n\tand\t@CPI9_0[0], r1, r1\n\tsub!\tr1, r0, r4\n\tadd.ge\tr0, r0, r2\n\tsub.s!\t@CPI9_0[0], r1, r1\n\tadd\tr3, r0, r1\n\tadd.eq\tr2, r0, r1\n\tsub!\tr1, r0, r1\n\tjump.eq\t@.BB9_1\n\tadd\t4, r0, r1\n\tptr.add\tstack[@ptr_calldata], r1, r1\n\tld\tr1, r1\n\tsub.s!\t@CPI9_1[0], r1, r2\n\tjump.gt\t@.BB9_1\n\tret\n.BB9_1:\n\tadd\tr0, r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.func_end9:\n\nabi_decode_uint256t_address:\n.func_begin10:\n\tsub.s\t4, r1, r1\n\tadd\t@CPI10_0[0], r0, r2\n\tsub.s!\t63, r1, r3\n\tadd\tr0, r0, r3\n\tadd.gt\tr2, r0, r3\n\tand\t@CPI10_0[0], r1, r1\n\tsub!\tr1, r0, r4\n\tadd.ge\tr0, r0, r2\n\tsub.s!\t@CPI10_0[0], r1, r1\n\tadd\tr3, r0, r1\n\tadd.eq\tr2, r0, r1\n\tsub!\tr1, r0, r1\n\tjump.eq\t@.BB10_1\n\tptr.add\tstack[@ptr_calldata], r0, r1\n\tptr.add.s\t36, r1, r2\n\tld\tr2, r2\n\tsub.s!\t@CPI10_1[0], r2, r3\n\tjump.gt\t@.BB10_1\n\tptr.add.s\t4, r1, r1\n\tld\tr1, r1\n\tret\n.BB10_1:\n\tadd\tr0, r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.func_end10:\n\ngetter_fun_userInfo:\n.func_begin11:\n\tnop\tstack+=[1]\n\tadd\tr2, r0, stack-[1]\n\tst.1\t0, r1\n\tadd\t6, r0, r1\n\tst.1\t32, r1\n\tadd\t@CPI11_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI11_0[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI11_1[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB11_1\n\tld\tr1, r1\n\tadd\tstack-[1], r0, r2\n\tand\t@CPI11_2[0], r2, r2\n\tst.1\t0, r2\n\tst.1\t32, r1\n\tadd\t@CPI11_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI11_0[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI11_1[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB11_1\n\tld\tr1, r2\n\tsload\tr2, r1\n\tadd\t1, r2, r2\n\tsload\tr2, r2\n\tret\n.BB11_1:\n\tadd\tr0, r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.func_end11:\n\nmodifier_onlyOwner_447:\n.func_begin12:\n\tsload\tr0, r1\n\tand\t@CPI12_0[0], r1, r5\n\tcontext.caller\tr2\n\tsub!\tr5, r2, r2\n\tjump.ne\t@.BB12_1\n\tand\t@CPI12_5[0], r1, r1\n\tsstore\tr0, r1\n\tld.1\t64, r1\n\tadd\t@CPI12_3[0], r0, r2\n\tcontext.gas_left\tr3\n\tsub.s!\t@CPI12_3[0], r3, r4\n\tadd.ge\tr2, r0, r3\n\tsub.s!\t@CPI12_3[0], r1, r4\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tshl.s\t192, r3, r2\n\tor\tr2, r1, r1\n\tor\t@CPI12_6[0], r1, r1\n\tadd\t32781, r0, r2\n\tadd\t3, r0, r3\n\tadd\t@CPI12_7[0], r0, r4\n\tadd\tr0, r0, r6\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r1\n\tjump.eq\t@.BB12_3\n\tret\n.BB12_1:\n\tld.1\t64, r1\n\tadd\t68, r1, r2\n\tadd\t@CPI12_1[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI12_2[0], r0, r2\n\tst.1\tr1, r2\n\tadd\t36, r1, r2\n\tadd\t32, r0, r3\n\tst.1\tr2, r3\n\tadd\t4, r1, r2\n\tst.1\tr2, r3\n\tadd\t@CPI12_3[0], r0, r2\n\tsub.s!\t@CPI12_3[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI12_4[0], r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB12_3:\n\tadd\tr0, r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.func_end12:\n\nmodifier_onlyOwner:\n.func_begin13:\n\tadd\tr1, r0, r6\n\tsload\tr0, r1\n\tand\t@CPI13_0[0], r1, r5\n\tcontext.caller\tr2\n\tsub!\tr5, r2, r2\n\tjump.ne\t@.BB13_1\n\tand!\t@CPI13_0[0], r6, r2\n\tjump.eq\t@.BB13_3\n\tand\t@CPI13_5[0], r1, r1\n\tor\tr1, r2, r1\n\tsstore\tr0, r1\n\tld.1\t64, r1\n\tadd\t@CPI13_3[0], r0, r2\n\tcontext.gas_left\tr3\n\tsub.s!\t@CPI13_3[0], r3, r4\n\tadd.ge\tr2, r0, r3\n\tsub.s!\t@CPI13_3[0], r1, r4\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tshl.s\t192, r3, r2\n\tor\tr2, r1, r1\n\tor\t@CPI13_6[0], r1, r1\n\tadd\t32781, r0, r2\n\tadd\t3, r0, r3\n\tadd\t@CPI13_7[0], r0, r4\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r1\n\tjump.eq\t@.BB13_5\n\tret\n.BB13_1:\n\tld.1\t64, r1\n\tadd\t68, r1, r2\n\tadd\t@CPI13_1[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI13_2[0], r0, r2\n\tst.1\tr1, r2\n\tadd\t36, r1, r2\n\tadd\t32, r0, r3\n\tst.1\tr2, r3\n\tadd\t4, r1, r2\n\tst.1\tr2, r3\n\tadd\t@CPI13_3[0], r0, r2\n\tsub.s!\t@CPI13_3[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI13_4[0], r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB13_3:\n\tld.1\t64, r1\n\tadd\t100, r1, r2\n\tadd\t@CPI13_8[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t68, r1, r2\n\tadd\t@CPI13_9[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t36, r1, r2\n\tadd\t38, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI13_2[0], r0, r2\n\tst.1\tr1, r2\n\tadd\t4, r1, r2\n\tadd\t32, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI13_3[0], r0, r2\n\tsub.s!\t@CPI13_3[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI13_10[0], r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB13_5:\n\tadd\tr0, r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.func_end13:\n\nmodifier_onlyOwner_3775:\n.func_begin14:\n\tsload\tr0, r2\n\tand\t@CPI14_0[0], r2, r2\n\tcontext.caller\tr3\n\tsub!\tr2, r3, r2\n\tjump.ne\t@.BB14_1\n\tadd\t4, r0, r2\n\tsstore\tr2, r1\n\tret\n.BB14_1:\n\tld.1\t64, r1\n\tadd\t68, r1, r2\n\tadd\t@CPI14_1[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI14_2[0], r0, r2\n\tst.1\tr1, r2\n\tadd\t36, r1, r2\n\tadd\t32, r0, r3\n\tst.1\tr2, r3\n\tadd\t4, r1, r2\n\tst.1\tr2, r3\n\tadd\t@CPI14_3[0], r0, r2\n\tsub.s!\t@CPI14_3[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI14_4[0], r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.func_end14:\n\nmodifier_onlyOwner_3810:\n.func_begin15:\n\tnop\tstack+=[18]\n\tadd\tr2, r0, stack-[1]\n\tadd\tr1, r0, stack-[2]\n\tsload\tr0, r1\n\tand\t@CPI15_0[0], r1, r1\n\tcontext.caller\tr2\n\tsub!\tr1, r2, r1\n\tjump.ne\t@.BB15_1\n\tsub!\tr3, r0, r1\n\tjump.eq\t@.BB15_72\n\tadd\t5, r0, r2\n\tsload\tr2, r1\n\tadd\tr1, r0, stack-[13]\n\tsub!\tr1, r0, r1\n\tjump.eq\t@.BB15_72\n\tadd\t32779, r0, r1\n\tadd\tr1, r0, stack-[12]\n\tadd\t32770, r0, r1\n\tadd\tr1, r0, stack-[3]\n\tadd\tr0, r0, r3\n\tadd\tr2, r0, stack-[11]\n\tjump\t@.BB15_5\n.BB15_30:\n\tsub!\tr2, r0, r2\n\tjump.eq\t@.BB15_8\n.BB15_10:\n\tld\tr1, r1\n\tadd\tstack-[15], r0, r2\n\tsstore\tr2, r1\n.BB15_71:\n\tadd\tstack-[16], r0, r3\n\tadd\t1, r3, r3\n\tadd\tstack-[13], r0, r1\n\tsub!\tr3, r1, r1\n\tadd\tstack-[11], r0, r2\n\tjump.ge\t@.BB15_72\n.BB15_5:\n\tsload\tr2, r1\n\tsub!\tr1, r3, r1\n\tjump.le\t@.BB15_6\n\tst.1\t0, r2\n\tadd\tr3, r0, stack-[16]\n\tmul\t5, r3, r2, r1\n\tadd\tr2, r0, stack-[18]\n\tadd\t@CPI15_5[0], r2, r1\n\tadd\tr1, r0, stack-[15]\n\tsload\tr1, r1\n\tadd\tr1, r0, stack-[17]\n\tadd\t@CPI15_6[0], r0, r1\n\tst.2\t0, r1\n\tadd\t@CPI15_3[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI15_3[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI15_7[0], r1, r1\n\tadd\tstack-[12], r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tadd\tstack-[18], r0, r3\n\tadd\t@CPI15_8[0], r3, r3\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB15_8\n\tld\tr1, r1\n\tadd\tstack-[17], r0, r2\n\tsub!\tr1, r2, r1\n\tjump.le\t@.BB15_71\n\tsload\tr3, r1\n\tadd\t@CPI15_9[0], r0, r2\n\tst.2\t0, r2\n\tand\t@CPI15_0[0], r1, r1\n\tadd\tr1, r0, stack-[17]\n\tst.2\t4, r1\n\tadd\t@CPI15_3[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI15_3[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI15_10[0], r1, r1\n\tadd\tstack-[3], r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB15_8\n\tld\tr1, r1\n\tsub!\tr1, r0, r1\n\tjump.eq\t@.BB15_8\n\tld.1\t64, r9\n\tadd\t@CPI15_11[0], r0, r1\n\tst.1\tr9, r1\n\tcontext.this\tr1\n\tand\t@CPI15_0[0], r1, r2\n\tadd\t4, r9, r1\n\tadd\tr2, r0, stack-[9]\n\tst.1\tr1, r2\n\tcontext.gas_left\tr1\n\tadd\tstack-[17], r0, r2\n\tsub.s!\t4, r2, r3\n\tjump.ne\t@.BB15_15\n\tadd\tstack[@returndatasize], r0, r3\n\tjump\t@.BB15_25\n.BB15_15:\n\tadd\t@CPI15_3[0], r0, r4\n\tsub.s!\t@CPI15_3[0], r1, r3\n\tadd.ge\tr4, r0, r1\n\tsub.s!\t@CPI15_3[0], r9, r3\n\tadd\tr4, r0, r3\n\tadd.lt\tr9, r0, r3\n\tshl.s\t64, r3, r3\n\tshl.s\t192, r1, r1\n\tor\tr1, r3, r1\n\tor\t@CPI15_12[0], r1, r1\n\tadd\tr9, r0, stack-[17]\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tadd\tstack-[17], r0, r9\n\tadd\tr1, r0, r3\n\tshr.s\t96, r3, r3\n\tand\t@CPI15_3[0], r3, r3\n\tsub.s!\t32, r3, r4\n\tadd\t32, r0, r5\n\tadd.lt\tr3, r0, r5\n\tshr.s!\t5, r5, r4\n\tjump.eq\t@.BB15_95\n\tadd\tr0, r0, r6\n.BB15_17:\n\tshl.s\t5, r6, r7\n\tadd\tr9, r7, r8\n\tptr.add\tr1, r7, r7\n\tld\tr7, r7\n\tst.1\tr8, r7\n\tadd\t1, r6, r6\n\tsub!\tr6, r4, r7\n\tjump.lt\t@.BB15_17\n.BB15_95:\n\tand!\t31, r5, r5\n\tjump.eq\t@.BB15_19\n\tshl.s\t5, r4, r4\n\tptr.add\tr1, r4, r6\n\tadd\tr9, r4, r4\n\tshl.s\t3, r5, r5\n\tld.1\tr4, r7\n\tshl\tr7, r5, r7\n\tshr\tr7, r5, r7\n\tld\tr6, r6\n\tsub\t256, r5, r5\n\tshr\tr6, r5, r6\n\tshl\tr6, r5, r5\n\tor\tr5, r7, r5\n\tst.1\tr4, r5\n.BB15_19:\n\tadd\tr3, r0, stack[@returndatasize]\n\tptr.add\tr1, r0, stack[@ptr_return_data]\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB15_20\n.BB15_25:\n\tadd\t31, r3, r1\n\tsub.s\t32, r0, r2\n\tadd\tr2, r0, stack-[14]\n\tand\tr1, r2, r2\n\tadd\tr2, r9, r1\n\tsub!\tr1, r2, r2\n\tadd\t0, r0, r2\n\tadd.lt\t1, r0, r2\n\tsub.s!\t@CPI15_13[0], r1, r3\n\tjump.gt\t@.BB15_27\n\tand!\t1, r2, r2\n\tjump.ne\t@.BB15_27\n\tst.1\t64, r1\n\tadd\t@CPI15_14[0], r0, r1\n\tadd\tstack[@returndatasize], r0, r2\n\tsub.s!\t32, r2, r3\n\tadd\tr0, r0, r3\n\tadd.lt\tr1, r0, r3\n\tand\t@CPI15_14[0], r2, r2\n\tsub!\tr2, r0, r4\n\tadd.le\tr0, r0, r1\n\tsub.s!\t@CPI15_14[0], r2, r2\n\tadd.ne\tr3, r0, r1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB15_8\n\tld.1\tr9, r1\n\tadd\tr1, r0, stack-[17]\n\tadd\t@CPI15_6[0], r0, r1\n\tst.2\t0, r1\n\tadd\t@CPI15_3[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI15_3[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI15_7[0], r1, r1\n\tadd\t32779, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tadd\tstack-[17], r0, r3\n\tsub!\tr3, r0, r3\n\tand\t1, r2, r2\n\tjump.eq\t@.BB15_30\n\tsub!\tr2, r0, r2\n\tjump.eq\t@.BB15_8\n\tadd\tstack-[15], r0, r2\n\tsload\tr2, r3\n\tld\tr1, r4\n\tsub!\tr4, r3, r1\n\tjump.lt\t@.BB15_33\n\tsub\tr4, r3, r1\n\tadd\t4, r0, r2\n\tsload\tr2, r2\n\tsub!\tr4, r3, r3\n\tjump.eq\t@.BB15_36\n\tsub.s\t1, r0, r3\n\tdiv\tr3, r1, r3, r4\n\tsub!\tr3, r2, r3\n\tjump.lt\t@.BB15_33\n.BB15_36:\n\tmul!\tr2, r1, r1, r2\n\tadd\t3, r0, r2\n\tsload\tr2, r2\n\tjump.eq\t@.BB15_38\n\tsub.s\t1, r0, r3\n\tdiv\tr3, r1, r3, r4\n\tsub!\tr3, r2, r3\n\tjump.lt\t@.BB15_33\n.BB15_38:\n\tmul!\tr2, r1, r3, r1\n\tadd\tstack-[18], r0, r1\n\tadd\t@CPI15_15[0], r1, r1\n\tsload\tr1, r4\n\tjump.eq\t@.BB15_40\n\tsub.s\t1, r0, r1\n\tdiv\tr1, r3, r1, r2\n\tsub!\tr1, r4, r1\n\tjump.lt\t@.BB15_33\n.BB15_40:\n\tadd\tr4, r0, stack-[7]\n\tadd\tr3, r0, stack-[8]\n\tadd\t7, r0, r1\n\tsload\tr1, r1\n\tadd\tr1, r0, stack-[6]\n\tsub!\tr1, r0, r1\n\tjump.eq\t@.BB15_41\n\tadd\t2, r0, r1\n\tsload\tr1, r1\n\tadd\tr1, r0, stack-[10]\n\tadd\t1, r0, r1\n\tadd\tr1, r0, stack-[4]\n\tsload\tr1, r1\n\tadd\t@CPI15_9[0], r0, r2\n\tst.2\t0, r2\n\tand\t@CPI15_0[0], r1, r1\n\tadd\tr1, r0, stack-[5]\n\tst.2\t4, r1\n\tadd\t@CPI15_3[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI15_3[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI15_10[0], r1, r1\n\tadd\t32770, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tadd\tstack-[10], r0, r3\n\tand\t@CPI15_0[0], r3, r3\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB15_8\n\tld\tr1, r1\n\tsub!\tr1, r0, r1\n\tjump.eq\t@.BB15_8\n\tadd\tstack-[8], r0, r1\n\tadd\tstack-[7], r0, r2\n\tmul\tr2, r1, r1, r2\n\tadd\tstack-[6], r0, r2\n\tdiv\tr1, r2, r2, r1\n\tadd\tr2, r0, stack-[10]\n\tdiv.s\t10, r2, r1, r2\n\tld.1\t64, r5\n\tadd\t36, r5, r2\n\tst.1\tr2, r1\n\tadd\t@CPI15_16[0], r0, r1\n\tst.1\tr5, r1\n\tadd\t4, r5, r1\n\tst.1\tr1, r3\n\tcontext.gas_left\tr1\n\tadd\tstack-[5], r0, r2\n\tsub.s!\t4, r2, r3\n\tjump.ne\t@.BB15_46\n\tadd\tstack[@returndatasize], r0, r4\n\tjump\t@.BB15_52\n.BB15_46:\n\tadd\t@CPI15_3[0], r0, r4\n\tsub.s!\t@CPI15_3[0], r1, r3\n\tadd.ge\tr4, r0, r1\n\tsub.s!\t@CPI15_3[0], r5, r3\n\tadd\tr4, r0, r3\n\tadd.lt\tr5, r0, r3\n\tshl.s\t64, r3, r3\n\tshl.s\t192, r1, r1\n\tor\tr1, r3, r1\n\tor\t@CPI15_17[0], r1, r1\n\tadd\tr5, r0, stack-[8]\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tadd\tstack-[8], r0, r5\n\tadd\tr1, r0, r3\n\tshr.s\t96, r3, r3\n\tand\t@CPI15_3[0], r3, stack[@returndatasize]\n\tand\t@CPI15_3[0], r3, r4\n\tptr.add\tr1, r0, stack[@ptr_return_data]\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB15_47\n.BB15_52:\n\tadd\t31, r4, r1\n\tadd\tstack-[14], r0, r2\n\tand\tr1, r2, r2\n\tadd\tr2, r5, r1\n\tsub!\tr1, r2, r2\n\tadd\t0, r0, r2\n\tadd.lt\t1, r0, r2\n\tsub.s!\t@CPI15_13[0], r1, r3\n\tjump.gt\t@.BB15_27\n\tand!\t1, r2, r2\n\tjump.ne\t@.BB15_27\n\tst.1\t64, r1\n\tadd\t@CPI15_14[0], r0, r1\n\tadd\tstack[@returndatasize], r0, r2\n\tsub!\tr2, r0, r3\n\tadd\tr0, r0, r3\n\tadd.lt\tr1, r0, r3\n\tand\t@CPI15_14[0], r2, r2\n\tsub!\tr2, r0, r4\n\tadd.le\tr0, r0, r1\n\tsub.s!\t@CPI15_14[0], r2, r2\n\tadd.ne\tr3, r0, r1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB15_8\n\tadd\tstack-[4], r0, r1\n\tsload\tr1, r1\n\tadd\t@CPI15_9[0], r0, r2\n\tst.2\t0, r2\n\tand\t@CPI15_0[0], r1, r1\n\tadd\tr1, r0, stack-[8]\n\tst.2\t4, r1\n\tadd\t@CPI15_3[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI15_3[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI15_10[0], r1, r1\n\tadd\t32770, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB15_8\n\tld\tr1, r1\n\tsub!\tr1, r0, r1\n\tjump.eq\t@.BB15_8\n\tld.1\t64, r5\n\tadd\t36, r5, r1\n\tadd\tstack-[10], r0, r2\n\tst.1\tr1, r2\n\tadd\t@CPI15_16[0], r0, r1\n\tst.1\tr5, r1\n\tadd\t4, r5, r1\n\tadd\tstack-[9], r0, r2\n\tst.1\tr1, r2\n\tcontext.gas_left\tr1\n\tadd\tstack-[8], r0, r2\n\tsub.s!\t4, r2, r3\n\tjump.ne\t@.BB15_59\n\tadd\tstack[@returndatasize], r0, r4\n\tjump\t@.BB15_65\n.BB15_59:\n\tadd\t@CPI15_3[0], r0, r4\n\tsub.s!\t@CPI15_3[0], r1, r3\n\tadd.ge\tr4, r0, r1\n\tsub.s!\t@CPI15_3[0], r5, r3\n\tadd\tr4, r0, r3\n\tadd.lt\tr5, r0, r3\n\tshl.s\t64, r3, r3\n\tshl.s\t192, r1, r1\n\tor\tr1, r3, r1\n\tor\t@CPI15_17[0], r1, r1\n\tadd\tr5, r0, stack-[9]\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tadd\tstack-[9], r0, r5\n\tadd\tr1, r0, r3\n\tshr.s\t96, r3, r3\n\tand\t@CPI15_3[0], r3, stack[@returndatasize]\n\tand\t@CPI15_3[0], r3, r4\n\tptr.add\tr1, r0, stack[@ptr_return_data]\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB15_60\n.BB15_65:\n\tadd\t31, r4, r1\n\tadd\tstack-[14], r0, r2\n\tand\tr1, r2, r2\n\tadd\tr2, r5, r1\n\tsub!\tr1, r2, r2\n\tadd\t0, r0, r2\n\tadd.lt\t1, r0, r2\n\tsub.s!\t@CPI15_13[0], r1, r3\n\tjump.gt\t@.BB15_27\n\tand!\t1, r2, r2\n\tjump.ne\t@.BB15_27\n\tst.1\t64, r1\n\tadd\t@CPI15_14[0], r0, r1\n\tadd\tstack[@returndatasize], r0, r2\n\tsub!\tr2, r0, r3\n\tadd\tr0, r0, r3\n\tadd.lt\tr1, r0, r3\n\tand\t@CPI15_14[0], r2, r2\n\tsub!\tr2, r0, r4\n\tadd.le\tr0, r0, r1\n\tsub.s!\t@CPI15_14[0], r2, r2\n\tadd.ne\tr3, r0, r1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB15_8\n\tadd\tstack-[18], r0, r1\n\tadd\t@CPI15_18[0], r1, r1\n\tsload\tr1, r2\n\tadd\tstack-[10], r0, r4\n\tsub.s!\t@CPI15_19[0], r4, r3\n\tjump.gt\t@.BB15_33\n\tmul\t@CPI15_20[0], r4, r3, r4\n\tadd\tstack-[17], r0, r4\n\tdiv\tr3, r4, r3, r4\n\tsub.s\t1, r0, r4\n\txor\tr3, r4, r4\n\tsub!\tr2, r4, r4\n\tjump.gt\t@.BB15_33\n\tadd\tr3, r2, r2\n\tsstore\tr1, r2\n\tadd\t@CPI15_6[0], r0, r1\n\tst.2\t0, r1\n\tadd\t@CPI15_3[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI15_3[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI15_7[0], r1, r1\n\tadd\t32779, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.ne\t@.BB15_10\n\tjump\t@.BB15_8\n.BB15_72:\n\tadd\t8, r0, r1\n\tsload\tr1, r1\n\tadd\tr1, r0, stack-[18]\n\tadd\t@CPI15_6[0], r0, r1\n\tst.2\t0, r1\n\tadd\t@CPI15_3[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI15_3[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI15_7[0], r1, r1\n\tadd\t32779, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB15_8\n\tld\tr1, r1\n\tadd\tstack-[18], r0, r7\n\tsub!\tr1, r7, r1\n\tjump.le\t@.BB15_74\n\tadd\t@CPI15_6[0], r0, r1\n\tst.2\t0, r1\n\tadd\t@CPI15_3[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI15_3[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI15_7[0], r1, r1\n\tadd\t32779, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB15_8\n\tld\tr1, r7\n.BB15_74:\n\tsub.s\t1, r0, r2\n\tadd\tstack-[2], r0, r1\n\txor\tr1, r2, r4\n\tadd\t7, r0, r1\n\tsload\tr1, r3\n\tsub!\tr3, r4, r4\n\tjump.gt\t@.BB15_33\n\tadd\tstack-[2], r0, r4\n\tadd\tr3, r4, r3\n\tsstore\tr1, r3\n\tld.1\t64, r6\n\tsub.s!\t@CPI15_22[0], r6, r3\n\tjump.gt\t@.BB15_27\n\tadd\t160, r6, r3\n\tst.1\t64, r3\n\tadd\t64, r6, r5\n\tst.1\tr5, r7\n\tadd\t32, r6, r7\n\tadd\tstack-[2], r0, r3\n\tst.1\tr7, r3\n\tadd\tstack-[1], r0, r3\n\tand\t@CPI15_0[0], r3, r3\n\tst.1\tr6, r3\n\tadd\t128, r6, r4\n\tst.1\tr4, r0\n\tadd\t96, r6, r8\n\tst.1\tr8, r0\n\tadd\t5, r0, r3\n\tsload\tr3, r9\n\tsub.s!\t@CPI15_13[0], r9, r10\n\tjump.gt\t@.BB15_27\n\tadd\t1, r9, r10\n\tsstore\tr3, r10\n\tsload\tr3, r10\n\tsub!\tr10, r9, r10\n\tjump.le\t@.BB15_6\n\tst.1\t0, r3\n\tld.1\tr6, r6\n\tand\t@CPI15_0[0], r6, r6\n\tmul\t5, r9, r9, r10\n\tadd\t@CPI15_8[0], r9, r10\n\tsload\tr10, r11\n\tand\t@CPI15_23[0], r11, r11\n\tor\tr11, r6, r6\n\tsstore\tr10, r6\n\tld.1\tr7, r6\n\tadd\t@CPI15_15[0], r9, r7\n\tsstore\tr7, r6\n\tld.1\tr5, r5\n\tadd\t@CPI15_5[0], r9, r6\n\tsstore\tr6, r5\n\tld.1\tr8, r5\n\tadd\t@CPI15_18[0], r9, r6\n\tsstore\tr6, r5\n\tadd\t@CPI15_24[0], r9, r5\n\tld.1\tr4, r4\n\tsstore\tr5, r4\n\tsload\tr3, r5\n\tsub.s!\t2, r5, r4\n\tjump.lt\t@.BB15_91\n\tadd\t1, r0, r6\n\tadd\tr0, r0, r4\n.BB15_82:\n\tsload\tr3, r7\n\tsub!\tr7, r6, r7\n\tjump.le\t@.BB15_6\n\tst.1\t0, r3\n\tmul\t5, r6, r7, r8\n\tadd\t@CPI15_15[0], r7, r7\n\tsload\tr7, r7\n\txor\tr7, r2, r8\n\tsub!\tr4, r8, r8\n\tjump.gt\t@.BB15_33\n\tadd\tr7, r4, r4\n\tadd\t1, r6, r6\n\tsub!\tr6, r5, r7\n\tjump.lt\t@.BB15_82\n\tsub!\tr4, r0, r5\n\tjump.eq\t@.BB15_91\n\tsload\tr1, r5\n\tsload\tr3, r6\n\tsub!\tr6, r0, r6\n\tjump.eq\t@.BB15_6\n\tadd\t@CPI15_15[0], r0, r6\n\tsload\tr6, r6\n\tsub!\tr5, r6, r7\n\tjump.lt\t@.BB15_33\n\tdiv.s\t3, r4, r4, r7\n\tsub\tr5, r6, r5\n\txor\tr4, r2, r2\n\tsub!\tr5, r2, r2\n\tjump.gt\t@.BB15_33\n\tadd\tr5, r4, r2\n\tsstore\tr1, r2\n\tsload\tr3, r1\n\tsub!\tr1, r0, r1\n\tjump.eq\t@.BB15_6\n\tst.1\t0, r3\n\tadd\t@CPI15_15[0], r0, r1\n\tsstore\tr1, r4\n.BB15_91:\n\tret\n.BB15_8:\n\tadd\tr0, r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB15_33:\n\tadd\t@CPI15_21[0], r0, r1\n\tst.1\t0, r1\n\tadd\t17, r0, r1\n\tst.1\t4, r1\n\tadd\t@CPI15_12[0], r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB15_6:\n\tadd\t@CPI15_21[0], r0, r1\n\tst.1\t0, r1\n\tadd\t50, r0, r1\n\tst.1\t4, r1\n\tadd\t@CPI15_12[0], r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB15_27:\n\tadd\t@CPI15_21[0], r0, r1\n\tst.1\t0, r1\n\tadd\t65, r0, r1\n\tst.1\t4, r1\n\tadd\t@CPI15_12[0], r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB15_41:\n\tadd\t@CPI15_21[0], r0, r1\n\tst.1\t0, r1\n\tadd\t18, r0, r1\n\tst.1\t4, r1\n\tadd\t@CPI15_12[0], r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB15_20:\n\tld.1\t64, r2\n\tand\t31, r3, r4\n\tshr.s!\t5, r3, r3\n\tjump.eq\t@.BB15_94\n\tadd\tr0, r0, r5\n.BB15_22:\n\tshl.s\t5, r5, r6\n\tadd\tr2, r6, r7\n\tptr.add\tr1, r6, r6\n\tld\tr6, r6\n\tst.1\tr7, r6\n\tadd\t1, r5, r5\n\tsub!\tr5, r3, r6\n\tjump.lt\t@.BB15_22\n.BB15_94:\n\tsub!\tr4, r0, r5\n\tjump.eq\t@.BB15_24\n\tshl.s\t5, r3, r3\n\tptr.add\tr1, r3, r1\n\tadd\tr2, r3, r3\n\tshl.s\t3, r4, r4\n\tld.1\tr3, r5\n\tshl\tr5, r4, r5\n\tshr\tr5, r4, r5\n\tld\tr1, r1\n\tsub\t256, r4, r4\n\tshr\tr1, r4, r1\n\tshl\tr1, r4, r1\n\tor\tr1, r5, r1\n\tst.1\tr3, r1\n.BB15_24:\n\tadd\t@CPI15_3[0], r0, r1\n\tadd\tstack[@returndatasize], r0, r3\n\tsub.s!\t@CPI15_3[0], r3, r4\n\tadd.ge\tr1, r0, r3\n\tsub.s!\t@CPI15_3[0], r2, r4\n\tadd.lt\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tshl.s\t96, r3, r2\n\tor\tr2, r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB15_47:\n\tld.1\t64, r2\n\tand\t31, r4, r3\n\tshr.s!\t5, r4, r4\n\tjump.eq\t@.BB15_93\n\tadd\tr0, r0, r5\n.BB15_49:\n\tshl.s\t5, r5, r6\n\tadd\tr2, r6, r7\n\tptr.add\tr1, r6, r6\n\tld\tr6, r6\n\tst.1\tr7, r6\n\tadd\t1, r5, r5\n\tsub!\tr5, r4, r6\n\tjump.lt\t@.BB15_49\n.BB15_93:\n\tsub!\tr3, r0, r5\n\tjump.eq\t@.BB15_51\n\tshl.s\t5, r4, r4\n\tptr.add\tr1, r4, r1\n\tadd\tr2, r4, r4\n\tshl.s\t3, r3, r3\n\tld.1\tr4, r5\n\tshl\tr5, r3, r5\n\tshr\tr5, r3, r5\n\tld\tr1, r1\n\tsub\t256, r3, r3\n\tshr\tr1, r3, r1\n\tshl\tr1, r3, r1\n\tor\tr1, r5, r1\n\tst.1\tr4, r1\n.BB15_51:\n\tadd\t@CPI15_3[0], r0, r1\n\tadd\tstack[@returndatasize], r0, r3\n\tsub.s!\t@CPI15_3[0], r3, r4\n\tadd.ge\tr1, r0, r3\n\tsub.s!\t@CPI15_3[0], r2, r4\n\tadd.lt\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tshl.s\t96, r3, r2\n\tor\tr2, r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB15_60:\n\tld.1\t64, r2\n\tand\t31, r4, r3\n\tshr.s!\t5, r4, r4\n\tjump.eq\t@.BB15_92\n\tadd\tr0, r0, r5\n.BB15_62:\n\tshl.s\t5, r5, r6\n\tadd\tr2, r6, r7\n\tptr.add\tr1, r6, r6\n\tld\tr6, r6\n\tst.1\tr7, r6\n\tadd\t1, r5, r5\n\tsub!\tr5, r4, r6\n\tjump.lt\t@.BB15_62\n.BB15_92:\n\tsub!\tr3, r0, r5\n\tjump.eq\t@.BB15_64\n\tshl.s\t5, r4, r4\n\tptr.add\tr1, r4, r1\n\tadd\tr2, r4, r4\n\tshl.s\t3, r3, r3\n\tld.1\tr4, r5\n\tshl\tr5, r3, r5\n\tshr\tr5, r3, r5\n\tld\tr1, r1\n\tsub\t256, r3, r3\n\tshr\tr1, r3, r1\n\tshl\tr1, r3, r1\n\tor\tr1, r5, r1\n\tst.1\tr4, r1\n.BB15_64:\n\tadd\t@CPI15_3[0], r0, r1\n\tadd\tstack[@returndatasize], r0, r3\n\tsub.s!\t@CPI15_3[0], r3, r4\n\tadd.ge\tr1, r0, r3\n\tsub.s!\t@CPI15_3[0], r2, r4\n\tadd.lt\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tshl.s\t96, r3, r2\n\tor\tr2, r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB15_1:\n\tld.1\t64, r1\n\tadd\t68, r1, r2\n\tadd\t@CPI15_1[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI15_2[0], r0, r2\n\tst.1\tr1, r2\n\tadd\t36, r1, r2\n\tadd\t32, r0, r3\n\tst.1\tr2, r3\n\tadd\t4, r1, r2\n\tst.1\tr2, r3\n\tadd\t@CPI15_3[0], r0, r2\n\tsub.s!\t@CPI15_3[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI15_4[0], r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.func_end15:\n\nmodifier_onlyOwner_3861:\n.func_begin16:\n\tnop\tstack+=[18]\n\tadd\tr2, r0, stack-[1]\n\tadd\tr1, r0, stack-[2]\n\tsload\tr0, r1\n\tand\t@CPI16_0[0], r1, r1\n\tcontext.caller\tr2\n\tsub!\tr1, r2, r1\n\tjump.ne\t@.BB16_1\n\tsub!\tr3, r0, r1\n\tjump.eq\t@.BB16_72\n\tadd\t5, r0, r2\n\tsload\tr2, r1\n\tadd\tr1, r0, stack-[13]\n\tsub!\tr1, r0, r1\n\tjump.eq\t@.BB16_72\n\tadd\t32779, r0, r1\n\tadd\tr1, r0, stack-[12]\n\tadd\t32770, r0, r1\n\tadd\tr1, r0, stack-[3]\n\tadd\tr0, r0, r3\n\tadd\tr2, r0, stack-[11]\n\tjump\t@.BB16_5\n.BB16_30:\n\tsub!\tr2, r0, r2\n\tjump.eq\t@.BB16_8\n.BB16_10:\n\tld\tr1, r1\n\tadd\tstack-[15], r0, r2\n\tsstore\tr2, r1\n.BB16_71:\n\tadd\tstack-[16], r0, r3\n\tadd\t1, r3, r3\n\tadd\tstack-[13], r0, r1\n\tsub!\tr3, r1, r1\n\tadd\tstack-[11], r0, r2\n\tjump.ge\t@.BB16_72\n.BB16_5:\n\tsload\tr2, r1\n\tsub!\tr1, r3, r1\n\tjump.le\t@.BB16_6\n\tst.1\t0, r2\n\tadd\tr3, r0, stack-[16]\n\tmul\t5, r3, r2, r1\n\tadd\tr2, r0, stack-[18]\n\tadd\t@CPI16_5[0], r2, r1\n\tadd\tr1, r0, stack-[15]\n\tsload\tr1, r1\n\tadd\tr1, r0, stack-[17]\n\tadd\t@CPI16_6[0], r0, r1\n\tst.2\t0, r1\n\tadd\t@CPI16_3[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI16_3[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI16_7[0], r1, r1\n\tadd\tstack-[12], r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tadd\tstack-[18], r0, r3\n\tadd\t@CPI16_8[0], r3, r3\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB16_8\n\tld\tr1, r1\n\tadd\tstack-[17], r0, r2\n\tsub!\tr1, r2, r1\n\tjump.le\t@.BB16_71\n\tsload\tr3, r1\n\tadd\t@CPI16_9[0], r0, r2\n\tst.2\t0, r2\n\tand\t@CPI16_0[0], r1, r1\n\tadd\tr1, r0, stack-[17]\n\tst.2\t4, r1\n\tadd\t@CPI16_3[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI16_3[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI16_10[0], r1, r1\n\tadd\tstack-[3], r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB16_8\n\tld\tr1, r1\n\tsub!\tr1, r0, r1\n\tjump.eq\t@.BB16_8\n\tld.1\t64, r9\n\tadd\t@CPI16_11[0], r0, r1\n\tst.1\tr9, r1\n\tcontext.this\tr1\n\tand\t@CPI16_0[0], r1, r2\n\tadd\t4, r9, r1\n\tadd\tr2, r0, stack-[9]\n\tst.1\tr1, r2\n\tcontext.gas_left\tr1\n\tadd\tstack-[17], r0, r2\n\tsub.s!\t4, r2, r3\n\tjump.ne\t@.BB16_15\n\tadd\tstack[@returndatasize], r0, r3\n\tjump\t@.BB16_25\n.BB16_15:\n\tadd\t@CPI16_3[0], r0, r4\n\tsub.s!\t@CPI16_3[0], r1, r3\n\tadd.ge\tr4, r0, r1\n\tsub.s!\t@CPI16_3[0], r9, r3\n\tadd\tr4, r0, r3\n\tadd.lt\tr9, r0, r3\n\tshl.s\t64, r3, r3\n\tshl.s\t192, r1, r1\n\tor\tr1, r3, r1\n\tor\t@CPI16_12[0], r1, r1\n\tadd\tr9, r0, stack-[17]\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tadd\tstack-[17], r0, r9\n\tadd\tr1, r0, r3\n\tshr.s\t96, r3, r3\n\tand\t@CPI16_3[0], r3, r3\n\tsub.s!\t32, r3, r4\n\tadd\t32, r0, r5\n\tadd.lt\tr3, r0, r5\n\tshr.s!\t5, r5, r4\n\tjump.eq\t@.BB16_92\n\tadd\tr0, r0, r6\n.BB16_17:\n\tshl.s\t5, r6, r7\n\tadd\tr9, r7, r8\n\tptr.add\tr1, r7, r7\n\tld\tr7, r7\n\tst.1\tr8, r7\n\tadd\t1, r6, r6\n\tsub!\tr6, r4, r7\n\tjump.lt\t@.BB16_17\n.BB16_92:\n\tand!\t31, r5, r5\n\tjump.eq\t@.BB16_19\n\tshl.s\t5, r4, r4\n\tptr.add\tr1, r4, r6\n\tadd\tr9, r4, r4\n\tshl.s\t3, r5, r5\n\tld.1\tr4, r7\n\tshl\tr7, r5, r7\n\tshr\tr7, r5, r7\n\tld\tr6, r6\n\tsub\t256, r5, r5\n\tshr\tr6, r5, r6\n\tshl\tr6, r5, r5\n\tor\tr5, r7, r5\n\tst.1\tr4, r5\n.BB16_19:\n\tadd\tr3, r0, stack[@returndatasize]\n\tptr.add\tr1, r0, stack[@ptr_return_data]\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB16_20\n.BB16_25:\n\tadd\t31, r3, r1\n\tsub.s\t32, r0, r2\n\tadd\tr2, r0, stack-[14]\n\tand\tr1, r2, r2\n\tadd\tr2, r9, r1\n\tsub!\tr1, r2, r2\n\tadd\t0, r0, r2\n\tadd.lt\t1, r0, r2\n\tsub.s!\t@CPI16_13[0], r1, r3\n\tjump.gt\t@.BB16_27\n\tand!\t1, r2, r2\n\tjump.ne\t@.BB16_27\n\tst.1\t64, r1\n\tadd\t@CPI16_14[0], r0, r1\n\tadd\tstack[@returndatasize], r0, r2\n\tsub.s!\t32, r2, r3\n\tadd\tr0, r0, r3\n\tadd.lt\tr1, r0, r3\n\tand\t@CPI16_14[0], r2, r2\n\tsub!\tr2, r0, r4\n\tadd.le\tr0, r0, r1\n\tsub.s!\t@CPI16_14[0], r2, r2\n\tadd.ne\tr3, r0, r1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB16_8\n\tld.1\tr9, r1\n\tadd\tr1, r0, stack-[17]\n\tadd\t@CPI16_6[0], r0, r1\n\tst.2\t0, r1\n\tadd\t@CPI16_3[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI16_3[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI16_7[0], r1, r1\n\tadd\t32779, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tadd\tstack-[17], r0, r3\n\tsub!\tr3, r0, r3\n\tand\t1, r2, r2\n\tjump.eq\t@.BB16_30\n\tsub!\tr2, r0, r2\n\tjump.eq\t@.BB16_8\n\tadd\tstack-[15], r0, r2\n\tsload\tr2, r3\n\tld\tr1, r4\n\tsub!\tr4, r3, r1\n\tjump.lt\t@.BB16_33\n\tsub\tr4, r3, r1\n\tadd\t4, r0, r2\n\tsload\tr2, r2\n\tsub!\tr4, r3, r3\n\tjump.eq\t@.BB16_36\n\tsub.s\t1, r0, r3\n\tdiv\tr3, r1, r3, r4\n\tsub!\tr3, r2, r3\n\tjump.lt\t@.BB16_33\n.BB16_36:\n\tmul!\tr2, r1, r1, r2\n\tadd\t3, r0, r2\n\tsload\tr2, r2\n\tjump.eq\t@.BB16_38\n\tsub.s\t1, r0, r3\n\tdiv\tr3, r1, r3, r4\n\tsub!\tr3, r2, r3\n\tjump.lt\t@.BB16_33\n.BB16_38:\n\tmul!\tr2, r1, r3, r1\n\tadd\tstack-[18], r0, r1\n\tadd\t@CPI16_15[0], r1, r1\n\tsload\tr1, r4\n\tjump.eq\t@.BB16_40\n\tsub.s\t1, r0, r1\n\tdiv\tr1, r3, r1, r2\n\tsub!\tr1, r4, r1\n\tjump.lt\t@.BB16_33\n.BB16_40:\n\tadd\tr4, r0, stack-[7]\n\tadd\tr3, r0, stack-[8]\n\tadd\t7, r0, r1\n\tsload\tr1, r1\n\tadd\tr1, r0, stack-[6]\n\tsub!\tr1, r0, r1\n\tjump.eq\t@.BB16_41\n\tadd\t2, r0, r1\n\tsload\tr1, r1\n\tadd\tr1, r0, stack-[10]\n\tadd\t1, r0, r1\n\tadd\tr1, r0, stack-[4]\n\tsload\tr1, r1\n\tadd\t@CPI16_9[0], r0, r2\n\tst.2\t0, r2\n\tand\t@CPI16_0[0], r1, r1\n\tadd\tr1, r0, stack-[5]\n\tst.2\t4, r1\n\tadd\t@CPI16_3[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI16_3[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI16_10[0], r1, r1\n\tadd\t32770, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tadd\tstack-[10], r0, r3\n\tand\t@CPI16_0[0], r3, r3\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB16_8\n\tld\tr1, r1\n\tsub!\tr1, r0, r1\n\tjump.eq\t@.BB16_8\n\tadd\tstack-[8], r0, r1\n\tadd\tstack-[7], r0, r2\n\tmul\tr2, r1, r1, r2\n\tadd\tstack-[6], r0, r2\n\tdiv\tr1, r2, r2, r1\n\tadd\tr2, r0, stack-[10]\n\tdiv.s\t10, r2, r1, r2\n\tld.1\t64, r5\n\tadd\t36, r5, r2\n\tst.1\tr2, r1\n\tadd\t@CPI16_16[0], r0, r1\n\tst.1\tr5, r1\n\tadd\t4, r5, r1\n\tst.1\tr1, r3\n\tcontext.gas_left\tr1\n\tadd\tstack-[5], r0, r2\n\tsub.s!\t4, r2, r3\n\tjump.ne\t@.BB16_46\n\tadd\tstack[@returndatasize], r0, r4\n\tjump\t@.BB16_52\n.BB16_46:\n\tadd\t@CPI16_3[0], r0, r4\n\tsub.s!\t@CPI16_3[0], r1, r3\n\tadd.ge\tr4, r0, r1\n\tsub.s!\t@CPI16_3[0], r5, r3\n\tadd\tr4, r0, r3\n\tadd.lt\tr5, r0, r3\n\tshl.s\t64, r3, r3\n\tshl.s\t192, r1, r1\n\tor\tr1, r3, r1\n\tor\t@CPI16_17[0], r1, r1\n\tadd\tr5, r0, stack-[8]\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tadd\tstack-[8], r0, r5\n\tadd\tr1, r0, r3\n\tshr.s\t96, r3, r3\n\tand\t@CPI16_3[0], r3, stack[@returndatasize]\n\tand\t@CPI16_3[0], r3, r4\n\tptr.add\tr1, r0, stack[@ptr_return_data]\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB16_47\n.BB16_52:\n\tadd\t31, r4, r1\n\tadd\tstack-[14], r0, r2\n\tand\tr1, r2, r2\n\tadd\tr2, r5, r1\n\tsub!\tr1, r2, r2\n\tadd\t0, r0, r2\n\tadd.lt\t1, r0, r2\n\tsub.s!\t@CPI16_13[0], r1, r3\n\tjump.gt\t@.BB16_27\n\tand!\t1, r2, r2\n\tjump.ne\t@.BB16_27\n\tst.1\t64, r1\n\tadd\t@CPI16_14[0], r0, r1\n\tadd\tstack[@returndatasize], r0, r2\n\tsub!\tr2, r0, r3\n\tadd\tr0, r0, r3\n\tadd.lt\tr1, r0, r3\n\tand\t@CPI16_14[0], r2, r2\n\tsub!\tr2, r0, r4\n\tadd.le\tr0, r0, r1\n\tsub.s!\t@CPI16_14[0], r2, r2\n\tadd.ne\tr3, r0, r1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB16_8\n\tadd\tstack-[4], r0, r1\n\tsload\tr1, r1\n\tadd\t@CPI16_9[0], r0, r2\n\tst.2\t0, r2\n\tand\t@CPI16_0[0], r1, r1\n\tadd\tr1, r0, stack-[8]\n\tst.2\t4, r1\n\tadd\t@CPI16_3[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI16_3[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI16_10[0], r1, r1\n\tadd\t32770, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB16_8\n\tld\tr1, r1\n\tsub!\tr1, r0, r1\n\tjump.eq\t@.BB16_8\n\tld.1\t64, r5\n\tadd\t36, r5, r1\n\tadd\tstack-[10], r0, r2\n\tst.1\tr1, r2\n\tadd\t@CPI16_16[0], r0, r1\n\tst.1\tr5, r1\n\tadd\t4, r5, r1\n\tadd\tstack-[9], r0, r2\n\tst.1\tr1, r2\n\tcontext.gas_left\tr1\n\tadd\tstack-[8], r0, r2\n\tsub.s!\t4, r2, r3\n\tjump.ne\t@.BB16_59\n\tadd\tstack[@returndatasize], r0, r4\n\tjump\t@.BB16_65\n.BB16_59:\n\tadd\t@CPI16_3[0], r0, r4\n\tsub.s!\t@CPI16_3[0], r1, r3\n\tadd.ge\tr4, r0, r1\n\tsub.s!\t@CPI16_3[0], r5, r3\n\tadd\tr4, r0, r3\n\tadd.lt\tr5, r0, r3\n\tshl.s\t64, r3, r3\n\tshl.s\t192, r1, r1\n\tor\tr1, r3, r1\n\tor\t@CPI16_17[0], r1, r1\n\tadd\tr5, r0, stack-[9]\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tadd\tstack-[9], r0, r5\n\tadd\tr1, r0, r3\n\tshr.s\t96, r3, r3\n\tand\t@CPI16_3[0], r3, stack[@returndatasize]\n\tand\t@CPI16_3[0], r3, r4\n\tptr.add\tr1, r0, stack[@ptr_return_data]\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB16_60\n.BB16_65:\n\tadd\t31, r4, r1\n\tadd\tstack-[14], r0, r2\n\tand\tr1, r2, r2\n\tadd\tr2, r5, r1\n\tsub!\tr1, r2, r2\n\tadd\t0, r0, r2\n\tadd.lt\t1, r0, r2\n\tsub.s!\t@CPI16_13[0], r1, r3\n\tjump.gt\t@.BB16_27\n\tand!\t1, r2, r2\n\tjump.ne\t@.BB16_27\n\tst.1\t64, r1\n\tadd\t@CPI16_14[0], r0, r1\n\tadd\tstack[@returndatasize], r0, r2\n\tsub!\tr2, r0, r3\n\tadd\tr0, r0, r3\n\tadd.lt\tr1, r0, r3\n\tand\t@CPI16_14[0], r2, r2\n\tsub!\tr2, r0, r4\n\tadd.le\tr0, r0, r1\n\tsub.s!\t@CPI16_14[0], r2, r2\n\tadd.ne\tr3, r0, r1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB16_8\n\tadd\tstack-[18], r0, r1\n\tadd\t@CPI16_18[0], r1, r1\n\tsload\tr1, r2\n\tadd\tstack-[10], r0, r4\n\tsub.s!\t@CPI16_19[0], r4, r3\n\tjump.gt\t@.BB16_33\n\tmul\t@CPI16_20[0], r4, r3, r4\n\tadd\tstack-[17], r0, r4\n\tdiv\tr3, r4, r3, r4\n\tsub.s\t1, r0, r4\n\txor\tr3, r4, r4\n\tsub!\tr2, r4, r4\n\tjump.gt\t@.BB16_33\n\tadd\tr3, r2, r2\n\tsstore\tr1, r2\n\tadd\t@CPI16_6[0], r0, r1\n\tst.2\t0, r1\n\tadd\t@CPI16_3[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI16_3[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI16_7[0], r1, r1\n\tadd\t32779, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.ne\t@.BB16_10\n.BB16_8:\n\tadd\tr0, r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB16_72:\n\tadd\t5, r0, r1\n\tsload\tr1, r2\n\tadd\tstack-[2], r0, r3\n\tsub!\tr2, r3, r2\n\tjump.le\t@.BB16_6\n\tst.1\t0, r1\n\tadd\tstack-[2], r0, r5\n\tmul\t5, r5, r2, r3\n\tadd\t@CPI16_15[0], r2, r2\n\tsload\tr2, r3\n\tsload\tr1, r4\n\tsub!\tr4, r5, r4\n\tjump.le\t@.BB16_6\n\tadd\tstack-[1], r0, r4\n\tsstore\tr2, r4\n\tsub!\tr3, r4, r2\n\tjump.eq\t@.BB16_76\n\tadd\t7, r0, r2\n\tsload\tr2, r4\n\tsub!\tr4, r3, r5\n\tjump.lt\t@.BB16_33\n\tsub\tr4, r3, r4\n\tsub.s\t1, r0, r3\n\tadd\tstack-[1], r0, r5\n\txor\tr5, r3, r5\n\tsub!\tr4, r5, r5\n\tjump.gt\t@.BB16_33\n\tadd\tstack-[1], r0, r5\n\tadd\tr4, r5, r4\n\tsstore\tr2, r4\n\tsload\tr1, r5\n\tsub.s!\t2, r5, r4\n\tjump.lt\t@.BB16_76\n\tadd\t1, r0, r6\n\tadd\tr0, r0, r4\n.BB16_80:\n\tsload\tr1, r7\n\tsub!\tr7, r6, r7\n\tjump.le\t@.BB16_6\n\tst.1\t0, r1\n\tmul\t5, r6, r7, r8\n\tadd\t@CPI16_15[0], r7, r7\n\tsload\tr7, r7\n\txor\tr7, r3, r8\n\tsub!\tr4, r8, r8\n\tjump.gt\t@.BB16_33\n\tadd\tr7, r4, r4\n\tadd\t1, r6, r6\n\tsub!\tr6, r5, r7\n\tjump.lt\t@.BB16_80\n\tsub!\tr4, r0, r5\n\tjump.eq\t@.BB16_76\n\tsload\tr2, r5\n\tsload\tr1, r6\n\tsub!\tr6, r0, r6\n\tjump.eq\t@.BB16_6\n\tadd\t@CPI16_15[0], r0, r6\n\tsload\tr6, r6\n\tsub!\tr5, r6, r7\n\tjump.lt\t@.BB16_33\n\tdiv.s\t3, r4, r4, r7\n\tsub\tr5, r6, r5\n\txor\tr4, r3, r3\n\tsub!\tr5, r3, r3\n\tjump.gt\t@.BB16_33\n\tadd\tr5, r4, r3\n\tsstore\tr2, r3\n\tsload\tr1, r2\n\tsub!\tr2, r0, r2\n\tjump.eq\t@.BB16_6\n\tst.1\t0, r1\n\tadd\t@CPI16_15[0], r0, r1\n\tsstore\tr1, r4\n.BB16_76:\n\tret\n.BB16_33:\n\tadd\t@CPI16_21[0], r0, r1\n\tst.1\t0, r1\n\tadd\t17, r0, r1\n\tst.1\t4, r1\n\tadd\t@CPI16_12[0], r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB16_6:\n\tadd\t@CPI16_21[0], r0, r1\n\tst.1\t0, r1\n\tadd\t50, r0, r1\n\tst.1\t4, r1\n\tadd\t@CPI16_12[0], r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB16_27:\n\tadd\t@CPI16_21[0], r0, r1\n\tst.1\t0, r1\n\tadd\t65, r0, r1\n\tst.1\t4, r1\n\tadd\t@CPI16_12[0], r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB16_41:\n\tadd\t@CPI16_21[0], r0, r1\n\tst.1\t0, r1\n\tadd\t18, r0, r1\n\tst.1\t4, r1\n\tadd\t@CPI16_12[0], r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB16_20:\n\tld.1\t64, r2\n\tand\t31, r3, r4\n\tshr.s!\t5, r3, r3\n\tjump.eq\t@.BB16_91\n\tadd\tr0, r0, r5\n.BB16_22:\n\tshl.s\t5, r5, r6\n\tadd\tr2, r6, r7\n\tptr.add\tr1, r6, r6\n\tld\tr6, r6\n\tst.1\tr7, r6\n\tadd\t1, r5, r5\n\tsub!\tr5, r3, r6\n\tjump.lt\t@.BB16_22\n.BB16_91:\n\tsub!\tr4, r0, r5\n\tjump.eq\t@.BB16_24\n\tshl.s\t5, r3, r3\n\tptr.add\tr1, r3, r1\n\tadd\tr2, r3, r3\n\tshl.s\t3, r4, r4\n\tld.1\tr3, r5\n\tshl\tr5, r4, r5\n\tshr\tr5, r4, r5\n\tld\tr1, r1\n\tsub\t256, r4, r4\n\tshr\tr1, r4, r1\n\tshl\tr1, r4, r1\n\tor\tr1, r5, r1\n\tst.1\tr3, r1\n.BB16_24:\n\tadd\t@CPI16_3[0], r0, r1\n\tadd\tstack[@returndatasize], r0, r3\n\tsub.s!\t@CPI16_3[0], r3, r4\n\tadd.ge\tr1, r0, r3\n\tsub.s!\t@CPI16_3[0], r2, r4\n\tadd.lt\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tshl.s\t96, r3, r2\n\tor\tr2, r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB16_47:\n\tld.1\t64, r2\n\tand\t31, r4, r3\n\tshr.s!\t5, r4, r4\n\tjump.eq\t@.BB16_90\n\tadd\tr0, r0, r5\n.BB16_49:\n\tshl.s\t5, r5, r6\n\tadd\tr2, r6, r7\n\tptr.add\tr1, r6, r6\n\tld\tr6, r6\n\tst.1\tr7, r6\n\tadd\t1, r5, r5\n\tsub!\tr5, r4, r6\n\tjump.lt\t@.BB16_49\n.BB16_90:\n\tsub!\tr3, r0, r5\n\tjump.eq\t@.BB16_51\n\tshl.s\t5, r4, r4\n\tptr.add\tr1, r4, r1\n\tadd\tr2, r4, r4\n\tshl.s\t3, r3, r3\n\tld.1\tr4, r5\n\tshl\tr5, r3, r5\n\tshr\tr5, r3, r5\n\tld\tr1, r1\n\tsub\t256, r3, r3\n\tshr\tr1, r3, r1\n\tshl\tr1, r3, r1\n\tor\tr1, r5, r1\n\tst.1\tr4, r1\n.BB16_51:\n\tadd\t@CPI16_3[0], r0, r1\n\tadd\tstack[@returndatasize], r0, r3\n\tsub.s!\t@CPI16_3[0], r3, r4\n\tadd.ge\tr1, r0, r3\n\tsub.s!\t@CPI16_3[0], r2, r4\n\tadd.lt\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tshl.s\t96, r3, r2\n\tor\tr2, r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB16_60:\n\tld.1\t64, r2\n\tand\t31, r4, r3\n\tshr.s!\t5, r4, r4\n\tjump.eq\t@.BB16_89\n\tadd\tr0, r0, r5\n.BB16_62:\n\tshl.s\t5, r5, r6\n\tadd\tr2, r6, r7\n\tptr.add\tr1, r6, r6\n\tld\tr6, r6\n\tst.1\tr7, r6\n\tadd\t1, r5, r5\n\tsub!\tr5, r4, r6\n\tjump.lt\t@.BB16_62\n.BB16_89:\n\tsub!\tr3, r0, r5\n\tjump.eq\t@.BB16_64\n\tshl.s\t5, r4, r4\n\tptr.add\tr1, r4, r1\n\tadd\tr2, r4, r4\n\tshl.s\t3, r3, r3\n\tld.1\tr4, r5\n\tshl\tr5, r3, r5\n\tshr\tr5, r3, r5\n\tld\tr1, r1\n\tsub\t256, r3, r3\n\tshr\tr1, r3, r1\n\tshl\tr1, r3, r1\n\tor\tr1, r5, r1\n\tst.1\tr4, r1\n.BB16_64:\n\tadd\t@CPI16_3[0], r0, r1\n\tadd\tstack[@returndatasize], r0, r3\n\tsub.s!\t@CPI16_3[0], r3, r4\n\tadd.ge\tr1, r0, r3\n\tsub.s!\t@CPI16_3[0], r2, r4\n\tadd.lt\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tshl.s\t96, r3, r2\n\tor\tr2, r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB16_1:\n\tld.1\t64, r1\n\tadd\t68, r1, r2\n\tadd\t@CPI16_1[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI16_2[0], r0, r2\n\tst.1\tr1, r2\n\tadd\t36, r1, r2\n\tadd\t32, r0, r3\n\tst.1\tr2, r3\n\tadd\t4, r1, r2\n\tst.1\tr2, r3\n\tadd\t@CPI16_3[0], r0, r2\n\tsub.s!\t@CPI16_3[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI16_4[0], r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.func_end16:\n\nfun_getMultiplier:\n.func_begin17:\n\tsub!\tr2, r1, r3\n\tjump.lt\t@.BB17_1\n\tsub\tr2, r1, r3\n\tadd\t4, r0, r4\n\tsload\tr4, r4\n\tsub!\tr2, r1, r1\n\tjump.eq\t@.BB17_4\n\tsub.s\t1, r0, r1\n\tdiv\tr1, r3, r1, r2\n\tsub!\tr1, r4, r1\n\tjump.lt\t@.BB17_1\n.BB17_4:\n\tmul\tr4, r3, r1, r2\n\tret\n.BB17_1:\n\tadd\t@CPI17_0[0], r0, r1\n\tst.1\t0, r1\n\tadd\t17, r0, r1\n\tst.1\t4, r1\n\tadd\t@CPI17_1[0], r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.func_end17:\n\nfun_pendingSoba:\n.func_begin18:\n\tnop\tstack+=[5]\n\tadd\tr2, r0, stack-[4]\n\tadd\t5, r0, r2\n\tsload\tr2, r2\n\tsub!\tr2, r1, r2\n\tjump.le\t@.BB18_1\n\tst.1\t0, r1\n\tadd\t6, r0, r2\n\tst.1\t32, r2\n\tadd\t@CPI18_2[0], r0, r4\n\tadd\tr1, r0, stack-[5]\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI18_2[0], r2, r3\n\tadd\tr4, r0, r1\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI18_3[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tadd\tstack-[5], r0, r3\n\tmul\t5, r3, r4, r3\n\tadd\tr4, r0, stack-[5]\n\tadd\t@CPI18_4[0], r4, r3\n\tadd\tr3, r0, stack-[2]\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB18_3\n\tld\tr1, r1\n\tadd\tstack-[4], r0, r2\n\tand\t@CPI18_5[0], r2, r2\n\tst.1\t0, r2\n\tst.1\t32, r1\n\tadd\t@CPI18_2[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI18_2[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI18_3[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB18_3\n\tld\tr1, r1\n\tadd\tr1, r0, stack-[3]\n\tadd\tstack-[5], r0, r1\n\tadd\t@CPI18_6[0], r1, r1\n\tsload\tr1, r1\n\tadd\tr1, r0, stack-[4]\n\tadd\tstack-[2], r0, r1\n\tsload\tr1, r1\n\tadd\t@CPI18_7[0], r0, r2\n\tst.2\t0, r2\n\tand\t@CPI18_5[0], r1, r1\n\tadd\tr1, r0, stack-[2]\n\tst.2\t4, r1\n\tadd\t@CPI18_2[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI18_2[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI18_8[0], r1, r1\n\tadd\t32770, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB18_3\n\tld\tr1, r1\n\tsub!\tr1, r0, r1\n\tjump.eq\t@.BB18_3\n\tld.1\t64, r9\n\tadd\t@CPI18_9[0], r0, r1\n\tst.1\tr9, r1\n\tcontext.this\tr1\n\tand\t@CPI18_5[0], r1, r1\n\tadd\t4, r9, r2\n\tst.1\tr2, r1\n\tcontext.gas_left\tr1\n\tadd\tstack-[2], r0, r2\n\tsub.s!\t4, r2, r3\n\tjump.ne\t@.BB18_9\n\tadd\tstack[@returndatasize], r0, r3\n\tjump\t@.BB18_19\n.BB18_9:\n\tadd\t@CPI18_2[0], r0, r4\n\tsub.s!\t@CPI18_2[0], r1, r3\n\tadd.ge\tr4, r0, r1\n\tsub.s!\t@CPI18_2[0], r9, r3\n\tadd\tr4, r0, r3\n\tadd.lt\tr9, r0, r3\n\tshl.s\t64, r3, r3\n\tshl.s\t192, r1, r1\n\tor\tr1, r3, r1\n\tor\t@CPI18_1[0], r1, r1\n\tadd\tr9, r0, stack-[2]\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tadd\tstack-[2], r0, r9\n\tadd\tr1, r0, r3\n\tshr.s\t96, r3, r3\n\tand\t@CPI18_2[0], r3, r3\n\tsub.s!\t32, r3, r4\n\tadd\t32, r0, r5\n\tadd.lt\tr3, r0, r5\n\tand\t31, r5, r4\n\tshr.s!\t5, r5, r5\n\tjump.eq\t@.BB18_45\n\tadd\tr0, r0, r6\n.BB18_11:\n\tshl.s\t5, r6, r7\n\tadd\tr9, r7, r8\n\tptr.add\tr1, r7, r7\n\tld\tr7, r7\n\tst.1\tr8, r7\n\tadd\t1, r6, r6\n\tsub!\tr6, r5, r7\n\tjump.lt\t@.BB18_11\n.BB18_45:\n\tsub!\tr4, r0, r6\n\tjump.eq\t@.BB18_13\n\tshl.s\t5, r5, r5\n\tptr.add\tr1, r5, r6\n\tadd\tr9, r5, r5\n\tshl.s\t3, r4, r4\n\tld.1\tr5, r7\n\tshl\tr7, r4, r7\n\tshr\tr7, r4, r7\n\tld\tr6, r6\n\tsub\t256, r4, r4\n\tshr\tr6, r4, r6\n\tshl\tr6, r4, r4\n\tor\tr4, r7, r4\n\tst.1\tr5, r4\n.BB18_13:\n\tadd\tr3, r0, stack[@returndatasize]\n\tptr.add\tr1, r0, stack[@ptr_return_data]\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB18_14\n.BB18_19:\n\tadd\t31, r3, r1\n\tsub.s\t32, r0, r2\n\tand\tr1, r2, r2\n\tadd\tr2, r9, r1\n\tsub!\tr1, r2, r2\n\tadd\t0, r0, r2\n\tadd.lt\t1, r0, r2\n\tsub.s!\t@CPI18_10[0], r1, r3\n\tjump.gt\t@.BB18_21\n\tand!\t1, r2, r2\n\tjump.ne\t@.BB18_21\n\tst.1\t64, r1\n\tadd\t@CPI18_11[0], r0, r1\n\tadd\tstack[@returndatasize], r0, r2\n\tsub.s!\t32, r2, r3\n\tadd\tr0, r0, r3\n\tadd.lt\tr1, r0, r3\n\tand\t@CPI18_11[0], r2, r2\n\tsub!\tr2, r0, r4\n\tadd.le\tr0, r0, r1\n\tsub.s!\t@CPI18_11[0], r2, r2\n\tadd.ne\tr3, r0, r1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB18_3\n\tld.1\tr9, r1\n\tadd\tr1, r0, stack-[1]\n\tadd\tstack-[5], r0, r1\n\tadd\t@CPI18_12[0], r1, r1\n\tsload\tr1, r1\n\tadd\tr1, r0, stack-[2]\n\tadd\t@CPI18_13[0], r0, r1\n\tst.2\t0, r1\n\tadd\t@CPI18_2[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI18_2[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI18_14[0], r1, r1\n\tadd\t32779, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB18_3\n\tld\tr1, r1\n\tadd\tstack-[2], r0, r4\n\tsub!\tr1, r4, r1\n\tjump.le\t@.BB18_40\n\tadd\tstack-[1], r0, r1\n\tsub!\tr1, r0, r1\n\tjump.eq\t@.BB18_40\n\tadd\t@CPI18_13[0], r0, r1\n\tst.2\t0, r1\n\tadd\t@CPI18_2[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI18_2[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI18_14[0], r1, r1\n\tadd\t32779, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB18_3\n\tld\tr1, r3\n\tadd\tstack-[2], r0, r4\n\tsub!\tr3, r4, r1\n\tadd\tstack-[4], r0, r5\n\tjump.lt\t@.BB18_28\n\tsub\tr3, r4, r1\n\tadd\t4, r0, r2\n\tsload\tr2, r2\n\tsub!\tr3, r4, r3\n\tjump.eq\t@.BB18_31\n\tsub.s\t1, r0, r3\n\tdiv\tr3, r1, r3, r4\n\tsub!\tr3, r2, r3\n\tjump.lt\t@.BB18_28\n.BB18_31:\n\tmul!\tr2, r1, r1, r2\n\tadd\t3, r0, r2\n\tsload\tr2, r2\n\tjump.eq\t@.BB18_33\n\tsub.s\t1, r0, r3\n\tdiv\tr3, r1, r3, r4\n\tsub!\tr3, r2, r3\n\tjump.lt\t@.BB18_28\n.BB18_33:\n\tmul!\tr2, r1, r1, r2\n\tadd\tstack-[5], r0, r2\n\tadd\t@CPI18_15[0], r2, r2\n\tsload\tr2, r2\n\tjump.eq\t@.BB18_35\n\tsub.s\t1, r0, r3\n\tdiv\tr3, r1, r3, r4\n\tsub!\tr3, r2, r3\n\tjump.lt\t@.BB18_28\n.BB18_35:\n\tadd\t7, r0, r3\n\tsload\tr3, r3\n\tsub!\tr3, r0, r4\n\tjump.eq\t@.BB18_36\n\tmul\tr2, r1, r1, r2\n\tdiv\tr1, r3, r1, r2\n\tsub.s!\t@CPI18_16[0], r1, r2\n\tjump.gt\t@.BB18_28\n\tmul\t@CPI18_17[0], r1, r1, r2\n\tadd\tstack-[1], r0, r2\n\tdiv\tr1, r2, r1, r2\n\tsub.s\t1, r0, r2\n\txor\tr1, r2, r2\n\tsub!\tr5, r2, r2\n\tjump.gt\t@.BB18_28\n\tadd\tr1, r5, r5\n\tadd\tr5, r0, stack-[4]\n.BB18_40:\n\tadd\tstack-[3], r0, r1\n\tsload\tr1, r1\n\tsub!\tr1, r0, r2\n\tadd\tstack-[4], r0, r4\n\tjump.eq\t@.BB18_42\n\tsub.s\t1, r0, r2\n\tdiv\tr2, r1, r2, r3\n\tsub!\tr2, r4, r2\n\tjump.lt\t@.BB18_28\n.BB18_42:\n\tmul\tr1, r4, r1, r2\n\tdiv.s\t@CPI18_17[0], r1, r1, r2\n\tadd\tstack-[3], r0, r2\n\tadd\t1, r2, r2\n\tsload\tr2, r2\n\tsub!\tr1, r2, r3\n\tjump.lt\t@.BB18_28\n\tsub\tr1, r2, r1\n\tret\n.BB18_3:\n\tadd\tr0, r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB18_28:\n\tadd\t@CPI18_0[0], r0, r1\n\tst.1\t0, r1\n\tadd\t17, r0, r1\n\tst.1\t4, r1\n\tadd\t@CPI18_1[0], r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB18_1:\n\tadd\t@CPI18_0[0], r0, r1\n\tst.1\t0, r1\n\tadd\t50, r0, r1\n\tst.1\t4, r1\n\tadd\t@CPI18_1[0], r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB18_21:\n\tadd\t@CPI18_0[0], r0, r1\n\tst.1\t0, r1\n\tadd\t65, r0, r1\n\tst.1\t4, r1\n\tadd\t@CPI18_1[0], r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB18_14:\n\tld.1\t64, r2\n\tand\t31, r3, r4\n\tshr.s!\t5, r3, r3\n\tjump.eq\t@.BB18_44\n\tadd\tr0, r0, r5\n.BB18_16:\n\tshl.s\t5, r5, r6\n\tadd\tr2, r6, r7\n\tptr.add\tr1, r6, r6\n\tld\tr6, r6\n\tst.1\tr7, r6\n\tadd\t1, r5, r5\n\tsub!\tr5, r3, r6\n\tjump.lt\t@.BB18_16\n.BB18_44:\n\tsub!\tr4, r0, r5\n\tjump.eq\t@.BB18_18\n\tshl.s\t5, r3, r3\n\tptr.add\tr1, r3, r1\n\tadd\tr2, r3, r3\n\tshl.s\t3, r4, r4\n\tld.1\tr3, r5\n\tshl\tr5, r4, r5\n\tshr\tr5, r4, r5\n\tld\tr1, r1\n\tsub\t256, r4, r4\n\tshr\tr1, r4, r1\n\tshl\tr1, r4, r1\n\tor\tr1, r5, r1\n\tst.1\tr3, r1\n.BB18_18:\n\tadd\t@CPI18_2[0], r0, r1\n\tadd\tstack[@returndatasize], r0, r3\n\tsub.s!\t@CPI18_2[0], r3, r4\n\tadd.ge\tr1, r0, r3\n\tsub.s!\t@CPI18_2[0], r2, r4\n\tadd.lt\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tshl.s\t96, r3, r2\n\tor\tr2, r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB18_36:\n\tadd\t@CPI18_0[0], r0, r1\n\tst.1\t0, r1\n\tadd\t18, r0, r1\n\tst.1\t4, r1\n\tadd\t@CPI18_1[0], r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.func_end18:\n\nfun_massUpdatePools:\n.func_begin19:\n\tnop\tstack+=[16]\n\tadd\t5, r0, r2\n\tsload\tr2, r1\n\tadd\tr1, r0, stack-[11]\n\tsub!\tr1, r0, r1\n\tjump.eq\t@.BB19_69\n\tadd\t32779, r0, r1\n\tadd\tr1, r0, stack-[10]\n\tadd\t32770, r0, r1\n\tadd\tr1, r0, stack-[1]\n\tadd\tr0, r0, r3\n\tadd\tr2, r0, stack-[9]\n\tjump\t@.BB19_2\n.BB19_27:\n\tsub!\tr2, r0, r2\n\tjump.eq\t@.BB19_5\n.BB19_7:\n\tld\tr1, r1\n\tadd\tstack-[13], r0, r2\n\tsstore\tr2, r1\n.BB19_68:\n\tadd\tstack-[14], r0, r3\n\tadd\t1, r3, r3\n\tadd\tstack-[11], r0, r1\n\tsub!\tr3, r1, r1\n\tadd\tstack-[9], r0, r2\n\tjump.ge\t@.BB19_69\n.BB19_2:\n\tsload\tr2, r1\n\tsub!\tr1, r3, r1\n\tjump.le\t@.BB19_3\n\tst.1\t0, r2\n\tadd\tr3, r0, stack-[14]\n\tmul\t5, r3, r2, r1\n\tadd\tr2, r0, stack-[16]\n\tadd\t@CPI19_2[0], r2, r1\n\tadd\tr1, r0, stack-[13]\n\tsload\tr1, r1\n\tadd\tr1, r0, stack-[15]\n\tadd\t@CPI19_3[0], r0, r1\n\tst.2\t0, r1\n\tadd\t@CPI19_4[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI19_4[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI19_5[0], r1, r1\n\tadd\tstack-[10], r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tadd\tstack-[16], r0, r3\n\tadd\t@CPI19_6[0], r3, r3\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB19_5\n\tld\tr1, r1\n\tadd\tstack-[15], r0, r2\n\tsub!\tr1, r2, r1\n\tjump.le\t@.BB19_68\n\tsload\tr3, r1\n\tadd\t@CPI19_7[0], r0, r2\n\tst.2\t0, r2\n\tand\t@CPI19_8[0], r1, r1\n\tadd\tr1, r0, stack-[15]\n\tst.2\t4, r1\n\tadd\t@CPI19_4[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI19_4[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI19_9[0], r1, r1\n\tadd\tstack-[1], r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB19_5\n\tld\tr1, r1\n\tsub!\tr1, r0, r1\n\tjump.eq\t@.BB19_5\n\tld.1\t64, r9\n\tadd\t@CPI19_10[0], r0, r1\n\tst.1\tr9, r1\n\tcontext.this\tr1\n\tand\t@CPI19_8[0], r1, r2\n\tadd\t4, r9, r1\n\tadd\tr2, r0, stack-[7]\n\tst.1\tr1, r2\n\tcontext.gas_left\tr1\n\tadd\tstack-[15], r0, r2\n\tsub.s!\t4, r2, r3\n\tjump.ne\t@.BB19_12\n\tadd\tstack[@returndatasize], r0, r3\n\tjump\t@.BB19_22\n.BB19_12:\n\tadd\t@CPI19_4[0], r0, r4\n\tsub.s!\t@CPI19_4[0], r1, r3\n\tadd.ge\tr4, r0, r1\n\tsub.s!\t@CPI19_4[0], r9, r3\n\tadd\tr4, r0, r3\n\tadd.lt\tr9, r0, r3\n\tshl.s\t64, r3, r3\n\tshl.s\t192, r1, r1\n\tor\tr1, r3, r1\n\tor\t@CPI19_1[0], r1, r1\n\tadd\tr9, r0, stack-[15]\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tadd\tstack-[15], r0, r9\n\tadd\tr1, r0, r3\n\tshr.s\t96, r3, r3\n\tand\t@CPI19_4[0], r3, r3\n\tsub.s!\t32, r3, r4\n\tadd\t32, r0, r5\n\tadd.lt\tr3, r0, r5\n\tshr.s!\t5, r5, r4\n\tjump.eq\t@.BB19_73\n\tadd\tr0, r0, r6\n.BB19_14:\n\tshl.s\t5, r6, r7\n\tadd\tr9, r7, r8\n\tptr.add\tr1, r7, r7\n\tld\tr7, r7\n\tst.1\tr8, r7\n\tadd\t1, r6, r6\n\tsub!\tr6, r4, r7\n\tjump.lt\t@.BB19_14\n.BB19_73:\n\tand!\t31, r5, r5\n\tjump.eq\t@.BB19_16\n\tshl.s\t5, r4, r4\n\tptr.add\tr1, r4, r6\n\tadd\tr9, r4, r4\n\tshl.s\t3, r5, r5\n\tld.1\tr4, r7\n\tshl\tr7, r5, r7\n\tshr\tr7, r5, r7\n\tld\tr6, r6\n\tsub\t256, r5, r5\n\tshr\tr6, r5, r6\n\tshl\tr6, r5, r5\n\tor\tr5, r7, r5\n\tst.1\tr4, r5\n.BB19_16:\n\tadd\tr3, r0, stack[@returndatasize]\n\tptr.add\tr1, r0, stack[@ptr_return_data]\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB19_17\n.BB19_22:\n\tadd\t31, r3, r1\n\tsub.s\t32, r0, r2\n\tadd\tr2, r0, stack-[12]\n\tand\tr1, r2, r2\n\tadd\tr2, r9, r1\n\tsub!\tr1, r2, r2\n\tadd\t0, r0, r2\n\tadd.lt\t1, r0, r2\n\tsub.s!\t@CPI19_11[0], r1, r3\n\tjump.gt\t@.BB19_24\n\tand!\t1, r2, r2\n\tjump.ne\t@.BB19_24\n\tst.1\t64, r1\n\tadd\t@CPI19_12[0], r0, r1\n\tadd\tstack[@returndatasize], r0, r2\n\tsub.s!\t32, r2, r3\n\tadd\tr0, r0, r3\n\tadd.lt\tr1, r0, r3\n\tand\t@CPI19_12[0], r2, r2\n\tsub!\tr2, r0, r4\n\tadd.le\tr0, r0, r1\n\tsub.s!\t@CPI19_12[0], r2, r2\n\tadd.ne\tr3, r0, r1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB19_5\n\tld.1\tr9, r1\n\tadd\tr1, r0, stack-[15]\n\tadd\t@CPI19_3[0], r0, r1\n\tst.2\t0, r1\n\tadd\t@CPI19_4[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI19_4[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI19_5[0], r1, r1\n\tadd\t32779, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tadd\tstack-[15], r0, r3\n\tsub!\tr3, r0, r3\n\tand\t1, r2, r2\n\tjump.eq\t@.BB19_27\n\tsub!\tr2, r0, r2\n\tjump.eq\t@.BB19_5\n\tadd\tstack-[13], r0, r2\n\tsload\tr2, r3\n\tld\tr1, r4\n\tsub!\tr4, r3, r1\n\tjump.lt\t@.BB19_30\n\tsub\tr4, r3, r1\n\tadd\t4, r0, r2\n\tsload\tr2, r2\n\tsub!\tr4, r3, r3\n\tjump.eq\t@.BB19_33\n\tsub.s\t1, r0, r3\n\tdiv\tr3, r1, r3, r4\n\tsub!\tr3, r2, r3\n\tjump.lt\t@.BB19_30\n.BB19_33:\n\tmul!\tr2, r1, r1, r2\n\tadd\t3, r0, r2\n\tsload\tr2, r2\n\tjump.eq\t@.BB19_35\n\tsub.s\t1, r0, r3\n\tdiv\tr3, r1, r3, r4\n\tsub!\tr3, r2, r3\n\tjump.lt\t@.BB19_30\n.BB19_35:\n\tmul!\tr2, r1, r3, r1\n\tadd\tstack-[16], r0, r1\n\tadd\t@CPI19_13[0], r1, r1\n\tsload\tr1, r4\n\tjump.eq\t@.BB19_37\n\tsub.s\t1, r0, r1\n\tdiv\tr1, r3, r1, r2\n\tsub!\tr1, r4, r1\n\tjump.lt\t@.BB19_30\n.BB19_37:\n\tadd\tr4, r0, stack-[5]\n\tadd\tr3, r0, stack-[6]\n\tadd\t7, r0, r1\n\tsload\tr1, r1\n\tadd\tr1, r0, stack-[4]\n\tsub!\tr1, r0, r1\n\tjump.eq\t@.BB19_38\n\tadd\t2, r0, r1\n\tsload\tr1, r1\n\tadd\tr1, r0, stack-[8]\n\tadd\t1, r0, r1\n\tadd\tr1, r0, stack-[2]\n\tsload\tr1, r1\n\tadd\t@CPI19_7[0], r0, r2\n\tst.2\t0, r2\n\tand\t@CPI19_8[0], r1, r1\n\tadd\tr1, r0, stack-[3]\n\tst.2\t4, r1\n\tadd\t@CPI19_4[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI19_4[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI19_9[0], r1, r1\n\tadd\t32770, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tadd\tstack-[8], r0, r3\n\tand\t@CPI19_8[0], r3, r3\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB19_5\n\tld\tr1, r1\n\tsub!\tr1, r0, r1\n\tjump.eq\t@.BB19_5\n\tadd\tstack-[6], r0, r1\n\tadd\tstack-[5], r0, r2\n\tmul\tr2, r1, r1, r2\n\tadd\tstack-[4], r0, r2\n\tdiv\tr1, r2, r2, r1\n\tadd\tr2, r0, stack-[8]\n\tdiv.s\t10, r2, r1, r2\n\tld.1\t64, r5\n\tadd\t36, r5, r2\n\tst.1\tr2, r1\n\tadd\t@CPI19_14[0], r0, r1\n\tst.1\tr5, r1\n\tadd\t4, r5, r1\n\tst.1\tr1, r3\n\tcontext.gas_left\tr1\n\tadd\tstack-[3], r0, r2\n\tsub.s!\t4, r2, r3\n\tjump.ne\t@.BB19_43\n\tadd\tstack[@returndatasize], r0, r4\n\tjump\t@.BB19_49\n.BB19_43:\n\tadd\t@CPI19_4[0], r0, r4\n\tsub.s!\t@CPI19_4[0], r1, r3\n\tadd.ge\tr4, r0, r1\n\tsub.s!\t@CPI19_4[0], r5, r3\n\tadd\tr4, r0, r3\n\tadd.lt\tr5, r0, r3\n\tshl.s\t64, r3, r3\n\tshl.s\t192, r1, r1\n\tor\tr1, r3, r1\n\tor\t@CPI19_15[0], r1, r1\n\tadd\tr5, r0, stack-[6]\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tadd\tstack-[6], r0, r5\n\tadd\tr1, r0, r3\n\tshr.s\t96, r3, r3\n\tand\t@CPI19_4[0], r3, stack[@returndatasize]\n\tand\t@CPI19_4[0], r3, r4\n\tptr.add\tr1, r0, stack[@ptr_return_data]\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB19_44\n.BB19_49:\n\tadd\t31, r4, r1\n\tadd\tstack-[12], r0, r2\n\tand\tr1, r2, r2\n\tadd\tr2, r5, r1\n\tsub!\tr1, r2, r2\n\tadd\t0, r0, r2\n\tadd.lt\t1, r0, r2\n\tsub.s!\t@CPI19_11[0], r1, r3\n\tjump.gt\t@.BB19_24\n\tand!\t1, r2, r2\n\tjump.ne\t@.BB19_24\n\tst.1\t64, r1\n\tadd\t@CPI19_12[0], r0, r1\n\tadd\tstack[@returndatasize], r0, r2\n\tsub!\tr2, r0, r3\n\tadd\tr0, r0, r3\n\tadd.lt\tr1, r0, r3\n\tand\t@CPI19_12[0], r2, r2\n\tsub!\tr2, r0, r4\n\tadd.le\tr0, r0, r1\n\tsub.s!\t@CPI19_12[0], r2, r2\n\tadd.ne\tr3, r0, r1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB19_5\n\tadd\tstack-[2], r0, r1\n\tsload\tr1, r1\n\tadd\t@CPI19_7[0], r0, r2\n\tst.2\t0, r2\n\tand\t@CPI19_8[0], r1, r1\n\tadd\tr1, r0, stack-[6]\n\tst.2\t4, r1\n\tadd\t@CPI19_4[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI19_4[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI19_9[0], r1, r1\n\tadd\t32770, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB19_5\n\tld\tr1, r1\n\tsub!\tr1, r0, r1\n\tjump.eq\t@.BB19_5\n\tld.1\t64, r5\n\tadd\t36, r5, r1\n\tadd\tstack-[8], r0, r2\n\tst.1\tr1, r2\n\tadd\t@CPI19_14[0], r0, r1\n\tst.1\tr5, r1\n\tadd\t4, r5, r1\n\tadd\tstack-[7], r0, r2\n\tst.1\tr1, r2\n\tcontext.gas_left\tr1\n\tadd\tstack-[6], r0, r2\n\tsub.s!\t4, r2, r3\n\tjump.ne\t@.BB19_56\n\tadd\tstack[@returndatasize], r0, r4\n\tjump\t@.BB19_62\n.BB19_56:\n\tadd\t@CPI19_4[0], r0, r4\n\tsub.s!\t@CPI19_4[0], r1, r3\n\tadd.ge\tr4, r0, r1\n\tsub.s!\t@CPI19_4[0], r5, r3\n\tadd\tr4, r0, r3\n\tadd.lt\tr5, r0, r3\n\tshl.s\t64, r3, r3\n\tshl.s\t192, r1, r1\n\tor\tr1, r3, r1\n\tor\t@CPI19_15[0], r1, r1\n\tadd\tr5, r0, stack-[7]\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tadd\tstack-[7], r0, r5\n\tadd\tr1, r0, r3\n\tshr.s\t96, r3, r3\n\tand\t@CPI19_4[0], r3, stack[@returndatasize]\n\tand\t@CPI19_4[0], r3, r4\n\tptr.add\tr1, r0, stack[@ptr_return_data]\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB19_57\n.BB19_62:\n\tadd\t31, r4, r1\n\tadd\tstack-[12], r0, r2\n\tand\tr1, r2, r2\n\tadd\tr2, r5, r1\n\tsub!\tr1, r2, r2\n\tadd\t0, r0, r2\n\tadd.lt\t1, r0, r2\n\tsub.s!\t@CPI19_11[0], r1, r3\n\tjump.gt\t@.BB19_24\n\tand!\t1, r2, r2\n\tjump.ne\t@.BB19_24\n\tst.1\t64, r1\n\tadd\t@CPI19_12[0], r0, r1\n\tadd\tstack[@returndatasize], r0, r2\n\tsub!\tr2, r0, r3\n\tadd\tr0, r0, r3\n\tadd.lt\tr1, r0, r3\n\tand\t@CPI19_12[0], r2, r2\n\tsub!\tr2, r0, r4\n\tadd.le\tr0, r0, r1\n\tsub.s!\t@CPI19_12[0], r2, r2\n\tadd.ne\tr3, r0, r1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB19_5\n\tadd\tstack-[16], r0, r1\n\tadd\t@CPI19_16[0], r1, r1\n\tsload\tr1, r2\n\tadd\tstack-[8], r0, r4\n\tsub.s!\t@CPI19_17[0], r4, r3\n\tjump.gt\t@.BB19_30\n\tmul\t@CPI19_18[0], r4, r3, r4\n\tadd\tstack-[15], r0, r4\n\tdiv\tr3, r4, r3, r4\n\tsub.s\t1, r0, r4\n\txor\tr3, r4, r4\n\tsub!\tr2, r4, r4\n\tjump.gt\t@.BB19_30\n\tadd\tr3, r2, r2\n\tsstore\tr1, r2\n\tadd\t@CPI19_3[0], r0, r1\n\tst.2\t0, r1\n\tadd\t@CPI19_4[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI19_4[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI19_5[0], r1, r1\n\tadd\t32779, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.ne\t@.BB19_7\n.BB19_5:\n\tadd\tr0, r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB19_69:\n\tret\n.BB19_30:\n\tadd\t@CPI19_0[0], r0, r1\n\tst.1\t0, r1\n\tadd\t17, r0, r1\n\tst.1\t4, r1\n\tadd\t@CPI19_1[0], r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB19_24:\n\tadd\t@CPI19_0[0], r0, r1\n\tst.1\t0, r1\n\tadd\t65, r0, r1\n\tst.1\t4, r1\n\tadd\t@CPI19_1[0], r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB19_3:\n\tadd\t@CPI19_0[0], r0, r1\n\tst.1\t0, r1\n\tadd\t50, r0, r1\n\tst.1\t4, r1\n\tadd\t@CPI19_1[0], r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB19_38:\n\tadd\t@CPI19_0[0], r0, r1\n\tst.1\t0, r1\n\tadd\t18, r0, r1\n\tst.1\t4, r1\n\tadd\t@CPI19_1[0], r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB19_17:\n\tld.1\t64, r2\n\tand\t31, r3, r4\n\tshr.s!\t5, r3, r3\n\tjump.eq\t@.BB19_72\n\tadd\tr0, r0, r5\n.BB19_19:\n\tshl.s\t5, r5, r6\n\tadd\tr2, r6, r7\n\tptr.add\tr1, r6, r6\n\tld\tr6, r6\n\tst.1\tr7, r6\n\tadd\t1, r5, r5\n\tsub!\tr5, r3, r6\n\tjump.lt\t@.BB19_19\n.BB19_72:\n\tsub!\tr4, r0, r5\n\tjump.eq\t@.BB19_21\n\tshl.s\t5, r3, r3\n\tptr.add\tr1, r3, r1\n\tadd\tr2, r3, r3\n\tshl.s\t3, r4, r4\n\tld.1\tr3, r5\n\tshl\tr5, r4, r5\n\tshr\tr5, r4, r5\n\tld\tr1, r1\n\tsub\t256, r4, r4\n\tshr\tr1, r4, r1\n\tshl\tr1, r4, r1\n\tor\tr1, r5, r1\n\tst.1\tr3, r1\n.BB19_21:\n\tadd\t@CPI19_4[0], r0, r1\n\tadd\tstack[@returndatasize], r0, r3\n\tsub.s!\t@CPI19_4[0], r3, r4\n\tadd.ge\tr1, r0, r3\n\tsub.s!\t@CPI19_4[0], r2, r4\n\tadd.lt\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tshl.s\t96, r3, r2\n\tor\tr2, r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB19_57:\n\tld.1\t64, r2\n\tand\t31, r4, r3\n\tshr.s!\t5, r4, r4\n\tjump.eq\t@.BB19_70\n\tadd\tr0, r0, r5\n.BB19_59:\n\tshl.s\t5, r5, r6\n\tadd\tr2, r6, r7\n\tptr.add\tr1, r6, r6\n\tld\tr6, r6\n\tst.1\tr7, r6\n\tadd\t1, r5, r5\n\tsub!\tr5, r4, r6\n\tjump.lt\t@.BB19_59\n.BB19_70:\n\tsub!\tr3, r0, r5\n\tjump.eq\t@.BB19_61\n\tshl.s\t5, r4, r4\n\tptr.add\tr1, r4, r1\n\tadd\tr2, r4, r4\n\tshl.s\t3, r3, r3\n\tld.1\tr4, r5\n\tshl\tr5, r3, r5\n\tshr\tr5, r3, r5\n\tld\tr1, r1\n\tsub\t256, r3, r3\n\tshr\tr1, r3, r1\n\tshl\tr1, r3, r1\n\tor\tr1, r5, r1\n\tst.1\tr4, r1\n.BB19_61:\n\tadd\t@CPI19_4[0], r0, r1\n\tadd\tstack[@returndatasize], r0, r3\n\tsub.s!\t@CPI19_4[0], r3, r4\n\tadd.ge\tr1, r0, r3\n\tsub.s!\t@CPI19_4[0], r2, r4\n\tadd.lt\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tshl.s\t96, r3, r2\n\tor\tr2, r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB19_44:\n\tld.1\t64, r2\n\tand\t31, r4, r3\n\tshr.s!\t5, r4, r4\n\tjump.eq\t@.BB19_71\n\tadd\tr0, r0, r5\n.BB19_46:\n\tshl.s\t5, r5, r6\n\tadd\tr2, r6, r7\n\tptr.add\tr1, r6, r6\n\tld\tr6, r6\n\tst.1\tr7, r6\n\tadd\t1, r5, r5\n\tsub!\tr5, r4, r6\n\tjump.lt\t@.BB19_46\n.BB19_71:\n\tsub!\tr3, r0, r5\n\tjump.eq\t@.BB19_48\n\tshl.s\t5, r4, r4\n\tptr.add\tr1, r4, r1\n\tadd\tr2, r4, r4\n\tshl.s\t3, r3, r3\n\tld.1\tr4, r5\n\tshl\tr5, r3, r5\n\tshr\tr5, r3, r5\n\tld\tr1, r1\n\tsub\t256, r3, r3\n\tshr\tr1, r3, r1\n\tshl\tr1, r3, r1\n\tor\tr1, r5, r1\n\tst.1\tr4, r1\n.BB19_48:\n\tadd\t@CPI19_4[0], r0, r1\n\tadd\tstack[@returndatasize], r0, r3\n\tsub.s!\t@CPI19_4[0], r3, r4\n\tadd.ge\tr1, r0, r3\n\tsub.s!\t@CPI19_4[0], r2, r4\n\tadd.lt\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tshl.s\t96, r3, r2\n\tor\tr2, r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.func_end19:\n\nfun_updatePool:\n.func_begin20:\n\tnop\tstack+=[11]\n\tadd\t5, r0, r2\n\tsload\tr2, r3\n\tsub!\tr3, r1, r3\n\tjump.le\t@.BB20_1\n\tst.1\t0, r2\n\tmul\t5, r1, r2, r1\n\tadd\tr2, r0, stack-[11]\n\tadd\t@CPI20_2[0], r2, r1\n\tadd\tr1, r0, stack-[9]\n\tsload\tr1, r1\n\tadd\tr1, r0, stack-[10]\n\tadd\t@CPI20_3[0], r0, r1\n\tst.2\t0, r1\n\tadd\t@CPI20_4[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI20_4[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI20_5[0], r1, r1\n\tadd\t32779, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tadd\tstack-[11], r0, r3\n\tadd\t@CPI20_6[0], r3, r3\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB20_3\n\tld\tr1, r1\n\tadd\tstack-[10], r0, r2\n\tsub!\tr1, r2, r1\n\tjump.le\t@.BB20_6\n\tsload\tr3, r1\n\tadd\t@CPI20_7[0], r0, r2\n\tst.2\t0, r2\n\tand\t@CPI20_8[0], r1, r1\n\tadd\tr1, r0, stack-[10]\n\tst.2\t4, r1\n\tadd\t@CPI20_4[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI20_4[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI20_9[0], r1, r1\n\tadd\t32770, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB20_3\n\tld\tr1, r1\n\tsub!\tr1, r0, r1\n\tjump.eq\t@.BB20_3\n\tld.1\t64, r9\n\tadd\t@CPI20_10[0], r0, r1\n\tst.1\tr9, r1\n\tcontext.this\tr1\n\tand\t@CPI20_8[0], r1, r2\n\tadd\t4, r9, r1\n\tadd\tr2, r0, stack-[6]\n\tst.1\tr1, r2\n\tcontext.gas_left\tr1\n\tadd\tstack-[10], r0, r2\n\tsub.s!\t4, r2, r3\n\tjump.ne\t@.BB20_11\n\tadd\tstack[@returndatasize], r0, r3\n\tjump\t@.BB20_21\n.BB20_11:\n\tadd\t@CPI20_4[0], r0, r4\n\tsub.s!\t@CPI20_4[0], r1, r3\n\tadd.ge\tr4, r0, r1\n\tsub.s!\t@CPI20_4[0], r9, r3\n\tadd\tr4, r0, r3\n\tadd.lt\tr9, r0, r3\n\tshl.s\t64, r3, r3\n\tshl.s\t192, r1, r1\n\tor\tr1, r3, r1\n\tor\t@CPI20_1[0], r1, r1\n\tadd\tr9, r0, stack-[10]\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tadd\tstack-[10], r0, r9\n\tadd\tr1, r0, r3\n\tshr.s\t96, r3, r3\n\tand\t@CPI20_4[0], r3, r3\n\tsub.s!\t32, r3, r4\n\tadd\t32, r0, r5\n\tadd.lt\tr3, r0, r5\n\tand\t31, r5, r4\n\tshr.s!\t5, r5, r5\n\tjump.eq\t@.BB20_70\n\tadd\tr0, r0, r6\n.BB20_13:\n\tshl.s\t5, r6, r7\n\tadd\tr9, r7, r8\n\tptr.add\tr1, r7, r7\n\tld\tr7, r7\n\tst.1\tr8, r7\n\tadd\t1, r6, r6\n\tsub!\tr6, r5, r7\n\tjump.lt\t@.BB20_13\n.BB20_70:\n\tsub!\tr4, r0, r6\n\tjump.eq\t@.BB20_15\n\tshl.s\t5, r5, r5\n\tptr.add\tr1, r5, r6\n\tadd\tr9, r5, r5\n\tshl.s\t3, r4, r4\n\tld.1\tr5, r7\n\tshl\tr7, r4, r7\n\tshr\tr7, r4, r7\n\tld\tr6, r6\n\tsub\t256, r4, r4\n\tshr\tr6, r4, r6\n\tshl\tr6, r4, r4\n\tor\tr4, r7, r4\n\tst.1\tr5, r4\n.BB20_15:\n\tadd\tr3, r0, stack[@returndatasize]\n\tptr.add\tr1, r0, stack[@ptr_return_data]\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB20_16\n.BB20_21:\n\tadd\t31, r3, r1\n\tsub.s\t32, r0, r2\n\tadd\tr2, r0, stack-[8]\n\tand\tr1, r2, r2\n\tadd\tr2, r9, r1\n\tsub!\tr1, r2, r2\n\tadd\t0, r0, r2\n\tadd.lt\t1, r0, r2\n\tsub.s!\t@CPI20_11[0], r1, r3\n\tjump.gt\t@.BB20_23\n\tand!\t1, r2, r2\n\tjump.ne\t@.BB20_23\n\tst.1\t64, r1\n\tadd\t@CPI20_12[0], r0, r1\n\tadd\tstack[@returndatasize], r0, r2\n\tsub.s!\t32, r2, r3\n\tadd\tr0, r0, r3\n\tadd.lt\tr1, r0, r3\n\tand\t@CPI20_12[0], r2, r2\n\tsub!\tr2, r0, r4\n\tadd.le\tr0, r0, r1\n\tsub.s!\t@CPI20_12[0], r2, r2\n\tadd.ne\tr3, r0, r1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB20_3\n\tld.1\tr9, r1\n\tadd\tr1, r0, stack-[10]\n\tadd\t@CPI20_3[0], r0, r1\n\tst.2\t0, r1\n\tadd\t@CPI20_4[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI20_4[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI20_5[0], r1, r1\n\tadd\t32779, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tadd\tstack-[10], r0, r3\n\tsub!\tr3, r0, r3\n\tand\t1, r2, r2\n\tjump.eq\t@.BB20_26\n\tsub!\tr2, r0, r2\n\tjump.eq\t@.BB20_3\n\tadd\tstack-[9], r0, r2\n\tsload\tr2, r3\n\tld\tr1, r4\n\tsub!\tr4, r3, r1\n\tjump.lt\t@.BB20_29\n\tsub\tr4, r3, r1\n\tadd\t4, r0, r2\n\tsload\tr2, r2\n\tsub!\tr4, r3, r3\n\tjump.eq\t@.BB20_32\n\tsub.s\t1, r0, r3\n\tdiv\tr3, r1, r3, r4\n\tsub!\tr3, r2, r3\n\tjump.lt\t@.BB20_29\n.BB20_32:\n\tmul!\tr2, r1, r1, r2\n\tadd\t3, r0, r2\n\tsload\tr2, r2\n\tjump.eq\t@.BB20_34\n\tsub.s\t1, r0, r3\n\tdiv\tr3, r1, r3, r4\n\tsub!\tr3, r2, r3\n\tjump.lt\t@.BB20_29\n.BB20_34:\n\tmul!\tr2, r1, r3, r1\n\tadd\tstack-[11], r0, r1\n\tadd\t@CPI20_13[0], r1, r1\n\tsload\tr1, r4\n\tjump.eq\t@.BB20_36\n\tsub.s\t1, r0, r1\n\tdiv\tr1, r3, r1, r2\n\tsub!\tr1, r4, r1\n\tjump.lt\t@.BB20_29\n.BB20_36:\n\tadd\tr4, r0, stack-[4]\n\tadd\tr3, r0, stack-[5]\n\tadd\t7, r0, r1\n\tsload\tr1, r1\n\tadd\tr1, r0, stack-[3]\n\tsub!\tr1, r0, r1\n\tjump.eq\t@.BB20_37\n\tadd\t2, r0, r1\n\tsload\tr1, r1\n\tadd\tr1, r0, stack-[7]\n\tadd\t1, r0, r1\n\tadd\tr1, r0, stack-[1]\n\tsload\tr1, r1\n\tadd\t@CPI20_7[0], r0, r2\n\tst.2\t0, r2\n\tand\t@CPI20_8[0], r1, r1\n\tadd\tr1, r0, stack-[2]\n\tst.2\t4, r1\n\tadd\t@CPI20_4[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI20_4[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI20_9[0], r1, r1\n\tadd\t32770, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tadd\tstack-[7], r0, r3\n\tand\t@CPI20_8[0], r3, r3\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB20_3\n\tld\tr1, r1\n\tsub!\tr1, r0, r1\n\tjump.eq\t@.BB20_3\n\tadd\tstack-[5], r0, r1\n\tadd\tstack-[4], r0, r2\n\tmul\tr2, r1, r1, r2\n\tadd\tstack-[3], r0, r2\n\tdiv\tr1, r2, r2, r1\n\tadd\tr2, r0, stack-[7]\n\tdiv.s\t10, r2, r1, r2\n\tld.1\t64, r5\n\tadd\t36, r5, r2\n\tst.1\tr2, r1\n\tadd\t@CPI20_14[0], r0, r1\n\tst.1\tr5, r1\n\tadd\t4, r5, r1\n\tst.1\tr1, r3\n\tcontext.gas_left\tr1\n\tadd\tstack-[2], r0, r2\n\tsub.s!\t4, r2, r3\n\tjump.ne\t@.BB20_42\n\tadd\tstack[@returndatasize], r0, r4\n\tjump\t@.BB20_48\n.BB20_26:\n\tsub!\tr2, r0, r2\n\tjump.ne\t@.BB20_5\n\tjump\t@.BB20_3\n.BB20_42:\n\tadd\t@CPI20_4[0], r0, r4\n\tsub.s!\t@CPI20_4[0], r1, r3\n\tadd.ge\tr4, r0, r1\n\tsub.s!\t@CPI20_4[0], r5, r3\n\tadd\tr4, r0, r3\n\tadd.lt\tr5, r0, r3\n\tshl.s\t64, r3, r3\n\tshl.s\t192, r1, r1\n\tor\tr1, r3, r1\n\tor\t@CPI20_15[0], r1, r1\n\tadd\tr5, r0, stack-[5]\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tadd\tstack-[5], r0, r5\n\tadd\tr1, r0, r3\n\tshr.s\t96, r3, r3\n\tand\t@CPI20_4[0], r3, stack[@returndatasize]\n\tand\t@CPI20_4[0], r3, r4\n\tptr.add\tr1, r0, stack[@ptr_return_data]\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB20_43\n.BB20_48:\n\tadd\t31, r4, r1\n\tadd\tstack-[8], r0, r2\n\tand\tr1, r2, r2\n\tadd\tr2, r5, r1\n\tsub!\tr1, r2, r2\n\tadd\t0, r0, r2\n\tadd.lt\t1, r0, r2\n\tsub.s!\t@CPI20_11[0], r1, r3\n\tjump.gt\t@.BB20_23\n\tand!\t1, r2, r2\n\tjump.ne\t@.BB20_23\n\tst.1\t64, r1\n\tadd\t@CPI20_12[0], r0, r1\n\tadd\tstack[@returndatasize], r0, r2\n\tsub!\tr2, r0, r3\n\tadd\tr0, r0, r3\n\tadd.lt\tr1, r0, r3\n\tand\t@CPI20_12[0], r2, r2\n\tsub!\tr2, r0, r4\n\tadd.le\tr0, r0, r1\n\tsub.s!\t@CPI20_12[0], r2, r2\n\tadd.ne\tr3, r0, r1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB20_3\n\tadd\tstack-[1], r0, r1\n\tsload\tr1, r1\n\tadd\t@CPI20_7[0], r0, r2\n\tst.2\t0, r2\n\tand\t@CPI20_8[0], r1, r1\n\tadd\tr1, r0, stack-[5]\n\tst.2\t4, r1\n\tadd\t@CPI20_4[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI20_4[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI20_9[0], r1, r1\n\tadd\t32770, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB20_3\n\tld\tr1, r1\n\tsub!\tr1, r0, r1\n\tjump.eq\t@.BB20_3\n\tld.1\t64, r5\n\tadd\t36, r5, r1\n\tadd\tstack-[7], r0, r2\n\tst.1\tr1, r2\n\tadd\t@CPI20_14[0], r0, r1\n\tst.1\tr5, r1\n\tadd\t4, r5, r1\n\tadd\tstack-[6], r0, r2\n\tst.1\tr1, r2\n\tcontext.gas_left\tr1\n\tadd\tstack-[5], r0, r2\n\tsub.s!\t4, r2, r3\n\tjump.ne\t@.BB20_55\n\tadd\tstack[@returndatasize], r0, r4\n\tjump\t@.BB20_61\n.BB20_55:\n\tadd\t@CPI20_4[0], r0, r4\n\tsub.s!\t@CPI20_4[0], r1, r3\n\tadd.ge\tr4, r0, r1\n\tsub.s!\t@CPI20_4[0], r5, r3\n\tadd\tr4, r0, r3\n\tadd.lt\tr5, r0, r3\n\tshl.s\t64, r3, r3\n\tshl.s\t192, r1, r1\n\tor\tr1, r3, r1\n\tor\t@CPI20_15[0], r1, r1\n\tadd\tr5, r0, stack-[6]\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tadd\tstack-[6], r0, r5\n\tadd\tr1, r0, r3\n\tshr.s\t96, r3, r3\n\tand\t@CPI20_4[0], r3, stack[@returndatasize]\n\tand\t@CPI20_4[0], r3, r4\n\tptr.add\tr1, r0, stack[@ptr_return_data]\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB20_56\n.BB20_61:\n\tadd\t31, r4, r1\n\tadd\tstack-[8], r0, r2\n\tand\tr1, r2, r2\n\tadd\tr2, r5, r1\n\tsub!\tr1, r2, r2\n\tadd\t0, r0, r2\n\tadd.lt\t1, r0, r2\n\tsub.s!\t@CPI20_11[0], r1, r3\n\tjump.gt\t@.BB20_23\n\tand!\t1, r2, r2\n\tjump.ne\t@.BB20_23\n\tst.1\t64, r1\n\tadd\t@CPI20_12[0], r0, r1\n\tadd\tstack[@returndatasize], r0, r2\n\tsub!\tr2, r0, r3\n\tadd\tr0, r0, r3\n\tadd.lt\tr1, r0, r3\n\tand\t@CPI20_12[0], r2, r2\n\tsub!\tr2, r0, r4\n\tadd.le\tr0, r0, r1\n\tsub.s!\t@CPI20_12[0], r2, r2\n\tadd.ne\tr3, r0, r1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB20_3\n\tadd\tstack-[11], r0, r1\n\tadd\t@CPI20_16[0], r1, r1\n\tsload\tr1, r2\n\tadd\tstack-[7], r0, r4\n\tsub.s!\t@CPI20_17[0], r4, r3\n\tjump.gt\t@.BB20_29\n\tmul\t@CPI20_18[0], r4, r3, r4\n\tadd\tstack-[10], r0, r4\n\tdiv\tr3, r4, r3, r4\n\tsub.s\t1, r0, r4\n\txor\tr3, r4, r4\n\tsub!\tr2, r4, r4\n\tjump.gt\t@.BB20_29\n\tadd\tr3, r2, r2\n\tsstore\tr1, r2\n\tadd\t@CPI20_3[0], r0, r1\n\tst.2\t0, r1\n\tadd\t@CPI20_4[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI20_4[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI20_5[0], r1, r1\n\tadd\t32779, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB20_3\n.BB20_5:\n\tld\tr1, r1\n\tadd\tstack-[9], r0, r2\n\tsstore\tr2, r1\n.BB20_6:\n\tret\n.BB20_3:\n\tadd\tr0, r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB20_29:\n\tadd\t@CPI20_0[0], r0, r1\n\tst.1\t0, r1\n\tadd\t17, r0, r1\n\tst.1\t4, r1\n\tadd\t@CPI20_1[0], r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB20_23:\n\tadd\t@CPI20_0[0], r0, r1\n\tst.1\t0, r1\n\tadd\t65, r0, r1\n\tst.1\t4, r1\n\tadd\t@CPI20_1[0], r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB20_1:\n\tadd\t@CPI20_0[0], r0, r1\n\tst.1\t0, r1\n\tadd\t50, r0, r1\n\tst.1\t4, r1\n\tadd\t@CPI20_1[0], r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB20_37:\n\tadd\t@CPI20_0[0], r0, r1\n\tst.1\t0, r1\n\tadd\t18, r0, r1\n\tst.1\t4, r1\n\tadd\t@CPI20_1[0], r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB20_16:\n\tld.1\t64, r2\n\tand\t31, r3, r4\n\tshr.s!\t5, r3, r3\n\tjump.eq\t@.BB20_69\n\tadd\tr0, r0, r5\n.BB20_18:\n\tshl.s\t5, r5, r6\n\tadd\tr2, r6, r7\n\tptr.add\tr1, r6, r6\n\tld\tr6, r6\n\tst.1\tr7, r6\n\tadd\t1, r5, r5\n\tsub!\tr5, r3, r6\n\tjump.lt\t@.BB20_18\n.BB20_69:\n\tsub!\tr4, r0, r5\n\tjump.eq\t@.BB20_20\n\tshl.s\t5, r3, r3\n\tptr.add\tr1, r3, r1\n\tadd\tr2, r3, r3\n\tshl.s\t3, r4, r4\n\tld.1\tr3, r5\n\tshl\tr5, r4, r5\n\tshr\tr5, r4, r5\n\tld\tr1, r1\n\tsub\t256, r4, r4\n\tshr\tr1, r4, r1\n\tshl\tr1, r4, r1\n\tor\tr1, r5, r1\n\tst.1\tr3, r1\n.BB20_20:\n\tadd\t@CPI20_4[0], r0, r1\n\tadd\tstack[@returndatasize], r0, r3\n\tsub.s!\t@CPI20_4[0], r3, r4\n\tadd.ge\tr1, r0, r3\n\tsub.s!\t@CPI20_4[0], r2, r4\n\tadd.lt\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tshl.s\t96, r3, r2\n\tor\tr2, r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB20_43:\n\tld.1\t64, r2\n\tand\t31, r4, r3\n\tshr.s!\t5, r4, r4\n\tjump.eq\t@.BB20_68\n\tadd\tr0, r0, r5\n.BB20_45:\n\tshl.s\t5, r5, r6\n\tadd\tr2, r6, r7\n\tptr.add\tr1, r6, r6\n\tld\tr6, r6\n\tst.1\tr7, r6\n\tadd\t1, r5, r5\n\tsub!\tr5, r4, r6\n\tjump.lt\t@.BB20_45\n.BB20_68:\n\tsub!\tr3, r0, r5\n\tjump.eq\t@.BB20_47\n\tshl.s\t5, r4, r4\n\tptr.add\tr1, r4, r1\n\tadd\tr2, r4, r4\n\tshl.s\t3, r3, r3\n\tld.1\tr4, r5\n\tshl\tr5, r3, r5\n\tshr\tr5, r3, r5\n\tld\tr1, r1\n\tsub\t256, r3, r3\n\tshr\tr1, r3, r1\n\tshl\tr1, r3, r1\n\tor\tr1, r5, r1\n\tst.1\tr4, r1\n.BB20_47:\n\tadd\t@CPI20_4[0], r0, r1\n\tadd\tstack[@returndatasize], r0, r3\n\tsub.s!\t@CPI20_4[0], r3, r4\n\tadd.ge\tr1, r0, r3\n\tsub.s!\t@CPI20_4[0], r2, r4\n\tadd.lt\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tshl.s\t96, r3, r2\n\tor\tr2, r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB20_56:\n\tld.1\t64, r2\n\tand\t31, r4, r3\n\tshr.s!\t5, r4, r4\n\tjump.eq\t@.BB20_67\n\tadd\tr0, r0, r5\n.BB20_58:\n\tshl.s\t5, r5, r6\n\tadd\tr2, r6, r7\n\tptr.add\tr1, r6, r6\n\tld\tr6, r6\n\tst.1\tr7, r6\n\tadd\t1, r5, r5\n\tsub!\tr5, r4, r6\n\tjump.lt\t@.BB20_58\n.BB20_67:\n\tsub!\tr3, r0, r5\n\tjump.eq\t@.BB20_60\n\tshl.s\t5, r4, r4\n\tptr.add\tr1, r4, r1\n\tadd\tr2, r4, r4\n\tshl.s\t3, r3, r3\n\tld.1\tr4, r5\n\tshl\tr5, r3, r5\n\tshr\tr5, r3, r5\n\tld\tr1, r1\n\tsub\t256, r3, r3\n\tshr\tr1, r3, r1\n\tshl\tr1, r3, r1\n\tor\tr1, r5, r1\n\tst.1\tr4, r1\n.BB20_60:\n\tadd\t@CPI20_4[0], r0, r1\n\tadd\tstack[@returndatasize], r0, r3\n\tsub.s!\t@CPI20_4[0], r3, r4\n\tadd.ge\tr1, r0, r3\n\tsub.s!\t@CPI20_4[0], r2, r4\n\tadd.lt\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tshl.s\t96, r3, r2\n\tor\tr2, r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.func_end20:\n\nfun_deposit:\n.func_begin21:\n\tnop\tstack+=[17]\n\tadd\tr2, r0, stack-[16]\n\tsub!\tr1, r0, r2\n\tjump.eq\t@.BB21_1\n\tadd\t5, r0, r3\n\tsload\tr3, r2\n\tsub!\tr2, r1, r2\n\tjump.le\t@.BB21_3\n\tadd\tr3, r0, stack-[13]\n\tst.1\t0, r1\n\tadd\t6, r0, r2\n\tst.1\t32, r2\n\tadd\t@CPI21_0[0], r0, r4\n\tadd\tr1, r0, stack-[14]\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI21_0[0], r2, r3\n\tadd\tr4, r0, r1\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI21_1[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tadd\tstack-[14], r0, r3\n\tmul\t5, r3, r4, r3\n\tadd\tr4, r0, stack-[17]\n\tadd\t@CPI21_2[0], r4, r3\n\tadd\tr3, r0, stack-[12]\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB21_5\n\tld\tr1, r1\n\tcontext.caller\tr2\n\tadd\tr2, r0, stack-[11]\n\tand\t@CPI21_3[0], r2, r2\n\tadd\tr2, r0, stack-[10]\n\tst.1\t0, r2\n\tst.1\t32, r1\n\tadd\t@CPI21_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI21_0[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI21_1[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB21_5\n\tld\tr1, r1\n\tadd\tr1, r0, stack-[15]\n\tadd\tstack-[13], r0, r3\n\tsload\tr3, r1\n\tadd\tstack-[14], r0, r2\n\tsub!\tr1, r2, r1\n\tjump.le\t@.BB21_3\n\tst.1\t0, r3\n\tadd\tstack-[17], r0, r1\n\tadd\t@CPI21_6[0], r1, r1\n\tadd\tr1, r0, stack-[9]\n\tsload\tr1, r1\n\tadd\tr1, r0, stack-[13]\n\tadd\t@CPI21_7[0], r0, r1\n\tst.2\t0, r1\n\tadd\t@CPI21_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI21_0[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI21_8[0], r1, r1\n\tadd\t32779, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB21_5\n\tld\tr1, r1\n\tadd\tstack-[13], r0, r2\n\tsub!\tr1, r2, r1\n\tjump.le\t@.BB21_71\n\tadd\tstack-[12], r0, r1\n\tsload\tr1, r1\n\tadd\t@CPI21_9[0], r0, r2\n\tst.2\t0, r2\n\tand\t@CPI21_3[0], r1, r1\n\tadd\tr1, r0, stack-[13]\n\tst.2\t4, r1\n\tadd\t@CPI21_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI21_0[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI21_10[0], r1, r1\n\tadd\t32770, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB21_5\n\tld\tr1, r1\n\tsub!\tr1, r0, r1\n\tjump.eq\t@.BB21_5\n\tld.1\t64, r9\n\tadd\t@CPI21_11[0], r0, r1\n\tst.1\tr9, r1\n\tcontext.this\tr1\n\tand\t@CPI21_3[0], r1, r2\n\tadd\t4, r9, r1\n\tadd\tr2, r0, stack-[6]\n\tst.1\tr1, r2\n\tcontext.gas_left\tr1\n\tadd\tstack-[13], r0, r2\n\tsub.s!\t4, r2, r3\n\tjump.ne\t@.BB21_15\n\tadd\tstack[@returndatasize], r0, r3\n\tjump\t@.BB21_25\n.BB21_15:\n\tadd\t@CPI21_0[0], r0, r4\n\tsub.s!\t@CPI21_0[0], r1, r3\n\tadd.ge\tr4, r0, r1\n\tsub.s!\t@CPI21_0[0], r9, r3\n\tadd\tr4, r0, r3\n\tadd.lt\tr9, r0, r3\n\tshl.s\t64, r3, r3\n\tshl.s\t192, r1, r1\n\tor\tr1, r3, r1\n\tor\t@CPI21_5[0], r1, r1\n\tadd\tr9, r0, stack-[13]\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tadd\tstack-[13], r0, r9\n\tadd\tr1, r0, r3\n\tshr.s\t96, r3, r3\n\tand\t@CPI21_0[0], r3, r3\n\tsub.s!\t32, r3, r4\n\tadd\t32, r0, r5\n\tadd.lt\tr3, r0, r5\n\tand\t31, r5, r4\n\tshr.s!\t5, r5, r5\n\tjump.eq\t@.BB21_177\n\tadd\tr0, r0, r6\n.BB21_17:\n\tshl.s\t5, r6, r7\n\tadd\tr9, r7, r8\n\tptr.add\tr1, r7, r7\n\tld\tr7, r7\n\tst.1\tr8, r7\n\tadd\t1, r6, r6\n\tsub!\tr6, r5, r7\n\tjump.lt\t@.BB21_17\n.BB21_177:\n\tsub!\tr4, r0, r6\n\tjump.eq\t@.BB21_19\n\tshl.s\t5, r5, r5\n\tptr.add\tr1, r5, r6\n\tadd\tr9, r5, r5\n\tshl.s\t3, r4, r4\n\tld.1\tr5, r7\n\tshl\tr7, r4, r7\n\tshr\tr7, r4, r7\n\tld\tr6, r6\n\tsub\t256, r4, r4\n\tshr\tr6, r4, r6\n\tshl\tr6, r4, r4\n\tor\tr4, r7, r4\n\tst.1\tr5, r4\n.BB21_19:\n\tadd\tr3, r0, stack[@returndatasize]\n\tptr.add\tr1, r0, stack[@ptr_return_data]\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB21_20\n.BB21_25:\n\tadd\t31, r3, r1\n\tsub.s\t32, r0, r2\n\tadd\tr2, r0, stack-[8]\n\tand\tr1, r2, r2\n\tadd\tr2, r9, r1\n\tsub!\tr1, r2, r2\n\tadd\t0, r0, r2\n\tadd.lt\t1, r0, r2\n\tsub.s!\t@CPI21_12[0], r1, r3\n\tjump.gt\t@.BB21_27\n\tand!\t1, r2, r2\n\tjump.ne\t@.BB21_27\n\tst.1\t64, r1\n\tadd\t@CPI21_13[0], r0, r1\n\tadd\tstack[@returndatasize], r0, r2\n\tsub.s!\t32, r2, r3\n\tadd\tr0, r0, r3\n\tadd.lt\tr1, r0, r3\n\tand\t@CPI21_13[0], r2, r2\n\tsub!\tr2, r0, r4\n\tadd.le\tr0, r0, r1\n\tsub.s!\t@CPI21_13[0], r2, r2\n\tadd.ne\tr3, r0, r1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB21_5\n\tld.1\tr9, r1\n\tadd\tr1, r0, stack-[13]\n\tadd\t@CPI21_7[0], r0, r1\n\tst.2\t0, r1\n\tadd\t@CPI21_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI21_0[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI21_8[0], r1, r1\n\tadd\t32779, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tadd\tstack-[13], r0, r3\n\tsub!\tr3, r0, r3\n\tand\t1, r2, r2\n\tjump.eq\t@.BB21_30\n\tsub!\tr2, r0, r2\n\tjump.eq\t@.BB21_5\n\tadd\tstack-[9], r0, r2\n\tsload\tr2, r3\n\tld\tr1, r4\n\tsub!\tr4, r3, r1\n\tjump.lt\t@.BB21_33\n\tsub\tr4, r3, r1\n\tadd\t4, r0, r2\n\tsload\tr2, r2\n\tsub!\tr4, r3, r3\n\tjump.eq\t@.BB21_36\n\tsub.s\t1, r0, r3\n\tdiv\tr3, r1, r3, r4\n\tsub!\tr3, r2, r3\n\tjump.lt\t@.BB21_33\n.BB21_36:\n\tmul!\tr2, r1, r1, r2\n\tadd\t3, r0, r2\n\tsload\tr2, r2\n\tjump.eq\t@.BB21_38\n\tsub.s\t1, r0, r3\n\tdiv\tr3, r1, r3, r4\n\tsub!\tr3, r2, r3\n\tjump.lt\t@.BB21_33\n.BB21_38:\n\tmul!\tr2, r1, r3, r1\n\tadd\tstack-[17], r0, r1\n\tadd\t@CPI21_14[0], r1, r1\n\tsload\tr1, r4\n\tjump.eq\t@.BB21_40\n\tsub.s\t1, r0, r1\n\tdiv\tr1, r3, r1, r2\n\tsub!\tr1, r4, r1\n\tjump.lt\t@.BB21_33\n.BB21_40:\n\tadd\tr4, r0, stack-[4]\n\tadd\tr3, r0, stack-[5]\n\tadd\t7, r0, r1\n\tsload\tr1, r1\n\tadd\tr1, r0, stack-[3]\n\tsub!\tr1, r0, r1\n\tjump.eq\t@.BB21_41\n\tadd\t2, r0, r1\n\tsload\tr1, r1\n\tadd\tr1, r0, stack-[7]\n\tadd\t1, r0, r1\n\tadd\tr1, r0, stack-[1]\n\tsload\tr1, r1\n\tadd\t@CPI21_9[0], r0, r2\n\tst.2\t0, r2\n\tand\t@CPI21_3[0], r1, r1\n\tadd\tr1, r0, stack-[2]\n\tst.2\t4, r1\n\tadd\t@CPI21_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI21_0[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI21_10[0], r1, r1\n\tadd\t32770, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tadd\tstack-[7], r0, r3\n\tand\t@CPI21_3[0], r3, r3\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB21_5\n\tld\tr1, r1\n\tsub!\tr1, r0, r1\n\tjump.eq\t@.BB21_5\n\tadd\tstack-[5], r0, r1\n\tadd\tstack-[4], r0, r2\n\tmul\tr2, r1, r1, r2\n\tadd\tstack-[3], r0, r2\n\tdiv\tr1, r2, r2, r1\n\tadd\tr2, r0, stack-[7]\n\tdiv.s\t10, r2, r1, r2\n\tld.1\t64, r5\n\tadd\t36, r5, r2\n\tst.1\tr2, r1\n\tadd\t@CPI21_15[0], r0, r1\n\tst.1\tr5, r1\n\tadd\t4, r5, r1\n\tst.1\tr1, r3\n\tcontext.gas_left\tr1\n\tadd\tstack-[2], r0, r2\n\tsub.s!\t4, r2, r3\n\tjump.ne\t@.BB21_46\n\tadd\tstack[@returndatasize], r0, r4\n\tjump\t@.BB21_52\n.BB21_30:\n\tsub!\tr2, r0, r2\n\tjump.ne\t@.BB21_10\n\tjump\t@.BB21_5\n.BB21_46:\n\tadd\t@CPI21_0[0], r0, r4\n\tsub.s!\t@CPI21_0[0], r1, r3\n\tadd.ge\tr4, r0, r1\n\tsub.s!\t@CPI21_0[0], r5, r3\n\tadd\tr4, r0, r3\n\tadd.lt\tr5, r0, r3\n\tshl.s\t64, r3, r3\n\tshl.s\t192, r1, r1\n\tor\tr1, r3, r1\n\tor\t@CPI21_16[0], r1, r1\n\tadd\tr5, r0, stack-[5]\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tadd\tstack-[5], r0, r5\n\tadd\tr1, r0, r3\n\tshr.s\t96, r3, r3\n\tand\t@CPI21_0[0], r3, stack[@returndatasize]\n\tand\t@CPI21_0[0], r3, r4\n\tptr.add\tr1, r0, stack[@ptr_return_data]\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB21_47\n.BB21_52:\n\tadd\t31, r4, r1\n\tadd\tstack-[8], r0, r2\n\tand\tr1, r2, r2\n\tadd\tr2, r5, r1\n\tsub!\tr1, r2, r2\n\tadd\t0, r0, r2\n\tadd.lt\t1, r0, r2\n\tsub.s!\t@CPI21_12[0], r1, r3\n\tjump.gt\t@.BB21_27\n\tand!\t1, r2, r2\n\tjump.ne\t@.BB21_27\n\tst.1\t64, r1\n\tadd\t@CPI21_13[0], r0, r1\n\tadd\tstack[@returndatasize], r0, r2\n\tsub!\tr2, r0, r3\n\tadd\tr0, r0, r3\n\tadd.lt\tr1, r0, r3\n\tand\t@CPI21_13[0], r2, r2\n\tsub!\tr2, r0, r4\n\tadd.le\tr0, r0, r1\n\tsub.s!\t@CPI21_13[0], r2, r2\n\tadd.ne\tr3, r0, r1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB21_5\n\tadd\tstack-[1], r0, r1\n\tsload\tr1, r1\n\tadd\t@CPI21_9[0], r0, r2\n\tst.2\t0, r2\n\tand\t@CPI21_3[0], r1, r1\n\tadd\tr1, r0, stack-[5]\n\tst.2\t4, r1\n\tadd\t@CPI21_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI21_0[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI21_10[0], r1, r1\n\tadd\t32770, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB21_5\n\tld\tr1, r1\n\tsub!\tr1, r0, r1\n\tjump.eq\t@.BB21_5\n\tld.1\t64, r5\n\tadd\t36, r5, r1\n\tadd\tstack-[7], r0, r2\n\tst.1\tr1, r2\n\tadd\t@CPI21_15[0], r0, r1\n\tst.1\tr5, r1\n\tadd\t4, r5, r1\n\tadd\tstack-[6], r0, r2\n\tst.1\tr1, r2\n\tcontext.gas_left\tr1\n\tadd\tstack-[5], r0, r2\n\tsub.s!\t4, r2, r3\n\tjump.ne\t@.BB21_59\n\tadd\tstack[@returndatasize], r0, r4\n\tjump\t@.BB21_65\n.BB21_59:\n\tadd\t@CPI21_0[0], r0, r4\n\tsub.s!\t@CPI21_0[0], r1, r3\n\tadd.ge\tr4, r0, r1\n\tsub.s!\t@CPI21_0[0], r5, r3\n\tadd\tr4, r0, r3\n\tadd.lt\tr5, r0, r3\n\tshl.s\t64, r3, r3\n\tshl.s\t192, r1, r1\n\tor\tr1, r3, r1\n\tor\t@CPI21_16[0], r1, r1\n\tadd\tr5, r0, stack-[6]\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tadd\tstack-[6], r0, r5\n\tadd\tr1, r0, r3\n\tshr.s\t96, r3, r3\n\tand\t@CPI21_0[0], r3, stack[@returndatasize]\n\tand\t@CPI21_0[0], r3, r4\n\tptr.add\tr1, r0, stack[@ptr_return_data]\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB21_60\n.BB21_65:\n\tadd\t31, r4, r1\n\tadd\tstack-[8], r0, r2\n\tand\tr1, r2, r2\n\tadd\tr2, r5, r1\n\tsub!\tr1, r2, r2\n\tadd\t0, r0, r2\n\tadd.lt\t1, r0, r2\n\tsub.s!\t@CPI21_12[0], r1, r3\n\tjump.gt\t@.BB21_27\n\tand!\t1, r2, r2\n\tjump.ne\t@.BB21_27\n\tst.1\t64, r1\n\tadd\t@CPI21_13[0], r0, r1\n\tadd\tstack[@returndatasize], r0, r2\n\tsub!\tr2, r0, r3\n\tadd\tr0, r0, r3\n\tadd.lt\tr1, r0, r3\n\tand\t@CPI21_13[0], r2, r2\n\tsub!\tr2, r0, r4\n\tadd.le\tr0, r0, r1\n\tsub.s!\t@CPI21_13[0], r2, r2\n\tadd.ne\tr3, r0, r1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB21_5\n\tadd\tstack-[17], r0, r1\n\tadd\t@CPI21_17[0], r1, r1\n\tsload\tr1, r2\n\tadd\tstack-[7], r0, r4\n\tsub.s!\t@CPI21_18[0], r4, r3\n\tjump.gt\t@.BB21_33\n\tmul\t@CPI21_19[0], r4, r3, r4\n\tadd\tstack-[13], r0, r4\n\tdiv\tr3, r4, r3, r4\n\tsub.s\t1, r0, r4\n\txor\tr3, r4, r4\n\tsub!\tr2, r4, r4\n\tjump.gt\t@.BB21_33\n\tadd\tr3, r2, r2\n\tsstore\tr1, r2\n\tadd\t@CPI21_7[0], r0, r1\n\tst.2\t0, r1\n\tadd\t@CPI21_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI21_0[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI21_8[0], r1, r1\n\tadd\t32779, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB21_5\n.BB21_10:\n\tld\tr1, r1\n\tadd\tstack-[9], r0, r2\n\tsstore\tr2, r1\n.BB21_71:\n\tadd\tstack-[15], r0, r3\n\tsload\tr3, r1\n\tsub!\tr1, r0, r2\n\tadd\t1, r3, r2\n\tadd\tr2, r0, stack-[13]\n\tjump.eq\t@.BB21_75\n\tsub.s\t1, r0, r2\n\tdiv\tr2, r1, r3, r2\n\tadd\tstack-[17], r0, r2\n\tadd\t@CPI21_17[0], r2, r2\n\tsload\tr2, r2\n\tsub!\tr3, r2, r3\n\tjump.lt\t@.BB21_33\n\tmul\tr2, r1, r1, r2\n\tdiv.s\t@CPI21_19[0], r1, r2, r1\n\tadd\tstack-[13], r0, r1\n\tsload\tr1, r3\n\tsub!\tr2, r3, r1\n\tjump.lt\t@.BB21_33\n\tadd\tr2, r0, stack-[8]\n\tadd\tr3, r0, stack-[7]\n\tsub!\tr2, r3, r1\n\tjump.eq\t@.BB21_75\n\tadd\t1, r0, r1\n\tadd\tr1, r0, stack-[5]\n\tsload\tr1, r1\n\tadd\t@CPI21_9[0], r0, r2\n\tst.2\t0, r2\n\tand\t@CPI21_3[0], r1, r1\n\tadd\tr1, r0, stack-[9]\n\tst.2\t4, r1\n\tadd\t@CPI21_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI21_0[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI21_10[0], r1, r1\n\tadd\t32770, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tadd\tstack-[9], r0, r5\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB21_5\n\tld\tr1, r1\n\tsub!\tr1, r0, r1\n\tjump.eq\t@.BB21_5\n\tld.1\t64, r9\n\tadd\t@CPI21_11[0], r0, r1\n\tst.1\tr9, r1\n\tcontext.this\tr1\n\tand\t@CPI21_3[0], r1, r1\n\tadd\t4, r9, r2\n\tst.1\tr2, r1\n\tcontext.gas_left\tr1\n\tsub.s!\t4, r5, r2\n\tjump.ne\t@.BB21_80\n\tadd\tstack[@returndatasize], r0, r3\n\tjump\t@.BB21_90\n.BB21_80:\n\tadd\t@CPI21_0[0], r0, r2\n\tsub.s!\t@CPI21_0[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tsub.s!\t@CPI21_0[0], r9, r3\n\tadd.lt\tr9, r0, r2\n\tshl.s\t64, r2, r2\n\tshl.s\t192, r1, r1\n\tor\tr1, r2, r1\n\tor\t@CPI21_5[0], r1, r1\n\tadd\tr5, r0, r2\n\tadd\tr9, r0, stack-[6]\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tadd\tstack-[6], r0, r9\n\tadd\tr1, r0, r3\n\tshr.s\t96, r3, r3\n\tand\t@CPI21_0[0], r3, r3\n\tsub.s!\t32, r3, r4\n\tadd\t32, r0, r5\n\tadd.lt\tr3, r0, r5\n\tand\t31, r5, r4\n\tshr.s!\t5, r5, r5\n\tjump.eq\t@.BB21_173\n\tadd\tr0, r0, r6\n.BB21_82:\n\tshl.s\t5, r6, r7\n\tadd\tr9, r7, r8\n\tptr.add\tr1, r7, r7\n\tld\tr7, r7\n\tst.1\tr8, r7\n\tadd\t1, r6, r6\n\tsub!\tr6, r5, r7\n\tjump.lt\t@.BB21_82\n.BB21_173:\n\tsub!\tr4, r0, r6\n\tjump.eq\t@.BB21_84\n\tshl.s\t5, r5, r5\n\tptr.add\tr1, r5, r6\n\tadd\tr9, r5, r5\n\tshl.s\t3, r4, r4\n\tld.1\tr5, r7\n\tshl\tr7, r4, r7\n\tshr\tr7, r4, r7\n\tld\tr6, r6\n\tsub\t256, r4, r4\n\tshr\tr6, r4, r6\n\tshl\tr6, r4, r4\n\tor\tr4, r7, r4\n\tst.1\tr5, r4\n.BB21_84:\n\tadd\tr3, r0, stack[@returndatasize]\n\tptr.add\tr1, r0, stack[@ptr_return_data]\n\tand!\t1, r2, r2\n\tadd\tstack-[9], r0, r5\n\tjump.eq\t@.BB21_85\n.BB21_90:\n\tadd\t31, r3, r1\n\tsub.s\t32, r0, r2\n\tadd\tr2, r0, stack-[6]\n\tand\tr1, r2, r2\n\tadd\tr2, r9, r1\n\tsub!\tr1, r2, r2\n\tadd\t0, r0, r2\n\tadd.lt\t1, r0, r2\n\tsub.s!\t@CPI21_12[0], r1, r3\n\tjump.gt\t@.BB21_27\n\tand!\t1, r2, r2\n\tjump.ne\t@.BB21_27\n\tst.1\t64, r1\n\tadd\t@CPI21_13[0], r0, r1\n\tadd\tstack[@returndatasize], r0, r2\n\tsub.s!\t32, r2, r3\n\tadd\tr0, r0, r3\n\tadd.lt\tr1, r0, r3\n\tand\t@CPI21_13[0], r2, r2\n\tsub!\tr2, r0, r4\n\tadd.le\tr0, r0, r1\n\tsub.s!\t@CPI21_13[0], r2, r2\n\tadd.ne\tr3, r0, r1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB21_5\n\tadd\tstack-[8], r0, r1\n\tadd\tstack-[7], r0, r2\n\tsub\tr1, r2, r3\n\tld.1\tr9, r2\n\tsub!\tr2, r3, r1\n\tjump.ge\t@.BB21_94\n\tadd\tr2, r0, stack-[8]\n\tadd\tstack-[5], r0, r1\n\tsload\tr1, r1\n\tadd\t@CPI21_9[0], r0, r2\n\tst.2\t0, r2\n\tand\t@CPI21_3[0], r1, r1\n\tadd\tr1, r0, stack-[9]\n\tst.2\t4, r1\n\tadd\t@CPI21_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI21_0[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI21_10[0], r1, r1\n\tadd\t32770, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB21_5\n\tld\tr1, r1\n\tsub!\tr1, r0, r1\n\tjump.eq\t@.BB21_5\n\tld.1\t64, r9\n\tadd\t36, r9, r1\n\tadd\tstack-[8], r0, r2\n\tst.1\tr1, r2\n\tadd\t@CPI21_20[0], r0, r1\n\tst.1\tr9, r1\n\tadd\t4, r9, r1\n\tadd\tstack-[10], r0, r2\n\tst.1\tr1, r2\n\tcontext.gas_left\tr1\n\tadd\tstack-[9], r0, r2\n\tsub.s!\t4, r2, r3\n\tjump.ne\t@.BB21_116\n\tadd\tstack[@returndatasize], r0, r3\n\tjump\t@.BB21_126\n.BB21_94:\n\tadd\tr3, r0, stack-[8]\n\tadd\t@CPI21_9[0], r0, r1\n\tst.2\t0, r1\n\tst.2\t4, r5\n\tadd\t@CPI21_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI21_0[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI21_10[0], r1, r1\n\tadd\t32770, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tadd\tstack-[9], r0, r4\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB21_5\n\tld\tr1, r1\n\tsub!\tr1, r0, r1\n\tjump.eq\t@.BB21_5\n\tld.1\t64, r9\n\tadd\t36, r9, r1\n\tadd\tstack-[8], r0, r2\n\tst.1\tr1, r2\n\tadd\t@CPI21_20[0], r0, r1\n\tst.1\tr9, r1\n\tadd\t4, r9, r1\n\tadd\tstack-[10], r0, r2\n\tst.1\tr1, r2\n\tcontext.gas_left\tr1\n\tsub.s!\t4, r4, r2\n\tjump.ne\t@.BB21_98\n\tadd\tstack[@returndatasize], r0, r3\n\tjump\t@.BB21_108\n.BB21_116:\n\tadd\t@CPI21_0[0], r0, r4\n\tsub.s!\t@CPI21_0[0], r1, r3\n\tadd.ge\tr4, r0, r1\n\tsub.s!\t@CPI21_0[0], r9, r3\n\tadd\tr4, r0, r3\n\tadd.lt\tr9, r0, r3\n\tshl.s\t64, r3, r3\n\tshl.s\t192, r1, r1\n\tor\tr1, r3, r1\n\tor\t@CPI21_16[0], r1, r1\n\tadd\tr9, r0, stack-[9]\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tadd\tstack-[9], r0, r9\n\tadd\tr1, r0, r3\n\tshr.s\t96, r3, r3\n\tand\t@CPI21_0[0], r3, r3\n\tsub.s!\t32, r3, r4\n\tadd\t32, r0, r5\n\tadd.lt\tr3, r0, r5\n\tand\t31, r5, r4\n\tshr.s!\t5, r5, r5\n\tjump.eq\t@.BB21_169\n\tadd\tr0, r0, r6\n.BB21_118:\n\tshl.s\t5, r6, r7\n\tadd\tr9, r7, r8\n\tptr.add\tr1, r7, r7\n\tld\tr7, r7\n\tst.1\tr8, r7\n\tadd\t1, r6, r6\n\tsub!\tr6, r5, r7\n\tjump.lt\t@.BB21_118\n.BB21_169:\n\tsub!\tr4, r0, r6\n\tjump.eq\t@.BB21_120\n\tshl.s\t5, r5, r5\n\tptr.add\tr1, r5, r6\n\tadd\tr9, r5, r5\n\tshl.s\t3, r4, r4\n\tld.1\tr5, r7\n\tshl\tr7, r4, r7\n\tshr\tr7, r4, r7\n\tld\tr6, r6\n\tsub\t256, r4, r4\n\tshr\tr6, r4, r6\n\tshl\tr6, r4, r4\n\tor\tr4, r7, r4\n\tst.1\tr5, r4\n.BB21_120:\n\tadd\tr3, r0, stack[@returndatasize]\n\tptr.add\tr1, r0, stack[@ptr_return_data]\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB21_121\n.BB21_126:\n\tadd\t31, r3, r1\n\tadd\tstack-[6], r0, r2\n\tand\tr1, r2, r2\n\tadd\tr2, r9, r1\n\tsub!\tr1, r2, r2\n\tadd\t0, r0, r2\n\tadd.lt\t1, r0, r2\n\tsub.s!\t@CPI21_12[0], r1, r3\n\tjump.gt\t@.BB21_27\n\tand!\t1, r2, r2\n\tjump.ne\t@.BB21_27\n\tst.1\t64, r1\n\tadd\t@CPI21_13[0], r0, r1\n\tadd\tstack[@returndatasize], r0, r2\n\tsub.s!\t32, r2, r3\n\tadd\tr0, r0, r3\n\tadd.lt\tr1, r0, r3\n\tand\t@CPI21_13[0], r2, r2\n\tsub!\tr2, r0, r4\n\tadd.le\tr0, r0, r1\n\tsub.s!\t@CPI21_13[0], r2, r2\n\tadd.ne\tr3, r0, r1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB21_5\n\tld.1\tr9, r1\n\tsub!\tr1, r0, r2\n\tadd\t0, r0, r2\n\tadd.ne\t1, r0, r2\n\tsub!\tr1, r2, r1\n\tjump.eq\t@.BB21_75\n\tjump\t@.BB21_5\n.BB21_98:\n\tadd\t@CPI21_0[0], r0, r2\n\tsub.s!\t@CPI21_0[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tsub.s!\t@CPI21_0[0], r9, r3\n\tadd.lt\tr9, r0, r2\n\tshl.s\t64, r2, r2\n\tshl.s\t192, r1, r1\n\tor\tr1, r2, r1\n\tor\t@CPI21_16[0], r1, r1\n\tadd\tr4, r0, r2\n\tadd\tr9, r0, stack-[9]\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tadd\tstack-[9], r0, r9\n\tadd\tr1, r0, r3\n\tshr.s\t96, r3, r3\n\tand\t@CPI21_0[0], r3, r3\n\tsub.s!\t32, r3, r4\n\tadd\t32, r0, r5\n\tadd.lt\tr3, r0, r5\n\tand\t31, r5, r4\n\tshr.s!\t5, r5, r5\n\tjump.eq\t@.BB21_171\n\tadd\tr0, r0, r6\n.BB21_100:\n\tshl.s\t5, r6, r7\n\tadd\tr9, r7, r8\n\tptr.add\tr1, r7, r7\n\tld\tr7, r7\n\tst.1\tr8, r7\n\tadd\t1, r6, r6\n\tsub!\tr6, r5, r7\n\tjump.lt\t@.BB21_100\n.BB21_171:\n\tsub!\tr4, r0, r6\n\tjump.eq\t@.BB21_102\n\tshl.s\t5, r5, r5\n\tptr.add\tr1, r5, r6\n\tadd\tr9, r5, r5\n\tshl.s\t3, r4, r4\n\tld.1\tr5, r7\n\tshl\tr7, r4, r7\n\tshr\tr7, r4, r7\n\tld\tr6, r6\n\tsub\t256, r4, r4\n\tshr\tr6, r4, r6\n\tshl\tr6, r4, r4\n\tor\tr4, r7, r4\n\tst.1\tr5, r4\n.BB21_102:\n\tadd\tr3, r0, stack[@returndatasize]\n\tptr.add\tr1, r0, stack[@ptr_return_data]\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB21_103\n.BB21_108:\n\tadd\t31, r3, r1\n\tadd\tstack-[6], r0, r2\n\tand\tr1, r2, r2\n\tadd\tr2, r9, r1\n\tsub!\tr1, r2, r2\n\tadd\t0, r0, r2\n\tadd.lt\t1, r0, r2\n\tsub.s!\t@CPI21_12[0], r1, r3\n\tjump.gt\t@.BB21_27\n\tand!\t1, r2, r2\n\tjump.ne\t@.BB21_27\n\tst.1\t64, r1\n\tadd\t@CPI21_13[0], r0, r1\n\tadd\tstack[@returndatasize], r0, r2\n\tsub.s!\t32, r2, r3\n\tadd\tr0, r0, r3\n\tadd.lt\tr1, r0, r3\n\tand\t@CPI21_13[0], r2, r2\n\tsub!\tr2, r0, r4\n\tadd.le\tr0, r0, r1\n\tsub.s!\t@CPI21_13[0], r2, r2\n\tadd.ne\tr3, r0, r1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB21_5\n\tld.1\tr9, r1\n\tsub!\tr1, r0, r2\n\tadd\t0, r0, r2\n\tadd.ne\t1, r0, r2\n\tsub!\tr1, r2, r1\n\tjump.ne\t@.BB21_5\n.BB21_75:\n\tadd\tstack-[16], r0, r4\n\tsub!\tr4, r0, r1\n\tjump.eq\t@.BB21_163\n\tadd\tstack-[12], r0, r1\n\tsload\tr1, r3\n\tld.1\t64, r2\n\tadd\t100, r2, r1\n\tst.1\tr1, r4\n\tcontext.this\tr1\n\tand\t@CPI21_3[0], r1, r1\n\tadd\t68, r2, r4\n\tst.1\tr4, r1\n\tadd\t32, r2, r1\n\tadd\t@CPI21_21[0], r0, r4\n\tst.1\tr1, r4\n\tadd\t36, r2, r4\n\tadd\tstack-[10], r0, r5\n\tst.1\tr4, r5\n\tadd\t100, r0, r4\n\tst.1\tr2, r4\n\tand\t@CPI21_3[0], r3, r10\n\tsub.s!\t@CPI21_22[0], r2, r3\n\tjump.gt\t@.BB21_27\n\tadd\t160, r2, r9\n\tst.1\t64, r9\n\tsub.s!\t@CPI21_23[0], r2, r3\n\tjump.gt\t@.BB21_27\n\tadd\t224, r2, r3\n\tst.1\t64, r3\n\tadd\t32, r0, r3\n\tadd\tr3, r0, stack-[12]\n\tst.1\tr9, r3\n\tadd\t192, r2, r3\n\tadd\t@CPI21_24[0], r0, r4\n\tst.1\tr3, r4\n\tld.1\tr2, r3\n\tcontext.gas_left\tr2\n\tsub.s!\t4, r10, r4\n\tjump.ne\t@.BB21_133\n\tadd\t1, r0, r2\n\tadd\tstack[@returndatasize], r0, r1\n\tjump\t@.BB21_135\n.BB21_133:\n\tadd\t@CPI21_0[0], r0, r4\n\tsub.s!\t@CPI21_0[0], r1, r5\n\tadd.ge\tr4, r0, r1\n\tshl.s\t64, r1, r1\n\tsub.s!\t@CPI21_0[0], r3, r5\n\tadd.ge\tr4, r0, r3\n\tshl.s\t96, r3, r3\n\tor\tr3, r1, r1\n\tsub.s!\t@CPI21_0[0], r2, r3\n\tadd.ge\tr4, r0, r2\n\tshl.s\t192, r2, r2\n\tor\tr1, r2, r1\n\tadd\tr10, r0, r2\n\tadd\tr9, r0, stack-[10]\n\tadd\tr10, r0, stack-[9]\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tadd\tstack-[9], r0, r10\n\tadd\tstack-[10], r0, r9\n\tand\t1, r2, r2\n\tptr.add\tr1, r0, stack[@ptr_return_data]\n\tshr.s\t96, r1, r1\n\tand\t@CPI21_0[0], r1, stack[@returndatasize]\n\tand\t@CPI21_0[0], r1, r1\n.BB21_135:\n\tadd\t96, r0, r11\n\tsub!\tr1, r0, r3\n\tjump.eq\t@.BB21_136\n\tadd\t63, r1, r3\n\tsub.s\t32, r0, r4\n\tand\tr3, r4, r3\n\tld.1\t64, r11\n\tadd\tr11, r3, r3\n\tsub!\tr3, r11, r4\n\tadd\t0, r0, r4\n\tadd.lt\t1, r0, r4\n\tsub.s!\t@CPI21_12[0], r3, r5\n\tjump.gt\t@.BB21_27\n\tand!\t1, r4, r4\n\tjump.ne\t@.BB21_27\n\tst.1\t64, r3\n\tst.1.inc\tr11, r1, r1\n\tptr.add\tstack[@ptr_return_data], r0, r3\n\tadd\tstack[@returndatasize], r0, r5\n\tand\t31, r5, r4\n\tshr.s!\t5, r5, r5\n\tjump.eq\t@.BB21_167\n\tadd\tr0, r0, r6\n.BB21_154:\n\tshl.s\t5, r6, r7\n\tadd\tr1, r7, r8\n\tptr.add\tr3, r7, r7\n\tld\tr7, r7\n\tst.1\tr8, r7\n\tadd\t1, r6, r6\n\tsub!\tr6, r5, r7\n\tjump.lt\t@.BB21_154\n.BB21_167:\n\tsub!\tr4, r0, r6\n\tjump.eq\t@.BB21_136\n\tshl.s\t5, r5, r5\n\tptr.add\tr3, r5, r3\n\tadd\tr1, r5, r1\n\tshl.s\t3, r4, r4\n\tld.1\tr1, r5\n\tshl\tr5, r4, r5\n\tshr\tr5, r4, r5\n\tld\tr3, r3\n\tsub\t256, r4, r4\n\tshr\tr3, r4, r3\n\tshl\tr3, r4, r3\n\tor\tr3, r5, r3\n\tst.1\tr1, r3\n.BB21_136:\n\tld.1.inc\tr11, r1, r5\n\tsub!\tr2, r0, r2\n\tjump.eq\t@.BB21_137\n\tsub!\tr1, r0, r2\n\tjump.ne\t@.BB21_156\n\tadd\tr11, r0, stack-[9]\n\tadd\t@CPI21_9[0], r0, r1\n\tst.2\t0, r1\n\tst.2\t4, r10\n\tadd\t@CPI21_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI21_0[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI21_10[0], r1, r1\n\tadd\t32770, r0, r2\n\tadd\tr5, r0, stack-[10]\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tadd\tstack-[10], r0, r5\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB21_5\n\tld\tr1, r1\n\tsub!\tr1, r0, r1\n\tadd\tstack-[9], r0, r1\n\tjump.eq\t@.BB21_148\n\tld.1\tr1, r1\n\tsub!\tr1, r0, r2\n\tjump.eq\t@.BB21_160\n.BB21_156:\n\tadd\t@CPI21_13[0], r0, r2\n\tsub.s!\t32, r1, r3\n\tadd\tr0, r0, r3\n\tadd.lt\tr2, r0, r3\n\tand\t@CPI21_13[0], r1, r1\n\tsub!\tr1, r0, r4\n\tadd.le\tr0, r0, r2\n\tsub.s!\t@CPI21_13[0], r1, r1\n\tadd\tr3, r0, r1\n\tadd.eq\tr2, r0, r1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB21_5\n\tld.1\tr5, r1\n\tsub!\tr1, r0, r2\n\tadd\t0, r0, r2\n\tadd.ne\t1, r0, r2\n\tsub!\tr1, r2, r2\n\tjump.ne\t@.BB21_5\n\tsub!\tr1, r0, r1\n\tjump.eq\t@.BB21_159\n.BB21_160:\n\tsub.s\t1, r0, r1\n\tadd\tstack-[16], r0, r2\n\txor\tr2, r1, r1\n\tadd\tstack-[15], r0, r2\n\tsload\tr2, r2\n\tsub!\tr2, r1, r3\n\tjump.gt\t@.BB21_33\n\tadd\tstack-[16], r0, r3\n\tadd\tr2, r3, r2\n\tadd\tstack-[15], r0, r3\n\tsstore\tr3, r2\n\tadd\tstack-[17], r0, r2\n\tadd\t@CPI21_29[0], r2, r2\n\tsload\tr2, r3\n\tsub!\tr3, r1, r1\n\tjump.gt\t@.BB21_33\n\tadd\tstack-[16], r0, r1\n\tadd\tr3, r1, r1\n\tsstore\tr2, r1\n.BB21_163:\n\tadd\tstack-[17], r0, r1\n\tadd\t@CPI21_17[0], r1, r1\n\tsload\tr1, r1\n\tadd\tstack-[15], r0, r2\n\tsload\tr2, r2\n\tsub!\tr2, r0, r3\n\tjump.eq\t@.BB21_165\n\tsub.s\t1, r0, r3\n\tdiv\tr3, r2, r3, r4\n\tsub!\tr3, r1, r3\n\tjump.lt\t@.BB21_33\n.BB21_165:\n\tmul\tr1, r2, r1, r2\n\tdiv.s\t@CPI21_19[0], r1, r1, r2\n\tadd\tstack-[13], r0, r2\n\tsstore\tr2, r1\n\tld.1\t64, r1\n\tadd\t@CPI21_0[0], r0, r2\n\tcontext.gas_left\tr3\n\tsub.s!\t@CPI21_0[0], r3, r4\n\tadd.ge\tr2, r0, r3\n\tsub.s!\t@CPI21_0[0], r1, r4\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tshl.s\t192, r3, r2\n\tor\tr2, r1, r1\n\tor\t@CPI21_32[0], r1, r1\n\tadd\t32781, r0, r2\n\tadd\t4, r0, r3\n\tadd\t@CPI21_33[0], r0, r4\n\tadd\tstack-[11], r0, r5\n\tadd\tstack-[14], r0, r6\n\tadd\tstack-[16], r0, r7\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r1\n\tjump.eq\t@.BB21_5\n\tret\n.BB21_5:\n\tadd\tr0, r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB21_33:\n\tadd\t@CPI21_4[0], r0, r1\n\tst.1\t0, r1\n\tadd\t17, r0, r1\n\tst.1\t4, r1\n\tadd\t@CPI21_5[0], r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB21_27:\n\tadd\t@CPI21_4[0], r0, r1\n\tst.1\t0, r1\n\tadd\t65, r0, r1\n\tst.1\t4, r1\n\tadd\t@CPI21_5[0], r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB21_3:\n\tadd\t@CPI21_4[0], r0, r1\n\tst.1\t0, r1\n\tadd\t50, r0, r1\n\tst.1\t4, r1\n\tadd\t@CPI21_5[0], r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB21_1:\n\tld.1\t64, r1\n\tadd\t68, r1, r2\n\tadd\t@CPI21_34[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t36, r1, r2\n\tadd\t15, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI21_27[0], r0, r2\n\tst.1\tr1, r2\n\tadd\t4, r1, r2\n\tadd\t32, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI21_0[0], r0, r2\n\tsub.s!\t@CPI21_0[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI21_31[0], r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB21_137:\n\tsub!\tr1, r0, r2\n\tjump.ne\t@.BB21_144\n\tld.1\t64, r1\n\tadd\t@CPI21_27[0], r0, r2\n\tst.1\tr1, r2\n\tadd\t4, r1, r2\n\tadd\tstack-[12], r0, r3\n\tst.1\tr2, r3\n\tld.1\tr9, r2\n\tadd\t36, r1, r3\n\tst.1\tr3, r2\n\tsub!\tr2, r0, r3\n\tjump.eq\t@.BB21_143\n\tadd\t68, r1, r3\n\tadd\tr0, r0, r4\n.BB21_140:\n\tadd\tr4, r3, r5\n\tadd\t32, r4, r4\n\tadd\tr4, r9, r6\n\tld.1\tr6, r6\n\tst.1\tr5, r6\n\tsub!\tr4, r2, r5\n\tjump.lt\t@.BB21_140\n\tsub!\tr4, r2, r4\n\tjump.le\t@.BB21_143\n\tadd\tr2, r3, r3\n\tst.1\tr3, r0\n.BB21_143:\n\tadd\t31, r2, r2\n\tsub.s\t32, r0, r3\n\tand\tr2, r3, r2\n\tadd\t68, r2, r2\n\tadd\t@CPI21_0[0], r0, r3\n\tsub.s!\t@CPI21_0[0], r2, r4\n\tadd.ge\tr3, r0, r2\n\tsub.s!\t@CPI21_0[0], r1, r4\n\tadd.ge\tr3, r0, r1\n\tshl.s\t64, r1, r1\n\tshl.s\t96, r2, r2\n\tor\tr2, r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB21_159:\n\tld.1\t64, r1\n\tadd\t100, r1, r2\n\tadd\t@CPI21_25[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t68, r1, r2\n\tadd\t@CPI21_26[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t36, r1, r2\n\tadd\t42, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI21_27[0], r0, r2\n\tst.1\tr1, r2\n\tadd\t4, r1, r2\n\tadd\tstack-[12], r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI21_0[0], r0, r2\n\tsub.s!\t@CPI21_0[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI21_28[0], r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB21_41:\n\tadd\t@CPI21_4[0], r0, r1\n\tst.1\t0, r1\n\tadd\t18, r0, r1\n\tst.1\t4, r1\n\tadd\t@CPI21_5[0], r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB21_144:\n\tadd\t@CPI21_0[0], r0, r2\n\tsub.s!\t@CPI21_0[0], r5, r3\n\tadd\tr2, r0, r3\n\tadd.lt\tr5, r0, r3\n\tsub.s!\t@CPI21_0[0], r1, r4\n\tadd.ge\tr2, r0, r1\n\tshl.s\t96, r1, r1\n\tshl.s\t64, r3, r2\n\tor\tr1, r2, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB21_20:\n\tld.1\t64, r2\n\tand\t31, r3, r4\n\tshr.s!\t5, r3, r3\n\tjump.eq\t@.BB21_176\n\tadd\tr0, r0, r5\n.BB21_22:\n\tshl.s\t5, r5, r6\n\tadd\tr2, r6, r7\n\tptr.add\tr1, r6, r6\n\tld\tr6, r6\n\tst.1\tr7, r6\n\tadd\t1, r5, r5\n\tsub!\tr5, r3, r6\n\tjump.lt\t@.BB21_22\n.BB21_176:\n\tsub!\tr4, r0, r5\n\tjump.eq\t@.BB21_24\n\tshl.s\t5, r3, r3\n\tptr.add\tr1, r3, r1\n\tadd\tr2, r3, r3\n\tshl.s\t3, r4, r4\n\tld.1\tr3, r5\n\tshl\tr5, r4, r5\n\tshr\tr5, r4, r5\n\tld\tr1, r1\n\tsub\t256, r4, r4\n\tshr\tr1, r4, r1\n\tshl\tr1, r4, r1\n\tor\tr1, r5, r1\n\tst.1\tr3, r1\n.BB21_24:\n\tadd\t@CPI21_0[0], r0, r1\n\tadd\tstack[@returndatasize], r0, r3\n\tsub.s!\t@CPI21_0[0], r3, r4\n\tadd.ge\tr1, r0, r3\n\tsub.s!\t@CPI21_0[0], r2, r4\n\tadd.lt\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tshl.s\t96, r3, r2\n\tor\tr2, r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB21_148:\n\tld.1\t64, r1\n\tadd\t68, r1, r2\n\tadd\t@CPI21_30[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t36, r1, r2\n\tadd\t29, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI21_27[0], r0, r2\n\tst.1\tr1, r2\n\tadd\t4, r1, r2\n\tadd\tstack-[12], r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI21_0[0], r0, r2\n\tsub.s!\t@CPI21_0[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI21_31[0], r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB21_47:\n\tld.1\t64, r2\n\tand\t31, r4, r3\n\tshr.s!\t5, r4, r4\n\tjump.eq\t@.BB21_175\n\tadd\tr0, r0, r5\n.BB21_49:\n\tshl.s\t5, r5, r6\n\tadd\tr2, r6, r7\n\tptr.add\tr1, r6, r6\n\tld\tr6, r6\n\tst.1\tr7, r6\n\tadd\t1, r5, r5\n\tsub!\tr5, r4, r6\n\tjump.lt\t@.BB21_49\n.BB21_175:\n\tsub!\tr3, r0, r5\n\tjump.eq\t@.BB21_51\n\tshl.s\t5, r4, r4\n\tptr.add\tr1, r4, r1\n\tadd\tr2, r4, r4\n\tshl.s\t3, r3, r3\n\tld.1\tr4, r5\n\tshl\tr5, r3, r5\n\tshr\tr5, r3, r5\n\tld\tr1, r1\n\tsub\t256, r3, r3\n\tshr\tr1, r3, r1\n\tshl\tr1, r3, r1\n\tor\tr1, r5, r1\n\tst.1\tr4, r1\n.BB21_51:\n\tadd\t@CPI21_0[0], r0, r1\n\tadd\tstack[@returndatasize], r0, r3\n\tsub.s!\t@CPI21_0[0], r3, r4\n\tadd.ge\tr1, r0, r3\n\tsub.s!\t@CPI21_0[0], r2, r4\n\tadd.lt\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tshl.s\t96, r3, r2\n\tor\tr2, r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB21_60:\n\tld.1\t64, r2\n\tand\t31, r4, r3\n\tshr.s!\t5, r4, r4\n\tjump.eq\t@.BB21_174\n\tadd\tr0, r0, r5\n.BB21_62:\n\tshl.s\t5, r5, r6\n\tadd\tr2, r6, r7\n\tptr.add\tr1, r6, r6\n\tld\tr6, r6\n\tst.1\tr7, r6\n\tadd\t1, r5, r5\n\tsub!\tr5, r4, r6\n\tjump.lt\t@.BB21_62\n.BB21_174:\n\tsub!\tr3, r0, r5\n\tjump.eq\t@.BB21_64\n\tshl.s\t5, r4, r4\n\tptr.add\tr1, r4, r1\n\tadd\tr2, r4, r4\n\tshl.s\t3, r3, r3\n\tld.1\tr4, r5\n\tshl\tr5, r3, r5\n\tshr\tr5, r3, r5\n\tld\tr1, r1\n\tsub\t256, r3, r3\n\tshr\tr1, r3, r1\n\tshl\tr1, r3, r1\n\tor\tr1, r5, r1\n\tst.1\tr4, r1\n.BB21_64:\n\tadd\t@CPI21_0[0], r0, r1\n\tadd\tstack[@returndatasize], r0, r3\n\tsub.s!\t@CPI21_0[0], r3, r4\n\tadd.ge\tr1, r0, r3\n\tsub.s!\t@CPI21_0[0], r2, r4\n\tadd.lt\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tshl.s\t96, r3, r2\n\tor\tr2, r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB21_85:\n\tld.1\t64, r2\n\tand\t31, r3, r4\n\tshr.s!\t5, r3, r3\n\tjump.eq\t@.BB21_172\n\tadd\tr0, r0, r5\n.BB21_87:\n\tshl.s\t5, r5, r6\n\tadd\tr2, r6, r7\n\tptr.add\tr1, r6, r6\n\tld\tr6, r6\n\tst.1\tr7, r6\n\tadd\t1, r5, r5\n\tsub!\tr5, r3, r6\n\tjump.lt\t@.BB21_87\n.BB21_172:\n\tsub!\tr4, r0, r5\n\tjump.eq\t@.BB21_89\n\tshl.s\t5, r3, r3\n\tptr.add\tr1, r3, r1\n\tadd\tr2, r3, r3\n\tshl.s\t3, r4, r4\n\tld.1\tr3, r5\n\tshl\tr5, r4, r5\n\tshr\tr5, r4, r5\n\tld\tr1, r1\n\tsub\t256, r4, r4\n\tshr\tr1, r4, r1\n\tshl\tr1, r4, r1\n\tor\tr1, r5, r1\n\tst.1\tr3, r1\n.BB21_89:\n\tadd\t@CPI21_0[0], r0, r1\n\tadd\tstack[@returndatasize], r0, r3\n\tsub.s!\t@CPI21_0[0], r3, r4\n\tadd.ge\tr1, r0, r3\n\tsub.s!\t@CPI21_0[0], r2, r4\n\tadd.lt\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tshl.s\t96, r3, r2\n\tor\tr2, r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB21_121:\n\tld.1\t64, r2\n\tand\t31, r3, r4\n\tshr.s!\t5, r3, r3\n\tjump.eq\t@.BB21_168\n\tadd\tr0, r0, r5\n.BB21_123:\n\tshl.s\t5, r5, r6\n\tadd\tr2, r6, r7\n\tptr.add\tr1, r6, r6\n\tld\tr6, r6\n\tst.1\tr7, r6\n\tadd\t1, r5, r5\n\tsub!\tr5, r3, r6\n\tjump.lt\t@.BB21_123\n.BB21_168:\n\tsub!\tr4, r0, r5\n\tjump.eq\t@.BB21_125\n\tshl.s\t5, r3, r3\n\tptr.add\tr1, r3, r1\n\tadd\tr2, r3, r3\n\tshl.s\t3, r4, r4\n\tld.1\tr3, r5\n\tshl\tr5, r4, r5\n\tshr\tr5, r4, r5\n\tld\tr1, r1\n\tsub\t256, r4, r4\n\tshr\tr1, r4, r1\n\tshl\tr1, r4, r1\n\tor\tr1, r5, r1\n\tst.1\tr3, r1\n.BB21_125:\n\tadd\t@CPI21_0[0], r0, r1\n\tadd\tstack[@returndatasize], r0, r3\n\tsub.s!\t@CPI21_0[0], r3, r4\n\tadd.ge\tr1, r0, r3\n\tsub.s!\t@CPI21_0[0], r2, r4\n\tadd.lt\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tshl.s\t96, r3, r2\n\tor\tr2, r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB21_103:\n\tld.1\t64, r2\n\tand\t31, r3, r4\n\tshr.s!\t5, r3, r3\n\tjump.eq\t@.BB21_170\n\tadd\tr0, r0, r5\n.BB21_105:\n\tshl.s\t5, r5, r6\n\tadd\tr2, r6, r7\n\tptr.add\tr1, r6, r6\n\tld\tr6, r6\n\tst.1\tr7, r6\n\tadd\t1, r5, r5\n\tsub!\tr5, r3, r6\n\tjump.lt\t@.BB21_105\n.BB21_170:\n\tsub!\tr4, r0, r5\n\tjump.eq\t@.BB21_107\n\tshl.s\t5, r3, r3\n\tptr.add\tr1, r3, r1\n\tadd\tr2, r3, r3\n\tshl.s\t3, r4, r4\n\tld.1\tr3, r5\n\tshl\tr5, r4, r5\n\tshr\tr5, r4, r5\n\tld\tr1, r1\n\tsub\t256, r4, r4\n\tshr\tr1, r4, r1\n\tshl\tr1, r4, r1\n\tor\tr1, r5, r1\n\tst.1\tr3, r1\n.BB21_107:\n\tadd\t@CPI21_0[0], r0, r1\n\tadd\tstack[@returndatasize], r0, r3\n\tsub.s!\t@CPI21_0[0], r3, r4\n\tadd.ge\tr1, r0, r3\n\tsub.s!\t@CPI21_0[0], r2, r4\n\tadd.lt\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tshl.s\t96, r3, r2\n\tor\tr2, r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.func_end21:\n\nfun_withdraw:\n.func_begin22:\n\tnop\tstack+=[17]\n\tadd\tr2, r0, stack-[17]\n\tsub!\tr1, r0, r2\n\tjump.eq\t@.BB22_1\n\tadd\t5, r0, r3\n\tsload\tr3, r2\n\tsub!\tr2, r1, r2\n\tjump.le\t@.BB22_3\n\tadd\tr3, r0, stack-[11]\n\tst.1\t0, r1\n\tadd\t6, r0, r2\n\tadd\tr2, r0, stack-[9]\n\tst.1\t32, r2\n\tadd\t@CPI22_0[0], r0, r4\n\tadd\tr1, r0, stack-[14]\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI22_0[0], r2, r3\n\tadd\tr4, r0, r1\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI22_1[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tadd\tstack-[14], r0, r3\n\tmul\t5, r3, r4, r3\n\tadd\tr4, r0, stack-[15]\n\tadd\t@CPI22_2[0], r4, r3\n\tadd\tr3, r0, stack-[13]\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB22_5\n\tld\tr1, r1\n\tcontext.caller\tr2\n\tadd\tr2, r0, stack-[10]\n\tand\t@CPI22_3[0], r2, r2\n\tadd\tr2, r0, stack-[12]\n\tst.1\t0, r2\n\tst.1\t32, r1\n\tadd\t@CPI22_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI22_0[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI22_1[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB22_5\n\tld\tr1, r1\n\tadd\tr1, r0, stack-[16]\n\tsload\tr1, r1\n\tadd\tstack-[17], r0, r2\n\tsub!\tr1, r2, r1\n\tadd\tstack-[11], r0, r3\n\tjump.lt\t@.BB22_8\n\tsload\tr3, r1\n\tadd\tstack-[14], r0, r2\n\tsub!\tr1, r2, r1\n\tjump.le\t@.BB22_3\n\tst.1\t0, r3\n\tadd\tstack-[15], r0, r1\n\tadd\t@CPI22_6[0], r1, r1\n\tadd\tr1, r0, stack-[9]\n\tsload\tr1, r1\n\tadd\tr1, r0, stack-[11]\n\tadd\t@CPI22_7[0], r0, r1\n\tst.2\t0, r1\n\tadd\t@CPI22_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI22_0[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI22_8[0], r1, r1\n\tadd\t32779, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB22_5\n\tld\tr1, r1\n\tadd\tstack-[11], r0, r2\n\tsub!\tr1, r2, r1\n\tjump.le\t@.BB22_73\n\tadd\tstack-[13], r0, r1\n\tsload\tr1, r1\n\tadd\t@CPI22_9[0], r0, r2\n\tst.2\t0, r2\n\tand\t@CPI22_3[0], r1, r1\n\tadd\tr1, r0, stack-[11]\n\tst.2\t4, r1\n\tadd\t@CPI22_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI22_0[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI22_10[0], r1, r1\n\tadd\t32770, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB22_5\n\tld\tr1, r1\n\tsub!\tr1, r0, r1\n\tjump.eq\t@.BB22_5\n\tld.1\t64, r9\n\tadd\t@CPI22_11[0], r0, r1\n\tst.1\tr9, r1\n\tcontext.this\tr1\n\tand\t@CPI22_3[0], r1, r2\n\tadd\t4, r9, r1\n\tadd\tr2, r0, stack-[6]\n\tst.1\tr1, r2\n\tcontext.gas_left\tr1\n\tadd\tstack-[11], r0, r2\n\tsub.s!\t4, r2, r3\n\tjump.ne\t@.BB22_17\n\tadd\tstack[@returndatasize], r0, r3\n\tjump\t@.BB22_27\n.BB22_17:\n\tadd\t@CPI22_0[0], r0, r4\n\tsub.s!\t@CPI22_0[0], r1, r3\n\tadd.ge\tr4, r0, r1\n\tsub.s!\t@CPI22_0[0], r9, r3\n\tadd\tr4, r0, r3\n\tadd.lt\tr9, r0, r3\n\tshl.s\t64, r3, r3\n\tshl.s\t192, r1, r1\n\tor\tr1, r3, r1\n\tor\t@CPI22_5[0], r1, r1\n\tadd\tr9, r0, stack-[11]\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tadd\tstack-[11], r0, r9\n\tadd\tr1, r0, r3\n\tshr.s\t96, r3, r3\n\tand\t@CPI22_0[0], r3, r3\n\tsub.s!\t32, r3, r4\n\tadd\t32, r0, r5\n\tadd.lt\tr3, r0, r5\n\tand\t31, r5, r4\n\tshr.s!\t5, r5, r5\n\tjump.eq\t@.BB22_178\n\tadd\tr0, r0, r6\n.BB22_19:\n\tshl.s\t5, r6, r7\n\tadd\tr9, r7, r8\n\tptr.add\tr1, r7, r7\n\tld\tr7, r7\n\tst.1\tr8, r7\n\tadd\t1, r6, r6\n\tsub!\tr6, r5, r7\n\tjump.lt\t@.BB22_19\n.BB22_178:\n\tsub!\tr4, r0, r6\n\tjump.eq\t@.BB22_21\n\tshl.s\t5, r5, r5\n\tptr.add\tr1, r5, r6\n\tadd\tr9, r5, r5\n\tshl.s\t3, r4, r4\n\tld.1\tr5, r7\n\tshl\tr7, r4, r7\n\tshr\tr7, r4, r7\n\tld\tr6, r6\n\tsub\t256, r4, r4\n\tshr\tr6, r4, r6\n\tshl\tr6, r4, r4\n\tor\tr4, r7, r4\n\tst.1\tr5, r4\n.BB22_21:\n\tadd\tr3, r0, stack[@returndatasize]\n\tptr.add\tr1, r0, stack[@ptr_return_data]\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB22_22\n.BB22_27:\n\tadd\t31, r3, r1\n\tsub.s\t32, r0, r2\n\tadd\tr2, r0, stack-[8]\n\tand\tr1, r2, r2\n\tadd\tr2, r9, r1\n\tsub!\tr1, r2, r2\n\tadd\t0, r0, r2\n\tadd.lt\t1, r0, r2\n\tsub.s!\t@CPI22_12[0], r1, r3\n\tjump.gt\t@.BB22_29\n\tand!\t1, r2, r2\n\tjump.ne\t@.BB22_29\n\tst.1\t64, r1\n\tadd\t@CPI22_13[0], r0, r1\n\tadd\tstack[@returndatasize], r0, r2\n\tsub.s!\t32, r2, r3\n\tadd\tr0, r0, r3\n\tadd.lt\tr1, r0, r3\n\tand\t@CPI22_13[0], r2, r2\n\tsub!\tr2, r0, r4\n\tadd.le\tr0, r0, r1\n\tsub.s!\t@CPI22_13[0], r2, r2\n\tadd.ne\tr3, r0, r1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB22_5\n\tld.1\tr9, r1\n\tadd\tr1, r0, stack-[11]\n\tadd\t@CPI22_7[0], r0, r1\n\tst.2\t0, r1\n\tadd\t@CPI22_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI22_0[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI22_8[0], r1, r1\n\tadd\t32779, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tadd\tstack-[11], r0, r3\n\tsub!\tr3, r0, r3\n\tjump.eq\t@.BB22_32\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB22_5\n\tadd\tstack-[9], r0, r2\n\tsload\tr2, r3\n\tld\tr1, r4\n\tsub!\tr4, r3, r1\n\tjump.lt\t@.BB22_35\n\tsub\tr4, r3, r1\n\tadd\t4, r0, r2\n\tsload\tr2, r2\n\tsub!\tr4, r3, r3\n\tjump.eq\t@.BB22_38\n\tsub.s\t1, r0, r3\n\tdiv\tr3, r1, r3, r4\n\tsub!\tr3, r2, r3\n\tjump.lt\t@.BB22_35\n.BB22_38:\n\tmul!\tr2, r1, r1, r2\n\tadd\t3, r0, r2\n\tsload\tr2, r2\n\tjump.eq\t@.BB22_40\n\tsub.s\t1, r0, r3\n\tdiv\tr3, r1, r3, r4\n\tsub!\tr3, r2, r3\n\tjump.lt\t@.BB22_35\n.BB22_40:\n\tmul!\tr2, r1, r3, r1\n\tadd\tstack-[15], r0, r1\n\tadd\t@CPI22_14[0], r1, r1\n\tsload\tr1, r4\n\tjump.eq\t@.BB22_42\n\tsub.s\t1, r0, r1\n\tdiv\tr1, r3, r1, r2\n\tsub!\tr1, r4, r1\n\tjump.lt\t@.BB22_35\n.BB22_42:\n\tadd\tr4, r0, stack-[4]\n\tadd\tr3, r0, stack-[5]\n\tadd\t7, r0, r1\n\tsload\tr1, r1\n\tadd\tr1, r0, stack-[3]\n\tsub!\tr1, r0, r1\n\tjump.eq\t@.BB22_43\n\tadd\t2, r0, r1\n\tsload\tr1, r1\n\tadd\tr1, r0, stack-[7]\n\tadd\t1, r0, r1\n\tadd\tr1, r0, stack-[1]\n\tsload\tr1, r1\n\tadd\t@CPI22_9[0], r0, r2\n\tst.2\t0, r2\n\tand\t@CPI22_3[0], r1, r1\n\tadd\tr1, r0, stack-[2]\n\tst.2\t4, r1\n\tadd\t@CPI22_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI22_0[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI22_10[0], r1, r1\n\tadd\t32770, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tadd\tstack-[7], r0, r3\n\tand\t@CPI22_3[0], r3, r3\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB22_5\n\tld\tr1, r1\n\tsub!\tr1, r0, r1\n\tjump.eq\t@.BB22_5\n\tadd\tstack-[5], r0, r1\n\tadd\tstack-[4], r0, r2\n\tmul\tr2, r1, r1, r2\n\tadd\tstack-[3], r0, r2\n\tdiv\tr1, r2, r2, r1\n\tadd\tr2, r0, stack-[7]\n\tdiv.s\t10, r2, r1, r2\n\tld.1\t64, r5\n\tadd\t36, r5, r2\n\tst.1\tr2, r1\n\tadd\t@CPI22_15[0], r0, r1\n\tst.1\tr5, r1\n\tadd\t4, r5, r1\n\tst.1\tr1, r3\n\tcontext.gas_left\tr1\n\tadd\tstack-[2], r0, r2\n\tsub.s!\t4, r2, r3\n\tjump.ne\t@.BB22_48\n\tadd\tstack[@returndatasize], r0, r4\n\tjump\t@.BB22_54\n.BB22_32:\n\tand!\t1, r2, r2\n\tjump.ne\t@.BB22_12\n\tjump\t@.BB22_5\n.BB22_48:\n\tadd\t@CPI22_0[0], r0, r4\n\tsub.s!\t@CPI22_0[0], r1, r3\n\tadd.ge\tr4, r0, r1\n\tsub.s!\t@CPI22_0[0], r5, r3\n\tadd\tr4, r0, r3\n\tadd.lt\tr5, r0, r3\n\tshl.s\t64, r3, r3\n\tshl.s\t192, r1, r1\n\tor\tr1, r3, r1\n\tor\t@CPI22_16[0], r1, r1\n\tadd\tr5, r0, stack-[5]\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tadd\tstack-[5], r0, r5\n\tadd\tr1, r0, r3\n\tshr.s\t96, r3, r3\n\tand\t@CPI22_0[0], r3, stack[@returndatasize]\n\tand\t@CPI22_0[0], r3, r4\n\tptr.add\tr1, r0, stack[@ptr_return_data]\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB22_49\n.BB22_54:\n\tadd\t31, r4, r1\n\tadd\tstack-[8], r0, r2\n\tand\tr1, r2, r2\n\tadd\tr2, r5, r1\n\tsub!\tr1, r2, r2\n\tadd\t0, r0, r2\n\tadd.lt\t1, r0, r2\n\tsub.s!\t@CPI22_12[0], r1, r3\n\tjump.gt\t@.BB22_29\n\tand!\t1, r2, r2\n\tjump.ne\t@.BB22_29\n\tst.1\t64, r1\n\tadd\t@CPI22_13[0], r0, r1\n\tadd\tstack[@returndatasize], r0, r2\n\tsub!\tr2, r0, r3\n\tadd\tr0, r0, r3\n\tadd.lt\tr1, r0, r3\n\tand\t@CPI22_13[0], r2, r2\n\tsub!\tr2, r0, r4\n\tadd.le\tr0, r0, r1\n\tsub.s!\t@CPI22_13[0], r2, r2\n\tadd.ne\tr3, r0, r1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB22_5\n\tadd\tstack-[1], r0, r1\n\tsload\tr1, r1\n\tadd\t@CPI22_9[0], r0, r2\n\tst.2\t0, r2\n\tand\t@CPI22_3[0], r1, r1\n\tadd\tr1, r0, stack-[5]\n\tst.2\t4, r1\n\tadd\t@CPI22_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI22_0[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI22_10[0], r1, r1\n\tadd\t32770, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB22_5\n\tld\tr1, r1\n\tsub!\tr1, r0, r1\n\tjump.eq\t@.BB22_5\n\tld.1\t64, r5\n\tadd\t36, r5, r1\n\tadd\tstack-[7], r0, r2\n\tst.1\tr1, r2\n\tadd\t@CPI22_15[0], r0, r1\n\tst.1\tr5, r1\n\tadd\t4, r5, r1\n\tadd\tstack-[6], r0, r2\n\tst.1\tr1, r2\n\tcontext.gas_left\tr1\n\tadd\tstack-[5], r0, r2\n\tsub.s!\t4, r2, r3\n\tjump.ne\t@.BB22_61\n\tadd\tstack[@returndatasize], r0, r4\n\tjump\t@.BB22_67\n.BB22_61:\n\tadd\t@CPI22_0[0], r0, r4\n\tsub.s!\t@CPI22_0[0], r1, r3\n\tadd.ge\tr4, r0, r1\n\tsub.s!\t@CPI22_0[0], r5, r3\n\tadd\tr4, r0, r3\n\tadd.lt\tr5, r0, r3\n\tshl.s\t64, r3, r3\n\tshl.s\t192, r1, r1\n\tor\tr1, r3, r1\n\tor\t@CPI22_16[0], r1, r1\n\tadd\tr5, r0, stack-[6]\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tadd\tstack-[6], r0, r5\n\tadd\tr1, r0, r3\n\tshr.s\t96, r3, r3\n\tand\t@CPI22_0[0], r3, stack[@returndatasize]\n\tand\t@CPI22_0[0], r3, r4\n\tptr.add\tr1, r0, stack[@ptr_return_data]\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB22_62\n.BB22_67:\n\tadd\t31, r4, r1\n\tadd\tstack-[8], r0, r2\n\tand\tr1, r2, r2\n\tadd\tr2, r5, r1\n\tsub!\tr1, r2, r2\n\tadd\t0, r0, r2\n\tadd.lt\t1, r0, r2\n\tsub.s!\t@CPI22_12[0], r1, r3\n\tjump.gt\t@.BB22_29\n\tand!\t1, r2, r2\n\tjump.ne\t@.BB22_29\n\tst.1\t64, r1\n\tadd\t@CPI22_13[0], r0, r1\n\tadd\tstack[@returndatasize], r0, r2\n\tsub!\tr2, r0, r3\n\tadd\tr0, r0, r3\n\tadd.lt\tr1, r0, r3\n\tand\t@CPI22_13[0], r2, r2\n\tsub!\tr2, r0, r4\n\tadd.le\tr0, r0, r1\n\tsub.s!\t@CPI22_13[0], r2, r2\n\tadd.ne\tr3, r0, r1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB22_5\n\tadd\tstack-[15], r0, r1\n\tadd\t@CPI22_17[0], r1, r1\n\tsload\tr1, r2\n\tadd\tstack-[7], r0, r4\n\tsub.s!\t@CPI22_18[0], r4, r3\n\tjump.gt\t@.BB22_35\n\tmul\t@CPI22_19[0], r4, r3, r4\n\tadd\tstack-[11], r0, r4\n\tdiv\tr3, r4, r3, r4\n\tsub.s\t1, r0, r4\n\txor\tr3, r4, r4\n\tsub!\tr2, r4, r4\n\tjump.gt\t@.BB22_35\n\tadd\tr3, r2, r2\n\tsstore\tr1, r2\n\tadd\t@CPI22_7[0], r0, r1\n\tst.2\t0, r1\n\tadd\t@CPI22_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI22_0[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI22_8[0], r1, r1\n\tadd\t32779, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB22_5\n.BB22_12:\n\tld\tr1, r1\n\tadd\tstack-[9], r0, r2\n\tsstore\tr2, r1\n.BB22_73:\n\tadd\tstack-[15], r0, r1\n\tadd\t@CPI22_17[0], r1, r1\n\tadd\tr1, r0, stack-[11]\n\tsload\tr1, r1\n\tadd\tstack-[16], r0, r2\n\tsload\tr2, r2\n\tsub!\tr2, r0, r3\n\tjump.eq\t@.BB22_75\n\tsub.s\t1, r0, r3\n\tdiv\tr3, r2, r3, r4\n\tsub!\tr3, r1, r3\n\tjump.lt\t@.BB22_35\n.BB22_75:\n\tmul\tr1, r2, r1, r2\n\tdiv.s\t@CPI22_19[0], r1, r2, r1\n\tadd\tstack-[16], r0, r1\n\tadd\t1, r1, r1\n\tadd\tr1, r0, stack-[9]\n\tsload\tr1, r3\n\tsub!\tr2, r3, r1\n\tjump.lt\t@.BB22_35\n\tadd\tr2, r0, stack-[7]\n\tadd\tr3, r0, stack-[6]\n\tsub!\tr2, r3, r1\n\tjump.eq\t@.BB22_131\n\tadd\t1, r0, r1\n\tadd\tr1, r0, stack-[4]\n\tsload\tr1, r1\n\tadd\t@CPI22_9[0], r0, r2\n\tst.2\t0, r2\n\tand\t@CPI22_3[0], r1, r1\n\tadd\tr1, r0, stack-[8]\n\tst.2\t4, r1\n\tadd\t@CPI22_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI22_0[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI22_10[0], r1, r1\n\tadd\t32770, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tadd\tstack-[8], r0, r5\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB22_5\n\tld\tr1, r1\n\tsub!\tr1, r0, r1\n\tjump.eq\t@.BB22_5\n\tld.1\t64, r9\n\tadd\t@CPI22_11[0], r0, r1\n\tst.1\tr9, r1\n\tcontext.this\tr1\n\tand\t@CPI22_3[0], r1, r1\n\tadd\t4, r9, r2\n\tst.1\tr2, r1\n\tcontext.gas_left\tr1\n\tsub.s!\t4, r5, r2\n\tjump.ne\t@.BB22_81\n\tadd\tstack[@returndatasize], r0, r3\n\tjump\t@.BB22_91\n.BB22_81:\n\tadd\t@CPI22_0[0], r0, r2\n\tsub.s!\t@CPI22_0[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tsub.s!\t@CPI22_0[0], r9, r3\n\tadd.lt\tr9, r0, r2\n\tshl.s\t64, r2, r2\n\tshl.s\t192, r1, r1\n\tor\tr1, r2, r1\n\tor\t@CPI22_5[0], r1, r1\n\tadd\tr5, r0, r2\n\tadd\tr9, r0, stack-[5]\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tadd\tstack-[5], r0, r9\n\tadd\tr1, r0, r3\n\tshr.s\t96, r3, r3\n\tand\t@CPI22_0[0], r3, r3\n\tsub.s!\t32, r3, r4\n\tadd\t32, r0, r5\n\tadd.lt\tr3, r0, r5\n\tand\t31, r5, r4\n\tshr.s!\t5, r5, r5\n\tjump.eq\t@.BB22_174\n\tadd\tr0, r0, r6\n.BB22_83:\n\tshl.s\t5, r6, r7\n\tadd\tr9, r7, r8\n\tptr.add\tr1, r7, r7\n\tld\tr7, r7\n\tst.1\tr8, r7\n\tadd\t1, r6, r6\n\tsub!\tr6, r5, r7\n\tjump.lt\t@.BB22_83\n.BB22_174:\n\tsub!\tr4, r0, r6\n\tjump.eq\t@.BB22_85\n\tshl.s\t5, r5, r5\n\tptr.add\tr1, r5, r6\n\tadd\tr9, r5, r5\n\tshl.s\t3, r4, r4\n\tld.1\tr5, r7\n\tshl\tr7, r4, r7\n\tshr\tr7, r4, r7\n\tld\tr6, r6\n\tsub\t256, r4, r4\n\tshr\tr6, r4, r6\n\tshl\tr6, r4, r4\n\tor\tr4, r7, r4\n\tst.1\tr5, r4\n.BB22_85:\n\tadd\tr3, r0, stack[@returndatasize]\n\tptr.add\tr1, r0, stack[@ptr_return_data]\n\tand!\t1, r2, r2\n\tadd\tstack-[8], r0, r5\n\tjump.eq\t@.BB22_86\n.BB22_91:\n\tadd\t31, r3, r1\n\tsub.s\t32, r0, r2\n\tadd\tr2, r0, stack-[5]\n\tand\tr1, r2, r2\n\tadd\tr2, r9, r1\n\tsub!\tr1, r2, r2\n\tadd\t0, r0, r2\n\tadd.lt\t1, r0, r2\n\tsub.s!\t@CPI22_12[0], r1, r3\n\tjump.gt\t@.BB22_29\n\tand!\t1, r2, r2\n\tjump.ne\t@.BB22_29\n\tst.1\t64, r1\n\tadd\t@CPI22_13[0], r0, r1\n\tadd\tstack[@returndatasize], r0, r2\n\tsub.s!\t32, r2, r3\n\tadd\tr0, r0, r3\n\tadd.lt\tr1, r0, r3\n\tand\t@CPI22_13[0], r2, r2\n\tsub!\tr2, r0, r4\n\tadd.le\tr0, r0, r1\n\tsub.s!\t@CPI22_13[0], r2, r2\n\tadd.ne\tr3, r0, r1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB22_5\n\tadd\tstack-[7], r0, r1\n\tadd\tstack-[6], r0, r2\n\tsub\tr1, r2, r3\n\tld.1\tr9, r2\n\tsub!\tr2, r3, r1\n\tjump.ge\t@.BB22_95\n\tadd\tr2, r0, stack-[7]\n\tadd\tstack-[4], r0, r1\n\tsload\tr1, r1\n\tadd\t@CPI22_9[0], r0, r2\n\tst.2\t0, r2\n\tand\t@CPI22_3[0], r1, r1\n\tadd\tr1, r0, stack-[8]\n\tst.2\t4, r1\n\tadd\t@CPI22_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI22_0[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI22_10[0], r1, r1\n\tadd\t32770, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB22_5\n\tld\tr1, r1\n\tsub!\tr1, r0, r1\n\tjump.eq\t@.BB22_5\n\tld.1\t64, r9\n\tadd\t36, r9, r1\n\tadd\tstack-[7], r0, r2\n\tst.1\tr1, r2\n\tadd\t@CPI22_20[0], r0, r1\n\tst.1\tr9, r1\n\tadd\t4, r9, r1\n\tadd\tstack-[12], r0, r2\n\tst.1\tr1, r2\n\tcontext.gas_left\tr1\n\tadd\tstack-[8], r0, r2\n\tsub.s!\t4, r2, r3\n\tjump.ne\t@.BB22_117\n\tadd\tstack[@returndatasize], r0, r3\n\tjump\t@.BB22_127\n.BB22_95:\n\tadd\tr3, r0, stack-[7]\n\tadd\t@CPI22_9[0], r0, r1\n\tst.2\t0, r1\n\tst.2\t4, r5\n\tadd\t@CPI22_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI22_0[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI22_10[0], r1, r1\n\tadd\t32770, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tadd\tstack-[8], r0, r4\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB22_5\n\tld\tr1, r1\n\tsub!\tr1, r0, r1\n\tjump.eq\t@.BB22_5\n\tld.1\t64, r9\n\tadd\t36, r9, r1\n\tadd\tstack-[7], r0, r2\n\tst.1\tr1, r2\n\tadd\t@CPI22_20[0], r0, r1\n\tst.1\tr9, r1\n\tadd\t4, r9, r1\n\tadd\tstack-[12], r0, r2\n\tst.1\tr1, r2\n\tcontext.gas_left\tr1\n\tsub.s!\t4, r4, r2\n\tjump.ne\t@.BB22_99\n\tadd\tstack[@returndatasize], r0, r3\n\tjump\t@.BB22_109\n.BB22_117:\n\tadd\t@CPI22_0[0], r0, r4\n\tsub.s!\t@CPI22_0[0], r1, r3\n\tadd.ge\tr4, r0, r1\n\tsub.s!\t@CPI22_0[0], r9, r3\n\tadd\tr4, r0, r3\n\tadd.lt\tr9, r0, r3\n\tshl.s\t64, r3, r3\n\tshl.s\t192, r1, r1\n\tor\tr1, r3, r1\n\tor\t@CPI22_16[0], r1, r1\n\tadd\tr9, r0, stack-[8]\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tadd\tstack-[8], r0, r9\n\tadd\tr1, r0, r3\n\tshr.s\t96, r3, r3\n\tand\t@CPI22_0[0], r3, r3\n\tsub.s!\t32, r3, r4\n\tadd\t32, r0, r5\n\tadd.lt\tr3, r0, r5\n\tand\t31, r5, r4\n\tshr.s!\t5, r5, r5\n\tjump.eq\t@.BB22_170\n\tadd\tr0, r0, r6\n.BB22_119:\n\tshl.s\t5, r6, r7\n\tadd\tr9, r7, r8\n\tptr.add\tr1, r7, r7\n\tld\tr7, r7\n\tst.1\tr8, r7\n\tadd\t1, r6, r6\n\tsub!\tr6, r5, r7\n\tjump.lt\t@.BB22_119\n.BB22_170:\n\tsub!\tr4, r0, r6\n\tjump.eq\t@.BB22_121\n\tshl.s\t5, r5, r5\n\tptr.add\tr1, r5, r6\n\tadd\tr9, r5, r5\n\tshl.s\t3, r4, r4\n\tld.1\tr5, r7\n\tshl\tr7, r4, r7\n\tshr\tr7, r4, r7\n\tld\tr6, r6\n\tsub\t256, r4, r4\n\tshr\tr6, r4, r6\n\tshl\tr6, r4, r4\n\tor\tr4, r7, r4\n\tst.1\tr5, r4\n.BB22_121:\n\tadd\tr3, r0, stack[@returndatasize]\n\tptr.add\tr1, r0, stack[@ptr_return_data]\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB22_122\n.BB22_127:\n\tadd\t31, r3, r1\n\tadd\tstack-[5], r0, r2\n\tand\tr1, r2, r2\n\tadd\tr2, r9, r1\n\tsub!\tr1, r2, r2\n\tadd\t0, r0, r2\n\tadd.lt\t1, r0, r2\n\tsub.s!\t@CPI22_12[0], r1, r3\n\tjump.gt\t@.BB22_29\n\tand!\t1, r2, r2\n\tjump.ne\t@.BB22_29\n\tst.1\t64, r1\n\tadd\t@CPI22_13[0], r0, r1\n\tadd\tstack[@returndatasize], r0, r2\n\tsub.s!\t32, r2, r3\n\tadd\tr0, r0, r3\n\tadd.lt\tr1, r0, r3\n\tand\t@CPI22_13[0], r2, r2\n\tsub!\tr2, r0, r4\n\tadd.le\tr0, r0, r1\n\tsub.s!\t@CPI22_13[0], r2, r2\n\tadd.ne\tr3, r0, r1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB22_5\n\tld.1\tr9, r1\n\tsub!\tr1, r0, r2\n\tadd\t0, r0, r2\n\tadd.ne\t1, r0, r2\n\tsub!\tr1, r2, r1\n\tjump.eq\t@.BB22_131\n\tjump\t@.BB22_5\n.BB22_99:\n\tadd\t@CPI22_0[0], r0, r2\n\tsub.s!\t@CPI22_0[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tsub.s!\t@CPI22_0[0], r9, r3\n\tadd.lt\tr9, r0, r2\n\tshl.s\t64, r2, r2\n\tshl.s\t192, r1, r1\n\tor\tr1, r2, r1\n\tor\t@CPI22_16[0], r1, r1\n\tadd\tr4, r0, r2\n\tadd\tr9, r0, stack-[8]\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tadd\tstack-[8], r0, r9\n\tadd\tr1, r0, r3\n\tshr.s\t96, r3, r3\n\tand\t@CPI22_0[0], r3, r3\n\tsub.s!\t32, r3, r4\n\tadd\t32, r0, r5\n\tadd.lt\tr3, r0, r5\n\tand\t31, r5, r4\n\tshr.s!\t5, r5, r5\n\tjump.eq\t@.BB22_172\n\tadd\tr0, r0, r6\n.BB22_101:\n\tshl.s\t5, r6, r7\n\tadd\tr9, r7, r8\n\tptr.add\tr1, r7, r7\n\tld\tr7, r7\n\tst.1\tr8, r7\n\tadd\t1, r6, r6\n\tsub!\tr6, r5, r7\n\tjump.lt\t@.BB22_101\n.BB22_172:\n\tsub!\tr4, r0, r6\n\tjump.eq\t@.BB22_103\n\tshl.s\t5, r5, r5\n\tptr.add\tr1, r5, r6\n\tadd\tr9, r5, r5\n\tshl.s\t3, r4, r4\n\tld.1\tr5, r7\n\tshl\tr7, r4, r7\n\tshr\tr7, r4, r7\n\tld\tr6, r6\n\tsub\t256, r4, r4\n\tshr\tr6, r4, r6\n\tshl\tr6, r4, r4\n\tor\tr4, r7, r4\n\tst.1\tr5, r4\n.BB22_103:\n\tadd\tr3, r0, stack[@returndatasize]\n\tptr.add\tr1, r0, stack[@ptr_return_data]\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB22_104\n.BB22_109:\n\tadd\t31, r3, r1\n\tadd\tstack-[5], r0, r2\n\tand\tr1, r2, r2\n\tadd\tr2, r9, r1\n\tsub!\tr1, r2, r2\n\tadd\t0, r0, r2\n\tadd.lt\t1, r0, r2\n\tsub.s!\t@CPI22_12[0], r1, r3\n\tjump.gt\t@.BB22_29\n\tand!\t1, r2, r2\n\tjump.ne\t@.BB22_29\n\tst.1\t64, r1\n\tadd\t@CPI22_13[0], r0, r1\n\tadd\tstack[@returndatasize], r0, r2\n\tsub.s!\t32, r2, r3\n\tadd\tr0, r0, r3\n\tadd.lt\tr1, r0, r3\n\tand\t@CPI22_13[0], r2, r2\n\tsub!\tr2, r0, r4\n\tadd.le\tr0, r0, r1\n\tsub.s!\t@CPI22_13[0], r2, r2\n\tadd.ne\tr3, r0, r1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB22_5\n\tld.1\tr9, r1\n\tsub!\tr1, r0, r2\n\tadd\t0, r0, r2\n\tadd.ne\t1, r0, r2\n\tsub!\tr1, r2, r1\n\tjump.ne\t@.BB22_5\n.BB22_131:\n\tadd\tstack-[17], r0, r1\n\tsub!\tr1, r0, r1\n\tjump.eq\t@.BB22_164\n\tadd\tstack-[16], r0, r1\n\tsload\tr1, r1\n\tadd\tstack-[17], r0, r2\n\tsub!\tr1, r2, r2\n\tjump.lt\t@.BB22_35\n\tadd\tstack-[17], r0, r3\n\tsub\tr1, r3, r1\n\tadd\tstack-[16], r0, r2\n\tsstore\tr2, r1\n\tadd\tstack-[15], r0, r1\n\tadd\t@CPI22_21[0], r1, r1\n\tsload\tr1, r2\n\tsub!\tr2, r3, r3\n\tjump.lt\t@.BB22_35\n\tadd\tstack-[17], r0, r4\n\tsub\tr2, r4, r2\n\tsstore\tr1, r2\n\tadd\tstack-[13], r0, r1\n\tsload\tr1, r3\n\tld.1\t64, r2\n\tadd\t68, r2, r1\n\tst.1\tr1, r4\n\tadd\t32, r2, r1\n\tadd\t@CPI22_20[0], r0, r4\n\tst.1\tr1, r4\n\tadd\t36, r2, r4\n\tadd\tstack-[12], r0, r5\n\tst.1\tr4, r5\n\tadd\t68, r0, r4\n\tst.1\tr2, r4\n\tand\t@CPI22_3[0], r3, r10\n\tsub.s!\t@CPI22_22[0], r2, r3\n\tjump.gt\t@.BB22_29\n\tadd\t128, r2, r9\n\tst.1\t64, r9\n\tsub.s!\t@CPI22_23[0], r9, r3\n\tjump.gt\t@.BB22_29\n\tadd\t192, r2, r3\n\tst.1\t64, r3\n\tadd\t32, r0, r3\n\tadd\tr3, r0, stack-[15]\n\tst.1\tr9, r3\n\tadd\t160, r2, r3\n\tadd\t@CPI22_24[0], r0, r4\n\tst.1\tr3, r4\n\tld.1\tr2, r3\n\tcontext.gas_left\tr2\n\tsub.s!\t4, r10, r4\n\tjump.ne\t@.BB22_137\n\tadd\t1, r0, r2\n\tadd\tstack[@returndatasize], r0, r1\n\tjump\t@.BB22_139\n.BB22_137:\n\tadd\t@CPI22_0[0], r0, r4\n\tsub.s!\t@CPI22_0[0], r1, r5\n\tadd.ge\tr4, r0, r1\n\tshl.s\t64, r1, r1\n\tsub.s!\t@CPI22_0[0], r3, r5\n\tadd.ge\tr4, r0, r3\n\tshl.s\t96, r3, r3\n\tor\tr3, r1, r1\n\tsub.s!\t@CPI22_0[0], r2, r3\n\tadd.ge\tr4, r0, r2\n\tshl.s\t192, r2, r2\n\tor\tr1, r2, r1\n\tadd\tr10, r0, r2\n\tadd\tr9, r0, stack-[13]\n\tadd\tr10, r0, stack-[12]\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tadd\tstack-[12], r0, r10\n\tadd\tstack-[13], r0, r9\n\tand\t1, r2, r2\n\tptr.add\tr1, r0, stack[@ptr_return_data]\n\tshr.s\t96, r1, r1\n\tand\t@CPI22_0[0], r1, stack[@returndatasize]\n\tand\t@CPI22_0[0], r1, r1\n.BB22_139:\n\tadd\t96, r0, r11\n\tsub!\tr1, r0, r3\n\tjump.eq\t@.BB22_140\n\tadd\t63, r1, r3\n\tsub.s\t32, r0, r4\n\tand\tr3, r4, r3\n\tld.1\t64, r11\n\tadd\tr11, r3, r3\n\tsub!\tr3, r11, r4\n\tadd\t0, r0, r4\n\tadd.lt\t1, r0, r4\n\tsub.s!\t@CPI22_12[0], r3, r5\n\tjump.gt\t@.BB22_29\n\tand!\t1, r4, r4\n\tjump.ne\t@.BB22_29\n\tst.1\t64, r3\n\tst.1.inc\tr11, r1, r1\n\tptr.add\tstack[@ptr_return_data], r0, r3\n\tadd\tstack[@returndatasize], r0, r5\n\tand\t31, r5, r4\n\tshr.s!\t5, r5, r5\n\tjump.eq\t@.BB22_168\n\tadd\tr0, r0, r6\n.BB22_158:\n\tshl.s\t5, r6, r7\n\tadd\tr1, r7, r8\n\tptr.add\tr3, r7, r7\n\tld\tr7, r7\n\tst.1\tr8, r7\n\tadd\t1, r6, r6\n\tsub!\tr6, r5, r7\n\tjump.lt\t@.BB22_158\n.BB22_168:\n\tsub!\tr4, r0, r6\n\tjump.eq\t@.BB22_140\n\tshl.s\t5, r5, r5\n\tptr.add\tr3, r5, r3\n\tadd\tr1, r5, r1\n\tshl.s\t3, r4, r4\n\tld.1\tr1, r5\n\tshl\tr5, r4, r5\n\tshr\tr5, r4, r5\n\tld\tr3, r3\n\tsub\t256, r4, r4\n\tshr\tr3, r4, r3\n\tshl\tr3, r4, r3\n\tor\tr3, r5, r3\n\tst.1\tr1, r3\n.BB22_140:\n\tld.1.inc\tr11, r1, r5\n\tsub!\tr2, r0, r2\n\tjump.eq\t@.BB22_141\n\tsub!\tr1, r0, r2\n\tjump.ne\t@.BB22_160\n\tadd\tr11, r0, stack-[12]\n\tadd\t@CPI22_9[0], r0, r1\n\tst.2\t0, r1\n\tst.2\t4, r10\n\tadd\t@CPI22_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI22_0[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI22_10[0], r1, r1\n\tadd\t32770, r0, r2\n\tadd\tr5, r0, stack-[13]\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tadd\tstack-[13], r0, r5\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB22_5\n\tld\tr1, r1\n\tsub!\tr1, r0, r1\n\tadd\tstack-[12], r0, r1\n\tjump.eq\t@.BB22_152\n\tld.1\tr1, r1\n\tsub!\tr1, r0, r2\n\tjump.eq\t@.BB22_164\n.BB22_160:\n\tadd\t@CPI22_13[0], r0, r2\n\tsub.s!\t32, r1, r3\n\tadd\tr0, r0, r3\n\tadd.lt\tr2, r0, r3\n\tand\t@CPI22_13[0], r1, r1\n\tsub!\tr1, r0, r4\n\tadd.le\tr0, r0, r2\n\tsub.s!\t@CPI22_13[0], r1, r1\n\tadd\tr3, r0, r1\n\tadd.eq\tr2, r0, r1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB22_5\n\tld.1\tr5, r1\n\tsub!\tr1, r0, r2\n\tadd\t0, r0, r2\n\tadd.ne\t1, r0, r2\n\tsub!\tr1, r2, r2\n\tjump.ne\t@.BB22_5\n\tsub!\tr1, r0, r1\n\tjump.eq\t@.BB22_163\n.BB22_164:\n\tadd\tstack-[11], r0, r1\n\tsload\tr1, r1\n\tadd\tstack-[16], r0, r2\n\tsload\tr2, r2\n\tsub!\tr2, r0, r3\n\tjump.eq\t@.BB22_166\n\tsub.s\t1, r0, r3\n\tdiv\tr3, r2, r3, r4\n\tsub!\tr3, r1, r3\n\tjump.lt\t@.BB22_35\n.BB22_166:\n\tmul\tr1, r2, r1, r2\n\tdiv.s\t@CPI22_19[0], r1, r1, r2\n\tadd\tstack-[9], r0, r2\n\tsstore\tr2, r1\n\tld.1\t64, r1\n\tadd\tstack-[17], r0, r2\n\tst.1\tr1, r2\n\tadd\t@CPI22_0[0], r0, r2\n\tcontext.gas_left\tr3\n\tsub.s!\t@CPI22_0[0], r3, r4\n\tadd.ge\tr2, r0, r3\n\tsub.s!\t@CPI22_0[0], r1, r4\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tshl.s\t192, r3, r2\n\tor\tr2, r1, r1\n\tor\t@CPI22_31[0], r1, r1\n\tadd\t32781, r0, r2\n\tadd\t3, r0, r3\n\tadd\t@CPI22_32[0], r0, r4\n\tadd\tstack-[10], r0, r5\n\tadd\tstack-[14], r0, r6\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r1\n\tjump.eq\t@.BB22_5\n\tret\n.BB22_5:\n\tadd\tr0, r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB22_35:\n\tadd\t@CPI22_4[0], r0, r1\n\tst.1\t0, r1\n\tadd\t17, r0, r1\n\tst.1\t4, r1\n\tadd\t@CPI22_5[0], r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB22_29:\n\tadd\t@CPI22_4[0], r0, r1\n\tst.1\t0, r1\n\tadd\t65, r0, r1\n\tst.1\t4, r1\n\tadd\t@CPI22_5[0], r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB22_3:\n\tadd\t@CPI22_4[0], r0, r1\n\tst.1\t0, r1\n\tadd\t50, r0, r1\n\tst.1\t4, r1\n\tadd\t@CPI22_5[0], r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB22_1:\n\tld.1\t64, r1\n\tadd\t68, r1, r2\n\tadd\t@CPI22_34[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t36, r1, r2\n\tadd\t15, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI22_27[0], r0, r2\n\tst.1\tr1, r2\n\tadd\t4, r1, r2\n\tadd\t32, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI22_0[0], r0, r2\n\tsub.s!\t@CPI22_0[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI22_30[0], r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB22_8:\n\tld.1\t64, r1\n\tadd\t68, r1, r2\n\tadd\t@CPI22_33[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t36, r1, r2\n\tadd\tstack-[9], r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI22_27[0], r0, r2\n\tst.1\tr1, r2\n\tadd\t4, r1, r2\n\tadd\t32, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI22_0[0], r0, r2\n\tsub.s!\t@CPI22_0[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI22_30[0], r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB22_141:\n\tsub!\tr1, r0, r2\n\tjump.ne\t@.BB22_148\n\tld.1\t64, r1\n\tadd\t@CPI22_27[0], r0, r2\n\tst.1\tr1, r2\n\tadd\t4, r1, r2\n\tadd\tstack-[15], r0, r3\n\tst.1\tr2, r3\n\tld.1\tr9, r2\n\tadd\t36, r1, r3\n\tst.1\tr3, r2\n\tsub!\tr2, r0, r3\n\tjump.eq\t@.BB22_147\n\tadd\t68, r1, r3\n\tadd\tr0, r0, r4\n.BB22_144:\n\tadd\tr4, r3, r5\n\tadd\t32, r4, r4\n\tadd\tr4, r9, r6\n\tld.1\tr6, r6\n\tst.1\tr5, r6\n\tsub!\tr4, r2, r5\n\tjump.lt\t@.BB22_144\n\tsub!\tr4, r2, r4\n\tjump.le\t@.BB22_147\n\tadd\tr2, r3, r3\n\tst.1\tr3, r0\n.BB22_147:\n\tadd\t31, r2, r2\n\tsub.s\t32, r0, r3\n\tand\tr2, r3, r2\n\tadd\t68, r2, r2\n\tadd\t@CPI22_0[0], r0, r3\n\tsub.s!\t@CPI22_0[0], r2, r4\n\tadd.ge\tr3, r0, r2\n\tsub.s!\t@CPI22_0[0], r1, r4\n\tadd.ge\tr3, r0, r1\n\tshl.s\t64, r1, r1\n\tshl.s\t96, r2, r2\n\tor\tr2, r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB22_163:\n\tld.1\t64, r1\n\tadd\t100, r1, r2\n\tadd\t@CPI22_25[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t68, r1, r2\n\tadd\t@CPI22_26[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t36, r1, r2\n\tadd\t42, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI22_27[0], r0, r2\n\tst.1\tr1, r2\n\tadd\t4, r1, r2\n\tadd\tstack-[15], r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI22_0[0], r0, r2\n\tsub.s!\t@CPI22_0[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI22_28[0], r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB22_43:\n\tadd\t@CPI22_4[0], r0, r1\n\tst.1\t0, r1\n\tadd\t18, r0, r1\n\tst.1\t4, r1\n\tadd\t@CPI22_5[0], r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB22_148:\n\tadd\t@CPI22_0[0], r0, r2\n\tsub.s!\t@CPI22_0[0], r5, r3\n\tadd\tr2, r0, r3\n\tadd.lt\tr5, r0, r3\n\tsub.s!\t@CPI22_0[0], r1, r4\n\tadd.ge\tr2, r0, r1\n\tshl.s\t96, r1, r1\n\tshl.s\t64, r3, r2\n\tor\tr1, r2, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB22_22:\n\tld.1\t64, r2\n\tand\t31, r3, r4\n\tshr.s!\t5, r3, r3\n\tjump.eq\t@.BB22_177\n\tadd\tr0, r0, r5\n.BB22_24:\n\tshl.s\t5, r5, r6\n\tadd\tr2, r6, r7\n\tptr.add\tr1, r6, r6\n\tld\tr6, r6\n\tst.1\tr7, r6\n\tadd\t1, r5, r5\n\tsub!\tr5, r3, r6\n\tjump.lt\t@.BB22_24\n.BB22_177:\n\tsub!\tr4, r0, r5\n\tjump.eq\t@.BB22_26\n\tshl.s\t5, r3, r3\n\tptr.add\tr1, r3, r1\n\tadd\tr2, r3, r3\n\tshl.s\t3, r4, r4\n\tld.1\tr3, r5\n\tshl\tr5, r4, r5\n\tshr\tr5, r4, r5\n\tld\tr1, r1\n\tsub\t256, r4, r4\n\tshr\tr1, r4, r1\n\tshl\tr1, r4, r1\n\tor\tr1, r5, r1\n\tst.1\tr3, r1\n.BB22_26:\n\tadd\t@CPI22_0[0], r0, r1\n\tadd\tstack[@returndatasize], r0, r3\n\tsub.s!\t@CPI22_0[0], r3, r4\n\tadd.ge\tr1, r0, r3\n\tsub.s!\t@CPI22_0[0], r2, r4\n\tadd.lt\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tshl.s\t96, r3, r2\n\tor\tr2, r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB22_86:\n\tld.1\t64, r2\n\tand\t31, r3, r4\n\tshr.s!\t5, r3, r3\n\tjump.eq\t@.BB22_173\n\tadd\tr0, r0, r5\n.BB22_88:\n\tshl.s\t5, r5, r6\n\tadd\tr2, r6, r7\n\tptr.add\tr1, r6, r6\n\tld\tr6, r6\n\tst.1\tr7, r6\n\tadd\t1, r5, r5\n\tsub!\tr5, r3, r6\n\tjump.lt\t@.BB22_88\n.BB22_173:\n\tsub!\tr4, r0, r5\n\tjump.eq\t@.BB22_90\n\tshl.s\t5, r3, r3\n\tptr.add\tr1, r3, r1\n\tadd\tr2, r3, r3\n\tshl.s\t3, r4, r4\n\tld.1\tr3, r5\n\tshl\tr5, r4, r5\n\tshr\tr5, r4, r5\n\tld\tr1, r1\n\tsub\t256, r4, r4\n\tshr\tr1, r4, r1\n\tshl\tr1, r4, r1\n\tor\tr1, r5, r1\n\tst.1\tr3, r1\n.BB22_90:\n\tadd\t@CPI22_0[0], r0, r1\n\tadd\tstack[@returndatasize], r0, r3\n\tsub.s!\t@CPI22_0[0], r3, r4\n\tadd.ge\tr1, r0, r3\n\tsub.s!\t@CPI22_0[0], r2, r4\n\tadd.lt\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tshl.s\t96, r3, r2\n\tor\tr2, r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB22_152:\n\tld.1\t64, r1\n\tadd\t68, r1, r2\n\tadd\t@CPI22_29[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t36, r1, r2\n\tadd\t29, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI22_27[0], r0, r2\n\tst.1\tr1, r2\n\tadd\t4, r1, r2\n\tadd\tstack-[15], r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI22_0[0], r0, r2\n\tsub.s!\t@CPI22_0[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI22_30[0], r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB22_49:\n\tld.1\t64, r2\n\tand\t31, r4, r3\n\tshr.s!\t5, r4, r4\n\tjump.eq\t@.BB22_176\n\tadd\tr0, r0, r5\n.BB22_51:\n\tshl.s\t5, r5, r6\n\tadd\tr2, r6, r7\n\tptr.add\tr1, r6, r6\n\tld\tr6, r6\n\tst.1\tr7, r6\n\tadd\t1, r5, r5\n\tsub!\tr5, r4, r6\n\tjump.lt\t@.BB22_51\n.BB22_176:\n\tsub!\tr3, r0, r5\n\tjump.eq\t@.BB22_53\n\tshl.s\t5, r4, r4\n\tptr.add\tr1, r4, r1\n\tadd\tr2, r4, r4\n\tshl.s\t3, r3, r3\n\tld.1\tr4, r5\n\tshl\tr5, r3, r5\n\tshr\tr5, r3, r5\n\tld\tr1, r1\n\tsub\t256, r3, r3\n\tshr\tr1, r3, r1\n\tshl\tr1, r3, r1\n\tor\tr1, r5, r1\n\tst.1\tr4, r1\n.BB22_53:\n\tadd\t@CPI22_0[0], r0, r1\n\tadd\tstack[@returndatasize], r0, r3\n\tsub.s!\t@CPI22_0[0], r3, r4\n\tadd.ge\tr1, r0, r3\n\tsub.s!\t@CPI22_0[0], r2, r4\n\tadd.lt\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tshl.s\t96, r3, r2\n\tor\tr2, r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB22_62:\n\tld.1\t64, r2\n\tand\t31, r4, r3\n\tshr.s!\t5, r4, r4\n\tjump.eq\t@.BB22_175\n\tadd\tr0, r0, r5\n.BB22_64:\n\tshl.s\t5, r5, r6\n\tadd\tr2, r6, r7\n\tptr.add\tr1, r6, r6\n\tld\tr6, r6\n\tst.1\tr7, r6\n\tadd\t1, r5, r5\n\tsub!\tr5, r4, r6\n\tjump.lt\t@.BB22_64\n.BB22_175:\n\tsub!\tr3, r0, r5\n\tjump.eq\t@.BB22_66\n\tshl.s\t5, r4, r4\n\tptr.add\tr1, r4, r1\n\tadd\tr2, r4, r4\n\tshl.s\t3, r3, r3\n\tld.1\tr4, r5\n\tshl\tr5, r3, r5\n\tshr\tr5, r3, r5\n\tld\tr1, r1\n\tsub\t256, r3, r3\n\tshr\tr1, r3, r1\n\tshl\tr1, r3, r1\n\tor\tr1, r5, r1\n\tst.1\tr4, r1\n.BB22_66:\n\tadd\t@CPI22_0[0], r0, r1\n\tadd\tstack[@returndatasize], r0, r3\n\tsub.s!\t@CPI22_0[0], r3, r4\n\tadd.ge\tr1, r0, r3\n\tsub.s!\t@CPI22_0[0], r2, r4\n\tadd.lt\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tshl.s\t96, r3, r2\n\tor\tr2, r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB22_122:\n\tld.1\t64, r2\n\tand\t31, r3, r4\n\tshr.s!\t5, r3, r3\n\tjump.eq\t@.BB22_169\n\tadd\tr0, r0, r5\n.BB22_124:\n\tshl.s\t5, r5, r6\n\tadd\tr2, r6, r7\n\tptr.add\tr1, r6, r6\n\tld\tr6, r6\n\tst.1\tr7, r6\n\tadd\t1, r5, r5\n\tsub!\tr5, r3, r6\n\tjump.lt\t@.BB22_124\n.BB22_169:\n\tsub!\tr4, r0, r5\n\tjump.eq\t@.BB22_126\n\tshl.s\t5, r3, r3\n\tptr.add\tr1, r3, r1\n\tadd\tr2, r3, r3\n\tshl.s\t3, r4, r4\n\tld.1\tr3, r5\n\tshl\tr5, r4, r5\n\tshr\tr5, r4, r5\n\tld\tr1, r1\n\tsub\t256, r4, r4\n\tshr\tr1, r4, r1\n\tshl\tr1, r4, r1\n\tor\tr1, r5, r1\n\tst.1\tr3, r1\n.BB22_126:\n\tadd\t@CPI22_0[0], r0, r1\n\tadd\tstack[@returndatasize], r0, r3\n\tsub.s!\t@CPI22_0[0], r3, r4\n\tadd.ge\tr1, r0, r3\n\tsub.s!\t@CPI22_0[0], r2, r4\n\tadd.lt\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tshl.s\t96, r3, r2\n\tor\tr2, r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB22_104:\n\tld.1\t64, r2\n\tand\t31, r3, r4\n\tshr.s!\t5, r3, r3\n\tjump.eq\t@.BB22_171\n\tadd\tr0, r0, r5\n.BB22_106:\n\tshl.s\t5, r5, r6\n\tadd\tr2, r6, r7\n\tptr.add\tr1, r6, r6\n\tld\tr6, r6\n\tst.1\tr7, r6\n\tadd\t1, r5, r5\n\tsub!\tr5, r3, r6\n\tjump.lt\t@.BB22_106\n.BB22_171:\n\tsub!\tr4, r0, r5\n\tjump.eq\t@.BB22_108\n\tshl.s\t5, r3, r3\n\tptr.add\tr1, r3, r1\n\tadd\tr2, r3, r3\n\tshl.s\t3, r4, r4\n\tld.1\tr3, r5\n\tshl\tr5, r4, r5\n\tshr\tr5, r4, r5\n\tld\tr1, r1\n\tsub\t256, r4, r4\n\tshr\tr1, r4, r1\n\tshl\tr1, r4, r1\n\tor\tr1, r5, r1\n\tst.1\tr3, r1\n.BB22_108:\n\tadd\t@CPI22_0[0], r0, r1\n\tadd\tstack[@returndatasize], r0, r3\n\tsub.s!\t@CPI22_0[0], r3, r4\n\tadd.ge\tr1, r0, r3\n\tsub.s!\t@CPI22_0[0], r2, r4\n\tadd.lt\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tshl.s\t96, r3, r2\n\tor\tr2, r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.func_end22:\n\nfun_staking:\n.func_begin23:\n\tnop\tstack+=[13]\n\tadd\tr1, r0, stack-[13]\n\tadd\t5, r0, r2\n\tsload\tr2, r1\n\tsub!\tr1, r0, r1\n\tjump.eq\t@.BB23_1\n\tadd\tr2, r0, stack-[11]\n\tst.1\t0, r0\n\tadd\t6, r0, r1\n\tst.1\t32, r1\n\tadd\t@CPI23_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI23_0[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI23_1[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB23_3\n\tld\tr1, r1\n\tcontext.caller\tr2\n\tadd\tr2, r0, stack-[10]\n\tand\t@CPI23_2[0], r2, r2\n\tadd\tr2, r0, stack-[9]\n\tst.1\t0, r2\n\tst.1\t32, r1\n\tadd\t@CPI23_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI23_0[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI23_1[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB23_3\n\tld\tr1, r1\n\tadd\tr1, r0, stack-[12]\n\tadd\tstack-[11], r0, r2\n\tsload\tr2, r1\n\tsub!\tr1, r0, r1\n\tjump.eq\t@.BB23_1\n\tst.1\t0, r2\n\tadd\t@CPI23_3[0], r0, r1\n\tsload\tr1, r1\n\tadd\tr1, r0, stack-[11]\n\tadd\t@CPI23_4[0], r0, r1\n\tst.2\t0, r1\n\tadd\t@CPI23_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI23_0[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI23_5[0], r1, r1\n\tadd\t32779, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB23_3\n\tld\tr1, r1\n\tadd\tstack-[11], r0, r2\n\tsub!\tr1, r2, r1\n\tjump.le\t@.BB23_69\n\tadd\t@CPI23_6[0], r0, r1\n\tsload\tr1, r1\n\tadd\t@CPI23_7[0], r0, r2\n\tst.2\t0, r2\n\tand\t@CPI23_2[0], r1, r1\n\tadd\tr1, r0, stack-[11]\n\tst.2\t4, r1\n\tadd\t@CPI23_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI23_0[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI23_8[0], r1, r1\n\tadd\t32770, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB23_3\n\tld\tr1, r1\n\tsub!\tr1, r0, r1\n\tjump.eq\t@.BB23_3\n\tld.1\t64, r9\n\tadd\t@CPI23_9[0], r0, r1\n\tst.1\tr9, r1\n\tcontext.this\tr1\n\tand\t@CPI23_2[0], r1, r2\n\tadd\t4, r9, r1\n\tadd\tr2, r0, stack-[6]\n\tst.1\tr1, r2\n\tcontext.gas_left\tr1\n\tadd\tstack-[11], r0, r2\n\tsub.s!\t4, r2, r3\n\tjump.ne\t@.BB23_13\n\tadd\tstack[@returndatasize], r0, r3\n\tjump\t@.BB23_23\n.BB23_13:\n\tadd\t@CPI23_0[0], r0, r4\n\tsub.s!\t@CPI23_0[0], r1, r3\n\tadd.ge\tr4, r0, r1\n\tsub.s!\t@CPI23_0[0], r9, r3\n\tadd\tr4, r0, r3\n\tadd.lt\tr9, r0, r3\n\tshl.s\t64, r3, r3\n\tshl.s\t192, r1, r1\n\tor\tr1, r3, r1\n\tor\t@CPI23_10[0], r1, r1\n\tadd\tr9, r0, stack-[11]\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tadd\tstack-[11], r0, r9\n\tadd\tr1, r0, r3\n\tshr.s\t96, r3, r3\n\tand\t@CPI23_0[0], r3, r3\n\tsub.s!\t32, r3, r4\n\tadd\t32, r0, r5\n\tadd.lt\tr3, r0, r5\n\tand\t31, r5, r4\n\tshr.s!\t5, r5, r5\n\tjump.eq\t@.BB23_175\n\tadd\tr0, r0, r6\n.BB23_15:\n\tshl.s\t5, r6, r7\n\tadd\tr9, r7, r8\n\tptr.add\tr1, r7, r7\n\tld\tr7, r7\n\tst.1\tr8, r7\n\tadd\t1, r6, r6\n\tsub!\tr6, r5, r7\n\tjump.lt\t@.BB23_15\n.BB23_175:\n\tsub!\tr4, r0, r6\n\tjump.eq\t@.BB23_17\n\tshl.s\t5, r5, r5\n\tptr.add\tr1, r5, r6\n\tadd\tr9, r5, r5\n\tshl.s\t3, r4, r4\n\tld.1\tr5, r7\n\tshl\tr7, r4, r7\n\tshr\tr7, r4, r7\n\tld\tr6, r6\n\tsub\t256, r4, r4\n\tshr\tr6, r4, r6\n\tshl\tr6, r4, r4\n\tor\tr4, r7, r4\n\tst.1\tr5, r4\n.BB23_17:\n\tadd\tr3, r0, stack[@returndatasize]\n\tptr.add\tr1, r0, stack[@ptr_return_data]\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB23_18\n.BB23_23:\n\tadd\t31, r3, r1\n\tsub.s\t32, r0, r2\n\tadd\tr2, r0, stack-[8]\n\tand\tr1, r2, r2\n\tadd\tr2, r9, r1\n\tsub!\tr1, r2, r2\n\tadd\t0, r0, r2\n\tadd.lt\t1, r0, r2\n\tsub.s!\t@CPI23_11[0], r1, r3\n\tjump.gt\t@.BB23_25\n\tand!\t1, r2, r2\n\tjump.ne\t@.BB23_25\n\tst.1\t64, r1\n\tadd\t@CPI23_12[0], r0, r1\n\tadd\tstack[@returndatasize], r0, r2\n\tsub.s!\t32, r2, r3\n\tadd\tr0, r0, r3\n\tadd.lt\tr1, r0, r3\n\tand\t@CPI23_12[0], r2, r2\n\tsub!\tr2, r0, r4\n\tadd.le\tr0, r0, r1\n\tsub.s!\t@CPI23_12[0], r2, r2\n\tadd.ne\tr3, r0, r1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB23_3\n\tld.1\tr9, r1\n\tadd\tr1, r0, stack-[11]\n\tadd\t@CPI23_4[0], r0, r1\n\tst.2\t0, r1\n\tadd\t@CPI23_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI23_0[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI23_5[0], r1, r1\n\tadd\t32779, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tadd\tstack-[11], r0, r3\n\tsub!\tr3, r0, r3\n\tand\t1, r2, r2\n\tjump.eq\t@.BB23_28\n\tsub!\tr2, r0, r2\n\tjump.eq\t@.BB23_3\n\tadd\t@CPI23_3[0], r0, r2\n\tsload\tr2, r3\n\tld\tr1, r4\n\tsub!\tr4, r3, r1\n\tjump.lt\t@.BB23_31\n\tsub\tr4, r3, r1\n\tadd\t4, r0, r2\n\tsload\tr2, r2\n\tsub!\tr4, r3, r3\n\tjump.eq\t@.BB23_34\n\tsub.s\t1, r0, r3\n\tdiv\tr3, r1, r3, r4\n\tsub!\tr3, r2, r3\n\tjump.lt\t@.BB23_31\n.BB23_34:\n\tmul!\tr2, r1, r1, r2\n\tadd\t3, r0, r2\n\tsload\tr2, r2\n\tjump.eq\t@.BB23_36\n\tsub.s\t1, r0, r3\n\tdiv\tr3, r1, r3, r4\n\tsub!\tr3, r2, r3\n\tjump.lt\t@.BB23_31\n.BB23_36:\n\tmul!\tr2, r1, r3, r1\n\tadd\t@CPI23_13[0], r0, r1\n\tsload\tr1, r4\n\tjump.eq\t@.BB23_38\n\tsub.s\t1, r0, r1\n\tdiv\tr1, r3, r1, r2\n\tsub!\tr1, r4, r1\n\tjump.lt\t@.BB23_31\n.BB23_38:\n\tadd\tr4, r0, stack-[4]\n\tadd\tr3, r0, stack-[5]\n\tadd\t7, r0, r1\n\tsload\tr1, r1\n\tadd\tr1, r0, stack-[3]\n\tsub!\tr1, r0, r1\n\tjump.eq\t@.BB23_39\n\tadd\t2, r0, r1\n\tsload\tr1, r1\n\tadd\tr1, r0, stack-[7]\n\tadd\t1, r0, r1\n\tadd\tr1, r0, stack-[1]\n\tsload\tr1, r1\n\tadd\t@CPI23_7[0], r0, r2\n\tst.2\t0, r2\n\tand\t@CPI23_2[0], r1, r1\n\tadd\tr1, r0, stack-[2]\n\tst.2\t4, r1\n\tadd\t@CPI23_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI23_0[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI23_8[0], r1, r1\n\tadd\t32770, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tadd\tstack-[7], r0, r3\n\tand\t@CPI23_2[0], r3, r3\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB23_3\n\tld\tr1, r1\n\tsub!\tr1, r0, r1\n\tjump.eq\t@.BB23_3\n\tadd\tstack-[5], r0, r1\n\tadd\tstack-[4], r0, r2\n\tmul\tr2, r1, r1, r2\n\tadd\tstack-[3], r0, r2\n\tdiv\tr1, r2, r2, r1\n\tadd\tr2, r0, stack-[7]\n\tdiv.s\t10, r2, r1, r2\n\tld.1\t64, r5\n\tadd\t36, r5, r2\n\tst.1\tr2, r1\n\tadd\t@CPI23_14[0], r0, r1\n\tst.1\tr5, r1\n\tadd\t4, r5, r1\n\tst.1\tr1, r3\n\tcontext.gas_left\tr1\n\tadd\tstack-[2], r0, r2\n\tsub.s!\t4, r2, r3\n\tjump.ne\t@.BB23_44\n\tadd\tstack[@returndatasize], r0, r4\n\tjump\t@.BB23_50\n.BB23_28:\n\tsub!\tr2, r0, r2\n\tjump.ne\t@.BB23_8\n\tjump\t@.BB23_3\n.BB23_44:\n\tadd\t@CPI23_0[0], r0, r4\n\tsub.s!\t@CPI23_0[0], r1, r3\n\tadd.ge\tr4, r0, r1\n\tsub.s!\t@CPI23_0[0], r5, r3\n\tadd\tr4, r0, r3\n\tadd.lt\tr5, r0, r3\n\tshl.s\t64, r3, r3\n\tshl.s\t192, r1, r1\n\tor\tr1, r3, r1\n\tor\t@CPI23_15[0], r1, r1\n\tadd\tr5, r0, stack-[5]\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tadd\tstack-[5], r0, r5\n\tadd\tr1, r0, r3\n\tshr.s\t96, r3, r3\n\tand\t@CPI23_0[0], r3, stack[@returndatasize]\n\tand\t@CPI23_0[0], r3, r4\n\tptr.add\tr1, r0, stack[@ptr_return_data]\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB23_45\n.BB23_50:\n\tadd\t31, r4, r1\n\tadd\tstack-[8], r0, r2\n\tand\tr1, r2, r2\n\tadd\tr2, r5, r1\n\tsub!\tr1, r2, r2\n\tadd\t0, r0, r2\n\tadd.lt\t1, r0, r2\n\tsub.s!\t@CPI23_11[0], r1, r3\n\tjump.gt\t@.BB23_25\n\tand!\t1, r2, r2\n\tjump.ne\t@.BB23_25\n\tst.1\t64, r1\n\tadd\t@CPI23_12[0], r0, r1\n\tadd\tstack[@returndatasize], r0, r2\n\tsub!\tr2, r0, r3\n\tadd\tr0, r0, r3\n\tadd.lt\tr1, r0, r3\n\tand\t@CPI23_12[0], r2, r2\n\tsub!\tr2, r0, r4\n\tadd.le\tr0, r0, r1\n\tsub.s!\t@CPI23_12[0], r2, r2\n\tadd.ne\tr3, r0, r1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB23_3\n\tadd\tstack-[1], r0, r1\n\tsload\tr1, r1\n\tadd\t@CPI23_7[0], r0, r2\n\tst.2\t0, r2\n\tand\t@CPI23_2[0], r1, r1\n\tadd\tr1, r0, stack-[5]\n\tst.2\t4, r1\n\tadd\t@CPI23_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI23_0[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI23_8[0], r1, r1\n\tadd\t32770, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB23_3\n\tld\tr1, r1\n\tsub!\tr1, r0, r1\n\tjump.eq\t@.BB23_3\n\tld.1\t64, r5\n\tadd\t36, r5, r1\n\tadd\tstack-[7], r0, r2\n\tst.1\tr1, r2\n\tadd\t@CPI23_14[0], r0, r1\n\tst.1\tr5, r1\n\tadd\t4, r5, r1\n\tadd\tstack-[6], r0, r2\n\tst.1\tr1, r2\n\tcontext.gas_left\tr1\n\tadd\tstack-[5], r0, r2\n\tsub.s!\t4, r2, r3\n\tjump.ne\t@.BB23_57\n\tadd\tstack[@returndatasize], r0, r4\n\tjump\t@.BB23_63\n.BB23_57:\n\tadd\t@CPI23_0[0], r0, r4\n\tsub.s!\t@CPI23_0[0], r1, r3\n\tadd.ge\tr4, r0, r1\n\tsub.s!\t@CPI23_0[0], r5, r3\n\tadd\tr4, r0, r3\n\tadd.lt\tr5, r0, r3\n\tshl.s\t64, r3, r3\n\tshl.s\t192, r1, r1\n\tor\tr1, r3, r1\n\tor\t@CPI23_15[0], r1, r1\n\tadd\tr5, r0, stack-[6]\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tadd\tstack-[6], r0, r5\n\tadd\tr1, r0, r3\n\tshr.s\t96, r3, r3\n\tand\t@CPI23_0[0], r3, stack[@returndatasize]\n\tand\t@CPI23_0[0], r3, r4\n\tptr.add\tr1, r0, stack[@ptr_return_data]\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB23_58\n.BB23_63:\n\tadd\t31, r4, r1\n\tadd\tstack-[8], r0, r2\n\tand\tr1, r2, r2\n\tadd\tr2, r5, r1\n\tsub!\tr1, r2, r2\n\tadd\t0, r0, r2\n\tadd.lt\t1, r0, r2\n\tsub.s!\t@CPI23_11[0], r1, r3\n\tjump.gt\t@.BB23_25\n\tand!\t1, r2, r2\n\tjump.ne\t@.BB23_25\n\tst.1\t64, r1\n\tadd\t@CPI23_12[0], r0, r1\n\tadd\tstack[@returndatasize], r0, r2\n\tsub!\tr2, r0, r3\n\tadd\tr0, r0, r3\n\tadd.lt\tr1, r0, r3\n\tand\t@CPI23_12[0], r2, r2\n\tsub!\tr2, r0, r4\n\tadd.le\tr0, r0, r1\n\tsub.s!\t@CPI23_12[0], r2, r2\n\tadd.ne\tr3, r0, r1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB23_3\n\tadd\t@CPI23_16[0], r0, r1\n\tsload\tr1, r1\n\tadd\tstack-[7], r0, r3\n\tsub.s!\t@CPI23_17[0], r3, r2\n\tjump.gt\t@.BB23_31\n\tmul\t@CPI23_18[0], r3, r2, r3\n\tadd\tstack-[11], r0, r3\n\tdiv\tr2, r3, r2, r3\n\tsub.s\t1, r0, r3\n\txor\tr2, r3, r3\n\tsub!\tr1, r3, r3\n\tjump.gt\t@.BB23_31\n\tadd\tr2, r1, r1\n\tadd\t@CPI23_16[0], r0, r2\n\tsstore\tr2, r1\n\tadd\t@CPI23_4[0], r0, r1\n\tst.2\t0, r1\n\tadd\t@CPI23_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI23_0[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI23_5[0], r1, r1\n\tadd\t32779, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB23_3\n.BB23_8:\n\tld\tr1, r1\n\tadd\t@CPI23_3[0], r0, r2\n\tsstore\tr2, r1\n.BB23_69:\n\tadd\tstack-[12], r0, r3\n\tsload\tr3, r1\n\tsub!\tr1, r0, r2\n\tadd\t1, r3, r2\n\tadd\tr2, r0, stack-[11]\n\tjump.eq\t@.BB23_73\n\tsub.s\t1, r0, r2\n\tdiv\tr2, r1, r3, r2\n\tadd\t@CPI23_16[0], r0, r2\n\tsload\tr2, r2\n\tsub!\tr3, r2, r3\n\tjump.lt\t@.BB23_31\n\tmul\tr2, r1, r1, r2\n\tdiv.s\t@CPI23_18[0], r1, r2, r1\n\tadd\tstack-[11], r0, r1\n\tsload\tr1, r3\n\tsub!\tr2, r3, r1\n\tjump.lt\t@.BB23_31\n\tadd\tr2, r0, stack-[7]\n\tadd\tr3, r0, stack-[6]\n\tsub!\tr2, r3, r1\n\tjump.eq\t@.BB23_73\n\tadd\t1, r0, r1\n\tadd\tr1, r0, stack-[4]\n\tsload\tr1, r1\n\tadd\t@CPI23_7[0], r0, r2\n\tst.2\t0, r2\n\tand\t@CPI23_2[0], r1, r1\n\tadd\tr1, r0, stack-[8]\n\tst.2\t4, r1\n\tadd\t@CPI23_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI23_0[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI23_8[0], r1, r1\n\tadd\t32770, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tadd\tstack-[8], r0, r5\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB23_3\n\tld\tr1, r1\n\tsub!\tr1, r0, r1\n\tjump.eq\t@.BB23_3\n\tld.1\t64, r9\n\tadd\t@CPI23_9[0], r0, r1\n\tst.1\tr9, r1\n\tcontext.this\tr1\n\tand\t@CPI23_2[0], r1, r1\n\tadd\t4, r9, r2\n\tst.1\tr2, r1\n\tcontext.gas_left\tr1\n\tsub.s!\t4, r5, r2\n\tjump.ne\t@.BB23_78\n\tadd\tstack[@returndatasize], r0, r3\n\tjump\t@.BB23_88\n.BB23_78:\n\tadd\t@CPI23_0[0], r0, r2\n\tsub.s!\t@CPI23_0[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tsub.s!\t@CPI23_0[0], r9, r3\n\tadd.lt\tr9, r0, r2\n\tshl.s\t64, r2, r2\n\tshl.s\t192, r1, r1\n\tor\tr1, r2, r1\n\tor\t@CPI23_10[0], r1, r1\n\tadd\tr5, r0, r2\n\tadd\tr9, r0, stack-[5]\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tadd\tstack-[5], r0, r9\n\tadd\tr1, r0, r3\n\tshr.s\t96, r3, r3\n\tand\t@CPI23_0[0], r3, r3\n\tsub.s!\t32, r3, r4\n\tadd\t32, r0, r5\n\tadd.lt\tr3, r0, r5\n\tand\t31, r5, r4\n\tshr.s!\t5, r5, r5\n\tjump.eq\t@.BB23_171\n\tadd\tr0, r0, r6\n.BB23_80:\n\tshl.s\t5, r6, r7\n\tadd\tr9, r7, r8\n\tptr.add\tr1, r7, r7\n\tld\tr7, r7\n\tst.1\tr8, r7\n\tadd\t1, r6, r6\n\tsub!\tr6, r5, r7\n\tjump.lt\t@.BB23_80\n.BB23_171:\n\tsub!\tr4, r0, r6\n\tjump.eq\t@.BB23_82\n\tshl.s\t5, r5, r5\n\tptr.add\tr1, r5, r6\n\tadd\tr9, r5, r5\n\tshl.s\t3, r4, r4\n\tld.1\tr5, r7\n\tshl\tr7, r4, r7\n\tshr\tr7, r4, r7\n\tld\tr6, r6\n\tsub\t256, r4, r4\n\tshr\tr6, r4, r6\n\tshl\tr6, r4, r4\n\tor\tr4, r7, r4\n\tst.1\tr5, r4\n.BB23_82:\n\tadd\tr3, r0, stack[@returndatasize]\n\tptr.add\tr1, r0, stack[@ptr_return_data]\n\tand!\t1, r2, r2\n\tadd\tstack-[8], r0, r5\n\tjump.eq\t@.BB23_83\n.BB23_88:\n\tadd\t31, r3, r1\n\tsub.s\t32, r0, r2\n\tadd\tr2, r0, stack-[5]\n\tand\tr1, r2, r2\n\tadd\tr2, r9, r1\n\tsub!\tr1, r2, r2\n\tadd\t0, r0, r2\n\tadd.lt\t1, r0, r2\n\tsub.s!\t@CPI23_11[0], r1, r3\n\tjump.gt\t@.BB23_25\n\tand!\t1, r2, r2\n\tjump.ne\t@.BB23_25\n\tst.1\t64, r1\n\tadd\t@CPI23_12[0], r0, r1\n\tadd\tstack[@returndatasize], r0, r2\n\tsub.s!\t32, r2, r3\n\tadd\tr0, r0, r3\n\tadd.lt\tr1, r0, r3\n\tand\t@CPI23_12[0], r2, r2\n\tsub!\tr2, r0, r4\n\tadd.le\tr0, r0, r1\n\tsub.s!\t@CPI23_12[0], r2, r2\n\tadd.ne\tr3, r0, r1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB23_3\n\tadd\tstack-[7], r0, r1\n\tadd\tstack-[6], r0, r2\n\tsub\tr1, r2, r3\n\tld.1\tr9, r2\n\tsub!\tr2, r3, r1\n\tjump.ge\t@.BB23_92\n\tadd\tr2, r0, stack-[7]\n\tadd\tstack-[4], r0, r1\n\tsload\tr1, r1\n\tadd\t@CPI23_7[0], r0, r2\n\tst.2\t0, r2\n\tand\t@CPI23_2[0], r1, r1\n\tadd\tr1, r0, stack-[8]\n\tst.2\t4, r1\n\tadd\t@CPI23_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI23_0[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI23_8[0], r1, r1\n\tadd\t32770, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB23_3\n\tld\tr1, r1\n\tsub!\tr1, r0, r1\n\tjump.eq\t@.BB23_3\n\tld.1\t64, r9\n\tadd\t36, r9, r1\n\tadd\tstack-[7], r0, r2\n\tst.1\tr1, r2\n\tadd\t@CPI23_20[0], r0, r1\n\tst.1\tr9, r1\n\tadd\t4, r9, r1\n\tadd\tstack-[9], r0, r2\n\tst.1\tr1, r2\n\tcontext.gas_left\tr1\n\tadd\tstack-[8], r0, r2\n\tsub.s!\t4, r2, r3\n\tjump.ne\t@.BB23_114\n\tadd\tstack[@returndatasize], r0, r3\n\tjump\t@.BB23_124\n.BB23_92:\n\tadd\tr3, r0, stack-[7]\n\tadd\t@CPI23_7[0], r0, r1\n\tst.2\t0, r1\n\tst.2\t4, r5\n\tadd\t@CPI23_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI23_0[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI23_8[0], r1, r1\n\tadd\t32770, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tadd\tstack-[8], r0, r4\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB23_3\n\tld\tr1, r1\n\tsub!\tr1, r0, r1\n\tjump.eq\t@.BB23_3\n\tld.1\t64, r9\n\tadd\t36, r9, r1\n\tadd\tstack-[7], r0, r2\n\tst.1\tr1, r2\n\tadd\t@CPI23_20[0], r0, r1\n\tst.1\tr9, r1\n\tadd\t4, r9, r1\n\tadd\tstack-[9], r0, r2\n\tst.1\tr1, r2\n\tcontext.gas_left\tr1\n\tsub.s!\t4, r4, r2\n\tjump.ne\t@.BB23_96\n\tadd\tstack[@returndatasize], r0, r3\n\tjump\t@.BB23_106\n.BB23_114:\n\tadd\t@CPI23_0[0], r0, r4\n\tsub.s!\t@CPI23_0[0], r1, r3\n\tadd.ge\tr4, r0, r1\n\tsub.s!\t@CPI23_0[0], r9, r3\n\tadd\tr4, r0, r3\n\tadd.lt\tr9, r0, r3\n\tshl.s\t64, r3, r3\n\tshl.s\t192, r1, r1\n\tor\tr1, r3, r1\n\tor\t@CPI23_15[0], r1, r1\n\tadd\tr9, r0, stack-[8]\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tadd\tstack-[8], r0, r9\n\tadd\tr1, r0, r3\n\tshr.s\t96, r3, r3\n\tand\t@CPI23_0[0], r3, r3\n\tsub.s!\t32, r3, r4\n\tadd\t32, r0, r5\n\tadd.lt\tr3, r0, r5\n\tand\t31, r5, r4\n\tshr.s!\t5, r5, r5\n\tjump.eq\t@.BB23_167\n\tadd\tr0, r0, r6\n.BB23_116:\n\tshl.s\t5, r6, r7\n\tadd\tr9, r7, r8\n\tptr.add\tr1, r7, r7\n\tld\tr7, r7\n\tst.1\tr8, r7\n\tadd\t1, r6, r6\n\tsub!\tr6, r5, r7\n\tjump.lt\t@.BB23_116\n.BB23_167:\n\tsub!\tr4, r0, r6\n\tjump.eq\t@.BB23_118\n\tshl.s\t5, r5, r5\n\tptr.add\tr1, r5, r6\n\tadd\tr9, r5, r5\n\tshl.s\t3, r4, r4\n\tld.1\tr5, r7\n\tshl\tr7, r4, r7\n\tshr\tr7, r4, r7\n\tld\tr6, r6\n\tsub\t256, r4, r4\n\tshr\tr6, r4, r6\n\tshl\tr6, r4, r4\n\tor\tr4, r7, r4\n\tst.1\tr5, r4\n.BB23_118:\n\tadd\tr3, r0, stack[@returndatasize]\n\tptr.add\tr1, r0, stack[@ptr_return_data]\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB23_119\n.BB23_124:\n\tadd\t31, r3, r1\n\tadd\tstack-[5], r0, r2\n\tand\tr1, r2, r2\n\tadd\tr2, r9, r1\n\tsub!\tr1, r2, r2\n\tadd\t0, r0, r2\n\tadd.lt\t1, r0, r2\n\tsub.s!\t@CPI23_11[0], r1, r3\n\tjump.gt\t@.BB23_25\n\tand!\t1, r2, r2\n\tjump.ne\t@.BB23_25\n\tst.1\t64, r1\n\tadd\t@CPI23_12[0], r0, r1\n\tadd\tstack[@returndatasize], r0, r2\n\tsub.s!\t32, r2, r3\n\tadd\tr0, r0, r3\n\tadd.lt\tr1, r0, r3\n\tand\t@CPI23_12[0], r2, r2\n\tsub!\tr2, r0, r4\n\tadd.le\tr0, r0, r1\n\tsub.s!\t@CPI23_12[0], r2, r2\n\tadd.ne\tr3, r0, r1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB23_3\n\tld.1\tr9, r1\n\tsub!\tr1, r0, r2\n\tadd\t0, r0, r2\n\tadd.ne\t1, r0, r2\n\tsub!\tr1, r2, r1\n\tjump.eq\t@.BB23_73\n\tjump\t@.BB23_3\n.BB23_96:\n\tadd\t@CPI23_0[0], r0, r2\n\tsub.s!\t@CPI23_0[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tsub.s!\t@CPI23_0[0], r9, r3\n\tadd.lt\tr9, r0, r2\n\tshl.s\t64, r2, r2\n\tshl.s\t192, r1, r1\n\tor\tr1, r2, r1\n\tor\t@CPI23_15[0], r1, r1\n\tadd\tr4, r0, r2\n\tadd\tr9, r0, stack-[8]\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tadd\tstack-[8], r0, r9\n\tadd\tr1, r0, r3\n\tshr.s\t96, r3, r3\n\tand\t@CPI23_0[0], r3, r3\n\tsub.s!\t32, r3, r4\n\tadd\t32, r0, r5\n\tadd.lt\tr3, r0, r5\n\tand\t31, r5, r4\n\tshr.s!\t5, r5, r5\n\tjump.eq\t@.BB23_169\n\tadd\tr0, r0, r6\n.BB23_98:\n\tshl.s\t5, r6, r7\n\tadd\tr9, r7, r8\n\tptr.add\tr1, r7, r7\n\tld\tr7, r7\n\tst.1\tr8, r7\n\tadd\t1, r6, r6\n\tsub!\tr6, r5, r7\n\tjump.lt\t@.BB23_98\n.BB23_169:\n\tsub!\tr4, r0, r6\n\tjump.eq\t@.BB23_100\n\tshl.s\t5, r5, r5\n\tptr.add\tr1, r5, r6\n\tadd\tr9, r5, r5\n\tshl.s\t3, r4, r4\n\tld.1\tr5, r7\n\tshl\tr7, r4, r7\n\tshr\tr7, r4, r7\n\tld\tr6, r6\n\tsub\t256, r4, r4\n\tshr\tr6, r4, r6\n\tshl\tr6, r4, r4\n\tor\tr4, r7, r4\n\tst.1\tr5, r4\n.BB23_100:\n\tadd\tr3, r0, stack[@returndatasize]\n\tptr.add\tr1, r0, stack[@ptr_return_data]\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB23_101\n.BB23_106:\n\tadd\t31, r3, r1\n\tadd\tstack-[5], r0, r2\n\tand\tr1, r2, r2\n\tadd\tr2, r9, r1\n\tsub!\tr1, r2, r2\n\tadd\t0, r0, r2\n\tadd.lt\t1, r0, r2\n\tsub.s!\t@CPI23_11[0], r1, r3\n\tjump.gt\t@.BB23_25\n\tand!\t1, r2, r2\n\tjump.ne\t@.BB23_25\n\tst.1\t64, r1\n\tadd\t@CPI23_12[0], r0, r1\n\tadd\tstack[@returndatasize], r0, r2\n\tsub.s!\t32, r2, r3\n\tadd\tr0, r0, r3\n\tadd.lt\tr1, r0, r3\n\tand\t@CPI23_12[0], r2, r2\n\tsub!\tr2, r0, r4\n\tadd.le\tr0, r0, r1\n\tsub.s!\t@CPI23_12[0], r2, r2\n\tadd.ne\tr3, r0, r1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB23_3\n\tld.1\tr9, r1\n\tsub!\tr1, r0, r2\n\tadd\t0, r0, r2\n\tadd.ne\t1, r0, r2\n\tsub!\tr1, r2, r1\n\tjump.ne\t@.BB23_3\n.BB23_73:\n\tadd\tstack-[13], r0, r4\n\tsub!\tr4, r0, r1\n\tjump.eq\t@.BB23_161\n\tadd\t@CPI23_6[0], r0, r1\n\tsload\tr1, r3\n\tld.1\t64, r2\n\tadd\t100, r2, r1\n\tst.1\tr1, r4\n\tcontext.this\tr1\n\tand\t@CPI23_2[0], r1, r1\n\tadd\t68, r2, r4\n\tst.1\tr4, r1\n\tadd\t32, r2, r1\n\tadd\t@CPI23_21[0], r0, r4\n\tst.1\tr1, r4\n\tadd\t36, r2, r4\n\tadd\tstack-[9], r0, r5\n\tst.1\tr4, r5\n\tadd\t100, r0, r4\n\tst.1\tr2, r4\n\tand\t@CPI23_2[0], r3, r10\n\tsub.s!\t@CPI23_22[0], r2, r3\n\tjump.gt\t@.BB23_25\n\tadd\t160, r2, r9\n\tst.1\t64, r9\n\tsub.s!\t@CPI23_23[0], r2, r3\n\tjump.gt\t@.BB23_25\n\tadd\t224, r2, r3\n\tst.1\t64, r3\n\tadd\t32, r0, r3\n\tadd\tr3, r0, stack-[9]\n\tst.1\tr9, r3\n\tadd\t192, r2, r3\n\tadd\t@CPI23_24[0], r0, r4\n\tst.1\tr3, r4\n\tld.1\tr2, r3\n\tcontext.gas_left\tr2\n\tsub.s!\t4, r10, r4\n\tjump.ne\t@.BB23_131\n\tadd\t1, r0, r2\n\tadd\tstack[@returndatasize], r0, r1\n\tjump\t@.BB23_133\n.BB23_131:\n\tadd\t@CPI23_0[0], r0, r4\n\tsub.s!\t@CPI23_0[0], r1, r5\n\tadd.ge\tr4, r0, r1\n\tshl.s\t64, r1, r1\n\tsub.s!\t@CPI23_0[0], r3, r5\n\tadd.ge\tr4, r0, r3\n\tshl.s\t96, r3, r3\n\tor\tr3, r1, r1\n\tsub.s!\t@CPI23_0[0], r2, r3\n\tadd.ge\tr4, r0, r2\n\tshl.s\t192, r2, r2\n\tor\tr1, r2, r1\n\tadd\tr10, r0, r2\n\tadd\tr9, r0, stack-[8]\n\tadd\tr10, r0, stack-[7]\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tadd\tstack-[7], r0, r10\n\tadd\tstack-[8], r0, r9\n\tand\t1, r2, r2\n\tptr.add\tr1, r0, stack[@ptr_return_data]\n\tshr.s\t96, r1, r1\n\tand\t@CPI23_0[0], r1, stack[@returndatasize]\n\tand\t@CPI23_0[0], r1, r1\n.BB23_133:\n\tadd\t96, r0, r11\n\tsub!\tr1, r0, r3\n\tjump.eq\t@.BB23_134\n\tadd\t63, r1, r3\n\tsub.s\t32, r0, r4\n\tand\tr3, r4, r3\n\tld.1\t64, r11\n\tadd\tr11, r3, r3\n\tsub!\tr3, r11, r4\n\tadd\t0, r0, r4\n\tadd.lt\t1, r0, r4\n\tsub.s!\t@CPI23_11[0], r3, r5\n\tjump.gt\t@.BB23_25\n\tand!\t1, r4, r4\n\tjump.ne\t@.BB23_25\n\tst.1\t64, r3\n\tst.1.inc\tr11, r1, r1\n\tptr.add\tstack[@ptr_return_data], r0, r3\n\tadd\tstack[@returndatasize], r0, r5\n\tand\t31, r5, r4\n\tshr.s!\t5, r5, r5\n\tjump.eq\t@.BB23_165\n\tadd\tr0, r0, r6\n.BB23_152:\n\tshl.s\t5, r6, r7\n\tadd\tr1, r7, r8\n\tptr.add\tr3, r7, r7\n\tld\tr7, r7\n\tst.1\tr8, r7\n\tadd\t1, r6, r6\n\tsub!\tr6, r5, r7\n\tjump.lt\t@.BB23_152\n.BB23_165:\n\tsub!\tr4, r0, r6\n\tjump.eq\t@.BB23_134\n\tshl.s\t5, r5, r5\n\tptr.add\tr3, r5, r3\n\tadd\tr1, r5, r1\n\tshl.s\t3, r4, r4\n\tld.1\tr1, r5\n\tshl\tr5, r4, r5\n\tshr\tr5, r4, r5\n\tld\tr3, r3\n\tsub\t256, r4, r4\n\tshr\tr3, r4, r3\n\tshl\tr3, r4, r3\n\tor\tr3, r5, r3\n\tst.1\tr1, r3\n.BB23_134:\n\tld.1.inc\tr11, r1, r5\n\tsub!\tr2, r0, r2\n\tjump.eq\t@.BB23_135\n\tsub!\tr1, r0, r2\n\tjump.ne\t@.BB23_154\n\tadd\tr11, r0, stack-[7]\n\tadd\t@CPI23_7[0], r0, r1\n\tst.2\t0, r1\n\tst.2\t4, r10\n\tadd\t@CPI23_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI23_0[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI23_8[0], r1, r1\n\tadd\t32770, r0, r2\n\tadd\tr5, r0, stack-[8]\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tadd\tstack-[8], r0, r5\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB23_3\n\tld\tr1, r1\n\tsub!\tr1, r0, r1\n\tadd\tstack-[7], r0, r1\n\tjump.eq\t@.BB23_146\n\tld.1\tr1, r1\n\tsub!\tr1, r0, r2\n\tjump.eq\t@.BB23_158\n.BB23_154:\n\tadd\t@CPI23_12[0], r0, r2\n\tsub.s!\t32, r1, r3\n\tadd\tr0, r0, r3\n\tadd.lt\tr2, r0, r3\n\tand\t@CPI23_12[0], r1, r1\n\tsub!\tr1, r0, r4\n\tadd.le\tr0, r0, r2\n\tsub.s!\t@CPI23_12[0], r1, r1\n\tadd\tr3, r0, r1\n\tadd.eq\tr2, r0, r1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB23_3\n\tld.1\tr5, r1\n\tsub!\tr1, r0, r2\n\tadd\t0, r0, r2\n\tadd.ne\t1, r0, r2\n\tsub!\tr1, r2, r2\n\tjump.ne\t@.BB23_3\n\tsub!\tr1, r0, r1\n\tjump.eq\t@.BB23_157\n.BB23_158:\n\tsub.s\t1, r0, r1\n\tadd\tstack-[13], r0, r2\n\txor\tr2, r1, r1\n\tadd\t@CPI23_29[0], r0, r2\n\tsload\tr2, r2\n\tsub!\tr2, r1, r3\n\tjump.gt\t@.BB23_31\n\tadd\tstack-[13], r0, r3\n\tadd\tr2, r3, r2\n\tadd\t@CPI23_29[0], r0, r3\n\tsstore\tr3, r2\n\tadd\tstack-[12], r0, r2\n\tsload\tr2, r2\n\tsub!\tr2, r1, r1\n\tjump.gt\t@.BB23_31\n\tadd\tstack-[13], r0, r1\n\tadd\tr2, r1, r1\n\tadd\tstack-[12], r0, r2\n\tsstore\tr2, r1\n.BB23_161:\n\tadd\t@CPI23_16[0], r0, r1\n\tsload\tr1, r1\n\tadd\tstack-[12], r0, r2\n\tsload\tr2, r2\n\tsub!\tr2, r0, r3\n\tjump.eq\t@.BB23_163\n\tsub.s\t1, r0, r3\n\tdiv\tr3, r2, r3, r4\n\tsub!\tr3, r1, r3\n\tjump.lt\t@.BB23_31\n.BB23_163:\n\tmul\tr1, r2, r1, r2\n\tdiv.s\t@CPI23_18[0], r1, r1, r2\n\tadd\tstack-[11], r0, r2\n\tsstore\tr2, r1\n\tld.1\t64, r1\n\tadd\t@CPI23_0[0], r0, r2\n\tcontext.gas_left\tr3\n\tsub.s!\t@CPI23_0[0], r3, r4\n\tadd.ge\tr2, r0, r3\n\tsub.s!\t@CPI23_0[0], r1, r4\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tshl.s\t192, r3, r2\n\tor\tr2, r1, r1\n\tor\t@CPI23_32[0], r1, r1\n\tadd\t32781, r0, r2\n\tadd\t4, r0, r3\n\tadd\t@CPI23_33[0], r0, r4\n\tadd\tstack-[10], r0, r5\n\tadd\tr0, r0, r6\n\tadd\tstack-[13], r0, r7\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r1\n\tjump.eq\t@.BB23_3\n\tret\n.BB23_3:\n\tadd\tr0, r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB23_31:\n\tadd\t@CPI23_19[0], r0, r1\n\tst.1\t0, r1\n\tadd\t17, r0, r1\n\tst.1\t4, r1\n\tadd\t@CPI23_10[0], r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB23_25:\n\tadd\t@CPI23_19[0], r0, r1\n\tst.1\t0, r1\n\tadd\t65, r0, r1\n\tst.1\t4, r1\n\tadd\t@CPI23_10[0], r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB23_1:\n\tadd\t@CPI23_19[0], r0, r1\n\tst.1\t0, r1\n\tadd\t50, r0, r1\n\tst.1\t4, r1\n\tadd\t@CPI23_10[0], r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB23_135:\n\tsub!\tr1, r0, r2\n\tjump.ne\t@.BB23_142\n\tld.1\t64, r1\n\tadd\t@CPI23_27[0], r0, r2\n\tst.1\tr1, r2\n\tadd\t4, r1, r2\n\tadd\tstack-[9], r0, r3\n\tst.1\tr2, r3\n\tld.1\tr9, r2\n\tadd\t36, r1, r3\n\tst.1\tr3, r2\n\tsub!\tr2, r0, r3\n\tjump.eq\t@.BB23_141\n\tadd\t68, r1, r3\n\tadd\tr0, r0, r4\n.BB23_138:\n\tadd\tr4, r3, r5\n\tadd\t32, r4, r4\n\tadd\tr4, r9, r6\n\tld.1\tr6, r6\n\tst.1\tr5, r6\n\tsub!\tr4, r2, r5\n\tjump.lt\t@.BB23_138\n\tsub!\tr4, r2, r4\n\tjump.le\t@.BB23_141\n\tadd\tr2, r3, r3\n\tst.1\tr3, r0\n.BB23_141:\n\tadd\t31, r2, r2\n\tsub.s\t32, r0, r3\n\tand\tr2, r3, r2\n\tadd\t68, r2, r2\n\tadd\t@CPI23_0[0], r0, r3\n\tsub.s!\t@CPI23_0[0], r2, r4\n\tadd.ge\tr3, r0, r2\n\tsub.s!\t@CPI23_0[0], r1, r4\n\tadd.ge\tr3, r0, r1\n\tshl.s\t64, r1, r1\n\tshl.s\t96, r2, r2\n\tor\tr2, r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB23_157:\n\tld.1\t64, r1\n\tadd\t100, r1, r2\n\tadd\t@CPI23_25[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t68, r1, r2\n\tadd\t@CPI23_26[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t36, r1, r2\n\tadd\t42, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI23_27[0], r0, r2\n\tst.1\tr1, r2\n\tadd\t4, r1, r2\n\tadd\tstack-[9], r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI23_0[0], r0, r2\n\tsub.s!\t@CPI23_0[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI23_28[0], r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB23_39:\n\tadd\t@CPI23_19[0], r0, r1\n\tst.1\t0, r1\n\tadd\t18, r0, r1\n\tst.1\t4, r1\n\tadd\t@CPI23_10[0], r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB23_142:\n\tadd\t@CPI23_0[0], r0, r2\n\tsub.s!\t@CPI23_0[0], r5, r3\n\tadd\tr2, r0, r3\n\tadd.lt\tr5, r0, r3\n\tsub.s!\t@CPI23_0[0], r1, r4\n\tadd.ge\tr2, r0, r1\n\tshl.s\t96, r1, r1\n\tshl.s\t64, r3, r2\n\tor\tr1, r2, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB23_18:\n\tld.1\t64, r2\n\tand\t31, r3, r4\n\tshr.s!\t5, r3, r3\n\tjump.eq\t@.BB23_174\n\tadd\tr0, r0, r5\n.BB23_20:\n\tshl.s\t5, r5, r6\n\tadd\tr2, r6, r7\n\tptr.add\tr1, r6, r6\n\tld\tr6, r6\n\tst.1\tr7, r6\n\tadd\t1, r5, r5\n\tsub!\tr5, r3, r6\n\tjump.lt\t@.BB23_20\n.BB23_174:\n\tsub!\tr4, r0, r5\n\tjump.eq\t@.BB23_22\n\tshl.s\t5, r3, r3\n\tptr.add\tr1, r3, r1\n\tadd\tr2, r3, r3\n\tshl.s\t3, r4, r4\n\tld.1\tr3, r5\n\tshl\tr5, r4, r5\n\tshr\tr5, r4, r5\n\tld\tr1, r1\n\tsub\t256, r4, r4\n\tshr\tr1, r4, r1\n\tshl\tr1, r4, r1\n\tor\tr1, r5, r1\n\tst.1\tr3, r1\n.BB23_22:\n\tadd\t@CPI23_0[0], r0, r1\n\tadd\tstack[@returndatasize], r0, r3\n\tsub.s!\t@CPI23_0[0], r3, r4\n\tadd.ge\tr1, r0, r3\n\tsub.s!\t@CPI23_0[0], r2, r4\n\tadd.lt\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tshl.s\t96, r3, r2\n\tor\tr2, r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB23_146:\n\tld.1\t64, r1\n\tadd\t68, r1, r2\n\tadd\t@CPI23_30[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t36, r1, r2\n\tadd\t29, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI23_27[0], r0, r2\n\tst.1\tr1, r2\n\tadd\t4, r1, r2\n\tadd\tstack-[9], r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI23_0[0], r0, r2\n\tsub.s!\t@CPI23_0[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI23_31[0], r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB23_45:\n\tld.1\t64, r2\n\tand\t31, r4, r3\n\tshr.s!\t5, r4, r4\n\tjump.eq\t@.BB23_173\n\tadd\tr0, r0, r5\n.BB23_47:\n\tshl.s\t5, r5, r6\n\tadd\tr2, r6, r7\n\tptr.add\tr1, r6, r6\n\tld\tr6, r6\n\tst.1\tr7, r6\n\tadd\t1, r5, r5\n\tsub!\tr5, r4, r6\n\tjump.lt\t@.BB23_47\n.BB23_173:\n\tsub!\tr3, r0, r5\n\tjump.eq\t@.BB23_49\n\tshl.s\t5, r4, r4\n\tptr.add\tr1, r4, r1\n\tadd\tr2, r4, r4\n\tshl.s\t3, r3, r3\n\tld.1\tr4, r5\n\tshl\tr5, r3, r5\n\tshr\tr5, r3, r5\n\tld\tr1, r1\n\tsub\t256, r3, r3\n\tshr\tr1, r3, r1\n\tshl\tr1, r3, r1\n\tor\tr1, r5, r1\n\tst.1\tr4, r1\n.BB23_49:\n\tadd\t@CPI23_0[0], r0, r1\n\tadd\tstack[@returndatasize], r0, r3\n\tsub.s!\t@CPI23_0[0], r3, r4\n\tadd.ge\tr1, r0, r3\n\tsub.s!\t@CPI23_0[0], r2, r4\n\tadd.lt\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tshl.s\t96, r3, r2\n\tor\tr2, r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB23_58:\n\tld.1\t64, r2\n\tand\t31, r4, r3\n\tshr.s!\t5, r4, r4\n\tjump.eq\t@.BB23_172\n\tadd\tr0, r0, r5\n.BB23_60:\n\tshl.s\t5, r5, r6\n\tadd\tr2, r6, r7\n\tptr.add\tr1, r6, r6\n\tld\tr6, r6\n\tst.1\tr7, r6\n\tadd\t1, r5, r5\n\tsub!\tr5, r4, r6\n\tjump.lt\t@.BB23_60\n.BB23_172:\n\tsub!\tr3, r0, r5\n\tjump.eq\t@.BB23_62\n\tshl.s\t5, r4, r4\n\tptr.add\tr1, r4, r1\n\tadd\tr2, r4, r4\n\tshl.s\t3, r3, r3\n\tld.1\tr4, r5\n\tshl\tr5, r3, r5\n\tshr\tr5, r3, r5\n\tld\tr1, r1\n\tsub\t256, r3, r3\n\tshr\tr1, r3, r1\n\tshl\tr1, r3, r1\n\tor\tr1, r5, r1\n\tst.1\tr4, r1\n.BB23_62:\n\tadd\t@CPI23_0[0], r0, r1\n\tadd\tstack[@returndatasize], r0, r3\n\tsub.s!\t@CPI23_0[0], r3, r4\n\tadd.ge\tr1, r0, r3\n\tsub.s!\t@CPI23_0[0], r2, r4\n\tadd.lt\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tshl.s\t96, r3, r2\n\tor\tr2, r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB23_83:\n\tld.1\t64, r2\n\tand\t31, r3, r4\n\tshr.s!\t5, r3, r3\n\tjump.eq\t@.BB23_170\n\tadd\tr0, r0, r5\n.BB23_85:\n\tshl.s\t5, r5, r6\n\tadd\tr2, r6, r7\n\tptr.add\tr1, r6, r6\n\tld\tr6, r6\n\tst.1\tr7, r6\n\tadd\t1, r5, r5\n\tsub!\tr5, r3, r6\n\tjump.lt\t@.BB23_85\n.BB23_170:\n\tsub!\tr4, r0, r5\n\tjump.eq\t@.BB23_87\n\tshl.s\t5, r3, r3\n\tptr.add\tr1, r3, r1\n\tadd\tr2, r3, r3\n\tshl.s\t3, r4, r4\n\tld.1\tr3, r5\n\tshl\tr5, r4, r5\n\tshr\tr5, r4, r5\n\tld\tr1, r1\n\tsub\t256, r4, r4\n\tshr\tr1, r4, r1\n\tshl\tr1, r4, r1\n\tor\tr1, r5, r1\n\tst.1\tr3, r1\n.BB23_87:\n\tadd\t@CPI23_0[0], r0, r1\n\tadd\tstack[@returndatasize], r0, r3\n\tsub.s!\t@CPI23_0[0], r3, r4\n\tadd.ge\tr1, r0, r3\n\tsub.s!\t@CPI23_0[0], r2, r4\n\tadd.lt\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tshl.s\t96, r3, r2\n\tor\tr2, r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB23_119:\n\tld.1\t64, r2\n\tand\t31, r3, r4\n\tshr.s!\t5, r3, r3\n\tjump.eq\t@.BB23_166\n\tadd\tr0, r0, r5\n.BB23_121:\n\tshl.s\t5, r5, r6\n\tadd\tr2, r6, r7\n\tptr.add\tr1, r6, r6\n\tld\tr6, r6\n\tst.1\tr7, r6\n\tadd\t1, r5, r5\n\tsub!\tr5, r3, r6\n\tjump.lt\t@.BB23_121\n.BB23_166:\n\tsub!\tr4, r0, r5\n\tjump.eq\t@.BB23_123\n\tshl.s\t5, r3, r3\n\tptr.add\tr1, r3, r1\n\tadd\tr2, r3, r3\n\tshl.s\t3, r4, r4\n\tld.1\tr3, r5\n\tshl\tr5, r4, r5\n\tshr\tr5, r4, r5\n\tld\tr1, r1\n\tsub\t256, r4, r4\n\tshr\tr1, r4, r1\n\tshl\tr1, r4, r1\n\tor\tr1, r5, r1\n\tst.1\tr3, r1\n.BB23_123:\n\tadd\t@CPI23_0[0], r0, r1\n\tadd\tstack[@returndatasize], r0, r3\n\tsub.s!\t@CPI23_0[0], r3, r4\n\tadd.ge\tr1, r0, r3\n\tsub.s!\t@CPI23_0[0], r2, r4\n\tadd.lt\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tshl.s\t96, r3, r2\n\tor\tr2, r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB23_101:\n\tld.1\t64, r2\n\tand\t31, r3, r4\n\tshr.s!\t5, r3, r3\n\tjump.eq\t@.BB23_168\n\tadd\tr0, r0, r5\n.BB23_103:\n\tshl.s\t5, r5, r6\n\tadd\tr2, r6, r7\n\tptr.add\tr1, r6, r6\n\tld\tr6, r6\n\tst.1\tr7, r6\n\tadd\t1, r5, r5\n\tsub!\tr5, r3, r6\n\tjump.lt\t@.BB23_103\n.BB23_168:\n\tsub!\tr4, r0, r5\n\tjump.eq\t@.BB23_105\n\tshl.s\t5, r3, r3\n\tptr.add\tr1, r3, r1\n\tadd\tr2, r3, r3\n\tshl.s\t3, r4, r4\n\tld.1\tr3, r5\n\tshl\tr5, r4, r5\n\tshr\tr5, r4, r5\n\tld\tr1, r1\n\tsub\t256, r4, r4\n\tshr\tr1, r4, r1\n\tshl\tr1, r4, r1\n\tor\tr1, r5, r1\n\tst.1\tr3, r1\n.BB23_105:\n\tadd\t@CPI23_0[0], r0, r1\n\tadd\tstack[@returndatasize], r0, r3\n\tsub.s!\t@CPI23_0[0], r3, r4\n\tadd.ge\tr1, r0, r3\n\tsub.s!\t@CPI23_0[0], r2, r4\n\tadd.lt\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tshl.s\t96, r3, r2\n\tor\tr2, r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.func_end23:\n\nfun_leaveStaking:\n.func_begin24:\n\tnop\tstack+=[13]\n\tadd\tr1, r0, stack-[13]\n\tadd\t5, r0, r2\n\tsload\tr2, r1\n\tsub!\tr1, r0, r1\n\tjump.eq\t@.BB24_1\n\tadd\tr2, r0, stack-[10]\n\tst.1\t0, r0\n\tadd\t6, r0, r1\n\tadd\tr1, r0, stack-[8]\n\tst.1\t32, r1\n\tadd\t@CPI24_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI24_0[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI24_1[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB24_3\n\tld\tr1, r1\n\tcontext.caller\tr2\n\tadd\tr2, r0, stack-[9]\n\tand\t@CPI24_2[0], r2, r2\n\tadd\tr2, r0, stack-[11]\n\tst.1\t0, r2\n\tst.1\t32, r1\n\tadd\t@CPI24_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI24_0[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI24_1[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB24_3\n\tld\tr1, r1\n\tadd\tr1, r0, stack-[12]\n\tsload\tr1, r1\n\tadd\tstack-[13], r0, r2\n\tsub!\tr1, r2, r1\n\tjump.lt\t@.BB24_6\n\tadd\tstack-[10], r0, r2\n\tsload\tr2, r1\n\tsub!\tr1, r0, r1\n\tjump.eq\t@.BB24_1\n\tst.1\t0, r2\n\tadd\t@CPI24_3[0], r0, r1\n\tsload\tr1, r1\n\tadd\tr1, r0, stack-[10]\n\tadd\t@CPI24_4[0], r0, r1\n\tst.2\t0, r1\n\tadd\t@CPI24_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI24_0[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI24_5[0], r1, r1\n\tadd\t32779, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB24_3\n\tld\tr1, r1\n\tadd\tstack-[10], r0, r2\n\tsub!\tr1, r2, r1\n\tjump.le\t@.BB24_71\n\tadd\t@CPI24_6[0], r0, r1\n\tsload\tr1, r1\n\tadd\t@CPI24_7[0], r0, r2\n\tst.2\t0, r2\n\tand\t@CPI24_2[0], r1, r1\n\tadd\tr1, r0, stack-[10]\n\tst.2\t4, r1\n\tadd\t@CPI24_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI24_0[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI24_8[0], r1, r1\n\tadd\t32770, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB24_3\n\tld\tr1, r1\n\tsub!\tr1, r0, r1\n\tjump.eq\t@.BB24_3\n\tld.1\t64, r9\n\tadd\t@CPI24_9[0], r0, r1\n\tst.1\tr9, r1\n\tcontext.this\tr1\n\tand\t@CPI24_2[0], r1, r2\n\tadd\t4, r9, r1\n\tadd\tr2, r0, stack-[6]\n\tst.1\tr1, r2\n\tcontext.gas_left\tr1\n\tadd\tstack-[10], r0, r2\n\tsub.s!\t4, r2, r3\n\tjump.ne\t@.BB24_15\n\tadd\tstack[@returndatasize], r0, r3\n\tjump\t@.BB24_25\n.BB24_15:\n\tadd\t@CPI24_0[0], r0, r4\n\tsub.s!\t@CPI24_0[0], r1, r3\n\tadd.ge\tr4, r0, r1\n\tsub.s!\t@CPI24_0[0], r9, r3\n\tadd\tr4, r0, r3\n\tadd.lt\tr9, r0, r3\n\tshl.s\t64, r3, r3\n\tshl.s\t192, r1, r1\n\tor\tr1, r3, r1\n\tor\t@CPI24_10[0], r1, r1\n\tadd\tr9, r0, stack-[10]\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tadd\tstack-[10], r0, r9\n\tadd\tr1, r0, r3\n\tshr.s\t96, r3, r3\n\tand\t@CPI24_0[0], r3, r3\n\tsub.s!\t32, r3, r4\n\tadd\t32, r0, r5\n\tadd.lt\tr3, r0, r5\n\tand\t31, r5, r4\n\tshr.s!\t5, r5, r5\n\tjump.eq\t@.BB24_176\n\tadd\tr0, r0, r6\n.BB24_17:\n\tshl.s\t5, r6, r7\n\tadd\tr9, r7, r8\n\tptr.add\tr1, r7, r7\n\tld\tr7, r7\n\tst.1\tr8, r7\n\tadd\t1, r6, r6\n\tsub!\tr6, r5, r7\n\tjump.lt\t@.BB24_17\n.BB24_176:\n\tsub!\tr4, r0, r6\n\tjump.eq\t@.BB24_19\n\tshl.s\t5, r5, r5\n\tptr.add\tr1, r5, r6\n\tadd\tr9, r5, r5\n\tshl.s\t3, r4, r4\n\tld.1\tr5, r7\n\tshl\tr7, r4, r7\n\tshr\tr7, r4, r7\n\tld\tr6, r6\n\tsub\t256, r4, r4\n\tshr\tr6, r4, r6\n\tshl\tr6, r4, r4\n\tor\tr4, r7, r4\n\tst.1\tr5, r4\n.BB24_19:\n\tadd\tr3, r0, stack[@returndatasize]\n\tptr.add\tr1, r0, stack[@ptr_return_data]\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB24_20\n.BB24_25:\n\tadd\t31, r3, r1\n\tsub.s\t32, r0, r2\n\tadd\tr2, r0, stack-[8]\n\tand\tr1, r2, r2\n\tadd\tr2, r9, r1\n\tsub!\tr1, r2, r2\n\tadd\t0, r0, r2\n\tadd.lt\t1, r0, r2\n\tsub.s!\t@CPI24_11[0], r1, r3\n\tjump.gt\t@.BB24_27\n\tand!\t1, r2, r2\n\tjump.ne\t@.BB24_27\n\tst.1\t64, r1\n\tadd\t@CPI24_12[0], r0, r1\n\tadd\tstack[@returndatasize], r0, r2\n\tsub.s!\t32, r2, r3\n\tadd\tr0, r0, r3\n\tadd.lt\tr1, r0, r3\n\tand\t@CPI24_12[0], r2, r2\n\tsub!\tr2, r0, r4\n\tadd.le\tr0, r0, r1\n\tsub.s!\t@CPI24_12[0], r2, r2\n\tadd.ne\tr3, r0, r1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB24_3\n\tld.1\tr9, r1\n\tadd\tr1, r0, stack-[10]\n\tadd\t@CPI24_4[0], r0, r1\n\tst.2\t0, r1\n\tadd\t@CPI24_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI24_0[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI24_5[0], r1, r1\n\tadd\t32779, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tadd\tstack-[10], r0, r3\n\tsub!\tr3, r0, r3\n\tjump.eq\t@.BB24_30\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB24_3\n\tadd\t@CPI24_3[0], r0, r2\n\tsload\tr2, r3\n\tld\tr1, r4\n\tsub!\tr4, r3, r1\n\tjump.lt\t@.BB24_33\n\tsub\tr4, r3, r1\n\tadd\t4, r0, r2\n\tsload\tr2, r2\n\tsub!\tr4, r3, r3\n\tjump.eq\t@.BB24_36\n\tsub.s\t1, r0, r3\n\tdiv\tr3, r1, r3, r4\n\tsub!\tr3, r2, r3\n\tjump.lt\t@.BB24_33\n.BB24_36:\n\tmul!\tr2, r1, r1, r2\n\tadd\t3, r0, r2\n\tsload\tr2, r2\n\tjump.eq\t@.BB24_38\n\tsub.s\t1, r0, r3\n\tdiv\tr3, r1, r3, r4\n\tsub!\tr3, r2, r3\n\tjump.lt\t@.BB24_33\n.BB24_38:\n\tmul!\tr2, r1, r3, r1\n\tadd\t@CPI24_13[0], r0, r1\n\tsload\tr1, r4\n\tjump.eq\t@.BB24_40\n\tsub.s\t1, r0, r1\n\tdiv\tr1, r3, r1, r2\n\tsub!\tr1, r4, r1\n\tjump.lt\t@.BB24_33\n.BB24_40:\n\tadd\tr4, r0, stack-[4]\n\tadd\tr3, r0, stack-[5]\n\tadd\t7, r0, r1\n\tsload\tr1, r1\n\tadd\tr1, r0, stack-[3]\n\tsub!\tr1, r0, r1\n\tjump.eq\t@.BB24_41\n\tadd\t2, r0, r1\n\tsload\tr1, r1\n\tadd\tr1, r0, stack-[7]\n\tadd\t1, r0, r1\n\tadd\tr1, r0, stack-[1]\n\tsload\tr1, r1\n\tadd\t@CPI24_7[0], r0, r2\n\tst.2\t0, r2\n\tand\t@CPI24_2[0], r1, r1\n\tadd\tr1, r0, stack-[2]\n\tst.2\t4, r1\n\tadd\t@CPI24_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI24_0[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI24_8[0], r1, r1\n\tadd\t32770, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tadd\tstack-[7], r0, r3\n\tand\t@CPI24_2[0], r3, r3\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB24_3\n\tld\tr1, r1\n\tsub!\tr1, r0, r1\n\tjump.eq\t@.BB24_3\n\tadd\tstack-[5], r0, r1\n\tadd\tstack-[4], r0, r2\n\tmul\tr2, r1, r1, r2\n\tadd\tstack-[3], r0, r2\n\tdiv\tr1, r2, r2, r1\n\tadd\tr2, r0, stack-[7]\n\tdiv.s\t10, r2, r1, r2\n\tld.1\t64, r5\n\tadd\t36, r5, r2\n\tst.1\tr2, r1\n\tadd\t@CPI24_14[0], r0, r1\n\tst.1\tr5, r1\n\tadd\t4, r5, r1\n\tst.1\tr1, r3\n\tcontext.gas_left\tr1\n\tadd\tstack-[2], r0, r2\n\tsub.s!\t4, r2, r3\n\tjump.ne\t@.BB24_46\n\tadd\tstack[@returndatasize], r0, r4\n\tjump\t@.BB24_52\n.BB24_30:\n\tand!\t1, r2, r2\n\tjump.ne\t@.BB24_10\n\tjump\t@.BB24_3\n.BB24_46:\n\tadd\t@CPI24_0[0], r0, r4\n\tsub.s!\t@CPI24_0[0], r1, r3\n\tadd.ge\tr4, r0, r1\n\tsub.s!\t@CPI24_0[0], r5, r3\n\tadd\tr4, r0, r3\n\tadd.lt\tr5, r0, r3\n\tshl.s\t64, r3, r3\n\tshl.s\t192, r1, r1\n\tor\tr1, r3, r1\n\tor\t@CPI24_15[0], r1, r1\n\tadd\tr5, r0, stack-[5]\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tadd\tstack-[5], r0, r5\n\tadd\tr1, r0, r3\n\tshr.s\t96, r3, r3\n\tand\t@CPI24_0[0], r3, stack[@returndatasize]\n\tand\t@CPI24_0[0], r3, r4\n\tptr.add\tr1, r0, stack[@ptr_return_data]\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB24_47\n.BB24_52:\n\tadd\t31, r4, r1\n\tadd\tstack-[8], r0, r2\n\tand\tr1, r2, r2\n\tadd\tr2, r5, r1\n\tsub!\tr1, r2, r2\n\tadd\t0, r0, r2\n\tadd.lt\t1, r0, r2\n\tsub.s!\t@CPI24_11[0], r1, r3\n\tjump.gt\t@.BB24_27\n\tand!\t1, r2, r2\n\tjump.ne\t@.BB24_27\n\tst.1\t64, r1\n\tadd\t@CPI24_12[0], r0, r1\n\tadd\tstack[@returndatasize], r0, r2\n\tsub!\tr2, r0, r3\n\tadd\tr0, r0, r3\n\tadd.lt\tr1, r0, r3\n\tand\t@CPI24_12[0], r2, r2\n\tsub!\tr2, r0, r4\n\tadd.le\tr0, r0, r1\n\tsub.s!\t@CPI24_12[0], r2, r2\n\tadd.ne\tr3, r0, r1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB24_3\n\tadd\tstack-[1], r0, r1\n\tsload\tr1, r1\n\tadd\t@CPI24_7[0], r0, r2\n\tst.2\t0, r2\n\tand\t@CPI24_2[0], r1, r1\n\tadd\tr1, r0, stack-[5]\n\tst.2\t4, r1\n\tadd\t@CPI24_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI24_0[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI24_8[0], r1, r1\n\tadd\t32770, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB24_3\n\tld\tr1, r1\n\tsub!\tr1, r0, r1\n\tjump.eq\t@.BB24_3\n\tld.1\t64, r5\n\tadd\t36, r5, r1\n\tadd\tstack-[7], r0, r2\n\tst.1\tr1, r2\n\tadd\t@CPI24_14[0], r0, r1\n\tst.1\tr5, r1\n\tadd\t4, r5, r1\n\tadd\tstack-[6], r0, r2\n\tst.1\tr1, r2\n\tcontext.gas_left\tr1\n\tadd\tstack-[5], r0, r2\n\tsub.s!\t4, r2, r3\n\tjump.ne\t@.BB24_59\n\tadd\tstack[@returndatasize], r0, r4\n\tjump\t@.BB24_65\n.BB24_59:\n\tadd\t@CPI24_0[0], r0, r4\n\tsub.s!\t@CPI24_0[0], r1, r3\n\tadd.ge\tr4, r0, r1\n\tsub.s!\t@CPI24_0[0], r5, r3\n\tadd\tr4, r0, r3\n\tadd.lt\tr5, r0, r3\n\tshl.s\t64, r3, r3\n\tshl.s\t192, r1, r1\n\tor\tr1, r3, r1\n\tor\t@CPI24_15[0], r1, r1\n\tadd\tr5, r0, stack-[6]\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tadd\tstack-[6], r0, r5\n\tadd\tr1, r0, r3\n\tshr.s\t96, r3, r3\n\tand\t@CPI24_0[0], r3, stack[@returndatasize]\n\tand\t@CPI24_0[0], r3, r4\n\tptr.add\tr1, r0, stack[@ptr_return_data]\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB24_60\n.BB24_65:\n\tadd\t31, r4, r1\n\tadd\tstack-[8], r0, r2\n\tand\tr1, r2, r2\n\tadd\tr2, r5, r1\n\tsub!\tr1, r2, r2\n\tadd\t0, r0, r2\n\tadd.lt\t1, r0, r2\n\tsub.s!\t@CPI24_11[0], r1, r3\n\tjump.gt\t@.BB24_27\n\tand!\t1, r2, r2\n\tjump.ne\t@.BB24_27\n\tst.1\t64, r1\n\tadd\t@CPI24_12[0], r0, r1\n\tadd\tstack[@returndatasize], r0, r2\n\tsub!\tr2, r0, r3\n\tadd\tr0, r0, r3\n\tadd.lt\tr1, r0, r3\n\tand\t@CPI24_12[0], r2, r2\n\tsub!\tr2, r0, r4\n\tadd.le\tr0, r0, r1\n\tsub.s!\t@CPI24_12[0], r2, r2\n\tadd.ne\tr3, r0, r1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB24_3\n\tadd\t@CPI24_16[0], r0, r1\n\tsload\tr1, r1\n\tadd\tstack-[7], r0, r3\n\tsub.s!\t@CPI24_17[0], r3, r2\n\tjump.gt\t@.BB24_33\n\tmul\t@CPI24_18[0], r3, r2, r3\n\tadd\tstack-[10], r0, r3\n\tdiv\tr2, r3, r2, r3\n\tsub.s\t1, r0, r3\n\txor\tr2, r3, r3\n\tsub!\tr1, r3, r3\n\tjump.gt\t@.BB24_33\n\tadd\tr2, r1, r1\n\tadd\t@CPI24_16[0], r0, r2\n\tsstore\tr2, r1\n\tadd\t@CPI24_4[0], r0, r1\n\tst.2\t0, r1\n\tadd\t@CPI24_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI24_0[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI24_5[0], r1, r1\n\tadd\t32779, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB24_3\n.BB24_10:\n\tld\tr1, r1\n\tadd\t@CPI24_3[0], r0, r2\n\tsstore\tr2, r1\n.BB24_71:\n\tadd\t@CPI24_16[0], r0, r1\n\tsload\tr1, r1\n\tadd\tstack-[12], r0, r2\n\tsload\tr2, r2\n\tsub!\tr2, r0, r3\n\tjump.eq\t@.BB24_73\n\tsub.s\t1, r0, r3\n\tdiv\tr3, r2, r3, r4\n\tsub!\tr3, r1, r3\n\tjump.lt\t@.BB24_33\n.BB24_73:\n\tmul\tr1, r2, r1, r2\n\tdiv.s\t@CPI24_18[0], r1, r2, r1\n\tadd\tstack-[12], r0, r1\n\tadd\t1, r1, r1\n\tadd\tr1, r0, stack-[10]\n\tsload\tr1, r3\n\tsub!\tr2, r3, r1\n\tjump.lt\t@.BB24_33\n\tadd\tr2, r0, stack-[7]\n\tadd\tr3, r0, stack-[6]\n\tsub!\tr2, r3, r1\n\tjump.eq\t@.BB24_129\n\tadd\t1, r0, r1\n\tadd\tr1, r0, stack-[4]\n\tsload\tr1, r1\n\tadd\t@CPI24_7[0], r0, r2\n\tst.2\t0, r2\n\tand\t@CPI24_2[0], r1, r1\n\tadd\tr1, r0, stack-[8]\n\tst.2\t4, r1\n\tadd\t@CPI24_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI24_0[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI24_8[0], r1, r1\n\tadd\t32770, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tadd\tstack-[8], r0, r5\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB24_3\n\tld\tr1, r1\n\tsub!\tr1, r0, r1\n\tjump.eq\t@.BB24_3\n\tld.1\t64, r9\n\tadd\t@CPI24_9[0], r0, r1\n\tst.1\tr9, r1\n\tcontext.this\tr1\n\tand\t@CPI24_2[0], r1, r1\n\tadd\t4, r9, r2\n\tst.1\tr2, r1\n\tcontext.gas_left\tr1\n\tsub.s!\t4, r5, r2\n\tjump.ne\t@.BB24_79\n\tadd\tstack[@returndatasize], r0, r3\n\tjump\t@.BB24_89\n.BB24_79:\n\tadd\t@CPI24_0[0], r0, r2\n\tsub.s!\t@CPI24_0[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tsub.s!\t@CPI24_0[0], r9, r3\n\tadd.lt\tr9, r0, r2\n\tshl.s\t64, r2, r2\n\tshl.s\t192, r1, r1\n\tor\tr1, r2, r1\n\tor\t@CPI24_10[0], r1, r1\n\tadd\tr5, r0, r2\n\tadd\tr9, r0, stack-[5]\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tadd\tstack-[5], r0, r9\n\tadd\tr1, r0, r3\n\tshr.s\t96, r3, r3\n\tand\t@CPI24_0[0], r3, r3\n\tsub.s!\t32, r3, r4\n\tadd\t32, r0, r5\n\tadd.lt\tr3, r0, r5\n\tand\t31, r5, r4\n\tshr.s!\t5, r5, r5\n\tjump.eq\t@.BB24_172\n\tadd\tr0, r0, r6\n.BB24_81:\n\tshl.s\t5, r6, r7\n\tadd\tr9, r7, r8\n\tptr.add\tr1, r7, r7\n\tld\tr7, r7\n\tst.1\tr8, r7\n\tadd\t1, r6, r6\n\tsub!\tr6, r5, r7\n\tjump.lt\t@.BB24_81\n.BB24_172:\n\tsub!\tr4, r0, r6\n\tjump.eq\t@.BB24_83\n\tshl.s\t5, r5, r5\n\tptr.add\tr1, r5, r6\n\tadd\tr9, r5, r5\n\tshl.s\t3, r4, r4\n\tld.1\tr5, r7\n\tshl\tr7, r4, r7\n\tshr\tr7, r4, r7\n\tld\tr6, r6\n\tsub\t256, r4, r4\n\tshr\tr6, r4, r6\n\tshl\tr6, r4, r4\n\tor\tr4, r7, r4\n\tst.1\tr5, r4\n.BB24_83:\n\tadd\tr3, r0, stack[@returndatasize]\n\tptr.add\tr1, r0, stack[@ptr_return_data]\n\tand!\t1, r2, r2\n\tadd\tstack-[8], r0, r5\n\tjump.eq\t@.BB24_84\n.BB24_89:\n\tadd\t31, r3, r1\n\tsub.s\t32, r0, r2\n\tadd\tr2, r0, stack-[5]\n\tand\tr1, r2, r2\n\tadd\tr2, r9, r1\n\tsub!\tr1, r2, r2\n\tadd\t0, r0, r2\n\tadd.lt\t1, r0, r2\n\tsub.s!\t@CPI24_11[0], r1, r3\n\tjump.gt\t@.BB24_27\n\tand!\t1, r2, r2\n\tjump.ne\t@.BB24_27\n\tst.1\t64, r1\n\tadd\t@CPI24_12[0], r0, r1\n\tadd\tstack[@returndatasize], r0, r2\n\tsub.s!\t32, r2, r3\n\tadd\tr0, r0, r3\n\tadd.lt\tr1, r0, r3\n\tand\t@CPI24_12[0], r2, r2\n\tsub!\tr2, r0, r4\n\tadd.le\tr0, r0, r1\n\tsub.s!\t@CPI24_12[0], r2, r2\n\tadd.ne\tr3, r0, r1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB24_3\n\tadd\tstack-[7], r0, r1\n\tadd\tstack-[6], r0, r2\n\tsub\tr1, r2, r3\n\tld.1\tr9, r2\n\tsub!\tr2, r3, r1\n\tjump.ge\t@.BB24_93\n\tadd\tr2, r0, stack-[7]\n\tadd\tstack-[4], r0, r1\n\tsload\tr1, r1\n\tadd\t@CPI24_7[0], r0, r2\n\tst.2\t0, r2\n\tand\t@CPI24_2[0], r1, r1\n\tadd\tr1, r0, stack-[8]\n\tst.2\t4, r1\n\tadd\t@CPI24_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI24_0[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI24_8[0], r1, r1\n\tadd\t32770, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB24_3\n\tld\tr1, r1\n\tsub!\tr1, r0, r1\n\tjump.eq\t@.BB24_3\n\tld.1\t64, r9\n\tadd\t36, r9, r1\n\tadd\tstack-[7], r0, r2\n\tst.1\tr1, r2\n\tadd\t@CPI24_20[0], r0, r1\n\tst.1\tr9, r1\n\tadd\t4, r9, r1\n\tadd\tstack-[11], r0, r2\n\tst.1\tr1, r2\n\tcontext.gas_left\tr1\n\tadd\tstack-[8], r0, r2\n\tsub.s!\t4, r2, r3\n\tjump.ne\t@.BB24_115\n\tadd\tstack[@returndatasize], r0, r3\n\tjump\t@.BB24_125\n.BB24_93:\n\tadd\tr3, r0, stack-[7]\n\tadd\t@CPI24_7[0], r0, r1\n\tst.2\t0, r1\n\tst.2\t4, r5\n\tadd\t@CPI24_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI24_0[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI24_8[0], r1, r1\n\tadd\t32770, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tadd\tstack-[8], r0, r4\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB24_3\n\tld\tr1, r1\n\tsub!\tr1, r0, r1\n\tjump.eq\t@.BB24_3\n\tld.1\t64, r9\n\tadd\t36, r9, r1\n\tadd\tstack-[7], r0, r2\n\tst.1\tr1, r2\n\tadd\t@CPI24_20[0], r0, r1\n\tst.1\tr9, r1\n\tadd\t4, r9, r1\n\tadd\tstack-[11], r0, r2\n\tst.1\tr1, r2\n\tcontext.gas_left\tr1\n\tsub.s!\t4, r4, r2\n\tjump.ne\t@.BB24_97\n\tadd\tstack[@returndatasize], r0, r3\n\tjump\t@.BB24_107\n.BB24_115:\n\tadd\t@CPI24_0[0], r0, r4\n\tsub.s!\t@CPI24_0[0], r1, r3\n\tadd.ge\tr4, r0, r1\n\tsub.s!\t@CPI24_0[0], r9, r3\n\tadd\tr4, r0, r3\n\tadd.lt\tr9, r0, r3\n\tshl.s\t64, r3, r3\n\tshl.s\t192, r1, r1\n\tor\tr1, r3, r1\n\tor\t@CPI24_15[0], r1, r1\n\tadd\tr9, r0, stack-[8]\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tadd\tstack-[8], r0, r9\n\tadd\tr1, r0, r3\n\tshr.s\t96, r3, r3\n\tand\t@CPI24_0[0], r3, r3\n\tsub.s!\t32, r3, r4\n\tadd\t32, r0, r5\n\tadd.lt\tr3, r0, r5\n\tand\t31, r5, r4\n\tshr.s!\t5, r5, r5\n\tjump.eq\t@.BB24_168\n\tadd\tr0, r0, r6\n.BB24_117:\n\tshl.s\t5, r6, r7\n\tadd\tr9, r7, r8\n\tptr.add\tr1, r7, r7\n\tld\tr7, r7\n\tst.1\tr8, r7\n\tadd\t1, r6, r6\n\tsub!\tr6, r5, r7\n\tjump.lt\t@.BB24_117\n.BB24_168:\n\tsub!\tr4, r0, r6\n\tjump.eq\t@.BB24_119\n\tshl.s\t5, r5, r5\n\tptr.add\tr1, r5, r6\n\tadd\tr9, r5, r5\n\tshl.s\t3, r4, r4\n\tld.1\tr5, r7\n\tshl\tr7, r4, r7\n\tshr\tr7, r4, r7\n\tld\tr6, r6\n\tsub\t256, r4, r4\n\tshr\tr6, r4, r6\n\tshl\tr6, r4, r4\n\tor\tr4, r7, r4\n\tst.1\tr5, r4\n.BB24_119:\n\tadd\tr3, r0, stack[@returndatasize]\n\tptr.add\tr1, r0, stack[@ptr_return_data]\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB24_120\n.BB24_125:\n\tadd\t31, r3, r1\n\tadd\tstack-[5], r0, r2\n\tand\tr1, r2, r2\n\tadd\tr2, r9, r1\n\tsub!\tr1, r2, r2\n\tadd\t0, r0, r2\n\tadd.lt\t1, r0, r2\n\tsub.s!\t@CPI24_11[0], r1, r3\n\tjump.gt\t@.BB24_27\n\tand!\t1, r2, r2\n\tjump.ne\t@.BB24_27\n\tst.1\t64, r1\n\tadd\t@CPI24_12[0], r0, r1\n\tadd\tstack[@returndatasize], r0, r2\n\tsub.s!\t32, r2, r3\n\tadd\tr0, r0, r3\n\tadd.lt\tr1, r0, r3\n\tand\t@CPI24_12[0], r2, r2\n\tsub!\tr2, r0, r4\n\tadd.le\tr0, r0, r1\n\tsub.s!\t@CPI24_12[0], r2, r2\n\tadd.ne\tr3, r0, r1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB24_3\n\tld.1\tr9, r1\n\tsub!\tr1, r0, r2\n\tadd\t0, r0, r2\n\tadd.ne\t1, r0, r2\n\tsub!\tr1, r2, r1\n\tjump.eq\t@.BB24_129\n\tjump\t@.BB24_3\n.BB24_97:\n\tadd\t@CPI24_0[0], r0, r2\n\tsub.s!\t@CPI24_0[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tsub.s!\t@CPI24_0[0], r9, r3\n\tadd.lt\tr9, r0, r2\n\tshl.s\t64, r2, r2\n\tshl.s\t192, r1, r1\n\tor\tr1, r2, r1\n\tor\t@CPI24_15[0], r1, r1\n\tadd\tr4, r0, r2\n\tadd\tr9, r0, stack-[8]\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tadd\tstack-[8], r0, r9\n\tadd\tr1, r0, r3\n\tshr.s\t96, r3, r3\n\tand\t@CPI24_0[0], r3, r3\n\tsub.s!\t32, r3, r4\n\tadd\t32, r0, r5\n\tadd.lt\tr3, r0, r5\n\tand\t31, r5, r4\n\tshr.s!\t5, r5, r5\n\tjump.eq\t@.BB24_170\n\tadd\tr0, r0, r6\n.BB24_99:\n\tshl.s\t5, r6, r7\n\tadd\tr9, r7, r8\n\tptr.add\tr1, r7, r7\n\tld\tr7, r7\n\tst.1\tr8, r7\n\tadd\t1, r6, r6\n\tsub!\tr6, r5, r7\n\tjump.lt\t@.BB24_99\n.BB24_170:\n\tsub!\tr4, r0, r6\n\tjump.eq\t@.BB24_101\n\tshl.s\t5, r5, r5\n\tptr.add\tr1, r5, r6\n\tadd\tr9, r5, r5\n\tshl.s\t3, r4, r4\n\tld.1\tr5, r7\n\tshl\tr7, r4, r7\n\tshr\tr7, r4, r7\n\tld\tr6, r6\n\tsub\t256, r4, r4\n\tshr\tr6, r4, r6\n\tshl\tr6, r4, r4\n\tor\tr4, r7, r4\n\tst.1\tr5, r4\n.BB24_101:\n\tadd\tr3, r0, stack[@returndatasize]\n\tptr.add\tr1, r0, stack[@ptr_return_data]\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB24_102\n.BB24_107:\n\tadd\t31, r3, r1\n\tadd\tstack-[5], r0, r2\n\tand\tr1, r2, r2\n\tadd\tr2, r9, r1\n\tsub!\tr1, r2, r2\n\tadd\t0, r0, r2\n\tadd.lt\t1, r0, r2\n\tsub.s!\t@CPI24_11[0], r1, r3\n\tjump.gt\t@.BB24_27\n\tand!\t1, r2, r2\n\tjump.ne\t@.BB24_27\n\tst.1\t64, r1\n\tadd\t@CPI24_12[0], r0, r1\n\tadd\tstack[@returndatasize], r0, r2\n\tsub.s!\t32, r2, r3\n\tadd\tr0, r0, r3\n\tadd.lt\tr1, r0, r3\n\tand\t@CPI24_12[0], r2, r2\n\tsub!\tr2, r0, r4\n\tadd.le\tr0, r0, r1\n\tsub.s!\t@CPI24_12[0], r2, r2\n\tadd.ne\tr3, r0, r1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB24_3\n\tld.1\tr9, r1\n\tsub!\tr1, r0, r2\n\tadd\t0, r0, r2\n\tadd.ne\t1, r0, r2\n\tsub!\tr1, r2, r1\n\tjump.ne\t@.BB24_3\n.BB24_129:\n\tadd\tstack-[13], r0, r1\n\tsub!\tr1, r0, r1\n\tjump.eq\t@.BB24_162\n\tadd\t@CPI24_21[0], r0, r1\n\tsload\tr1, r1\n\tadd\tstack-[13], r0, r2\n\tsub!\tr1, r2, r2\n\tjump.lt\t@.BB24_33\n\tadd\tstack-[13], r0, r3\n\tsub\tr1, r3, r1\n\tadd\t@CPI24_21[0], r0, r2\n\tsstore\tr2, r1\n\tadd\tstack-[12], r0, r1\n\tsload\tr1, r1\n\tsub!\tr1, r3, r2\n\tjump.lt\t@.BB24_33\n\tadd\tstack-[13], r0, r4\n\tsub\tr1, r4, r1\n\tadd\tstack-[12], r0, r2\n\tsstore\tr2, r1\n\tadd\t@CPI24_6[0], r0, r1\n\tsload\tr1, r3\n\tld.1\t64, r2\n\tadd\t68, r2, r1\n\tst.1\tr1, r4\n\tadd\t32, r2, r1\n\tadd\t@CPI24_20[0], r0, r4\n\tst.1\tr1, r4\n\tadd\t36, r2, r4\n\tadd\tstack-[11], r0, r5\n\tst.1\tr4, r5\n\tadd\t68, r0, r4\n\tst.1\tr2, r4\n\tand\t@CPI24_2[0], r3, r10\n\tsub.s!\t@CPI24_22[0], r2, r3\n\tjump.gt\t@.BB24_27\n\tadd\t128, r2, r9\n\tst.1\t64, r9\n\tsub.s!\t@CPI24_23[0], r9, r3\n\tjump.gt\t@.BB24_27\n\tadd\t192, r2, r3\n\tst.1\t64, r3\n\tadd\t32, r0, r3\n\tadd\tr3, r0, stack-[11]\n\tst.1\tr9, r3\n\tadd\t160, r2, r3\n\tadd\t@CPI24_24[0], r0, r4\n\tst.1\tr3, r4\n\tld.1\tr2, r3\n\tcontext.gas_left\tr2\n\tsub.s!\t4, r10, r4\n\tjump.ne\t@.BB24_135\n\tadd\t1, r0, r2\n\tadd\tstack[@returndatasize], r0, r1\n\tjump\t@.BB24_137\n.BB24_135:\n\tadd\t@CPI24_0[0], r0, r4\n\tsub.s!\t@CPI24_0[0], r1, r5\n\tadd.ge\tr4, r0, r1\n\tshl.s\t64, r1, r1\n\tsub.s!\t@CPI24_0[0], r3, r5\n\tadd.ge\tr4, r0, r3\n\tshl.s\t96, r3, r3\n\tor\tr3, r1, r1\n\tsub.s!\t@CPI24_0[0], r2, r3\n\tadd.ge\tr4, r0, r2\n\tshl.s\t192, r2, r2\n\tor\tr1, r2, r1\n\tadd\tr10, r0, r2\n\tadd\tr9, r0, stack-[8]\n\tadd\tr10, r0, stack-[7]\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tadd\tstack-[7], r0, r10\n\tadd\tstack-[8], r0, r9\n\tand\t1, r2, r2\n\tptr.add\tr1, r0, stack[@ptr_return_data]\n\tshr.s\t96, r1, r1\n\tand\t@CPI24_0[0], r1, stack[@returndatasize]\n\tand\t@CPI24_0[0], r1, r1\n.BB24_137:\n\tadd\t96, r0, r11\n\tsub!\tr1, r0, r3\n\tjump.eq\t@.BB24_138\n\tadd\t63, r1, r3\n\tsub.s\t32, r0, r4\n\tand\tr3, r4, r3\n\tld.1\t64, r11\n\tadd\tr11, r3, r3\n\tsub!\tr3, r11, r4\n\tadd\t0, r0, r4\n\tadd.lt\t1, r0, r4\n\tsub.s!\t@CPI24_11[0], r3, r5\n\tjump.gt\t@.BB24_27\n\tand!\t1, r4, r4\n\tjump.ne\t@.BB24_27\n\tst.1\t64, r3\n\tst.1.inc\tr11, r1, r1\n\tptr.add\tstack[@ptr_return_data], r0, r3\n\tadd\tstack[@returndatasize], r0, r5\n\tand\t31, r5, r4\n\tshr.s!\t5, r5, r5\n\tjump.eq\t@.BB24_166\n\tadd\tr0, r0, r6\n.BB24_156:\n\tshl.s\t5, r6, r7\n\tadd\tr1, r7, r8\n\tptr.add\tr3, r7, r7\n\tld\tr7, r7\n\tst.1\tr8, r7\n\tadd\t1, r6, r6\n\tsub!\tr6, r5, r7\n\tjump.lt\t@.BB24_156\n.BB24_166:\n\tsub!\tr4, r0, r6\n\tjump.eq\t@.BB24_138\n\tshl.s\t5, r5, r5\n\tptr.add\tr3, r5, r3\n\tadd\tr1, r5, r1\n\tshl.s\t3, r4, r4\n\tld.1\tr1, r5\n\tshl\tr5, r4, r5\n\tshr\tr5, r4, r5\n\tld\tr3, r3\n\tsub\t256, r4, r4\n\tshr\tr3, r4, r3\n\tshl\tr3, r4, r3\n\tor\tr3, r5, r3\n\tst.1\tr1, r3\n.BB24_138:\n\tld.1.inc\tr11, r1, r5\n\tsub!\tr2, r0, r2\n\tjump.eq\t@.BB24_139\n\tsub!\tr1, r0, r2\n\tjump.ne\t@.BB24_158\n\tadd\tr11, r0, stack-[7]\n\tadd\t@CPI24_7[0], r0, r1\n\tst.2\t0, r1\n\tst.2\t4, r10\n\tadd\t@CPI24_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI24_0[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI24_8[0], r1, r1\n\tadd\t32770, r0, r2\n\tadd\tr5, r0, stack-[8]\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tadd\tstack-[8], r0, r5\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB24_3\n\tld\tr1, r1\n\tsub!\tr1, r0, r1\n\tadd\tstack-[7], r0, r1\n\tjump.eq\t@.BB24_150\n\tld.1\tr1, r1\n\tsub!\tr1, r0, r2\n\tjump.eq\t@.BB24_162\n.BB24_158:\n\tadd\t@CPI24_12[0], r0, r2\n\tsub.s!\t32, r1, r3\n\tadd\tr0, r0, r3\n\tadd.lt\tr2, r0, r3\n\tand\t@CPI24_12[0], r1, r1\n\tsub!\tr1, r0, r4\n\tadd.le\tr0, r0, r2\n\tsub.s!\t@CPI24_12[0], r1, r1\n\tadd\tr3, r0, r1\n\tadd.eq\tr2, r0, r1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB24_3\n\tld.1\tr5, r1\n\tsub!\tr1, r0, r2\n\tadd\t0, r0, r2\n\tadd.ne\t1, r0, r2\n\tsub!\tr1, r2, r2\n\tjump.ne\t@.BB24_3\n\tsub!\tr1, r0, r1\n\tjump.eq\t@.BB24_161\n.BB24_162:\n\tadd\t@CPI24_16[0], r0, r1\n\tsload\tr1, r1\n\tadd\tstack-[12], r0, r2\n\tsload\tr2, r2\n\tsub!\tr2, r0, r3\n\tjump.eq\t@.BB24_164\n\tsub.s\t1, r0, r3\n\tdiv\tr3, r2, r3, r4\n\tsub!\tr3, r1, r3\n\tjump.lt\t@.BB24_33\n.BB24_164:\n\tmul\tr1, r2, r1, r2\n\tdiv.s\t@CPI24_18[0], r1, r1, r2\n\tadd\tstack-[10], r0, r2\n\tsstore\tr2, r1\n\tld.1\t64, r1\n\tadd\tstack-[13], r0, r2\n\tst.1\tr1, r2\n\tadd\t@CPI24_0[0], r0, r2\n\tcontext.gas_left\tr3\n\tsub.s!\t@CPI24_0[0], r3, r4\n\tadd.ge\tr2, r0, r3\n\tsub.s!\t@CPI24_0[0], r1, r4\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tshl.s\t192, r3, r2\n\tor\tr2, r1, r1\n\tor\t@CPI24_31[0], r1, r1\n\tadd\t32781, r0, r2\n\tadd\t3, r0, r3\n\tadd\t@CPI24_32[0], r0, r4\n\tadd\tstack-[9], r0, r5\n\tadd\tr0, r0, r6\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r1\n\tjump.eq\t@.BB24_3\n\tret\n.BB24_3:\n\tadd\tr0, r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB24_33:\n\tadd\t@CPI24_19[0], r0, r1\n\tst.1\t0, r1\n\tadd\t17, r0, r1\n\tst.1\t4, r1\n\tadd\t@CPI24_10[0], r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB24_27:\n\tadd\t@CPI24_19[0], r0, r1\n\tst.1\t0, r1\n\tadd\t65, r0, r1\n\tst.1\t4, r1\n\tadd\t@CPI24_10[0], r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB24_1:\n\tadd\t@CPI24_19[0], r0, r1\n\tst.1\t0, r1\n\tadd\t50, r0, r1\n\tst.1\t4, r1\n\tadd\t@CPI24_10[0], r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB24_6:\n\tld.1\t64, r1\n\tadd\t68, r1, r2\n\tadd\t@CPI24_33[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t36, r1, r2\n\tadd\tstack-[8], r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI24_27[0], r0, r2\n\tst.1\tr1, r2\n\tadd\t4, r1, r2\n\tadd\t32, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI24_0[0], r0, r2\n\tsub.s!\t@CPI24_0[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI24_30[0], r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB24_139:\n\tsub!\tr1, r0, r2\n\tjump.ne\t@.BB24_146\n\tld.1\t64, r1\n\tadd\t@CPI24_27[0], r0, r2\n\tst.1\tr1, r2\n\tadd\t4, r1, r2\n\tadd\tstack-[11], r0, r3\n\tst.1\tr2, r3\n\tld.1\tr9, r2\n\tadd\t36, r1, r3\n\tst.1\tr3, r2\n\tsub!\tr2, r0, r3\n\tjump.eq\t@.BB24_145\n\tadd\t68, r1, r3\n\tadd\tr0, r0, r4\n.BB24_142:\n\tadd\tr4, r3, r5\n\tadd\t32, r4, r4\n\tadd\tr4, r9, r6\n\tld.1\tr6, r6\n\tst.1\tr5, r6\n\tsub!\tr4, r2, r5\n\tjump.lt\t@.BB24_142\n\tsub!\tr4, r2, r4\n\tjump.le\t@.BB24_145\n\tadd\tr2, r3, r3\n\tst.1\tr3, r0\n.BB24_145:\n\tadd\t31, r2, r2\n\tsub.s\t32, r0, r3\n\tand\tr2, r3, r2\n\tadd\t68, r2, r2\n\tadd\t@CPI24_0[0], r0, r3\n\tsub.s!\t@CPI24_0[0], r2, r4\n\tadd.ge\tr3, r0, r2\n\tsub.s!\t@CPI24_0[0], r1, r4\n\tadd.ge\tr3, r0, r1\n\tshl.s\t64, r1, r1\n\tshl.s\t96, r2, r2\n\tor\tr2, r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB24_161:\n\tld.1\t64, r1\n\tadd\t100, r1, r2\n\tadd\t@CPI24_25[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t68, r1, r2\n\tadd\t@CPI24_26[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t36, r1, r2\n\tadd\t42, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI24_27[0], r0, r2\n\tst.1\tr1, r2\n\tadd\t4, r1, r2\n\tadd\tstack-[11], r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI24_0[0], r0, r2\n\tsub.s!\t@CPI24_0[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI24_28[0], r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB24_41:\n\tadd\t@CPI24_19[0], r0, r1\n\tst.1\t0, r1\n\tadd\t18, r0, r1\n\tst.1\t4, r1\n\tadd\t@CPI24_10[0], r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB24_146:\n\tadd\t@CPI24_0[0], r0, r2\n\tsub.s!\t@CPI24_0[0], r5, r3\n\tadd\tr2, r0, r3\n\tadd.lt\tr5, r0, r3\n\tsub.s!\t@CPI24_0[0], r1, r4\n\tadd.ge\tr2, r0, r1\n\tshl.s\t96, r1, r1\n\tshl.s\t64, r3, r2\n\tor\tr1, r2, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB24_20:\n\tld.1\t64, r2\n\tand\t31, r3, r4\n\tshr.s!\t5, r3, r3\n\tjump.eq\t@.BB24_175\n\tadd\tr0, r0, r5\n.BB24_22:\n\tshl.s\t5, r5, r6\n\tadd\tr2, r6, r7\n\tptr.add\tr1, r6, r6\n\tld\tr6, r6\n\tst.1\tr7, r6\n\tadd\t1, r5, r5\n\tsub!\tr5, r3, r6\n\tjump.lt\t@.BB24_22\n.BB24_175:\n\tsub!\tr4, r0, r5\n\tjump.eq\t@.BB24_24\n\tshl.s\t5, r3, r3\n\tptr.add\tr1, r3, r1\n\tadd\tr2, r3, r3\n\tshl.s\t3, r4, r4\n\tld.1\tr3, r5\n\tshl\tr5, r4, r5\n\tshr\tr5, r4, r5\n\tld\tr1, r1\n\tsub\t256, r4, r4\n\tshr\tr1, r4, r1\n\tshl\tr1, r4, r1\n\tor\tr1, r5, r1\n\tst.1\tr3, r1\n.BB24_24:\n\tadd\t@CPI24_0[0], r0, r1\n\tadd\tstack[@returndatasize], r0, r3\n\tsub.s!\t@CPI24_0[0], r3, r4\n\tadd.ge\tr1, r0, r3\n\tsub.s!\t@CPI24_0[0], r2, r4\n\tadd.lt\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tshl.s\t96, r3, r2\n\tor\tr2, r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB24_84:\n\tld.1\t64, r2\n\tand\t31, r3, r4\n\tshr.s!\t5, r3, r3\n\tjump.eq\t@.BB24_171\n\tadd\tr0, r0, r5\n.BB24_86:\n\tshl.s\t5, r5, r6\n\tadd\tr2, r6, r7\n\tptr.add\tr1, r6, r6\n\tld\tr6, r6\n\tst.1\tr7, r6\n\tadd\t1, r5, r5\n\tsub!\tr5, r3, r6\n\tjump.lt\t@.BB24_86\n.BB24_171:\n\tsub!\tr4, r0, r5\n\tjump.eq\t@.BB24_88\n\tshl.s\t5, r3, r3\n\tptr.add\tr1, r3, r1\n\tadd\tr2, r3, r3\n\tshl.s\t3, r4, r4\n\tld.1\tr3, r5\n\tshl\tr5, r4, r5\n\tshr\tr5, r4, r5\n\tld\tr1, r1\n\tsub\t256, r4, r4\n\tshr\tr1, r4, r1\n\tshl\tr1, r4, r1\n\tor\tr1, r5, r1\n\tst.1\tr3, r1\n.BB24_88:\n\tadd\t@CPI24_0[0], r0, r1\n\tadd\tstack[@returndatasize], r0, r3\n\tsub.s!\t@CPI24_0[0], r3, r4\n\tadd.ge\tr1, r0, r3\n\tsub.s!\t@CPI24_0[0], r2, r4\n\tadd.lt\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tshl.s\t96, r3, r2\n\tor\tr2, r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB24_150:\n\tld.1\t64, r1\n\tadd\t68, r1, r2\n\tadd\t@CPI24_29[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t36, r1, r2\n\tadd\t29, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI24_27[0], r0, r2\n\tst.1\tr1, r2\n\tadd\t4, r1, r2\n\tadd\tstack-[11], r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI24_0[0], r0, r2\n\tsub.s!\t@CPI24_0[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI24_30[0], r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB24_47:\n\tld.1\t64, r2\n\tand\t31, r4, r3\n\tshr.s!\t5, r4, r4\n\tjump.eq\t@.BB24_174\n\tadd\tr0, r0, r5\n.BB24_49:\n\tshl.s\t5, r5, r6\n\tadd\tr2, r6, r7\n\tptr.add\tr1, r6, r6\n\tld\tr6, r6\n\tst.1\tr7, r6\n\tadd\t1, r5, r5\n\tsub!\tr5, r4, r6\n\tjump.lt\t@.BB24_49\n.BB24_174:\n\tsub!\tr3, r0, r5\n\tjump.eq\t@.BB24_51\n\tshl.s\t5, r4, r4\n\tptr.add\tr1, r4, r1\n\tadd\tr2, r4, r4\n\tshl.s\t3, r3, r3\n\tld.1\tr4, r5\n\tshl\tr5, r3, r5\n\tshr\tr5, r3, r5\n\tld\tr1, r1\n\tsub\t256, r3, r3\n\tshr\tr1, r3, r1\n\tshl\tr1, r3, r1\n\tor\tr1, r5, r1\n\tst.1\tr4, r1\n.BB24_51:\n\tadd\t@CPI24_0[0], r0, r1\n\tadd\tstack[@returndatasize], r0, r3\n\tsub.s!\t@CPI24_0[0], r3, r4\n\tadd.ge\tr1, r0, r3\n\tsub.s!\t@CPI24_0[0], r2, r4\n\tadd.lt\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tshl.s\t96, r3, r2\n\tor\tr2, r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB24_60:\n\tld.1\t64, r2\n\tand\t31, r4, r3\n\tshr.s!\t5, r4, r4\n\tjump.eq\t@.BB24_173\n\tadd\tr0, r0, r5\n.BB24_62:\n\tshl.s\t5, r5, r6\n\tadd\tr2, r6, r7\n\tptr.add\tr1, r6, r6\n\tld\tr6, r6\n\tst.1\tr7, r6\n\tadd\t1, r5, r5\n\tsub!\tr5, r4, r6\n\tjump.lt\t@.BB24_62\n.BB24_173:\n\tsub!\tr3, r0, r5\n\tjump.eq\t@.BB24_64\n\tshl.s\t5, r4, r4\n\tptr.add\tr1, r4, r1\n\tadd\tr2, r4, r4\n\tshl.s\t3, r3, r3\n\tld.1\tr4, r5\n\tshl\tr5, r3, r5\n\tshr\tr5, r3, r5\n\tld\tr1, r1\n\tsub\t256, r3, r3\n\tshr\tr1, r3, r1\n\tshl\tr1, r3, r1\n\tor\tr1, r5, r1\n\tst.1\tr4, r1\n.BB24_64:\n\tadd\t@CPI24_0[0], r0, r1\n\tadd\tstack[@returndatasize], r0, r3\n\tsub.s!\t@CPI24_0[0], r3, r4\n\tadd.ge\tr1, r0, r3\n\tsub.s!\t@CPI24_0[0], r2, r4\n\tadd.lt\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tshl.s\t96, r3, r2\n\tor\tr2, r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB24_120:\n\tld.1\t64, r2\n\tand\t31, r3, r4\n\tshr.s!\t5, r3, r3\n\tjump.eq\t@.BB24_167\n\tadd\tr0, r0, r5\n.BB24_122:\n\tshl.s\t5, r5, r6\n\tadd\tr2, r6, r7\n\tptr.add\tr1, r6, r6\n\tld\tr6, r6\n\tst.1\tr7, r6\n\tadd\t1, r5, r5\n\tsub!\tr5, r3, r6\n\tjump.lt\t@.BB24_122\n.BB24_167:\n\tsub!\tr4, r0, r5\n\tjump.eq\t@.BB24_124\n\tshl.s\t5, r3, r3\n\tptr.add\tr1, r3, r1\n\tadd\tr2, r3, r3\n\tshl.s\t3, r4, r4\n\tld.1\tr3, r5\n\tshl\tr5, r4, r5\n\tshr\tr5, r4, r5\n\tld\tr1, r1\n\tsub\t256, r4, r4\n\tshr\tr1, r4, r1\n\tshl\tr1, r4, r1\n\tor\tr1, r5, r1\n\tst.1\tr3, r1\n.BB24_124:\n\tadd\t@CPI24_0[0], r0, r1\n\tadd\tstack[@returndatasize], r0, r3\n\tsub.s!\t@CPI24_0[0], r3, r4\n\tadd.ge\tr1, r0, r3\n\tsub.s!\t@CPI24_0[0], r2, r4\n\tadd.lt\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tshl.s\t96, r3, r2\n\tor\tr2, r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB24_102:\n\tld.1\t64, r2\n\tand\t31, r3, r4\n\tshr.s!\t5, r3, r3\n\tjump.eq\t@.BB24_169\n\tadd\tr0, r0, r5\n.BB24_104:\n\tshl.s\t5, r5, r6\n\tadd\tr2, r6, r7\n\tptr.add\tr1, r6, r6\n\tld\tr6, r6\n\tst.1\tr7, r6\n\tadd\t1, r5, r5\n\tsub!\tr5, r3, r6\n\tjump.lt\t@.BB24_104\n.BB24_169:\n\tsub!\tr4, r0, r5\n\tjump.eq\t@.BB24_106\n\tshl.s\t5, r3, r3\n\tptr.add\tr1, r3, r1\n\tadd\tr2, r3, r3\n\tshl.s\t3, r4, r4\n\tld.1\tr3, r5\n\tshl\tr5, r4, r5\n\tshr\tr5, r4, r5\n\tld\tr1, r1\n\tsub\t256, r4, r4\n\tshr\tr1, r4, r1\n\tshl\tr1, r4, r1\n\tor\tr1, r5, r1\n\tst.1\tr3, r1\n.BB24_106:\n\tadd\t@CPI24_0[0], r0, r1\n\tadd\tstack[@returndatasize], r0, r3\n\tsub.s!\t@CPI24_0[0], r3, r4\n\tadd.ge\tr1, r0, r3\n\tsub.s!\t@CPI24_0[0], r2, r4\n\tadd.lt\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tshl.s\t96, r3, r2\n\tor\tr2, r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.func_end24:\n\nfun_emergencyWithdraw:\n.func_begin25:\n\tnop\tstack+=[7]\n\tadd\t5, r0, r2\n\tsload\tr2, r2\n\tsub!\tr2, r1, r2\n\tjump.le\t@.BB25_1\n\tst.1\t0, r1\n\tadd\t6, r0, r2\n\tst.1\t32, r2\n\tadd\t@CPI25_2[0], r0, r4\n\tadd\tr1, r0, stack-[7]\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI25_2[0], r2, r3\n\tadd\tr4, r0, r1\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI25_3[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tadd\tstack-[7], r0, r3\n\tmul\t5, r3, r4, r3\n\tadd\tr4, r0, stack-[4]\n\tadd\t@CPI25_4[0], r4, r3\n\tadd\tr3, r0, stack-[6]\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB25_3\n\tld\tr1, r1\n\tcontext.caller\tr2\n\tadd\tr2, r0, stack-[3]\n\tand\t@CPI25_5[0], r2, r2\n\tadd\tr2, r0, stack-[5]\n\tst.1\t0, r2\n\tst.1\t32, r1\n\tadd\t@CPI25_2[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI25_2[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI25_3[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB25_3\n\tadd\tstack-[6], r0, r2\n\tsload\tr2, r3\n\tld\tr1, r9\n\tsload\tr9, r1\n\tld.1\t64, r2\n\tadd\t68, r2, r4\n\tst.1\tr4, r1\n\tadd\t32, r2, r1\n\tadd\t@CPI25_6[0], r0, r4\n\tst.1\tr1, r4\n\tadd\t36, r2, r4\n\tadd\tstack-[5], r0, r5\n\tst.1\tr4, r5\n\tadd\t68, r0, r4\n\tst.1\tr2, r4\n\tand\t@CPI25_5[0], r3, r11\n\tsub.s!\t@CPI25_7[0], r2, r3\n\tjump.ge\t@.BB25_6\n\tadd\t128, r2, r10\n\tst.1\t64, r10\n\tsub.s!\t@CPI25_8[0], r10, r3\n\tjump.gt\t@.BB25_6\n\tadd\t192, r2, r3\n\tst.1\t64, r3\n\tadd\t32, r0, r3\n\tadd\tr3, r0, stack-[5]\n\tst.1\tr10, r3\n\tadd\t160, r2, r3\n\tadd\t@CPI25_9[0], r0, r4\n\tst.1\tr3, r4\n\tld.1\tr2, r3\n\tcontext.gas_left\tr2\n\tsub.s!\t4, r11, r4\n\tadd\tr9, r0, stack-[6]\n\tjump.ne\t@.BB25_9\n\tadd\t1, r0, r2\n\tadd\tstack[@returndatasize], r0, r1\n\tjump\t@.BB25_11\n.BB25_9:\n\tadd\t@CPI25_2[0], r0, r4\n\tsub.s!\t@CPI25_2[0], r1, r5\n\tadd.ge\tr4, r0, r1\n\tshl.s\t64, r1, r1\n\tsub.s!\t@CPI25_2[0], r3, r5\n\tadd.ge\tr4, r0, r3\n\tshl.s\t96, r3, r3\n\tor\tr3, r1, r1\n\tsub.s!\t@CPI25_2[0], r2, r3\n\tadd.ge\tr4, r0, r2\n\tshl.s\t192, r2, r2\n\tor\tr1, r2, r1\n\tadd\tr11, r0, r2\n\tadd\tr10, r0, stack-[2]\n\tadd\tr11, r0, stack-[1]\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tadd\tstack-[1], r0, r11\n\tadd\tstack-[2], r0, r10\n\tadd\tstack-[6], r0, r9\n\tand\t1, r2, r2\n\tptr.add\tr1, r0, stack[@ptr_return_data]\n\tshr.s\t96, r1, r1\n\tand\t@CPI25_2[0], r1, stack[@returndatasize]\n\tand\t@CPI25_2[0], r1, r1\n.BB25_11:\n\tadd\t96, r0, r12\n\tsub!\tr1, r0, r3\n\tjump.eq\t@.BB25_12\n\tadd\t63, r1, r3\n\tsub.s\t32, r0, r4\n\tand\tr3, r4, r3\n\tld.1\t64, r12\n\tadd\tr12, r3, r3\n\tsub!\tr3, r12, r4\n\tadd\t0, r0, r4\n\tadd.lt\t1, r0, r4\n\tsub.s!\t@CPI25_10[0], r3, r5\n\tjump.gt\t@.BB25_6\n\tand!\t1, r4, r4\n\tjump.ne\t@.BB25_6\n\tst.1\t64, r3\n\tst.1.inc\tr12, r1, r1\n\tptr.add\tstack[@ptr_return_data], r0, r3\n\tadd\tstack[@returndatasize], r0, r5\n\tand\t31, r5, r4\n\tshr.s!\t5, r5, r5\n\tjump.eq\t@.BB25_40\n\tadd\tr0, r0, r6\n.BB25_30:\n\tshl.s\t5, r6, r7\n\tadd\tr1, r7, r8\n\tptr.add\tr3, r7, r7\n\tld\tr7, r7\n\tst.1\tr8, r7\n\tadd\t1, r6, r6\n\tsub!\tr6, r5, r7\n\tjump.lt\t@.BB25_30\n.BB25_40:\n\tsub!\tr4, r0, r6\n\tjump.eq\t@.BB25_12\n\tshl.s\t5, r5, r5\n\tptr.add\tr3, r5, r3\n\tadd\tr1, r5, r1\n\tshl.s\t3, r4, r4\n\tld.1\tr1, r5\n\tshl\tr5, r4, r5\n\tshr\tr5, r4, r5\n\tld\tr3, r3\n\tsub\t256, r4, r4\n\tshr\tr3, r4, r3\n\tshl\tr3, r4, r3\n\tor\tr3, r5, r3\n\tst.1\tr1, r3\n.BB25_12:\n\tld.1.inc\tr12, r1, r5\n\tsub!\tr2, r0, r2\n\tjump.eq\t@.BB25_13\n\tsub!\tr1, r0, r2\n\tjump.ne\t@.BB25_32\n\tadd\tr12, r0, stack-[1]\n\tadd\t@CPI25_11[0], r0, r1\n\tst.2\t0, r1\n\tst.2\t4, r11\n\tadd\t@CPI25_2[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI25_2[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI25_12[0], r1, r1\n\tadd\t32770, r0, r2\n\tadd\tr5, r0, stack-[2]\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tadd\tstack-[2], r0, r5\n\tadd\tstack-[6], r0, r9\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB25_3\n\tld\tr1, r1\n\tsub!\tr1, r0, r1\n\tadd\tstack-[1], r0, r1\n\tjump.eq\t@.BB25_24\n\tld.1\tr1, r1\n\tsub!\tr1, r0, r2\n\tjump.eq\t@.BB25_36\n.BB25_32:\n\tadd\t@CPI25_13[0], r0, r2\n\tsub.s!\t32, r1, r3\n\tadd\tr0, r0, r3\n\tadd.lt\tr2, r0, r3\n\tand\t@CPI25_13[0], r1, r1\n\tsub!\tr1, r0, r4\n\tadd.le\tr0, r0, r2\n\tsub.s!\t@CPI25_13[0], r1, r1\n\tadd\tr3, r0, r1\n\tadd.eq\tr2, r0, r1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB25_3\n\tld.1\tr5, r1\n\tsub!\tr1, r0, r2\n\tadd\t0, r0, r2\n\tadd.ne\t1, r0, r2\n\tsub!\tr1, r2, r2\n\tjump.ne\t@.BB25_3\n\tsub!\tr1, r0, r1\n\tjump.eq\t@.BB25_35\n.BB25_36:\n\tsload\tr9, r1\n\tadd\tstack-[4], r0, r2\n\tadd\t@CPI25_18[0], r2, r2\n\tsload\tr2, r3\n\tsub!\tr3, r1, r4\n\tjump.lt\t@.BB25_37\n\tsub\tr3, r1, r1\n\tsstore\tr2, r1\n\tsload\tr9, r1\n\tld.1\t64, r2\n\tst.1\tr2, r1\n\tadd\t@CPI25_2[0], r0, r1\n\tcontext.gas_left\tr3\n\tsub.s!\t@CPI25_2[0], r3, r4\n\tadd.ge\tr1, r0, r3\n\tsub.s!\t@CPI25_2[0], r2, r4\n\tadd.lt\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tshl.s\t192, r3, r2\n\tor\tr2, r1, r1\n\tor\t@CPI25_19[0], r1, r1\n\tadd\t32781, r0, r2\n\tadd\t3, r0, r3\n\tadd\t@CPI25_20[0], r0, r4\n\tadd\tstack-[3], r0, r5\n\tadd\tstack-[7], r0, r6\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tadd\tstack-[6], r0, r3\n\tand!\t1, r2, r1\n\tjump.eq\t@.BB25_3\n\tsstore\tr3, r0\n\tadd\t1, r3, r1\n\tsstore\tr1, r0\n\tret\n.BB25_3:\n\tadd\tr0, r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB25_6:\n\tadd\t@CPI25_0[0], r0, r1\n\tst.1\t0, r1\n\tadd\t65, r0, r1\n\tst.1\t4, r1\n\tadd\t@CPI25_1[0], r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB25_1:\n\tadd\t@CPI25_0[0], r0, r1\n\tst.1\t0, r1\n\tadd\t50, r0, r1\n\tst.1\t4, r1\n\tadd\t@CPI25_1[0], r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB25_13:\n\tsub!\tr1, r0, r2\n\tjump.ne\t@.BB25_20\n\tld.1\t64, r1\n\tadd\t@CPI25_16[0], r0, r2\n\tst.1\tr1, r2\n\tadd\t4, r1, r2\n\tadd\tstack-[5], r0, r3\n\tst.1\tr2, r3\n\tld.1\tr10, r2\n\tadd\t36, r1, r3\n\tst.1\tr3, r2\n\tsub!\tr2, r0, r3\n\tjump.eq\t@.BB25_19\n\tadd\t68, r1, r3\n\tadd\tr0, r0, r4\n.BB25_16:\n\tadd\tr4, r3, r5\n\tadd\t32, r4, r4\n\tadd\tr4, r10, r6\n\tld.1\tr6, r6\n\tst.1\tr5, r6\n\tsub!\tr4, r2, r5\n\tjump.lt\t@.BB25_16\n\tsub!\tr4, r2, r4\n\tjump.le\t@.BB25_19\n\tadd\tr2, r3, r3\n\tst.1\tr3, r0\n.BB25_19:\n\tadd\t31, r2, r2\n\tsub.s\t32, r0, r3\n\tand\tr2, r3, r2\n\tadd\t68, r2, r2\n\tadd\t@CPI25_2[0], r0, r3\n\tsub.s!\t@CPI25_2[0], r2, r4\n\tadd.ge\tr3, r0, r2\n\tsub.s!\t@CPI25_2[0], r1, r4\n\tadd.ge\tr3, r0, r1\n\tshl.s\t64, r1, r1\n\tshl.s\t96, r2, r2\n\tor\tr2, r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB25_37:\n\tadd\t@CPI25_0[0], r0, r1\n\tst.1\t0, r1\n\tadd\t17, r0, r1\n\tst.1\t4, r1\n\tadd\t@CPI25_1[0], r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB25_35:\n\tld.1\t64, r1\n\tadd\t100, r1, r2\n\tadd\t@CPI25_14[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t68, r1, r2\n\tadd\t@CPI25_15[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t36, r1, r2\n\tadd\t42, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI25_16[0], r0, r2\n\tst.1\tr1, r2\n\tadd\t4, r1, r2\n\tadd\tstack-[5], r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI25_2[0], r0, r2\n\tsub.s!\t@CPI25_2[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI25_17[0], r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB25_20:\n\tadd\t@CPI25_2[0], r0, r2\n\tsub.s!\t@CPI25_2[0], r5, r3\n\tadd\tr2, r0, r3\n\tadd.lt\tr5, r0, r3\n\tsub.s!\t@CPI25_2[0], r1, r4\n\tadd.ge\tr2, r0, r1\n\tshl.s\t96, r1, r1\n\tshl.s\t64, r3, r2\n\tor\tr1, r2, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB25_24:\n\tld.1\t64, r1\n\tadd\t68, r1, r2\n\tadd\t@CPI25_21[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t36, r1, r2\n\tadd\t29, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI25_16[0], r0, r2\n\tst.1\tr1, r2\n\tadd\t4, r1, r2\n\tadd\tstack-[5], r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI25_2[0], r0, r2\n\tsub.s!\t@CPI25_2[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI25_22[0], r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.func_end25:\n\nfun_dev:\n.func_begin26:\n\tadd\t2, r0, r2\n\tsload\tr2, r3\n\tand\t@CPI26_0[0], r3, r4\n\tcontext.caller\tr5\n\tsub!\tr5, r4, r4\n\tjump.ne\t@.BB26_1\n\tand\t@CPI26_0[0], r1, r1\n\tand\t@CPI26_5[0], r3, r3\n\tor\tr3, r1, r1\n\tsstore\tr2, r1\n\tret\n.BB26_1:\n\tld.1\t64, r1\n\tadd\t68, r1, r2\n\tadd\t@CPI26_1[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t36, r1, r2\n\tadd\t19, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI26_2[0], r0, r2\n\tst.1\tr1, r2\n\tadd\t4, r1, r2\n\tadd\t32, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI26_3[0], r0, r2\n\tsub.s!\t@CPI26_3[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI26_4[0], r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.func_end26:\n\n__farcall:\n.func_begin27:\n.tmp0:\n\tfar_call\tr1, r2, @.BB27_2\n.tmp1:\n\tadd\t1, r0, r2\n\tret\n.BB27_2:\n.tmp2:\n\tadd\tr0, r0, r2\n\tret\n.func_end27:\n\n__staticcall:\n.func_begin28:\n.tmp3:\n\tfar_call.static\tr1, r2, @.BB28_2\n.tmp4:\n\tadd\t1, r0, r2\n\tret\n.BB28_2:\n.tmp5:\n\tadd\tr0, r0, r2\n\tret\n.func_end28:\n\n\t.data\n\t.p2align\t5\ncalldatasize:\n\t.cell 0\n\n\t.p2align\t5\nreturndatasize:\n\t.cell 0\n\n\t.p2align\t5\nptr_calldata:\n.cell\t0\n\n\t.p2align\t5\nptr_return_data:\n.cell\t0\n\n\t.note.GNU-stack\n\t.rodata\nCPI0_0:\nCPI1_0:\nCPI3_1:\nCPI11_0:\nCPI12_3:\nCPI13_3:\nCPI14_3:\nCPI15_3:\nCPI16_3:\nCPI18_2:\nCPI19_4:\nCPI20_4:\nCPI21_0:\nCPI22_0:\nCPI23_0:\nCPI24_0:\nCPI25_2:\nCPI26_3:\n\t.cell 4294967295\nCPI0_1:\nCPI15_13:\nCPI16_13:\nCPI18_10:\nCPI19_11:\nCPI20_11:\nCPI21_12:\nCPI22_12:\nCPI23_11:\nCPI24_11:\nCPI25_10:\n\t.cell 18446744073709551615\nCPI0_2:\nCPI6_0:\nCPI7_0:\nCPI8_0:\nCPI9_0:\nCPI10_0:\nCPI15_14:\nCPI16_14:\nCPI18_11:\nCPI19_12:\nCPI20_12:\nCPI21_13:\nCPI22_13:\nCPI23_12:\nCPI24_12:\nCPI25_13:\n\t.cell -57896044618658097711785492504343953926634992332820282019728792003956564819968\nCPI0_3:\nCPI3_4:\nCPI4_5:\nCPI5_0:\nCPI6_1:\nCPI9_1:\nCPI10_1:\nCPI11_2:\nCPI12_0:\nCPI13_0:\nCPI14_0:\nCPI15_0:\nCPI16_0:\nCPI18_5:\nCPI19_8:\nCPI20_8:\nCPI21_3:\nCPI22_3:\nCPI23_2:\nCPI24_2:\nCPI25_5:\nCPI26_0:\n\t.cell 1461501637330902918203684832716283019655932542975\nCPI0_4:\nCPI3_3:\nCPI12_5:\nCPI13_5:\nCPI15_23:\nCPI26_5:\n\t.cell -1461501637330902918203684832716283019655932542976\nCPI0_5:\nCPI12_6:\nCPI13_6:\nCPI21_32:\nCPI23_32:\n\t.cell 904625697166532776746648320380374280103671755200316906558262375061821325312\nCPI0_6:\nCPI12_7:\nCPI13_7:\n\t.cell -52524777015005588113349992707137368332388074750292320778649315033004770043936\nCPI0_7:\n\t.cell 53919893334301279589334030174039261352344891250716429051063678533632\nCPI0_8:\nCPI2_1:\nCPI3_5:\nCPI15_21:\nCPI16_21:\nCPI17_0:\nCPI18_0:\nCPI19_0:\nCPI20_0:\nCPI21_4:\nCPI22_4:\nCPI23_19:\nCPI24_19:\nCPI25_0:\n\t.cell 35408467139433450592217433187231851964531694900788300625387963629091585785856\nCPI0_9:\nCPI2_2:\nCPI3_6:\nCPI15_12:\nCPI16_12:\nCPI17_1:\nCPI18_1:\nCPI19_1:\nCPI20_1:\nCPI21_5:\nCPI22_5:\nCPI23_10:\nCPI24_10:\nCPI25_1:\n\t.cell 2852213850513516153367582212096\nCPI0_10:\n\t.cell 1661688736\nCPI0_11:\n\t.cell 2377850425\nCPI0_12:\n\t.cell 3409692381\nCPI0_13:\n\t.cell 3803951447\nCPI0_14:\n\t.cell 3803951448\nCPI0_15:\n\t.cell 4076725131\nCPI0_16:\n\t.cell 3409692382\nCPI0_17:\n\t.cell 3644580295\nCPI0_18:\n\t.cell 2377850426\nCPI0_19:\n\t.cell 2482086923\nCPI0_20:\n\t.cell 2895849749\nCPI0_21:\n\t.cell 2325906767\nCPI0_22:\n\t.cell 2325906768\nCPI0_23:\n\t.cell 2374543630\nCPI0_24:\n\t.cell 2376452955\nCPI0_25:\n\t.cell 1661688737\nCPI0_26:\n\t.cell 1682452345\nCPI0_27:\n\t.cell 1901074598\nCPI0_28:\n\t.cell 986779381\nCPI0_29:\n\t.cell 1374356901\nCPI0_30:\n\t.cell 1465692405\nCPI0_31:\n\t.cell 1465692406\nCPI0_32:\n\t.cell 1610506566\nCPI0_33:\n\t.cell 1374356902\nCPI0_34:\n\t.cell 1393748622\nCPI0_35:\n\t.cell 986779382\nCPI0_36:\n\t.cell 1142570608\nCPI0_37:\n\t.cell 1221414065\nCPI0_38:\n\t.cell 399177456\nCPI0_39:\n\t.cell 399177457\nCPI0_40:\n\t.cell 498805282\nCPI0_41:\n\t.cell 514498629\nCPI0_42:\n\t.cell 136199898\nCPI0_43:\n\t.cell 274256513\nCPI0_44:\n\t.cell 354876967\nCPI0_45:\n\t.cell 2535301200456458802993406410752\nCPI0_46:\n\t.cell 5070602400912917605986812821504\nCPI0_47:\nCPI15_6:\nCPI16_6:\nCPI18_13:\nCPI19_3:\nCPI20_3:\nCPI21_7:\nCPI22_7:\nCPI23_4:\nCPI24_4:\n\t.cell 30212542071733633044144396051920796812958444182406851663962835650539531164625\nCPI0_48:\n\t.cell 2535301202817642044428229017600\nCPI1_1:\n\t.cell 904625751086426111047927909714404454142933102474605751639407337269041823744\nCPI2_0:\n\t.cell 18446744073709551456\nCPI3_0:\n\t.cell 18446744073709551616\nCPI3_2:\nCPI22_31:\nCPI24_31:\nCPI25_19:\n\t.cell 904625697166532776746648320380374280103671757735618107014721178055227736064\nCPI4_0:\nCPI15_15:\nCPI16_15:\nCPI18_15:\nCPI19_13:\nCPI20_13:\nCPI21_14:\nCPI22_14:\nCPI23_13:\nCPI24_13:\n\t.cell 1546678032441257452667456735582814959992782782816731922691272282333561699761\nCPI4_1:\nCPI15_5:\nCPI16_5:\nCPI18_12:\nCPI19_2:\nCPI20_2:\nCPI21_6:\nCPI22_6:\nCPI23_3:\nCPI24_3:\n\t.cell 1546678032441257452667456735582814959992782782816731922691272282333561699762\nCPI4_2:\nCPI15_18:\nCPI16_18:\nCPI18_6:\nCPI19_16:\nCPI20_16:\nCPI21_17:\nCPI22_17:\nCPI23_16:\nCPI24_16:\n\t.cell 1546678032441257452667456735582814959992782782816731922691272282333561699763\nCPI4_3:\nCPI15_24:\nCPI21_29:\nCPI22_21:\nCPI23_29:\nCPI24_21:\nCPI25_18:\n\t.cell 1546678032441257452667456735582814959992782782816731922691272282333561699764\nCPI4_4:\nCPI15_8:\nCPI16_8:\nCPI18_4:\nCPI19_6:\nCPI20_6:\nCPI21_2:\nCPI22_2:\nCPI23_6:\nCPI24_6:\nCPI25_4:\n\t.cell 1546678032441257452667456735582814959992782782816731922691272282333561699760\nCPI11_1:\nCPI18_3:\nCPI21_1:\nCPI22_1:\nCPI23_1:\nCPI24_1:\nCPI25_3:\n\t.cell 904625697166532776746648320380374280103671760270919307471179981048634146816\nCPI12_1:\nCPI13_1:\nCPI14_1:\nCPI15_1:\nCPI16_1:\n\t.cell 35943731656364841964516503116990081338611484598491072354577564874054038349170\nCPI12_2:\nCPI13_2:\nCPI14_2:\nCPI15_2:\nCPI16_2:\nCPI21_27:\nCPI22_27:\nCPI23_27:\nCPI24_27:\nCPI25_16:\nCPI26_2:\n\t.cell 3963877391197344453575983046348115674221700746820753546331534351508065746944\nCPI12_4:\nCPI13_4:\nCPI14_4:\nCPI15_4:\nCPI16_4:\nCPI21_31:\nCPI22_30:\nCPI23_31:\nCPI24_30:\nCPI25_22:\nCPI26_4:\n\t.cell 7922816251426433759354395033600\nCPI13_8:\n\t.cell 45408759099000846574684193736602357774271237157169010951590501707763511459840\nCPI13_9:\n\t.cell 35943731656364841964517558219894961445653631979235167635064085396828900499553\nCPI13_10:\nCPI21_28:\nCPI22_28:\nCPI23_28:\nCPI24_28:\nCPI25_17:\n\t.cell 10458117451882892562347801444352\nCPI15_7:\nCPI16_7:\nCPI18_14:\nCPI19_5:\nCPI20_5:\nCPI21_8:\nCPI22_8:\nCPI23_5:\nCPI24_5:\n\t.cell 904625751086426111047927909714404454142933102791518401696464687643217625088\nCPI15_9:\nCPI16_9:\nCPI18_7:\nCPI19_7:\nCPI20_7:\nCPI21_9:\nCPI22_9:\nCPI23_7:\nCPI24_7:\nCPI25_11:\n\t.cell 10867283408178898638301172343726954674910073630256871736220740970449699113859\nCPI15_10:\nCPI16_10:\nCPI18_8:\nCPI19_9:\nCPI20_9:\nCPI21_10:\nCPI22_10:\nCPI23_8:\nCPI24_8:\nCPI25_12:\n\t.cell 904625751086426111047927909714404454142933105326819602152923490636624035840\nCPI15_11:\nCPI16_11:\nCPI18_9:\nCPI19_10:\nCPI20_10:\nCPI21_11:\nCPI22_11:\nCPI23_9:\nCPI24_9:\n\t.cell 50942633119752846454219349998365661925608737367104304655302372697894809501696\nCPI15_16:\nCPI16_16:\nCPI19_14:\nCPI20_14:\nCPI21_15:\nCPI22_15:\nCPI23_14:\nCPI24_14:\n\t.cell 29289127993025145568725129057828671567744754166070328588094505464281371246592\nCPI15_17:\nCPI16_17:\nCPI19_15:\nCPI20_15:\nCPI21_16:\nCPI22_16:\nCPI23_15:\nCPI24_15:\n\t.cell 5387515050969974956360988622848\nCPI15_19:\nCPI16_19:\nCPI18_16:\nCPI19_17:\nCPI20_17:\nCPI21_18:\nCPI22_18:\nCPI23_17:\nCPI24_17:\n\t.cell 115792089237316195423570985008687907853269984665640564039457\nCPI15_20:\nCPI16_20:\nCPI18_17:\nCPI19_18:\nCPI20_18:\nCPI21_19:\nCPI22_19:\nCPI23_18:\nCPI24_18:\n\t.cell 1000000000000000000\nCPI15_22:\nCPI21_22:\nCPI23_22:\n\t.cell 18446744073709551455\nCPI21_20:\nCPI22_20:\nCPI23_20:\nCPI24_20:\nCPI25_6:\n\t.cell -39341301877480157781710804024396230103289065588583741745104145964028735258624\nCPI21_21:\nCPI23_21:\n\t.cell 16156842317565293874272834530371880720966471053262404558597773956279093428224\nCPI21_23:\nCPI23_23:\n\t.cell 18446744073709551391\nCPI21_24:\nCPI22_24:\nCPI23_24:\nCPI24_24:\nCPI25_9:\n\t.cell 37714057306076988483118529490347679105585116642029194716945419020321082336612\nCPI21_25:\nCPI22_25:\nCPI23_25:\nCPI24_25:\nCPI25_14:\n\t.cell 50411904420896249798390057088552747694053213439589473829759729709664159399936\nCPI21_26:\nCPI22_26:\nCPI23_26:\nCPI24_26:\nCPI25_15:\n\t.cell 37714057306076988483118529433182395293628422681814405642689417129066110394478\nCPI21_30:\nCPI22_29:\nCPI23_30:\nCPI24_29:\nCPI25_21:\n\t.cell 29577713123142787666064487680123823951345158729797978021083438401868913442816\nCPI21_33:\nCPI23_33:\n\t.cell -50416925515954125712902479513714981708697134119002059318863190090123713045995\nCPI21_34:\nCPI22_34:\n\t.cell 36381916919785467604345307309545774882155299258101790893122500285898600480768\nCPI22_22:\nCPI24_22:\n\t.cell 18446744073709551487\nCPI22_23:\nCPI24_23:\nCPI25_8:\n\t.cell 18446744073709551551\nCPI22_32:\nCPI24_32:\n\t.cell -6116999617221423143306666619552877372318735432152700305865106915521926679192\nCPI22_33:\nCPI24_33:\n\t.cell 31422294206539411637796244062954547125593111746008812128197726098419865354240\nCPI25_7:\n\t.cell 18446744073709551488\nCPI25_20:\n\t.cell -31002090515413820819693746282746859664763185746936276214475542018239598033515\nCPI26_1:\n\t.cell 29577713123142787504773553364437654825755053680814010752540555947022013693952\n","bytecode":{"object":""},"methodIdentifiers":{"BONUS_MULTIPLIER()":"8aa28550","add(uint256,address,bool)":"1eaaa045","block()":"575cb0f6","deposit(uint256,uint256)":"e2bbb158","dev(address)":"8d88a90e","devAddress()":"3ad10ef6","emergencyWithdraw(uint256)":"5312ea8e","getMultiplier(uint256,uint256)":"8dbb1e3a","leaveStaking(uint256)":"1058d281","massUpdatePools()":"630b5ba1","owner()":"8da5cb5b","pendingSoba(uint256,address)":"cb3bc6de","poolInfo(uint256)":"1526fe27","poolLength()":"081e3eda","renounceOwnership()":"715018a6","set(uint256,uint256,bool)":"64482f79","sobaPerBlock()":"ac9b2915","sobaja()":"d93be1c7","staking(uint256)":"1dbb2a22","startBlock()":"48cd4cb1","totalAllocPoint()":"17caf6f1","transferOwnership(address)":"f2fde38b","updateMultiplier(uint256)":"5ffe6146","updatePool(uint256)":"51eb05a6","userInfo(uint256,address)":"93f1a40b","withdraw(uint256,uint256)":"441a3e70"}},"irOptimized":"/*=====================================================*\n *                       WARNING                       *\n *  Solidity to Yul compilation is still EXPERIMENTAL  *\n *       It can result in LOSS OF FUNDS or worse       *\n *                !USE AT YOUR OWN RISK!               *\n *=====================================================*/\n\n/// @use-src 2:\"@openzeppelin/contracts/access/Ownable.sol\", 9:\"@openzeppelin/contracts/utils/Context.sol\", 18:\"contracts/YieldFarm.sol\"\nobject \"YieldFarm_4836\" {\n    code {\n        {\n            /// @src 18:382:13213  \"contract YieldFarm is Ownable {...\"\n            mstore(64, 128)\n            if callvalue() { revert(0, 0) }\n            let programSize := datasize(\"YieldFarm_4836\")\n            let argSize := sub(codesize(), programSize)\n            let memoryDataOffset := allocate_memory(argSize)\n            codecopy(memoryDataOffset, programSize, argSize)\n            if slt(sub(add(memoryDataOffset, argSize), memoryDataOffset), 128)\n            {\n                revert(/** @src -1:-1:-1 */ 0, 0)\n            }\n            /// @src 18:382:13213  \"contract YieldFarm is Ownable {...\"\n            let value := mload(memoryDataOffset)\n            validator_revert_contract_SobaToken(value)\n            let value_1 := mload(add(memoryDataOffset, 32))\n            validator_revert_contract_SobaToken(value_1)\n            let value2 := mload(add(memoryDataOffset, 64))\n            let value3 := mload(add(memoryDataOffset, 96))\n            let _1 := sload(/** @src -1:-1:-1 */ 0)\n            /// @src 18:382:13213  \"contract YieldFarm is Ownable {...\"\n            let _2 := sub(shl(160, 1), 1)\n            sstore(/** @src -1:-1:-1 */ 0, /** @src 18:382:13213  \"contract YieldFarm is Ownable {...\" */ or(and(_1, not(sub(shl(160, 1), 1))), /** @src 9:719:729  \"msg.sender\" */ caller()))\n            /// @src 2:2566:2606  \"OwnershipTransferred(oldOwner, newOwner)\"\n            log3(/** @src 18:382:13213  \"contract YieldFarm is Ownable {...\" */ mload(64), /** @src -1:-1:-1 */ 0, /** @src 2:2566:2606  \"OwnershipTransferred(oldOwner, newOwner)\" */ 0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0, /** @src 18:382:13213  \"contract YieldFarm is Ownable {...\" */ and(_1, _2), /** @src 9:719:729  \"msg.sender\" */ caller())\n            /// @src 18:2091:2092  \"1\"\n            update_storage_value_offsett_rational_by_to_uint256_1228()\n            /// @src 18:2456:2457  \"0\"\n            update_storage_value_offsett_rational_by_to_uint256_1229()\n            /// @src 18:3189:3205  \"sobaja = _sobaja\"\n            update_storage_value_offsett_contract_SobaToken_to_contract_SobaToken_1230(value)\n            /// @src 18:3215:3236  \"devAddress = _devaddr\"\n            update_storage_value_offsett_contract_SobaToken_to_contract_SobaToken_1231(value_1)\n            /// @src 18:3246:3274  \"sobaPerBlock = _sobaPerBlock\"\n            update_storage_value_offsett_rational_by_to_uint256(value2)\n            /// @src 18:3284:3308  \"startBlock = _startBlock\"\n            update_storage_value_offsett_rational_by_to_uint256_1233(value3)\n            /// @src 18:382:13213  \"contract YieldFarm is Ownable {...\"\n            let _3 := sload(/** @src 18:3284:3308  \"startBlock = _startBlock\" */ 0x08)\n            /// @src 18:3399:3604  \"PoolInfo({...\"\n            let expr_mpos := /** @src 18:382:13213  \"contract YieldFarm is Ownable {...\" */ allocate_memory_1234()\n            /// @src 18:3399:3604  \"PoolInfo({...\"\n            write_to_memory_contract_IERC20(expr_mpos, /** @src 18:382:13213  \"contract YieldFarm is Ownable {...\" */ and(/** @src 18:3399:3604  \"PoolInfo({...\" */ value, /** @src 18:382:13213  \"contract YieldFarm is Ownable {...\" */ _2))\n            mstore(/** @src 18:3399:3604  \"PoolInfo({...\" */ add(expr_mpos, /** @src 18:382:13213  \"contract YieldFarm is Ownable {...\" */ 32), /** @src 18:3472:3476  \"1000\" */ 0x03e8)\n            /// @src 18:382:13213  \"contract YieldFarm is Ownable {...\"\n            mstore(/** @src 18:3399:3604  \"PoolInfo({...\" */ add(expr_mpos, /** @src 18:382:13213  \"contract YieldFarm is Ownable {...\" */ 64), _3)\n            mstore(/** @src 18:3399:3604  \"PoolInfo({...\" */ add(expr_mpos, /** @src 18:382:13213  \"contract YieldFarm is Ownable {...\" */ 96), /** @src -1:-1:-1 */ 0)\n            /// @src 18:382:13213  \"contract YieldFarm is Ownable {...\"\n            mstore(/** @src 18:3399:3604  \"PoolInfo({...\" */ add(expr_mpos, /** @src 18:382:13213  \"contract YieldFarm is Ownable {...\" */ 128), /** @src -1:-1:-1 */ 0)\n            /// @src 18:3372:3614  \"poolInfo.push(...\"\n            array_push_from_struct_PoolInfo_to_array_struct_PoolInfo_storage_dyn_ptr(expr_mpos)\n            /// @src 18:3625:3647  \"totalAllocPoint = 1000\"\n            update_storage_value_offsett_rational_by_to_uint256_1236()\n            /// @src 18:382:13213  \"contract YieldFarm is Ownable {...\"\n            let _4 := mload(64)\n            let _5 := datasize(\"YieldFarm_4836_deployed\")\n            codecopy(_4, dataoffset(\"YieldFarm_4836_deployed\"), _5)\n            return(_4, _5)\n        }\n        function panic_error_0x41()\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x41)\n            revert(0, 0x24)\n        }\n        function allocate_memory_1234() -> memPtr\n        {\n            memPtr := mload(64)\n            let newFreePtr := add(memPtr, 160)\n            if or(gt(newFreePtr, sub(shl(64, 1), 1)), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n            mstore(64, newFreePtr)\n        }\n        function allocate_memory(size) -> memPtr\n        {\n            memPtr := mload(64)\n            let newFreePtr := add(memPtr, and(add(size, 31), not(31)))\n            if or(gt(newFreePtr, sub(shl(64, 1), 1)), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n            mstore(64, newFreePtr)\n        }\n        function validator_revert_contract_SobaToken(value)\n        {\n            if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n        }\n        function update_storage_value_offsett_rational_by_to_uint256_1228()\n        {\n            sstore(/** @src 18:2091:2092  \"1\" */ 0x04, 0x01)\n        }\n        /// @src 18:382:13213  \"contract YieldFarm is Ownable {...\"\n        function update_storage_value_offsett_rational_by_to_uint256_1229()\n        {\n            sstore(/** @src 18:2456:2457  \"0\" */ 0x07, /** @src 2:2518:2524  \"_owner\" */ 0x00)\n        }\n        /// @src 18:382:13213  \"contract YieldFarm is Ownable {...\"\n        function update_storage_value_offsett_rational_by_to_uint256(value)\n        {\n            sstore(/** @src 18:3246:3274  \"sobaPerBlock = _sobaPerBlock\" */ 0x03, /** @src 18:382:13213  \"contract YieldFarm is Ownable {...\" */ value)\n        }\n        function update_storage_value_offsett_rational_by_to_uint256_1233(value)\n        {\n            sstore(/** @src 18:3284:3308  \"startBlock = _startBlock\" */ 0x08, /** @src 18:382:13213  \"contract YieldFarm is Ownable {...\" */ value)\n        }\n        function update_storage_value_offsett_rational_by_to_uint256_1236()\n        {\n            sstore(/** @src 18:2456:2457  \"0\" */ 0x07, /** @src 18:3472:3476  \"1000\" */ 0x03e8)\n        }\n        /// @src 18:382:13213  \"contract YieldFarm is Ownable {...\"\n        function update_storage_value_offsett_contract_SobaToken_to_contract_SobaToken_1230(value)\n        {\n            sstore(/** @src 18:2091:2092  \"1\" */ 0x01, /** @src 18:382:13213  \"contract YieldFarm is Ownable {...\" */ or(and(sload(/** @src 18:2091:2092  \"1\" */ 0x01), /** @src 18:382:13213  \"contract YieldFarm is Ownable {...\" */ not(sub(shl(160, 1), 1))), and(value, sub(shl(160, 1), 1))))\n        }\n        function update_storage_value_offsett_contract_SobaToken_to_contract_SobaToken_1231(value)\n        {\n            sstore(/** @src 18:3215:3236  \"devAddress = _devaddr\" */ 0x02, /** @src 18:382:13213  \"contract YieldFarm is Ownable {...\" */ or(and(sload(/** @src 18:3215:3236  \"devAddress = _devaddr\" */ 0x02), /** @src 18:382:13213  \"contract YieldFarm is Ownable {...\" */ not(sub(shl(160, 1), 1))), and(value, sub(shl(160, 1), 1))))\n        }\n        function update_storage_value_offsett_contract_SobaToken_to_contract_SobaToken(slot, value)\n        {\n            sstore(slot, or(and(sload(slot), not(sub(shl(160, 1), 1))), and(value, sub(shl(160, 1), 1))))\n        }\n        function write_to_memory_contract_IERC20(memPtr, value)\n        {\n            mstore(memPtr, and(value, sub(shl(160, 1), 1)))\n        }\n        function array_push_from_struct_PoolInfo_to_array_struct_PoolInfo_storage_dyn_ptr(value0)\n        {\n            let oldLen := sload(/** @src 18:3372:3380  \"poolInfo\" */ 0x05)\n            /// @src 18:382:13213  \"contract YieldFarm is Ownable {...\"\n            if iszero(lt(oldLen, 18446744073709551616)) { panic_error_0x41() }\n            let _1 := add(oldLen, 1)\n            sstore(/** @src 18:3372:3380  \"poolInfo\" */ 0x05, /** @src 18:382:13213  \"contract YieldFarm is Ownable {...\" */ _1)\n            if iszero(lt(oldLen, _1))\n            {\n                mstore(/** @src -1:-1:-1 */ 0, /** @src 18:382:13213  \"contract YieldFarm is Ownable {...\" */ shl(224, 0x4e487b71))\n                mstore(4, 0x32)\n                revert(/** @src -1:-1:-1 */ 0, /** @src 18:382:13213  \"contract YieldFarm is Ownable {...\" */ 0x24)\n            }\n            mstore(/** @src -1:-1:-1 */ 0, /** @src 18:3372:3380  \"poolInfo\" */ 0x05)\n            /// @src 18:382:13213  \"contract YieldFarm is Ownable {...\"\n            let data := keccak256(/** @src -1:-1:-1 */ 0, /** @src 18:382:13213  \"contract YieldFarm is Ownable {...\" */ 0x20)\n            let slot := add(data, mul(oldLen, /** @src 18:3372:3380  \"poolInfo\" */ 0x05))\n            /// @src 18:382:13213  \"contract YieldFarm is Ownable {...\"\n            update_storage_value_offsett_contract_SobaToken_to_contract_SobaToken(slot, and(mload(value0), sub(shl(160, 1), 1)))\n            sstore(add(slot, 1), mload(add(value0, 0x20)))\n            sstore(add(slot, 2), mload(add(value0, 64)))\n            sstore(add(slot, 3), mload(add(value0, 96)))\n            sstore(add(slot, 4), mload(add(value0, 128)))\n        }\n    }\n    /// @use-src 2:\"@openzeppelin/contracts/access/Ownable.sol\", 7:\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\", 8:\"@openzeppelin/contracts/utils/Address.sol\", 9:\"@openzeppelin/contracts/utils/Context.sol\", 14:\"@openzeppelin/contracts/utils/math/SafeMath.sol\", 18:\"contracts/YieldFarm.sol\"\n    object \"YieldFarm_4836_deployed\" {\n        code {\n            {\n                /// @src 18:382:13213  \"contract YieldFarm is Ownable {...\"\n                let _1 := 64\n                mstore(_1, 128)\n                if iszero(lt(calldatasize(), 4))\n                {\n                    let _2 := 0\n                    switch shr(224, calldataload(_2))\n                    case 0x081e3eda {\n                        if callvalue() { revert(_2, _2) }\n                        abi_decode_6905(calldatasize())\n                        return(128, add(abi_encode_uint256_6906(sload(/** @src 18:3934:3942  \"poolInfo\" */ 0x05)), /** @src 18:382:13213  \"contract YieldFarm is Ownable {...\" */ not(127)))\n                    }\n                    case 0x1058d281 {\n                        if callvalue() { revert(_2, _2) }\n                        fun_leaveStaking(abi_decode_uint256(calldatasize()))\n                        return(mload(_1), _2)\n                    }\n                    case 0x1526fe27 {\n                        if callvalue() { revert(_2, _2) }\n                        let ret, ret_1, ret_2, ret_3, ret_4 := getter_fun_poolInfo(abi_decode_uint256(calldatasize()))\n                        let memPos := mload(_1)\n                        return(memPos, sub(abi_encode_contract_IERC20_uint256_uint256_uint256_uint256(memPos, ret, ret_1, ret_2, ret_3, ret_4), memPos))\n                    }\n                    case 0x17caf6f1 {\n                        if callvalue() { revert(_2, _2) }\n                        abi_decode_6905(calldatasize())\n                        let ret_5 := sload(/** @src 18:2423:2457  \"uint256 public totalAllocPoint = 0\" */ 7)\n                        /// @src 18:382:13213  \"contract YieldFarm is Ownable {...\"\n                        let memPos_1 := mload(_1)\n                        return(memPos_1, sub(abi_encode_uint256(memPos_1, ret_5), memPos_1))\n                    }\n                    case 0x1dbb2a22 {\n                        if callvalue() { revert(_2, _2) }\n                        fun_staking(abi_decode_uint256(calldatasize()))\n                        return(mload(_1), _2)\n                    }\n                    case 0x1eaaa045 {\n                        if callvalue() { revert(_2, _2) }\n                        let param, param_1, param_2 := abi_decode_uint256t_contract_IERC20t_bool(calldatasize())\n                        /// @src 18:4092:4941  \"function add(...\"\n                        modifier_onlyOwner_3810(param, param_1, param_2)\n                        /// @src 18:382:13213  \"contract YieldFarm is Ownable {...\"\n                        return(mload(_1), _2)\n                    }\n                    case 0x3ad10ef6 {\n                        if callvalue() { revert(_2, _2) }\n                        abi_decode_6905(calldatasize())\n                        let ret_6 := and(sload(/** @src 18:1910:1935  \"address public devAddress\" */ 2), /** @src 18:382:13213  \"contract YieldFarm is Ownable {...\" */ sub(shl(160, 1), 1))\n                        let memPos_2 := mload(_1)\n                        return(memPos_2, sub(abi_encode_address(memPos_2, ret_6), memPos_2))\n                    }\n                    case 0x441a3e70 {\n                        if callvalue() { revert(_2, _2) }\n                        let param_3, param_4 := abi_decode_uint256t_uint256(calldatasize())\n                        fun_withdraw(param_3, param_4)\n                        return(mload(_1), _2)\n                    }\n                    case 0x48cd4cb1 {\n                        if callvalue() { revert(_2, _2) }\n                        abi_decode_6905(calldatasize())\n                        let ret_7 := sload(/** @src 18:2643:2668  \"uint256 public startBlock\" */ 8)\n                        /// @src 18:382:13213  \"contract YieldFarm is Ownable {...\"\n                        let memPos_3 := mload(_1)\n                        return(memPos_3, sub(abi_encode_uint256(memPos_3, ret_7), memPos_3))\n                    }\n                    case 0x51eb05a6 {\n                        if callvalue() { revert(_2, _2) }\n                        fun_updatePool(abi_decode_uint256(calldatasize()))\n                        return(mload(_1), _2)\n                    }\n                    case 0x5312ea8e {\n                        if callvalue() { revert(_2, _2) }\n                        fun_emergencyWithdraw(abi_decode_uint256(calldatasize()))\n                        return(mload(_1), _2)\n                    }\n                    case 0x575cb0f6 {\n                        if callvalue() { revert(_2, _2) }\n                        abi_decode_6905(calldatasize())\n                        let memPos_4 := mload(_1)\n                        return(memPos_4, sub(abi_encode_uint256(memPos_4, /** @src 18:4025:4037  \"block.number\" */ number()), /** @src 18:382:13213  \"contract YieldFarm is Ownable {...\" */ memPos_4))\n                    }\n                    case 0x5ffe6146 {\n                        if callvalue() { revert(_2, _2) }\n                        /// @src 18:3736:3857  \"function updateMultiplier(uint256 multiplierNumber) public onlyOwner {...\"\n                        modifier_onlyOwner_3775(/** @src 18:382:13213  \"contract YieldFarm is Ownable {...\" */ abi_decode_uint256(calldatasize()))\n                        return(mload(_1), _2)\n                    }\n                    case 0x630b5ba1 {\n                        if callvalue() { revert(_2, _2) }\n                        abi_decode_6905(calldatasize())\n                        fun_massUpdatePools()\n                        return(mload(_1), _2)\n                    }\n                    case 0x64482f79 {\n                        if callvalue() { revert(_2, _2) }\n                        let param_5, param_6, param_7 := abi_decode_uint256t_uint256t_bool(calldatasize())\n                        /// @src 18:5021:5529  \"function set(...\"\n                        modifier_onlyOwner_3861(param_5, param_6, param_7)\n                        /// @src 18:382:13213  \"contract YieldFarm is Ownable {...\"\n                        return(mload(_1), _2)\n                    }\n                    case 0x715018a6 {\n                        if callvalue() { revert(_2, _2) }\n                        abi_decode_6905(calldatasize())\n                        /// @src 2:1824:1925  \"function renounceOwnership() public virtual onlyOwner {...\"\n                        modifier_onlyOwner_447()\n                        /// @src 18:382:13213  \"contract YieldFarm is Ownable {...\"\n                        return(mload(_1), _2)\n                    }\n                    case 0x8aa28550 {\n                        if callvalue() { revert(_2, _2) }\n                        abi_decode_6905(calldatasize())\n                        let ret_8 := sload(4)\n                        let memPos_5 := mload(_1)\n                        return(memPos_5, sub(abi_encode_uint256(memPos_5, ret_8), memPos_5))\n                    }\n                    case 0x8d88a90e {\n                        if callvalue() { revert(_2, _2) }\n                        fun_dev(abi_decode_address(calldatasize()))\n                        return(mload(_1), _2)\n                    }\n                    case 0x8da5cb5b {\n                        if callvalue() { revert(_2, _2) }\n                        abi_decode_6905(calldatasize())\n                        let ret_9 := and(sload(_2), sub(shl(160, 1), 1))\n                        let memPos_6 := mload(_1)\n                        return(memPos_6, sub(abi_encode_address(memPos_6, ret_9), memPos_6))\n                    }\n                    case 0x8dbb1e3a {\n                        if callvalue() { revert(_2, _2) }\n                        let param_8, param_9 := abi_decode_uint256t_uint256(calldatasize())\n                        let ret_10 := fun_getMultiplier(param_8, param_9)\n                        let memPos_7 := mload(_1)\n                        return(memPos_7, sub(abi_encode_uint256(memPos_7, ret_10), memPos_7))\n                    }\n                    case 0x93f1a40b {\n                        if callvalue() { revert(_2, _2) }\n                        let param_10, param_11 := abi_decode_uint256t_address(calldatasize())\n                        let ret_11, ret_12 := getter_fun_userInfo(param_10, param_11)\n                        let memPos_8 := mload(_1)\n                        return(memPos_8, sub(abi_encode_uint256_uint256(memPos_8, ret_11, ret_12), memPos_8))\n                    }\n                    case 0xac9b2915 {\n                        if callvalue() { revert(_2, _2) }\n                        abi_decode_6905(calldatasize())\n                        let ret_13 := sload(/** @src 18:1990:2017  \"uint256 public sobaPerBlock\" */ 3)\n                        /// @src 18:382:13213  \"contract YieldFarm is Ownable {...\"\n                        let memPos_9 := mload(_1)\n                        return(memPos_9, sub(abi_encode_uint256(memPos_9, ret_13), memPos_9))\n                    }\n                    case 0xcb3bc6de {\n                        if callvalue() { revert(_2, _2) }\n                        let param_12, param_13 := abi_decode_uint256t_address(calldatasize())\n                        let ret_14 := fun_pendingSoba(param_12, param_13)\n                        let memPos_10 := mload(_1)\n                        return(memPos_10, sub(abi_encode_uint256(memPos_10, ret_14), memPos_10))\n                    }\n                    case 0xd93be1c7 {\n                        if callvalue() { revert(_2, _2) }\n                        abi_decode_6905(calldatasize())\n                        let ret_15 := and(sload(/** @src 18:1880:1903  \"SobaToken public sobaja\" */ 1), /** @src 18:382:13213  \"contract YieldFarm is Ownable {...\" */ sub(shl(160, 1), 1))\n                        let memPos_11 := mload(_1)\n                        return(memPos_11, sub(abi_encode_address(memPos_11, ret_15), memPos_11))\n                    }\n                    case 0xe2bbb158 {\n                        if callvalue() { revert(_2, _2) }\n                        let param_14, param_15 := abi_decode_uint256t_uint256(calldatasize())\n                        fun_deposit(param_14, param_15)\n                        return(mload(_1), _2)\n                    }\n                    case 0xf2fde38b {\n                        if callvalue() { revert(_2, _2) }\n                        /// @src 2:2074:2272  \"function transferOwnership(address newOwner) public virtual onlyOwner {...\"\n                        modifier_onlyOwner(/** @src 18:382:13213  \"contract YieldFarm is Ownable {...\" */ abi_decode_address(calldatasize()))\n                        return(mload(_1), _2)\n                    }\n                }\n                revert(0, 0)\n            }\n            function abi_decode_6905(dataEnd)\n            {\n                if slt(add(dataEnd, not(3)), 0) { revert(0, 0) }\n            }\n            function abi_decode(headStart, dataEnd)\n            {\n                if slt(sub(dataEnd, headStart), 0) { revert(0, 0) }\n            }\n            function abi_encode_uint256_6906(value0) -> tail\n            {\n                tail := 160\n                mstore(128, value0)\n            }\n            function abi_encode_uint256(headStart, value0) -> tail\n            {\n                tail := add(headStart, 32)\n                mstore(headStart, value0)\n            }\n            function abi_decode_uint256(dataEnd) -> value0\n            {\n                if slt(add(dataEnd, not(3)), 32) { revert(0, 0) }\n                value0 := calldataload(4)\n            }\n            function panic_error_0x32()\n            {\n                mstore(0, shl(224, 0x4e487b71))\n                mstore(4, 0x32)\n                revert(0, 0x24)\n            }\n            function storage_array_index_access_struct_PoolInfo_storage_dyn() -> slot, offset\n            {\n                if iszero(sload(/** @src 18:4650:4658  \"poolInfo\" */ 0x05))\n                /// @src 18:382:13213  \"contract YieldFarm is Ownable {...\"\n                { panic_error_0x32() }\n                mstore(/** @src 18:10612:10613  \"0\" */ 0x00, /** @src 18:4650:4658  \"poolInfo\" */ 0x05)\n                /// @src 18:382:13213  \"contract YieldFarm is Ownable {...\"\n                slot := 1546678032441257452667456735582814959992782782816731922691272282333561699760\n                offset := /** @src 18:10612:10613  \"0\" */ 0x00\n            }\n            /// @src 18:382:13213  \"contract YieldFarm is Ownable {...\"\n            function storage_array_index_access_struct_PoolInfo__dyn(index) -> slot, offset\n            {\n                if iszero(lt(index, sload(/** @src 18:4650:4658  \"poolInfo\" */ 0x05)))\n                /// @src 18:382:13213  \"contract YieldFarm is Ownable {...\"\n                { panic_error_0x32() }\n                mstore(/** @src -1:-1:-1 */ 0, /** @src 18:4650:4658  \"poolInfo\" */ 0x05)\n                /// @src 18:382:13213  \"contract YieldFarm is Ownable {...\"\n                slot := add(1546678032441257452667456735582814959992782782816731922691272282333561699760, mul(index, /** @src 18:4650:4658  \"poolInfo\" */ 0x05))\n                /// @src 18:382:13213  \"contract YieldFarm is Ownable {...\"\n                offset := /** @src -1:-1:-1 */ 0\n            }\n            /// @src 18:382:13213  \"contract YieldFarm is Ownable {...\"\n            function extract_from_storage_value_offsett_contract_IERC20(slot_value) -> value\n            {\n                value := and(slot_value, sub(shl(160, 1), 1))\n            }\n            /// @ast-id 3689 @src 18:2169:2195  \"PoolInfo[] public poolInfo\"\n            function getter_fun_poolInfo(key) -> ret_address, ret, ret_1, ret_2, ret_3\n            {\n                if iszero(lt(key, /** @src 18:382:13213  \"contract YieldFarm is Ownable {...\" */ sload(/** @src 18:2169:2195  \"PoolInfo[] public poolInfo\" */ 5))) { revert(0, 0) }\n                /// @src 18:382:13213  \"contract YieldFarm is Ownable {...\"\n                mstore(/** @src -1:-1:-1 */ 0, /** @src 18:2169:2195  \"PoolInfo[] public poolInfo\" */ 5)\n                /// @src 18:382:13213  \"contract YieldFarm is Ownable {...\"\n                let _1 := mul(key, /** @src 18:2169:2195  \"PoolInfo[] public poolInfo\" */ 5)\n                ret_address := /** @src 18:382:13213  \"contract YieldFarm is Ownable {...\" */ and(sload(add(1546678032441257452667456735582814959992782782816731922691272282333561699760, _1)), sub(shl(160, 1), 1))\n                /// @src 18:2169:2195  \"PoolInfo[] public poolInfo\"\n                ret := /** @src 18:382:13213  \"contract YieldFarm is Ownable {...\" */ sload(/** @src 18:2169:2195  \"PoolInfo[] public poolInfo\" */ add(/** @src 18:382:13213  \"contract YieldFarm is Ownable {...\" */ _1, /** @src 18:2169:2195  \"PoolInfo[] public poolInfo\" */ 0x036b6384b5eca791c62761152d0c79bb0604c104a5fb6f4eb0703f3154bb3db1))\n                ret_1 := /** @src 18:382:13213  \"contract YieldFarm is Ownable {...\" */ sload(/** @src 18:2169:2195  \"PoolInfo[] public poolInfo\" */ add(/** @src 18:382:13213  \"contract YieldFarm is Ownable {...\" */ _1, /** @src 18:2169:2195  \"PoolInfo[] public poolInfo\" */ 0x036b6384b5eca791c62761152d0c79bb0604c104a5fb6f4eb0703f3154bb3db2))\n                ret_2 := /** @src 18:382:13213  \"contract YieldFarm is Ownable {...\" */ sload(/** @src 18:2169:2195  \"PoolInfo[] public poolInfo\" */ add(/** @src 18:382:13213  \"contract YieldFarm is Ownable {...\" */ _1, /** @src 18:2169:2195  \"PoolInfo[] public poolInfo\" */ 0x036b6384b5eca791c62761152d0c79bb0604c104a5fb6f4eb0703f3154bb3db3))\n                ret_3 := /** @src 18:382:13213  \"contract YieldFarm is Ownable {...\" */ sload(/** @src 18:2169:2195  \"PoolInfo[] public poolInfo\" */ add(/** @src 18:382:13213  \"contract YieldFarm is Ownable {...\" */ _1, /** @src 18:2169:2195  \"PoolInfo[] public poolInfo\" */ 0x036b6384b5eca791c62761152d0c79bb0604c104a5fb6f4eb0703f3154bb3db4))\n            }\n            /// @src 18:382:13213  \"contract YieldFarm is Ownable {...\"\n            function abi_encode_contract_IERC20_uint256_uint256_uint256_uint256(headStart, value0, value1, value2, value3, value4) -> tail\n            {\n                tail := add(headStart, 160)\n                mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n                mstore(add(headStart, 32), value1)\n                mstore(add(headStart, 64), value2)\n                mstore(add(headStart, 96), value3)\n                mstore(add(headStart, 128), value4)\n            }\n            function validator_revert_contract_IERC20(value)\n            {\n                if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n            }\n            function validator_revert_bool(value)\n            {\n                if iszero(eq(value, iszero(iszero(value)))) { revert(0, 0) }\n            }\n            function abi_decode_uint256t_contract_IERC20t_bool(dataEnd) -> value0, value1, value2\n            {\n                if slt(add(dataEnd, not(3)), 96) { revert(0, 0) }\n                value0 := calldataload(4)\n                let value := calldataload(36)\n                validator_revert_contract_IERC20(value)\n                value1 := value\n                let value_1 := calldataload(68)\n                validator_revert_bool(value_1)\n                value2 := value_1\n            }\n            function abi_encode_address(headStart, value0) -> tail\n            {\n                tail := add(headStart, 32)\n                mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n            }\n            function abi_decode_uint256t_uint256(dataEnd) -> value0, value1\n            {\n                if slt(add(dataEnd, not(3)), 64) { revert(0, 0) }\n                value0 := calldataload(4)\n                value1 := calldataload(36)\n            }\n            function abi_decode_uint256t_uint256t_bool(dataEnd) -> value0, value1, value2\n            {\n                if slt(add(dataEnd, not(3)), 96) { revert(0, 0) }\n                value0 := calldataload(4)\n                value1 := calldataload(36)\n                let value := calldataload(68)\n                validator_revert_bool(value)\n                value2 := value\n            }\n            function abi_decode_address(dataEnd) -> value0\n            {\n                if slt(add(dataEnd, not(3)), 32) { revert(0, 0) }\n                let value := calldataload(4)\n                validator_revert_contract_IERC20(value)\n                value0 := value\n            }\n            function abi_decode_uint256t_address(dataEnd) -> value0, value1\n            {\n                if slt(add(dataEnd, not(3)), 64) { revert(0, 0) }\n                value0 := calldataload(4)\n                let value := calldataload(36)\n                validator_revert_contract_IERC20(value)\n                value1 := value\n            }\n            function mapping_index_access_mapping_uint256_mapping_address_struct_UserInfo_storage__of_uint256(key) -> dataSlot\n            {\n                mstore(0, key)\n                mstore(0x20, /** @src 18:6632:6640  \"userInfo\" */ 0x06)\n                /// @src 18:382:13213  \"contract YieldFarm is Ownable {...\"\n                dataSlot := keccak256(0, 0x40)\n            }\n            function mapping_index_access_mapping_uint256_mapping_address_struct_UserInfo_storage_of_uint256() -> dataSlot\n            {\n                mstore(/** @src 18:10612:10613  \"0\" */ 0x00, 0x00)\n                /// @src 18:382:13213  \"contract YieldFarm is Ownable {...\"\n                mstore(0x20, /** @src 18:10648:10656  \"userInfo\" */ 0x06)\n                /// @src 18:382:13213  \"contract YieldFarm is Ownable {...\"\n                dataSlot := keccak256(/** @src 18:10612:10613  \"0\" */ 0x00, /** @src 18:382:13213  \"contract YieldFarm is Ownable {...\" */ 0x40)\n            }\n            function mapping_index_access_mapping_address_struct_UserInfo_storage_of_address(slot, key) -> dataSlot\n            {\n                mstore(0, and(key, sub(shl(160, 1), 1)))\n                mstore(0x20, slot)\n                dataSlot := keccak256(0, 0x40)\n            }\n            /// @ast-id 3696 @src 18:2249:2313  \"mapping(uint256 => mapping(address => UserInfo)) public userInfo\"\n            function getter_fun_userInfo(key, key_1) -> ret, ret_1\n            {\n                /// @src 18:382:13213  \"contract YieldFarm is Ownable {...\"\n                mstore(/** @src -1:-1:-1 */ 0, /** @src 18:382:13213  \"contract YieldFarm is Ownable {...\" */ key)\n                mstore(0x20, /** @src 18:2249:2313  \"mapping(uint256 => mapping(address => UserInfo)) public userInfo\" */ 6)\n                let slot := mapping_index_access_mapping_address_struct_UserInfo_storage_of_address(/** @src 18:382:13213  \"contract YieldFarm is Ownable {...\" */ keccak256(/** @src -1:-1:-1 */ 0, /** @src 18:382:13213  \"contract YieldFarm is Ownable {...\" */ 0x40), /** @src 18:2249:2313  \"mapping(uint256 => mapping(address => UserInfo)) public userInfo\" */ key_1)\n                ret := /** @src 18:382:13213  \"contract YieldFarm is Ownable {...\" */ sload(/** @src 18:2249:2313  \"mapping(uint256 => mapping(address => UserInfo)) public userInfo\" */ slot)\n                ret_1 := /** @src 18:382:13213  \"contract YieldFarm is Ownable {...\" */ sload(/** @src 18:2249:2313  \"mapping(uint256 => mapping(address => UserInfo)) public userInfo\" */ add(slot, 1))\n            }\n            /// @src 18:382:13213  \"contract YieldFarm is Ownable {...\"\n            function abi_encode_uint256_uint256(headStart, value0, value1) -> tail\n            {\n                tail := add(headStart, 64)\n                mstore(headStart, value0)\n                mstore(add(headStart, 32), value1)\n            }\n            /// @ast-id 420 @src 2:1063:1125  \"modifier onlyOwner() {...\"\n            function modifier_onlyOwner_447()\n            {\n                fun_checkOwner()\n                /// @src 18:382:13213  \"contract YieldFarm is Ownable {...\"\n                let _1 := sload(0)\n                sstore(0, and(_1, shl(160, 0xffffffffffffffffffffffff)))\n                /// @src 2:2566:2606  \"OwnershipTransferred(oldOwner, newOwner)\"\n                log3(/** @src 18:382:13213  \"contract YieldFarm is Ownable {...\" */ mload(64), 0, /** @src 2:2566:2606  \"OwnershipTransferred(oldOwner, newOwner)\" */ 0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0, /** @src 18:382:13213  \"contract YieldFarm is Ownable {...\" */ and(_1, sub(shl(160, 1), 1)), 0)\n            }\n            /// @ast-id 443 @src 2:1359:1489  \"function _checkOwner() internal view virtual {...\"\n            function fun_checkOwner()\n            {\n                /// @src 18:382:13213  \"contract YieldFarm is Ownable {...\"\n                let value := and(sload(/** @src 2:1273:1279  \"_owner\" */ 0x00), /** @src 18:382:13213  \"contract YieldFarm is Ownable {...\" */ sub(shl(160, 1), 1))\n                if iszero(/** @src 2:1422:1445  \"owner() == _msgSender()\" */ eq(/** @src 18:382:13213  \"contract YieldFarm is Ownable {...\" */ value, /** @src 9:719:729  \"msg.sender\" */ caller()))\n                /// @src 18:382:13213  \"contract YieldFarm is Ownable {...\"\n                {\n                    let memPtr := mload(64)\n                    mstore(memPtr, shl(229, 4594637))\n                    mstore(add(memPtr, 4), 32)\n                    mstore(add(memPtr, 36), 32)\n                    mstore(add(memPtr, 68), \"Ownable: caller is not the owner\")\n                    revert(memPtr, 100)\n                }\n            }\n            /// @ast-id 420 @src 2:1063:1125  \"modifier onlyOwner() {...\"\n            function modifier_onlyOwner(var_newOwner)\n            {\n                fun_checkOwner()\n                /// @src 18:382:13213  \"contract YieldFarm is Ownable {...\"\n                let _1 := sub(shl(160, 1), 1)\n                let _2 := and(/** @src 2:2162:2184  \"newOwner != address(0)\" */ var_newOwner, /** @src 18:382:13213  \"contract YieldFarm is Ownable {...\" */ _1)\n                if /** @src 2:2162:2184  \"newOwner != address(0)\" */ iszero(/** @src 18:382:13213  \"contract YieldFarm is Ownable {...\" */ _2)\n                {\n                    let memPtr := mload(64)\n                    mstore(memPtr, shl(229, 4594637))\n                    mstore(add(memPtr, 4), 32)\n                    mstore(add(memPtr, 36), 38)\n                    mstore(add(memPtr, 68), \"Ownable: new owner is the zero a\")\n                    mstore(add(memPtr, 100), \"ddress\")\n                    revert(memPtr, 132)\n                }\n                let _3 := sload(/** @src 2:2518:2524  \"_owner\" */ 0x00)\n                /// @src 18:382:13213  \"contract YieldFarm is Ownable {...\"\n                sstore(/** @src 2:2518:2524  \"_owner\" */ 0x00, /** @src 18:382:13213  \"contract YieldFarm is Ownable {...\" */ or(and(_3, shl(160, 0xffffffffffffffffffffffff)), _2))\n                /// @src 2:2566:2606  \"OwnershipTransferred(oldOwner, newOwner)\"\n                log3(/** @src 18:382:13213  \"contract YieldFarm is Ownable {...\" */ mload(64), /** @src 2:2518:2524  \"_owner\" */ 0x00, /** @src 2:2566:2606  \"OwnershipTransferred(oldOwner, newOwner)\" */ 0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0, /** @src 18:382:13213  \"contract YieldFarm is Ownable {...\" */ and(_3, _1), /** @src 2:2566:2606  \"OwnershipTransferred(oldOwner, newOwner)\" */ var_newOwner)\n            }\n            /// @src 18:382:13213  \"contract YieldFarm is Ownable {...\"\n            function update_storage_value_offsett_address_to_address(slot, value)\n            {\n                sstore(slot, or(and(sload(slot), shl(160, 0xffffffffffffffffffffffff)), and(value, sub(shl(160, 1), 1))))\n            }\n            /// @ast-id 420 @src 2:1063:1125  \"modifier onlyOwner() {...\"\n            function modifier_onlyOwner_3775(var_multiplierNumber)\n            {\n                fun_checkOwner()\n                /// @src 18:382:13213  \"contract YieldFarm is Ownable {...\"\n                sstore(/** @src 18:3815:3850  \"BONUS_MULTIPLIER = multiplierNumber\" */ 0x04, /** @src 18:382:13213  \"contract YieldFarm is Ownable {...\" */ var_multiplierNumber)\n            }\n            /// @ast-id 420 @src 2:1063:1125  \"modifier onlyOwner() {...\"\n            function modifier_onlyOwner_3810(var__allocPoint, var_lpToken_address, var_withUpdate)\n            {\n                fun_checkOwner()\n                /// @src 18:4305:4364  \"if (_withUpdate) {...\"\n                if var_withUpdate { fun_massUpdatePools() }\n                /// @src 18:382:13213  \"contract YieldFarm is Ownable {...\"\n                let _1 := sload(/** @src 18:4517:4527  \"startBlock\" */ 0x08)\n                /// @src 18:4502:4579  \"block.number > startBlock...\"\n                let expr := /** @src -1:-1:-1 */ 0\n                /// @src 18:4502:4579  \"block.number > startBlock...\"\n                switch /** @src 18:4502:4527  \"block.number > startBlock\" */ gt(/** @src 18:4502:4514  \"block.number\" */ number(), /** @src 18:4502:4527  \"block.number > startBlock\" */ _1)\n                case /** @src 18:4502:4579  \"block.number > startBlock...\" */ 0 { expr := _1 }\n                default {\n                    expr := /** @src 18:4502:4514  \"block.number\" */ number()\n                }\n                /// @src 18:382:13213  \"contract YieldFarm is Ownable {...\"\n                sstore(/** @src 18:4608:4623  \"totalAllocPoint\" */ 0x07, /** @src 14:2839:2844  \"a + b\" */ checked_add_uint256(/** @src 18:382:13213  \"contract YieldFarm is Ownable {...\" */ sload(/** @src 18:4608:4623  \"totalAllocPoint\" */ 0x07), /** @src 14:2839:2844  \"a + b\" */ var__allocPoint))\n                /// @src 18:382:13213  \"contract YieldFarm is Ownable {...\"\n                let memPtr := mload(64)\n                finalize_allocation_6943(memPtr)\n                let _2 := sub(shl(160, 1), 1)\n                mstore(memPtr, and(var_lpToken_address, _2))\n                /// @src 18:4677:4895  \"PoolInfo({...\"\n                let _3 := add(memPtr, 32)\n                /// @src 18:382:13213  \"contract YieldFarm is Ownable {...\"\n                mstore(_3, var__allocPoint)\n                /// @src 18:4677:4895  \"PoolInfo({...\"\n                let _4 := add(memPtr, /** @src 18:382:13213  \"contract YieldFarm is Ownable {...\" */ 64)\n                mstore(_4, expr)\n                /// @src 18:4677:4895  \"PoolInfo({...\"\n                let _5 := add(memPtr, 96)\n                /// @src 18:382:13213  \"contract YieldFarm is Ownable {...\"\n                mstore(_5, /** @src -1:-1:-1 */ 0)\n                /// @src 18:4677:4895  \"PoolInfo({...\"\n                let _6 := add(memPtr, 128)\n                /// @src 18:382:13213  \"contract YieldFarm is Ownable {...\"\n                mstore(_6, /** @src -1:-1:-1 */ 0)\n                /// @src 18:382:13213  \"contract YieldFarm is Ownable {...\"\n                let oldLen := sload(/** @src 18:4650:4658  \"poolInfo\" */ 0x05)\n                /// @src 18:382:13213  \"contract YieldFarm is Ownable {...\"\n                if iszero(lt(oldLen, 18446744073709551616)) { panic_error_0x41() }\n                sstore(/** @src 18:4650:4658  \"poolInfo\" */ 0x05, /** @src 18:382:13213  \"contract YieldFarm is Ownable {...\" */ add(oldLen, 1))\n                let slot, offset := storage_array_index_access_struct_PoolInfo__dyn(oldLen)\n                if offset\n                {\n                    mstore(/** @src -1:-1:-1 */ 0, /** @src 18:382:13213  \"contract YieldFarm is Ownable {...\" */ shl(224, 0x4e487b71))\n                    mstore(4, /** @src -1:-1:-1 */ 0)\n                    /// @src 18:382:13213  \"contract YieldFarm is Ownable {...\"\n                    revert(/** @src -1:-1:-1 */ 0, /** @src 18:382:13213  \"contract YieldFarm is Ownable {...\" */ 0x24)\n                }\n                update_storage_value_offsett_address_to_address(slot, and(mload(memPtr), _2))\n                sstore(add(slot, 1), mload(_3))\n                sstore(add(slot, 2), mload(_4))\n                sstore(add(slot, 3), mload(_5))\n                sstore(add(slot, 4), mload(_6))\n                /// @src 18:4650:4905  \"poolInfo.push(...\"\n                fun_updateStakingPool()\n            }\n            /// @src 18:382:13213  \"contract YieldFarm is Ownable {...\"\n            function panic_error_0x41()\n            {\n                mstore(0, shl(224, 0x4e487b71))\n                mstore(4, 0x41)\n                revert(0, 0x24)\n            }\n            function finalize_allocation_6943(memPtr)\n            {\n                let newFreePtr := add(memPtr, 160)\n                if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n                mstore(64, newFreePtr)\n            }\n            function finalize_allocation_11296(memPtr)\n            {\n                let newFreePtr := add(memPtr, 64)\n                if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n                mstore(64, newFreePtr)\n            }\n            function finalize_allocation(memPtr, size)\n            {\n                let newFreePtr := add(memPtr, and(add(size, 31), not(31)))\n                if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n                mstore(64, newFreePtr)\n            }\n            function panic_error_0x11()\n            {\n                mstore(0, shl(224, 0x4e487b71))\n                mstore(4, 0x11)\n                revert(0, 0x24)\n            }\n            function checked_add_uint256(x, y) -> sum\n            {\n                if gt(x, not(y)) { panic_error_0x11() }\n                sum := add(x, y)\n            }\n            /// @ast-id 420 @src 2:1063:1125  \"modifier onlyOwner() {...\"\n            function modifier_onlyOwner_3861(var_poolId, var_allocPoint, var_withUpdate)\n            {\n                fun_checkOwner()\n                /// @src 18:5147:5206  \"if (_withUpdate) {...\"\n                if var_withUpdate { fun_massUpdatePools() }\n                /// @src 18:5240:5257  \"poolInfo[_poolId]\"\n                let _1, _2 := storage_array_index_access_struct_PoolInfo__dyn(var_poolId)\n                /// @src 18:382:13213  \"contract YieldFarm is Ownable {...\"\n                let _3 := sload(/** @src 18:5240:5268  \"poolInfo[_poolId].allocPoint\" */ add(_1, 1))\n                /// @src 18:5278:5295  \"poolInfo[_poolId]\"\n                let _4, _5 := storage_array_index_access_struct_PoolInfo__dyn(var_poolId)\n                /// @src 18:382:13213  \"contract YieldFarm is Ownable {...\"\n                sstore(/** @src 18:5278:5306  \"poolInfo[_poolId].allocPoint\" */ add(_4, /** @src 18:5240:5268  \"poolInfo[_poolId].allocPoint\" */ 1), /** @src 18:382:13213  \"contract YieldFarm is Ownable {...\" */ var_allocPoint)\n                /// @src 18:5330:5523  \"if (prevAllocPoint != _allocPoint) {...\"\n                if /** @src 18:5334:5363  \"prevAllocPoint != _allocPoint\" */ iszero(eq(_3, var_allocPoint))\n                /// @src 18:5330:5523  \"if (prevAllocPoint != _allocPoint) {...\"\n                {\n                    /// @src 18:382:13213  \"contract YieldFarm is Ownable {...\"\n                    let _6 := sload(/** @src 18:5397:5412  \"totalAllocPoint\" */ 0x07)\n                    /// @src 18:382:13213  \"contract YieldFarm is Ownable {...\"\n                    if lt(_6, _3) { panic_error_0x11() }\n                    sstore(/** @src 18:5397:5412  \"totalAllocPoint\" */ 0x07, /** @src 14:2839:2844  \"a + b\" */ checked_add_uint256(/** @src 18:382:13213  \"contract YieldFarm is Ownable {...\" */ sub(_6, _3), /** @src 14:2839:2844  \"a + b\" */ var_allocPoint))\n                    /// @src 18:5379:5479  \"totalAllocPoint = totalAllocPoint.sub(prevAllocPoint).add(...\"\n                    fun_updateStakingPool()\n                }\n            }\n            /// @src 18:382:13213  \"contract YieldFarm is Ownable {...\"\n            function checked_sub_uint256(x, y) -> diff\n            {\n                if lt(x, y) { panic_error_0x11() }\n                diff := sub(x, y)\n            }\n            function increment_uint256(value) -> ret\n            {\n                if eq(value, not(0)) { panic_error_0x11() }\n                ret := add(value, 1)\n            }\n            /// @ast-id 3969 @src 18:5636:6165  \"function updateStakingPool() internal {...\"\n            function fun_updateStakingPool()\n            {\n                /// @src 18:5701:5716  \"poolInfo.length\"\n                let expr := /** @src 18:382:13213  \"contract YieldFarm is Ownable {...\" */ sload(/** @src 18:5701:5709  \"poolInfo\" */ 0x05)\n                /// @src 18:5726:5744  \"uint256 points = 0\"\n                let var_points := /** @src 18:5743:5744  \"0\" */ 0x00\n                /// @src 18:5787:5805  \"uint256 poolId = 1\"\n                let var_poolId := /** @src 18:5804:5805  \"1\" */ 0x01\n                /// @src 18:5782:5907  \"for (uint256 poolId = 1; poolId < length; ++poolId) {...\"\n                for { }\n                /** @src 18:5807:5822  \"poolId < length\" */ lt(var_poolId, expr)\n                /// @src 18:5787:5805  \"uint256 poolId = 1\"\n                {\n                    /// @src 18:5824:5832  \"++poolId\"\n                    var_poolId := increment_uint256(var_poolId)\n                }\n                {\n                    /// @src 18:5868:5884  \"poolInfo[poolId]\"\n                    let _1, _2 := storage_array_index_access_struct_PoolInfo__dyn(var_poolId)\n                    /// @src 18:5848:5896  \"points = points.add(poolInfo[poolId].allocPoint)\"\n                    var_points := /** @src 14:2839:2844  \"a + b\" */ checked_add_uint256(var_points, /** @src 18:382:13213  \"contract YieldFarm is Ownable {...\" */ sload(/** @src 18:5868:5895  \"poolInfo[poolId].allocPoint\" */ add(_1, /** @src 18:5804:5805  \"1\" */ 0x01)))\n                }\n                /// @src 18:5916:6159  \"if (points != 0) {...\"\n                if /** @src 18:5920:5931  \"points != 0\" */ iszero(iszero(var_points))\n                /// @src 18:5916:6159  \"if (points != 0) {...\"\n                {\n                    /// @src 18:382:13213  \"contract YieldFarm is Ownable {...\"\n                    let r := div(var_points, /** @src 18:5967:5968  \"3\" */ 0x03)\n                    /// @src 18:382:13213  \"contract YieldFarm is Ownable {...\"\n                    let _3 := sload(/** @src 18:6018:6033  \"totalAllocPoint\" */ 0x07)\n                    /// @src 18:6038:6049  \"poolInfo[0]\"\n                    let _4, _5 := storage_array_index_access_struct_PoolInfo_storage_dyn()\n                    /// @src 18:382:13213  \"contract YieldFarm is Ownable {...\"\n                    let _6 := sload(/** @src 18:6038:6060  \"poolInfo[0].allocPoint\" */ add(_4, /** @src 18:5804:5805  \"1\" */ 0x01))\n                    /// @src 18:382:13213  \"contract YieldFarm is Ownable {...\"\n                    if lt(_3, _6) { panic_error_0x11() }\n                    sstore(/** @src 18:6018:6033  \"totalAllocPoint\" */ 0x07, /** @src 14:2839:2844  \"a + b\" */ checked_add_uint256(/** @src 18:382:13213  \"contract YieldFarm is Ownable {...\" */ sub(_3, _6), /** @src 14:2839:2844  \"a + b\" */ r))\n                    /// @src 18:6117:6128  \"poolInfo[0]\"\n                    let _7, _8 := storage_array_index_access_struct_PoolInfo_storage_dyn()\n                    /// @src 18:382:13213  \"contract YieldFarm is Ownable {...\"\n                    sstore(/** @src 18:6117:6139  \"poolInfo[0].allocPoint\" */ add(_7, /** @src 18:5804:5805  \"1\" */ 0x01), /** @src 18:382:13213  \"contract YieldFarm is Ownable {...\" */ r)\n                }\n            }\n            function checked_div_uint256_6962(x) -> r\n            {\n                r := div(x, /** @src 18:7315:7319  \"1e18\" */ 0x0de0b6b3a7640000)\n            }\n            /// @src 18:382:13213  \"contract YieldFarm is Ownable {...\"\n            function checked_div_uint256(x, y) -> r\n            {\n                if iszero(y)\n                {\n                    mstore(0, shl(224, 0x4e487b71))\n                    mstore(4, 0x12)\n                    revert(0, 0x24)\n                }\n                r := div(x, y)\n            }\n            /// @ast-id 3987 @src 18:6238:6401  \"function getMultiplier(...\"\n            function fun_getMultiplier(var_from, var_to) -> var\n            {\n                /// @src 18:382:13213  \"contract YieldFarm is Ownable {...\"\n                if lt(var_to, var_from) { panic_error_0x11() }\n                /// @src 18:6351:6394  \"return _to.sub(_from).mul(BONUS_MULTIPLIER)\"\n                var := /** @src 14:3549:3554  \"a * b\" */ checked_mul_uint256(/** @src 18:382:13213  \"contract YieldFarm is Ownable {...\" */ sub(var_to, var_from), sload(/** @src 18:6377:6393  \"BONUS_MULTIPLIER\" */ 0x04))\n            }\n            /// @src 18:382:13213  \"contract YieldFarm is Ownable {...\"\n            function checked_mul_uint256_6961(x) -> product\n            {\n                /// @src 18:7218:7222  \"1e18\"\n                let _1 := 0x0de0b6b3a7640000\n                /// @src 18:382:13213  \"contract YieldFarm is Ownable {...\"\n                if and(iszero(iszero(x)), gt(/** @src 18:7218:7222  \"1e18\" */ _1, /** @src 18:382:13213  \"contract YieldFarm is Ownable {...\" */ div(not(0), x))) { panic_error_0x11() }\n                product := mul(x, /** @src 18:7218:7222  \"1e18\" */ _1)\n            }\n            /// @src 18:382:13213  \"contract YieldFarm is Ownable {...\"\n            function checked_mul_uint256(x, y) -> product\n            {\n                if and(iszero(iszero(x)), gt(y, div(not(0), x))) { panic_error_0x11() }\n                product := mul(x, y)\n            }\n            function abi_decode_uint256_fromMemory(headStart, dataEnd) -> value0\n            {\n                if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n                value0 := mload(headStart)\n            }\n            function revert_forward()\n            {\n                let pos := mload(64)\n                returndatacopy(pos, 0, returndatasize())\n                revert(pos, returndatasize())\n            }\n            /// @ast-id 4089 @src 18:6440:7348  \"function pendingSoba(...\"\n            function fun_pendingSoba(var_poolId, var_user) -> var_\n            {\n                /// @src 18:6581:6598  \"poolInfo[_poolId]\"\n                let _1, _2 := storage_array_index_access_struct_PoolInfo__dyn(var_poolId)\n                /// @src 18:6632:6656  \"userInfo[_poolId][_user]\"\n                let _3 := mapping_index_access_mapping_address_struct_UserInfo_storage_of_address(/** @src 18:6632:6649  \"userInfo[_poolId]\" */ mapping_index_access_mapping_uint256_mapping_address_struct_UserInfo_storage__of_uint256(var_poolId), /** @src 18:6632:6656  \"userInfo[_poolId][_user]\" */ var_user)\n                /// @src 18:6667:6713  \"uint256 accSobaPerShare = pool.accSobaPerShare\"\n                let var_accSobaPerShare := /** @src 18:382:13213  \"contract YieldFarm is Ownable {...\" */ sload(/** @src 18:6693:6713  \"pool.accSobaPerShare\" */ add(_1, 3))\n                /// @src 18:6742:6764  \"pool.lpToken.balanceOf\"\n                let expr_address := extract_from_storage_value_offsett_contract_IERC20(/** @src 18:382:13213  \"contract YieldFarm is Ownable {...\" */ extract_from_storage_value_offsett_contract_IERC20(sload(/** @src 18:6742:6754  \"pool.lpToken\" */ _1)))\n                /// @src 18:6742:6779  \"pool.lpToken.balanceOf(address(this))\"\n                if iszero(extcodesize(expr_address))\n                {\n                    /// @src 18:382:13213  \"contract YieldFarm is Ownable {...\"\n                    revert(/** @src -1:-1:-1 */ 0, 0)\n                }\n                /// @src 18:6742:6779  \"pool.lpToken.balanceOf(address(this))\"\n                let _4 := /** @src 18:382:13213  \"contract YieldFarm is Ownable {...\" */ mload(64)\n                /// @src 18:6742:6779  \"pool.lpToken.balanceOf(address(this))\"\n                mstore(_4, /** @src 18:382:13213  \"contract YieldFarm is Ownable {...\" */ shl(224, 0x70a08231))\n                /// @src 18:6742:6779  \"pool.lpToken.balanceOf(address(this))\"\n                let _5 := staticcall(gas(), expr_address, _4, sub(abi_encode_address(add(_4, 4), /** @src 18:6773:6777  \"this\" */ address()), /** @src 18:6742:6779  \"pool.lpToken.balanceOf(address(this))\" */ _4), _4, 32)\n                if iszero(_5) { revert_forward() }\n                let expr := /** @src -1:-1:-1 */ 0\n                /// @src 18:6742:6779  \"pool.lpToken.balanceOf(address(this))\"\n                if _5\n                {\n                    finalize_allocation(_4, returndatasize())\n                    expr := abi_decode_uint256_fromMemory(_4, add(_4, returndatasize()))\n                }\n                /// @src 18:382:13213  \"contract YieldFarm is Ownable {...\"\n                let _6 := sload(/** @src 18:6808:6828  \"pool.lastRewardBlock\" */ add(_1, 2))\n                /// @src 18:6793:6845  \"block.number > pool.lastRewardBlock && lpSupply != 0\"\n                let expr_1 := /** @src 18:6793:6828  \"block.number > pool.lastRewardBlock\" */ gt(/** @src 18:6793:6805  \"block.number\" */ number(), /** @src 18:6793:6828  \"block.number > pool.lastRewardBlock\" */ _6)\n                /// @src 18:6793:6845  \"block.number > pool.lastRewardBlock && lpSupply != 0\"\n                if expr_1\n                {\n                    expr_1 := /** @src 18:6832:6845  \"lpSupply != 0\" */ iszero(iszero(expr))\n                }\n                /// @src 18:6789:7262  \"if (block.number > pool.lastRewardBlock && lpSupply != 0) {...\"\n                if expr_1\n                {\n                    /// @src 18:6882:6977  \"getMultiplier(...\"\n                    let expr_2 := fun_getMultiplier(/** @src 18:382:13213  \"contract YieldFarm is Ownable {...\" */ _6, /** @src 18:6793:6805  \"block.number\" */ number())\n                    /// @src 14:3542:3554  \"return a * b\"\n                    let var := /** @src 14:3549:3554  \"a * b\" */ checked_mul_uint256(expr_2, /** @src 18:382:13213  \"contract YieldFarm is Ownable {...\" */ sload(/** @src 18:6693:6713  \"pool.accSobaPerShare\" */ 3))\n                    /// @src 14:3542:3554  \"return a * b\"\n                    let var_1 := /** @src 14:3549:3554  \"a * b\" */ checked_mul_uint256(var, /** @src 18:382:13213  \"contract YieldFarm is Ownable {...\" */ sload(/** @src 18:7079:7094  \"pool.allocPoint\" */ add(_1, 1)))\n                    /// @src 18:7148:7251  \"accSobaPerShare = accSobaPerShare.add(...\"\n                    var_accSobaPerShare := /** @src 14:2839:2844  \"a + b\" */ checked_add_uint256(var_accSobaPerShare, /** @src 14:3934:3939  \"a / b\" */ checked_div_uint256(/** @src 14:3549:3554  \"a * b\" */ checked_mul_uint256_6961(/** @src 14:3934:3939  \"a / b\" */ checked_div_uint256(var_1, /** @src 18:382:13213  \"contract YieldFarm is Ownable {...\" */ sload(/** @src 18:7117:7132  \"totalAllocPoint\" */ 0x07))), /** @src 14:3934:3939  \"a / b\" */ expr))\n                }\n                /// @src 18:7278:7320  \"user.amount.mul(accSobaPerShare).div(1e18)\"\n                let expr_3 := /** @src 14:3934:3939  \"a / b\" */ checked_div_uint256_6962(/** @src 14:3549:3554  \"a * b\" */ checked_mul_uint256(/** @src 18:382:13213  \"contract YieldFarm is Ownable {...\" */ sload(/** @src 18:7278:7289  \"user.amount\" */ _3), /** @src 14:3549:3554  \"a * b\" */ var_accSobaPerShare))\n                /// @src 18:7271:7341  \"return user.amount.mul(accSobaPerShare).div(1e18).sub(user.rewardDebt)\"\n                var_ := /** @src 14:3206:3211  \"a - b\" */ checked_sub_uint256(expr_3, /** @src 18:382:13213  \"contract YieldFarm is Ownable {...\" */ sload(/** @src 18:7325:7340  \"user.rewardDebt\" */ add(_3, 1)))\n            }\n            /// @ast-id 4114 @src 18:7399:7586  \"function massUpdatePools() public {...\"\n            function fun_massUpdatePools()\n            {\n                /// @src 18:7460:7475  \"poolInfo.length\"\n                let expr := /** @src 18:382:13213  \"contract YieldFarm is Ownable {...\" */ sload(/** @src 18:7460:7468  \"poolInfo\" */ 0x05)\n                /// @src 18:7490:7508  \"uint256 poolId = 0\"\n                let var_poolId := /** @src 18:7507:7508  \"0\" */ 0x00\n                /// @src 18:7485:7580  \"for (uint256 poolId = 0; poolId < length; ++poolId) {...\"\n                for { }\n                /** @src 18:7510:7525  \"poolId < length\" */ lt(var_poolId, expr)\n                /// @src 18:7490:7508  \"uint256 poolId = 0\"\n                {\n                    /// @src 18:7527:7535  \"++poolId\"\n                    var_poolId := increment_uint256(var_poolId)\n                }\n                {\n                    /// @src 18:7562:7568  \"poolId\"\n                    fun_updatePool(var_poolId)\n                }\n            }\n            /// @src 18:382:13213  \"contract YieldFarm is Ownable {...\"\n            function abi_encode_address_uint256(headStart, value0, value1) -> tail\n            {\n                tail := add(headStart, 64)\n                mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n                mstore(add(headStart, 32), value1)\n            }\n            /// @ast-id 4225 @src 18:7641:8579  \"function updatePool(uint256 _poolId) public {...\"\n            function fun_updatePool_6978()\n            {\n                /// @src 18:7719:7736  \"poolInfo[_poolId]\"\n                let _1, _2 := storage_array_index_access_struct_PoolInfo_storage_dyn()\n                /// @src 18:7807:7827  \"pool.lastRewardBlock\"\n                let _3 := add(_1, 2)\n                /// @src 18:7787:7860  \"if (block.number <= pool.lastRewardBlock) {...\"\n                if /** @src 18:7791:7827  \"block.number <= pool.lastRewardBlock\" */ iszero(gt(/** @src 18:7791:7803  \"block.number\" */ number(), /** @src 18:382:13213  \"contract YieldFarm is Ownable {...\" */ sload(/** @src 18:7807:7827  \"pool.lastRewardBlock\" */ _3)))\n                /// @src 18:7787:7860  \"if (block.number <= pool.lastRewardBlock) {...\"\n                {\n                    /// @src 18:7843:7850  \"return;\"\n                    leave\n                }\n                /// @src 18:7889:7911  \"pool.lpToken.balanceOf\"\n                let expr_address := extract_from_storage_value_offsett_contract_IERC20(/** @src 18:382:13213  \"contract YieldFarm is Ownable {...\" */ extract_from_storage_value_offsett_contract_IERC20(sload(/** @src 18:7889:7901  \"pool.lpToken\" */ _1)))\n                /// @src 18:7889:7926  \"pool.lpToken.balanceOf(address(this))\"\n                if iszero(extcodesize(expr_address))\n                {\n                    /// @src 18:382:13213  \"contract YieldFarm is Ownable {...\"\n                    revert(/** @src 18:10612:10613  \"0\" */ 0x00, 0x00)\n                }\n                /// @src 18:7889:7926  \"pool.lpToken.balanceOf(address(this))\"\n                let _4 := /** @src 18:382:13213  \"contract YieldFarm is Ownable {...\" */ mload(64)\n                /// @src 18:7889:7926  \"pool.lpToken.balanceOf(address(this))\"\n                mstore(_4, /** @src 18:382:13213  \"contract YieldFarm is Ownable {...\" */ shl(224, 0x70a08231))\n                /// @src 18:7889:7926  \"pool.lpToken.balanceOf(address(this))\"\n                let _5 := staticcall(gas(), expr_address, _4, sub(abi_encode_address(add(_4, 4), /** @src 18:7920:7924  \"this\" */ address()), /** @src 18:7889:7926  \"pool.lpToken.balanceOf(address(this))\" */ _4), _4, 32)\n                if iszero(_5) { revert_forward() }\n                let expr := /** @src 18:10612:10613  \"0\" */ 0x00\n                /// @src 18:7889:7926  \"pool.lpToken.balanceOf(address(this))\"\n                if _5\n                {\n                    finalize_allocation(_4, returndatasize())\n                    expr := abi_decode_uint256_fromMemory(_4, add(_4, returndatasize()))\n                }\n                /// @src 18:7936:8035  \"if (lpSupply == 0) {...\"\n                if /** @src 18:7940:7953  \"lpSupply == 0\" */ iszero(expr)\n                /// @src 18:7936:8035  \"if (lpSupply == 0) {...\"\n                {\n                    /// @src 18:382:13213  \"contract YieldFarm is Ownable {...\"\n                    sstore(_3, /** @src 18:7791:7803  \"block.number\" */ number())\n                    /// @src 18:8018:8025  \"return;\"\n                    leave\n                }\n                /// @src 18:8093:8142  \"getMultiplier(pool.lastRewardBlock, block.number)\"\n                let expr_1 := fun_getMultiplier(/** @src 18:382:13213  \"contract YieldFarm is Ownable {...\" */ sload(/** @src 18:8107:8127  \"pool.lastRewardBlock\" */ _3), /** @src 18:7791:7803  \"block.number\" */ number())\n                /// @src 14:3542:3554  \"return a * b\"\n                let var := /** @src 14:3549:3554  \"a * b\" */ checked_mul_uint256(expr_1, /** @src 18:382:13213  \"contract YieldFarm is Ownable {...\" */ sload(/** @src 18:8202:8214  \"sobaPerBlock\" */ 0x03))\n                /// @src 14:3542:3554  \"return a * b\"\n                let var_1 := /** @src 14:3549:3554  \"a * b\" */ checked_mul_uint256(var, /** @src 18:382:13213  \"contract YieldFarm is Ownable {...\" */ sload(/** @src 18:8233:8248  \"pool.allocPoint\" */ add(_1, 1)))\n                /// @src 14:3927:3939  \"return a / b\"\n                let var_2 := /** @src 14:3934:3939  \"a / b\" */ checked_div_uint256(var_1, /** @src 18:382:13213  \"contract YieldFarm is Ownable {...\" */ sload(/** @src 18:8267:8282  \"totalAllocPoint\" */ 0x07))\n                /// @src 18:8294:8305  \"sobaja.mint\"\n                let expr_address_1 := extract_from_storage_value_offsett_contract_IERC20(/** @src 18:382:13213  \"contract YieldFarm is Ownable {...\" */ extract_from_storage_value_offsett_contract_IERC20(sload(/** @src 18:8233:8248  \"pool.allocPoint\" */ 1)))\n                /// @src 18:8306:8316  \"devAddress\"\n                let _6 := /** @src 18:382:13213  \"contract YieldFarm is Ownable {...\" */ extract_from_storage_value_offsett_contract_IERC20(sload(/** @src 18:7807:7827  \"pool.lastRewardBlock\" */ 2))\n                /// @src 18:8294:8337  \"sobaja.mint(devAddress, sobaReward.div(10))\"\n                if iszero(extcodesize(expr_address_1))\n                {\n                    /// @src 18:382:13213  \"contract YieldFarm is Ownable {...\"\n                    revert(/** @src 18:10612:10613  \"0\" */ 0x00, 0x00)\n                }\n                /// @src 18:8294:8337  \"sobaja.mint(devAddress, sobaReward.div(10))\"\n                let _7 := /** @src 18:382:13213  \"contract YieldFarm is Ownable {...\" */ mload(64)\n                let _8 := shl(224, 0x40c10f19)\n                /// @src 18:8294:8337  \"sobaja.mint(devAddress, sobaReward.div(10))\"\n                mstore(_7, /** @src 18:382:13213  \"contract YieldFarm is Ownable {...\" */ _8)\n                /// @src 18:8294:8337  \"sobaja.mint(devAddress, sobaReward.div(10))\"\n                let _9 := call(gas(), expr_address_1, /** @src 18:10612:10613  \"0\" */ 0x00, /** @src 18:8294:8337  \"sobaja.mint(devAddress, sobaReward.div(10))\" */ _7, sub(abi_encode_address_uint256(add(_7, /** @src 18:7889:7926  \"pool.lpToken.balanceOf(address(this))\" */ 4), /** @src 18:8294:8337  \"sobaja.mint(devAddress, sobaReward.div(10))\" */ _6, /** @src 18:382:13213  \"contract YieldFarm is Ownable {...\" */ div(/** @src 18:8318:8336  \"sobaReward.div(10)\" */ var_2, /** @src 18:8333:8335  \"10\" */ 0x0a)), /** @src 18:8294:8337  \"sobaja.mint(devAddress, sobaReward.div(10))\" */ _7), _7, /** @src 18:10612:10613  \"0\" */ 0x00)\n                /// @src 18:8294:8337  \"sobaja.mint(devAddress, sobaReward.div(10))\"\n                if iszero(_9) { revert_forward() }\n                if _9\n                {\n                    finalize_allocation(_7, returndatasize())\n                    abi_decode(_7, add(_7, returndatasize()))\n                }\n                /// @src 18:8374:8385  \"sobaja.mint\"\n                let expr_address_2 := extract_from_storage_value_offsett_contract_IERC20(/** @src 18:382:13213  \"contract YieldFarm is Ownable {...\" */ extract_from_storage_value_offsett_contract_IERC20(sload(/** @src 18:8233:8248  \"pool.allocPoint\" */ 1)))\n                /// @src 18:8374:8412  \"sobaja.mint(address(this), sobaReward)\"\n                if iszero(extcodesize(expr_address_2))\n                {\n                    /// @src 18:382:13213  \"contract YieldFarm is Ownable {...\"\n                    revert(/** @src 18:10612:10613  \"0\" */ 0x00, 0x00)\n                }\n                /// @src 18:8374:8412  \"sobaja.mint(address(this), sobaReward)\"\n                let _10 := /** @src 18:382:13213  \"contract YieldFarm is Ownable {...\" */ mload(64)\n                /// @src 18:8374:8412  \"sobaja.mint(address(this), sobaReward)\"\n                mstore(_10, /** @src 18:382:13213  \"contract YieldFarm is Ownable {...\" */ _8)\n                /// @src 18:8374:8412  \"sobaja.mint(address(this), sobaReward)\"\n                let _11 := call(gas(), expr_address_2, /** @src 18:10612:10613  \"0\" */ 0x00, /** @src 18:8374:8412  \"sobaja.mint(address(this), sobaReward)\" */ _10, sub(abi_encode_address_uint256(add(_10, /** @src 18:7889:7926  \"pool.lpToken.balanceOf(address(this))\" */ 4), /** @src 18:7920:7924  \"this\" */ address(), /** @src 18:8374:8412  \"sobaja.mint(address(this), sobaReward)\" */ var_2), _10), _10, /** @src 18:10612:10613  \"0\" */ 0x00)\n                /// @src 18:8374:8412  \"sobaja.mint(address(this), sobaReward)\"\n                if iszero(_11) { revert_forward() }\n                if _11\n                {\n                    finalize_allocation(_10, returndatasize())\n                    abi_decode(_10, add(_10, returndatasize()))\n                }\n                /// @src 18:8445:8465  \"pool.accSobaPerShare\"\n                let _12 := add(_1, /** @src 18:8202:8214  \"sobaPerBlock\" */ 0x03)\n                /// @src 18:382:13213  \"contract YieldFarm is Ownable {...\"\n                let _13 := sload(/** @src 18:8445:8465  \"pool.accSobaPerShare\" */ _12)\n                /// @src 18:382:13213  \"contract YieldFarm is Ownable {...\"\n                sstore(_12, /** @src 14:2839:2844  \"a + b\" */ checked_add_uint256(_13, /** @src 14:3934:3939  \"a / b\" */ checked_div_uint256(/** @src 14:3549:3554  \"a * b\" */ checked_mul_uint256_6961(/** @src 18:8483:8503  \"sobaReward.mul(1e18)\" */ var_2), /** @src 14:3934:3939  \"a / b\" */ expr)))\n                /// @src 18:382:13213  \"contract YieldFarm is Ownable {...\"\n                sstore(_3, /** @src 18:7791:7803  \"block.number\" */ number())\n            }\n            /// @ast-id 4225 @src 18:7641:8579  \"function updatePool(uint256 _poolId) public {...\"\n            function fun_updatePool(var_poolId)\n            {\n                /// @src 18:7719:7736  \"poolInfo[_poolId]\"\n                let _1, _2 := storage_array_index_access_struct_PoolInfo__dyn(var_poolId)\n                /// @src 18:7807:7827  \"pool.lastRewardBlock\"\n                let _3 := add(_1, 2)\n                /// @src 18:7787:7860  \"if (block.number <= pool.lastRewardBlock) {...\"\n                if /** @src 18:7791:7827  \"block.number <= pool.lastRewardBlock\" */ iszero(gt(/** @src 18:7791:7803  \"block.number\" */ number(), /** @src 18:382:13213  \"contract YieldFarm is Ownable {...\" */ sload(/** @src 18:7807:7827  \"pool.lastRewardBlock\" */ _3)))\n                /// @src 18:7787:7860  \"if (block.number <= pool.lastRewardBlock) {...\"\n                {\n                    /// @src 18:7843:7850  \"return;\"\n                    leave\n                }\n                /// @src 18:7889:7911  \"pool.lpToken.balanceOf\"\n                let expr_4138_address := extract_from_storage_value_offsett_contract_IERC20(/** @src 18:382:13213  \"contract YieldFarm is Ownable {...\" */ extract_from_storage_value_offsett_contract_IERC20(sload(/** @src 18:7889:7901  \"pool.lpToken\" */ _1)))\n                /// @src 18:7889:7926  \"pool.lpToken.balanceOf(address(this))\"\n                if iszero(extcodesize(expr_4138_address))\n                {\n                    /// @src 18:382:13213  \"contract YieldFarm is Ownable {...\"\n                    revert(/** @src -1:-1:-1 */ 0, 0)\n                }\n                /// @src 18:7889:7926  \"pool.lpToken.balanceOf(address(this))\"\n                let _4 := /** @src 18:382:13213  \"contract YieldFarm is Ownable {...\" */ mload(64)\n                /// @src 18:7889:7926  \"pool.lpToken.balanceOf(address(this))\"\n                mstore(_4, /** @src 18:382:13213  \"contract YieldFarm is Ownable {...\" */ shl(224, 0x70a08231))\n                /// @src 18:7889:7926  \"pool.lpToken.balanceOf(address(this))\"\n                let _5 := staticcall(gas(), expr_4138_address, _4, sub(abi_encode_address(add(_4, 4), /** @src 18:7920:7924  \"this\" */ address()), /** @src 18:7889:7926  \"pool.lpToken.balanceOf(address(this))\" */ _4), _4, 32)\n                if iszero(_5) { revert_forward() }\n                let expr := /** @src -1:-1:-1 */ 0\n                /// @src 18:7889:7926  \"pool.lpToken.balanceOf(address(this))\"\n                if _5\n                {\n                    finalize_allocation(_4, returndatasize())\n                    expr := abi_decode_uint256_fromMemory(_4, add(_4, returndatasize()))\n                }\n                /// @src 18:7936:8035  \"if (lpSupply == 0) {...\"\n                if /** @src 18:7940:7953  \"lpSupply == 0\" */ iszero(expr)\n                /// @src 18:7936:8035  \"if (lpSupply == 0) {...\"\n                {\n                    /// @src 18:382:13213  \"contract YieldFarm is Ownable {...\"\n                    sstore(_3, /** @src 18:7791:7803  \"block.number\" */ number())\n                    /// @src 18:8018:8025  \"return;\"\n                    leave\n                }\n                /// @src 18:8093:8142  \"getMultiplier(pool.lastRewardBlock, block.number)\"\n                let expr_1 := fun_getMultiplier(/** @src 18:382:13213  \"contract YieldFarm is Ownable {...\" */ sload(/** @src 18:8107:8127  \"pool.lastRewardBlock\" */ _3), /** @src 18:7791:7803  \"block.number\" */ number())\n                /// @src 14:3542:3554  \"return a * b\"\n                let var := /** @src 14:3549:3554  \"a * b\" */ checked_mul_uint256(expr_1, /** @src 18:382:13213  \"contract YieldFarm is Ownable {...\" */ sload(/** @src 18:8202:8214  \"sobaPerBlock\" */ 0x03))\n                /// @src 14:3542:3554  \"return a * b\"\n                let var_1 := /** @src 14:3549:3554  \"a * b\" */ checked_mul_uint256(var, /** @src 18:382:13213  \"contract YieldFarm is Ownable {...\" */ sload(/** @src 18:8233:8248  \"pool.allocPoint\" */ add(_1, 1)))\n                /// @src 14:3927:3939  \"return a / b\"\n                let var_2 := /** @src 14:3934:3939  \"a / b\" */ checked_div_uint256(var_1, /** @src 18:382:13213  \"contract YieldFarm is Ownable {...\" */ sload(/** @src 18:8267:8282  \"totalAllocPoint\" */ 0x07))\n                /// @src 18:8294:8305  \"sobaja.mint\"\n                let expr_4183_address := extract_from_storage_value_offsett_contract_IERC20(/** @src 18:382:13213  \"contract YieldFarm is Ownable {...\" */ extract_from_storage_value_offsett_contract_IERC20(sload(/** @src 18:8233:8248  \"pool.allocPoint\" */ 1)))\n                /// @src 18:8306:8316  \"devAddress\"\n                let _6 := /** @src 18:382:13213  \"contract YieldFarm is Ownable {...\" */ extract_from_storage_value_offsett_contract_IERC20(sload(/** @src 18:7807:7827  \"pool.lastRewardBlock\" */ 2))\n                /// @src 18:8294:8337  \"sobaja.mint(devAddress, sobaReward.div(10))\"\n                if iszero(extcodesize(expr_4183_address))\n                {\n                    /// @src 18:382:13213  \"contract YieldFarm is Ownable {...\"\n                    revert(/** @src -1:-1:-1 */ 0, 0)\n                }\n                /// @src 18:8294:8337  \"sobaja.mint(devAddress, sobaReward.div(10))\"\n                let _7 := /** @src 18:382:13213  \"contract YieldFarm is Ownable {...\" */ mload(64)\n                let _8 := shl(224, 0x40c10f19)\n                /// @src 18:8294:8337  \"sobaja.mint(devAddress, sobaReward.div(10))\"\n                mstore(_7, /** @src 18:382:13213  \"contract YieldFarm is Ownable {...\" */ _8)\n                /// @src 18:8294:8337  \"sobaja.mint(devAddress, sobaReward.div(10))\"\n                let _9 := call(gas(), expr_4183_address, /** @src -1:-1:-1 */ 0, /** @src 18:8294:8337  \"sobaja.mint(devAddress, sobaReward.div(10))\" */ _7, sub(abi_encode_address_uint256(add(_7, /** @src 18:7889:7926  \"pool.lpToken.balanceOf(address(this))\" */ 4), /** @src 18:8294:8337  \"sobaja.mint(devAddress, sobaReward.div(10))\" */ _6, /** @src 18:382:13213  \"contract YieldFarm is Ownable {...\" */ div(/** @src 18:8318:8336  \"sobaReward.div(10)\" */ var_2, /** @src 18:8333:8335  \"10\" */ 0x0a)), /** @src 18:8294:8337  \"sobaja.mint(devAddress, sobaReward.div(10))\" */ _7), _7, /** @src -1:-1:-1 */ 0)\n                /// @src 18:8294:8337  \"sobaja.mint(devAddress, sobaReward.div(10))\"\n                if iszero(_9) { revert_forward() }\n                if _9\n                {\n                    finalize_allocation(_7, returndatasize())\n                    abi_decode(_7, add(_7, returndatasize()))\n                }\n                /// @src 18:8374:8385  \"sobaja.mint\"\n                let expr_4193_address := extract_from_storage_value_offsett_contract_IERC20(/** @src 18:382:13213  \"contract YieldFarm is Ownable {...\" */ extract_from_storage_value_offsett_contract_IERC20(sload(/** @src 18:8233:8248  \"pool.allocPoint\" */ 1)))\n                /// @src 18:8374:8412  \"sobaja.mint(address(this), sobaReward)\"\n                if iszero(extcodesize(expr_4193_address))\n                {\n                    /// @src 18:382:13213  \"contract YieldFarm is Ownable {...\"\n                    revert(/** @src -1:-1:-1 */ 0, 0)\n                }\n                /// @src 18:8374:8412  \"sobaja.mint(address(this), sobaReward)\"\n                let _10 := /** @src 18:382:13213  \"contract YieldFarm is Ownable {...\" */ mload(64)\n                /// @src 18:8374:8412  \"sobaja.mint(address(this), sobaReward)\"\n                mstore(_10, /** @src 18:382:13213  \"contract YieldFarm is Ownable {...\" */ _8)\n                /// @src 18:8374:8412  \"sobaja.mint(address(this), sobaReward)\"\n                let _11 := call(gas(), expr_4193_address, /** @src -1:-1:-1 */ 0, /** @src 18:8374:8412  \"sobaja.mint(address(this), sobaReward)\" */ _10, sub(abi_encode_address_uint256(add(_10, /** @src 18:7889:7926  \"pool.lpToken.balanceOf(address(this))\" */ 4), /** @src 18:7920:7924  \"this\" */ address(), /** @src 18:8374:8412  \"sobaja.mint(address(this), sobaReward)\" */ var_2), _10), _10, /** @src -1:-1:-1 */ 0)\n                /// @src 18:8374:8412  \"sobaja.mint(address(this), sobaReward)\"\n                if iszero(_11) { revert_forward() }\n                if _11\n                {\n                    finalize_allocation(_10, returndatasize())\n                    abi_decode(_10, add(_10, returndatasize()))\n                }\n                /// @src 18:8445:8465  \"pool.accSobaPerShare\"\n                let _12 := add(_1, /** @src 18:8202:8214  \"sobaPerBlock\" */ 0x03)\n                /// @src 18:382:13213  \"contract YieldFarm is Ownable {...\"\n                let _13 := sload(/** @src 18:8445:8465  \"pool.accSobaPerShare\" */ _12)\n                /// @src 18:382:13213  \"contract YieldFarm is Ownable {...\"\n                sstore(_12, /** @src 14:2839:2844  \"a + b\" */ checked_add_uint256(_13, /** @src 14:3934:3939  \"a / b\" */ checked_div_uint256(/** @src 14:3549:3554  \"a * b\" */ checked_mul_uint256_6961(/** @src 18:8483:8503  \"sobaReward.mul(1e18)\" */ var_2), /** @src 14:3934:3939  \"a / b\" */ expr)))\n                /// @src 18:382:13213  \"contract YieldFarm is Ownable {...\"\n                sstore(_3, /** @src 18:7791:7803  \"block.number\" */ number())\n            }\n            /// @src 18:382:13213  \"contract YieldFarm is Ownable {...\"\n            function require_helper_stringliteral_e0ef(condition)\n            {\n                if iszero(condition)\n                {\n                    let memPtr := mload(64)\n                    mstore(memPtr, shl(229, 4594637))\n                    mstore(add(memPtr, 4), 32)\n                    mstore(add(memPtr, 36), 15)\n                    mstore(add(memPtr, 68), \"Pool must exist\")\n                    revert(memPtr, 100)\n                }\n            }\n            /// @ast-id 4353 @src 18:8603:9659  \"function deposit(uint256 _poolId, uint256 _amount) public {...\"\n            function fun_deposit(var_poolId, var_amount)\n            {\n                /// @src 18:8671:8711  \"require(_poolId != 0, \\\"Pool must exist\\\")\"\n                require_helper_stringliteral_e0ef(/** @src 18:8679:8691  \"_poolId != 0\" */ iszero(iszero(var_poolId)))\n                /// @src 18:8746:8763  \"poolInfo[_poolId]\"\n                let _1, _2 := storage_array_index_access_struct_PoolInfo__dyn(var_poolId)\n                /// @src 18:8797:8814  \"userInfo[_poolId]\"\n                let _3 := mapping_index_access_mapping_uint256_mapping_address_struct_UserInfo_storage__of_uint256(var_poolId)\n                /// @src 18:8797:8826  \"userInfo[_poolId][msg.sender]\"\n                let _4 := mapping_index_access_mapping_address_struct_UserInfo_storage_of_address(_3, /** @src 18:8815:8825  \"msg.sender\" */ caller())\n                /// @src 18:8847:8854  \"_poolId\"\n                fun_updatePool(var_poolId)\n                /// @src 18:382:13213  \"contract YieldFarm is Ownable {...\"\n                let _5 := sload(/** @src 18:8950:8961  \"user.amount\" */ _4)\n                /// @src 18:8946:9246  \"if (user.amount > 0) {...\"\n                if /** @src 18:8950:8965  \"user.amount > 0\" */ iszero(iszero(_5))\n                /// @src 18:8946:9246  \"if (user.amount > 0) {...\"\n                {\n                    /// @src 18:8999:9097  \"user...\"\n                    let expr := /** @src 14:3934:3939  \"a / b\" */ checked_div_uint256_6962(/** @src 14:3549:3554  \"a * b\" */ checked_mul_uint256(_5, /** @src 18:382:13213  \"contract YieldFarm is Ownable {...\" */ sload(/** @src 18:9049:9069  \"pool.accSobaPerShare\" */ add(_1, 3))))\n                    /// @src 14:3199:3211  \"return a - b\"\n                    let var := /** @src 14:3206:3211  \"a - b\" */ checked_sub_uint256(expr, /** @src 18:382:13213  \"contract YieldFarm is Ownable {...\" */ sload(/** @src 18:9119:9134  \"user.rewardDebt\" */ add(_4, 1)))\n                    /// @src 18:9149:9236  \"if (pending > 0) {...\"\n                    if /** @src 18:9153:9164  \"pending > 0\" */ iszero(iszero(var))\n                    /// @src 18:9149:9236  \"if (pending > 0) {...\"\n                    {\n                        /// @src 18:9213:9220  \"pending\"\n                        fun_safeSobaTransfer(/** @src 18:8815:8825  \"msg.sender\" */ caller(), /** @src 18:9213:9220  \"pending\" */ var)\n                    }\n                }\n                /// @src 18:9255:9526  \"if (_amount > 0) {...\"\n                if /** @src 18:9259:9270  \"_amount > 0\" */ iszero(iszero(var_amount))\n                /// @src 18:9255:9526  \"if (_amount > 0) {...\"\n                {\n                    /// @src 18:9286:9298  \"pool.lpToken\"\n                    let _address := /** @src 18:382:13213  \"contract YieldFarm is Ownable {...\" */ extract_from_storage_value_offsett_contract_IERC20(sload(/** @src 18:9286:9298  \"pool.lpToken\" */ _1))\n                    /// @src 18:9401:9408  \"_amount\"\n                    fun_safeTransferFrom(_address, /** @src 18:8815:8825  \"msg.sender\" */ caller(), /** @src 18:9378:9382  \"this\" */ address(), /** @src 18:9401:9408  \"_amount\" */ var_amount)\n                    /// @src 18:382:13213  \"contract YieldFarm is Ownable {...\"\n                    sstore(_4, /** @src 14:2839:2844  \"a + b\" */ checked_add_uint256(/** @src 18:382:13213  \"contract YieldFarm is Ownable {...\" */ sload(/** @src 18:9450:9461  \"user.amount\" */ _4), /** @src 14:2839:2844  \"a + b\" */ var_amount))\n                    /// @src 18:9488:9504  \"pool.totalStaked\"\n                    let _6 := add(_1, 4)\n                    /// @src 18:382:13213  \"contract YieldFarm is Ownable {...\"\n                    sstore(_6, /** @src 18:9488:9515  \"pool.totalStaked += _amount\" */ checked_add_uint256(/** @src 18:382:13213  \"contract YieldFarm is Ownable {...\" */ sload(/** @src 18:9488:9515  \"pool.totalStaked += _amount\" */ _6), var_amount))\n                }\n                /// @src 18:382:13213  \"contract YieldFarm is Ownable {...\"\n                let _7 := sload(/** @src 18:9553:9564  \"user.amount\" */ _4)\n                /// @src 18:382:13213  \"contract YieldFarm is Ownable {...\"\n                sstore(/** @src 18:9535:9550  \"user.rewardDebt\" */ add(_4, 1), /** @src 14:3934:3939  \"a / b\" */ checked_div_uint256_6962(/** @src 14:3549:3554  \"a * b\" */ checked_mul_uint256(_7, /** @src 18:382:13213  \"contract YieldFarm is Ownable {...\" */ sload(/** @src 18:9569:9589  \"pool.accSobaPerShare\" */ add(_1, 3)))))\n                /// @src 18:9615:9652  \"Deposit(msg.sender, _poolId, _amount)\"\n                log4(/** @src 18:382:13213  \"contract YieldFarm is Ownable {...\" */ mload(64), /** @src 18:8690:8691  \"0\" */ 0x00, /** @src 18:9615:9652  \"Deposit(msg.sender, _poolId, _amount)\" */ 0x90890809c654f11d6e72a28fa60149770a0d11ec6c92319d6ceb2bb0a4ea1a15, /** @src 18:8815:8825  \"msg.sender\" */ caller(), /** @src 18:9615:9652  \"Deposit(msg.sender, _poolId, _amount)\" */ var_poolId, var_amount)\n            }\n            /// @ast-id 1287 @src 7:1355:1558  \"function safeTransferFrom(IERC20 token, address from, address to, uint256 value) internal {...\"\n            function fun_safeTransferFrom(var_token_address, var_from, var_to, var_value)\n            {\n                /// @src 7:1482:1550  \"abi.encodeWithSelector(token.transferFrom.selector, from, to, value)\"\n                let expr_mpos := /** @src 18:382:13213  \"contract YieldFarm is Ownable {...\" */ mload(64)\n                /// @src 7:1482:1550  \"abi.encodeWithSelector(token.transferFrom.selector, from, to, value)\"\n                mstore(add(expr_mpos, 0x20), /** @src 18:382:13213  \"contract YieldFarm is Ownable {...\" */ shl(224, 0x23b872dd))\n                let _1 := sub(shl(160, 1), 1)\n                mstore(/** @src 7:1482:1550  \"abi.encodeWithSelector(token.transferFrom.selector, from, to, value)\" */ add(expr_mpos, 36), /** @src 18:382:13213  \"contract YieldFarm is Ownable {...\" */ and(var_from, _1))\n                mstore(add(/** @src 7:1482:1550  \"abi.encodeWithSelector(token.transferFrom.selector, from, to, value)\" */ expr_mpos, /** @src 18:382:13213  \"contract YieldFarm is Ownable {...\" */ 68), and(var_to, _1))\n                mstore(add(/** @src 7:1482:1550  \"abi.encodeWithSelector(token.transferFrom.selector, from, to, value)\" */ expr_mpos, /** @src 18:382:13213  \"contract YieldFarm is Ownable {...\" */ 100), var_value)\n                /// @src 7:1482:1550  \"abi.encodeWithSelector(token.transferFrom.selector, from, to, value)\"\n                mstore(expr_mpos, /** @src 18:382:13213  \"contract YieldFarm is Ownable {...\" */ 100)\n                /// @src 7:1482:1550  \"abi.encodeWithSelector(token.transferFrom.selector, from, to, value)\"\n                finalize_allocation_6943(expr_mpos)\n                fun_callOptionalReturn(var_token_address, expr_mpos)\n            }\n            /// @src 18:382:13213  \"contract YieldFarm is Ownable {...\"\n            function abi_decode_bool_fromMemory(headStart, dataEnd) -> value0\n            {\n                if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n                let value := mload(headStart)\n                validator_revert_bool(value)\n                value0 := value\n            }\n            function require_helper_stringliteral_e11a(condition)\n            {\n                if iszero(condition)\n                {\n                    let memPtr := mload(64)\n                    mstore(memPtr, shl(229, 4594637))\n                    mstore(add(memPtr, 4), 32)\n                    mstore(add(memPtr, 36), 42)\n                    mstore(add(memPtr, 68), \"SafeERC20: ERC20 operation did n\")\n                    mstore(add(memPtr, 100), \"ot succeed\")\n                    revert(memPtr, 132)\n                }\n            }\n            /// @ast-id 1554 @src 7:5173:5815  \"function _callOptionalReturn(IERC20 token, bytes memory data) private {...\"\n            function fun_callOptionalReturn(var_token_1521_address, var_data_mpos)\n            {\n                /// @src 18:382:13213  \"contract YieldFarm is Ownable {...\"\n                let _1 := and(/** @src 7:5618:5632  \"address(token)\" */ var_token_1521_address, /** @src 18:382:13213  \"contract YieldFarm is Ownable {...\" */ sub(shl(160, 1), 1))\n                let memPtr := mload(64)\n                finalize_allocation_11296(memPtr)\n                let _2 := 32\n                mstore(memPtr, _2)\n                mstore(add(memPtr, _2), \"SafeERC20: low-level call failed\")\n                /// @src 8:5487:5518  \"target.call{value: value}(data)\"\n                let expr_component := call(gas(), _1, /** @src -1:-1:-1 */ 0, /** @src 8:5487:5518  \"target.call{value: value}(data)\" */ add(var_data_mpos, /** @src 18:382:13213  \"contract YieldFarm is Ownable {...\" */ _2), /** @src 8:5487:5518  \"target.call{value: value}(data)\" */ mload(var_data_mpos), /** @src -1:-1:-1 */ 0, 0)\n                /// @src 8:5487:5518  \"target.call{value: value}(data)\"\n                let data := /** @src -1:-1:-1 */ 0\n                /// @src 18:382:13213  \"contract YieldFarm is Ownable {...\"\n                switch returndatasize()\n                case 0 { data := 96 }\n                default {\n                    let _3 := returndatasize()\n                    if gt(_3, 0xffffffffffffffff) { panic_error_0x41() }\n                    let memPtr_1 := mload(64)\n                    finalize_allocation(memPtr_1, add(and(add(_3, 31), not(31)), _2))\n                    mstore(memPtr_1, _3)\n                    data := memPtr_1\n                    returndatacopy(add(memPtr_1, _2), /** @src -1:-1:-1 */ 0, /** @src 18:382:13213  \"contract YieldFarm is Ownable {...\" */ returndatasize())\n                }\n                /// @src 8:5528:5604  \"return verifyCallResultFromTarget(target, success, returndata, errorMessage)\"\n                let var_mpos := /** @src 8:5535:5604  \"verifyCallResultFromTarget(target, success, returndata, errorMessage)\" */ fun_verifyCallResultFromTarget(_1, expr_component, /** @src 8:5487:5518  \"target.call{value: value}(data)\" */ data, /** @src 8:5535:5604  \"verifyCallResultFromTarget(target, success, returndata, errorMessage)\" */ memPtr)\n                /// @src 7:5705:5722  \"returndata.length\"\n                let expr := /** @src 18:382:13213  \"contract YieldFarm is Ownable {...\" */ mload(/** @src 7:5705:5722  \"returndata.length\" */ var_mpos)\n                /// @src 7:5705:5761  \"returndata.length == 0 || abi.decode(returndata, (bool))\"\n                let expr_1 := /** @src 7:5705:5727  \"returndata.length == 0\" */ iszero(expr)\n                /// @src 7:5705:5761  \"returndata.length == 0 || abi.decode(returndata, (bool))\"\n                if iszero(expr_1)\n                {\n                    expr_1 := /** @src 7:5731:5761  \"abi.decode(returndata, (bool))\" */ abi_decode_bool_fromMemory(add(var_mpos, /** @src 18:382:13213  \"contract YieldFarm is Ownable {...\" */ _2), /** @src 7:5731:5761  \"abi.decode(returndata, (bool))\" */ add(add(var_mpos, expr), /** @src 18:382:13213  \"contract YieldFarm is Ownable {...\" */ _2))\n                }\n                /// @src 7:5697:5808  \"require(returndata.length == 0 || abi.decode(returndata, (bool)), \\\"SafeERC20: ERC20 operation did not succeed\\\")\"\n                require_helper_stringliteral_e11a(expr_1)\n            }\n            /// @src 18:382:13213  \"contract YieldFarm is Ownable {...\"\n            function require_helper_stringliteral_cc2e(condition)\n            {\n                if iszero(condition)\n                {\n                    let memPtr := mload(64)\n                    mstore(memPtr, shl(229, 4594637))\n                    mstore(add(memPtr, 4), 32)\n                    mstore(add(memPtr, 36), 29)\n                    mstore(add(memPtr, 68), \"Address: call to non-contract\")\n                    revert(memPtr, 100)\n                }\n            }\n            /// @ast-id 1888 @src 8:7671:8299  \"function verifyCallResultFromTarget(...\"\n            function fun_verifyCallResultFromTarget(var_target, var_success, var_returndata_mpos, var_errorMessage_mpos) -> var_1861_mpos\n            {\n                /// @src 8:7851:7863  \"bytes memory\"\n                var_1861_mpos := /** @src 18:382:13213  \"contract YieldFarm is Ownable {...\" */ 96\n                /// @src 8:7875:8293  \"if (success) {...\"\n                switch var_success\n                case 0 {\n                    /// @src 8:8976:9355  \"if (returndata.length > 0) {...\"\n                    switch /** @src 8:8980:9001  \"returndata.length > 0\" */ iszero(iszero(/** @src 18:382:13213  \"contract YieldFarm is Ownable {...\" */ mload(/** @src 8:8980:8997  \"returndata.length\" */ var_returndata_mpos)))\n                    case /** @src 8:8976:9355  \"if (returndata.length > 0) {...\" */ 0 {\n                        /// @src 8:9324:9344  \"revert(errorMessage)\"\n                        let _1 := /** @src 18:382:13213  \"contract YieldFarm is Ownable {...\" */ mload(64)\n                        /// @src 8:9324:9344  \"revert(errorMessage)\"\n                        mstore(_1, /** @src 18:382:13213  \"contract YieldFarm is Ownable {...\" */ shl(229, 4594637))\n                        let _2 := 32\n                        mstore(/** @src 8:9324:9344  \"revert(errorMessage)\" */ add(_1, 4), /** @src 18:382:13213  \"contract YieldFarm is Ownable {...\" */ _2)\n                        let length := mload(var_errorMessage_mpos)\n                        mstore(add(/** @src 8:9324:9344  \"revert(errorMessage)\" */ _1, /** @src 18:382:13213  \"contract YieldFarm is Ownable {...\" */ 36), length)\n                        let i := /** @src 8:9000:9001  \"0\" */ 0x00\n                        /// @src 18:382:13213  \"contract YieldFarm is Ownable {...\"\n                        for { } lt(i, length) { i := add(i, _2) }\n                        {\n                            mstore(add(add(/** @src 8:9324:9344  \"revert(errorMessage)\" */ _1, /** @src 18:382:13213  \"contract YieldFarm is Ownable {...\" */ i), 68), mload(add(add(var_errorMessage_mpos, i), _2)))\n                        }\n                        if gt(i, length)\n                        {\n                            mstore(add(add(/** @src 8:9324:9344  \"revert(errorMessage)\" */ _1, /** @src 18:382:13213  \"contract YieldFarm is Ownable {...\" */ length), 68), /** @src 8:9000:9001  \"0\" */ 0x00)\n                        }\n                        /// @src 8:9324:9344  \"revert(errorMessage)\"\n                        revert(_1, add(sub(/** @src 18:382:13213  \"contract YieldFarm is Ownable {...\" */ add(/** @src 8:9324:9344  \"revert(errorMessage)\" */ _1, /** @src 18:382:13213  \"contract YieldFarm is Ownable {...\" */ and(add(length, 31), not(31))), /** @src 8:9324:9344  \"revert(errorMessage)\" */ _1), /** @src 18:382:13213  \"contract YieldFarm is Ownable {...\" */ 68))\n                    }\n                    default /// @src 8:8976:9355  \"if (returndata.length > 0) {...\"\n                    {\n                        /// @src 8:9152:9294  \"assembly {...\"\n                        revert(add(32, var_returndata_mpos), mload(var_returndata_mpos))\n                    }\n                }\n                default /// @src 8:7875:8293  \"if (success) {...\"\n                {\n                    /// @src 8:7902:8188  \"if (returndata.length == 0) {...\"\n                    if /** @src 8:7906:7928  \"returndata.length == 0\" */ iszero(/** @src 18:382:13213  \"contract YieldFarm is Ownable {...\" */ mload(/** @src 8:7906:7923  \"returndata.length\" */ var_returndata_mpos))\n                    /// @src 8:7902:8188  \"if (returndata.length == 0) {...\"\n                    {\n                        /// @src 8:8113:8173  \"require(isContract(target), \\\"Address: call to non-contract\\\")\"\n                        require_helper_stringliteral_cc2e(/** @src 8:1702:1725  \"account.code.length > 0\" */ iszero(iszero(/** @src 8:1702:1721  \"account.code.length\" */ extcodesize(/** @src 8:8121:8139  \"isContract(target)\" */ var_target))))\n                    }\n                    /// @src 8:8201:8218  \"return returndata\"\n                    var_1861_mpos := var_returndata_mpos\n                    leave\n                }\n            }\n            /// @src 18:382:13213  \"contract YieldFarm is Ownable {...\"\n            function require_helper_stringliteral_320d(condition)\n            {\n                if iszero(condition)\n                {\n                    let memPtr := mload(64)\n                    mstore(memPtr, shl(229, 4594637))\n                    mstore(add(memPtr, 4), 32)\n                    mstore(add(memPtr, 36), 6)\n                    mstore(add(memPtr, 68), \"Exceed\")\n                    revert(memPtr, 100)\n                }\n            }\n            /// @ast-id 4479 @src 18:9665:10509  \"function withdraw(uint256 _poolId, uint256 _amount) public {...\"\n            function fun_withdraw(var_poolId, var_amount)\n            {\n                /// @src 18:9734:9774  \"require(_poolId != 0, \\\"Pool must exist\\\")\"\n                require_helper_stringliteral_e0ef(/** @src 18:9742:9754  \"_poolId != 0\" */ iszero(iszero(var_poolId)))\n                /// @src 18:9808:9825  \"poolInfo[_poolId]\"\n                let _1, _2 := storage_array_index_access_struct_PoolInfo__dyn(var_poolId)\n                /// @src 18:9859:9876  \"userInfo[_poolId]\"\n                let _3 := mapping_index_access_mapping_uint256_mapping_address_struct_UserInfo_storage__of_uint256(var_poolId)\n                /// @src 18:9859:9888  \"userInfo[_poolId][msg.sender]\"\n                let _4 := mapping_index_access_mapping_address_struct_UserInfo_storage_of_address(_3, /** @src 18:9877:9887  \"msg.sender\" */ caller())\n                /// @src 18:9898:9939  \"require(user.amount >= _amount, \\\"Exceed\\\")\"\n                require_helper_stringliteral_320d(/** @src 18:9906:9928  \"user.amount >= _amount\" */ iszero(lt(/** @src 18:382:13213  \"contract YieldFarm is Ownable {...\" */ sload(/** @src 18:9906:9917  \"user.amount\" */ _4), /** @src 18:9906:9928  \"user.amount >= _amount\" */ var_amount)))\n                /// @src 18:9961:9968  \"_poolId\"\n                fun_updatePool(var_poolId)\n                /// @src 18:382:13213  \"contract YieldFarm is Ownable {...\"\n                let _5 := sload(/** @src 18:9997:10008  \"user.amount\" */ _4)\n                /// @src 18:10013:10033  \"pool.accSobaPerShare\"\n                let _6 := add(_1, 3)\n                /// @src 18:9997:10044  \"user.amount.mul(pool.accSobaPerShare).div(1e18)\"\n                let expr := /** @src 14:3934:3939  \"a / b\" */ checked_div_uint256_6962(/** @src 14:3549:3554  \"a * b\" */ checked_mul_uint256(_5, /** @src 18:382:13213  \"contract YieldFarm is Ownable {...\" */ sload(/** @src 18:10013:10033  \"pool.accSobaPerShare\" */ _6)))\n                /// @src 18:10062:10077  \"user.rewardDebt\"\n                let _7 := add(_4, 1)\n                /// @src 14:3199:3211  \"return a - b\"\n                let var := /** @src 14:3206:3211  \"a - b\" */ checked_sub_uint256(expr, /** @src 18:382:13213  \"contract YieldFarm is Ownable {...\" */ sload(/** @src 18:10062:10077  \"user.rewardDebt\" */ _7))\n                /// @src 18:10097:10176  \"if (pending > 0) {...\"\n                if /** @src 18:10101:10112  \"pending > 0\" */ iszero(iszero(var))\n                /// @src 18:10097:10176  \"if (pending > 0) {...\"\n                {\n                    /// @src 18:10157:10164  \"pending\"\n                    fun_safeSobaTransfer(/** @src 18:9877:9887  \"msg.sender\" */ caller(), /** @src 18:10157:10164  \"pending\" */ var)\n                }\n                /// @src 18:10185:10375  \"if (_amount > 0) {...\"\n                if /** @src 18:10189:10200  \"_amount > 0\" */ iszero(iszero(var_amount))\n                /// @src 18:10185:10375  \"if (_amount > 0) {...\"\n                {\n                    /// @src 18:382:13213  \"contract YieldFarm is Ownable {...\"\n                    sstore(_4, /** @src 14:3206:3211  \"a - b\" */ checked_sub_uint256(/** @src 18:382:13213  \"contract YieldFarm is Ownable {...\" */ sload(/** @src 18:10230:10241  \"user.amount\" */ _4), /** @src 14:3206:3211  \"a - b\" */ var_amount))\n                    /// @src 18:10268:10284  \"pool.totalStaked\"\n                    let _8 := add(_1, 4)\n                    /// @src 18:382:13213  \"contract YieldFarm is Ownable {...\"\n                    sstore(_8, /** @src 18:10268:10295  \"pool.totalStaked -= _amount\" */ checked_sub_uint256(/** @src 18:382:13213  \"contract YieldFarm is Ownable {...\" */ sload(/** @src 18:10268:10295  \"pool.totalStaked -= _amount\" */ _8), var_amount))\n                    /// @src 18:10356:10363  \"_amount\"\n                    fun_safeTransfer(/** @src 18:382:13213  \"contract YieldFarm is Ownable {...\" */ extract_from_storage_value_offsett_contract_IERC20(sload(/** @src 18:10309:10321  \"pool.lpToken\" */ _1)), /** @src 18:9877:9887  \"msg.sender\" */ caller(), /** @src 18:10356:10363  \"_amount\" */ var_amount)\n                }\n                /// @src 18:382:13213  \"contract YieldFarm is Ownable {...\"\n                let _9 := sload(/** @src 18:10402:10413  \"user.amount\" */ _4)\n                /// @src 18:382:13213  \"contract YieldFarm is Ownable {...\"\n                sstore(_7, /** @src 14:3934:3939  \"a / b\" */ checked_div_uint256_6962(/** @src 14:3549:3554  \"a * b\" */ checked_mul_uint256(_9, /** @src 18:382:13213  \"contract YieldFarm is Ownable {...\" */ sload(/** @src 18:10418:10438  \"pool.accSobaPerShare\" */ _6))))\n                /// @src 18:10464:10502  \"Withdraw(msg.sender, _poolId, _amount)\"\n                let _10 := /** @src 18:382:13213  \"contract YieldFarm is Ownable {...\" */ mload(64)\n                /// @src 18:10464:10502  \"Withdraw(msg.sender, _poolId, _amount)\"\n                log3(_10, sub(abi_encode_uint256(_10, var_amount), _10), 0xf279e6a1f5e320cca91135676d9cb6e44ca8a08c0b88342bcdb1144f6511b568, /** @src 18:9877:9887  \"msg.sender\" */ caller(), /** @src 18:10464:10502  \"Withdraw(msg.sender, _poolId, _amount)\" */ var_poolId)\n            }\n            /// @ast-id 1260 @src 7:941:1116  \"function safeTransfer(IERC20 token, address to, uint256 value) internal {...\"\n            function fun_safeTransfer(var_token_1240_address, var_to, var_value)\n            {\n                /// @src 7:1050:1108  \"abi.encodeWithSelector(token.transfer.selector, to, value)\"\n                let expr_1256_mpos := /** @src 18:382:13213  \"contract YieldFarm is Ownable {...\" */ mload(64)\n                /// @src 7:1050:1108  \"abi.encodeWithSelector(token.transfer.selector, to, value)\"\n                mstore(add(expr_1256_mpos, 0x20), /** @src 18:382:13213  \"contract YieldFarm is Ownable {...\" */ shl(224, 0xa9059cbb))\n                /// @src 7:1050:1108  \"abi.encodeWithSelector(token.transfer.selector, to, value)\"\n                let _1 := sub(abi_encode_address_uint256(add(expr_1256_mpos, 36), var_to, var_value), expr_1256_mpos)\n                mstore(expr_1256_mpos, add(_1, /** @src 18:382:13213  \"contract YieldFarm is Ownable {...\" */ not(31)))\n                /// @src 7:1050:1108  \"abi.encodeWithSelector(token.transfer.selector, to, value)\"\n                finalize_allocation(expr_1256_mpos, _1)\n                fun_callOptionalReturn(var_token_1240_address, expr_1256_mpos)\n            }\n            /// @ast-id 4598 @src 18:10528:11431  \"function staking(uint256 _amount) public {...\"\n            function fun_staking(var_amount)\n            {\n                /// @src 18:10603:10614  \"poolInfo[0]\"\n                let _1, _2 := storage_array_index_access_struct_PoolInfo_storage_dyn()\n                /// @src 18:10648:10659  \"userInfo[0]\"\n                let _3 := mapping_index_access_mapping_uint256_mapping_address_struct_UserInfo_storage_of_uint256()\n                /// @src 18:10648:10671  \"userInfo[0][msg.sender]\"\n                let _4 := mapping_index_access_mapping_address_struct_UserInfo_storage_of_address(_3, /** @src 18:10660:10670  \"msg.sender\" */ caller())\n                /// @src 18:10682:10695  \"updatePool(0)\"\n                fun_updatePool_6978()\n                /// @src 18:382:13213  \"contract YieldFarm is Ownable {...\"\n                let _5 := sload(/** @src 18:10728:10739  \"user.amount\" */ _4)\n                /// @src 18:10724:11024  \"if (user.amount > 0) {...\"\n                if /** @src 18:10728:10743  \"user.amount > 0\" */ iszero(iszero(_5))\n                /// @src 18:10724:11024  \"if (user.amount > 0) {...\"\n                {\n                    /// @src 18:10777:10875  \"user...\"\n                    let expr := /** @src 14:3934:3939  \"a / b\" */ checked_div_uint256_6962(/** @src 14:3549:3554  \"a * b\" */ checked_mul_uint256(_5, /** @src 18:382:13213  \"contract YieldFarm is Ownable {...\" */ sload(/** @src 18:10827:10847  \"pool.accSobaPerShare\" */ add(_1, 3))))\n                    /// @src 14:3199:3211  \"return a - b\"\n                    let var := /** @src 14:3206:3211  \"a - b\" */ checked_sub_uint256(expr, /** @src 18:382:13213  \"contract YieldFarm is Ownable {...\" */ sload(/** @src 18:10897:10912  \"user.rewardDebt\" */ add(_4, 1)))\n                    /// @src 18:10927:11014  \"if (pending > 0) {...\"\n                    if /** @src 18:10931:10942  \"pending > 0\" */ iszero(iszero(var))\n                    /// @src 18:10927:11014  \"if (pending > 0) {...\"\n                    {\n                        /// @src 18:10991:10998  \"pending\"\n                        fun_safeSobaTransfer(/** @src 18:10660:10670  \"msg.sender\" */ caller(), /** @src 18:10991:10998  \"pending\" */ var)\n                    }\n                }\n                /// @src 18:11033:11304  \"if (_amount > 0) {...\"\n                if /** @src 18:11037:11048  \"_amount > 0\" */ iszero(iszero(var_amount))\n                /// @src 18:11033:11304  \"if (_amount > 0) {...\"\n                {\n                    /// @src 18:11064:11076  \"pool.lpToken\"\n                    let _385_address := /** @src 18:382:13213  \"contract YieldFarm is Ownable {...\" */ extract_from_storage_value_offsett_contract_IERC20(sload(/** @src 18:11064:11076  \"pool.lpToken\" */ _1))\n                    /// @src 18:11179:11186  \"_amount\"\n                    fun_safeTransferFrom(_385_address, /** @src 18:10660:10670  \"msg.sender\" */ caller(), /** @src 18:11156:11160  \"this\" */ address(), /** @src 18:11179:11186  \"_amount\" */ var_amount)\n                    /// @src 18:11214:11230  \"pool.totalStaked\"\n                    let _6 := add(_1, 4)\n                    /// @src 18:382:13213  \"contract YieldFarm is Ownable {...\"\n                    sstore(_6, /** @src 18:11214:11241  \"pool.totalStaked += _amount\" */ checked_add_uint256(/** @src 18:382:13213  \"contract YieldFarm is Ownable {...\" */ sload(/** @src 18:11214:11241  \"pool.totalStaked += _amount\" */ _6), var_amount))\n                    /// @src 18:382:13213  \"contract YieldFarm is Ownable {...\"\n                    sstore(_4, /** @src 14:2839:2844  \"a + b\" */ checked_add_uint256(/** @src 18:382:13213  \"contract YieldFarm is Ownable {...\" */ sload(/** @src 18:11269:11280  \"user.amount\" */ _4), /** @src 14:2839:2844  \"a + b\" */ var_amount))\n                }\n                /// @src 18:382:13213  \"contract YieldFarm is Ownable {...\"\n                let _7 := sload(/** @src 18:11331:11342  \"user.amount\" */ _4)\n                /// @src 18:382:13213  \"contract YieldFarm is Ownable {...\"\n                sstore(/** @src 18:11313:11328  \"user.rewardDebt\" */ add(_4, 1), /** @src 14:3934:3939  \"a / b\" */ checked_div_uint256_6962(/** @src 14:3549:3554  \"a * b\" */ checked_mul_uint256(_7, /** @src 18:382:13213  \"contract YieldFarm is Ownable {...\" */ sload(/** @src 18:11347:11367  \"pool.accSobaPerShare\" */ add(_1, 3)))))\n                /// @src 18:11393:11424  \"Deposit(msg.sender, 0, _amount)\"\n                log4(/** @src 18:382:13213  \"contract YieldFarm is Ownable {...\" */ mload(64), /** @src 18:10612:10613  \"0\" */ 0x00, /** @src 18:11393:11424  \"Deposit(msg.sender, 0, _amount)\" */ 0x90890809c654f11d6e72a28fa60149770a0d11ec6c92319d6ceb2bb0a4ea1a15, /** @src 18:10660:10670  \"msg.sender\" */ caller(), /** @src 18:10612:10613  \"0\" */ 0x00, /** @src 18:11393:11424  \"Deposit(msg.sender, 0, _amount)\" */ var_amount)\n            }\n            /// @ast-id 4715 @src 18:11464:12239  \"function leaveStaking(uint256 _amount) public {...\"\n            function fun_leaveStaking(var_amount)\n            {\n                /// @src 18:11544:11555  \"poolInfo[0]\"\n                let _1, _2 := storage_array_index_access_struct_PoolInfo_storage_dyn()\n                /// @src 18:11607:11618  \"userInfo[0]\"\n                let _3 := mapping_index_access_mapping_uint256_mapping_address_struct_UserInfo_storage_of_uint256()\n                /// @src 18:11607:11630  \"userInfo[0][msg.sender]\"\n                let _4 := mapping_index_access_mapping_address_struct_UserInfo_storage_of_address(_3, /** @src 18:11619:11629  \"msg.sender\" */ caller())\n                /// @src 18:11640:11681  \"require(user.amount >= _amount, \\\"Exceed\\\")\"\n                require_helper_stringliteral_320d(/** @src 18:11648:11670  \"user.amount >= _amount\" */ iszero(lt(/** @src 18:382:13213  \"contract YieldFarm is Ownable {...\" */ sload(/** @src 18:11648:11659  \"user.amount\" */ _4), /** @src 18:11648:11670  \"user.amount >= _amount\" */ var_amount)))\n                /// @src 18:11691:11704  \"updatePool(0)\"\n                fun_updatePool_6978()\n                /// @src 18:382:13213  \"contract YieldFarm is Ownable {...\"\n                let _5 := sload(/** @src 18:11732:11743  \"user.amount\" */ _4)\n                /// @src 18:11748:11768  \"pool.accSobaPerShare\"\n                let _6 := add(_1, 3)\n                /// @src 18:11732:11779  \"user.amount.mul(pool.accSobaPerShare).div(1e18)\"\n                let expr := /** @src 14:3934:3939  \"a / b\" */ checked_div_uint256_6962(/** @src 14:3549:3554  \"a * b\" */ checked_mul_uint256(_5, /** @src 18:382:13213  \"contract YieldFarm is Ownable {...\" */ sload(/** @src 18:11748:11768  \"pool.accSobaPerShare\" */ _6)))\n                /// @src 18:11797:11812  \"user.rewardDebt\"\n                let _7 := add(_4, 1)\n                /// @src 14:3199:3211  \"return a - b\"\n                let var := /** @src 14:3206:3211  \"a - b\" */ checked_sub_uint256(expr, /** @src 18:382:13213  \"contract YieldFarm is Ownable {...\" */ sload(/** @src 18:11797:11812  \"user.rewardDebt\" */ _7))\n                /// @src 18:11832:11911  \"if (pending > 0) {...\"\n                if /** @src 18:11836:11847  \"pending > 0\" */ iszero(iszero(var))\n                /// @src 18:11832:11911  \"if (pending > 0) {...\"\n                {\n                    /// @src 18:11892:11899  \"pending\"\n                    fun_safeSobaTransfer(/** @src 18:11619:11629  \"msg.sender\" */ caller(), /** @src 18:11892:11899  \"pending\" */ var)\n                }\n                /// @src 18:11921:12111  \"if (_amount > 0) {...\"\n                if /** @src 18:11925:11936  \"_amount > 0\" */ iszero(iszero(var_amount))\n                /// @src 18:11921:12111  \"if (_amount > 0) {...\"\n                {\n                    /// @src 18:11952:11968  \"pool.totalStaked\"\n                    let _8 := add(_1, 4)\n                    /// @src 18:382:13213  \"contract YieldFarm is Ownable {...\"\n                    sstore(_8, /** @src 18:11952:11979  \"pool.totalStaked -= _amount\" */ checked_sub_uint256(/** @src 18:382:13213  \"contract YieldFarm is Ownable {...\" */ sload(/** @src 18:11952:11979  \"pool.totalStaked -= _amount\" */ _8), var_amount))\n                    /// @src 18:382:13213  \"contract YieldFarm is Ownable {...\"\n                    sstore(_4, /** @src 14:3206:3211  \"a - b\" */ checked_sub_uint256(/** @src 18:382:13213  \"contract YieldFarm is Ownable {...\" */ sload(/** @src 18:12007:12018  \"user.amount\" */ _4), /** @src 14:3206:3211  \"a - b\" */ var_amount))\n                    /// @src 18:12092:12099  \"_amount\"\n                    fun_safeTransfer(/** @src 18:382:13213  \"contract YieldFarm is Ownable {...\" */ extract_from_storage_value_offsett_contract_IERC20(sload(/** @src 18:12045:12057  \"pool.lpToken\" */ _1)), /** @src 18:11619:11629  \"msg.sender\" */ caller(), /** @src 18:12092:12099  \"_amount\" */ var_amount)\n                }\n                /// @src 18:382:13213  \"contract YieldFarm is Ownable {...\"\n                let _9 := sload(/** @src 18:12138:12149  \"user.amount\" */ _4)\n                /// @src 18:382:13213  \"contract YieldFarm is Ownable {...\"\n                sstore(_7, /** @src 14:3934:3939  \"a / b\" */ checked_div_uint256_6962(/** @src 14:3549:3554  \"a * b\" */ checked_mul_uint256(_9, /** @src 18:382:13213  \"contract YieldFarm is Ownable {...\" */ sload(/** @src 18:12154:12174  \"pool.accSobaPerShare\" */ _6))))\n                /// @src 18:12200:12232  \"Withdraw(msg.sender, 0, _amount)\"\n                let _10 := /** @src 18:382:13213  \"contract YieldFarm is Ownable {...\" */ mload(64)\n                /// @src 18:12200:12232  \"Withdraw(msg.sender, 0, _amount)\"\n                log3(_10, sub(abi_encode_uint256(_10, var_amount), _10), 0xf279e6a1f5e320cca91135676d9cb6e44ca8a08c0b88342bcdb1144f6511b568, /** @src 18:11619:11629  \"msg.sender\" */ caller(), /** @src 18:11553:11554  \"0\" */ 0x00)\n            }\n            /// @ast-id 4779 @src 18:12305:12707  \"function emergencyWithdraw(uint256 _poolId) public {...\"\n            function fun_emergencyWithdraw(var__poolId)\n            {\n                /// @src 18:12390:12407  \"poolInfo[_poolId]\"\n                let _1, _2 := storage_array_index_access_struct_PoolInfo__dyn(var__poolId)\n                /// @src 18:382:13213  \"contract YieldFarm is Ownable {...\"\n                mstore(/** @src -1:-1:-1 */ 0, /** @src 18:382:13213  \"contract YieldFarm is Ownable {...\" */ var__poolId)\n                mstore(0x20, /** @src 18:12441:12449  \"userInfo\" */ 0x06)\n                /// @src 18:382:13213  \"contract YieldFarm is Ownable {...\"\n                let dataSlot := keccak256(/** @src -1:-1:-1 */ 0, /** @src 18:382:13213  \"contract YieldFarm is Ownable {...\" */ 0x40)\n                /// @src 18:12441:12470  \"userInfo[_poolId][msg.sender]\"\n                let _3 := mapping_index_access_mapping_address_struct_UserInfo_storage_of_address(dataSlot, /** @src 18:12459:12469  \"msg.sender\" */ caller())\n                /// @src 18:382:13213  \"contract YieldFarm is Ownable {...\"\n                let value := and(sload(/** @src 18:12480:12492  \"pool.lpToken\" */ _1), /** @src 18:382:13213  \"contract YieldFarm is Ownable {...\" */ sub(shl(160, 1), 1))\n                /// @src 18:12527:12538  \"user.amount\"\n                fun_safeTransfer(value, /** @src 18:12459:12469  \"msg.sender\" */ caller(), /** @src 18:382:13213  \"contract YieldFarm is Ownable {...\" */ sload(/** @src 18:12527:12538  \"user.amount\" */ _3))\n                /// @src 18:382:13213  \"contract YieldFarm is Ownable {...\"\n                let _4 := sload(/** @src 18:12569:12580  \"user.amount\" */ _3)\n                /// @src 18:12549:12565  \"pool.totalStaked\"\n                let _5 := add(_1, 4)\n                /// @src 18:382:13213  \"contract YieldFarm is Ownable {...\"\n                let _6 := sload(/** @src 18:12549:12580  \"pool.totalStaked -= user.amount\" */ _5)\n                /// @src 18:382:13213  \"contract YieldFarm is Ownable {...\"\n                if lt(_6, _4) { panic_error_0x11() }\n                sstore(_5, sub(_6, _4))\n                let _7 := sload(/** @src 18:12634:12645  \"user.amount\" */ _3)\n                /// @src 18:12595:12646  \"EmergencyWithdraw(msg.sender, _poolId, user.amount)\"\n                let _8 := /** @src 18:382:13213  \"contract YieldFarm is Ownable {...\" */ mload(0x40)\n                mstore(_8, _7)\n                /// @src 18:12595:12646  \"EmergencyWithdraw(msg.sender, _poolId, user.amount)\"\n                log3(_8, /** @src 18:382:13213  \"contract YieldFarm is Ownable {...\" */ 0x20, /** @src 18:12595:12646  \"EmergencyWithdraw(msg.sender, _poolId, user.amount)\" */ 0xbb757047c2b5f3974fe26b7c10f732e7bce710b0952a71082702781e62ae0595, /** @src 18:12459:12469  \"msg.sender\" */ caller(), /** @src 18:12595:12646  \"EmergencyWithdraw(msg.sender, _poolId, user.amount)\" */ var__poolId)\n                /// @src 18:382:13213  \"contract YieldFarm is Ownable {...\"\n                sstore(_3, /** @src -1:-1:-1 */ 0)\n                /// @src 18:382:13213  \"contract YieldFarm is Ownable {...\"\n                sstore(/** @src 18:12681:12696  \"user.rewardDebt\" */ add(_3, 1), /** @src -1:-1:-1 */ 0)\n            }\n            /// @ast-id 4817 @src 18:12748:13037  \"function safeSobaTransfer(address _to, uint256 _amount) internal {...\"\n            function fun_safeSobaTransfer(var__to, var__amount)\n            {\n                /// @src 18:12845:12861  \"sobaja.balanceOf\"\n                let expr_4789_address := extract_from_storage_value_offsett_contract_IERC20(/** @src 18:382:13213  \"contract YieldFarm is Ownable {...\" */ extract_from_storage_value_offsett_contract_IERC20(sload(/** @src 18:12845:12851  \"sobaja\" */ 0x01)))\n                /// @src 18:12845:12876  \"sobaja.balanceOf(address(this))\"\n                if iszero(extcodesize(expr_4789_address))\n                {\n                    /// @src 18:382:13213  \"contract YieldFarm is Ownable {...\"\n                    revert(0, 0)\n                }\n                /// @src 18:12845:12876  \"sobaja.balanceOf(address(this))\"\n                let _1 := /** @src 18:382:13213  \"contract YieldFarm is Ownable {...\" */ mload(64)\n                /// @src 18:12845:12876  \"sobaja.balanceOf(address(this))\"\n                mstore(_1, /** @src 18:382:13213  \"contract YieldFarm is Ownable {...\" */ shl(224, 0x70a08231))\n                /// @src 18:12845:12876  \"sobaja.balanceOf(address(this))\"\n                let _2 := staticcall(gas(), expr_4789_address, _1, sub(abi_encode_address(add(_1, 4), /** @src 18:12870:12874  \"this\" */ address()), /** @src 18:12845:12876  \"sobaja.balanceOf(address(this))\" */ _1), _1, 32)\n                if iszero(_2) { revert_forward() }\n                let expr := /** @src -1:-1:-1 */ 0\n                /// @src 18:12845:12876  \"sobaja.balanceOf(address(this))\"\n                if _2\n                {\n                    finalize_allocation(_1, returndatasize())\n                    expr := abi_decode_uint256_fromMemory(_1, add(_1, returndatasize()))\n                }\n                /// @src 18:12886:13031  \"if (_amount > sobaBalance) {...\"\n                switch /** @src 18:12890:12911  \"_amount > sobaBalance\" */ gt(var__amount, expr)\n                case /** @src 18:12886:13031  \"if (_amount > sobaBalance) {...\" */ 0 {\n                    /// @src 18:12991:13020  \"sobaja.transfer(_to, _amount)\"\n                    if iszero(extcodesize(expr_4789_address))\n                    {\n                        /// @src 18:382:13213  \"contract YieldFarm is Ownable {...\"\n                        revert(/** @src -1:-1:-1 */ 0, 0)\n                    }\n                    /// @src 18:12991:13020  \"sobaja.transfer(_to, _amount)\"\n                    let _3 := /** @src 18:382:13213  \"contract YieldFarm is Ownable {...\" */ mload(64)\n                    /// @src 18:12991:13020  \"sobaja.transfer(_to, _amount)\"\n                    mstore(_3, /** @src 18:382:13213  \"contract YieldFarm is Ownable {...\" */ shl(224, 0xa9059cbb))\n                    /// @src 18:12991:13020  \"sobaja.transfer(_to, _amount)\"\n                    let _4 := call(gas(), expr_4789_address, /** @src -1:-1:-1 */ 0, /** @src 18:12991:13020  \"sobaja.transfer(_to, _amount)\" */ _3, sub(abi_encode_address_uint256(add(_3, /** @src 18:12845:12876  \"sobaja.balanceOf(address(this))\" */ 4), /** @src 18:12991:13020  \"sobaja.transfer(_to, _amount)\" */ var__to, var__amount), _3), _3, /** @src 18:12845:12876  \"sobaja.balanceOf(address(this))\" */ 32)\n                    /// @src 18:12991:13020  \"sobaja.transfer(_to, _amount)\"\n                    if iszero(_4) { revert_forward() }\n                    if _4\n                    {\n                        finalize_allocation(_3, returndatasize())\n                        pop(abi_decode_bool_fromMemory(_3, add(_3, returndatasize())))\n                    }\n                }\n                default /// @src 18:12886:13031  \"if (_amount > sobaBalance) {...\"\n                {\n                    /// @src 18:12927:12942  \"sobaja.transfer\"\n                    let expr_4801_address := extract_from_storage_value_offsett_contract_IERC20(/** @src 18:382:13213  \"contract YieldFarm is Ownable {...\" */ extract_from_storage_value_offsett_contract_IERC20(sload(/** @src 18:12845:12851  \"sobaja\" */ 0x01)))\n                    /// @src 18:12927:12960  \"sobaja.transfer(_to, sobaBalance)\"\n                    if iszero(extcodesize(expr_4801_address))\n                    {\n                        /// @src 18:382:13213  \"contract YieldFarm is Ownable {...\"\n                        revert(/** @src -1:-1:-1 */ 0, 0)\n                    }\n                    /// @src 18:12927:12960  \"sobaja.transfer(_to, sobaBalance)\"\n                    let _5 := /** @src 18:382:13213  \"contract YieldFarm is Ownable {...\" */ mload(64)\n                    /// @src 18:12927:12960  \"sobaja.transfer(_to, sobaBalance)\"\n                    mstore(_5, /** @src 18:382:13213  \"contract YieldFarm is Ownable {...\" */ shl(224, 0xa9059cbb))\n                    /// @src 18:12927:12960  \"sobaja.transfer(_to, sobaBalance)\"\n                    let _6 := call(gas(), expr_4801_address, /** @src -1:-1:-1 */ 0, /** @src 18:12927:12960  \"sobaja.transfer(_to, sobaBalance)\" */ _5, sub(abi_encode_address_uint256(add(_5, /** @src 18:12845:12876  \"sobaja.balanceOf(address(this))\" */ 4), /** @src 18:12927:12960  \"sobaja.transfer(_to, sobaBalance)\" */ var__to, expr), _5), _5, /** @src 18:12845:12876  \"sobaja.balanceOf(address(this))\" */ 32)\n                    /// @src 18:12927:12960  \"sobaja.transfer(_to, sobaBalance)\"\n                    if iszero(_6) { revert_forward() }\n                    if _6\n                    {\n                        finalize_allocation(_5, returndatasize())\n                        pop(abi_decode_bool_fromMemory(_5, add(_5, returndatasize())))\n                    }\n                }\n            }\n            /// @ast-id 4835 @src 18:13069:13211  \"function dev(address _devaddr) public {...\"\n            function fun_dev(var_devaddr)\n            {\n                /// @src 18:382:13213  \"contract YieldFarm is Ownable {...\"\n                let _1 := sload(/** @src 18:13139:13149  \"devAddress\" */ 0x02)\n                /// @src 18:382:13213  \"contract YieldFarm is Ownable {...\"\n                let _2 := sub(shl(160, 1), 1)\n                if iszero(/** @src 18:13125:13149  \"msg.sender == devAddress\" */ eq(/** @src 18:13125:13135  \"msg.sender\" */ caller(), /** @src 18:382:13213  \"contract YieldFarm is Ownable {...\" */ and(_1, _2)))\n                {\n                    let memPtr := mload(64)\n                    mstore(memPtr, shl(229, 4594637))\n                    mstore(add(memPtr, 4), 32)\n                    mstore(add(memPtr, 36), 19)\n                    mstore(add(memPtr, 68), \"Address not satisfy\")\n                    revert(memPtr, 100)\n                }\n                sstore(/** @src 18:13139:13149  \"devAddress\" */ 0x02, /** @src 18:382:13213  \"contract YieldFarm is Ownable {...\" */ or(and(_1, shl(160, 0xffffffffffffffffffffffff)), and(var_devaddr, _2)))\n            }\n        }\n        data \".metadata\" hex\"a36469706673582212204384776f08554f2c5c258432498271a1a3304aaee0838c87ac7e3dba22143d7b6c6578706572696d656e74616cf564736f6c63430008090041\"\n    }\n}\n","hash":"01000a0de524615c6db9201bfea4e118bc24e8c6e41b7325bb80ccc0772b22da","factoryDependencies":{}}}}}}